public class thredds.catalog.InvDatasetFmrc extends thredds.catalog.InvCatalogRef
{
    private static org.slf4j.Logger logger;
    private static final java.lang.String FMRC;
    private static final java.lang.String BEST;
    private static final java.lang.String RUNS;
    private static final java.lang.String RUN_NAME;
    private static final java.lang.String FORECAST;
    private static final java.lang.String FORECAST_NAME;
    private static final java.lang.String OFFSET;
    private static final java.lang.String OFFSET_NAME;
    private static final java.lang.String TITLE_RUNS;
    private static final java.lang.String TITLE_OFFSET;
    private static final java.lang.String TITLE_FORECAST;
    private static final java.lang.String SCAN;
    private static ucar.nc2.util.cache.FileCache fileCache;
    private volatile boolean madeDatasets;
    private volatile boolean madeFmrc;
    private final java.lang.String path;
    private final boolean runsOnly;
    private thredds.catalog.InvDatasetFmrc$InventoryParams params;
    private java.lang.String dodsService;
    private ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc;
    private thredds.catalog.InvCatalogImpl catalog;
    private thredds.catalog.InvCatalogImpl catalogRuns;
    private thredds.catalog.InvCatalogImpl catalogOffsets;
    private thredds.catalog.InvCatalogImpl catalogForecasts;
    private thredds.catalog.InvDatasetScan scan;

    public void <init>(thredds.catalog.InvDatasetImpl, java.lang.String, java.lang.String, boolean)
    {
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String r2, r5, $r8;
        thredds.catalog.InvDatasetImpl r1;
        boolean z0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r1 := @parameter0: thredds.catalog.InvDatasetImpl;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/thredds/catalog/");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/catalog.xml");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r1, r2, $r8);

        r0.<thredds.catalog.InvDatasetFmrc: boolean madeDatasets> = 0;

        r0.<thredds.catalog.InvDatasetFmrc: boolean madeFmrc> = 0;

        r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path> = r5;

        r0.<thredds.catalog.InvDatasetFmrc: boolean runsOnly> = z0;

        return;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        thredds.catalog.InvDatasetFmrc r0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        return $r1;
    }

    public boolean isRunsOnly()
    {
        thredds.catalog.InvDatasetFmrc r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean runsOnly>;

        return $z0;
    }

    public thredds.catalog.InvDatasetScan getRawFileScan()
    {
        thredds.catalog.InvDatasetScan $r1;
        thredds.catalog.InvDatasetFmrc r0;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean madeDatasets>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getDatasets()>();

     label1:
        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan>;

        return $r1;
    }

    public thredds.catalog.InvDatasetFmrc$InventoryParams getFmrcInventoryParams()
    {
        thredds.catalog.InvDatasetFmrc r0;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r1;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        return $r1;
    }

    public java.io.File getFile(java.lang.String)
    {
        thredds.catalog.InvDatasetFmrc r0;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r2, $r5, $r7, $r9, $r10, $r11;
        boolean $z0;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r1, $r4, $r6;
        java.io.File $r13;
        java.lang.StringBuilder $r12;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        if null != $r1 goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("files");

        $r12 = new java.lang.StringBuilder;

        $r4 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r5 = $r4.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location>;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r7 = $r6.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label2:
        $i5 = (int) -1;

        if $i0 <= $i5 goto label3;

        $r10 = "files";

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 + 1;

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label4;

     label3:
        $r11 = r2;

     label4:
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = new java.io.File;

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r9);

        return $r13;
    }

    public void setFmrcInventoryParams(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        long $l0;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String r2, r4, r6, r8, r9, $r17, $r22;
        double $d0, $d1;
        boolean $z0, $z1;
        org.slf4j.Logger $r14;
        java.lang.IllegalArgumentException $r18;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r1, $r3, $r5, $r7, $r11, $r23;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r19, $r20, $r21;
        ucar.nc2.units.TimeUnit $r10;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String;

        $r1 = new thredds.catalog.InvDatasetFmrc$InventoryParams;

        specialinvoke $r1.<thredds.catalog.InvDatasetFmrc$InventoryParams: void <init>(thredds.catalog.InvDatasetFmrc)>(r0);

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params> = $r1;

        $r3 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r3.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location> = r2;

        $r5 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r5.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String def> = r4;

        $r7 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r7.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String suffix> = r6;

        $r23 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        if r8 == null goto label1;

        $z0 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r23.<thredds.catalog.InvDatasetFmrc$InventoryParams: boolean subdirs> = $z1;

        if r9 == null goto label6;

     label3:
        $r10 = new ucar.nc2.units.TimeUnit;

        specialinvoke $r10.<ucar.nc2.units.TimeUnit: void <init>(java.lang.String)>(r9);

        $r11 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $d0 = virtualinvoke $r10.<ucar.nc2.units.TimeUnit: double getValueInSeconds()>();

        $d1 = 1000.0 * $d0;

        $l0 = (long) $d1;

        $r11.<thredds.catalog.InvDatasetFmrc$InventoryParams: long lastModifiedLimit> = $l0;

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r14 = <thredds.catalog.InvDatasetFmrc: org.slf4j.Logger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid TimeUnit = ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid TimeUnit = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public boolean hasAccess()
    {
        thredds.catalog.InvDatasetFmrc r0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        return 0;
    }

    public boolean hasNestedDatasets()
    {
        thredds.catalog.InvDatasetFmrc r0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        return 1;
    }

    public thredds.catalog.InvCatalogImpl makeCatalog(java.lang.String, java.lang.String, java.net.URI)
    {
        thredds.catalog.InvDatasetFmrc r9;
        int $i0;
        java.lang.String r3, $r8, r11, $r20, $r22;
        java.net.URI r6;
        boolean $z0, $z1, $z2, $z3;
        org.slf4j.Logger $r1, $r18;
        java.lang.Exception $r16;
        thredds.catalog.InvCatalogImpl $r10, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r7, $r17, $r19, $r21;

        r9 := @this: thredds.catalog.InvDatasetFmrc;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r6 := @parameter2: java.net.URI;

        $r1 = <thredds.catalog.InvDatasetFmrc: org.slf4j.Logger logger>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FMRC make catalog for ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label01:
        if r3 == null goto label02;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label02:
        $r10 = specialinvoke r9.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl makeCatalog(java.net.URI)>(r6);

     label03:
        return $r10;

     label04:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("runs");

        if $z0 == 0 goto label06;

        $r15 = specialinvoke r9.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl makeCatalogRuns(java.net.URI)>(r6);

     label05:
        return $r15;

     label06:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z1 == 0 goto label08;

        $r14 = specialinvoke r9.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl makeCatalogOffsets(java.net.URI)>(r6);

     label07:
        return $r14;

     label08:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("forecast");

        if $z2 == 0 goto label10;

        $r13 = specialinvoke r9.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl makeCatalogForecasts(java.net.URI)>(r6);

     label09:
        return $r13;

     label10:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("files");

        if $z3 == 0 goto label12;

        $r12 = specialinvoke r9.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl makeCatalogScan(java.lang.String,java.net.URI)>(r11, r6);

     label11:
        return $r12;

     label12:
        return null;

     label13:
        $r16 := @caughtexception;

        $r18 = <thredds.catalog.InvDatasetFmrc: org.slf4j.Logger logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error making catalog for ");

        $r20 = r9.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r22, $r16);

        return null;

        catch java.lang.Exception from label01 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
    }

    public java.util.List getDatasets()
    {
        thredds.catalog.InvCatalogRef $r45, $r47, $r49, $r76;
        thredds.catalog.InvCatalog $r62;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r51, $r55, $r60, $r70;
        thredds.catalog.InvCatalogImpl $r64;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r26, $r28, $r29, $r30, $r33, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r53, $r54, $r57, $r63, $r66, $r67, $r68;
        long $l0;
        java.util.ArrayList $r1;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String $r2, $r5, $r9, $r10, $r12, $r16, $r21, $r24, $r27, $r31, $r32, $r34, $r38, $r43, $r46, $r48, $r50, $r56, $r58, $r65, $r69, $r71, $r77, r78;
        thredds.catalog.InvDatasetImpl $r3, $r25;
        thredds.catalog.InvDatasetScan $r61, $r72, $r74, $r75;
        boolean $z0, $z1;
        thredds.catalog.InvDatasetFeatureCollection$ScanFilter $r52;
        java.util.List $r79;
        java.util.regex.Pattern $r59;
        thredds.catalog.ThreddsMetadata $r22, $r23, $r44, $r73;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean madeDatasets>;

        if $z0 != 0 goto label4;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $z1 = r0.<thredds.catalog.InvDatasetFmrc: boolean runsOnly>;

        if $z1 == 0 goto label1;

        $r76 = new thredds.catalog.InvCatalogRef;

        $r77 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("runs");

        specialinvoke $r76.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r0, "Forecast Model Run", $r77);

        virtualinvoke $r76.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r76);

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getID()>();

        r78 = $r2;

        if $r2 != null goto label2;

        r78 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

     label2:
        $r3 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r3.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r0, "Forecast Model Run Collection (2D time coordinates)");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fmrc.ncd");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r9, 32, "_");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r21);

        $r22 = virtualinvoke $r3.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        virtualinvoke $r22.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Forecast Model Run Collection (2D time coordinates).");

        $r23 = virtualinvoke $r3.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r24 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String dodsService>;

        virtualinvoke $r23.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r24);

        virtualinvoke $r3.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r25 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r25.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r0, "Best Time Series");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getName()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("best.ncd");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r31, 32, "_");

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r78);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r43);

        $r44 = virtualinvoke $r25.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        virtualinvoke $r44.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Best time series, taking the data from the most recent run available.");

        virtualinvoke $r25.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r45 = new thredds.catalog.InvCatalogRef;

        $r46 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("runs");

        specialinvoke $r45.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r0, "Forecast Model Run", $r46);

        virtualinvoke $r45.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r47 = new thredds.catalog.InvCatalogRef;

        $r48 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("offset");

        specialinvoke $r47.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r0, "Constant Forecast Offset", $r48);

        virtualinvoke $r47.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r47);

        $r49 = new thredds.catalog.InvCatalogRef;

        $r50 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("forecast");

        specialinvoke $r49.<thredds.catalog.InvCatalogRef: void <init>(thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String)>(r0, "Constant Forecast Date", $r50);

        virtualinvoke $r49.<thredds.catalog.InvDatasetImpl: boolean finish()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r51 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        if $r51 == null goto label3;

        $r52 = new thredds.catalog.InvDatasetFeatureCollection$ScanFilter;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");

        $r55 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r56 = $r55.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String suffix>;

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r58);

        $r60 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $l0 = $r60.<thredds.catalog.InvDatasetFmrc$InventoryParams: long lastModifiedLimit>;

        specialinvoke $r52.<thredds.catalog.InvDatasetFeatureCollection$ScanFilter: void <init>(java.util.regex.Pattern,long)>($r59, $l0);

        $r61 = new thredds.catalog.InvDatasetScan;

        $r62 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r64 = (thredds.catalog.InvCatalogImpl) $r62;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r65 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("files");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        $r70 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r71 = $r70.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location>;

        specialinvoke $r61.<thredds.catalog.InvDatasetScan: void <init>(thredds.catalog.InvCatalogImpl,thredds.catalog.InvDatasetImpl,java.lang.String,java.lang.String,java.lang.String,thredds.crawlabledataset.CrawlableDatasetFilter,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>($r64, r0, "File_Access", $r69, $r71, $r52, 1, "true", 0, null, null, null);

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan> = $r61;

        $r72 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan>;

        $r73 = virtualinvoke $r72.<thredds.catalog.InvDatasetScan: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        virtualinvoke $r73.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>("fileServices");

        virtualinvoke $r73.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", "Individual data file, which comprise the Forecast Model Run Collection.");

        $r74 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan>;

        virtualinvoke $r74.<thredds.catalog.InvDatasetScan: boolean finish()>();

        $r75 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r75);

     label3:
        r0.<thredds.catalog.InvDatasetFmrc: java.util.List datasets> = $r1;

        r0.<thredds.catalog.InvDatasetFmrc: boolean madeDatasets> = 1;

     label4:
        virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean finish()>();

        $r79 = r0.<thredds.catalog.InvDatasetFmrc: java.util.List datasets>;

        return $r79;
    }

    private java.lang.String getCatalogHref(java.lang.String)
    {
        thredds.catalog.InvDatasetFmrc r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, r6, $r9;

        r2 := @this: thredds.catalog.InvDatasetFmrc;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/thredds/catalog/");

        $r3 = r2.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/catalog.xml");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private synchronized boolean checkIfChanged() throws java.io.IOException
    {
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r1;
        thredds.catalog.InvDatasetFmrc r0;
        boolean $z0, z1, $z2, $z4, $z5;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean madeFmrc>;

        if $z0 == 0 goto label1;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $z2 = interfaceinvoke $r1.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: boolean sync()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        $z4 = 1;

        goto label2;

     label1:
        $z5 = 0;

        $z4 = 0;

     label2:
        z1 = $z4;

        if $z5 == 0 goto label3;

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalog> = null;

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogRuns> = null;

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogOffsets> = null;

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogForecasts> = null;

     label3:
        return z1;
    }

    private thredds.catalog.InvCatalogImpl makeCatalog(java.net.URI) throws java.io.IOException, java.net.URISyntaxException
    {
        thredds.catalog.ThreddsMetadata$Variables $r39;
        java.net.URI r3, $r5;
        thredds.catalog.InvDataset $r10, r51;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r31, $r34, $r37;
        thredds.catalog.InvCatalog $r2;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r45;
        java.util.List $r13, $r14, $r15, $r47, $r48;
        ucar.nc2.units.DateRange $r33, $r44;
        thredds.catalog.InvCatalogImpl $r1, $r6, $r17, $r40;
        java.lang.StringBuilder $r24, $r25, $r26, $r28, $r29, $r30;
        thredds.catalog.InvDocumentation $r22;
        thredds.catalog.InvDatasetFmrc r0;
        int $i0;
        java.lang.String $r4, $r7, $r8, $r11, $r23, $r27, r42, r46;
        java.util.Iterator $r16, $r49;
        thredds.catalog.InvService r50;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r36, $r43;
        thredds.catalog.ThreddsMetadata $r12, $r21;
        ucar.nc2.dt.GridDataset $r32, $r35, $r38;
        java.lang.Object $r18, $r20;
        thredds.catalog.InvDatasetImpl $r9, $r19, $r41;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r3 := @parameter0: java.net.URI;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalog>;

        if $r1 == null goto label01;

        $z3 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean checkIfChanged()>();

        if $z3 == 0 goto label14;

     label01:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r40 = (thredds.catalog.InvCatalogImpl) $r2;

        $r4 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getXlinkHref()>();

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDataset getParent()>();

        $r41 = (thredds.catalog.InvDatasetImpl) $r10;

        if $r41 == null goto label02;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r41, 1);

     label02:
        $r11 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getID()>();

        r42 = $r11;

        if $r11 != null goto label03;

        r42 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

     label03:
        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>(r42);

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: void makeFmrc()>();

        $r12 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadataInheritable()>();

        $r13 = virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: java.util.List getVariables()>();

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i0 != 0 goto label04;

        $r37 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r38 = interfaceinvoke $r37.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dt.GridDataset getGridDataset()>();

        $r39 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$Variables extractVariables(thredds.catalog.InvDatasetImpl,ucar.nc2.dt.GridDataset)>(r0, $r38);

        if $r39 == null goto label04;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void addVariables(thredds.catalog.ThreddsMetadata$Variables)>($r39);

     label04:
        $r43 = virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: thredds.catalog.ThreddsMetadata$GeospatialCoverage getGeospatialCoverage()>();

        if $r43 != null goto label05;

        $r34 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r35 = interfaceinvoke $r34.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dt.GridDataset getGridDataset()>();

        $r36 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: thredds.catalog.ThreddsMetadata$GeospatialCoverage extractGeospatial(ucar.nc2.dt.GridDataset)>($r35);

        if $r36 == null goto label05;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r36);

     label05:
        $r44 = virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: ucar.nc2.units.DateRange getTimeCoverage()>();

        if $r44 != null goto label06;

        $r31 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r32 = interfaceinvoke $r31.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dt.GridDataset getGridDataset()>();

        $r33 = staticinvoke <ucar.nc2.thredds.MetadataExtractor: ucar.nc2.units.DateRange extractDateRange(ucar.nc2.dt.GridDataset)>($r32);

        if $r33 == null goto label06;

        virtualinvoke $r12.<thredds.catalog.ThreddsMetadata: void setTimeCoverage(ucar.nc2.units.DateRange)>($r33);

     label06:
        $r45 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        if null == $r45 goto label08;

        $r21 = virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r22 = new thredds.catalog.InvDocumentation;

        specialinvoke $r22.<thredds.catalog.InvDocumentation: void <init>()>();

        $r23 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

        r46 = $r23;

        $z2 = virtualinvoke $r23.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 != 0 goto label07;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r46 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/thredds/modelInventory/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<thredds.catalog.InvDocumentation: void setXlinkHref(java.lang.String)>($r27);

        virtualinvoke $r22.<thredds.catalog.InvDocumentation: void setXlinkTitle(java.lang.String)>("Available Inventory");

        virtualinvoke $r21.<thredds.catalog.ThreddsMetadata: void addDocumentation(thredds.catalog.InvDocumentation)>($r22);

     label08:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r47 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getServicesLocal()>();

        $r48 = virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: java.util.List getServices()>();

        $r49 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r20 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (thredds.catalog.InvService) $r20;

        $z1 = interfaceinvoke $r47.<java.util.List: boolean contains(java.lang.Object)>(r50);

        if $z1 != 0 goto label10;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>(r50);

     label10:
        goto label09;

     label11:
        $r14 = virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: java.util.List getServices()>();

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: void findDODSService(java.util.List)>($r14);

        $r15 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getDatasets()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r18 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r51 = (thredds.catalog.InvDataset) $r18;

        $r19 = (thredds.catalog.InvDatasetImpl) r51;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r19);

        goto label12;

     label13:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalog> = $r6;

     label14:
        $r17 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalog>;

        return $r17;
    }

    private void findDODSService(java.util.List)
    {
        java.util.Iterator $r1;
        thredds.catalog.InvService r3;
        java.util.List r0, $r8;
        thredds.catalog.InvDatasetFmrc r4;
        thredds.catalog.ServiceType $r6, $r7, $r9, $r10;
        java.lang.Object $r2;
        java.lang.String $r5, $r11;
        boolean $z0;

        r4 := @this: thredds.catalog.InvDatasetFmrc;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (thredds.catalog.InvService) $r2;

        $r5 = r4.<thredds.catalog.InvDatasetFmrc: java.lang.String dodsService>;

        if $r5 != null goto label2;

        $r9 = virtualinvoke r3.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r10 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType OPENDAP>;

        if $r9 != $r10 goto label2;

        $r11 = virtualinvoke r3.<thredds.catalog.InvService: java.lang.String getName()>();

        r4.<thredds.catalog.InvDatasetFmrc: java.lang.String dodsService> = $r11;

        return;

     label2:
        $r6 = virtualinvoke r3.<thredds.catalog.InvService: thredds.catalog.ServiceType getServiceType()>();

        $r7 = <thredds.catalog.ServiceType: thredds.catalog.ServiceType COMPOUND>;

        if $r6 != $r7 goto label3;

        $r8 = virtualinvoke r3.<thredds.catalog.InvService: java.util.List getServices()>();

        specialinvoke r4.<thredds.catalog.InvDatasetFmrc: void findDODSService(java.util.List)>($r8);

     label3:
        goto label1;

     label4:
        return;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogRuns(java.net.URI) throws java.io.IOException
    {
        java.util.ArrayList $r12;
        thredds.catalog.InvDatasetFmrc r0;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8;
        thredds.catalog.InvDataset $r10;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvCatalog $r2;
        thredds.catalog.InvService $r14;
        java.util.Iterator $r20;
        java.util.List $r13, $r19;
        thredds.catalog.InvCatalogImpl $r1, $r6, $r15, $r18;
        java.lang.Object $r16;
        thredds.catalog.InvDatasetImpl $r9, $r11, r17;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r3 := @parameter0: java.net.URI;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogRuns>;

        if $r1 == null goto label1;

        $z1 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean checkIfChanged()>();

        if $z1 == 0 goto label5;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r18 = (thredds.catalog.InvCatalogImpl) $r2;

        $r4 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("runs");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke $r18.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Forecast Model Run");

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r12 = new java.util.ArrayList;

        $r13 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getServicesLocal()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        $r14 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvService getServiceDefault()>();

        if $r14 == null goto label2;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r14);

        if $z0 != 0 goto label2;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r14);

     label2:
        $r19 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List makeRunDatasets()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r16 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r17 = (thredds.catalog.InvDatasetImpl) $r16;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r17);

        goto label3;

     label4:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogRuns> = $r6;

     label5:
        $r15 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogRuns>;

        return $r15;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogOffsets(java.net.URI) throws java.io.IOException
    {
        thredds.catalog.InvDatasetFmrc r0;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8;
        thredds.catalog.InvDataset $r10;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvCatalog $r2;
        thredds.catalog.InvService $r13;
        java.util.Iterator $r19;
        java.util.List $r12, $r18;
        thredds.catalog.InvCatalogImpl $r1, $r6, $r14, $r17;
        java.lang.Object $r15;
        thredds.catalog.InvDatasetImpl $r9, $r11, r16;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r3 := @parameter0: java.net.URI;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogOffsets>;

        if $r1 == null goto label1;

        $z1 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean checkIfChanged()>();

        if $z1 == 0 goto label5;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r17 = (thredds.catalog.InvCatalogImpl) $r2;

        $r4 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("offset");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke $r17.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Constant Forecast Offset");

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r12 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getServicesLocal()>();

        $r13 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvService getServiceDefault()>();

        if $r13 == null goto label2;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r13);

        if $z0 != 0 goto label2;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r13);

     label2:
        $r18 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List makeOffsetDatasets()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r15 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r16 = (thredds.catalog.InvDatasetImpl) $r15;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r16);

        goto label3;

     label4:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogOffsets> = $r6;

     label5:
        $r14 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogOffsets>;

        return $r14;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogForecasts(java.net.URI) throws java.io.IOException
    {
        thredds.catalog.InvDatasetFmrc r0;
        java.net.URI r3, $r5;
        java.lang.String $r4, $r7, $r8;
        thredds.catalog.InvDataset $r10;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvCatalog $r2;
        thredds.catalog.InvService $r13;
        java.util.Iterator $r19;
        java.util.List $r12, $r18;
        thredds.catalog.InvCatalogImpl $r1, $r6, $r14, $r17;
        java.lang.Object $r15;
        thredds.catalog.InvDatasetImpl $r9, $r11, r16;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r3 := @parameter0: java.net.URI;

        $r1 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogForecasts>;

        if $r1 == null goto label1;

        $z1 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean checkIfChanged()>();

        if $z1 == 0 goto label5;

     label1:
        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalog getParentCatalog()>();

        $r17 = (thredds.catalog.InvCatalogImpl) $r2;

        $r4 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getCatalogHref(java.lang.String)>("forecast");

        $r5 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r4);

        $r6 = new thredds.catalog.InvCatalogImpl;

        $r7 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getFullName()>();

        $r8 = virtualinvoke $r17.<thredds.catalog.InvCatalogImpl: java.lang.String getVersion()>();

        specialinvoke $r6.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r7, $r8, $r5);

        $r9 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r9.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDatasetImpl)>(r0);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setParent(thredds.catalog.InvDatasetImpl)>(null);

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDataset getParent()>();

        $r11 = (thredds.catalog.InvDatasetImpl) $r10;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void transferMetadata(thredds.catalog.InvDatasetImpl,boolean)>($r11, 1);

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>("Constant Forecast Date");

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r9);

        $r12 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getServicesLocal()>();

        $r13 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvService getServiceDefault()>();

        if $r13 == null goto label2;

        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>($r13);

        if $z0 != 0 goto label2;

        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r13);

     label2:
        $r18 = specialinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List makeForecastDatasets()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r15 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r16 = (thredds.catalog.InvDatasetImpl) $r15;

        virtualinvoke $r9.<thredds.catalog.InvDatasetImpl: void addDataset(thredds.catalog.InvDatasetImpl)>(r16);

        goto label3;

     label4:
        virtualinvoke $r6.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogForecasts> = $r6;

     label5:
        $r14 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvCatalogImpl catalogForecasts>;

        return $r14;
    }

    private thredds.catalog.InvCatalogImpl makeCatalogScan(java.lang.String, java.net.URI)
    {
        thredds.catalog.InvDatasetScan $r3;
        thredds.catalog.InvCatalogImpl $r4;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String r1;
        java.net.URI r2;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.URI;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean madeDatasets>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.util.List getDatasets()>();

     label1:
        $r3 = r0.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetScan scan>;

        $r4 = virtualinvoke $r3.<thredds.catalog.InvDatasetScan: thredds.catalog.InvCatalogImpl makeCatalogForDirectory(java.lang.String,java.net.URI)>(r1, r2);

        return $r4;
    }

    private synchronized void makeFmrc() throws java.io.IOException
    {
        thredds.catalog.InvDatasetFmrc r0;
        ucar.nc2.util.cache.FileCache $r4;
        java.lang.String $r2;
        org.jdom.Element $r1;
        ucar.nc2.dataset.NetcdfDataset $r3;
        ucar.nc2.dt.fmrc.FmrcImpl $r5;
        boolean $z0;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        $z0 = r0.<thredds.catalog.InvDatasetFmrc: boolean madeFmrc>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: boolean checkIfChanged()>();

        return;

     label1:
        $r1 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: org.jdom.Element getNcmlElement()>();

        $r2 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r3 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>($r2, $r1, null);

        $r4 = <thredds.catalog.InvDatasetFmrc: ucar.nc2.util.cache.FileCache fileCache>;

        virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: void setFileCache(ucar.nc2.util.cache.FileCache)>($r4);

        $r5 = new ucar.nc2.dt.fmrc.FmrcImpl;

        specialinvoke $r5.<ucar.nc2.dt.fmrc.FmrcImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r3);

        r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc> = $r5;

        r0.<thredds.catalog.InvDatasetFmrc: boolean madeFmrc> = 1;

        return;
    }

    private java.util.List makeRunDatasets() throws java.io.IOException
    {
        java.util.Date r8;
        boolean $z0;
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r4;
        java.util.List $r5;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37;
        ucar.nc2.units.DateFormatter $r2;
        java.util.ArrayList $r1;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String $r3, $r10, $r14, $r16, $r17, $r20, $r26, $r33, $r38, r39;
        java.util.Iterator $r6;
        thredds.catalog.ThreddsMetadata $r34;
        java.lang.Object $r7;
        thredds.catalog.InvDatasetImpl $r18;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: void makeFmrc()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r2.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r3 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getID()>();

        r39 = $r3;

        if $r3 != null goto label1;

        r39 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

     label1:
        $r4 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r5 = interfaceinvoke $r4.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: java.util.List getRunDates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Date) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RUN_");

        $r14 = virtualinvoke $r2.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r8);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r16, 32, "_");

        $r18 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r18.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r0, $r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runs");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("runs");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r33);

        $r34 = virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data from Run ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r38);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label3:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r1);

        return $r1;
    }

    private java.util.List makeOffsetDatasets() throws java.io.IOException
    {
        boolean $z0;
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r3;
        java.util.List $r4;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37;
        java.lang.Double r7;
        java.util.ArrayList $r1;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String $r2, $r9, $r15, $r16, $r19, $r25, $r32, $r38, r39;
        java.util.Iterator $r5;
        thredds.catalog.ThreddsMetadata $r33;
        java.lang.Object $r6;
        thredds.catalog.InvDatasetImpl $r17;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: void makeFmrc()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getID()>();

        r39 = $r2;

        if $r2 != null goto label1;

        r39 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

     label1:
        $r3 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r4 = interfaceinvoke $r3.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: java.util.List getForecastOffsets()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Double) $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Offset_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hr");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r15, 32, "_");

        $r17 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r17.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r0, $r16);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r32);

        $r33 = virtualinvoke $r17.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data from the ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hour forecasts, across different model runs.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r38);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label2;

     label3:
        return $r1;
    }

    private java.util.List makeForecastDatasets() throws java.io.IOException
    {
        java.util.Date r8;
        boolean $z0;
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r4;
        java.util.List $r5;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38;
        ucar.nc2.units.DateFormatter $r2;
        java.util.ArrayList $r1;
        thredds.catalog.InvDatasetFmrc r0;
        java.lang.String $r3, $r10, $r14, $r16, $r17, $r20, $r26, $r33, $r39, r40;
        java.util.Iterator $r6;
        thredds.catalog.ThreddsMetadata $r34;
        java.lang.Object $r7;
        thredds.catalog.InvDatasetImpl $r18;

        r0 := @this: thredds.catalog.InvDatasetFmrc;

        specialinvoke r0.<thredds.catalog.InvDatasetFmrc: void makeFmrc()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r2.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r3 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getID()>();

        r40 = $r3;

        if $r3 != null goto label1;

        r40 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getPath()>();

     label1:
        $r4 = r0.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        $r5 = interfaceinvoke $r4.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: java.util.List getForecastDates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Date) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<thredds.catalog.InvDatasetFmrc: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ConstantForecast_");

        $r14 = virtualinvoke $r2.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r8);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>($r16, 32, "_");

        $r18 = new thredds.catalog.InvDatasetImpl;

        specialinvoke $r18.<thredds.catalog.InvDatasetImpl: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r0, $r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = r0.<thredds.catalog.InvDatasetFmrc: java.lang.String path>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setUrlPath(java.lang.String)>($r26);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: void setID(java.lang.String)>($r33);

        $r34 = virtualinvoke $r18.<thredds.catalog.InvDatasetImpl: thredds.catalog.ThreddsMetadata getLocalMetadata()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data with the same forecast date, ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", across different model runs.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<thredds.catalog.ThreddsMetadata: void addDocumentation(java.lang.String,java.lang.String)>("summary", $r39);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label3:
        return $r1;
    }

    public ucar.nc2.dataset.NetcdfDataset getDataset(java.lang.String) throws java.io.IOException
    {
        java.util.Date $r7, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.nc2.dt.fmrc.ForecastModelRunCollection $r8, $r13, $r16, $r17, $r18;
        thredds.catalog.InvDatasetFmrc$InventoryParams $r19, $r21, $r23;
        java.lang.StringBuilder $r25, $r26, $r34;
        ucar.nc2.units.DateFormatter $r35, $r36;
        thredds.catalog.InvDatasetFmrc r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17;
        java.lang.String r0, r1, r2, $r4, $r5, $r9, $r10, $r14, $r15, $r22, $r24, $r27, $r29, $r30, $r31, r33;
        double $d0;
        ucar.nc2.dataset.NetcdfDataset $r28, r32;

        r3 := @this: thredds.catalog.InvDatasetFmrc;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i13 = (int) -1;

        if $i0 <= $i13 goto label01;

        $r29 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label02;

     label01:
        $r29 = r0;

     label02:
        r1 = $r29;

        $i15 = (int) -1;

        if $i0 <= $i15 goto label03;

        $i11 = $i0 + 1;

        $r30 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i11);

        goto label04;

     label03:
        $r30 = "";

     label04:
        r2 = $r30;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("files");

        if $z0 == 0 goto label07;

        $r19 = r3.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        if $r19 == null goto label07;

        $r34 = new java.lang.StringBuilder;

        $r21 = r3.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r22 = $r21.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location>;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);

        $r23 = r3.<thredds.catalog.InvDatasetFmrc: thredds.catalog.InvDatasetFmrc$InventoryParams params>;

        $r24 = $r23.<thredds.catalog.InvDatasetFmrc$InventoryParams: java.lang.String location>;

        $z6 = virtualinvoke $r24.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z6 == 0 goto label05;

        $r31 = "";

        goto label06;

     label05:
        $r31 = "/";

     label06:
        $r25 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $i17 = (int) -1;

        $r28 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(ucar.nc2.util.cache.FileFactory,java.lang.String,java.util.Set,int,ucar.nc2.util.CancelTask,java.lang.Object)>(null, $r27, null, $i17, null, null);

        return $r28;

     label07:
        specialinvoke r3.<thredds.catalog.InvDatasetFmrc: void makeFmrc()>();

        r32 = null;

        r33 = r0;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("fmrc.ncd");

        if $z1 == 0 goto label08;

        $r18 = r3.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        r32 = interfaceinvoke $r18.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dataset.NetcdfDataset getFmrcDataset()>();

        goto label16;

     label08:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("best.ncd");

        if $z2 == 0 goto label09;

        $r17 = r3.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        r32 = interfaceinvoke $r17.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dataset.NetcdfDataset getBestTimeSeries()>();

        goto label16;

     label09:
        r33 = r2;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("offset");

        if $z3 == 0 goto label12;

        $i7 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("Offset_");

        $i8 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("hr");

        if $i7 < 0 goto label10;

        if $i8 >= 0 goto label11;

     label10:
        return null;

     label11:
        $r14 = "Offset_";

        $i9 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i10 = $i7 + $i9;

        $r15 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i10, $i8);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r15);

        $r16 = r3.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        r32 = interfaceinvoke $r16.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dataset.NetcdfDataset getForecastOffsetDataset(double)>($d0);

        goto label16;

     label12:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("runs");

        if $z4 == 0 goto label14;

        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("RUN_");

        if $i4 >= 0 goto label13;

        return null;

     label13:
        $r9 = "RUN_";

        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i6);

        $r35 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r35.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r12 = virtualinvoke $r35.<ucar.nc2.units.DateFormatter: java.util.Date getISODate(java.lang.String)>($r10);

        $r13 = r3.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        r32 = interfaceinvoke $r13.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dataset.NetcdfDataset getRunTimeDataset(java.util.Date)>($r12);

        goto label16;

     label14:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("forecast");

        if $z5 == 0 goto label16;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("ConstantForecast_");

        if $i1 >= 0 goto label15;

        return null;

     label15:
        $r4 = "ConstantForecast_";

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        $r36 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r36.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r7 = virtualinvoke $r36.<ucar.nc2.units.DateFormatter: java.util.Date getISODate(java.lang.String)>($r5);

        $r8 = r3.<thredds.catalog.InvDatasetFmrc: ucar.nc2.dt.fmrc.ForecastModelRunCollection fmrc>;

        r32 = interfaceinvoke $r8.<ucar.nc2.dt.fmrc.ForecastModelRunCollection: ucar.nc2.dataset.NetcdfDataset getForecastTimeDataset(java.util.Date)>($r7);

     label16:
        if null == r32 goto label17;

        virtualinvoke r32.<ucar.nc2.dataset.NetcdfDataset: void setLocation(java.lang.String)>(r33);

     label17:
        return r32;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        ucar.nc2.util.cache.FileCacheNOP $r1;

        <thredds.catalog.InvDatasetFmrc: java.lang.String SCAN> = "files";

        <thredds.catalog.InvDatasetFmrc: java.lang.String TITLE_FORECAST> = "Constant Forecast Date";

        <thredds.catalog.InvDatasetFmrc: java.lang.String TITLE_OFFSET> = "Constant Forecast Offset";

        <thredds.catalog.InvDatasetFmrc: java.lang.String TITLE_RUNS> = "Forecast Model Run";

        <thredds.catalog.InvDatasetFmrc: java.lang.String OFFSET_NAME> = "Offset_";

        <thredds.catalog.InvDatasetFmrc: java.lang.String OFFSET> = "offset";

        <thredds.catalog.InvDatasetFmrc: java.lang.String FORECAST_NAME> = "ConstantForecast_";

        <thredds.catalog.InvDatasetFmrc: java.lang.String FORECAST> = "forecast";

        <thredds.catalog.InvDatasetFmrc: java.lang.String RUN_NAME> = "RUN_";

        <thredds.catalog.InvDatasetFmrc: java.lang.String RUNS> = "runs";

        <thredds.catalog.InvDatasetFmrc: java.lang.String BEST> = "best.ncd";

        <thredds.catalog.InvDatasetFmrc: java.lang.String FMRC> = "fmrc.ncd";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvDatasetFmrc;");

        <thredds.catalog.InvDatasetFmrc: org.slf4j.Logger logger> = $r0;

        $r1 = new ucar.nc2.util.cache.FileCacheNOP;

        specialinvoke $r1.<ucar.nc2.util.cache.FileCacheNOP: void <init>()>();

        <thredds.catalog.InvDatasetFmrc: ucar.nc2.util.cache.FileCache fileCache> = $r1;

        return;
    }
}
