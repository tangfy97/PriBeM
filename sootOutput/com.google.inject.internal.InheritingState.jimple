final class com.google.inject.internal.InheritingState extends java.lang.Object implements com.google.inject.internal.State
{
    private final com.google.inject.internal.State parent;
    private final java.util.Map explicitBindingsMutable;
    private final java.util.Map explicitBindings;
    private final java.util.Map scopes;
    private final java.util.List converters;
    private final java.util.List methodAspects;
    private final java.util.List listenerBindings;
    private final com.google.inject.internal.WeakKeySet blacklistedKeys;
    private final java.lang.Object lock;

    void <init>(com.google.inject.internal.State)
    {
        java.util.HashMap $r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.util.LinkedHashMap $r1;
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r2, $r3;
        com.google.inject.internal.WeakKeySet $r8;
        java.lang.Object $r10, $r13;
        com.google.inject.internal.State r9, $r11, $r12;

        r0 := @this: com.google.inject.internal.InheritingState;

        r9 := @parameter0: com.google.inject.internal.State;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindingsMutable> = $r1;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindingsMutable>;

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindings> = $r3;

        $r4 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>();

        r0.<com.google.inject.internal.InheritingState: java.util.Map scopes> = $r4;

        $r5 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InheritingState: java.util.List converters> = $r5;

        $r6 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InheritingState: java.util.List methodAspects> = $r6;

        $r7 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.internal.InheritingState: java.util.List listenerBindings> = $r7;

        $r8 = new com.google.inject.internal.WeakKeySet;

        specialinvoke $r8.<com.google.inject.internal.WeakKeySet: void <init>()>();

        r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.WeakKeySet blacklistedKeys> = $r8;

        $r10 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r9, "parent");

        $r11 = (com.google.inject.internal.State) $r10;

        r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent> = $r11;

        $r12 = <com.google.inject.internal.State: com.google.inject.internal.State NONE>;

        if r9 != $r12 goto label1;

        $r13 = r0;

        goto label2;

     label1:
        $r13 = interfaceinvoke r9.<com.google.inject.internal.State: java.lang.Object lock()>();

     label2:
        r0.<com.google.inject.internal.InheritingState: java.lang.Object lock> = $r13;

        return;
    }

    public com.google.inject.internal.State parent()
    {
        com.google.inject.internal.State $r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        return $r1;
    }

    public com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)
    {
        com.google.inject.internal.BindingImpl $r6;
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r2;
        com.google.inject.Key r1;
        java.lang.Object $r3;
        com.google.inject.internal.State $r5;
        com.google.inject.Binding r4;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindings>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.google.inject.Binding) $r3;

        if r4 == null goto label1;

        $r6 = (com.google.inject.internal.BindingImpl) r4;

        goto label2;

     label1:
        $r5 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        $r6 = interfaceinvoke $r5.<com.google.inject.internal.State: com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)>(r1);

     label2:
        return $r6;
    }

    public java.util.Map getExplicitBindingsThisLevel()
    {
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r1;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindings>;

        return $r1;
    }

    public void putBinding(com.google.inject.Key, com.google.inject.internal.BindingImpl)
    {
        com.google.inject.internal.BindingImpl r2;
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r3;
        com.google.inject.Key r1;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: com.google.inject.internal.BindingImpl;

        $r3 = r0.<com.google.inject.internal.InheritingState: java.util.Map explicitBindingsMutable>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public com.google.inject.Scope getScope(java.lang.Class)
    {
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        com.google.inject.internal.State $r5;
        com.google.inject.Scope r4, $r6;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.Map scopes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.google.inject.Scope) $r3;

        if r4 == null goto label1;

        $r6 = r4;

        goto label2;

     label1:
        $r5 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        $r6 = interfaceinvoke $r5.<com.google.inject.internal.State: com.google.inject.Scope getScope(java.lang.Class)>(r1);

     label2:
        return $r6;
    }

    public void putAnnotation(java.lang.Class, com.google.inject.Scope)
    {
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r3;
        java.lang.Class r1;
        com.google.inject.Scope r2;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.Scope;

        $r3 = r0.<com.google.inject.internal.InheritingState: java.util.Map scopes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Iterable getConvertersThisLevel()
    {
        java.util.List $r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: java.util.List converters>;

        return $r1;
    }

    public void addConverter(com.google.inject.spi.TypeConverterBinding)
    {
        java.util.List $r2;
        com.google.inject.spi.TypeConverterBinding r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.spi.TypeConverterBinding;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.List converters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String, com.google.inject.TypeLiteral, com.google.inject.internal.Errors, java.lang.Object)
    {
        java.util.Iterator $r3;
        java.lang.Iterable $r2;
        com.google.inject.internal.Errors r8;
        com.google.inject.spi.TypeConverterBinding r5, r11;
        com.google.inject.internal.InheritingState r0;
        java.lang.Object $r4, r10;
        com.google.inject.internal.State $r1, r12;
        com.google.inject.matcher.Matcher $r6;
        java.lang.String r9;
        com.google.inject.TypeLiteral r7;
        boolean $z0, $z1;

        r0 := @this: com.google.inject.internal.InheritingState;

        r9 := @parameter0: java.lang.String;

        r7 := @parameter1: com.google.inject.TypeLiteral;

        r8 := @parameter2: com.google.inject.internal.Errors;

        r10 := @parameter3: java.lang.Object;

        r11 = null;

        r12 = r0;

     label1:
        $r1 = <com.google.inject.internal.State: com.google.inject.internal.State NONE>;

        if r12 == $r1 goto label6;

        $r2 = interfaceinvoke r12.<com.google.inject.internal.State: java.lang.Iterable getConvertersThisLevel()>();

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.inject.spi.TypeConverterBinding) $r4;

        $r6 = virtualinvoke r5.<com.google.inject.spi.TypeConverterBinding: com.google.inject.matcher.Matcher getTypeMatcher()>();

        $z1 = interfaceinvoke $r6.<com.google.inject.matcher.Matcher: boolean matches(java.lang.Object)>(r7);

        if $z1 == 0 goto label4;

        if r11 == null goto label3;

        virtualinvoke r8.<com.google.inject.internal.Errors: com.google.inject.internal.Errors ambiguousTypeConversion(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,com.google.inject.spi.TypeConverterBinding)>(r9, r10, r7, r11, r5);

     label3:
        r11 = r5;

     label4:
        goto label2;

     label5:
        r12 = interfaceinvoke r12.<com.google.inject.internal.State: com.google.inject.internal.State parent()>();

        goto label1;

     label6:
        return r11;
    }

    public void addMethodAspect(com.google.inject.internal.MethodAspect)
    {
        java.util.List $r2;
        com.google.inject.internal.MethodAspect r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.internal.MethodAspect;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.List methodAspects>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public com.google.inject.internal.util.$ImmutableList getMethodAspects()
    {
        com.google.inject.internal.util.$ImmutableList $r3, $r7;
        com.google.inject.internal.util.$ImmutableList$Builder $r0, $r4, $r6;
        java.util.List $r5;
        com.google.inject.internal.InheritingState r1;
        com.google.inject.internal.State $r2;

        r1 := @this: com.google.inject.internal.InheritingState;

        $r0 = new com.google.inject.internal.util.$ImmutableList$Builder;

        specialinvoke $r0.<com.google.inject.internal.util.$ImmutableList$Builder: void <init>()>();

        $r2 = r1.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        $r3 = interfaceinvoke $r2.<com.google.inject.internal.State: com.google.inject.internal.util.$ImmutableList getMethodAspects()>();

        $r4 = virtualinvoke $r0.<com.google.inject.internal.util.$ImmutableList$Builder: com.google.inject.internal.util.$ImmutableList$Builder addAll(java.lang.Iterable)>($r3);

        $r5 = r1.<com.google.inject.internal.InheritingState: java.util.List methodAspects>;

        $r6 = virtualinvoke $r4.<com.google.inject.internal.util.$ImmutableList$Builder: com.google.inject.internal.util.$ImmutableList$Builder addAll(java.lang.Iterable)>($r5);

        $r7 = virtualinvoke $r6.<com.google.inject.internal.util.$ImmutableList$Builder: com.google.inject.internal.util.$ImmutableList build()>();

        return $r7;
    }

    public void addTypeListener(com.google.inject.spi.TypeListenerBinding)
    {
        java.util.List $r2;
        com.google.inject.spi.TypeListenerBinding r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.spi.TypeListenerBinding;

        $r2 = r0.<com.google.inject.internal.InheritingState: java.util.List listenerBindings>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getTypeListenerBindings()
    {
        java.util.List $r2, $r4;
        com.google.inject.internal.InheritingState r0;
        int $i0, $i1;
        com.google.inject.internal.State $r1;
        java.util.ArrayList $r3;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        $r2 = interfaceinvoke $r1.<com.google.inject.internal.State: java.util.List getTypeListenerBindings()>();

        $r3 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r4 = r0.<com.google.inject.internal.InheritingState: java.util.List listenerBindings>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $r3;
    }

    public void blacklist(com.google.inject.Key, java.lang.Object)
    {
        com.google.inject.internal.InheritingState r0;
        com.google.inject.Key r1;
        com.google.inject.internal.WeakKeySet $r4;
        java.lang.Object r2;
        com.google.inject.internal.State $r3;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent>;

        interfaceinvoke $r3.<com.google.inject.internal.State: void blacklist(com.google.inject.Key,java.lang.Object)>(r1, r2);

        $r4 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.WeakKeySet blacklistedKeys>;

        virtualinvoke $r4.<com.google.inject.internal.WeakKeySet: void add(com.google.inject.Key,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean isBlacklisted(com.google.inject.Key)
    {
        com.google.inject.internal.InheritingState r0;
        com.google.inject.Key r1;
        com.google.inject.internal.WeakKeySet $r2;
        boolean $z0;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.WeakKeySet blacklistedKeys>;

        $z0 = virtualinvoke $r2.<com.google.inject.internal.WeakKeySet: boolean contains(com.google.inject.Key)>(r1);

        return $z0;
    }

    public java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key)
    {
        com.google.inject.internal.InheritingState r0;
        com.google.inject.Key r1;
        com.google.inject.internal.WeakKeySet $r2;
        java.util.Set $r3;

        r0 := @this: com.google.inject.internal.InheritingState;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = r0.<com.google.inject.internal.InheritingState: com.google.inject.internal.WeakKeySet blacklistedKeys>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.WeakKeySet: java.util.Set getSources(com.google.inject.Key)>(r1);

        return $r3;
    }

    public java.lang.Object lock()
    {
        java.lang.Object $r1;
        com.google.inject.internal.InheritingState r0;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: java.lang.Object lock>;

        return $r1;
    }

    public java.util.Map getScopes()
    {
        com.google.inject.internal.InheritingState r0;
        java.util.Map $r1;

        r0 := @this: com.google.inject.internal.InheritingState;

        $r1 = r0.<com.google.inject.internal.InheritingState: java.util.Map scopes>;

        return $r1;
    }
}
