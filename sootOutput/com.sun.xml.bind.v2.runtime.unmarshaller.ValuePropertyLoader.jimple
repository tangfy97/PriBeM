public class com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader extends com.sun.xml.bind.v2.runtime.unmarshaller.Loader
{
    private final com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc;

    public void <init>(com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader r0;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Loader: void <init>(boolean)>(1);

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc> = r1;

        return;
    }

    public void text(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State, java.lang.CharSequence) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader r0;
        java.lang.CharSequence r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State r1, $r6, $r7;
        java.lang.RuntimeException $r5;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r4;
        java.lang.Object $r3, $r8;
        com.sun.xml.bind.api.AccessorException $r9;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State;

        r2 := @parameter1: java.lang.CharSequence;

     label1:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r3 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void parse(java.lang.Object,java.lang.CharSequence)>($r3, r2);

     label2:
        goto label7;

     label3:
        $r9 := @caughtexception;

        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader: void handleGenericException(java.lang.Exception,boolean)>($r9, 1);

        goto label7;

     label4:
        $r5 := @caughtexception;

        $r6 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        if $r6 == null goto label6;

        $r7 = r1.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State prev>;

        $r8 = $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State: java.lang.Object target>;

        $z0 = $r8 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label5;

        goto label7;

     label5:
        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader: void handleParseConversionException(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.Exception)>(r1, $r5);

        goto label7;

     label6:
        staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.ValuePropertyLoader: void handleParseConversionException(com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext$State,java.lang.Exception)>(r1, $r5);

     label7:
        return;

        catch com.sun.xml.bind.api.AccessorException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }
}
