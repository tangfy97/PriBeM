public class org.apache.commons.collections.set.CompositeSet extends org.apache.commons.collections.collection.CompositeCollection implements java.util.Set
{

    public void <init>()
    {
        org.apache.commons.collections.set.CompositeSet r0;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        specialinvoke r0.<org.apache.commons.collections.collection.CompositeCollection: void <init>()>();

        return;
    }

    public void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.apache.commons.collections.set.CompositeSet r0;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.commons.collections.collection.CompositeCollection: void <init>(java.util.Collection)>(r1);

        return;
    }

    public void <init>(java.util.Set[])
    {
        java.util.Set[] r1;
        org.apache.commons.collections.set.CompositeSet r0;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        r1 := @parameter0: java.util.Set[];

        specialinvoke r0.<org.apache.commons.collections.collection.CompositeCollection: void <init>(java.util.Collection[])>(r1);

        return;
    }

    public synchronized void addComposited(java.util.Collection)
    {
        org.apache.commons.collections.set.CompositeSet$SetMutator $r12;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.UnsupportedOperationException $r15, $r16;
        java.util.Iterator $r3;
        java.util.Collection r0, $r2, $r7, $r13;
        java.util.Set r6, $r11;
        org.apache.commons.collections.collection.CompositeCollection$CollectionMutator $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r14, $r17;
        org.apache.commons.collections.set.CompositeSet r1;
        java.util.Collection[] $r4;
        java.lang.Object $r5;

        r1 := @this: org.apache.commons.collections.set.CompositeSet;

        r0 := @parameter0: java.util.Collection;

        $z0 = r0 instanceof java.util.Set;

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collections added must implement java.util.Set");

        throw $r17;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.collections.set.CompositeSet: java.util.Collection getCollections()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Set) $r5;

        $r7 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection intersection(java.util.Collection,java.util.Collection)>(r6, r0);

        $i0 = interfaceinvoke $r7.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label5;

        $r8 = r1.<org.apache.commons.collections.set.CompositeSet: org.apache.commons.collections.collection.CompositeCollection$CollectionMutator mutator>;

        if $r8 != null goto label3;

        $r16 = new java.lang.UnsupportedOperationException;

        specialinvoke $r16.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Collision adding composited collection with no SetMutator set");

        throw $r16;

     label3:
        $r9 = r1.<org.apache.commons.collections.set.CompositeSet: org.apache.commons.collections.collection.CompositeCollection$CollectionMutator mutator>;

        $z2 = $r9 instanceof org.apache.commons.collections.set.CompositeSet$SetMutator;

        if $z2 != 0 goto label4;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Collision adding composited collection to a CompositeSet with a CollectionMutator instead of a SetMutator");

        throw $r15;

     label4:
        $r10 = r1.<org.apache.commons.collections.set.CompositeSet: org.apache.commons.collections.collection.CompositeCollection$CollectionMutator mutator>;

        $r12 = (org.apache.commons.collections.set.CompositeSet$SetMutator) $r10;

        $r11 = (java.util.Set) r0;

        interfaceinvoke $r12.<org.apache.commons.collections.set.CompositeSet$SetMutator: void resolveCollision(org.apache.commons.collections.set.CompositeSet,java.util.Set,java.util.Set,java.util.Collection)>(r1, r6, $r11, $r7);

        $r13 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection intersection(java.util.Collection,java.util.Collection)>(r6, r0);

        $i1 = interfaceinvoke $r13.<java.util.Collection: int size()>();

        if $i1 <= 0 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to add illegal entry unresolved by SetMutator.resolveCollision()");

        throw $r14;

     label5:
        goto label2;

     label6:
        $r4 = newarray (java.util.Collection)[1];

        $r4[0] = r0;

        specialinvoke r1.<org.apache.commons.collections.collection.CompositeCollection: void addComposited(java.util.Collection[])>($r4);

        return;
    }

    public synchronized void addComposited(java.util.Collection, java.util.Collection)
    {
        java.util.Collection r0, r1;
        java.util.Set $r4, $r5;
        java.lang.IllegalArgumentException $r6, $r7;
        org.apache.commons.collections.set.CompositeSet r2;
        java.util.Set[] $r3;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.collections.set.CompositeSet;

        r0 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.util.Collection;

        $z0 = r0 instanceof java.util.Set;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument must implement java.util.Set");

        throw $r7;

     label1:
        $z1 = r1 instanceof java.util.Set;

        if $z1 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument must implement java.util.Set");

        throw $r6;

     label2:
        $r3 = newarray (java.util.Set)[2];

        $r4 = (java.util.Set) r0;

        $r3[0] = $r4;

        $r5 = (java.util.Set) r1;

        $r3[1] = $r5;

        virtualinvoke r2.<org.apache.commons.collections.set.CompositeSet: void addComposited(java.util.Collection[])>($r3);

        return;
    }

    public synchronized void addComposited(java.util.Collection[])
    {
        org.apache.commons.collections.set.CompositeSet r1;
        java.util.Collection $r2;
        java.util.Collection[] r0;
        int $i0, i1, $i3;

        r1 := @this: org.apache.commons.collections.set.CompositeSet;

        r0 := @parameter0: java.util.Collection[];

        $i0 = lengthof r0;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0[i1];

        virtualinvoke r1.<org.apache.commons.collections.set.CompositeSet: void addComposited(java.util.Collection)>($r2);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label2:
        return;
    }

    public void setMutator(org.apache.commons.collections.collection.CompositeCollection$CollectionMutator)
    {
        org.apache.commons.collections.collection.CompositeCollection$CollectionMutator r1;
        org.apache.commons.collections.set.CompositeSet r0;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        r1 := @parameter0: org.apache.commons.collections.collection.CompositeCollection$CollectionMutator;

        specialinvoke r0.<org.apache.commons.collections.collection.CompositeCollection: void setMutator(org.apache.commons.collections.collection.CompositeCollection$CollectionMutator)>(r1);

        return;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Iterator $r2;
        java.util.Collection $r1;
        java.util.Set r4;
        org.apache.commons.collections.set.CompositeSet r0;
        java.lang.Object $r3, r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.set.CompositeSet: java.util.Collection getCollections()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Set) $r3;

        $z1 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        $z2 = interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>(r5);

        return $z2;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.collections.set.CompositeSet r2;
        int $i0, $i1;
        java.util.Set r1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.collections.set.CompositeSet;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        r1 = (java.util.Set) r0;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2);

        if $z1 == 0 goto label1;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        $i1 = virtualinvoke r2.<org.apache.commons.collections.set.CompositeSet: int size()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.collections.set.CompositeSet r0;
        java.util.Iterator $r1;
        int $i0, i1, $i2;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.set.CompositeSet;

        i1 = 0;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.set.CompositeSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i1;

        if $r2 == null goto label2;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i2 = 0;

     label3:
        i1 = $i0 + $i2;

        goto label1;

     label4:
        return i1;
    }
}
