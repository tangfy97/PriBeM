public class com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck extends com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper
{
    private com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt;

    private void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)>(r1);

        $z0 = r1 instanceof com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Checking checked iterator");

     label1:
        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt> = r2;

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck r0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorWrapper: void close()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: com.hp.hpl.jena.sparql.engine.ExecutionContext execCxt>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: void checkForOpenIterators(com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r1);

        return;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck r0;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: com.hp.hpl.jena.sparql.engine.QueryIterator iterator>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r2);

        return;
    }

    public static void checkForOpenIterators(com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.ExecutionContext r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: void dump(com.hp.hpl.jena.sparql.engine.ExecutionContext,boolean)>(r0, 0);

        return;
    }

    public static com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck check(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck $r1, $r3;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        if $z0 == 0 goto label1;

        $r3 = (com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck) r0;

        return $r3;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r0, r2);

        return $r1;
    }

    private static void dump(com.hp.hpl.jena.sparql.engine.ExecutionContext, boolean)
    {
        java.util.Iterator $r2, $r5;
        java.lang.Object $r1, $r3;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r4, r6;
        boolean z0, $z1, $z2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.ExecutionContext: java.util.Iterator listAllIterators()>();

        if $r2 == null goto label2;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.engine.QueryIterator) $r3;

        staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: void warn(com.hp.hpl.jena.sparql.engine.QueryIterator,java.lang.String)>(r4, "Iterator: ");

        goto label1;

     label2:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.ExecutionContext: java.util.Iterator listOpenIterators()>();

     label3:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r1 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.sparql.engine.QueryIterator) $r1;

        staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorCheck: void warn(com.hp.hpl.jena.sparql.engine.QueryIterator,java.lang.String)>(r6, "Open iterator: ");

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

        goto label3;

     label4:
        return;
    }

    private static void warn(com.hp.hpl.jena.sparql.engine.QueryIterator, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r3, $r5, $r11, $r12, r17, r18;
        boolean $z0;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIter r19;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r17 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = $r5;

        $z0 = r2 instanceof com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase;

        if $z0 == 0 goto label1;

        r6 = (com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase) r2;

        r19 = (com.hp.hpl.jena.sparql.engine.iterator.QueryIter) r2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = virtualinvoke r19.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter: int getIteratorNumber()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = $r11;

        $r12 = virtualinvoke r6.<com.hp.hpl.jena.sparql.engine.iterator.QueryIteratorBase: java.lang.String debug()>();

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/sparql/engine/iterator/QueryIteratorCheck;", r18);

        return;
    }
}
