public class org.apache.cxf.jaxrs.impl.UriInfoImpl extends java.lang.Object implements javax.ws.rs.core.UriInfo
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String CASE_INSENSITIVE_QUERIES;
    private javax.ws.rs.core.MultivaluedMap templateParams;
    private org.apache.cxf.message.Message message;
    private org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack;
    private boolean caseInsensitiveQueries;

    public void <init>(org.apache.cxf.message.Message)
    {
        javax.ws.rs.core.MultivaluedMap $r3;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.message.Message r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        $r3 = (javax.ws.rs.core.MultivaluedMap) $r2;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r1, $r3);

        return;
    }

    public void <init>(org.apache.cxf.message.Message, javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.jaxrs.model.OperationResourceInfoStack $r4;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message> = r1;

        r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap templateParams> = r2;

        if r1 == null goto label1;

        $r3 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfoStack;");

        $r4 = (org.apache.cxf.jaxrs.model.OperationResourceInfoStack) $r3;

        r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack> = $r4;

        $r5 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.http.case_insensitive_queries");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r5);

        r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: boolean caseInsensitiveQueries> = $z0;

     label1:
        return;
    }

    public java.net.URI getAbsolutePath()
    {
        java.lang.String $r1;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String getAbsolutePathAsString()>();

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1);

        return $r2;
    }

    public javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()
    {
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r0;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.net.URI getAbsolutePath()>();

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>(java.net.URI)>($r2);

        return $r0;
    }

    public java.net.URI getBaseUri()
    {
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.message.Message $r1, $r4;
        java.lang.String $r2;
        java.net.URI $r3, $r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getEndpointAddress(org.apache.cxf.message.Message)>($r1);

        $r3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r2);

        $r4 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.net.URI toAbsoluteUri(java.net.URI,org.apache.cxf.message.Message)>($r3, $r4);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder getBaseUriBuilder()
    {
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r0;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.net.URI getBaseUri()>();

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>(java.net.URI)>($r2);

        return $r0;
    }

    public java.lang.String getPath()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String getPath(boolean)>(1);

        return $r1;
    }

    public java.lang.String getPath(boolean)
    {
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        int $i0;
        java.lang.String $r1, $r2;
        boolean z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String doGetPath(boolean,boolean)>(z0, 1);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        return $r2;

     label1:
        return $r1;
    }

    public java.util.List getPathSegments()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.util.List getPathSegments(boolean)>(1);

        return $r1;
    }

    public java.util.List getPathSegments(boolean)
    {
        java.util.List $r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String getPath(boolean)>(0);

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean)>($r1, z0);

        return $r2;
    }

    public javax.ws.rs.core.MultivaluedMap getQueryParameters()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)>(1);

        return $r1;
    }

    public javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)
    {
        org.apache.cxf.message.Message $r3, $r7;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        javax.ws.rs.core.MultivaluedMap $r10;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        java.lang.Object $r4, $r8;
        java.lang.String $r2, $r5, $r6, $r9;
        boolean $z0, z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z1 := @parameter0: boolean;

        $z0 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: boolean caseInsensitiveQueries>;

        if $z0 != 0 goto label1;

        $r7 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r6 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r8 = interfaceinvoke $r7.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.lang.String) $r8;

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>($r9, "&", z1, z1);

        return $r10;

     label1:
        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(boolean,boolean)>(0, 1);

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r2 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.lang.String) $r4;

        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)>($r1, $r5, "&", z1, z1);

        return $r1;
    }

    public java.net.URI getRequestUri()
    {
        org.apache.cxf.message.Message $r3;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r1, $r2, r5, r11;
        java.net.URI $r6;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String getAbsolutePathAsString()>();

        r11 = $r1;

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r2 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r11);

        return $r6;
    }

    public javax.ws.rs.core.UriBuilder getRequestUriBuilder()
    {
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r0;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.net.URI getRequestUri()>();

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>(java.net.URI)>($r2);

        return $r0;
    }

    public javax.ws.rs.core.MultivaluedMap getPathParameters()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)>(1);

        return $r1;
    }

    public javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r0;
        java.lang.String $r9, $r17, $r18;
        boolean $z0, z1, $z2;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        javax.ws.rs.core.MultivaluedMap $r2, $r3;
        java.util.List $r12, $r15;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r1;
        java.lang.Object $r6, $r8, $r10, $r11, $r13, $r14, $r16;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z1 := @parameter0: boolean;

        $r0 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        $r2 = r1.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap templateParams>;

        if $r2 != null goto label1;

        return $r0;

     label1:
        $r3 = r1.<org.apache.cxf.jaxrs.impl.UriInfoImpl: javax.ws.rs.core.MultivaluedMap templateParams>;

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("FINAL_MATCH_GROUP");

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        if z1 == 0 goto label4;

        $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.util.List) $r14;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (java.lang.String) $r16;

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathDecode(java.lang.String)>($r17);

        goto label5;

     label4:
        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.List) $r11;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.lang.String) $r13;

     label5:
        virtualinvoke $r0.<org.apache.cxf.jaxrs.impl.MetadataMap: void add(java.lang.Object,java.lang.Object)>($r10, $r18);

        goto label2;

     label6:
        return $r0;
    }

    public java.util.List getMatchedResources()
    {
        java.util.Iterator $r6;
        java.util.logging.Logger $r2;
        java.util.List $r3;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.jaxrs.model.OperationResourceInfoStack $r1, $r5;
        java.lang.Object $r7;
        java.lang.Class $r9;
        java.util.LinkedList $r4;
        boolean $z0;
        org.apache.cxf.jaxrs.model.MethodInvocationInfo r8;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack>;

        if $r1 == null goto label3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack>;

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.OperationResourceInfoStack: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.jaxrs.model.MethodInvocationInfo) $r7;

        $r9 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.MethodInvocationInfo: java.lang.Class getRealClass()>();

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(0, $r9);

        goto label1;

     label2:
        return $r4;

     label3:
        $r2 = <org.apache.cxf.jaxrs.impl.UriInfoImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r2.<java.util.logging.Logger: void fine(java.lang.String)>("No resource stack information, returning empty list");

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }

    public java.util.List getMatchedURIs()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.util.List getMatchedURIs(boolean)>(1);

        return $r1;
    }

    public java.util.List getMatchedURIs(boolean)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r11;
        javax.ws.rs.core.UriBuilder $r17;
        java.net.URI $r20, $r21;
        boolean $z0, z1;
        java.util.logging.Logger $r2;
        java.util.List $r3, $r18;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r13;
        java.lang.StringBuilder $r6, $r25, $r26, $r27;
        java.lang.Object[] $r19;
        org.apache.cxf.jaxrs.model.URITemplate $r14, $r15, r23;
        java.util.ArrayList $r4;
        org.apache.cxf.jaxrs.model.OperationResourceInfoStack $r1, $r7;
        int i0, i1;
        java.lang.String $r16, $r22, $r24, $r28, $r29;
        java.util.LinkedList $r5;
        java.util.Iterator $r8;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.jaxrs.model.URITemplate[] $r12;
        java.lang.Object $r9;
        org.apache.cxf.jaxrs.model.MethodInvocationInfo r10;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z1 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack>;

        if $r1 == null goto label8;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        $r7 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.jaxrs.model.OperationResourceInfoStack stack>;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.OperationResourceInfoStack: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.jaxrs.model.MethodInvocationInfo) $r9;

        $r11 = virtualinvoke r10.<org.apache.cxf.jaxrs.model.MethodInvocationInfo: org.apache.cxf.jaxrs.model.OperationResourceInfo getMethodInfo()>();

        $r12 = newarray (org.apache.cxf.jaxrs.model.URITemplate)[2];

        $r13 = virtualinvoke $r11.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r14 = virtualinvoke $r13.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r12[0] = $r14;

        $r15 = virtualinvoke $r11.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.URITemplate getURITemplate()>();

        $r12[1] = $r15;

        i0 = lengthof $r12;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r23 = $r12[i1];

        if r23 == null goto label5;

        $r24 = virtualinvoke r23.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String getValue()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        if z1 == 0 goto label3;

        $r29 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathDecode(java.lang.String)>($r24);

        goto label4;

     label3:
        $r29 = $r24;

     label4:
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder fromPath(java.lang.String)>($r16);

        $r18 = virtualinvoke r10.<org.apache.cxf.jaxrs.model.MethodInvocationInfo: java.util.List getTemplateValues()>();

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r18);

        $r19 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray()>();

        $r20 = virtualinvoke $r17.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r19);

        $r21 = virtualinvoke $r20.<java.net.URI: java.net.URI normalize()>();

        $r22 = virtualinvoke $r21.<java.net.URI: java.lang.String getRawPath()>();

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(0, $r22);

        goto label1;

     label7:
        return $r5;

     label8:
        $r2 = <org.apache.cxf.jaxrs.impl.UriInfoImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r2.<java.util.logging.Logger: void fine(java.lang.String)>("No resource stack information, returning empty list");

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }

    private java.lang.String doGetPath(boolean, boolean)
    {
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        org.apache.cxf.message.Message $r1;
        java.lang.String $r2, $r3;
        boolean z0, z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        z1 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)>($r1, z0);

        if z1 == 0 goto label1;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathDecode(java.lang.String)>($r2);

        goto label2;

     label1:
        $r3 = $r2;

     label2:
        return $r3;
    }

    private java.lang.String getAbsolutePathAsString()
    {
        org.apache.cxf.message.Message $r3;
        org.apache.cxf.jaxrs.impl.UriInfoImpl r0;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.net.URI $r1;
        java.lang.String $r2, $r4, r5, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.net.URI getBaseUri()>();

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>();

        r5 = $r2;

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: org.apache.cxf.message.Message message>;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isRequestor(org.apache.cxf.message.Message)>($r3);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r4 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String doGetPath(boolean,boolean)>(0, 0);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 == 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String CASE_INSENSITIVE_QUERIES> = "org.apache.cxf.http.case_insensitive_queries";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/impl/UriInfoImpl;");

        <org.apache.cxf.jaxrs.impl.UriInfoImpl: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
