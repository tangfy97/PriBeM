public class org.waveprotocol.wave.model.testing.MockParticipationHelper extends java.lang.Object implements org.waveprotocol.wave.model.wave.ParticipationHelper
{
    private final java.util.LinkedList frames;

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.MockParticipationHelper r0;
        java.util.LinkedList $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.MockParticipationHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.waveprotocol.wave.model.testing.MockParticipationHelper: java.util.LinkedList frames> = $r1;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getAuthoriser(org.waveprotocol.wave.model.wave.ParticipantId, java.util.Set)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r5, $r8;
        java.lang.AssertionError $r7;
        org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame r4;
        java.lang.String $r16;
        java.util.LinkedList $r1, $r2;
        java.util.NoSuchElementException $r9;
        boolean $z0, $z1;
        java.util.Set r6;
        org.waveprotocol.wave.model.testing.MockParticipationHelper r0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.waveprotocol.wave.model.testing.MockParticipationHelper;

        r5 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r6 := @parameter1: java.util.Set;

        $r1 = r0.<org.waveprotocol.wave.model.testing.MockParticipationHelper: java.util.LinkedList frames>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r9 = new java.util.NoSuchElementException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No frames left to compare with getAuthoriser(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r16);

        throw $r9;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.testing.MockParticipationHelper: java.util.LinkedList frames>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r4 = (org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame) $r3;

        $z1 = virtualinvoke r4.<org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame: boolean matches(org.waveprotocol.wave.model.wave.ParticipantId,java.util.Set)>(r5, r6);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r4.<org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame: org.waveprotocol.wave.model.wave.ParticipantId apply()>();

        return $r8;

     label2:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;
    }

    public void program(org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame)
    {
        org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame r1;
        org.waveprotocol.wave.model.testing.MockParticipationHelper r0;
        java.util.LinkedList $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.MockParticipationHelper;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.MockParticipationHelper$Frame;

        $r2 = r0.<org.waveprotocol.wave.model.testing.MockParticipationHelper: java.util.LinkedList frames>;

        virtualinvoke $r2.<java.util.LinkedList: void addLast(java.lang.Object)>(r1);

        return;
    }
}
