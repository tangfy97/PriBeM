public class org.apache.tika.io.EndianUtils extends java.lang.Object
{
    private static final int LONG_SIZE;

    public void <init>()
    {
        org.apache.tika.io.EndianUtils r0;

        r0 := @this: org.apache.tika.io.EndianUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static short readShortLE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        int $i0;
        short $s1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int readUShortLE(java.io.InputStream)>(r0);

        $s1 = (short) $i0;

        return $s1;
    }

    public static short readShortBE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        int $i0;
        short $s1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int readUShortBE(java.io.InputStream)>(r0);

        $s1 = (short) $i0;

        return $s1;
    }

    public static int readUShortLE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = $i0 | $i1;

        if $i2 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i4 = $i1 << 8;

        $i3 = $i0 << 0;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public static int readUShortBE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = $i0 | $i1;

        if $i2 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i4 = $i0 << 8;

        $i3 = $i1 << 0;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public static int readIntLE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = $i0 | $i1;

        $i5 = $i4 | $i2;

        $i6 = $i5 | $i3;

        if $i6 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i8 = $i3 << 24;

        $i7 = $i2 << 16;

        $i10 = $i8 + $i7;

        $i9 = $i1 << 8;

        $i12 = $i10 + $i9;

        $i11 = $i0 << 0;

        $i13 = $i12 + $i11;

        return $i13;
    }

    public static int readIntBE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = $i0 | $i1;

        $i5 = $i4 | $i2;

        $i6 = $i5 | $i3;

        if $i6 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i8 = $i0 << 24;

        $i7 = $i1 << 16;

        $i10 = $i8 + $i7;

        $i9 = $i2 << 8;

        $i12 = $i10 + $i9;

        $i11 = $i3 << 0;

        $i13 = $i12 + $i11;

        return $i13;
    }

    public static long readLongLE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        long $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l29, $l30, $l32, $l33, $l35, $l36, $l37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i28, $i31, $i34;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i5 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i6 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i7 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i8 = $i0 | $i1;

        $i9 = $i8 | $i2;

        $i10 = $i9 | $i3;

        $i11 = $i10 | $i4;

        $i12 = $i11 | $i5;

        $i13 = $i12 | $i6;

        $i14 = $i13 | $i7;

        if $i14 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $l15 = (long) $i7;

        $l18 = $l15 << 56;

        $l16 = (long) $i6;

        $l17 = $l16 << 48;

        $l21 = $l18 + $l17;

        $l19 = (long) $i5;

        $l20 = $l19 << 40;

        $l24 = $l21 + $l20;

        $l22 = (long) $i4;

        $l23 = $l22 << 32;

        $l27 = $l24 + $l23;

        $l25 = (long) $i3;

        $l26 = $l25 << 24;

        $l30 = $l27 + $l26;

        $i28 = $i2 << 16;

        $l29 = (long) $i28;

        $l33 = $l30 + $l29;

        $i31 = $i1 << 8;

        $l32 = (long) $i31;

        $l36 = $l33 + $l32;

        $i34 = $i0 << 0;

        $l35 = (long) $i34;

        $l37 = $l36 + $l35;

        return $l37;
    }

    public static long readLongBE(java.io.InputStream) throws java.io.IOException, org.apache.tika.io.EndianUtils$BufferUnderrunException
    {
        org.apache.tika.io.EndianUtils$BufferUnderrunException $r1;
        long $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l29, $l30, $l32, $l33, $l35, $l36, $l37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i28, $i31, $i34;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i5 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i6 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i7 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i8 = $i0 | $i1;

        $i9 = $i8 | $i2;

        $i10 = $i9 | $i3;

        $i11 = $i10 | $i4;

        $i12 = $i11 | $i5;

        $i13 = $i12 | $i6;

        $i14 = $i13 | $i7;

        if $i14 >= 0 goto label1;

        $r1 = new org.apache.tika.io.EndianUtils$BufferUnderrunException;

        specialinvoke $r1.<org.apache.tika.io.EndianUtils$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $l15 = (long) $i0;

        $l18 = $l15 << 56;

        $l16 = (long) $i1;

        $l17 = $l16 << 48;

        $l21 = $l18 + $l17;

        $l19 = (long) $i2;

        $l20 = $l19 << 40;

        $l24 = $l21 + $l20;

        $l22 = (long) $i3;

        $l23 = $l22 << 32;

        $l27 = $l24 + $l23;

        $l25 = (long) $i4;

        $l26 = $l25 << 24;

        $l30 = $l27 + $l26;

        $i28 = $i5 << 16;

        $l29 = (long) $i28;

        $l33 = $l30 + $l29;

        $i31 = $i6 << 8;

        $l32 = (long) $i31;

        $l36 = $l33 + $l32;

        $i34 = $i7 << 0;

        $l35 = (long) $i34;

        $l37 = $l36 + $l35;

        return $l37;
    }

    public static short getShortLE(byte[])
    {
        byte[] r0;
        short $s0;

        r0 := @parameter0: byte[];

        $s0 = staticinvoke <org.apache.tika.io.EndianUtils: short getShortLE(byte[],int)>(r0, 0);

        return $s0;
    }

    public static short getShortLE(byte[], int)
    {
        byte[] r0;
        short $s2;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.tika.io.EndianUtils: int getUShortLE(byte[],int)>(r0, i0);

        $s2 = (short) $i1;

        return $s2;
    }

    public static int getUShortLE(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int getUShortLE(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getUShortLE(byte[], int)
    {
        byte[] r0;
        short s2, s5, $s9, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s9 = (short) $b1;

        s2 = $s9 & 255;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        s5 = $s10 & 255;

        $i11 = (int) s5;

        $i7 = $i11 << 8;

        $i12 = (int) s2;

        $i6 = $i12 << 0;

        $i8 = $i7 + $i6;

        return $i8;
    }

    public static short getShortBE(byte[])
    {
        byte[] r0;
        short $s0;

        r0 := @parameter0: byte[];

        $s0 = staticinvoke <org.apache.tika.io.EndianUtils: short getShortBE(byte[],int)>(r0, 0);

        return $s0;
    }

    public static short getShortBE(byte[], int)
    {
        byte[] r0;
        short $s2;
        int i0, $i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.tika.io.EndianUtils: int getUShortBE(byte[],int)>(r0, i0);

        $s2 = (short) $i1;

        return $s2;
    }

    public static int getUShortBE(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int getUShortBE(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getUShortBE(byte[], int)
    {
        byte[] r0;
        short s2, s5, $s9, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s9 = (short) $b1;

        s2 = $s9 & 255;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        s5 = $s10 & 255;

        $i11 = (int) s2;

        $i7 = $i11 << 8;

        $i12 = (int) s5;

        $i6 = $i12 << 0;

        $i8 = $i7 + $i6;

        return $i8;
    }

    public static int getIntLE(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int getIntLE(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getIntLE(byte[], int)
    {
        byte[] r0;
        short s2, s4, s6, s8, $s19, $s20, $s21, $s22;
        byte $b1, $b3, $b5, $b7;
        int i0, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i23, $i24, $i25, $i26;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i16 = i0 + 1;

        $b1 = r0[i0];

        $s19 = (short) $b1;

        s2 = $s19 & 255;

        i17 = i16 + 1;

        $b3 = r0[i16];

        $s20 = (short) $b3;

        s4 = $s20 & 255;

        i18 = i17 + 1;

        $b5 = r0[i17];

        $s21 = (short) $b5;

        s6 = $s21 & 255;

        $b7 = r0[i18];

        $s22 = (short) $b7;

        s8 = $s22 & 255;

        $i23 = (int) s8;

        $i10 = $i23 << 24;

        $i24 = (int) s6;

        $i9 = $i24 << 16;

        $i12 = $i10 + $i9;

        $i25 = (int) s4;

        $i11 = $i25 << 8;

        $i14 = $i12 + $i11;

        $i26 = (int) s2;

        $i13 = $i26 << 0;

        $i15 = $i14 + $i13;

        return $i15;
    }

    public static int getIntBE(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.tika.io.EndianUtils: int getIntBE(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getIntBE(byte[], int)
    {
        byte[] r0;
        short s2, s4, s6, s8, $s19, $s20, $s21, $s22;
        byte $b1, $b3, $b5, $b7;
        int i0, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i23, $i24, $i25, $i26;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i16 = i0 + 1;

        $b1 = r0[i0];

        $s19 = (short) $b1;

        s2 = $s19 & 255;

        i17 = i16 + 1;

        $b3 = r0[i16];

        $s20 = (short) $b3;

        s4 = $s20 & 255;

        i18 = i17 + 1;

        $b5 = r0[i17];

        $s21 = (short) $b5;

        s6 = $s21 & 255;

        $b7 = r0[i18];

        $s22 = (short) $b7;

        s8 = $s22 & 255;

        $i23 = (int) s2;

        $i10 = $i23 << 24;

        $i24 = (int) s4;

        $i9 = $i24 << 16;

        $i12 = $i10 + $i9;

        $i25 = (int) s6;

        $i11 = $i25 << 8;

        $i14 = $i12 + $i11;

        $i26 = (int) s8;

        $i13 = $i26 << 0;

        $i15 = $i14 + $i13;

        return $i15;
    }

    public static long getUIntLE(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.tika.io.EndianUtils: long getUIntLE(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getUIntLE(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        long l2, $l3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.tika.io.EndianUtils: int getIntLE(byte[],int)>(r0, i0);

        l2 = (long) $i1;

        $l3 = l2 & 4294967295L;

        return $l3;
    }

    public static long getUIntBE(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.tika.io.EndianUtils: long getUIntBE(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getUIntBE(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        long l2, $l3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.tika.io.EndianUtils: int getIntBE(byte[],int)>(r0, i0);

        l2 = (long) $i1;

        $l3 = l2 & 4294967295L;

        return $l3;
    }

    public static long getLongLE(byte[], int)
    {
        byte[] r0;
        long $l4, l5, l7;
        short $s3, $s8;
        byte $b2;
        int i0, $i1, i6, $i10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l5 = 0L;

        $i1 = i0 + 8;

        i6 = $i1 - 1;

     label1:
        if i6 < i0 goto label2;

        l7 = l5 << 8;

        $b2 = r0[i6];

        $s8 = (short) $b2;

        $s3 = 255 & $s8;

        $l4 = (long) $s3;

        l5 = l7 | $l4;

        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label1;

     label2:
        return l5;
    }

    public static int ubyteToInt(byte)
    {
        short $s1, $s2;
        byte b0;
        int $i3;

        b0 := @parameter0: byte;

        $s2 = (short) b0;

        $s1 = $s2 & 255;

        $i3 = (int) $s1;

        return $i3;
    }

    public static short getUByte(byte[], int)
    {
        byte[] r0;
        short $s2, $s3, $s4;
        byte $b1;
        int i0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s4 = (short) $b1;

        $s2 = $s4 & 255;

        $s3 = (short) $s2;

        return $s3;
    }

    public static void <clinit>()
    {
        <org.apache.tika.io.EndianUtils: int LONG_SIZE> = 8;

        return;
    }
}
