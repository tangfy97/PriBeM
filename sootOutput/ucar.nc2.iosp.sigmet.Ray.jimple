public class ucar.nc2.iosp.sigmet.Ray extends java.lang.Object
{
    private short bins;
    int dataRead;
    int offset;
    int offset1;
    private float range;
    private float step;
    private float az;
    private float elev;
    private short time;
    java.lang.String varName;
    int nsweep;
    short datatype;

    public void <init>(float, float, float, float, short, short, int, int, int, int, java.lang.String, short)
    {
        ucar.nc2.iosp.sigmet.Ray r0;
        short s0, s1, s6;
        int i2, i3, i4, i5;
        float f0, f1, f2, f3;
        java.lang.String r1;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        s0 := @parameter4: short;

        s1 := @parameter5: short;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        r1 := @parameter10: java.lang.String;

        s6 := @parameter11: short;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setRange(float)>(f0);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setStep(float)>(f1);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setAz(float)>(f2);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setElev(float)>(f3);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setBins(short)>(s0);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setTime(short)>(s1);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setOffset(int)>(i2);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setDataRead(int)>(i3);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setOffset1(int)>(i4);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setName(java.lang.String)>(r1);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setNsweep(int)>(i5);

        virtualinvoke r0.<ucar.nc2.iosp.sigmet.Ray: void setDataType(short)>(s6);

        return;
    }

    public short getDataType()
    {
        short $s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $s0 = r0.<ucar.nc2.iosp.sigmet.Ray: short datatype>;

        return $s0;
    }

    public void setDataType(short)
    {
        short s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        s0 := @parameter0: short;

        r0.<ucar.nc2.iosp.sigmet.Ray: short datatype> = s0;

        return;
    }

    public float getRange()
    {
        float $f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $f0 = r0.<ucar.nc2.iosp.sigmet.Ray: float range>;

        return $f0;
    }

    public void setRange(float)
    {
        float f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        f0 := @parameter0: float;

        r0.<ucar.nc2.iosp.sigmet.Ray: float range> = f0;

        return;
    }

    public float getStep()
    {
        float $f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $f0 = r0.<ucar.nc2.iosp.sigmet.Ray: float step>;

        return $f0;
    }

    public void setStep(float)
    {
        float f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        f0 := @parameter0: float;

        r0.<ucar.nc2.iosp.sigmet.Ray: float step> = f0;

        return;
    }

    public int getNsweep()
    {
        int $i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $i0 = r0.<ucar.nc2.iosp.sigmet.Ray: int nsweep>;

        return $i0;
    }

    public void setNsweep(int)
    {
        int i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.sigmet.Ray: int nsweep> = i0;

        return;
    }

    public float getAz()
    {
        ucar.nc2.iosp.sigmet.Ray r0;
        byte $b0, $b1;
        int $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $f0 = r0.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $b0 = $f0 cmpg 0.0F;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $f1 = r0.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $b1 = $f1 cmpl -361.0F;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z2 = $z0 & $z1;

        if $z2 == 0 goto label5;

        $f3 = r0.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $f4 = 360.0F + $f3;

        r0.<ucar.nc2.iosp.sigmet.Ray: float az> = $f4;

     label5:
        $f2 = r0.<ucar.nc2.iosp.sigmet.Ray: float az>;

        return $f2;
    }

    public void setAz(float)
    {
        float f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        f0 := @parameter0: float;

        r0.<ucar.nc2.iosp.sigmet.Ray: float az> = f0;

        return;
    }

    public float getElev()
    {
        float $f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $f0 = r0.<ucar.nc2.iosp.sigmet.Ray: float elev>;

        return $f0;
    }

    public void setElev(float)
    {
        float f0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        f0 := @parameter0: float;

        r0.<ucar.nc2.iosp.sigmet.Ray: float elev> = f0;

        return;
    }

    public short getBins()
    {
        short $s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $s0 = r0.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        return $s0;
    }

    public void setBins(short)
    {
        short s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        s0 := @parameter0: short;

        r0.<ucar.nc2.iosp.sigmet.Ray: short bins> = s0;

        return;
    }

    public short getTime()
    {
        short $s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $s0 = r0.<ucar.nc2.iosp.sigmet.Ray: short time>;

        return $s0;
    }

    public void setTime(short)
    {
        short s0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        s0 := @parameter0: short;

        r0.<ucar.nc2.iosp.sigmet.Ray: short time> = s0;

        return;
    }

    public int getOffset()
    {
        int $i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $i0 = r0.<ucar.nc2.iosp.sigmet.Ray: int offset>;

        return $i0;
    }

    public void setOffset(int)
    {
        int i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.sigmet.Ray: int offset> = i0;

        return;
    }

    public int getDataRead()
    {
        int $i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $i0 = r0.<ucar.nc2.iosp.sigmet.Ray: int dataRead>;

        return $i0;
    }

    public void setDataRead(int)
    {
        int i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.sigmet.Ray: int dataRead> = i0;

        return;
    }

    public int getOffset1()
    {
        int $i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $i0 = r0.<ucar.nc2.iosp.sigmet.Ray: int offset1>;

        return $i0;
    }

    public void setOffset1(int)
    {
        int i0;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.sigmet.Ray: int offset1> = i0;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.iosp.sigmet.Ray: java.lang.String varName> = r1;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.sigmet.Ray r0;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        $r1 = r0.<ucar.nc2.iosp.sigmet.Ray: java.lang.String varName>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b0, $b1, $b2, $b7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        ucar.nc2.iosp.sigmet.Ray r0, r2;
        short $s3, $s4, $s5, $s6;
        int $i8, $i9, $i10, $i11;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.iosp.sigmet.Ray;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof ucar.nc2.iosp.sigmet.Ray;

        if $z0 == 0 goto label14;

        r2 = (ucar.nc2.iosp.sigmet.Ray) r1;

        $f1 = r0.<ucar.nc2.iosp.sigmet.Ray: float range>;

        $f0 = r2.<ucar.nc2.iosp.sigmet.Ray: float range>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        $f3 = r0.<ucar.nc2.iosp.sigmet.Ray: float step>;

        $f2 = r2.<ucar.nc2.iosp.sigmet.Ray: float step>;

        $b1 = $f3 cmpl $f2;

        if $b1 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        $z1 = $z6 & $z7;

        $f6 = r0.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $f7 = r2.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $b7 = $f6 cmpl $f7;

        if $b7 != 0 goto label06;

        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        $z2 = $z1 & $z8;

        $f5 = r0.<ucar.nc2.iosp.sigmet.Ray: float elev>;

        $f4 = r2.<ucar.nc2.iosp.sigmet.Ray: float elev>;

        $b2 = $f5 cmpl $f4;

        if $b2 != 0 goto label08;

        $z9 = 1;

        goto label09;

     label08:
        $z9 = 0;

     label09:
        $z3 = $z2 & $z9;

        $s4 = r0.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $s3 = r2.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i8 = (int) $s4;

        $i9 = (int) $s3;

        if $i8 != $i9 goto label10;

        $z10 = 1;

        goto label11;

     label10:
        $z10 = 0;

     label11:
        $z4 = $z3 & $z10;

        $s6 = r0.<ucar.nc2.iosp.sigmet.Ray: short time>;

        $s5 = r2.<ucar.nc2.iosp.sigmet.Ray: short time>;

        $i10 = (int) $s6;

        $i11 = (int) $s5;

        if $i10 != $i11 goto label12;

        $z11 = 1;

        goto label13;

     label12:
        $z11 = 0;

     label13:
        $z5 = $z4 & $z11;

        return $z5;

     label14:
        return 0;
    }

    public int hashCode()
    {
        java.lang.Float $r0, $r2, $r3, $r4;
        ucar.nc2.iosp.sigmet.Ray r1;
        short $s6, $s9;
        java.lang.Short $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12;
        float $f0, $f1, $f2, $f3;

        r1 := @this: ucar.nc2.iosp.sigmet.Ray;

        $r0 = new java.lang.Float;

        $f0 = r1.<ucar.nc2.iosp.sigmet.Ray: float range>;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>($f0);

        $i0 = virtualinvoke $r0.<java.lang.Float: int hashCode()>();

        $r2 = new java.lang.Float;

        $f1 = r1.<ucar.nc2.iosp.sigmet.Ray: float step>;

        specialinvoke $r2.<java.lang.Float: void <init>(float)>($f1);

        $i1 = virtualinvoke $r2.<java.lang.Float: int hashCode()>();

        $i2 = $i0 + $i1;

        $r3 = new java.lang.Float;

        $f2 = r1.<ucar.nc2.iosp.sigmet.Ray: float az>;

        specialinvoke $r3.<java.lang.Float: void <init>(float)>($f2);

        $i3 = virtualinvoke $r3.<java.lang.Float: int hashCode()>();

        $i4 = $i2 + $i3;

        $r4 = new java.lang.Float;

        $f3 = r1.<ucar.nc2.iosp.sigmet.Ray: float elev>;

        specialinvoke $r4.<java.lang.Float: void <init>(float)>($f3);

        $i5 = virtualinvoke $r4.<java.lang.Float: int hashCode()>();

        $i7 = $i4 + $i5;

        $r5 = new java.lang.Short;

        $s6 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        specialinvoke $r5.<java.lang.Short: void <init>(short)>($s6);

        $i8 = virtualinvoke $r5.<java.lang.Short: int hashCode()>();

        $i10 = $i7 + $i8;

        $r6 = new java.lang.Short;

        $s9 = r1.<ucar.nc2.iosp.sigmet.Ray: short time>;

        specialinvoke $r6.<java.lang.Short: void <init>(short)>($s9);

        $i11 = virtualinvoke $r6.<java.lang.Short: int hashCode()>();

        $i12 = $i10 + $i11;

        return $i12;
    }

    public java.lang.String toString()
    {
        byte $b0, $b1;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.lang.StringBuilder $r2, $r4, $r7, $r8, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        ucar.nc2.iosp.sigmet.Ray r3;
        short $s2, $s3;
        int $i4, $i5, $i6, $i7;
        java.lang.String $r5, $r9, $r13, $r17, $r21, $r25, $r26;

        r3 := @this: ucar.nc2.iosp.sigmet.Ray;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Range=");

        $f0 = r3.<ucar.nc2.iosp.sigmet.Ray: float range>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Step=");

        $f1 = r3.<ucar.nc2.iosp.sigmet.Ray: float step>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $f2 = r3.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $b0 = $f2 cmpl -361.0F;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $f3 = r3.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $b1 = $f3 cmpg 0.0F;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z2 = $z0 & $z1;

        if $z2 == 0 goto label5;

        $f6 = r3.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $f7 = 360.0F + $f6;

        r3.<ucar.nc2.iosp.sigmet.Ray: float az> = $f7;

     label5:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Az=");

        $f4 = r3.<ucar.nc2.iosp.sigmet.Ray: float az>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Elev=");

        $f5 = r3.<ucar.nc2.iosp.sigmet.Ray: float elev>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Bins=");

        $s2 = r3.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i6 = (int) $s2;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Time=");

        $s3 = r3.<ucar.nc2.iosp.sigmet.Ray: short time>;

        $i7 = (int) $s3;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    public void readData(ucar.unidata.io.RandomAccessFile, ucar.ma2.Range, ucar.ma2.IndexIterator) throws java.io.IOException
    {
        byte[] r2;
        ucar.unidata.io.RandomAccessFile r0;
        byte $b15, $b22;
        java.util.Map $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        ucar.ma2.Range r4;
        float $f0, $f1, $f2, $f3;
        long $l1, $l6, $l14, $l20;
        float[] r3;
        ucar.nc2.iosp.sigmet.Ray r1;
        short $s2, $s3, $s7, $s9, $s12, $s16, $s18, $s23, $s27, s29;
        int $i0, $i4, $i5, $i8, $i10, $i11, $i13, $i17, $i19, $i21, i24, i25, i26, i28, i30, i31, i32, i33, i34, i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        ucar.ma2.IndexIterator r5;

        r1 := @this: ucar.nc2.iosp.sigmet.Ray;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r4 := @parameter1: ucar.ma2.Range;

        r5 := @parameter2: ucar.ma2.IndexIterator;

        $i0 = r1.<ucar.nc2.iosp.sigmet.Ray: int offset>;

        $l1 = (long) $i0;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $s2 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i37 = (int) $s2;

        r2 = newarray (byte)[$i37];

        $s3 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i38 = (int) $s3;

        r3 = newarray (float)[$i38];

        i24 = 0;

        $i4 = r1.<ucar.nc2.iosp.sigmet.Ray: int dataRead>;

        if $i4 <= 0 goto label02;

        $i19 = r1.<ucar.nc2.iosp.sigmet.Ray: int offset>;

        $l20 = (long) $i19;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l20);

        i25 = 0;

     label01:
        $i21 = r1.<ucar.nc2.iosp.sigmet.Ray: int dataRead>;

        if i25 >= $i21 goto label02;

        $b22 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r8 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $s23 = virtualinvoke r1.<ucar.nc2.iosp.sigmet.Ray: short getDataType()>();

        $f3 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcData(java.util.Map,short,byte)>($r8, $s23, $b22);

        r3[i25] = $f3;

        i24 = i24 + 1;

        i25 = i25 + 1;

        goto label01;

     label02:
        $i5 = r1.<ucar.nc2.iosp.sigmet.Ray: int offset1>;

        $l6 = (long) $i5;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l6);

        i26 = r1.<ucar.nc2.iosp.sigmet.Ray: int offset1>;

     label03:
        $s27 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i39 = (int) $s27;

        if i24 >= $i39 goto label20;

        $s9 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        i26 = i26 + 2;

        if $s9 != 1 goto label06;

        i28 = 0;

     label04:
        $s18 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i40 = (int) $s18;

        if i28 >= $i40 goto label05;

        r3[i28] = -999.99F;

        i28 = i28 + 1;

        goto label04;

     label05:
        goto label20;

     label06:
        $i41 = (int) $s9;

        if $i41 >= 0 goto label12;

        s29 = $s9 & 32767;

        $i42 = (int) s29;

        i30 = $i42 * 2;

        i31 = 0;

        $i13 = i26 % 6144;

        if $i13 != 0 goto label07;

        goto label20;

     label07:
        $l14 = (long) i26;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l14);

        i32 = 0;

     label08:
        if i32 >= i30 goto label10;

        $b15 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r7 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $s16 = virtualinvoke r1.<ucar.nc2.iosp.sigmet.Ray: short getDataType()>();

        $f2 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcData(java.util.Map,short,byte)>($r7, $s16, $b15);

        r3[i24] = $f2;

        i24 = i24 + 1;

        i26 = i26 + 1;

        $i17 = i24 % 6144;

        if $i17 != 0 goto label09;

        i31 = i32 + 1;

        goto label10;

     label09:
        i32 = i32 + 1;

        goto label08;

     label10:
        if i31 <= 0 goto label11;

        goto label20;

     label11:
        goto label03;

     label12:
        $i43 = (int) $s9;

        if $i43 <= 0 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        if $s9 == 1 goto label15;

        $z1 = 1;

        goto label16;

     label15:
        $z1 = 0;

     label16:
        $z2 = $z0 & $z1;

        if $z2 == 0 goto label03;

        $i44 = (int) $s9;

        i33 = $i44 * 2;

        i34 = 0;

     label17:
        if i34 >= i33 goto label18;

        $i11 = i24 + i34;

        $r6 = <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: java.util.Map recHdr>;

        $s12 = virtualinvoke r1.<ucar.nc2.iosp.sigmet.Ray: short getDataType()>();

        $f1 = staticinvoke <ucar.nc2.iosp.sigmet.SigmetIOServiceProvider: float calcData(java.util.Map,short,byte)>($r6, $s12, 0);

        r3[$i11] = $f1;

        i34 = i34 + 1;

        goto label17;

     label18:
        i24 = i24 + i33;

        $i10 = i26 % 6144;

        if $i10 != 0 goto label19;

        goto label20;

     label19:
        goto label03;

     label20:
        i35 = virtualinvoke r4.<ucar.ma2.Range: int first()>();

     label21:
        $i36 = virtualinvoke r4.<ucar.ma2.Range: int last()>();

        if i35 > $i36 goto label24;

        $s7 = r1.<ucar.nc2.iosp.sigmet.Ray: short bins>;

        $i45 = (int) $s7;

        if i35 < $i45 goto label22;

        interfaceinvoke r5.<ucar.ma2.IndexIterator: void setFloatNext(float)>(#NaNF);

        goto label23;

     label22:
        $f0 = r3[i35];

        interfaceinvoke r5.<ucar.ma2.IndexIterator: void setFloatNext(float)>($f0);

     label23:
        $i8 = virtualinvoke r4.<ucar.ma2.Range: int stride()>();

        i35 = i35 + $i8;

        goto label21;

     label24:
        return;
    }
}
