public class org.jdesktop.swingx.decorator.ColorHighlighter extends org.jdesktop.swingx.decorator.AbstractHighlighter
{
    private java.awt.Color background;
    private java.awt.Color foreground;
    private java.awt.Color selectedBackground;
    private java.awt.Color selectedForeground;
    private boolean legacy;

    public void <init>()
    {
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)>(null);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)
    {
        org.jdesktop.swingx.decorator.HighlightPredicate r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color)>(r1, null, null);

        return;
    }

    public void <init>(java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color)>(null, r1, r2);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r2, r3;
        org.jdesktop.swingx.decorator.HighlightPredicate r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)>(r1, r2, r3, null, null);

        return;
    }

    public void <init>(java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2, r3, r4;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)>(null, r1, r2, r3, r4);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r2, r3, r4, r5;
        org.jdesktop.swingx.decorator.HighlightPredicate r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        r5 := @parameter4: java.awt.Color;

        specialinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)>(r1);

        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color background> = r2;

        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color foreground> = r3;

        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedBackground> = r4;

        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedForeground> = r5;

        return;
    }

    protected java.awt.Component doHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.ComponentAdapter r2;
        java.awt.Component r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void applyBackground(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r1, r2);

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void applyForeground(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r1, r2);

        return r1;
    }

    protected void applyBackground(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        java.awt.Color r2, $r4, $r5, $r6;
        org.jdesktop.swingx.decorator.ComponentAdapter r0;
        java.awt.Component r3;
        org.jdesktop.swingx.decorator.ColorHighlighter r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r3 := @parameter0: java.awt.Component;

        r0 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ComponentAdapter: boolean isSelected()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getSelectedBackground()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getBackground()>();

     label2:
        r2 = $r6;

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean isLegacy()>();

        if $z1 == 0 goto label3;

        if $r6 == null goto label3;

        virtualinvoke r3.<java.awt.Component: void setBackground(java.awt.Color)>($r6);

        goto label4;

     label3:
        $r4 = virtualinvoke r3.<java.awt.Component: java.awt.Color getBackground()>();

        $r5 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color blend(java.awt.Color,java.awt.Color)>($r4, r2);

        virtualinvoke r3.<java.awt.Component: void setBackground(java.awt.Color)>($r5);

     label4:
        return;
    }

    protected void applyForeground(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        java.awt.Color r2, $r4, $r5, $r6;
        org.jdesktop.swingx.decorator.ComponentAdapter r0;
        java.awt.Component r3;
        org.jdesktop.swingx.decorator.ColorHighlighter r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r3 := @parameter0: java.awt.Component;

        r0 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ComponentAdapter: boolean isSelected()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getSelectedForeground()>();

        goto label2;

     label1:
        $r6 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getForeground()>();

     label2:
        r2 = $r6;

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean isLegacy()>();

        if $z1 == 0 goto label3;

        if $r6 == null goto label3;

        virtualinvoke r3.<java.awt.Component: void setForeground(java.awt.Color)>($r6);

        goto label4;

     label3:
        $r4 = virtualinvoke r3.<java.awt.Component: java.awt.Color getForeground()>();

        $r5 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color blend(java.awt.Color,java.awt.Color)>($r4, r2);

        virtualinvoke r3.<java.awt.Component: void setForeground(java.awt.Color)>($r5);

     label4:
        return;
    }

    public java.awt.Color getBackground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color background>;

        return $r1;
    }

    public void setBackground(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getBackground()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color background> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void fireStateChanged()>();

        return;
    }

    public java.awt.Color getForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color foreground>;

        return $r1;
    }

    public void setForeground(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getForeground()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color foreground> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void fireStateChanged()>();

        return;
    }

    public java.awt.Color getSelectedBackground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedBackground>;

        return $r1;
    }

    public void setSelectedBackground(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getSelectedBackground()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedBackground> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void fireStateChanged()>();

        return;
    }

    public java.awt.Color getSelectedForeground()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedForeground>;

        return $r1;
    }

    public void setSelectedForeground(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        r1 := @parameter0: java.awt.Color;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color getSelectedForeground()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: java.awt.Color selectedForeground> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void fireStateChanged()>();

        return;
    }

    public boolean isLegacy()
    {
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        $z0 = r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean legacy>;

        return $z0;
    }

    public void setLegacy(boolean)
    {
        org.jdesktop.swingx.decorator.ColorHighlighter r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.decorator.ColorHighlighter;

        z0 := @parameter0: boolean;

        r0.<org.jdesktop.swingx.decorator.ColorHighlighter: boolean legacy> = z0;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.ColorHighlighter: void fireStateChanged()>();

        return;
    }
}
