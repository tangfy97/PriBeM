public interface  org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D getSimplePos();

    public abstract void setSimplePos(org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewSimplePos();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosH getPositionH();

    public abstract void setPositionH(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosH);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosH addNewPositionH();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosV getPositionV();

    public abstract void setPositionV(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosV);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTPosV addNewPositionV();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExtent();

    public abstract void setExtent(org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExtent();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTEffectExtent getEffectExtent();

    public abstract boolean isSetEffectExtent();

    public abstract void setEffectExtent(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTEffectExtent);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTEffectExtent addNewEffectExtent();

    public abstract void unsetEffectExtent();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapNone getWrapNone();

    public abstract boolean isSetWrapNone();

    public abstract void setWrapNone(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapNone);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapNone addNewWrapNone();

    public abstract void unsetWrapNone();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapSquare getWrapSquare();

    public abstract boolean isSetWrapSquare();

    public abstract void setWrapSquare(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapSquare);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapSquare addNewWrapSquare();

    public abstract void unsetWrapSquare();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTight getWrapTight();

    public abstract boolean isSetWrapTight();

    public abstract void setWrapTight(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTight);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTight addNewWrapTight();

    public abstract void unsetWrapTight();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapThrough getWrapThrough();

    public abstract boolean isSetWrapThrough();

    public abstract void setWrapThrough(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapThrough);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapThrough addNewWrapThrough();

    public abstract void unsetWrapThrough();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTopBottom getWrapTopAndBottom();

    public abstract boolean isSetWrapTopAndBottom();

    public abstract void setWrapTopAndBottom(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTopBottom);

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTWrapTopBottom addNewWrapTopAndBottom();

    public abstract void unsetWrapTopAndBottom();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps getDocPr();

    public abstract void setDocPr(org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewDocPr();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualGraphicFrameProperties getCNvGraphicFramePr();

    public abstract boolean isSetCNvGraphicFramePr();

    public abstract void setCNvGraphicFramePr(org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualGraphicFrameProperties);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualGraphicFrameProperties addNewCNvGraphicFramePr();

    public abstract void unsetCNvGraphicFramePr();

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject getGraphic();

    public abstract void setGraphic(org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject);

    public abstract org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObject addNewGraphic();

    public abstract long getDistT();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance xgetDistT();

    public abstract boolean isSetDistT();

    public abstract void setDistT(long);

    public abstract void xsetDistT(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance);

    public abstract void unsetDistT();

    public abstract long getDistB();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance xgetDistB();

    public abstract boolean isSetDistB();

    public abstract void setDistB(long);

    public abstract void xsetDistB(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance);

    public abstract void unsetDistB();

    public abstract long getDistL();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance xgetDistL();

    public abstract boolean isSetDistL();

    public abstract void setDistL(long);

    public abstract void xsetDistL(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance);

    public abstract void unsetDistL();

    public abstract long getDistR();

    public abstract org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance xgetDistR();

    public abstract boolean isSetDistR();

    public abstract void setDistR(long);

    public abstract void xsetDistR(org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.STWrapDistance);

    public abstract void unsetDistR();

    public abstract boolean getSimplePos2();

    public abstract org.apache.xmlbeans.XmlBoolean xgetSimplePos2();

    public abstract boolean isSetSimplePos2();

    public abstract void setSimplePos2(boolean);

    public abstract void xsetSimplePos2(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetSimplePos2();

    public abstract long getRelativeHeight();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetRelativeHeight();

    public abstract void setRelativeHeight(long);

    public abstract void xsetRelativeHeight(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract boolean getBehindDoc();

    public abstract org.apache.xmlbeans.XmlBoolean xgetBehindDoc();

    public abstract void setBehindDoc(boolean);

    public abstract void xsetBehindDoc(org.apache.xmlbeans.XmlBoolean);

    public abstract boolean getLocked();

    public abstract org.apache.xmlbeans.XmlBoolean xgetLocked();

    public abstract void setLocked(boolean);

    public abstract void xsetLocked(org.apache.xmlbeans.XmlBoolean);

    public abstract boolean getLayoutInCell();

    public abstract org.apache.xmlbeans.XmlBoolean xgetLayoutInCell();

    public abstract void setLayoutInCell(boolean);

    public abstract void xsetLayoutInCell(org.apache.xmlbeans.XmlBoolean);

    public abstract boolean getHidden();

    public abstract org.apache.xmlbeans.XmlBoolean xgetHidden();

    public abstract boolean isSetHidden();

    public abstract void setHidden(boolean);

    public abstract void xsetHidden(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetHidden();

    public abstract boolean getAllowOverlap();

    public abstract org.apache.xmlbeans.XmlBoolean xgetAllowOverlap();

    public abstract void setAllowOverlap(boolean);

    public abstract void xsetAllowOverlap(org.apache.xmlbeans.XmlBoolean);

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/drawingml/x2006/wordprocessingDrawing/CTAnchor;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("ctanchorff8atype");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.CTAnchor: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
