public class org.codehaus.groovy.ast.stmt.CatchStatement extends org.codehaus.groovy.ast.stmt.Statement
{
    private org.codehaus.groovy.ast.Parameter variable;
    private org.codehaus.groovy.ast.stmt.Statement code;

    public void <init>(org.codehaus.groovy.ast.Parameter, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r2;
        org.codehaus.groovy.ast.Parameter r1;
        org.codehaus.groovy.ast.stmt.CatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.CatchStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.Parameter;

        r2 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        r0.<org.codehaus.groovy.ast.stmt.CatchStatement: org.codehaus.groovy.ast.Parameter variable> = r1;

        r0.<org.codehaus.groovy.ast.stmt.CatchStatement: org.codehaus.groovy.ast.stmt.Statement code> = r2;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.stmt.CatchStatement r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.stmt.CatchStatement;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.stmt.Statement getCode()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.CatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.CatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.CatchStatement: org.codehaus.groovy.ast.stmt.Statement code>;

        return $r1;
    }

    public org.codehaus.groovy.ast.ClassNode getExceptionType()
    {
        org.codehaus.groovy.ast.Parameter $r1;
        org.codehaus.groovy.ast.stmt.CatchStatement r0;
        org.codehaus.groovy.ast.ClassNode $r2;

        r0 := @this: org.codehaus.groovy.ast.stmt.CatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.CatchStatement: org.codehaus.groovy.ast.Parameter variable>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.ast.Parameter: org.codehaus.groovy.ast.ClassNode getType()>();

        return $r2;
    }

    public org.codehaus.groovy.ast.Parameter getVariable()
    {
        org.codehaus.groovy.ast.Parameter $r1;
        org.codehaus.groovy.ast.stmt.CatchStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.CatchStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.CatchStatement: org.codehaus.groovy.ast.Parameter variable>;

        return $r1;
    }
}
