public final class com.ctc.wstx.io.TextEscaper extends java.lang.Object
{

    private void <init>()
    {
        com.ctc.wstx.io.TextEscaper r0;

        r0 := @this: com.ctc.wstx.io.TextEscaper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.Writer constructAttrValueWriter(java.io.Writer, java.lang.String, char) throws java.io.UnsupportedEncodingException
    {
        com.ctc.wstx.io.SingleByteAttrValueWriter $r3;
        int $i0, $i2;
        java.io.Writer r2;
        char c1;
        java.lang.String r0;
        com.ctc.wstx.io.UTFAttrValueWriter $r1;

        r2 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        c1 := @parameter2: char;

        $i0 = staticinvoke <com.ctc.wstx.io.TextEscaper: int guessEncodingBitSize(java.lang.String)>(r0);

        if $i0 >= 16 goto label1;

        $r3 = new com.ctc.wstx.io.SingleByteAttrValueWriter;

        $i2 = 1 << $i0;

        specialinvoke $r3.<com.ctc.wstx.io.SingleByteAttrValueWriter: void <init>(java.io.Writer,java.lang.String,char,int)>(r2, r0, c1, $i2);

        return $r3;

     label1:
        $r1 = new com.ctc.wstx.io.UTFAttrValueWriter;

        specialinvoke $r1.<com.ctc.wstx.io.UTFAttrValueWriter: void <init>(java.io.Writer,java.lang.String,char,boolean)>(r2, r0, c1, 1);

        return $r1;
    }

    public static java.io.Writer constructTextWriter(java.io.Writer, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        com.ctc.wstx.io.UTFTextWriter $r1;
        int $i0, $i1;
        java.io.Writer r2;
        java.lang.String r0;
        com.ctc.wstx.io.SingleByteTextWriter $r3;

        r2 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.ctc.wstx.io.TextEscaper: int guessEncodingBitSize(java.lang.String)>(r0);

        if $i0 >= 16 goto label1;

        $r3 = new com.ctc.wstx.io.SingleByteTextWriter;

        $i1 = 1 << $i0;

        specialinvoke $r3.<com.ctc.wstx.io.SingleByteTextWriter: void <init>(java.io.Writer,java.lang.String,int)>(r2, r0, $i1);

        return $r3;

     label1:
        $r1 = new com.ctc.wstx.io.UTFTextWriter;

        specialinvoke $r1.<com.ctc.wstx.io.UTFTextWriter: void <init>(java.io.Writer,java.lang.String,boolean)>(r2, r0, 1);

        return $r1;
    }

    public static void writeEscapedXMLText(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        int $i0, i1, $i3, $i5, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String r0;
        char $c2, $c4, $c6, $c7, $c8;
        java.io.Writer r1;

        r1 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= 2 goto label04;

        if $i0 != 1 goto label03;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i12 = (int) $c7;

        if $i12 != 60 goto label01;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label03;

     label01:
        $i13 = (int) $c7;

        if $i13 != 38 goto label02;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label03;

     label02:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i14 = (int) $c8;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i14);

     label03:
        return;

     label04:
        i9 = 0;

     label05:
        if i9 >= $i0 goto label14;

        i1 = i9;

        i10 = 0;

     label06:
        if i9 >= $i0 goto label09;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        i10 = $c2;

        $i15 = (int) $c2;

        if $i15 == 60 goto label09;

        $i16 = (int) $c2;

        if $i16 != 38 goto label07;

        goto label09;

     label07:
        $i17 = (int) $c2;

        if $i17 != 62 goto label08;

        if i9 < 2 goto label08;

        $i3 = i9 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i18 = (int) $c4;

        if $i18 != 93 goto label08;

        $i5 = i9 - 2;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $i19 = (int) $c6;

        if $i19 != 93 goto label08;

        goto label09;

     label08:
        i9 = i9 + 1;

        goto label06;

     label09:
        $i11 = i9 - i1;

        if $i11 <= 0 goto label10;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String,int,int)>(r0, i1, $i11);

     label10:
        if i9 >= $i0 goto label13;

        if i10 != 60 goto label11;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label13;

     label11:
        if i10 != 38 goto label12;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label13;

     label12:
        if i10 != 62 goto label13;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&gt;");

     label13:
        i9 = i9 + 1;

        goto label05;

     label14:
        return;
    }

    public static void writeEscapedAttrValue(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        char $c2;
        int $i0, i1, i3, i4, $i5, $i6, $i7, $i8;
        java.io.Writer r1;
        java.lang.String r0;

        r1 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        i3 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        i1 = i3;

        i4 = 0;

     label2:
        if i3 >= $i0 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        i4 = $c2;

        $i6 = (int) $c2;

        if $i6 == 60 goto label4;

        $i7 = (int) $c2;

        if $i7 == 38 goto label4;

        $i8 = (int) $c2;

        if $i8 != 34 goto label3;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i5 = i3 - i1;

        if $i5 <= 0 goto label5;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String,int,int)>(r0, i1, $i5);

     label5:
        if i3 >= $i0 goto label8;

        if i4 != 60 goto label6;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label8;

     label6:
        if i4 != 38 goto label7;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label8;

     label7:
        if i4 != 34 goto label8;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&quot;");

     label8:
        i3 = i3 + 1;

        if i3 < $i0 goto label1;

        return;
    }

    public static void outputDTDText(java.io.Writer, char[], int, int) throws java.io.IOException
    {
        int i0, i1, i2, i3, i4, i5, $i6;
        java.io.Writer r0;
        char[] r1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = i0;

        i4 = i2 + i0;

     label1:
        i1 = i3;

        i5 = 0;

     label2:
        if i3 >= i4 goto label4;

        i5 = r1[i3];

        if i5 == 38 goto label4;

        if i5 == 37 goto label4;

        if i5 != 34 goto label3;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i6 = i3 - i1;

        if $i6 <= 0 goto label5;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i1, $i6);

     label5:
        if i3 >= i4 goto label8;

        if i5 != 38 goto label6;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label8;

     label6:
        if i5 != 37 goto label7;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&#37;");

        goto label8;

     label7:
        if i5 != 34 goto label8;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&#34;");

     label8:
        i3 = i3 + 1;

        if i3 < i4 goto label1;

        return;
    }

    public static int guessEncodingBitSize(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= 1 goto label1;

        return 16;

     label1:
        $r0 = staticinvoke <com.ctc.wstx.io.CharsetNames: java.lang.String normalize(java.lang.String)>(r1);

        if $r0 != "UTF-8" goto label2;

        return 16;

     label2:
        if $r0 != "ISO-8859-1" goto label3;

        return 8;

     label3:
        if $r0 != "US-ASCII" goto label4;

        return 7;

     label4:
        if $r0 == "UTF-16" goto label5;

        if $r0 == "UTF-16BE" goto label5;

        if $r0 == "UTF-16LE" goto label5;

        if $r0 == "UTF-32BE" goto label5;

        if $r0 != "UTF-32LE" goto label6;

     label5:
        return 16;

     label6:
        return 8;
    }
}
