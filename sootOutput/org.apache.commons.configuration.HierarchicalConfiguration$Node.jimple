public class org.apache.commons.configuration.HierarchicalConfiguration$Node extends org.apache.commons.configuration.tree.DefaultConfigurationNode implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.commons.configuration.tree.DefaultConfigurationNode: void <init>(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void <init>(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        java.lang.String $r2;
        boolean $z0, $z1;
        java.util.Iterator $r6, $r8;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        org.apache.commons.configuration.tree.ConfigurationNode r1, $r10, $r12, r13, r14;
        java.util.List $r5, $r7;
        java.lang.Object $r3, $r4, $r9, $r11;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r2 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        $r3 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getValue()>();

        specialinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>(java.lang.String,java.lang.Object)>($r2, $r3);

        $r4 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.Object getReference()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setReference(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.commons.configuration.tree.ConfigurationNode) $r11;

        $r12 = interfaceinvoke r13.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r13);

        interfaceinvoke r13.<org.apache.commons.configuration.tree.ConfigurationNode: void setParentNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r12);

        goto label1;

     label2:
        $r7 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getAttributes()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.commons.configuration.tree.ConfigurationNode) $r9;

        $r10 = interfaceinvoke r14.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>(r14);

        interfaceinvoke r14.<org.apache.commons.configuration.tree.ConfigurationNode: void setParentNode(org.apache.commons.configuration.tree.ConfigurationNode)>($r10);

        goto label3;

     label4:
        return;
    }

    public org.apache.commons.configuration.HierarchicalConfiguration$Node getParent()
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0, $r2;
        org.apache.commons.configuration.tree.ConfigurationNode $r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: org.apache.commons.configuration.tree.ConfigurationNode getParentNode()>();

        $r2 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r1;

        return $r2;
    }

    public void setParent(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0, r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setParentNode(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        return;
    }

    public void addChild(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0, r1;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void addChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r1);

        return;
    }

    public boolean hasChildren()
    {
        int $i0, $i1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $i0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: int getChildrenCount()>();

        if $i0 > 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: int getAttributeCount()>();

        if $i1 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean remove(org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0, r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r0 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean isAttribute()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean removeAttribute(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

        goto label2;

     label1:
        $z1 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean removeChild(org.apache.commons.configuration.tree.ConfigurationNode)>(r0);

     label2:
        return $z1;
    }

    public boolean remove(java.lang.String)
    {
        org.apache.commons.configuration.HierarchicalConfiguration$Node r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean removeChild(java.lang.String)>(r1);

        $z1 = virtualinvoke r0.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean removeAttribute(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void visit(org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor, org.apache.commons.configuration.ConfigurationKey)
    {
        org.apache.commons.configuration.ConfigurationKey r0;
        int i0;
        java.lang.String $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor r1;
        java.util.Iterator $r4, $r16;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r2, $r6, $r8;
        java.util.List $r3, $r15;
        java.lang.Object $r5, $r7;

        r2 := @this: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor;

        r0 := @parameter1: org.apache.commons.configuration.ConfigurationKey;

        i0 = 0;

        if r0 == null goto label3;

        i0 = virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey: int length()>();

        $r9 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        if $r9 == null goto label3;

        $z2 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: boolean isAttribute()>();

        if $z2 == 0 goto label1;

        $r13 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        $r14 = staticinvoke <org.apache.commons.configuration.ConfigurationKey: java.lang.String constructAttributeKey(java.lang.String)>($r13);

        goto label2;

     label1:
        $r14 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

     label2:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(46);

        $r11 = <org.apache.commons.configuration.ConfigurationKey: java.lang.String ESCAPED_DELIMITER>;

        $r12 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r14, $r10, $r11);

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey: org.apache.commons.configuration.ConfigurationKey append(java.lang.String)>($r12);

     label3:
        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor: void visitBeforeChildren(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.ConfigurationKey)>(r2, r0);

        $r15 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getChildren()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $z1 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor: boolean terminate()>();

        if $z1 != 0 goto label5;

        $r7 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r7;

        virtualinvoke $r8.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void visit(org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor,org.apache.commons.configuration.ConfigurationKey)>(r1, r0);

        goto label4;

     label5:
        $r3 = virtualinvoke r2.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getAttributes()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor: boolean terminate()>();

        if $z0 != 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r5;

        virtualinvoke $r6.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void visit(org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor,org.apache.commons.configuration.ConfigurationKey)>(r1, r0);

        goto label6;

     label7:
        if r0 == null goto label8;

        virtualinvoke r0.<org.apache.commons.configuration.ConfigurationKey: void setLength(int)>(i0);

     label8:
        virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$NodeVisitor: void visitAfterChildren(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.ConfigurationKey)>(r2, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.HierarchicalConfiguration$Node: long serialVersionUID> = -6357500633536941775L;

        return;
    }
}
