public abstract class com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase extends com.hp.hpl.jena.sparql.engine.iterator.QueryIter2
{
    private com.hp.hpl.jena.sparql.engine.QueryIterator current;
    protected com.hp.hpl.jena.sparql.algebra.Table tableRight;
    protected com.hp.hpl.jena.sparql.expr.ExprList exprs;
    private com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.expr.ExprList, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.expr.ExprList r7;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r3;
        com.hp.hpl.jena.sparql.algebra.Table $r5;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, r2, $r4, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r7 := @parameter2: com.hp.hpl.jena.sparql.expr.ExprList;

        r3 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2, r3);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding> = null;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getRight()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.algebra.TableFactory: com.hp.hpl.jena.sparql.algebra.Table create(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r4);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight> = $r5;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getRight()>();

        interfaceinvoke $r6.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.expr.ExprList exprs> = r7;

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.algebra.Table, com.hp.hpl.jena.sparql.expr.ExprList, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.expr.ExprList r5;
        com.hp.hpl.jena.sparql.algebra.Table r2;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter1: com.hp.hpl.jena.sparql.algebra.Table;

        r5 := @parameter2: com.hp.hpl.jena.sparql.expr.ExprList;

        r3 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.sparql.algebra.Table: com.hp.hpl.jena.sparql.engine.QueryIterator iterator(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIter2: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, $r4, r3);

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding> = null;

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight> = r2;

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.expr.ExprList exprs> = r5;

        return;
    }

    protected boolean hasNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: boolean isFinished()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding>;

        if $r1 == null goto label2;

        return 1;

     label2:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding moveToNext()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding>;

        if $r3 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding moveToNextBinding()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, r2;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding>;

        if $r1 != null goto label1;

        $r3 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("moveToNextBinding: slot empty but hasNext was true)");

        throw $r3;

     label1:
        r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding>;

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding> = null;

        return r2;
    }

    protected void closeSubIterator()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.algebra.Table $r2, $r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: void performClose(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        if $r2 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.algebra.Table: void close()>();

     label1:
        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight> = null;

        return;
    }

    protected void requestSubCancel()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: void closeSubIterator()>();

        return;
    }

    private com.hp.hpl.jena.sparql.engine.binding.Binding moveToNext()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r7;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        if $r1 == null goto label3;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        $z0 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        return $r7;

     label2:
        $r5 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current> = null;

     label3:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator joinWorker()>();

        r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator current>;

        if $r3 != null goto label1;

        return null;
    }

    protected abstract com.hp.hpl.jena.sparql.engine.QueryIterator joinWorker();

    protected com.hp.hpl.jena.sparql.engine.QueryIterator leftJoinWorker()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        com.hp.hpl.jena.sparql.expr.ExprList $r5;
        com.hp.hpl.jena.sparql.algebra.Table $r4;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r6;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r2, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.expr.ExprList exprs>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r7 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.algebra.Table: com.hp.hpl.jena.sparql.engine.QueryIterator matchRightLeft(com.hp.hpl.jena.sparql.engine.binding.Binding,boolean,com.hp.hpl.jena.sparql.expr.ExprList,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r3, 1, $r5, $r6);

        return $r7;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator equiJoinWorker()
    {
        com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r8;
        com.hp.hpl.jena.sparql.expr.ExprList $r2;
        com.hp.hpl.jena.sparql.algebra.Table $r5;
        com.hp.hpl.jena.sparql.engine.ExecutionContext $r6;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r3, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.expr.ExprList exprs>;

        if $r2 == null goto label2;

        $r8 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>("QueryIterJoinBase: expression not empty for equiJoin");

        throw $r8;

     label2:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.QueryIterator getLeft()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: com.hp.hpl.jena.sparql.engine.binding.Binding nextBinding()>();

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.algebra.Table tableRight>;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.main.iterator.QueryIterJoinBase: com.hp.hpl.jena.sparql.engine.ExecutionContext getExecContext()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.algebra.Table: com.hp.hpl.jena.sparql.engine.QueryIterator matchRightLeft(com.hp.hpl.jena.sparql.engine.binding.Binding,boolean,com.hp.hpl.jena.sparql.expr.ExprList,com.hp.hpl.jena.sparql.engine.ExecutionContext)>($r4, 0, null, $r6);

        return $r7;
    }
}
