public class org.waveprotocol.wave.model.conversation.Blips extends java.lang.Object
{
    public static final java.lang.String ANNOTATION_PREFIX;
    public static final java.lang.String BODY_TAGNAME;
    public static final java.lang.String HEAD_TAGNAME;
    public static final java.lang.String TIMESTAMP_TAGNAME;
    public static final java.lang.String LAST_MODIFICATION_TIME_TAGNAME;
    public static final org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_HEAD;
    public static final org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_BODY;
    public static final org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_CONTENT;
    public static final java.lang.String THREAD_INLINE_ANCHOR_TAGNAME;
    public static final java.lang.String THREAD_INLINE_ANCHOR_ID_ATTR;
    public static final int INVALID_INLINE_LOCATION;

    public void <init>()
    {
        org.waveprotocol.wave.model.conversation.Blips r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.Blips;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object getBody(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        java.lang.Object $r2;
        java.lang.String $r1;
        org.waveprotocol.wave.model.document.ReadableDocument r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.util.LineContainers: java.lang.String topLevelContainerTagname()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.util.DocHelper: java.lang.Object getElementWithTagName(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public static void buildBlipHead(org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder)
    {
        org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder;

        return;
    }

    public static void buildEmptyBlipBody(org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder)
    {
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r1, $r3;
        org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder r0, $r2, $r4, $r5;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder;

        $r1 = <org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl EMPTY_MAP>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>("body", $r1);

        $r3 = <org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl EMPTY_MAP>;

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>("line", $r3);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder elementEnd()>();

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder: org.waveprotocol.wave.model.document.operation.impl.DocInitializationBuilder elementEnd()>();

        return;
    }

    public static void init()
    {
        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        <org.waveprotocol.wave.model.conversation.Blips: int INVALID_INLINE_LOCATION> = -1;

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String THREAD_INLINE_ANCHOR_ID_ATTR> = "id";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String THREAD_INLINE_ANCHOR_TAGNAME> = "reply";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String LAST_MODIFICATION_TIME_TAGNAME> = "lmt";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String TIMESTAMP_TAGNAME> = "timestamp";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String HEAD_TAGNAME> = "head";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String BODY_TAGNAME> = "body";

        <org.waveprotocol.wave.model.conversation.Blips: java.lang.String ANNOTATION_PREFIX> = "conv";

        staticinvoke <org.waveprotocol.wave.model.document.util.LineContainers: void setTopLevelContainerTagname(java.lang.String)>("body");

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_HEAD> = $r0;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String)>("line");

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String)>("body");

        <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_BODY> = $r3;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r5 = <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_HEAD>;

        $r6 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r5);

        $r7 = <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_BODY>;

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r7);

        <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_CONTENT> = $r8;

        return;
    }
}
