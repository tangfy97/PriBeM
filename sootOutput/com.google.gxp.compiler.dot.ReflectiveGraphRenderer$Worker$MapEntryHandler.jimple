class com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler extends java.lang.Object implements com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler
{
    final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0;

    private void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler r0;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isInlinable()
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        return 0;
    }

    public void handle(java.lang.String, java.util.Map$Entry)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler r0;
        com.google.gxp.compiler.dot.NodeShape $r4;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker $r1, $r5, $r8, $r11, $r13;
        java.lang.String r3, $r10, $r15;
        java.util.Map$Entry r7;
        com.google.gxp.compiler.dot.GraphSink $r2, $r6, $r12;
        java.lang.Object $r9, $r14;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.Map$Entry;

        $r1 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r1);

        $r4 = <com.google.gxp.compiler.dot.NodeShape: com.google.gxp.compiler.dot.NodeShape POINT>;

        interfaceinvoke $r2.<com.google.gxp.compiler.dot.GraphSink: void simpleNode(java.lang.String,com.google.gxp.compiler.dot.NodeShape,java.lang.String)>(r3, $r4, "");

        $r5 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r6 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r5);

        $r8 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = virtualinvoke $r8.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.lang.String renderSubgraph(java.lang.Object)>($r9);

        interfaceinvoke $r6.<com.google.gxp.compiler.dot.GraphSink: void edge(java.lang.String,java.lang.String,java.lang.String)>(r3, "key", $r10);

        $r11 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r12 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r11);

        $r13 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = virtualinvoke $r13.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.lang.String renderSubgraph(java.lang.Object)>($r14);

        interfaceinvoke $r12.<com.google.gxp.compiler.dot.GraphSink: void edge(java.lang.String,java.lang.String,java.lang.String)>(r3, "value", $r15);

        return;
    }

    public volatile void handle(java.lang.String, java.lang.Object)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler r0;
        java.util.Map$Entry $r3;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.util.Map$Entry) r2;

        virtualinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: void handle(java.lang.String,java.util.Map$Entry)>(r1, $r3);

        return;
    }

    void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker, com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler r0;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1 r2;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r2 := @parameter1: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1;

        specialinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>(r1);

        return;
    }
}
