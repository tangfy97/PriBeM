final class org.springframework.beans.BeanWrapperImpl$4 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final org.springframework.beans.BeanWrapperImpl this$0;
    private final java.lang.reflect.Method val$readMethod;

    void <init>(org.springframework.beans.BeanWrapperImpl, java.lang.reflect.Method)
    {
        org.springframework.beans.BeanWrapperImpl$4 r0;
        org.springframework.beans.BeanWrapperImpl r1;
        java.lang.reflect.Method r2;

        r0 := @this: org.springframework.beans.BeanWrapperImpl$4;

        r1 := @parameter0: org.springframework.beans.BeanWrapperImpl;

        r2 := @parameter1: java.lang.reflect.Method;

        r0.<org.springframework.beans.BeanWrapperImpl$4: org.springframework.beans.BeanWrapperImpl this$0> = r1;

        r0.<org.springframework.beans.BeanWrapperImpl$4: java.lang.reflect.Method val$readMethod> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run() throws java.lang.Exception
    {
        org.springframework.beans.BeanWrapperImpl$4 r0;
        java.lang.Object[] $r4;
        java.lang.Object $r3, $r5;
        org.springframework.beans.BeanWrapperImpl $r1;
        java.lang.reflect.Method $r2;

        r0 := @this: org.springframework.beans.BeanWrapperImpl$4;

        $r2 = r0.<org.springframework.beans.BeanWrapperImpl$4: java.lang.reflect.Method val$readMethod>;

        $r1 = r0.<org.springframework.beans.BeanWrapperImpl$4: org.springframework.beans.BeanWrapperImpl this$0>;

        $r3 = staticinvoke <org.springframework.beans.BeanWrapperImpl: java.lang.Object access$0(org.springframework.beans.BeanWrapperImpl)>($r1);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r4);

        return $r5;
    }
}
