public class org.apache.pdfbox.TextToPDF extends java.lang.Object
{
    private int fontSize;
    private org.apache.pdfbox.pdmodel.font.PDSimpleFont font;

    public void <init>()
    {
        org.apache.pdfbox.TextToPDF r0;
        org.apache.pdfbox.pdmodel.font.PDType1Font $r1;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.TextToPDF: int fontSize> = 10;

        $r1 = <org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.PDType1Font HELVETICA>;

        r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font> = $r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.PDDocument createPDFFromText(java.io.Reader) throws java.io.IOException
    {
        byte $b4, $b6;
        org.apache.pdfbox.TextToPDF r0;
        boolean z0;
        org.apache.pdfbox.pdmodel.PDDocument r28, $r31;
        org.apache.pdfbox.pdmodel.edit.PDPageContentStream r30, $r37;
        java.io.Reader r6;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14, f15, f16;
        java.lang.StringBuilder $r22, $r24, $r35;
        org.apache.pdfbox.pdmodel.PDPage r29, $r33, $r36;
        org.apache.pdfbox.pdmodel.font.PDSimpleFont $r1, $r18, $r26;
        java.lang.String[] $r11;
        org.apache.pdfbox.pdmodel.font.PDFontDescriptor $r2;
        java.lang.StringBuffer $r34;
        int $i0, $i1, $i2, $i3, $i5, $i7, i8, $i9, $i10;
        java.lang.String $r9, $r10, $r13, $r14, $r21, $r23, $r25;
        java.io.IOException $r27, $r38;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r3, $r8, $r19;
        java.io.BufferedReader $r32;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        r6 := @parameter0: java.io.Reader;

        r28 = null;

     label01:
        $r1 = r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: org.apache.pdfbox.pdmodel.font.PDFontDescriptor getFontDescriptor()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.font.PDFontDescriptor: org.apache.pdfbox.pdmodel.common.PDRectangle getFontBoundingBox()>();

        $f0 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        f13 = $f0 / 1000.0F;

        $i0 = r0.<org.apache.pdfbox.TextToPDF: int fontSize>;

        $f1 = (float) $i0;

        $f2 = f13 * $f1;

        f14 = $f2 * 1.05F;

        $r31 = new org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke $r31.<org.apache.pdfbox.pdmodel.PDDocument: void <init>()>();

        r28 = $r31;

        $r32 = new java.io.BufferedReader;

        specialinvoke $r32.<java.io.BufferedReader: void <init>(java.io.Reader)>(r6);

        $r33 = new org.apache.pdfbox.pdmodel.PDPage;

        specialinvoke $r33.<org.apache.pdfbox.pdmodel.PDPage: void <init>()>();

        r29 = $r33;

        r30 = null;

        f15 = -1.0F;

        $r8 = virtualinvoke $r33.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>();

        $f3 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        f4 = $f3 - 80.0F;

        z0 = 1;

     label02:
        $r9 = virtualinvoke $r32.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r9 == null goto label11;

        z0 = 0;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i8 = 0;

     label03:
        $i1 = lengthof $r11;

        if i8 >= $i1 goto label10;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        f16 = 0.0F;

     label04:
        $r13 = $r11[i8];

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i8 = i8 + 1;

        $i2 = lengthof $r11;

        if i8 >= $i2 goto label05;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = $r11[i8];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font>;

        $f10 = virtualinvoke $r26.<org.apache.pdfbox.pdmodel.font.PDSimpleFont: float getStringWidth(java.lang.String)>($r25);

        $f12 = $f10 / 1000.0F;

        $i7 = r0.<org.apache.pdfbox.TextToPDF: int fontSize>;

        $f11 = (float) $i7;

        f16 = $f12 * $f11;

     label05:
        $i3 = lengthof $r11;

        if i8 >= $i3 goto label06;

        $b6 = f16 cmpg f4;

        $i9 = (int) $b6;

        if $i9 < 0 goto label04;

     label06:
        $b4 = f15 cmpg 40.0F;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label08;

        $r36 = new org.apache.pdfbox.pdmodel.PDPage;

        specialinvoke $r36.<org.apache.pdfbox.pdmodel.PDPage: void <init>()>();

        r29 = $r36;

        virtualinvoke $r31.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>($r36);

        if r30 == null goto label07;

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void endText()>();

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void close()>();

     label07:
        $r37 = new org.apache.pdfbox.pdmodel.edit.PDPageContentStream;

        specialinvoke $r37.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)>($r31, $r36);

        r30 = $r37;

        $r18 = r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font>;

        $i5 = r0.<org.apache.pdfbox.TextToPDF: int fontSize>;

        $f6 = (float) $i5;

        virtualinvoke $r37.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)>($r18, $f6);

        virtualinvoke $r37.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void beginText()>();

        $r19 = virtualinvoke $r36.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>();

        $f7 = virtualinvoke $r19.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f8 = $f7 - 40.0F;

        $f9 = $f8 + f14;

        f15 = $f9;

        virtualinvoke $r37.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void moveTextPositionByAmount(float,float)>(40.0F, $f9);

     label08:
        if r30 != null goto label09;

        $r38 = new java.io.IOException;

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>("Error:Expected non-null content stream.");

        throw $r38;

     label09:
        $f5 = neg f14;

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void moveTextPositionByAmount(float,float)>(0.0F, $f5);

        f15 = f15 - f14;

        $r14 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void drawString(java.lang.String)>($r14);

        goto label03;

     label10:
        goto label02;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke $r31.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>(r29);

     label12:
        if r30 == null goto label13;

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void endText()>();

        virtualinvoke r30.<org.apache.pdfbox.pdmodel.edit.PDPageContentStream: void close()>();

     label13:
        goto label16;

     label14:
        $r27 := @caughtexception;

        if r28 == null goto label15;

        virtualinvoke r28.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label15:
        throw $r27;

     label16:
        return $r31;

        catch java.io.IOException from label01 to label13 with label14;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDType1Font $r20;
        org.apache.pdfbox.TextToPDF $r0;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.pdmodel.PDDocument $r4, r23;
        org.apache.pdfbox.pdmodel.font.PDTrueTypeFont $r18;
        java.lang.Exception $r22;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.Throwable $r21;
        java.lang.String[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.String $r3, $r5, $r6, $r7, $r8, $r12, $r14, $r15, $r17, $r19;
        java.io.IOException $r9;
        java.io.File $r16;
        java.io.FileReader $r2;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.pdfbox.TextToPDF;

        specialinvoke $r0.<org.apache.pdfbox.TextToPDF: void <init>()>();

        r23 = null;

     label01:
        $i0 = lengthof r1;

        if $i0 >= 2 goto label02;

        specialinvoke $r0.<org.apache.pdfbox.TextToPDF: void usage()>();

        goto label09;

     label02:
        i8 = 0;

     label03:
        $i1 = lengthof r1;

        $i2 = $i1 - 2;

        if i8 >= $i2 goto label08;

        $r6 = r1[i8];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("-standardFont");

        if $z0 == 0 goto label04;

        i9 = i8 + 1;

        $r19 = r1[i9];

        $r20 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.PDType1Font getStandardFont(java.lang.String)>($r19);

        virtualinvoke $r0.<org.apache.pdfbox.TextToPDF: void setFont(org.apache.pdfbox.pdmodel.font.PDSimpleFont)>($r20);

        goto label07;

     label04:
        $r7 = r1[i8];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("-ttf");

        if $z1 == 0 goto label05;

        i9 = i8 + 1;

        $r16 = new java.io.File;

        $r17 = r1[i9];

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);

        $r18 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)>(null, $r16);

        virtualinvoke $r0.<org.apache.pdfbox.TextToPDF: void setFont(org.apache.pdfbox.pdmodel.font.PDSimpleFont)>($r18);

        goto label07;

     label05:
        $r8 = r1[i8];

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("-fontSize");

        if $z2 == 0 goto label06;

        i9 = i8 + 1;

        $r15 = r1[i9];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        virtualinvoke $r0.<org.apache.pdfbox.TextToPDF: void setFontSize(int)>($i7);

        goto label07;

     label06:
        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument:");

        $r12 = r1[i8];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label07:
        i8 = i9 + 1;

        goto label03;

     label08:
        $r2 = new java.io.FileReader;

        $i3 = lengthof r1;

        $i4 = $i3 - 1;

        $r3 = r1[$i4];

        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.PDDocument createPDFFromText(java.io.Reader)>($r2);

        r23 = $r4;

        $i5 = lengthof r1;

        $i6 = $i5 - 2;

        $r5 = r1[$i6];

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r5);

     label09:
        if r23 == null goto label15;

        virtualinvoke r23.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label15;

     label10:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

     label11:
        if r23 == null goto label15;

        virtualinvoke r23.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label15;

     label12:
        $r21 := @caughtexception;

     label13:
        if r23 == null goto label14;

        virtualinvoke r23.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label14:
        throw $r21;

     label15:
        return;

        catch java.lang.Exception from label01 to label09 with label10;
        catch java.lang.Throwable from label01 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void usage()
    {
        java.lang.String[] $r0;
        org.apache.pdfbox.pdmodel.font.PDType1Font $r5;
        org.apache.pdfbox.TextToPDF r17;
        int $i0, i1;
        java.lang.String $r6, $r8, $r14, $r16;
        java.io.PrintStream $r1, $r3, $r9, $r10, $r12;
        java.lang.StringBuilder $r2, $r4, $r7, $r11, $r13, $r15;

        r17 := @this: org.apache.pdfbox.TextToPDF;

        $r0 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String[] getStandard14Names()>();

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("usage: jar -jar pdfbox-app-x.y.z.jar TextToPDF [options] <output-file> <text-file>");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    -standardFont <name>    default:");

        $r5 = <org.apache.pdfbox.pdmodel.font.PDType1Font: org.apache.pdfbox.pdmodel.font.PDType1Font HELVETICA>;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.font.PDType1Font: java.lang.String getBaseFont()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

        i1 = 0;

     label1:
        $i0 = lengthof $r0;

        if i1 >= $i0 goto label2;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("                                    ");

        $r14 = $r0[i1];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("    -ttf <ttf file>         The TTF font to use.");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("    -fontSize <fontSize>    default:10");

        return;
    }

    public org.apache.pdfbox.pdmodel.font.PDSimpleFont getFont()
    {
        org.apache.pdfbox.pdmodel.font.PDSimpleFont $r1;
        org.apache.pdfbox.TextToPDF r0;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        $r1 = r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font>;

        return $r1;
    }

    public void setFont(org.apache.pdfbox.pdmodel.font.PDSimpleFont)
    {
        org.apache.pdfbox.pdmodel.font.PDSimpleFont r1;
        org.apache.pdfbox.TextToPDF r0;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.font.PDSimpleFont;

        r0.<org.apache.pdfbox.TextToPDF: org.apache.pdfbox.pdmodel.font.PDSimpleFont font> = r1;

        return;
    }

    public int getFontSize()
    {
        int $i0;
        org.apache.pdfbox.TextToPDF r0;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        $i0 = r0.<org.apache.pdfbox.TextToPDF: int fontSize>;

        return $i0;
    }

    public void setFontSize(int)
    {
        int i0;
        org.apache.pdfbox.TextToPDF r0;

        r0 := @this: org.apache.pdfbox.TextToPDF;

        i0 := @parameter0: int;

        r0.<org.apache.pdfbox.TextToPDF: int fontSize> = i0;

        return;
    }
}
