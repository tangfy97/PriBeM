public class com.jhlabs.vecmath.Tuple3f extends java.lang.Object
{
    public float x;
    public float y;
    public float z;

    public void <init>()
    {
        com.jhlabs.vecmath.Tuple3f r0;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple3f: void <init>(float,float,float)>(0.0F, 0.0F, 0.0F);

        return;
    }

    public void <init>(float[])
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float $f0, $f1, $f2;
        float[] r1;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: float[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f0 = r1[0];

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1[1];

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void <init>(float, float, float)
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float f0, f1, f2;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = f1;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = f2;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void absolute()
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        $f0 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f1;

        $f2 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f3;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f5;

        return;
    }

    public void absolute(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f3;

        $f4 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f5;

        return;
    }

    public void clamp(float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        int $i6, $i7, $i8, $i9, $i10, $i11;
        com.jhlabs.vecmath.Tuple3f r0;
        float f0, $f1, f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        f2 := @parameter1: float;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $b0 = $f1 cmpg f0;

        $i6 = (int) $b0;

        if $i6 >= 0 goto label1;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = f0;

        goto label2;

     label1:
        $f3 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $b1 = $f3 cmpl f2;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label2;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = f2;

     label2:
        $f6 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $b4 = $f6 cmpg f0;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label3;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = f0;

        goto label4;

     label3:
        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $b2 = $f4 cmpl f2;

        $i9 = (int) $b2;

        if $i9 <= 0 goto label4;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = f2;

     label4:
        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $b5 = $f7 cmpg f0;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label5;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = f0;

        goto label6;

     label5:
        $f5 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $b3 = $f5 cmpl f2;

        $i11 = (int) $b3;

        if $i11 <= 0 goto label6;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = f2;

     label6:
        return;
    }

    public void set(float, float, float)
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float f0, f1, f2;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = f1;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = f2;

        return;
    }

    public void set(float[])
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float $f0, $f1, $f2;
        float[] r1;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: float[];

        $f0 = r1[0];

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1[1];

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void set(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void get(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2;

        r1 := @this: com.jhlabs.vecmath.Tuple3f;

        r0 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void get(float[])
    {
        com.jhlabs.vecmath.Tuple3f r1;
        float $f0, $f1, $f2;
        float[] r0;

        r1 := @this: com.jhlabs.vecmath.Tuple3f;

        r0 := @parameter0: float[];

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0[0] = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0[1] = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0[2] = $f2;

        return;
    }

    public void negate()
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        $f0 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f1 = neg $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f1;

        $f2 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = neg $f2;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f3;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f5 = neg $f4;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f5;

        return;
    }

    public void negate(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f1 = neg $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = neg $f2;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f3;

        $f4 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f5 = neg $f4;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f5;

        return;
    }

    public void interpolate(com.jhlabs.vecmath.Tuple3f, float)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter1: float;

        f1 = 1.0F - f0;

        $f2 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f5 = f1 * $f2;

        $f3 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f4 = f0 * $f3;

        $f6 = $f5 + $f4;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f6;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f10 = f1 * $f7;

        $f8 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f9 = f0 * $f8;

        $f11 = $f10 + $f9;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f11;

        $f12 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f15 = f1 * $f12;

        $f13 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f14 = f0 * $f13;

        $f16 = $f15 + $f14;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f16;

        return;
    }

    public void scale(float)
    {
        com.jhlabs.vecmath.Tuple3f r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 * f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f2;

        $f3 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f4 = $f3 * f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f4;

        $f5 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = $f5 * f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f6;

        return;
    }

    public void add(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 + $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f2;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f5 = $f4 + $f3;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f5;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f8 = $f7 + $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f8;

        return;
    }

    public void add(com.jhlabs.vecmath.Tuple3f, com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1, r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        r2 := @parameter1: com.jhlabs.vecmath.Tuple3f;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r2.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 + $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f2;

        $f4 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r2.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f5 = $f4 + $f3;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f5;

        $f7 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r2.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f8 = $f7 + $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f8;

        return;
    }

    public void sub(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 - $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f2;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f5 = $f4 - $f3;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f5;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f8 = $f7 - $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f8;

        return;
    }

    public void sub(com.jhlabs.vecmath.Tuple3f, com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1, r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        r2 := @parameter1: com.jhlabs.vecmath.Tuple3f;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r2.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 - $f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f2;

        $f4 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r2.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f5 = $f4 - $f3;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f5;

        $f7 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r2.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f8 = $f7 - $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f8;

        return;
    }

    public void scaleAdd(float, com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        r1 := @parameter1: com.jhlabs.vecmath.Tuple3f;

        $f3 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = f0 * $f1;

        $f4 = $f3 + $f2;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f4;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f5 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f6 = f0 * $f5;

        $f8 = $f7 + $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f8;

        $f11 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f9 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f10 = f0 * $f9;

        $f12 = $f11 + $f10;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f12;

        return;
    }

    public void scaleAdd(float, com.jhlabs.vecmath.Tuple3f, com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Tuple3f r0, r1, r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: com.jhlabs.vecmath.Tuple3f;

        f0 := @parameter0: float;

        r1 := @parameter1: com.jhlabs.vecmath.Tuple3f;

        r2 := @parameter2: com.jhlabs.vecmath.Tuple3f;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f3 = f0 * $f1;

        $f2 = r2.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f4 = $f3 + $f2;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f4;

        $f5 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f7 = f0 * $f5;

        $f6 = r2.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f8 = $f7 + $f6;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f8;

        $f9 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f11 = f0 * $f9;

        $f10 = r2.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f12 = $f11 + $f10;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f12;

        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.vecmath.Tuple3f r2;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2;
        java.lang.String $r9;

        r2 := @this: com.jhlabs.vecmath.Tuple3f;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $f0 = r2.<com.jhlabs.vecmath.Tuple3f: float x>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $f1 = r2.<com.jhlabs.vecmath.Tuple3f: float y>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $f2 = r2.<com.jhlabs.vecmath.Tuple3f: float z>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
