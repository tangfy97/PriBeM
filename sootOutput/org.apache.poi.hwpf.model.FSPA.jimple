public final class org.apache.poi.hwpf.model.FSPA extends org.apache.poi.hwpf.model.types.FSPAAbstractType
{
    public static final int FSPA_SIZE;

    public void <init>()
    {
        org.apache.poi.hwpf.model.FSPA r0;

        r0 := @this: org.apache.poi.hwpf.model.FSPA;

        specialinvoke r0.<org.apache.poi.hwpf.model.types.FSPAAbstractType: void <init>()>();

        return;
    }

    public void <init>(byte[], int)
    {
        int i0;
        org.apache.poi.hwpf.model.FSPA r0;
        byte[] r1;

        r0 := @this: org.apache.poi.hwpf.model.FSPA;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.poi.hwpf.model.types.FSPAAbstractType: void <init>()>();

        virtualinvoke r0.<org.apache.poi.hwpf.model.FSPA: void fillFields(byte[],int)>(r1, i0);

        return;
    }

    public byte[] toByteArray()
    {
        int $i0;
        byte[] r0;
        org.apache.poi.hwpf.model.FSPA r1;

        r1 := @this: org.apache.poi.hwpf.model.FSPA;

        $i0 = <org.apache.poi.hwpf.model.FSPA: int FSPA_SIZE>;

        r0 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.poi.hwpf.model.FSPA: void serialize(byte[],int)>(r0, 0);

        return r0;
    }

    static void <clinit>()
    {
        int $i0;

        $i0 = staticinvoke <org.apache.poi.hwpf.model.FSPA: int getSize()>();

        <org.apache.poi.hwpf.model.FSPA: int FSPA_SIZE> = $i0;

        return;
    }
}
