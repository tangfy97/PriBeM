class org.waveprotocol.box.server.waveserver.WaveServerModule$1 extends java.lang.Object implements org.waveprotocol.box.server.waveserver.LocalWaveletContainer$Factory
{
    final org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore;
    final org.waveprotocol.box.server.waveserver.WaveServerModule this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveServerModule, org.waveprotocol.box.server.waveserver.DeltaStore)
    {
        org.waveprotocol.box.server.waveserver.WaveServerModule r1;
        org.waveprotocol.box.server.waveserver.DeltaStore r2;
        org.waveprotocol.box.server.waveserver.WaveServerModule$1 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveServerModule;

        r2 := @parameter1: org.waveprotocol.box.server.waveserver.DeltaStore;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.WaveServerModule this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.box.server.waveserver.LocalWaveletContainer create(org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber, org.waveprotocol.wave.model.id.WaveletName, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName r1;
        com.google.common.util.concurrent.ListenableFuture $r9;
        java.util.concurrent.Executor $r5, $r8, $r12;
        org.waveprotocol.box.server.waveserver.LocalWaveletContainerImpl $r0;
        org.waveprotocol.box.server.waveserver.WaveServerModule$1 r3;
        org.waveprotocol.box.server.waveserver.WaveServerModule $r4, $r6, $r11;
        org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber r2;
        org.waveprotocol.box.server.waveserver.DeltaStore $r7;
        java.lang.String r10;

        r3 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$1;

        r2 := @parameter0: org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        r10 := @parameter2: java.lang.String;

        $r0 = new org.waveprotocol.box.server.waveserver.LocalWaveletContainerImpl;

        $r4 = r3.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.WaveServerModule this$0>;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerModule: java.util.concurrent.Executor access$000(org.waveprotocol.box.server.waveserver.WaveServerModule)>($r4);

        $r7 = r3.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.DeltaStore val$deltaStore>;

        $r6 = r3.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.WaveServerModule this$0>;

        $r8 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerModule: java.util.concurrent.Executor access$100(org.waveprotocol.box.server.waveserver.WaveServerModule)>($r6);

        $r9 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerModule: com.google.common.util.concurrent.ListenableFuture loadWaveletState(java.util.concurrent.Executor,org.waveprotocol.box.server.waveserver.DeltaStore,org.waveprotocol.wave.model.id.WaveletName,java.util.concurrent.Executor)>($r5, $r7, r1, $r8);

        $r11 = r3.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.WaveServerModule this$0>;

        $r12 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerModule: java.util.concurrent.Executor access$200(org.waveprotocol.box.server.waveserver.WaveServerModule)>($r11);

        specialinvoke $r0.<org.waveprotocol.box.server.waveserver.LocalWaveletContainerImpl: void <init>(org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber,com.google.common.util.concurrent.ListenableFuture,java.lang.String,java.util.concurrent.Executor)>(r1, r2, $r9, r10, $r12);

        return $r0;
    }

    public volatile org.waveprotocol.box.server.waveserver.WaveletContainer create(org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber, org.waveprotocol.wave.model.id.WaveletName, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.box.server.waveserver.LocalWaveletContainer $r4;
        org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber r1;
        java.lang.String r3;
        org.waveprotocol.box.server.waveserver.WaveServerModule$1 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerModule$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.WaveServerModule$1: org.waveprotocol.box.server.waveserver.LocalWaveletContainer create(org.waveprotocol.box.server.waveserver.WaveletNotificationSubscriber,org.waveprotocol.wave.model.id.WaveletName,java.lang.String)>(r1, r2, r3);

        return $r4;
    }
}
