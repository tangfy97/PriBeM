public class org.apache.jute.compiler.JField extends java.lang.Object
{
    private org.apache.jute.compiler.JType mType;
    private java.lang.String mName;

    public void <init>(org.apache.jute.compiler.JType, java.lang.String)
    {
        java.lang.String r2;
        org.apache.jute.compiler.JType r1;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        r1 := @parameter0: org.apache.jute.compiler.JType;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType> = r1;

        r0.<org.apache.jute.compiler.JField: java.lang.String mName> = r2;

        return;
    }

    public java.lang.String getSignature()
    {
        java.lang.String $r2;
        org.apache.jute.compiler.JType $r1;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String getSignature()>();

        return $r2;
    }

    public java.lang.String genCppDecl()
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genCppDecl(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String genCDecl()
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genCDecl(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String genCsharpDecl()
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genCsharpDecl(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String genCsharpConstructorParam(java.lang.String)
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genCsharpConstructorParam(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String genJavaDecl()
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genJavaDecl(java.lang.String)>($r1);

        return $r3;
    }

    public java.lang.String genJavaConstructorParam(java.lang.String)
    {
        org.apache.jute.compiler.JType $r2;
        java.lang.String r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genJavaConstructorParam(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        return $r1;
    }

    public java.lang.String getCsharpName()
    {
        java.lang.String $r1, $r2, $r3;
        org.apache.jute.compiler.JField r0;
        boolean $z0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r2 = "Id";

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = "ZKId";

        goto label2;

     label1:
        $r3 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

     label2:
        return $r3;
    }

    public java.lang.String getTag()
    {
        java.lang.String $r1;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        return $r1;
    }

    public org.apache.jute.compiler.JType getType()
    {
        org.apache.jute.compiler.JType $r1;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        return $r1;
    }

    public java.lang.String genCppGetSet(int)
    {
        org.apache.jute.compiler.JType $r2;
        int i0;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genCppGetSet(java.lang.String,int)>($r1, i0);

        return $r3;
    }

    public java.lang.String genCsharpConstructorSet(java.lang.String)
    {
        org.apache.jute.compiler.JType $r3;
        java.lang.String r1, $r2, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r4 = virtualinvoke $r3.<org.apache.jute.compiler.JType: java.lang.String genCsharpConstructorSet(java.lang.String,java.lang.String)>($r2, r1);

        return $r4;
    }

    public java.lang.String genCsharpGetSet(int)
    {
        org.apache.jute.compiler.JType $r1;
        int i0;
        java.lang.String $r2, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpGetSet(java.lang.String,int)>($r2, i0);

        return $r3;
    }

    public java.lang.String genCsharpWriteMethodName()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r4 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpWriteMethod(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String genCsharpReadMethodName()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r4 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpReadMethod(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String genCsharpCompareTo()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpCompareTo(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String genCsharpEquals()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7, $r8;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("peer.");

        $r5 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpEquals(java.lang.String,java.lang.String)>($r2, $r7);

        return $r8;
    }

    public java.lang.String genCsharpHashCode()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r3 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genCsharpHashCode(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String genJavaGetSet(int)
    {
        org.apache.jute.compiler.JType $r2;
        int i0;
        java.lang.String $r1, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r1 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r3 = virtualinvoke $r2.<org.apache.jute.compiler.JType: java.lang.String genJavaGetSet(java.lang.String,int)>($r1, i0);

        return $r3;
    }

    public java.lang.String genJavaWriteMethodName()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r4 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genJavaWriteMethod(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String genJavaReadMethodName()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r4 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genJavaReadMethod(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String genJavaCompareTo()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genJavaCompareTo(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String genJavaEquals()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7, $r8;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("peer.");

        $r5 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genJavaEquals(java.lang.String,java.lang.String)>($r2, $r7);

        return $r8;
    }

    public java.lang.String genJavaHashCode()
    {
        org.apache.jute.compiler.JType $r1;
        java.lang.String $r2, $r3;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        $r1 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<org.apache.jute.compiler.JType: java.lang.String genJavaHashCode(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String genJavaConstructorSet(java.lang.String)
    {
        org.apache.jute.compiler.JType $r3;
        java.lang.String r1, $r2, $r4;
        org.apache.jute.compiler.JField r0;

        r0 := @this: org.apache.jute.compiler.JField;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType mType>;

        $r2 = r0.<org.apache.jute.compiler.JField: java.lang.String mName>;

        $r4 = virtualinvoke $r3.<org.apache.jute.compiler.JType: java.lang.String genJavaConstructorSet(java.lang.String,java.lang.String)>($r2, r1);

        return $r4;
    }
}
