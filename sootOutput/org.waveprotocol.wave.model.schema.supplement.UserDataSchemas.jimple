public class org.waveprotocol.wave.model.schema.supplement.UserDataSchemas extends java.lang.Object implements org.waveprotocol.wave.model.schema.SchemaProvider
{
    private final org.waveprotocol.wave.model.util.StringMap schemas;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_FOLDER;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ARCHIVE;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_MUTE;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_CLEARED;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_PRESENTATION;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_READ;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_SEEN;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_GADGET;
    public static final org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ABUSE;

    public void <init>()
    {
        org.waveprotocol.wave.model.util.StringMap $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: org.waveprotocol.wave.model.schema.supplement.UserDataSchemas;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas> = $r1;

        $r3 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r2 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_READ>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/read", $r2);

        $r5 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r4 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ARCHIVE>;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/archiving", $r4);

        $r7 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r6 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_FOLDER>;

        interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/folder", $r6);

        $r9 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r8 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_MUTE>;

        interfaceinvoke $r9.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/muted", $r8);

        $r11 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r10 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_PRESENTATION>;

        interfaceinvoke $r11.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/presentation", $r10);

        $r13 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r12 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_CLEARED>;

        interfaceinvoke $r13.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/cleared", $r12);

        $r15 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r14 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_SEEN>;

        interfaceinvoke $r15.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/seen", $r14);

        $r17 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r16 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_GADGET>;

        interfaceinvoke $r17.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/gadgets", $r16);

        $r19 = r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r18 = <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ABUSE>;

        interfaceinvoke $r19.<org.waveprotocol.wave.model.util.StringMap: void put(java.lang.String,java.lang.Object)>("m/abuse", $r18);

        return;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema getSchemaForId(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r1, $r7;
        org.waveprotocol.wave.model.id.WaveletId r0;
        org.waveprotocol.wave.model.util.StringMap $r4, $r5;
        java.lang.Object $r6;
        java.lang.String r3;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.schema.supplement.UserDataSchemas;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.waveprotocol.wave.model.id.IdUtil: boolean isUserDataWavelet(org.waveprotocol.wave.model.id.WaveletId)>(r0);

        if $z0 == 0 goto label1;

        $r4 = r2.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $z1 = interfaceinvoke $r4.<org.waveprotocol.wave.model.util.StringMap: boolean containsKey(java.lang.String)>(r3);

        if $z1 == 0 goto label1;

        $r5 = r2.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.util.StringMap schemas>;

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r3);

        $r7 = (org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema) $r6;

        return $r7;

     label1:
        $r1 = <org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema NO_SCHEMA_CONSTRAINTS>;

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$5 $r4;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$4 $r3;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$3 $r2;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$2 $r1;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$1 $r0;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9 $r8;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$8 $r7;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$7 $r6;
        org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$6 $r5;

        $r0 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$1: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_FOLDER> = $r0;

        $r1 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$2: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ARCHIVE> = $r1;

        $r2 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$3;

        specialinvoke $r2.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$3: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_MUTE> = $r2;

        $r3 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$4;

        specialinvoke $r3.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$4: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_CLEARED> = $r3;

        $r4 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$5;

        specialinvoke $r4.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$5: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_PRESENTATION> = $r4;

        $r5 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$6;

        specialinvoke $r5.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$6: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_READ> = $r5;

        $r6 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$7;

        specialinvoke $r6.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$7: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_SEEN> = $r6;

        $r7 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$8;

        specialinvoke $r7.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$8: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_GADGET> = $r7;

        $r8 = new org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9;

        specialinvoke $r8.<org.waveprotocol.wave.model.schema.supplement.UserDataSchemas$9: void <init>()>();

        <org.waveprotocol.wave.model.schema.supplement.UserDataSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema UDW_ABUSE> = $r8;

        return;
    }
}
