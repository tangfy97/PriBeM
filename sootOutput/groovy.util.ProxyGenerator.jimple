public class groovy.util.ProxyGenerator extends java.lang.Object
{
    public static final groovy.util.ProxyGenerator INSTANCE;
    private java.lang.ClassLoader override;
    private boolean debug;
    private boolean emptyMethods;
    private java.util.List objectMethods;
    private java.util.List groovyObjectMethods;
    static java.lang.Class class$groovy$util$ProxyGenerator;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$groovy$lang$GroovyObject;
    static java.lang.Class class$groovy$lang$GroovyObjectSupport;

    public void <init>()
    {
        java.util.List $r2, $r4;
        groovy.util.ProxyGenerator r0;
        java.lang.Class $r1, $r3, $r5, $r6;

        r0 := @this: groovy.util.ProxyGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.util.ProxyGenerator: java.lang.ClassLoader override> = null;

        r0.<groovy.util.ProxyGenerator: boolean debug> = 0;

        r0.<groovy.util.ProxyGenerator: boolean emptyMethods> = 0;

        $r1 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

     label2:
        $r2 = specialinvoke r0.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>($r5);

        r0.<groovy.util.ProxyGenerator: java.util.List objectMethods> = $r2;

        $r3 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r3 != null goto label3;

        $r6 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

     label4:
        $r4 = specialinvoke r0.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>($r6);

        r0.<groovy.util.ProxyGenerator: java.util.List groovyObjectMethods> = $r4;

        return;
    }

    public boolean getDebug()
    {
        groovy.util.ProxyGenerator r0;
        boolean $z0;

        r0 := @this: groovy.util.ProxyGenerator;

        $z0 = r0.<groovy.util.ProxyGenerator: boolean debug>;

        return $z0;
    }

    public void setDebug(boolean)
    {
        groovy.util.ProxyGenerator r0;
        boolean z0;

        r0 := @this: groovy.util.ProxyGenerator;

        z0 := @parameter0: boolean;

        r0.<groovy.util.ProxyGenerator: boolean debug> = z0;

        return;
    }

    public boolean getEmptyMethods()
    {
        groovy.util.ProxyGenerator r0;
        boolean $z0;

        r0 := @this: groovy.util.ProxyGenerator;

        $z0 = r0.<groovy.util.ProxyGenerator: boolean emptyMethods>;

        return $z0;
    }

    public void setEmptyMethods(boolean)
    {
        groovy.util.ProxyGenerator r0;
        boolean z0;

        r0 := @this: groovy.util.ProxyGenerator;

        z0 := @parameter0: boolean;

        r0.<groovy.util.ProxyGenerator: boolean emptyMethods> = z0;

        return;
    }

    public java.lang.ClassLoader getOverride()
    {
        java.lang.ClassLoader $r1;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        $r1 = r0.<groovy.util.ProxyGenerator: java.lang.ClassLoader override>;

        return $r1;
    }

    public void setOverride(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<groovy.util.ProxyGenerator: java.lang.ClassLoader override> = r1;

        return;
    }

    public java.lang.Object instantiateAggregateFromBaseClass(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregateFromBaseClass(java.util.Map,java.lang.Class)>(null, r1);

        return $r2;
    }

    public java.lang.Object instantiateAggregateFromBaseClass(java.util.Map, java.lang.Class)
    {
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregateFromBaseClass(java.util.Map,java.lang.Class,java.lang.Object[])>(r1, r2, null);

        return $r3;
    }

    public java.lang.Object instantiateAggregateFromBaseClass(java.util.Map, java.lang.Class, java.lang.Object[])
    {
        java.lang.Object[] r3;
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Class r2;
        java.lang.Object $r4;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregate(java.util.Map,java.util.List,java.lang.Class,java.lang.Object[])>(r1, null, r2, r3);

        return $r4;
    }

    public java.lang.Object instantiateAggregateFromInterface(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregateFromInterface(java.util.Map,java.lang.Class)>(null, r1);

        return $r2;
    }

    public java.lang.Object instantiateAggregateFromInterface(java.util.Map, java.lang.Class)
    {
        groovy.util.ProxyGenerator r2;
        java.util.Map r3;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.util.ArrayList $r0;

        r2 := @this: groovy.util.ProxyGenerator;

        r3 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.Class;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = virtualinvoke r2.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregate(java.util.Map,java.util.List)>(r3, $r0);

        return $r4;
    }

    public java.lang.Object instantiateAggregate(java.util.List)
    {
        java.util.List r1;
        java.lang.Object $r2;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregate(java.util.Map,java.util.List)>(null, r1);

        return $r2;
    }

    public java.lang.Object instantiateAggregate(java.util.Map, java.util.List)
    {
        java.util.List r2;
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Object $r3;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        $r3 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregate(java.util.Map,java.util.List,java.lang.Class)>(r1, r2, null);

        return $r3;
    }

    public java.lang.Object instantiateAggregate(java.util.Map, java.util.List, java.lang.Class)
    {
        java.util.List r2;
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Class r3;
        java.lang.Object $r4;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateAggregate(java.util.Map,java.util.List,java.lang.Class,java.lang.Object[])>(r1, r2, r3, null);

        return $r4;
    }

    public java.lang.Object instantiateAggregate(java.util.Map, java.util.List, java.lang.Class, java.lang.Object[])
    {
        java.util.Map r1, r53;
        groovy.lang.GroovyRuntimeException $r84;
        java.util.Set $r15;
        java.lang.ClassLoader $r20, $r70, r71;
        java.lang.Object[] r6;
        java.util.ArrayList $r75, $r78, $r79;
        groovy.util.ProxyGenerator r7;
        java.lang.StringBuffer $r8, $r9, $r17, $r18, $r25, $r27, $r28, $r44, $r49, $r51, $r60, $r61, $r64, $r76, $r77, $r82, $r83;
        java.lang.String $r21, $r26, $r29, $r33, $r39, $r40, $r41, $r43, $r45, $r50, $r52, $r58, $r59, $r62, r69;
        org.codehaus.groovy.control.MultipleCompilationErrorsException $r46;
        java.lang.reflect.Method[] $r11, $r35;
        groovy.lang.Binding $r80;
        java.lang.reflect.Method r66, r68;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List r3, $r12, $r13, $r36, $r37, r54;
        java.util.HashMap $r74;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, i9, $i10, i11, i12, $i14, $i16;
        java.io.PrintStream $r24;
        java.util.Iterator $r16;
        groovy.lang.GroovyShell $r81;
        java.lang.Class $r4, r5, $r55, r56, r65, r67, r72;
        java.lang.Object $r22, $r30, $r31, $r32, $r34, $r38, $r42;

        r7 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r3 := @parameter1: java.util.List;

        r5 := @parameter2: java.lang.Class;

        r6 := @parameter3: java.lang.Object[];

        $r74 = new java.util.HashMap;

        specialinvoke $r74.<java.util.HashMap: void <init>()>();

        r53 = $r74;

        if r1 == null goto label01;

        r53 = r1;

     label01:
        $r75 = new java.util.ArrayList;

        specialinvoke $r75.<java.util.ArrayList: void <init>()>();

        r54 = $r75;

        if r3 == null goto label02;

        r54 = r3;

     label02:
        $r4 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObjectSupport>;

        if $r4 != null goto label03;

        $r55 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObjectSupport");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObjectSupport> = $r55;

        goto label04;

     label03:
        $r55 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObjectSupport>;

     label04:
        r56 = $r55;

        if r5 == null goto label05;

        r56 = r5;

     label05:
        if r6 == null goto label06;

        $i6 = lengthof r6;

        if $i6 <= 0 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z0 = $z6;

        $r76 = new java.lang.StringBuffer;

        specialinvoke $r76.<java.lang.StringBuffer: void <init>()>();

        $r58 = virtualinvoke r56.<java.lang.Class: java.lang.String getName()>();

        $r59 = virtualinvoke r7.<groovy.util.ProxyGenerator: java.lang.String shortName(java.lang.String)>($r58);

        $r60 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_groovyProxy");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r64 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        if r5 == null goto label08;

        $r44 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r45 = virtualinvoke r56.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

     label08:
        i7 = 0;

     label09:
        $i8 = interfaceinvoke r54.<java.util.List: int size()>();

        if i7 >= $i8 goto label12;

        $r42 = interfaceinvoke r54.<java.util.List: java.lang.Object get(int)>(i7);

        r65 = (java.lang.Class) $r42;

        if i7 != 0 goto label10;

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements ");

        goto label11;

     label10:
        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label11:
        $r43 = virtualinvoke r65.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        i7 = i7 + 1;

        goto label09;

     label12:
        $r8 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {\n");

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    private closureMap\n    ");

        $r9 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(map");

        if z0 == 0 goto label13;

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", args");

     label13:
        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") {\n");

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        super(");

        if z0 == 0 goto label14;

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("*args");

     label14:
        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\n");

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        this.closureMap = map\n");

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    }\n");

        $r78 = new java.util.ArrayList;

        specialinvoke $r78.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke r56.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r12 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r11);

        $r13 = specialinvoke r7.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>(r56);

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r13);

        i9 = 0;

     label15:
        $i10 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i9 >= $i10 goto label18;

        $r38 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i9);

        r66 = (java.lang.reflect.Method) $r38;

        $r39 = virtualinvoke r66.<java.lang.reflect.Method: java.lang.String getName()>();

        $i4 = virtualinvoke $r39.<java.lang.String: int indexOf(int)>(36);

        $i14 = (int) -1;

        if $i4 != $i14 goto label17;

        $i5 = virtualinvoke r66.<java.lang.reflect.Method: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i5);

        if $z3 != 0 goto label17;

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ConversionHandler: boolean isCoreObjectMethod(java.lang.reflect.Method)>(r66);

        if $z4 == 0 goto label16;

        goto label17;

     label16:
        $r40 = virtualinvoke r66.<java.lang.reflect.Method: java.lang.String getName()>();

        $z5 = interfaceinvoke r53.<java.util.Map: boolean containsKey(java.lang.Object)>($r40);

        if $z5 == 0 goto label17;

        $r41 = virtualinvoke r66.<java.lang.reflect.Method: java.lang.String getName()>();

        interfaceinvoke $r78.<java.util.List: boolean add(java.lang.Object)>($r41);

        specialinvoke r7.<groovy.util.ProxyGenerator: void addOverridingMapCall(java.lang.StringBuffer,java.lang.reflect.Method)>($r77, r66);

     label17:
        i9 = i9 + 1;

        goto label15;

     label18:
        $r79 = new java.util.ArrayList;

        specialinvoke $r79.<java.util.ArrayList: void <init>()>();

        i11 = 0;

     label19:
        $i0 = interfaceinvoke r54.<java.util.List: int size()>();

        if i11 >= $i0 goto label20;

        $r34 = interfaceinvoke r54.<java.util.List: java.lang.Object get(int)>(i11);

        r67 = (java.lang.Class) $r34;

        $r35 = virtualinvoke r67.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r36 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r35);

        interfaceinvoke $r79.<java.util.List: boolean addAll(java.util.Collection)>($r36);

        $r37 = specialinvoke r7.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>(r67);

        interfaceinvoke $r79.<java.util.List: boolean addAll(java.util.Collection)>($r37);

        i11 = i11 + 1;

        goto label19;

     label20:
        i12 = 0;

     label21:
        $i1 = interfaceinvoke $r79.<java.util.List: int size()>();

        if i12 >= $i1 goto label23;

        $r32 = interfaceinvoke $r79.<java.util.List: java.lang.Object get(int)>(i12);

        r68 = (java.lang.reflect.Method) $r32;

        $z2 = specialinvoke r7.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r12, r68);

        if $z2 != 0 goto label22;

        $r33 = virtualinvoke r68.<java.lang.reflect.Method: java.lang.String getName()>();

        interfaceinvoke $r78.<java.util.List: boolean add(java.lang.Object)>($r33);

        specialinvoke r7.<groovy.util.ProxyGenerator: void addMapOrDummyCall(java.util.Map,java.lang.StringBuffer,java.lang.reflect.Method)>(r53, $r77, r68);

     label22:
        i12 = i12 + 1;

        goto label21;

     label23:
        $r15 = interfaceinvoke r53.<java.util.Map: java.util.Set keySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z7 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label27;

        $r31 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r69 = (java.lang.String) $r31;

        $i3 = virtualinvoke r69.<java.lang.String: int indexOf(int)>(36);

        $i16 = (int) -1;

        if $i3 == $i16 goto label25;

        goto label24;

     label25:
        $z1 = interfaceinvoke $r78.<java.util.List: boolean contains(java.lang.Object)>(r69);

        if $z1 == 0 goto label26;

        goto label24;

     label26:
        specialinvoke r7.<groovy.util.ProxyGenerator: void addNewMapCall(java.lang.StringBuffer,java.lang.String)>($r77, r69);

        goto label24;

     label27:
        $r17 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new ");

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(map");

        if z0 == 0 goto label28;

        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", constructorArgs");

     label28:
        virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r80 = new groovy.lang.Binding;

        specialinvoke $r80.<groovy.lang.Binding: void <init>()>();

        virtualinvoke $r80.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>("map", r53);

        virtualinvoke $r80.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>("constructorArgs", r6);

        $r20 = r7.<groovy.util.ProxyGenerator: java.lang.ClassLoader override>;

        if $r20 == null goto label29;

        $r70 = r7.<groovy.util.ProxyGenerator: java.lang.ClassLoader override>;

        goto label30;

     label29:
        $r70 = virtualinvoke r56.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label30:
        r71 = $r70;

        if r5 != null goto label31;

        $i2 = interfaceinvoke r54.<java.util.List: int size()>();

        if $i2 <= 0 goto label31;

        $r30 = interfaceinvoke r54.<java.util.List: java.lang.Object get(int)>(0);

        r72 = (java.lang.Class) $r30;

        r71 = virtualinvoke r72.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label31:
        $r81 = new groovy.lang.GroovyShell;

        specialinvoke $r81.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>(r71, $r80);

        $z8 = r7.<groovy.util.ProxyGenerator: boolean debug>;

        if $z8 == 0 goto label32;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r82 = new java.lang.StringBuffer;

        specialinvoke $r82.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("proxy source:\n------------------\n");

        $r26 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n------------------");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label32:
        $r21 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = virtualinvoke $r81.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.lang.String)>($r21);

     label33:
        return $r22;

     label34:
        $r46 := @caughtexception;

        $r84 = new groovy.lang.GroovyRuntimeException;

        $r83 = new java.lang.StringBuffer;

        specialinvoke $r83.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r83.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error creating proxy: ");

        $r50 = virtualinvoke $r46.<org.codehaus.groovy.control.MultipleCompilationErrorsException: java.lang.String getMessage()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r84.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r52);

        throw $r84;

        catch org.codehaus.groovy.control.MultipleCompilationErrorsException from label32 to label33 with label34;
    }

    public java.lang.Object instantiateDelegate(java.lang.Object)
    {
        java.lang.Object r1, $r2;
        groovy.util.ProxyGenerator r0;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateDelegate(java.util.List,java.lang.Object)>(null, r1);

        return $r2;
    }

    public java.lang.Object instantiateDelegate(java.util.List, java.lang.Object)
    {
        java.util.List r1;
        groovy.util.ProxyGenerator r0;
        java.lang.Object r2, $r3;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateDelegate(java.util.Map,java.util.List,java.lang.Object)>(null, r1, r2);

        return $r3;
    }

    public java.lang.Object instantiateDelegate(java.util.Map, java.util.List, java.lang.Object)
    {
        java.util.List r2;
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Object r3, $r4;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateDelegateWithBaseClass(java.util.Map,java.util.List,java.lang.Object,java.lang.Class)>(r1, r2, r3, null);

        return $r4;
    }

    public java.lang.Object instantiateDelegateWithBaseClass(java.util.Map, java.util.List, java.lang.Object)
    {
        java.util.List r2;
        groovy.util.ProxyGenerator r0;
        java.util.Map r1;
        java.lang.Object r3, $r5;
        java.lang.Class $r4;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r0.<groovy.util.ProxyGenerator: java.lang.Object instantiateDelegateWithBaseClass(java.util.Map,java.util.List,java.lang.Object,java.lang.Class)>(r1, r2, r3, $r4);

        return $r5;
    }

    public java.lang.Object instantiateDelegateWithBaseClass(java.util.Map, java.util.List, java.lang.Object, java.lang.Class)
    {
        java.util.List r10;
        java.lang.StringBuffer $r0, $r6, $r7;
        groovy.util.ProxyGenerator r1;
        java.util.Map r9;
        java.lang.Object r2, $r12;
        java.lang.Class $r3, r11;
        java.lang.String $r4, $r5, $r8;

        r1 := @this: groovy.util.ProxyGenerator;

        r9 := @parameter0: java.util.Map;

        r10 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.Object;

        r11 := @parameter3: java.lang.Class;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke r1.<groovy.util.ProxyGenerator: java.lang.String shortName(java.lang.String)>($r4);

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_delegateProxy");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke r1.<groovy.util.ProxyGenerator: java.lang.Object instantiateDelegateWithBaseClass(java.util.Map,java.util.List,java.lang.Object,java.lang.Class,java.lang.String)>(r9, r10, r2, r11, $r8);

        return $r12;
    }

    public java.lang.Object instantiateDelegateWithBaseClass(java.util.Map, java.util.List, java.lang.Object, java.lang.Class, java.lang.String)
    {
        java.util.Map r1, r69;
        groovy.lang.GroovyRuntimeException $r91;
        java.util.Set $r31;
        java.lang.ClassLoader $r36, $r80;
        java.util.ArrayList $r82, $r83, $r85, $r86;
        java.lang.StringBuffer $r6, $r9, $r10, $r11, $r33, $r34, $r43, $r45, $r46, $r60, $r65, $r67, $r84, $r89, $r90;
        groovy.util.ProxyGenerator r15;
        java.lang.String r7, $r39, $r44, $r47, $r50, $r51, $r53, $r59, $r61, $r66, $r68, r79;
        org.codehaus.groovy.control.MultipleCompilationErrorsException $r62;
        java.lang.reflect.Method[] $r13, $r19, $r27, $r55;
        groovy.lang.Binding $r87;
        java.lang.reflect.Method r77, r78;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List r4, $r14, $r17, $r20, $r22, $r28, $r30, $r56, $r57, r70;
        java.util.HashMap $r81;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, i7, i8, $i10;
        java.io.PrintStream $r42;
        java.util.Iterator $r32;
        groovy.lang.GroovyShell $r88;
        java.lang.Class r8, $r12, $r16, $r18, $r21, $r26, $r29, $r37, r71, $r72, $r73, $r74, $r75, r76;
        java.lang.Object r25, $r40, $r48, $r49, $r52, $r54, $r58;

        r15 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.util.Map;

        r4 := @parameter1: java.util.List;

        r25 := @parameter2: java.lang.Object;

        r8 := @parameter3: java.lang.Class;

        r7 := @parameter4: java.lang.String;

        $r81 = new java.util.HashMap;

        specialinvoke $r81.<java.util.HashMap: void <init>()>();

        r69 = $r81;

        if r1 == null goto label01;

        r69 = r1;

     label01:
        $r82 = new java.util.ArrayList;

        specialinvoke $r82.<java.util.ArrayList: void <init>()>();

        $r83 = new java.util.ArrayList;

        specialinvoke $r83.<java.util.ArrayList: void <init>()>();

        r70 = $r83;

        if r4 == null goto label02;

        r70 = r4;

     label02:
        $r84 = new java.lang.StringBuffer;

        specialinvoke $r84.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("import org.codehaus.groovy.runtime.InvokerHelper\nclass ");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        if r8 == null goto label03;

        $r60 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r61 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

     label03:
        i3 = 0;

     label04:
        $i4 = interfaceinvoke r70.<java.util.List: int size()>();

        if i3 >= $i4 goto label07;

        $r58 = interfaceinvoke r70.<java.util.List: java.lang.Object get(int)>(i3);

        r71 = (java.lang.Class) $r58;

        if i3 != 0 goto label05;

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements ");

        goto label06;

     label05:
        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label06:
        $r59 = virtualinvoke r71.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        i3 = i3 + 1;

        goto label04;

     label07:
        $r9 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    private delegate\n");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    private closureMap\n    ");

        $r11 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(map, delegate) {\n");

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        this.closureMap = map\n");

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        this.delegate = delegate\n");

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    }\n");

        $r12 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

        if $r12 != null goto label08;

        $r72 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object> = $r72;

        goto label09;

     label08:
        $r72 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

     label09:
        $r13 = virtualinvoke $r72.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r14 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r13);

        $r16 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

        if $r16 != null goto label10;

        $r73 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object> = $r73;

        goto label11;

     label10:
        $r73 = <groovy.util.ProxyGenerator: java.lang.Class class$java$lang$Object>;

     label11:
        $r17 = specialinvoke r15.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>($r73);

        interfaceinvoke $r14.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        $r18 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r18 != null goto label12;

        $r74 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject> = $r74;

        goto label13;

     label12:
        $r74 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

     label13:
        $r19 = virtualinvoke $r74.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r20 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r19);

        $r21 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r21 != null goto label14;

        $r75 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject> = $r75;

        goto label15;

     label14:
        $r75 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$lang$GroovyObject>;

     label15:
        $r22 = specialinvoke r15.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>($r75);

        interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r22);

        $r85 = new java.util.ArrayList;

        specialinvoke $r85.<java.util.ArrayList: void <init>()>();

        i5 = 0;

     label16:
        $i6 = interfaceinvoke r70.<java.util.List: int size()>();

        if i5 >= $i6 goto label17;

        $r54 = interfaceinvoke r70.<java.util.List: java.lang.Object get(int)>(i5);

        r76 = (java.lang.Class) $r54;

        $r55 = virtualinvoke r76.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r56 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r55);

        interfaceinvoke $r85.<java.util.List: boolean addAll(java.util.Collection)>($r56);

        $r57 = specialinvoke r15.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>(r76);

        interfaceinvoke $r85.<java.util.List: boolean addAll(java.util.Collection)>($r57);

        i5 = i5 + 1;

        goto label16;

     label17:
        i7 = 0;

     label18:
        $i0 = interfaceinvoke $r85.<java.util.List: int size()>();

        if i7 >= $i0 goto label20;

        $r52 = interfaceinvoke $r85.<java.util.List: java.lang.Object get(int)>(i7);

        r77 = (java.lang.reflect.Method) $r52;

        $z5 = specialinvoke r15.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r14, r77);

        if $z5 != 0 goto label19;

        $z6 = specialinvoke r15.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r20, r77);

        if $z6 != 0 goto label19;

        $r53 = virtualinvoke r77.<java.lang.reflect.Method: java.lang.String getName()>();

        interfaceinvoke $r82.<java.util.List: boolean add(java.lang.Object)>($r53);

        specialinvoke r15.<groovy.util.ProxyGenerator: void addWrappedCall(java.lang.StringBuffer,java.lang.reflect.Method,java.util.Map)>($r84, r77, r69);

     label19:
        i7 = i7 + 1;

        goto label18;

     label20:
        $r86 = new java.util.ArrayList;

        specialinvoke $r86.<java.util.ArrayList: void <init>()>();

        $r26 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r28 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.List toList(java.lang.Object[])>($r27);

        interfaceinvoke $r86.<java.util.List: boolean addAll(java.util.Collection)>($r28);

        $r29 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = specialinvoke r15.<groovy.util.ProxyGenerator: java.util.List getInheritedMethods(java.lang.Class)>($r29);

        interfaceinvoke $r86.<java.util.List: boolean addAll(java.util.Collection)>($r30);

        i8 = 0;

     label21:
        $i1 = interfaceinvoke $r86.<java.util.List: int size()>();

        if i8 >= $i1 goto label24;

        $r49 = interfaceinvoke $r86.<java.util.List: java.lang.Object get(int)>(i8);

        r78 = (java.lang.reflect.Method) $r49;

        $r50 = virtualinvoke r78.<java.lang.reflect.Method: java.lang.String getName()>();

        $i2 = virtualinvoke $r50.<java.lang.String: int indexOf(int)>(36);

        $i10 = (int) -1;

        if $i2 == $i10 goto label22;

        goto label23;

     label22:
        $z2 = specialinvoke r15.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r85, r78);

        if $z2 != 0 goto label23;

        $z3 = specialinvoke r15.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r14, r78);

        if $z3 != 0 goto label23;

        $z4 = specialinvoke r15.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r20, r78);

        if $z4 != 0 goto label23;

        $r51 = virtualinvoke r78.<java.lang.reflect.Method: java.lang.String getName()>();

        interfaceinvoke $r82.<java.util.List: boolean add(java.lang.Object)>($r51);

        specialinvoke r15.<groovy.util.ProxyGenerator: void addWrappedCall(java.lang.StringBuffer,java.lang.reflect.Method,java.util.Map)>($r84, r78, r69);

     label23:
        i8 = i8 + 1;

        goto label21;

     label24:
        $r31 = interfaceinvoke r69.<java.util.Map: java.util.Set keySet()>();

        $r32 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>();

     label25:
        $z7 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label27;

        $r48 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r79 = (java.lang.String) $r48;

        $z1 = interfaceinvoke $r82.<java.util.List: boolean contains(java.lang.Object)>(r79);

        if $z1 == 0 goto label26;

        goto label25;

     label26:
        specialinvoke r15.<groovy.util.ProxyGenerator: void addNewMapCall(java.lang.StringBuffer,java.lang.String)>($r84, r79);

        goto label25;

     label27:
        $r33 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\n");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new ");

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        virtualinvoke $r84.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(map, delegate)");

        $r87 = new groovy.lang.Binding;

        specialinvoke $r87.<groovy.lang.Binding: void <init>()>();

        virtualinvoke $r87.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>("map", r69);

        virtualinvoke $r87.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>("delegate", r25);

        $r36 = r15.<groovy.util.ProxyGenerator: java.lang.ClassLoader override>;

        if $r36 == null goto label28;

        $r80 = r15.<groovy.util.ProxyGenerator: java.lang.ClassLoader override>;

        goto label29;

     label28:
        $r37 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $r80 = virtualinvoke $r37.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label29:
        $r88 = new groovy.lang.GroovyShell;

        specialinvoke $r88.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>($r80, $r87);

        $z0 = r15.<groovy.util.ProxyGenerator: boolean debug>;

        if $z0 == 0 goto label30;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r89 = new java.lang.StringBuffer;

        specialinvoke $r89.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r89.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("proxy source:\n------------------\n");

        $r44 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.String toString()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n------------------");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r47);

     label30:
        $r39 = virtualinvoke $r84.<java.lang.StringBuffer: java.lang.String toString()>();

        $r40 = virtualinvoke $r88.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.lang.String)>($r39);

     label31:
        return $r40;

     label32:
        $r62 := @caughtexception;

        $r91 = new groovy.lang.GroovyRuntimeException;

        $r90 = new java.lang.StringBuffer;

        specialinvoke $r90.<java.lang.StringBuffer: void <init>()>();

        $r65 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error creating proxy: ");

        $r66 = virtualinvoke $r62.<org.codehaus.groovy.control.MultipleCompilationErrorsException: java.lang.String getMessage()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r91.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r68);

        throw $r91;

        catch org.codehaus.groovy.control.MultipleCompilationErrorsException from label30 to label31 with label32;
    }

    private void addWrappedCall(java.lang.StringBuffer, java.lang.reflect.Method, java.util.Map)
    {
        groovy.util.ProxyGenerator r3;
        java.lang.StringBuffer r4;
        java.util.Map r0;
        java.lang.Class[] $r5;
        java.lang.String $r2;
        java.lang.reflect.Method r1;
        boolean $z0;

        r3 := @this: groovy.util.ProxyGenerator;

        r4 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.lang.reflect.Method;

        r0 := @parameter2: java.util.Map;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        specialinvoke r3.<groovy.util.ProxyGenerator: void addOverridingMapCall(java.lang.StringBuffer,java.lang.reflect.Method)>(r4, r1);

        goto label2;

     label1:
        $r5 = specialinvoke r3.<groovy.util.ProxyGenerator: java.lang.Class[] addMethodPrefix(java.lang.StringBuffer,java.lang.reflect.Method)>(r4, r1);

        specialinvoke r3.<groovy.util.ProxyGenerator: void addWrappedMethodBody(java.lang.StringBuffer,java.lang.reflect.Method,java.lang.Class[])>(r4, r1, $r5);

        specialinvoke r3.<groovy.util.ProxyGenerator: void addMethodSuffix(java.lang.StringBuffer)>(r4);

     label2:
        return;
    }

    private boolean containsEquivalentMethod(java.util.List, java.lang.reflect.Method)
    {
        java.util.List r0;
        groovy.util.ProxyGenerator r8;
        int $i0, i1;
        java.lang.Object $r1;
        java.lang.Class $r6, $r7;
        java.lang.String $r4, $r5;
        java.lang.reflect.Method r2, r3;
        boolean $z0, $z1, $z2;

        r8 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.reflect.Method;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (java.lang.reflect.Method) $r1;

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r7 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r8.<groovy.util.ProxyGenerator: boolean hasMatchingParameterTypes(java.lang.reflect.Method,java.lang.reflect.Method)>(r3, r2);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean hasMatchingParameterTypes(java.lang.reflect.Method, java.lang.reflect.Method)
    {
        java.lang.Class[] $r1, $r3;
        groovy.util.ProxyGenerator r6;
        int $i0, $i1, $i2, i3;
        java.lang.Class $r4, $r5;
        java.lang.reflect.Method r0, r2;
        boolean $z0;

        r6 := @this: groovy.util.ProxyGenerator;

        r2 := @parameter0: java.lang.reflect.Method;

        r0 := @parameter1: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r1;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i2 = lengthof $r3;

        if i3 >= $i2 goto label4;

        $r5 = $r1[i3];

        $r4 = $r3[i3];

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    private java.util.List getInheritedMethods(java.lang.Class)
    {
        java.lang.reflect.Method[] $r2;
        java.util.ArrayList $r7;
        groovy.util.ProxyGenerator r5;
        int $i0, $i1, $i2, i3, $i5;
        java.lang.Class r1, r6;
        java.lang.String $r4;
        java.lang.reflect.Method r3;
        boolean $z0, $z1;

        r5 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.Class;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r6 = r1;

     label1:
        if r6 == null goto label6;

        $r2 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i3 = 0;

     label2:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label5;

        r3 = $r2[i3];

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(36);

        $i5 = (int) -1;

        if $i1 == $i5 goto label3;

        goto label4;

     label3:
        $i2 = virtualinvoke r3.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>($i2);

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r5.<groovy.util.ProxyGenerator: boolean containsEquivalentMethod(java.util.List,java.lang.reflect.Method)>($r7, r3);

        if $z1 != 0 goto label4;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        r6 = virtualinvoke r6.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label6:
        return $r7;
    }

    private void addNewMapCall(java.lang.StringBuffer, java.lang.String)
    {
        java.lang.StringBuffer r0, $r1, $r3, $r4, $r5, $r6;
        groovy.util.ProxyGenerator r7;
        java.lang.String r2;

        r7 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    def ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(Object[] args) {\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("        this.@closureMap[\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'] (*args)\n    }\n");

        return;
    }

    private void addOverridingMapCall(java.lang.StringBuffer, java.lang.reflect.Method)
    {
        groovy.util.ProxyGenerator r0;
        java.lang.StringBuffer r1;
        java.lang.Class[] $r3;
        java.lang.reflect.Method r2;

        r0 := @this: groovy.util.ProxyGenerator;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.lang.reflect.Method;

        $r3 = specialinvoke r0.<groovy.util.ProxyGenerator: java.lang.Class[] addMethodPrefix(java.lang.StringBuffer,java.lang.reflect.Method)>(r1, r2);

        specialinvoke r0.<groovy.util.ProxyGenerator: void addMethodBody(java.lang.StringBuffer,java.lang.reflect.Method,java.lang.Class[])>(r1, r2, $r3);

        specialinvoke r0.<groovy.util.ProxyGenerator: void addMethodSuffix(java.lang.StringBuffer)>(r1);

        return;
    }

    private void addMapOrDummyCall(java.util.Map, java.lang.StringBuffer, java.lang.reflect.Method)
    {
        java.lang.Class[] $r3;
        groovy.util.ProxyGenerator r0;
        java.lang.StringBuffer r1;
        java.util.Map r4;
        java.lang.String $r5;
        java.lang.reflect.Method r2;
        boolean $z0, $z1;

        r0 := @this: groovy.util.ProxyGenerator;

        r4 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.lang.reflect.Method;

        $r3 = specialinvoke r0.<groovy.util.ProxyGenerator: java.lang.Class[] addMethodPrefix(java.lang.StringBuffer,java.lang.reflect.Method)>(r1, r2);

        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        specialinvoke r0.<groovy.util.ProxyGenerator: void addMethodBody(java.lang.StringBuffer,java.lang.reflect.Method,java.lang.Class[])>(r1, r2, $r3);

        goto label2;

     label1:
        $z1 = r0.<groovy.util.ProxyGenerator: boolean emptyMethods>;

        if $z1 != 0 goto label2;

        specialinvoke r0.<groovy.util.ProxyGenerator: void addUnsupportedBody(java.lang.StringBuffer)>(r1);

     label2:
        specialinvoke r0.<groovy.util.ProxyGenerator: void addMethodSuffix(java.lang.StringBuffer)>(r1);

        return;
    }

    private void addUnsupportedBody(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        groovy.util.ProxyGenerator r1;

        r1 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw new UnsupportedOperationException()");

        return;
    }

    private java.lang.Class[] addMethodPrefix(java.lang.StringBuffer, java.lang.reflect.Method)
    {
        java.lang.StringBuffer r0, $r1, $r6, $r7, $r9, $r13, $r14, $r15;
        groovy.util.ProxyGenerator r2;
        int $i0, i1;
        java.lang.String $r5, $r8, $r12;
        java.lang.reflect.Method r3;
        java.lang.Class[] $r10;
        java.lang.Class $r4, r11;

        r2 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r5 = virtualinvoke r2.<groovy.util.ProxyGenerator: java.lang.String getSimpleName(java.lang.Class)>($r4);

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r10 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r10;

        if i1 >= $i0 goto label3;

        r11 = $r10[i1];

        if i1 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r12 = virtualinvoke r2.<groovy.util.ProxyGenerator: java.lang.String getSimpleName(java.lang.Class)>(r11);

        $r13 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("p");

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") { ");

        return $r10;
    }

    private void addMethodBody(java.lang.StringBuffer, java.lang.reflect.Method, java.lang.Class[])
    {
        java.lang.Class[] r5;
        java.lang.StringBuffer r0, $r1, $r4, $r6;
        groovy.util.ProxyGenerator r7;
        int $i0, i1;
        java.lang.String $r3;
        java.lang.reflect.Method r2;

        r7 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.lang.reflect.Method;

        r5 := @parameter2: java.lang.Class[];

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("this.@closureMap[\'");

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'] (");

        i1 = 0;

     label1:
        $i0 = lengthof r5;

        if i1 >= $i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r6 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("p");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        return;
    }

    private void addWrappedMethodBody(java.lang.StringBuffer, java.lang.reflect.Method, java.lang.Class[])
    {
        java.lang.Class[] r1;
        java.lang.StringBuffer r0, $r2, $r5, $r6;
        groovy.util.ProxyGenerator r7;
        int $i0, i1;
        java.lang.String $r4;
        java.lang.reflect.Method r3;

        r7 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: java.lang.reflect.Method;

        r1 := @parameter2: java.lang.Class[];

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n        Object[] args = [");

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r6 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("p");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n        ");

        $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("InvokerHelper.invokeMethod(delegate, \'");

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\', args)\n");

        return;
    }

    private void addMethodSuffix(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        groovy.util.ProxyGenerator r1;

        r1 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    }\n");

        return;
    }

    public java.lang.String getSimpleName(java.lang.Class)
    {
        java.lang.Integer $r7;
        java.lang.StringBuffer $r3, $r6, $r9;
        groovy.util.ProxyGenerator r11;
        int i0;
        java.lang.String $r1, $r2, $r4, $r5, $r8, $r10;
        boolean $z0, $z1;
        java.lang.Class r0, r12;

        r11 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        i0 = 0;

        r12 = r0;

     label1:
        $z1 = virtualinvoke r12.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label2;

        r12 = virtualinvoke r12.<java.lang.Class: java.lang.Class getComponentType()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\$", "\\.");

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String multiply(java.lang.String,java.lang.Number)>("[]", $r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label3:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\$", "\\.");

        return $r2;
    }

    public java.lang.String shortName(java.lang.String)
    {
        groovy.util.ProxyGenerator r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, $r1;

        r2 := @this: groovy.util.ProxyGenerator;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return r0;

     label1:
        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        return $r1;
    }

    private static void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.lang.MetaClassRegistry $r2;
        java.lang.Class $r3, $r4;
        groovy.util.ProxyGenerator$1 $r0;

        r1 := @parameter0: groovy.lang.MetaClass;

        $r0 = new groovy.util.ProxyGenerator$1;

        specialinvoke $r0.<groovy.util.ProxyGenerator$1: void <init>(groovy.lang.MetaClass)>(r1);

        $r2 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $r3 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.util.ProxyGenerator");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator>;

     label2:
        interfaceinvoke $r2.<groovy.lang.MetaClassRegistry: void setMetaClass(java.lang.Class,groovy.lang.MetaClass)>($r4, $r0);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        groovy.lang.MetaClass $r3;
        groovy.lang.MetaClassRegistry $r1;
        groovy.util.ProxyGenerator $r0;
        java.lang.Class $r2, $r4;

        $r0 = new groovy.util.ProxyGenerator;

        specialinvoke $r0.<groovy.util.ProxyGenerator: void <init>()>();

        <groovy.util.ProxyGenerator: groovy.util.ProxyGenerator INSTANCE> = $r0;

        $r1 = staticinvoke <groovy.lang.GroovySystem: groovy.lang.MetaClassRegistry getMetaClassRegistry()>();

        $r2 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <groovy.util.ProxyGenerator: java.lang.Class class$(java.lang.String)>("groovy.util.ProxyGenerator");

        <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.ProxyGenerator: java.lang.Class class$groovy$util$ProxyGenerator>;

     label2:
        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClassRegistry: groovy.lang.MetaClass getMetaClass(java.lang.Class)>($r4);

        staticinvoke <groovy.util.ProxyGenerator: void setMetaClass(groovy.lang.MetaClass)>($r3);

        return;
    }
}
