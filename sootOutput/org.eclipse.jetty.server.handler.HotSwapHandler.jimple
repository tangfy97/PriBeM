public class org.eclipse.jetty.server.handler.HotSwapHandler extends org.eclipse.jetty.server.handler.AbstractHandlerContainer
{
    private volatile org.eclipse.jetty.server.Handler _handler;

    public void <init>()
    {
        org.eclipse.jetty.server.handler.HotSwapHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void <init>()>();

        return;
    }

    public org.eclipse.jetty.server.Handler getHandler()
    {
        org.eclipse.jetty.server.Handler $r1;
        org.eclipse.jetty.server.handler.HotSwapHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        $r1 = r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        return $r1;
    }

    public org.eclipse.jetty.server.Handler[] getHandlers()
    {
        org.eclipse.jetty.server.Handler $r2;
        org.eclipse.jetty.server.Handler[] $r0;
        org.eclipse.jetty.server.handler.HotSwapHandler r1;

        r1 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        $r0 = newarray (org.eclipse.jetty.server.Handler)[1];

        $r2 = r1.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        $r0[0] = $r2;

        return $r0;
    }

    public void setHandler(org.eclipse.jetty.server.Handler)
    {
        org.eclipse.jetty.server.Handler r0, r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.Exception $r5;
        org.eclipse.jetty.util.component.Container $r3;
        org.eclipse.jetty.server.Server $r2;
        org.eclipse.jetty.server.handler.HotSwapHandler r1;

        r1 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        r0 := @parameter0: org.eclipse.jetty.server.Handler;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter handler is null.");

        throw $r4;

     label1:
        r7 = r1.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        r1.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler> = r0;

        $r2 = virtualinvoke r1.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Server getServer()>();

        interfaceinvoke r0.<org.eclipse.jetty.server.Handler: void setServer(org.eclipse.jetty.server.Server)>($r2);

        virtualinvoke r1.<org.eclipse.jetty.server.handler.HotSwapHandler: boolean addBean(java.lang.Object)>(r0);

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        virtualinvoke $r3.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String)>(r1, r7, r0, "handler");

     label2:
        if r7 == null goto label3;

        virtualinvoke r1.<org.eclipse.jetty.server.handler.HotSwapHandler: boolean removeBean(java.lang.Object)>(r7);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.HotSwapHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.HotSwapHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void doStop()>();

        return;
    }

    public void handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        org.eclipse.jetty.server.Request r3;
        org.eclipse.jetty.server.Handler $r1, $r6;
        javax.servlet.http.HttpServletResponse r5;
        javax.servlet.http.HttpServletRequest r4;
        java.lang.String r2;
        org.eclipse.jetty.server.handler.HotSwapHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.eclipse.jetty.server.Request;

        r4 := @parameter2: javax.servlet.http.HttpServletRequest;

        r5 := @parameter3: javax.servlet.http.HttpServletResponse;

        $r1 = r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        interfaceinvoke $r6.<org.eclipse.jetty.server.Handler: void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r2, r3, r4, r5);

     label1:
        return;
    }

    public void setServer(org.eclipse.jetty.server.Server)
    {
        org.eclipse.jetty.server.Handler $r3, $r5;
        java.lang.IllegalStateException $r6;
        org.eclipse.jetty.util.component.Container $r4;
        org.eclipse.jetty.server.Server $r1, r2;
        org.eclipse.jetty.server.handler.HotSwapHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        r2 := @parameter0: org.eclipse.jetty.server.Server;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Server getServer()>();

        if r2 != $r1 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RUNNING");

        throw $r6;

     label2:
        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void setServer(org.eclipse.jetty.server.Server)>(r2);

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler getHandler()>();

        if $r3 == null goto label3;

        interfaceinvoke $r3.<org.eclipse.jetty.server.Handler: void setServer(org.eclipse.jetty.server.Server)>(r2);

     label3:
        if r2 == null goto label4;

        if r2 == $r1 goto label4;

        $r4 = virtualinvoke r2.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.component.Container getContainer()>();

        $r5 = r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        virtualinvoke $r4.<org.eclipse.jetty.util.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String)>(r0, null, $r5, "handler");

     label4:
        return;
    }

    protected java.lang.Object expandChildren(java.lang.Object, java.lang.Class)
    {
        org.eclipse.jetty.server.Handler $r3;
        java.lang.Object r1, $r4;
        java.lang.Class r2;
        org.eclipse.jetty.server.handler.HotSwapHandler r0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler _handler>;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: java.lang.Object expandHandler(org.eclipse.jetty.server.Handler,java.lang.Object,java.lang.Class)>($r3, r1, r2);

        return $r4;
    }

    public void destroy()
    {
        org.eclipse.jetty.server.Handler $r1;
        java.lang.IllegalStateException $r2;
        org.eclipse.jetty.server.handler.HotSwapHandler r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.handler.HotSwapHandler;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("!STOPPED");

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: org.eclipse.jetty.server.Handler getHandler()>();

        if $r1 == null goto label2;

        virtualinvoke r0.<org.eclipse.jetty.server.handler.HotSwapHandler: void setHandler(org.eclipse.jetty.server.Handler)>(null);

        interfaceinvoke $r1.<org.eclipse.jetty.server.Handler: void destroy()>();

     label2:
        specialinvoke r0.<org.eclipse.jetty.server.handler.AbstractHandlerContainer: void destroy()>();

        return;
    }
}
