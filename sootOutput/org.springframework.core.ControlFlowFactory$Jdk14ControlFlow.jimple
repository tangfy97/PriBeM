class org.springframework.core.ControlFlowFactory$Jdk14ControlFlow extends java.lang.Object implements org.springframework.core.ControlFlow
{
    private java.lang.StackTraceElement[] stack;

    public void <init>()
    {
        java.lang.Throwable $r1;
        org.springframework.core.ControlFlowFactory$Jdk14ControlFlow r0;
        java.lang.StackTraceElement[] $r2;

        r0 := @this: org.springframework.core.ControlFlowFactory$Jdk14ControlFlow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Throwable;

        specialinvoke $r1.<java.lang.Throwable: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        r0.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack> = $r2;

        return;
    }

    public boolean under(java.lang.Class)
    {
        org.springframework.core.ControlFlowFactory$Jdk14ControlFlow r2;
        java.lang.StackTraceElement[] $r3, $r4;
        int $i0, i1;
        java.lang.Class r0;
        java.lang.StackTraceElement $r5;
        java.lang.String $r1, $r6;
        boolean $z0;

        r2 := @this: org.springframework.core.ControlFlowFactory$Jdk14ControlFlow;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Class must not be null");

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        i1 = 0;

        goto label3;

     label1:
        $r4 = r2.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $r5 = $r4[i1];

        $r6 = virtualinvoke $r5.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

     label3:
        $r3 = r2.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $i0 = lengthof $r3;

        if i1 < $i0 goto label1;

        return 0;
    }

    public boolean under(java.lang.Class, java.lang.String)
    {
        org.springframework.core.ControlFlowFactory$Jdk14ControlFlow r3;
        java.lang.StackTraceElement[] $r4, $r7, $r10;
        int i0, $i1;
        java.lang.Class r0;
        java.lang.StackTraceElement $r5, $r8;
        java.lang.String r1, $r2, $r6, $r9;
        boolean $z0, $z1;

        r3 := @this: org.springframework.core.ControlFlowFactory$Jdk14ControlFlow;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Class must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Method name must not be null");

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        i0 = 0;

        goto label3;

     label1:
        $r4 = r3.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $r5 = $r4[i0];

        $r6 = virtualinvoke $r5.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r7 = r3.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r8.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

     label3:
        $r10 = r3.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $i1 = lengthof $r10;

        if i0 < $i1 goto label1;

        return 0;
    }

    public boolean underToken(java.lang.String)
    {
        java.lang.Throwable $r7;
        java.io.PrintWriter $r8;
        java.io.StringWriter $r6;
        org.springframework.core.ControlFlowFactory$Jdk14ControlFlow r5;
        int $i0, $i2;
        java.lang.String r0, $r4;

        r5 := @this: org.springframework.core.ControlFlowFactory$Jdk14ControlFlow;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r6 = new java.io.StringWriter;

        specialinvoke $r6.<java.io.StringWriter: void <init>()>();

        $r7 = new java.lang.Throwable;

        specialinvoke $r7.<java.lang.Throwable: void <init>()>();

        $r8 = new java.io.PrintWriter;

        specialinvoke $r8.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6);

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r8);

        $r4 = virtualinvoke $r6.<java.io.StringWriter: java.lang.String toString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>(r0);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        org.springframework.core.ControlFlowFactory$Jdk14ControlFlow r1;
        java.lang.StackTraceElement[] $r2, $r5;
        int i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.StackTraceElement $r3;
        java.lang.String $r4;

        r1 := @this: org.springframework.core.ControlFlowFactory$Jdk14ControlFlow;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Jdk14ControlFlow: ");

        i0 = 0;

        goto label3;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t@");

     label2:
        $r2 = r1.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $r3 = $r2[i0];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        i0 = i0 + 1;

     label3:
        $r5 = r1.<org.springframework.core.ControlFlowFactory$Jdk14ControlFlow: java.lang.StackTraceElement[] stack>;

        $i1 = lengthof $r5;

        if i0 < $i1 goto label1;

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
