public class org.apache.poi.hwpf.converter.WordToFoUtils extends org.apache.poi.hwpf.converter.AbstractWordUtils
{

    public void <init>()
    {
        org.apache.poi.hwpf.converter.WordToFoUtils r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToFoUtils;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordUtils: void <init>()>();

        return;
    }

    static void compactInlines(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void compactChildNodesR(org.w3c.dom.Element,java.lang.String)>(r0, "fo:inline");

        return;
    }

    public static void setBold(org.w3c.dom.Element, boolean)
    {
        org.w3c.dom.Element r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r1 = "bold";

        goto label2;

     label1:
        $r1 = "normal";

     label2:
        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-weight", $r1);

        return;
    }

    public static void setBorder(org.w3c.dom.Element, org.apache.poi.hwpf.usermodel.BorderCode, java.lang.String)
    {
        org.apache.poi.hwpf.usermodel.BorderCode r1;
        short $s0, $s1;
        int $i2, $i3;
        java.lang.String r2, $r7, $r8, $r13, $r14, $r19, $r20, $r21, $r22, $r23;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r25;
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12, $r16, $r17, $r18, $r26, $r27, $r28;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: org.apache.poi.hwpf.usermodel.BorderCode;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("element is null");

        throw $r25;

     label1:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.BorderCode: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        $z1 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isEmpty(java.lang.String)>(r2);

        if $z1 == 0 goto label4;

        $r21 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getBorderType(org.apache.poi.hwpf.usermodel.BorderCode)>(r1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("border-style", $r21);

        $s1 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.BorderCode: short getColor()>();

        $i2 = (int) $s1;

        $r22 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getColor(int)>($i2);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("border-color", $r22);

        $r23 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getBorderWidth(org.apache.poi.hwpf.usermodel.BorderCode)>(r1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("border-width", $r23);

        goto label5;

     label4:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-style");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getBorderType(org.apache.poi.hwpf.usermodel.BorderCode)>(r1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r7, $r8);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-color");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.BorderCode: short getColor()>();

        $i3 = (int) $s0;

        $r14 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getColor(int)>($i3);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r13, $r14);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-width");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getBorderWidth(org.apache.poi.hwpf.usermodel.BorderCode)>(r1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($r19, $r20);

     label5:
        return;
    }

    public static void setCharactersProperties(org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r3;
        org.apache.poi.hwpf.usermodel.CharacterRun r2;
        short $s1, $s2;
        byte $b9;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i14;
        java.lang.String $r4, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.w3c.dom.Element r1;
        java.lang.StringBuilder $r6, $r7, $r11, $r12;

        r2 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        r1 := @parameter1: org.w3c.dom.Element;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.BorderCode getBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r1, $r3, "");

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getIco24()>();

        $i12 = (int) -1;

        if $i0 == $i12 goto label01;

        $i10 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getIco24()>();

        $r10 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getColor24(int)>($i10);

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("color", $r10);

     label01:
        $z0 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isCapitalized()>();

        if $z0 == 0 goto label02;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-transform", "uppercase");

     label02:
        $z1 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isHighlighted()>();

        if $z1 == 0 goto label03;

        $b9 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: byte getHighlightedColor()>();

        $i13 = (int) $b9;

        $r9 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getColor(int)>($i13);

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("background-color", $r9);

     label03:
        $z2 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isStrikeThrough()>();

        if $z2 == 0 goto label05;

        $i8 = virtualinvoke $r11.<java.lang.StringBuilder: int length()>();

        if $i8 <= 0 goto label04;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label04:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("line-through");

     label05:
        $z4 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isShadowed()>();

        if $z4 == 0 goto label06;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i6 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        $i7 = $i6 / 24;

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-shadow", $r8);

     label06:
        $z3 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSmallCaps()>();

        if $z3 == 0 goto label07;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-variant", "small-caps");

     label07:
        $s1 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: short getSubSuperScriptIndex()>();

        if $s1 != 1 goto label08;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("baseline-shift", "super");

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", "smaller");

     label08:
        $s2 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: short getSubSuperScriptIndex()>();

        $i14 = (int) $s2;

        if $i14 != 2 goto label09;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("baseline-shift", "sub");

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", "smaller");

     label09:
        $i3 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: int getUnderlineCode()>();

        if $i3 <= 0 goto label11;

        $i5 = virtualinvoke $r11.<java.lang.StringBuilder: int length()>();

        if $i5 <= 0 goto label10;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label10:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("underline");

     label11:
        $z5 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isVanished()>();

        if $z5 == 0 goto label12;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("visibility", "hidden");

     label12:
        $i4 = virtualinvoke $r11.<java.lang.StringBuilder: int length()>();

        if $i4 <= 0 goto label13;

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-decoration", $r4);

     label13:
        return;
    }

    public static void setFontFamily(org.w3c.dom.Element, java.lang.String)
    {
        java.lang.String r0;
        org.w3c.dom.Element r1;
        boolean $z0;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-family", r0);

        return;
    }

    public static void setFontSize(org.w3c.dom.Element, int)
    {
        int i0;
        org.w3c.dom.Element r0;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-size", $r1);

        return;
    }

    public static void setIndent(org.apache.poi.hwpf.usermodel.Paragraph, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.usermodel.Paragraph r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r3, $r6, $r8, $r11, $r13, $r16, $r18, $r21, $r23, $r26;
        org.w3c.dom.Element r1;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r1 := @parameter1: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getFirstLineIndent()>();

        if $i0 == 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $i13 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getFirstLineIndent()>();

        $i14 = $i13 / 20;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i14);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-indent", $r26);

     label1:
        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromLeft()>();

        if $i1 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $i11 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromLeft()>();

        $i12 = $i11 / 20;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i12);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("start-indent", $r21);

     label2:
        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromRight()>();

        if $i2 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i9 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromRight()>();

        $i10 = $i9 / 20;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("end-indent", $r16);

     label3:
        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingBefore()>();

        if $i3 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingBefore()>();

        $i8 = $i7 / 20;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("space-before", $r11);

     label4:
        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingAfter()>();

        if $i4 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingAfter()>();

        $i6 = $i5 / 20;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("space-after", $r6);

     label5:
        return;
    }

    public static void setItalic(org.w3c.dom.Element, boolean)
    {
        org.w3c.dom.Element r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @parameter0: org.w3c.dom.Element;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r1 = "italic";

        goto label2;

     label1:
        $r1 = "normal";

     label2:
        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("font-style", $r1);

        return;
    }

    public static void setJustification(org.apache.poi.hwpf.usermodel.Paragraph, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.usermodel.Paragraph r0;
        org.w3c.dom.Element r2;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r2 := @parameter1: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getJustification()>();

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getJustification(int)>($i0);

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("text-align", $r1);

     label1:
        return;
    }

    public static void setLanguage(org.apache.poi.hwpf.usermodel.CharacterRun, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r2;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        r2 := @parameter1: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getLanguageCode()>();

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getLanguageCode()>();

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: java.lang.String getLanguage(int)>($i1);

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("language", $r1);

     label1:
        return;
    }

    public static void setParagraphProperties(org.apache.poi.hwpf.usermodel.Paragraph, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r2, $r3, $r4, $r5;
        org.apache.poi.hwpf.usermodel.Paragraph r0;
        org.w3c.dom.Element r1;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r1 := @parameter1: org.w3c.dom.Element;

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setIndent(org.apache.poi.hwpf.usermodel.Paragraph,org.w3c.dom.Element)>(r0, r1);

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setJustification(org.apache.poi.hwpf.usermodel.Paragraph,org.w3c.dom.Element)>(r0, r1);

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getBottomBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r1, $r2, "bottom");

        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getLeftBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r1, $r3, "left");

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getRightBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r1, $r4, "right");

        $r5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getTopBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r1, $r5, "top");

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean pageBreakBefore()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("break-before", "page");

     label1:
        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean isAutoHyphenated()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1);

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("hyphenate", $r6);

        $z2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean keepOnPage()>();

        if $z2 == 0 goto label2;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("keep-together.within-page", "always");

     label2:
        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean keepWithNext()>();

        if $z3 == 0 goto label3;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("keep-with-next.within-page", "always");

     label3:
        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("linefeed-treatment", "preserve");

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("white-space-collapse", "false");

        return;
    }

    public static void setPictureProperties(org.apache.poi.hwpf.usermodel.Picture, org.w3c.dom.Element)
    {
        org.apache.poi.hwpf.usermodel.Picture r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r5, $r9, $r13, $r17, $r28;
        org.w3c.dom.Element r1;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Picture;

        r1 := @parameter1: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getHorizontalScalingFactor()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getVerticalScalingFactor()>();

        if $i0 <= 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $i14 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $i15 = $i14 * $i0;

        $i16 = $i15 / 1000;

        $i17 = $i16 / 20;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("content-width", $r17);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaGoal()>();

        $i3 = $i2 / 20;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("content-width", $r5);

     label2:
        if $i1 <= 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i10 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $i11 = $i10 * $i1;

        $i12 = $i11 / 1000;

        $i13 = $i12 / 20;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("content-height", $r13);

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaGoal()>();

        $i5 = $i4 / 20;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("content-height", $r9);

     label4:
        if $i0 <= 0 goto label5;

        if $i1 > 0 goto label6;

     label5:
        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("scaling", "uniform");

        goto label7;

     label6:
        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("scaling", "non-uniform");

     label7:
        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("vertical-align", "text-bottom");

        $i6 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropTop()>();

        if $i6 != 0 goto label8;

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropRight()>();

        if $i7 != 0 goto label8;

        $i8 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropBottom()>();

        if $i8 != 0 goto label8;

        $i9 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropLeft()>();

        if $i9 == 0 goto label9;

     label8:
        $i18 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropTop()>();

        $i19 = $i18 / 20;

        $i20 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropRight()>();

        $i21 = $i20 / 20;

        $i22 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDyaCropBottom()>();

        $i23 = $i22 / 20;

        $i24 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Picture: int getDxaCropLeft()>();

        $i25 = $i24 / 20;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rect(");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt, ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt, ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt, ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt)");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("clip", $r28);

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("overflow", "hidden");

     label9:
        return;
    }

    public static void setTableCellProperties(org.apache.poi.hwpf.usermodel.TableRow, org.apache.poi.hwpf.usermodel.TableCell, org.w3c.dom.Element, boolean, boolean, boolean, boolean)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r15, r16, r17, r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;
        org.apache.poi.hwpf.usermodel.TableCell r2;
        org.apache.poi.hwpf.usermodel.TableRow r7;
        boolean z0, z1, z2, z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r5, $r10, $r14;
        org.w3c.dom.Element r0;

        r7 := @parameter0: org.apache.poi.hwpf.usermodel.TableRow;

        r2 := @parameter1: org.apache.poi.hwpf.usermodel.TableCell;

        r0 := @parameter2: org.w3c.dom.Element;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 1440.0F;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("width", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: int getGapHalf()>();

        $f2 = (float) $i1;

        $f3 = $f2 / 1440.0F;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("padding-start", $r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: int getGapHalf()>();

        $f4 = (float) $i2;

        $f5 = $f4 / 1440.0F;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("padding-end", $r14);

        $r15 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        if $r15 == null goto label01;

        $r22 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        $i6 = virtualinvoke $r22.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i6 == 0 goto label01;

        $r23 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        goto label03;

     label01:
        if z0 == 0 goto label02;

        $r23 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getTopBorder()>();

        goto label03;

     label02:
        $r23 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getHorizontalBorder()>();

     label03:
        r16 = $r23;

        $r24 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        if $r24 == null goto label04;

        $r21 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        $i5 = virtualinvoke $r21.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i5 == 0 goto label04;

        $r25 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        goto label06;

     label04:
        if z1 == 0 goto label05;

        $r25 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getBottomBorder()>();

        goto label06;

     label05:
        $r25 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getHorizontalBorder()>();

     label06:
        r17 = $r25;

        $r26 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        if $r26 == null goto label07;

        $r20 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        $i4 = virtualinvoke $r20.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i4 == 0 goto label07;

        $r27 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        goto label09;

     label07:
        if z2 == 0 goto label08;

        $r27 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getLeftBorder()>();

        goto label09;

     label08:
        $r27 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getVerticalBorder()>();

     label09:
        r18 = $r27;

        $r28 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        if $r28 == null goto label10;

        $r19 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        $i3 = virtualinvoke $r19.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i3 == 0 goto label10;

        $r29 = virtualinvoke r2.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        goto label12;

     label10:
        if z3 == 0 goto label11;

        $r29 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getRightBorder()>();

        goto label12;

     label11:
        $r29 = virtualinvoke r7.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getVerticalBorder()>();

     label12:
        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r0, r17, "bottom");

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r0, r18, "left");

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r0, $r29, "right");

        staticinvoke <org.apache.poi.hwpf.converter.WordToFoUtils: void setBorder(org.w3c.dom.Element,org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String)>(r0, r16, "top");

        return;
    }

    public static void setTableRowProperties(org.apache.poi.hwpf.usermodel.TableRow, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.apache.poi.hwpf.usermodel.TableRow r0;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.TableRow;

        r1 := @parameter1: org.w3c.dom.Element;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: int getRowHeight()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: int getRowHeight()>();

        $f0 = (float) $i1;

        $f1 = $f0 / 1440.0F;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("height", $r5);

     label1:
        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: boolean cantSplit()>();

        if $z0 != 0 goto label2;

        interfaceinvoke r1.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("keep-together.within-column", "always");

     label2:
        return;
    }
}
