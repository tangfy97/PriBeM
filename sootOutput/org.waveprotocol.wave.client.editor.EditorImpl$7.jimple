class org.waveprotocol.wave.client.editor.EditorImpl$7 extends java.lang.Object implements org.waveprotocol.wave.client.scheduler.Scheduler$Task
{
    final org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection val$lastDirection;
    final org.waveprotocol.wave.client.editor.EditorImpl this$0;

    void <init>(org.waveprotocol.wave.client.editor.EditorImpl, org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection)
    {
        org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection r2;
        org.waveprotocol.wave.client.editor.EditorImpl r1;
        org.waveprotocol.wave.client.editor.EditorImpl$7 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$7;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorImpl;

        r2 := @parameter1: org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection val$lastDirection> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.EditorSettings $r2;
        org.waveprotocol.wave.model.document.util.FocusedRange $r5;
        int $i0, $i1;
        org.waveprotocol.wave.model.document.util.Range $r8;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r4;
        boolean $z0;
        org.waveprotocol.wave.client.editor.util.AnnotationBehaviourLogic $r11;
        org.waveprotocol.wave.client.editor.EditorImpl $r1, $r3, $r7, $r9, $r10;
        org.waveprotocol.wave.client.editor.EditorImpl$7 r0;
        org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection r13;
        org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection $r6, $r12;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$7;

        r13 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection val$lastDirection>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.client.editor.EditorSettings access$1700(org.waveprotocol.wave.client.editor.EditorImpl)>($r1);

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.EditorSettings: boolean useFancyCursorBias()>();

        if $z0 != 0 goto label1;

        r13 = <org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection: org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection FROM_LEFT>;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: org.waveprotocol.wave.model.document.util.FocusedRange getSelectionRange()>();

        if $r5 == null goto label2;

        $r8 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.util.FocusedRange: org.waveprotocol.wave.model.document.util.Range asRange()>();

        $r10 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r9 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r11 = $r9.<org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.client.editor.util.AnnotationBehaviourLogic annotationLogic>;

        $i0 = virtualinvoke $r8.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        $i1 = virtualinvoke $r8.<org.waveprotocol.wave.model.document.util.Range: int getEnd()>();

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.client.editor.util.AnnotationBehaviourLogic: org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection rebias(int,int,org.waveprotocol.wave.model.document.AnnotationBehaviour$CursorDirection)>($i0, $i1, r13);

        staticinvoke <org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection access$1402(org.waveprotocol.wave.client.editor.EditorImpl,org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection)>($r10, $r12);

        goto label3;

     label2:
        $r7 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$7: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        $r6 = <org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection: org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection LEFT>;

        staticinvoke <org.waveprotocol.wave.client.editor.EditorImpl: org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection access$1402(org.waveprotocol.wave.client.editor.EditorImpl,org.waveprotocol.wave.model.document.AnnotationBehaviour$BiasDirection)>($r7, $r6);

     label3:
        return;
    }
}
