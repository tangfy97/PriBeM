public final class org.apache.commons.logging.impl.Log4jFactory extends org.apache.commons.logging.LogFactory
{
    private java.util.Hashtable attributes;
    private java.util.Hashtable instances;

    public void <init>()
    {
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.util.Hashtable $r1, $r2;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        specialinvoke r0.<org.apache.commons.logging.LogFactory: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances> = $r2;

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String[] getAttributeNames()
    {
        java.util.Enumeration $r3;
        java.lang.String[] r6;
        java.util.Vector $r0;
        org.apache.commons.logging.impl.Log4jFactory r1;
        int $i0, $i1, i2;
        java.lang.Object $r4, $r7;
        java.lang.String $r5, $r8;
        java.util.Hashtable $r2;
        boolean $z0;

        r1 := @this: org.apache.commons.logging.impl.Log4jFactory;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<java.util.Vector: int size()>();

        r6 = newarray (java.lang.String)[$i0];

        i2 = 0;

        goto label4;

     label3:
        $r7 = virtualinvoke $r0.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r8 = (java.lang.String) $r7;

        r6[i2] = $r8;

        i2 = i2 + 1;

     label4:
        $i1 = lengthof r6;

        if i2 < $i1 goto label3;

        return r6;
    }

    public org.apache.commons.logging.Log getInstance(java.lang.Class) throws org.apache.commons.logging.LogConfigurationException
    {
        org.apache.commons.logging.impl.Log4JLogger $r4;
        org.apache.log4j.Logger $r5;
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.lang.Class r1;
        java.lang.Object $r3;
        org.apache.commons.logging.Log r7;
        java.util.Hashtable $r2, $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.apache.commons.logging.Log) $r3;

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new org.apache.commons.logging.impl.Log4JLogger;

        $r5 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(r1);

        specialinvoke $r4.<org.apache.commons.logging.impl.Log4JLogger: void <init>(org.apache.log4j.Logger)>($r5);

        $r6 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;
    }

    public org.apache.commons.logging.Log getInstance(java.lang.String) throws org.apache.commons.logging.LogConfigurationException
    {
        org.apache.commons.logging.impl.Log4JLogger $r4;
        org.apache.log4j.Logger $r5;
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.lang.Object $r3;
        org.apache.commons.logging.Log r7;
        java.lang.String r1;
        java.util.Hashtable $r2, $r6;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.apache.commons.logging.Log) $r3;

        if r7 == null goto label1;

        return r7;

     label1:
        $r4 = new org.apache.commons.logging.impl.Log4JLogger;

        $r5 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.String)>(r1);

        specialinvoke $r4.<org.apache.commons.logging.impl.Log4JLogger: void <init>(org.apache.log4j.Logger)>($r5);

        $r6 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;
    }

    public void release()
    {
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        $r1 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable instances>;

        virtualinvoke $r1.<java.util.Hashtable: void clear()>();

        return;
    }

    public void removeAttribute(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.logging.impl.Log4jFactory r0;
        java.util.Hashtable $r2;

        r0 := @this: org.apache.commons.logging.impl.Log4jFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.apache.commons.logging.impl.Log4jFactory r1;
        java.lang.Object r0;
        java.lang.String r2;
        java.util.Hashtable $r3, $r4;

        r1 := @this: org.apache.commons.logging.impl.Log4jFactory;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = r1.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<org.apache.commons.logging.impl.Log4jFactory: java.util.Hashtable attributes>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label2:
        return;
    }
}
