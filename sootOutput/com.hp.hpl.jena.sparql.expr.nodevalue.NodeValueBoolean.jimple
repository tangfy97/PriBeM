public class com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean extends com.hp.hpl.jena.sparql.expr.NodeValue
{
    boolean bool;

    public void <init>(boolean)
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool> = 0;

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool> = z0;

        return;
    }

    public void <init>(boolean, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>(com.hp.hpl.jena.graph.Node)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool> = 0;

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool> = z0;

        return;
    }

    public boolean isBoolean()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        return 1;
    }

    public boolean getBoolean()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool>;

        return $z0;
    }

    protected com.hp.hpl.jena.graph.Node makeNode()
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool>;

        if $z0 == 0 goto label1;

        $r1 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeTrue>;

        goto label2;

     label1:
        $r1 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeFalse>;

     label2:
        return $r1;
    }

    public java.lang.String asString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        $z0 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean: boolean bool>;

        if $z0 == 0 goto label1;

        $r1 = "true";

        goto label2;

     label1:
        $r1 = "false";

     label2:
        return $r1;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor)
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor r0;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor: void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueBoolean)>(r1);

        return;
    }
}
