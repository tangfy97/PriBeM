public abstract class org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl extends java.lang.Object implements org.apache.batik.ext.awt.image.codec.util.ImageDecoder
{
    protected org.apache.batik.ext.awt.image.codec.util.SeekableStream input;
    protected org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam param;

    public void <init>(org.apache.batik.ext.awt.image.codec.util.SeekableStream, org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam)
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.SeekableStream r1;
        org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        r1 := @parameter0: org.apache.batik.ext.awt.image.codec.util.SeekableStream;

        r2 := @parameter1: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.SeekableStream input> = r1;

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam param> = r2;

        return;
    }

    public void <init>(java.io.InputStream, org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam)
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream $r1;
        org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam r3;
        java.io.InputStream r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream;

        specialinvoke $r1.<org.apache.batik.ext.awt.image.codec.util.ForwardSeekableStream: void <init>(java.io.InputStream)>(r2);

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.SeekableStream input> = $r1;

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam param> = r3;

        return;
    }

    public org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam getParam()
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam param>;

        return $r1;
    }

    public void setParam(org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam)
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        r1 := @parameter0: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam;

        r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.ImageDecodeParam param> = r1;

        return;
    }

    public org.apache.batik.ext.awt.image.codec.util.SeekableStream getInputStream()
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        org.apache.batik.ext.awt.image.codec.util.SeekableStream $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: org.apache.batik.ext.awt.image.codec.util.SeekableStream input>;

        return $r1;
    }

    public int getNumPages() throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        return 1;
    }

    public java.awt.image.Raster decodeAsRaster() throws java.io.IOException
    {
        java.awt.image.Raster $r1;
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: java.awt.image.Raster decodeAsRaster(int)>(0);

        return $r1;
    }

    public java.awt.image.Raster decodeAsRaster(int) throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        java.awt.image.RenderedImage $r1;
        int i0;
        java.awt.image.Raster $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: java.awt.image.RenderedImage decodeAsRenderedImage(int)>(i0);

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.awt.image.Raster getData()>();

        return $r2;
    }

    public java.awt.image.RenderedImage decodeAsRenderedImage() throws java.io.IOException
    {
        org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.codec.util.ImageDecoderImpl: java.awt.image.RenderedImage decodeAsRenderedImage(int)>(0);

        return $r1;
    }

    public abstract java.awt.image.RenderedImage decodeAsRenderedImage(int) throws java.io.IOException;
}
