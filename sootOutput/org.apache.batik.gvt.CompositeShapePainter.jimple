public class org.apache.batik.gvt.CompositeShapePainter extends java.lang.Object implements org.apache.batik.gvt.ShapePainter
{
    protected java.awt.Shape shape;
    protected org.apache.batik.gvt.ShapePainter[] painters;
    protected int count;

    public void <init>(java.awt.Shape)
    {
        java.awt.Shape r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r1 := @parameter0: java.awt.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.CompositeShapePainter: java.awt.Shape shape> = r1;

        return;
    }

    public void addShapePainter(org.apache.batik.gvt.ShapePainter)
    {
        org.apache.batik.gvt.ShapePainter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.awt.Shape $r2, $r3, $r10;
        org.apache.batik.gvt.ShapePainter[] $r4, $r5, $r6, r7, $r8, $r9;
        org.apache.batik.gvt.CompositeShapePainter r1;

        r1 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r0 := @parameter0: org.apache.batik.gvt.ShapePainter;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.batik.gvt.CompositeShapePainter: java.awt.Shape shape>;

        $r3 = interfaceinvoke r0.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getShape()>();

        if $r2 == $r3 goto label2;

        $r10 = r1.<org.apache.batik.gvt.CompositeShapePainter: java.awt.Shape shape>;

        interfaceinvoke r0.<org.apache.batik.gvt.ShapePainter: void setShape(java.awt.Shape)>($r10);

     label2:
        $r4 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r4 != null goto label3;

        $r9 = newarray (org.apache.batik.gvt.ShapePainter)[2];

        r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters> = $r9;

     label3:
        $i1 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        $r5 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $i0 = lengthof $r5;

        if $i1 != $i0 goto label4;

        $i6 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        $i4 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        $i5 = $i4 / 2;

        $i7 = $i6 + $i5;

        $i8 = $i7 + 1;

        r7 = newarray (org.apache.batik.gvt.ShapePainter)[$i8];

        $r8 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $i9 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r7, 0, $i9);

        r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters> = r7;

     label4:
        $r6 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $i2 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        $i3 = $i2 + 1;

        r1.<org.apache.batik.gvt.CompositeShapePainter: int count> = $i3;

        $r6[$i2] = r0;

        return;
    }

    public org.apache.batik.gvt.ShapePainter getShapePainter(int)
    {
        org.apache.batik.gvt.ShapePainter[] $r1;
        org.apache.batik.gvt.ShapePainter $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int i0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getShapePainterCount()
    {
        int $i0;
        org.apache.batik.gvt.CompositeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $i0 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        return $i0;
    }

    public void paint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.ShapePainter[] $r1, $r2;
        org.apache.batik.gvt.ShapePainter $r4;
        org.apache.batik.gvt.CompositeShapePainter r0;
        java.awt.Graphics2D r3;
        int $i0, i1;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r3 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 == null goto label3;

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r2[i1];

        interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: void paint(java.awt.Graphics2D)>(r3);

        i1 = i1 + 1;

     label2:
        $i0 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public java.awt.Shape getPaintedArea()
    {
        java.awt.Shape $r5;
        org.apache.batik.gvt.ShapePainter $r4;
        java.awt.geom.Area $r2, $r6;
        org.apache.batik.gvt.ShapePainter[] $r1, $r3;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int i0, $i1;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.awt.geom.Area;

        specialinvoke $r2.<java.awt.geom.Area: void <init>()>();

        i0 = 0;

        goto label4;

     label2:
        $r3 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r3[i0];

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getPaintedArea()>();

        if $r5 == null goto label3;

        $r6 = new java.awt.geom.Area;

        specialinvoke $r6.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r5);

        virtualinvoke $r2.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r6);

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i0 < $i1 goto label2;

        return $r2;
    }

    public java.awt.geom.Rectangle2D getPaintedBounds2D()
    {
        org.apache.batik.gvt.ShapePainter $r3;
        java.awt.geom.Rectangle2D $r4, r6;
        org.apache.batik.gvt.ShapePainter[] $r1, $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int i0, $i1;
        java.lang.Object $r5;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return null;

     label1:
        r6 = null;

        i0 = 0;

        goto label6;

     label2:
        $r2 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r3 = $r2[i0];

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getPaintedBounds2D()>();

        if $r4 != null goto label3;

        goto label5;

     label3:
        if r6 != null goto label4;

        $r5 = virtualinvoke $r4.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r6 = (java.awt.geom.Rectangle2D) $r5;

        goto label5;

     label4:
        virtualinvoke r6.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r4);

     label5:
        i0 = i0 + 1;

     label6:
        $i1 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i0 < $i1 goto label2;

        return r6;
    }

    public boolean inPaintedArea(java.awt.geom.Point2D)
    {
        org.apache.batik.gvt.ShapePainter $r4;
        java.awt.geom.Point2D r3;
        org.apache.batik.gvt.ShapePainter[] $r1, $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int $i0, i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r3 := @parameter0: java.awt.geom.Point2D;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r2 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r2[i1];

        $z0 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: boolean inPaintedArea(java.awt.geom.Point2D)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        $i0 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i1 < $i0 goto label2;

        return 0;
    }

    public java.awt.Shape getSensitiveArea()
    {
        java.awt.Shape $r5;
        org.apache.batik.gvt.ShapePainter $r4;
        java.awt.geom.Area $r2, $r6;
        org.apache.batik.gvt.ShapePainter[] $r1, $r3;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int i0, $i1;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.awt.geom.Area;

        specialinvoke $r2.<java.awt.geom.Area: void <init>()>();

        i0 = 0;

        goto label4;

     label2:
        $r3 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r3[i0];

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: java.awt.Shape getSensitiveArea()>();

        if $r5 == null goto label3;

        $r6 = new java.awt.geom.Area;

        specialinvoke $r6.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r5);

        virtualinvoke $r2.<java.awt.geom.Area: void add(java.awt.geom.Area)>($r6);

     label3:
        i0 = i0 + 1;

     label4:
        $i1 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i0 < $i1 goto label2;

        return $r2;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds2D()
    {
        org.apache.batik.gvt.ShapePainter $r3;
        java.awt.geom.Rectangle2D $r4, r6;
        org.apache.batik.gvt.ShapePainter[] $r1, $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int i0, $i1;
        java.lang.Object $r5;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return null;

     label1:
        r6 = null;

        i0 = 0;

        goto label5;

     label2:
        $r2 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r3 = $r2[i0];

        $r4 = interfaceinvoke $r3.<org.apache.batik.gvt.ShapePainter: java.awt.geom.Rectangle2D getSensitiveBounds2D()>();

        if r6 != null goto label3;

        $r5 = virtualinvoke $r4.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r6 = (java.awt.geom.Rectangle2D) $r5;

        goto label4;

     label3:
        virtualinvoke r6.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r4);

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i0 < $i1 goto label2;

        return r6;
    }

    public boolean inSensitiveArea(java.awt.geom.Point2D)
    {
        org.apache.batik.gvt.ShapePainter $r4;
        java.awt.geom.Point2D r3;
        org.apache.batik.gvt.ShapePainter[] $r1, $r2;
        org.apache.batik.gvt.CompositeShapePainter r0;
        int $i0, i1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r3 := @parameter0: java.awt.geom.Point2D;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r2 = r0.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r2[i1];

        $z0 = interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: boolean inSensitiveArea(java.awt.geom.Point2D)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        $i0 = r0.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i1 < $i0 goto label2;

        return 0;
    }

    public void setShape(java.awt.Shape)
    {
        java.awt.Shape r0;
        org.apache.batik.gvt.ShapePainter $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.batik.gvt.ShapePainter[] $r2, $r3;
        org.apache.batik.gvt.CompositeShapePainter r1;
        int $i0, i1;

        r1 := @this: org.apache.batik.gvt.CompositeShapePainter;

        r0 := @parameter0: java.awt.Shape;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        if $r2 == null goto label4;

        i1 = 0;

        goto label3;

     label2:
        $r3 = r1.<org.apache.batik.gvt.CompositeShapePainter: org.apache.batik.gvt.ShapePainter[] painters>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.apache.batik.gvt.ShapePainter: void setShape(java.awt.Shape)>(r0);

        i1 = i1 + 1;

     label3:
        $i0 = r1.<org.apache.batik.gvt.CompositeShapePainter: int count>;

        if i1 < $i0 goto label2;

     label4:
        r1.<org.apache.batik.gvt.CompositeShapePainter: java.awt.Shape shape> = r0;

        return;
    }

    public java.awt.Shape getShape()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.CompositeShapePainter r0;

        r0 := @this: org.apache.batik.gvt.CompositeShapePainter;

        $r1 = r0.<org.apache.batik.gvt.CompositeShapePainter: java.awt.Shape shape>;

        return $r1;
    }
}
