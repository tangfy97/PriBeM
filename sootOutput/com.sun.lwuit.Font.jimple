public class com.sun.lwuit.Font extends java.lang.Object
{
    public static final int FACE_MONOSPACE;
    public static final int FACE_PROPORTIONAL;
    public static final int FACE_SYSTEM;
    public static final int SIZE_LARGE;
    public static final int SIZE_MEDIUM;
    public static final int SIZE_SMALL;
    public static final int STYLE_BOLD;
    public static final int STYLE_ITALIC;
    public static final int STYLE_UNDERLINED;
    public static final int STYLE_PLAIN;
    private static com.sun.lwuit.Font defaultFont;
    private static java.util.Hashtable bitmapCache;
    private static boolean enableBitmapFont;
    private java.lang.Object font;

    void <init>()
    {
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.Font: java.lang.Object font> = r1;

        return;
    }

    void <init>(int, int, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        int i0, i1, i2;
        java.lang.Object $r3;
        com.sun.lwuit.Font r0;
        com.sun.lwuit.Display $r1;

        r0 := @this: com.sun.lwuit.Font;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object createFont(int,int,int)>(i0, i1, i2);

        r0.<com.sun.lwuit.Font: java.lang.Object font> = $r3;

        return;
    }

    public static com.sun.lwuit.Font getBitmapFont(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r0;
        com.sun.lwuit.Font $r3;
        java.util.Hashtable $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.sun.lwuit.Font: java.util.Hashtable bitmapCache>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (com.sun.lwuit.Font) $r2;

        return $r3;
    }

    public static void clearBitmapCache()
    {
        java.util.Hashtable $r0;

        $r0 = <com.sun.lwuit.Font: java.util.Hashtable bitmapCache>;

        virtualinvoke $r0.<java.util.Hashtable: void clear()>();

        return;
    }

    public static boolean isTrueTypeFileSupported()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isTrueTypeSupported()>();

        return $z0;
    }

    public static boolean isCreationByStringSupported()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $z0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: boolean isLookupFontSupported()>();

        return $z0;
    }

    public static com.sun.lwuit.Font createTrueTypeFont(java.io.InputStream) throws java.io.IOException
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        java.lang.Object $r4;
        com.sun.lwuit.Font $r0;
        com.sun.lwuit.Display $r1;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

        $r0 = new com.sun.lwuit.Font;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object loadTrueTypeFont(java.io.InputStream)>(r3);

        specialinvoke $r0.<com.sun.lwuit.Font: void <init>(java.lang.Object)>($r4);

        return $r0;
    }

    public static com.sun.lwuit.Font create(java.lang.String)
    {
        com.sun.lwuit.impl.LWUITImplementation $r2;
        java.lang.Object $r4;
        java.lang.String r3;
        com.sun.lwuit.Font $r0;
        com.sun.lwuit.Display $r1;

        r3 := @parameter0: java.lang.String;

        $r0 = new com.sun.lwuit.Font;

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = virtualinvoke $r2.<com.sun.lwuit.impl.LWUITImplementation: java.lang.Object loadNativeFont(java.lang.String)>(r3);

        specialinvoke $r0.<com.sun.lwuit.Font: void <init>(java.lang.Object)>($r4);

        return $r0;
    }

    public void addContrast(byte)
    {
        byte b0;
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        b0 := @parameter0: byte;

        return;
    }

    public static com.sun.lwuit.Font createBitmapFont(java.lang.String, com.sun.lwuit.Image, int[], int[], java.lang.String)
    {
        int[] r1, r2;
        java.lang.String r3, r5;
        com.sun.lwuit.Image r0;
        com.sun.lwuit.Font $r4;
        java.util.Hashtable $r6;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: com.sun.lwuit.Image;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        r3 := @parameter4: java.lang.String;

        $r4 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(com.sun.lwuit.Image,int[],int[],java.lang.String)>(r0, r1, r2, r3);

        $r6 = <com.sun.lwuit.Font: java.util.Hashtable bitmapCache>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r4);

        return $r4;
    }

    public static com.sun.lwuit.Font createBitmapFont(com.sun.lwuit.Image, int[], int[], java.lang.String)
    {
        com.sun.lwuit.CustomFont $r0;
        int[] r2, r3;
        java.lang.String r4;
        com.sun.lwuit.Image r1;

        r1 := @parameter0: com.sun.lwuit.Image;

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        r4 := @parameter3: java.lang.String;

        $r0 = new com.sun.lwuit.CustomFont;

        specialinvoke $r0.<com.sun.lwuit.CustomFont: void <init>(com.sun.lwuit.Image,int[],int[],java.lang.String)>(r1, r2, r3, r4);

        return $r0;
    }

    public static com.sun.lwuit.Font createSystemFont(int, int, int)
    {
        int i0, i1, i2;
        com.sun.lwuit.Font $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new com.sun.lwuit.Font;

        specialinvoke $r0.<com.sun.lwuit.Font: void <init>(int,int,int)>(i0, i1, i2);

        return $r0;
    }

    public int charsWidth(char[], int, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int i0, i1, $i2;
        char[] r3;
        java.lang.Object $r4;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i2 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int charsWidth(java.lang.Object,char[],int,int)>($r4, r3, i0, i1);

        return $i2;
    }

    public int substringWidth(java.lang.String, int, int)
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int i0, i1, $i2, $i3;
        java.lang.Object $r4;
        java.lang.String r3, $r5;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i2 = i0 + i1;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        $i3 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int stringWidth(java.lang.Object,java.lang.String)>($r4, $r5);

        return $i3;
    }

    public int stringWidth(java.lang.String)
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.String r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r4 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int stringWidth(java.lang.Object,java.lang.String)>($r4, r3);

        return $i0;
    }

    public int charWidth(char)
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i1;
        char c0;
        java.lang.Object $r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        c0 := @parameter0: char;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i1 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int charWidth(java.lang.Object,char)>($r3, c0);

        return $i1;
    }

    public int getHeight()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getHeight(java.lang.Object)>($r3);

        return $i0;
    }

    void drawChar(com.sun.lwuit.Graphics, char, int, int)
    {
        int i1, i2;
        com.sun.lwuit.Graphics r1;
        char c0;
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        c0 := @parameter1: char;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public static com.sun.lwuit.Font getDefaultFont()
    {
        com.sun.lwuit.Font $r0;

        $r0 = <com.sun.lwuit.Font: com.sun.lwuit.Font defaultFont>;

        return $r0;
    }

    public static void setDefaultFont(com.sun.lwuit.Font)
    {
        com.sun.lwuit.Font r0;

        r0 := @parameter0: com.sun.lwuit.Font;

        if r0 == null goto label1;

        <com.sun.lwuit.Font: com.sun.lwuit.Font defaultFont> = r0;

     label1:
        return;
    }

    void drawChars(com.sun.lwuit.Graphics, char[], int, int, int, int)
    {
        int i0, i1, i2, i3;
        com.sun.lwuit.Graphics r1;
        char[] r2;
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        return;
    }

    public int getFace()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getFace(java.lang.Object)>($r3);

        return $i0;
    }

    public int getSize()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getSize(java.lang.Object)>($r3);

        return $i0;
    }

    public int getStyle()
    {
        com.sun.lwuit.impl.LWUITImplementation $r1;
        int $i0;
        java.lang.Object $r3;
        com.sun.lwuit.Font r2;
        com.sun.lwuit.Display $r0;

        r2 := @this: com.sun.lwuit.Font;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.Display: com.sun.lwuit.impl.LWUITImplementation getImplementation()>();

        $r3 = r2.<com.sun.lwuit.Font: java.lang.Object font>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.impl.LWUITImplementation: int getStyle(java.lang.Object)>($r3);

        return $i0;
    }

    public java.lang.String getCharset()
    {
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        return null;
    }

    public static void setBitmapFontEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.Font: boolean enableBitmapFont> = z0;

        return;
    }

    public static boolean isBitmapFontEnabled()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.Font: boolean enableBitmapFont>;

        return $z0;
    }

    java.lang.Object getNativeFont()
    {
        java.lang.Object $r1;
        com.sun.lwuit.Font r0;

        r0 := @this: com.sun.lwuit.Font;

        $r1 = r0.<com.sun.lwuit.Font: java.lang.Object font>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r0;
        java.lang.Class $r1, $r3;
        com.sun.lwuit.Font r2, r4;
        boolean $z0;

        r2 := @this: com.sun.lwuit.Font;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != $r3 goto label3;

        r4 = (com.sun.lwuit.Font) r0;

        $i0 = virtualinvoke r4.<com.sun.lwuit.Font: int getFace()>();

        $i1 = virtualinvoke r2.<com.sun.lwuit.Font: int getFace()>();

        if $i0 != $i1 goto label1;

        $i2 = virtualinvoke r4.<com.sun.lwuit.Font: int getSize()>();

        $i3 = virtualinvoke r2.<com.sun.lwuit.Font: int getSize()>();

        if $i2 != $i3 goto label1;

        $i4 = virtualinvoke r4.<com.sun.lwuit.Font: int getStyle()>();

        $i5 = virtualinvoke r2.<com.sun.lwuit.Font: int getStyle()>();

        if $i4 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    static void <clinit>()
    {
        com.sun.lwuit.Font $r0;
        java.util.Hashtable $r1;

        <com.sun.lwuit.Font: int STYLE_PLAIN> = 0;

        <com.sun.lwuit.Font: int STYLE_UNDERLINED> = 4;

        <com.sun.lwuit.Font: int STYLE_ITALIC> = 2;

        <com.sun.lwuit.Font: int STYLE_BOLD> = 1;

        <com.sun.lwuit.Font: int SIZE_SMALL> = 8;

        <com.sun.lwuit.Font: int SIZE_MEDIUM> = 0;

        <com.sun.lwuit.Font: int SIZE_LARGE> = 16;

        <com.sun.lwuit.Font: int FACE_SYSTEM> = 0;

        <com.sun.lwuit.Font: int FACE_PROPORTIONAL> = 64;

        <com.sun.lwuit.Font: int FACE_MONOSPACE> = 32;

        $r0 = new com.sun.lwuit.Font;

        specialinvoke $r0.<com.sun.lwuit.Font: void <init>(java.lang.Object)>(null);

        <com.sun.lwuit.Font: com.sun.lwuit.Font defaultFont> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <com.sun.lwuit.Font: java.util.Hashtable bitmapCache> = $r1;

        <com.sun.lwuit.Font: boolean enableBitmapFont> = 1;

        return;
    }
}
