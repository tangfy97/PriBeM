class org.waveprotocol.wave.model.document.util.DocIterate$1$1 extends java.lang.Object implements java.util.Iterator
{
    java.lang.Object next;
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.document.util.DocIterate$1 this$0;

    void <init>(org.waveprotocol.wave.model.document.util.DocIterate$1)
    {
        org.waveprotocol.wave.model.document.util.DocIterate$1 r1, $r2;
        org.waveprotocol.wave.model.document.util.DocIterate$1$1 r0;
        java.lang.Object $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocIterate$1$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocIterate$1;

        r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r3 = $r2.<org.waveprotocol.wave.model.document.util.DocIterate$1: java.lang.Object val$startNode>;

        r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: java.lang.Object next> = $r3;

        return;
    }

    public boolean hasNext()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.document.util.DocIterate$1$1 r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocIterate$1$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: java.lang.Object next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.ReadableDocument $r6, $r11;
        java.lang.AssertionError $r14;
        org.waveprotocol.wave.model.document.util.DocIterate$1$1 r0;
        boolean $z0;
        org.waveprotocol.wave.model.document.util.DocIterate$1 $r2, $r3, $r4, $r9, $r10;
        org.waveprotocol.wave.model.document.util.DocIterate$DocIterationFilter $r7, $r12;
        java.lang.Object r1, $r5, $r8, $r13;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocIterate$1$1;

        r1 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: java.lang.Object next>;

        $z0 = <org.waveprotocol.wave.model.document.util.DocIterate$1$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r7 = $r2.<org.waveprotocol.wave.model.document.util.DocIterate$1: org.waveprotocol.wave.model.document.util.DocIterate$DocIterationFilter val$iterateFunction>;

        $r3 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r6 = $r3.<org.waveprotocol.wave.model.document.util.DocIterate$1: org.waveprotocol.wave.model.document.ReadableDocument val$doc>;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r5 = $r4.<org.waveprotocol.wave.model.document.util.DocIterate$1: java.lang.Object val$stopAt>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.model.document.util.DocIterate$DocIterationFilter: java.lang.Object next(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,java.lang.Object)>($r6, r1, $r5);

        r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: java.lang.Object next> = $r8;

        $r9 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r12 = $r9.<org.waveprotocol.wave.model.document.util.DocIterate$1: org.waveprotocol.wave.model.document.util.DocIterate$DocIterationFilter val$iterateFunction>;

        $r10 = r0.<org.waveprotocol.wave.model.document.util.DocIterate$1$1: org.waveprotocol.wave.model.document.util.DocIterate$1 this$0>;

        $r11 = $r10.<org.waveprotocol.wave.model.document.util.DocIterate$1: org.waveprotocol.wave.model.document.ReadableDocument val$doc>;

        $r13 = interfaceinvoke $r12.<org.waveprotocol.wave.model.document.util.DocIterate$DocIterationFilter: java.lang.Object value(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r11, r1);

        return $r13;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.document.util.DocIterate$1$1 r1;

        r1 := @this: org.waveprotocol.wave.model.document.util.DocIterate$1$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove");

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/util/DocIterate;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.util.DocIterate$1$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
