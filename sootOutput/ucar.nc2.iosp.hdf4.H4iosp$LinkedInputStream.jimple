class ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream extends java.io.InputStream
{
    byte[] buffer;
    long pos;
    int nsegs;
    long[] segPosA;
    int[] segSizeA;
    int segno;
    int segpos;
    int segSize;
    final ucar.nc2.iosp.hdf4.H4iosp this$0;

    void <init>(ucar.nc2.iosp.hdf4.H4iosp, ucar.nc2.iosp.hdf4.H4header$Vinfo)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r2;
        ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream r0;
        ucar.nc2.iosp.hdf4.H4iosp r1;
        long[] $r3;
        int[] $r4, $r5;
        int $i0, $i2;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4iosp;

        r2 := @parameter1: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: ucar.nc2.iosp.hdf4.H4iosp this$0> = r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long pos> = 0L;

        $i2 = (int) -1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno> = $i2;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos> = 0;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize> = 0;

        $r3 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: long[] segPos>;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long[] segPosA> = $r3;

        $r4 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: int[] segSize>;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA> = $r4;

        $r5 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA>;

        $i0 = lengthof $r5;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs> = $i0;

        return;
    }

    void <init>(ucar.nc2.iosp.hdf4.H4iosp, ucar.nc2.iosp.hdf4.H4header$SpecialLinked) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream r0;
        ucar.nc2.iosp.hdf4.H4header$SpecialLinked r2;
        ucar.nc2.iosp.hdf4.H4iosp r1;
        ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock r8;
        long $l4;
        long[] $r4, $r9;
        int[] $r5, $r10;
        int $i0, $i1, $i2, $i3, $i5, i6, $i8;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.List $r3;
        java.lang.Object $r7;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4iosp;

        r2 := @parameter1: ucar.nc2.iosp.hdf4.H4header$SpecialLinked;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: ucar.nc2.iosp.hdf4.H4iosp this$0> = r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long pos> = 0L;

        $i8 = (int) -1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno> = $i8;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos> = 0;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize> = 0;

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.hdf4.H4header$SpecialLinked: java.util.List getLinkedDataBlocks()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs> = $i0;

        $i1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs>;

        $r4 = newarray (long)[$i1];

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long[] segPosA> = $r4;

        $i2 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs>;

        $r5 = newarray (int)[$i2];

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA> = $r5;

        i6 = 0;

        $r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock) $r7;

        $r9 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long[] segPosA>;

        $i3 = r8.<ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock: int offset>;

        $l4 = (long) $i3;

        $r9[i6] = $l4;

        $r10 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA>;

        $i5 = r8.<ucar.nc2.iosp.hdf4.H4header$TagLinkedBlock: int length>;

        $r10[i6] = $i5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean readSegment() throws java.io.IOException
    {
        byte[] $r2, $r8;
        ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream r0;
        ucar.unidata.io.RandomAccessFile $r4, $r7;
        ucar.nc2.iosp.hdf4.H4iosp $r3, $r6;
        long $l9;
        long[] $r5;
        int[] $r1, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream;

        $i0 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno> = $i1;

        $i3 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i2 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs>;

        if $i3 != $i2 goto label1;

        return 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA>;

        $i4 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i5 = $r1[$i4];

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize> = $i5;

     label2:
        $i6 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize>;

        if $i6 != 0 goto label4;

        $i10 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i11 = $i10 + 1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno> = $i11;

        $i13 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i12 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int nsegs>;

        if $i13 != $i12 goto label3;

        return 0;

     label3:
        $r9 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int[] segSizeA>;

        $i14 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $i15 = $r9[$i14];

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize> = $i15;

        goto label2;

     label4:
        $i7 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize>;

        $r2 = newarray (byte)[$i7];

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: byte[] buffer> = $r2;

        $r3 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: ucar.nc2.iosp.hdf4.H4iosp this$0>;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf4.H4iosp: ucar.unidata.io.RandomAccessFile access$000(ucar.nc2.iosp.hdf4.H4iosp)>($r3);

        $r5 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: long[] segPosA>;

        $i8 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segno>;

        $l9 = $r5[$i8];

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l9);

        $r6 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: ucar.nc2.iosp.hdf4.H4iosp this$0>;

        $r7 = staticinvoke <ucar.nc2.iosp.hdf4.H4iosp: ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.hdf4.H4iosp)>($r6);

        $r8 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: byte[] buffer>;

        virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: void readFully(byte[])>($r8);

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos> = 0;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1;
        ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream r0;
        short $s6, $s9;
        byte $b3;
        int $i0, $i1, $i2, $i4, $i5, $i8, $i10;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream;

        $i1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos>;

        $i0 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segSize>;

        if $i1 != $i0 goto label1;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: boolean readSegment()>();

        if $z0 != 0 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: byte[] buffer>;

        $i2 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos>;

        $b3 = $r1[$i2];

        $s9 = (short) $b3;

        $s6 = $s9 & 255;

        $i4 = r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos>;

        $i5 = $i4 + 1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$LinkedInputStream: int segpos> = $i5;

        $i10 = (int) $s6;

        return $i10;
    }
}
