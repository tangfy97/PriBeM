public final class org.apache.commons.httpclient.protocol.ReflectionSocketFactory extends java.lang.Object
{
    private static boolean REFLECTION_FAILED;
    private static java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR;
    private static java.lang.reflect.Method SOCKETCONNECT_METHOD;
    private static java.lang.reflect.Method SOCKETBIND_METHOD;
    private static java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS;
    static java.lang.Class class$java$net$InetAddress;
    static java.lang.Class class$java$net$Socket;

    private void <init>()
    {
        org.apache.commons.httpclient.protocol.ReflectionSocketFactory r0;

        r0 := @this: org.apache.commons.httpclient.protocol.ReflectionSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.Socket createSocket(java.lang.String, java.lang.String, int, java.net.InetAddress, int, int) throws java.io.IOException, java.net.UnknownHostException, org.apache.commons.httpclient.ConnectTimeoutException
    {
        java.lang.Integer $r46, $r50, $r60;
        java.net.InetAddress r13, $r45;
        java.lang.Exception $r28;
        java.lang.reflect.InvocationTargetException $r30;
        java.lang.Throwable $r31;
        java.lang.Object[] $r4, $r8, $r44, $r49, $r57, $r59;
        java.lang.reflect.Constructor $r11, $r27, $r43, $r48;
        java.lang.StringBuffer $r36, $r37, $r38, $r39;
        java.lang.String r0, r12, $r40;
        java.lang.Class[] $r2, $r6, $r15, $r19, $r24;
        java.io.IOException $r34;
        java.lang.ClassNotFoundException $r29;
        org.apache.commons.httpclient.ConnectTimeoutException $r35;
        java.lang.reflect.Method $r3, $r7, $r17, $r22, $r52, $r54, $r56, $r58;
        boolean $z0, $z1, $z2;
        java.net.Socket r10;
        int i0, i1, i2;
        java.lang.Class $r1, $r14, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r32, $r33, $r41, $r42, $r53, $r55;
        java.lang.Object $r5, $r9, $r47, $r51;

        r0 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r13 := @parameter3: java.net.InetAddress;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $z0 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: boolean REFLECTION_FAILED>;

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDefault", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

        $r6 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createSocket", $r6);

        $r8 = newarray (java.lang.Object)[0];

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r8);

        r10 = (java.net.Socket) $r9;

        $r11 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR>;

        if $r11 != null goto label04;

        $r23 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.InetSocketAddress");

        $r24 = newarray (java.lang.Class)[2];

        $r25 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$InetAddress>;

        if $r25 != null goto label02;

        $r42 = staticinvoke <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$(java.lang.String)>("java.net.InetAddress");

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$InetAddress> = $r42;

        goto label03;

     label02:
        $r42 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$InetAddress>;

     label03:
        $r24[0] = $r42;

        $r26 = <java.lang.Integer: java.lang.Class TYPE>;

        $r24[1] = $r26;

        $r27 = virtualinvoke $r23.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r24);

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR> = $r27;

     label04:
        $r43 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR>;

        $r44 = newarray (java.lang.Object)[2];

        $r45 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r12);

        $r44[0] = $r45;

        $r46 = new java.lang.Integer;

        specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i0);

        $r44[1] = $r46;

        $r47 = virtualinvoke $r43.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r44);

        $r48 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR>;

        $r49 = newarray (java.lang.Object)[2];

        $r49[0] = r13;

        $r50 = new java.lang.Integer;

        specialinvoke $r50.<java.lang.Integer: void <init>(int)>(i1);

        $r49[1] = $r50;

        $r51 = virtualinvoke $r48.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r49);

        $r52 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETCONNECT_METHOD>;

        if $r52 != null goto label07;

        $r18 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket>;

        if $r18 != null goto label05;

        $r53 = staticinvoke <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$(java.lang.String)>("java.net.Socket");

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket> = $r53;

        goto label06;

     label05:
        $r53 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket>;

     label06:
        $r19 = newarray (java.lang.Class)[2];

        $r20 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.SocketAddress");

        $r19[0] = $r20;

        $r21 = <java.lang.Integer: java.lang.Class TYPE>;

        $r19[1] = $r21;

        $r22 = virtualinvoke $r53.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("connect", $r19);

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETCONNECT_METHOD> = $r22;

     label07:
        $r54 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETBIND_METHOD>;

        if $r54 != null goto label10;

        $r14 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket>;

        if $r14 != null goto label08;

        $r55 = staticinvoke <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$(java.lang.String)>("java.net.Socket");

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket> = $r55;

        goto label09;

     label08:
        $r55 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class class$java$net$Socket>;

     label09:
        $r15 = newarray (java.lang.Class)[1];

        $r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.SocketAddress");

        $r15[0] = $r16;

        $r17 = virtualinvoke $r55.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("bind", $r15);

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETBIND_METHOD> = $r17;

     label10:
        $r56 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETBIND_METHOD>;

        $r57 = newarray (java.lang.Object)[1];

        $r57[0] = $r51;

        virtualinvoke $r56.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r10, $r57);

        $r58 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETCONNECT_METHOD>;

        $r59 = newarray (java.lang.Object)[2];

        $r59[0] = $r47;

        $r60 = new java.lang.Integer;

        specialinvoke $r60.<java.lang.Integer: void <init>(int)>(i2);

        $r59[1] = $r60;

        virtualinvoke $r58.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r10, $r59);

     label11:
        return r10;

     label12:
        $r30 := @caughtexception;

        $r31 = virtualinvoke $r30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r32 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS>;

        if $r32 != null goto label16;

     label13:
        $r41 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.SocketTimeoutException");

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS> = $r41;

     label14:
        goto label16;

     label15:
        $r29 := @caughtexception;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: boolean REFLECTION_FAILED> = 1;

        return null;

     label16:
        $r33 = <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS>;

        $z1 = virtualinvoke $r33.<java.lang.Class: boolean isInstance(java.lang.Object)>($r31);

        if $z1 == 0 goto label17;

        $r35 = new org.apache.commons.httpclient.ConnectTimeoutException;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The host did not accept the connection within timeout of ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ms");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.commons.httpclient.ConnectTimeoutException: void <init>(java.lang.String,java.lang.Throwable)>($r40, $r31);

        throw $r35;

     label17:
        $z2 = $r31 instanceof java.io.IOException;

        if $z2 == 0 goto label18;

        $r34 = (java.io.IOException) $r31;

        throw $r34;

     label18:
        return null;

     label19:
        $r28 := @caughtexception;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: boolean REFLECTION_FAILED> = 1;

        return null;

        catch java.lang.reflect.InvocationTargetException from label01 to label11 with label12;
        catch java.lang.ClassNotFoundException from label13 to label14 with label15;
        catch java.lang.Exception from label01 to label11 with label19;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: boolean REFLECTION_FAILED> = 0;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR> = null;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETCONNECT_METHOD> = null;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.reflect.Method SOCKETBIND_METHOD> = null;

        <org.apache.commons.httpclient.protocol.ReflectionSocketFactory: java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS> = null;

        return;
    }
}
