class org.bson.io.PoolOutputBuffer$Position extends java.lang.Object
{
    int x;
    int y;

    void <init>()
    {
        org.bson.io.PoolOutputBuffer$Position r0;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.bson.io.PoolOutputBuffer$Position: void reset()>();

        return;
    }

    void reset()
    {
        int $i1;
        org.bson.io.PoolOutputBuffer$Position r0;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        $i1 = (int) -1;

        r0.<org.bson.io.PoolOutputBuffer$Position: int x> = $i1;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = 0;

        return;
    }

    void reset(org.bson.io.PoolOutputBuffer$Position)
    {
        org.bson.io.PoolOutputBuffer$Position r0, r1;
        int $i0, $i1;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        r1 := @parameter0: org.bson.io.PoolOutputBuffer$Position;

        $i0 = r1.<org.bson.io.PoolOutputBuffer$Position: int x>;

        r0.<org.bson.io.PoolOutputBuffer$Position: int x> = $i0;

        $i1 = r1.<org.bson.io.PoolOutputBuffer$Position: int y>;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = $i1;

        return;
    }

    void reset(int)
    {
        org.bson.io.PoolOutputBuffer$Position r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        i0 := @parameter0: int;

        $i1 = i0 / 16384;

        $i2 = $i1 - 1;

        r0.<org.bson.io.PoolOutputBuffer$Position: int x> = $i2;

        $i3 = i0 % 16384;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = $i3;

        return;
    }

    int pos()
    {
        org.bson.io.PoolOutputBuffer$Position r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        $i0 = r0.<org.bson.io.PoolOutputBuffer$Position: int x>;

        $i1 = $i0 + 1;

        $i3 = $i1 * 16384;

        $i2 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    int getAndInc()
    {
        int $i0, $i1;
        org.bson.io.PoolOutputBuffer$Position r0;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        $i0 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        $i1 = $i0 + 1;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = $i1;

        return $i0;
    }

    void inc(int)
    {
        org.bson.io.PoolOutputBuffer$Position r0;
        int i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        i0 := @parameter0: int;

        $i1 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        $i2 = $i1 + i0;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = $i2;

        $i3 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        if $i3 <= 16384 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("something is wrong");

        throw $r1;

     label1:
        return;
    }

    void nextBuffer()
    {
        org.bson.io.PoolOutputBuffer$Position r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        $i0 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        if $i0 == 16384 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("broken");

        throw $r1;

     label1:
        $i1 = r0.<org.bson.io.PoolOutputBuffer$Position: int x>;

        $i2 = $i1 + 1;

        r0.<org.bson.io.PoolOutputBuffer$Position: int x> = $i2;

        r0.<org.bson.io.PoolOutputBuffer$Position: int y> = 0;

        return;
    }

    int len(int)
    {
        org.bson.io.PoolOutputBuffer$Position r0;
        int i0, $i1, $i2;

        r0 := @this: org.bson.io.PoolOutputBuffer$Position;

        i0 := @parameter0: int;

        $i1 = r0.<org.bson.io.PoolOutputBuffer$Position: int x>;

        if i0 >= $i1 goto label1;

        return 16384;

     label1:
        $i2 = r0.<org.bson.io.PoolOutputBuffer$Position: int y>;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.bson.io.PoolOutputBuffer$Position r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r2, $r3, $r4;
        java.lang.String $r5;

        r1 := @this: org.bson.io.PoolOutputBuffer$Position;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<org.bson.io.PoolOutputBuffer$Position: int x>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r1.<org.bson.io.PoolOutputBuffer$Position: int y>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
