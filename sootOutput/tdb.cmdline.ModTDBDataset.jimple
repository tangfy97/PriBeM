public class tdb.cmdline.ModTDBDataset extends arq.cmdline.ModDataset
{
    private arq.cmdline.ArgDecl argMem;
    private tdb.cmdline.ModTDBAssembler modAssembler;
    private java.lang.String inMemFile;

    public void <init>()
    {
        tdb.cmdline.ModTDBDataset r0;
        tdb.cmdline.ModTDBAssembler $r3;
        arq.cmdline.ArgDecl $r1;
        java.lang.String[] $r2;

        r0 := @this: tdb.cmdline.ModTDBDataset;

        specialinvoke r0.<arq.cmdline.ModDataset: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "data";

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "mem", $r2);

        r0.<tdb.cmdline.ModTDBDataset: arq.cmdline.ArgDecl argMem> = $r1;

        $r3 = new tdb.cmdline.ModTDBAssembler;

        specialinvoke $r3.<tdb.cmdline.ModTDBAssembler: void <init>()>();

        r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler> = $r3;

        r0.<tdb.cmdline.ModTDBDataset: java.lang.String inMemFile> = null;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        tdb.cmdline.ModTDBDataset r1;
        tdb.cmdline.ModTDBAssembler $r3;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r2;

        r1 := @this: tdb.cmdline.ModTDBDataset;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r2 = r1.<tdb.cmdline.ModTDBDataset: arq.cmdline.ArgDecl argMem>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r2, "--mem=FILE", "Execute on an in-memory TDB database (for testing)");

        $r3 = r1.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void addModule(arq.cmdline.ArgModuleGeneral)>($r3);

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        tdb.cmdline.ModTDBDataset r0;
        tdb.cmdline.ModTDBAssembler $r4;
        arq.cmdline.ArgDecl $r2;
        java.lang.String $r3;

        r0 := @this: tdb.cmdline.ModTDBDataset;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r0.<tdb.cmdline.ModTDBDataset: arq.cmdline.ArgDecl argMem>;

        $r3 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r2);

        r0.<tdb.cmdline.ModTDBDataset: java.lang.String inMemFile> = $r3;

        $r4 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        virtualinvoke $r4.<tdb.cmdline.ModTDBAssembler: void processArgs(arq.cmdline.CmdArgModule)>(r1);

        return;
    }

    public com.hp.hpl.jena.query.Dataset createDataset()
    {
        com.hp.hpl.jena.shared.JenaException $r23;
        com.hp.hpl.jena.tdb.base.file.Location $r5, $r7;
        java.lang.String $r1, $r3, $r11, $r15, $r20;
        com.hp.hpl.jena.sparql.ARQException $r24;
        boolean $z0;
        tdb.cmdline.ModTDBDataset r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r18;
        com.hp.hpl.jena.rdf.model.Resource $r12, $r16;
        java.lang.Exception $r21;
        tdb.cmdline.ModTDBAssembler $r2, $r4, $r6, $r10, $r14;
        arq.cmd.CmdException $r9, $r22;
        com.hp.hpl.jena.query.Dataset $r8, $r19, r25;
        java.lang.Object $r13, $r17;

        r0 := @this: tdb.cmdline.ModTDBDataset;

        $r1 = r0.<tdb.cmdline.ModTDBDataset: java.lang.String inMemFile>;

        if $r1 == null goto label01;

        $r19 = staticinvoke <com.hp.hpl.jena.tdb.TDBFactory: com.hp.hpl.jena.query.Dataset createDataset()>();

        $r20 = r0.<tdb.cmdline.ModTDBDataset: java.lang.String inMemFile>;

        staticinvoke <org.apache.jena.riot.RDFDataMgr: void read(com.hp.hpl.jena.query.Dataset,java.lang.String)>($r19, $r20);

        return $r19;

     label01:
        $r2 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r3 = virtualinvoke $r2.<tdb.cmdline.ModTDBAssembler: java.lang.String getAssemblerFile()>();

        if $r3 == null goto label09;

     label02:
        $r10 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r11 = virtualinvoke $r10.<tdb.cmdline.ModTDBAssembler: java.lang.String getAssemblerFile()>();

        $r12 = <com.hp.hpl.jena.tdb.assembler.VocabTDB: com.hp.hpl.jena.rdf.model.Resource tDatasetTDB>;

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.core.assembler.AssemblerUtils: java.lang.Object build(java.lang.String,com.hp.hpl.jena.rdf.model.Resource)>($r11, $r12);

        r25 = (com.hp.hpl.jena.query.Dataset) $r13;

        if r25 == null goto label03;

        $r18 = interfaceinvoke r25.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $z0 = $r18 instanceof com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction;

        if $z0 != 0 goto label03;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Unexpected: Not a TDB dataset for type DatasetTDB");

     label03:
        if r25 != null goto label04;

        $r14 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r15 = virtualinvoke $r14.<tdb.cmdline.ModTDBAssembler: java.lang.String getAssemblerFile()>();

        $r16 = <com.hp.hpl.jena.sparql.core.assembler.DatasetAssemblerVocab: com.hp.hpl.jena.rdf.model.Resource tDataset>;

        $r17 = staticinvoke <com.hp.hpl.jena.sparql.core.assembler.AssemblerUtils: java.lang.Object build(java.lang.String,com.hp.hpl.jena.rdf.model.Resource)>($r15, $r16);

        r25 = (com.hp.hpl.jena.query.Dataset) $r17;

     label04:
        goto label08;

     label05:
        $r24 := @caughtexception;

        throw $r24;

     label06:
        $r23 := @caughtexception;

        throw $r23;

     label07:
        $r21 := @caughtexception;

        $r22 = new arq.cmd.CmdException;

        specialinvoke $r22.<arq.cmd.CmdException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating", $r21);

        throw $r22;

     label08:
        return r25;

     label09:
        $r4 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r5 = virtualinvoke $r4.<tdb.cmdline.ModTDBAssembler: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        if $r5 != null goto label10;

        $r9 = new arq.cmd.CmdException;

        specialinvoke $r9.<arq.cmd.CmdException: void <init>(java.lang.String)>("No assembler file nor location provided");

        throw $r9;

     label10:
        $r6 = r0.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r7 = virtualinvoke $r6.<tdb.cmdline.ModTDBAssembler: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r8 = staticinvoke <com.hp.hpl.jena.tdb.TDBFactory: com.hp.hpl.jena.query.Dataset createDataset(com.hp.hpl.jena.tdb.base.file.Location)>($r7);

        return $r8;

        catch com.hp.hpl.jena.sparql.ARQException from label02 to label04 with label05;
        catch com.hp.hpl.jena.shared.JenaException from label02 to label04 with label06;
        catch java.lang.Exception from label02 to label04 with label07;
    }

    public com.hp.hpl.jena.tdb.base.file.Location getLocation()
    {
        java.util.List $r1;
        tdb.cmdline.ModTDBDataset r0;
        int $i0;
        java.lang.Object $r3;
        com.hp.hpl.jena.tdb.base.file.Location $r2;
        java.lang.String $r4;

        r0 := @this: tdb.cmdline.ModTDBDataset;

        $r1 = virtualinvoke r0.<tdb.cmdline.ModTDBDataset: java.util.List locations()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = new com.hp.hpl.jena.tdb.base.file.Location;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.file.Location: void <init>(java.lang.String)>($r4);

        return $r2;
    }

    public java.util.List locations()
    {
        com.hp.hpl.jena.query.Query $r10;
        com.hp.hpl.jena.tdb.base.file.Location $r3, $r17;
        java.util.ArrayList $r0;
        com.hp.hpl.jena.util.FileManager $r6;
        java.lang.String $r5, $r8, $r15, $r18;
        boolean $z0;
        tdb.cmdline.ModTDBDataset r1;
        java.lang.RuntimeException $r19;
        com.hp.hpl.jena.query.ResultSet $r12;
        com.hp.hpl.jena.rdf.model.Resource $r14;
        com.hp.hpl.jena.query.QuerySolution $r13;
        tdb.cmdline.ModTDBAssembler $r2, $r4, $r7, $r16;
        com.hp.hpl.jena.rdf.model.Model $r9;
        com.hp.hpl.jena.query.QueryExecution $r11, r20;

        r1 := @this: tdb.cmdline.ModTDBDataset;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r3 = virtualinvoke $r2.<tdb.cmdline.ModTDBAssembler: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        if $r3 == null goto label1;

        $r16 = r1.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r17 = virtualinvoke $r16.<tdb.cmdline.ModTDBAssembler: com.hp.hpl.jena.tdb.base.file.Location getLocation()>();

        $r18 = virtualinvoke $r17.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String getDirectoryPath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

     label1:
        $r4 = r1.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r5 = virtualinvoke $r4.<tdb.cmdline.ModTDBAssembler: java.lang.String getAssemblerFile()>();

        if $r5 == null goto label7;

        $r6 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        $r7 = r1.<tdb.cmdline.ModTDBDataset: tdb.cmdline.ModTDBAssembler modAssembler>;

        $r8 = virtualinvoke $r7.<tdb.cmdline.ModTDBAssembler: java.lang.String getAssemblerFile()>();

        $r9 = virtualinvoke $r6.<com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.rdf.model.Model loadModel(java.lang.String)>($r8);

        $r10 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>("PREFIX tdb:     <http://jena.hpl.hp.com/2008/tdb#> SELECT ?dir { [] tdb:location ?dir FILTER (isURI(?dir)) }");

        r20 = null;

     label2:
        $r11 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.rdf.model.Model)>($r10, $r9);

        r20 = $r11;

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.query.QueryExecution: com.hp.hpl.jena.query.ResultSet execSelect()>();

     label3:
        $z0 = interfaceinvoke $r12.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>("dir");

        $r15 = interfaceinvoke $r14.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label3;

     label4:
        goto label7;

     label5:
        $r19 := @caughtexception;

        if r20 == null goto label6;

        interfaceinvoke r20.<com.hp.hpl.jena.query.QueryExecution: void close()>();

     label6:
        throw $r19;

     label7:
        return $r0;

        catch java.lang.RuntimeException from label2 to label4 with label5;
    }
}
