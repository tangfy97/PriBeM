public abstract class org.springframework.validation.AbstractBindingResult extends org.springframework.validation.AbstractErrors implements org.springframework.validation.BindingResult, java.io.Serializable
{
    private final java.lang.String objectName;
    private org.springframework.validation.MessageCodesResolver messageCodesResolver;
    private final java.util.List errors;
    private final java.util.Set suppressedFields;

    protected void <init>(java.lang.String)
    {
        java.util.HashSet $r3;
        org.springframework.validation.AbstractBindingResult r0;
        org.springframework.validation.DefaultMessageCodesResolver $r1;
        java.lang.String r4;
        java.util.LinkedList $r2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.validation.AbstractErrors: void <init>()>();

        $r1 = new org.springframework.validation.DefaultMessageCodesResolver;

        specialinvoke $r1.<org.springframework.validation.DefaultMessageCodesResolver: void <init>()>();

        r0.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver messageCodesResolver> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.validation.AbstractBindingResult: java.util.Set suppressedFields> = $r3;

        r0.<org.springframework.validation.AbstractBindingResult: java.lang.String objectName> = r4;

        return;
    }

    public void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)
    {
        org.springframework.validation.MessageCodesResolver r0;
        org.springframework.validation.AbstractBindingResult r1;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        r0 := @parameter0: org.springframework.validation.MessageCodesResolver;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "MessageCodesResolver must not be null");

        r1.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver messageCodesResolver> = r0;

        return;
    }

    public org.springframework.validation.MessageCodesResolver getMessageCodesResolver()
    {
        org.springframework.validation.AbstractBindingResult r0;
        org.springframework.validation.MessageCodesResolver $r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver messageCodesResolver>;

        return $r1;
    }

    public java.lang.String getObjectName()
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.lang.String objectName>;

        return $r1;
    }

    public void reject(java.lang.String, java.lang.Object[], java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.Object[] r5;
        org.springframework.validation.ObjectError $r1;
        java.lang.String[] $r4;
        java.lang.String $r2, r3, r6;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        r6 := @parameter2: java.lang.String;

        $r1 = new org.springframework.validation.ObjectError;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r4 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String[] resolveMessageCodes(java.lang.String)>(r3);

        specialinvoke $r1.<org.springframework.validation.ObjectError: void <init>(java.lang.String,java.lang.String[],java.lang.Object[],java.lang.String)>($r2, $r4, r5, r6);

        virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: void addError(org.springframework.validation.ObjectError)>($r1);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.Object[] r10;
        org.springframework.validation.FieldError $r6;
        java.lang.String[] $r9;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, r3, $r4, $r7, r8, r11;
        boolean $z0, $z1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r3 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.Object[];

        r11 := @parameter3: java.lang.String;

        $r1 = "";

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getNestedPath()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>(r3);

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: void reject(java.lang.String,java.lang.Object[],java.lang.String)>(r8, r10, r11);

        return;

     label1:
        $r4 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object getActualFieldValue(java.lang.String)>($r4);

        $r6 = new org.springframework.validation.FieldError;

        $r7 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r9 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String)>(r8, r3);

        specialinvoke $r6.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String[],java.lang.Object[],java.lang.String)>($r7, $r4, $r5, 0, $r9, r10, r11);

        virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: void addError(org.springframework.validation.ObjectError)>($r6);

        return;
    }

    public void addError(org.springframework.validation.ObjectError)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.List $r2;
        org.springframework.validation.ObjectError r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: org.springframework.validation.ObjectError;

        $r2 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addAllErrors(org.springframework.validation.Errors)
    {
        org.springframework.validation.Errors r0;
        org.springframework.validation.AbstractBindingResult r2;
        java.lang.IllegalArgumentException $r6;
        java.util.List $r4, $r5;
        java.lang.String $r1, $r3;
        boolean $z0;

        r2 := @this: org.springframework.validation.AbstractBindingResult;

        r0 := @parameter0: org.springframework.validation.Errors;

        $r1 = interfaceinvoke r0.<org.springframework.validation.Errors: java.lang.String getObjectName()>();

        $r3 = virtualinvoke r2.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Errors object needs to have same object name");

        throw $r6;

     label1:
        $r4 = r2.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r5 = interfaceinvoke r0.<org.springframework.validation.Errors: java.util.List getAllErrors()>();

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return;
    }

    public java.lang.String[] resolveMessageCodes(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        org.springframework.validation.MessageCodesResolver $r1;
        java.lang.String[] $r4;
        java.lang.String r2, $r3;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>();

        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r4 = interfaceinvoke $r1.<org.springframework.validation.MessageCodesResolver: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String)>(r2, $r3);

        return $r4;
    }

    public java.lang.String[] resolveMessageCodes(java.lang.String, java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.String[] $r7;
        java.lang.Class $r2;
        org.springframework.validation.MessageCodesResolver $r3;
        java.lang.String r1, r4, $r5, $r6;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Class getFieldType(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>();

        $r5 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r6 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r1);

        $r7 = interfaceinvoke $r3.<org.springframework.validation.MessageCodesResolver: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)>(r4, $r5, $r6, $r2);

        return $r7;
    }

    public boolean hasErrors()
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.List $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        return $z1;
    }

    public int getErrorCount()
    {
        int $i0;
        org.springframework.validation.AbstractBindingResult r0;
        java.util.List $r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List getAllErrors()
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.List $r1, $r2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getGlobalErrors()
    {
        org.springframework.validation.AbstractBindingResult r1;
        java.util.Iterator $r3;
        java.util.List $r2, $r6;
        org.springframework.validation.ObjectError r5;
        java.lang.Object $r4;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = r1.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.validation.ObjectError) $r4;

        $z0 = r5 instanceof org.springframework.validation.FieldError;

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r6;
    }

    public org.springframework.validation.ObjectError getGlobalError()
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        org.springframework.validation.ObjectError r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.validation.ObjectError) $r3;

        $z1 = r4 instanceof org.springframework.validation.FieldError;

        if $z1 != 0 goto label2;

        return r4;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;
    }

    public java.util.List getFieldErrors()
    {
        org.springframework.validation.AbstractBindingResult r1;
        java.util.Iterator $r3;
        org.springframework.validation.FieldError $r6;
        java.util.List $r2, $r7;
        org.springframework.validation.ObjectError r5;
        java.lang.Object $r4;
        java.util.LinkedList $r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = r1.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.validation.ObjectError) $r4;

        $z0 = r5 instanceof org.springframework.validation.FieldError;

        if $z0 == 0 goto label2;

        $r6 = (org.springframework.validation.FieldError) r5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r7;
    }

    public org.springframework.validation.FieldError getFieldError()
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.Iterator $r2;
        org.springframework.validation.FieldError $r5;
        java.util.List $r1;
        org.springframework.validation.ObjectError r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.validation.ObjectError) $r3;

        $z1 = r4 instanceof org.springframework.validation.FieldError;

        if $z1 == 0 goto label2;

        $r5 = (org.springframework.validation.FieldError) r4;

        return $r5;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;
    }

    public java.util.List getFieldErrors(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r1;
        java.util.Iterator $r5;
        org.springframework.validation.FieldError $r8, $r9;
        java.util.List $r4, $r10;
        org.springframework.validation.ObjectError r7;
        java.lang.Object $r6;
        java.lang.String r2, $r3;
        java.util.LinkedList $r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r3 = virtualinvoke r1.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r2);

        $r4 = r1.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.springframework.validation.ObjectError) $r6;

        $z0 = r7 instanceof org.springframework.validation.FieldError;

        if $z0 == 0 goto label2;

        $r8 = (org.springframework.validation.FieldError) r7;

        $z1 = virtualinvoke r1.<org.springframework.validation.AbstractBindingResult: boolean isMatchingFieldError(java.lang.String,org.springframework.validation.FieldError)>($r3, $r8);

        if $z1 == 0 goto label2;

        $r9 = (org.springframework.validation.FieldError) r7;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        $r10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r10;
    }

    public org.springframework.validation.FieldError getFieldError(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.util.Iterator $r4;
        org.springframework.validation.FieldError r7;
        java.util.List $r3;
        org.springframework.validation.ObjectError r6;
        java.lang.Object $r5;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r1);

        $r3 = r0.<org.springframework.validation.AbstractBindingResult: java.util.List errors>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.springframework.validation.ObjectError) $r5;

        $z0 = r6 instanceof org.springframework.validation.FieldError;

        if $z0 == 0 goto label2;

        r7 = (org.springframework.validation.FieldError) r6;

        $z1 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: boolean isMatchingFieldError(java.lang.String,org.springframework.validation.FieldError)>($r2, r7);

        if $z1 == 0 goto label2;

        return r7;

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        return null;
    }

    public java.lang.Object getFieldValue(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        org.springframework.validation.FieldError $r2;
        java.lang.Object $r4, r5;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: org.springframework.validation.FieldError getFieldError(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = virtualinvoke $r2.<org.springframework.validation.FieldError: java.lang.Object getRejectedValue()>();

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object getActualFieldValue(java.lang.String)>($r3);

     label2:
        r5 = $r4;

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<org.springframework.validation.FieldError: boolean isBindingFailure()>();

        if $z0 != 0 goto label4;

     label3:
        r5 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object formatFieldValue(java.lang.String,java.lang.Object)>(r1, r5);

     label4:
        return r5;
    }

    public java.lang.Class getFieldType(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object getActualFieldValue(java.lang.String)>($r2);

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        return $r4;

     label1:
        return null;
    }

    public java.util.Map getModel()
    {
        org.springframework.validation.AbstractBindingResult r1;
        java.util.LinkedHashMap $r0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r8;
        java.lang.String $r2, $r5, $r6, $r7, $r9;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int)>(2);

        $r2 = virtualinvoke r1.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r3 = virtualinvoke r1.<org.springframework.validation.AbstractBindingResult: java.lang.Object getTarget()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r4 = new java.lang.StringBuilder;

        $r5 = <org.springframework.validation.AbstractBindingResult: java.lang.String MODEL_KEY_PREFIX>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        return $r0;
    }

    public java.lang.Object getRawFieldValue(java.lang.String)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.Object $r3;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object getActualFieldValue(java.lang.String)>($r2);

        return $r3;
    }

    public java.beans.PropertyEditor findEditor(java.lang.String, java.lang.Class)
    {
        org.springframework.validation.AbstractBindingResult r0;
        java.beans.PropertyEditor $r5;
        org.springframework.beans.PropertyEditorRegistry $r1;
        java.lang.Class r2, r6;
        java.lang.String r3, $r4;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()>();

        if $r1 == null goto label2;

        r6 = r2;

        if r2 != null goto label1;

        r6 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Class getFieldType(java.lang.String)>(r3);

     label1:
        $r4 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String fixedField(java.lang.String)>(r3);

        $r5 = interfaceinvoke $r1.<org.springframework.beans.PropertyEditorRegistry: java.beans.PropertyEditor findCustomEditor(java.lang.Class,java.lang.String)>(r6, $r4);

        return $r5;

     label2:
        return null;
    }

    public org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()
    {
        org.springframework.validation.AbstractBindingResult r0;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        return null;
    }

    public void recordSuppressedField(java.lang.String)
    {
        java.util.Set $r2;
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.String r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.validation.AbstractBindingResult: java.util.Set suppressedFields>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String[] getSuppressedFields()
    {
        java.util.Set $r1;
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.String[] $r2;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = r0.<org.springframework.validation.AbstractBindingResult: java.util.Set suppressedFields>;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>($r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.validation.AbstractBindingResult r0;
        org.springframework.validation.BindingResult r2;
        java.util.List $r7, $r8;
        java.lang.Object r1, $r5, $r6;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.validation.BindingResult;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.validation.BindingResult) r1;

        $r3 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $r4 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.Object getTarget()>();

        $r6 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.lang.Object getTarget()>();

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()>();

        $r8 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.util.List getAllErrors()>();

        $z3 = interfaceinvoke $r7.<java.util.List: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.validation.AbstractBindingResult r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.validation.AbstractBindingResult;

        $r1 = virtualinvoke r0.<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public abstract java.lang.Object getTarget();

    protected abstract java.lang.Object getActualFieldValue(java.lang.String);

    protected java.lang.Object formatFieldValue(java.lang.String, java.lang.Object)
    {
        java.lang.Object r0;
        org.springframework.validation.AbstractBindingResult r1;
        java.lang.String r2;

        r1 := @this: org.springframework.validation.AbstractBindingResult;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        return r0;
    }
}
