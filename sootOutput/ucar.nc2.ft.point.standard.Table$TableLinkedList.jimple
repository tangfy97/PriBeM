public class ucar.nc2.ft.point.standard.Table$TableLinkedList extends ucar.nc2.ft.point.standard.Table$TableStructure
{
    private java.lang.String start;
    private java.lang.String next;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.TableConfig r2;
        ucar.nc2.ft.point.standard.Table$TableLinkedList r0;
        java.lang.String $r3, $r4, $r5, $r6;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableLinkedList;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table$TableStructure: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start>;

        r0.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String start> = $r3;

        $r4 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String next>;

        r0.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String next> = $r4;

        $r5 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String start>;

        virtualinvoke r0.<ucar.nc2.ft.point.standard.Table$TableLinkedList: void checkNonDataVariable(java.lang.String)>($r5);

        $r6 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String next>;

        virtualinvoke r0.<ucar.nc2.ft.point.standard.Table$TableLinkedList: void checkNonDataVariable(java.lang.String)>($r6);

        return;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.StructureDataIteratorLinked $r7;
        ucar.ma2.StructureData $r1;
        ucar.nc2.dataset.StructureDS $r6;
        ucar.nc2.ft.point.standard.Table$TableLinkedList r2;
        int $i0, i1, $i3;
        ucar.nc2.ft.point.standard.Cursor r0;
        java.lang.String $r3, $r5;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableLinkedList;

        r0 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.ft.point.standard.Cursor: ucar.ma2.StructureData getParentStructure()>();

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String start>;

        $i0 = virtualinvoke $r1.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>($r3);

        $r7 = new ucar.nc2.ft.point.StructureDataIteratorLinked;

        $r6 = r2.<ucar.nc2.ft.point.standard.Table$TableLinkedList: ucar.nc2.dataset.StructureDS struct>;

        $r5 = r2.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String next>;

        $i3 = (int) -1;

        specialinvoke $r7.<ucar.nc2.ft.point.StructureDataIteratorLinked: void <init>(ucar.nc2.Structure,int,int,java.lang.String)>($r6, $i0, $i3, $r5);

        return $r7;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.point.standard.Table$TableLinkedList r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r6, $r9;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableLinkedList;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Linked(");

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String start>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r6 = r2.<ucar.nc2.ft.point.standard.Table$TableLinkedList: java.lang.String next>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
