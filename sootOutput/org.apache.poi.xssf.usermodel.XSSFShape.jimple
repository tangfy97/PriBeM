public abstract class org.apache.poi.xssf.usermodel.XSSFShape extends java.lang.Object
{
    public static final int EMU_PER_PIXEL;
    public static final int EMU_PER_POINT;
    public static final int POINT_DPI;
    public static final int PIXEL_DPI;
    protected org.apache.poi.xssf.usermodel.XSSFDrawing drawing;
    protected org.apache.poi.xssf.usermodel.XSSFShapeGroup parent;
    protected org.apache.poi.xssf.usermodel.XSSFAnchor anchor;

    public void <init>()
    {
        org.apache.poi.xssf.usermodel.XSSFShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFDrawing getDrawing()
    {
        org.apache.poi.xssf.usermodel.XSSFDrawing $r1;
        org.apache.poi.xssf.usermodel.XSSFShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.apache.poi.xssf.usermodel.XSSFDrawing drawing>;

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFShapeGroup getParent()
    {
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        org.apache.poi.xssf.usermodel.XSSFShapeGroup $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.apache.poi.xssf.usermodel.XSSFShapeGroup parent>;

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFAnchor getAnchor()
    {
        org.apache.poi.xssf.usermodel.XSSFAnchor $r1;
        org.apache.poi.xssf.usermodel.XSSFShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.apache.poi.xssf.usermodel.XSSFAnchor anchor>;

        return $r1;
    }

    protected abstract org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties();

    public boolean isNoFill()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetNoFill()>();

        return $z0;
    }

    public void setNoFill(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties $r2;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        z2 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetPattFill()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: void unsetPattFill()>();

     label1:
        $z1 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetSolidFill()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: void unsetSolidFill()>();

     label2:
        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties newInstance()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: void setNoFill(org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties)>($r2);

        return;
    }

    public void setFillColor(int, int, int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        byte[] $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r2;
        byte $b1, $b3, $b5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r4;
        int i0, i2, i4;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetSolidFill()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

     label2:
        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor newInstance()>();

        $r3 = newarray (byte)[3];

        $b1 = (byte) i0;

        $r3[0] = $b1;

        $b3 = (byte) i2;

        $r3[1] = $b3;

        $b5 = (byte) i4;

        $r3[2] = $b5;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r3);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void setSrgbClr(org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor)>($r2);

        return;
    }

    public void setLineStyleColor(int, int, int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        byte[] $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r2;
        byte $b1, $b3, $b5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r5;
        int i0, i2, i4;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetLn()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLn()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLn()>();

     label2:
        $z1 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetSolidFill()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        goto label4;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

     label4:
        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor newInstance()>();

        $r3 = newarray (byte)[3];

        $b1 = (byte) i0;

        $r3[0] = $b1;

        $b3 = (byte) i2;

        $r3[1] = $b3;

        $b5 = (byte) i4;

        $r3[2] = $b5;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r3);

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void setSrgbClr(org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor)>($r2);

        return;
    }

    public void setLineWidth(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r2;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0;
        double d0, $d1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetLn()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLn()>();

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLn()>();

     label2:
        $d1 = d0 * 12700.0;

        $i0 = (int) $d1;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setW(int)>($i0);

        return;
    }

    public void setLineStyle(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties $r2;
        int i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFShape r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFShape;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: boolean isSetLn()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLn()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLn()>();

     label2:
        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties newInstance()>();

        $i1 = i0 + 1;

        $r3 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum forInt(int)>($i1);

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties: void setVal(org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum)>($r3);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setPrstDash(org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.xssf.usermodel.XSSFShape: int PIXEL_DPI> = 96;

        <org.apache.poi.xssf.usermodel.XSSFShape: int POINT_DPI> = 72;

        <org.apache.poi.xssf.usermodel.XSSFShape: int EMU_PER_POINT> = 12700;

        <org.apache.poi.xssf.usermodel.XSSFShape: int EMU_PER_PIXEL> = 9525;

        return;
    }
}
