public class org.apache.cxf.wsdl.JAXBExtensionHelper extends java.lang.Object implements javax.wsdl.extensions.ExtensionSerializer, javax.wsdl.extensions.ExtensionDeserializer
{
    private static final java.util.logging.Logger LOG;
    final java.lang.Class typeClass;
    final java.lang.String namespace;
    java.lang.String jaxbNamespace;
    private javax.xml.bind.JAXBContext context;
    private java.util.Set classes;

    public void <init>(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.apache.cxf.wsdl.JAXBExtensionHelper r0;

        r0 := @this: org.apache.cxf.wsdl.JAXBExtensionHelper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.Class typeClass> = r1;

        r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.String namespace> = r2;

        return;
    }

    void setJaxbNamespace(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.wsdl.JAXBExtensionHelper r0;

        r0 := @this: org.apache.cxf.wsdl.JAXBExtensionHelper;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.String jaxbNamespace> = r1;

        return;
    }

    public static void addExtensions(javax.wsdl.extensions.ExtensionRegistry, java.lang.String, java.lang.String) throws javax.xml.bind.JAXBException, java.lang.ClassNotFoundException
    {
        javax.wsdl.extensions.ExtensionRegistry r5;
        java.lang.Class $r1, $r3, $r4;
        java.lang.String r0, r2;

        r5 := @parameter0: javax.wsdl.extensions.ExtensionRegistry;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/cxf/wsdl/JAXBExtensionHelper;");

        $r3 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r2, class "Lorg/apache/cxf/wsdl/JAXBExtensionHelper;");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Ljavax/wsdl/extensions/ExtensibilityElement;");

        staticinvoke <org.apache.cxf.wsdl.JAXBExtensionHelper: void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)>(r5, $r1, $r4, null);

        return;
    }

    public static void addExtensions(javax.wsdl.extensions.ExtensionRegistry, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.bind.JAXBException, java.lang.ClassNotFoundException
    {
        javax.wsdl.extensions.ExtensionRegistry r5;
        java.lang.Class $r1, $r3, $r4;
        java.lang.String r0, r2, r6;

        r5 := @parameter0: javax.wsdl.extensions.ExtensionRegistry;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r0, class "Lorg/apache/cxf/wsdl/JAXBExtensionHelper;");

        $r3 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r2, class "Lorg/apache/cxf/wsdl/JAXBExtensionHelper;");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Ljavax/wsdl/extensions/ExtensibilityElement;");

        staticinvoke <org.apache.cxf.wsdl.JAXBExtensionHelper: void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)>(r5, $r1, $r4, r6);

        return;
    }

    public static void addExtensions(javax.wsdl.extensions.ExtensionRegistry, java.lang.Class, java.lang.Class) throws javax.xml.bind.JAXBException
    {
        javax.wsdl.extensions.ExtensionRegistry r0;
        java.lang.Class r1, r2;

        r0 := @parameter0: javax.wsdl.extensions.ExtensionRegistry;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

        staticinvoke <org.apache.cxf.wsdl.JAXBExtensionHelper: void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)>(r0, r1, r2, null);

        return;
    }

    public static void addExtensions(javax.wsdl.extensions.ExtensionRegistry, java.lang.Class, java.lang.Class, java.lang.String) throws javax.xml.bind.JAXBException
    {
        java.lang.reflect.Method[] $r10;
        org.apache.cxf.wsdl.JAXBExtensionHelper $r0;
        javax.xml.bind.'annotation'.XmlElementDecl r31;
        java.lang.reflect.Method r26;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, z7;
        java.util.logging.Logger $r12;
        java.lang.'annotation'.Annotation $r17, $r24, $r30;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.ClassLoader $r8;
        javax.xml.namespace.QName $r21, $r34;
        javax.xml.bind.'annotation'.XmlSchema r40;
        java.lang.Object[] $r11;
        java.util.logging.Level $r13;
        javax.wsdl.extensions.ExtensionRegistry r22;
        int $i0, i1, i2;
        java.lang.String r2, $r4, $r7, $r14, $r16, $r18, $r19, $r25, $r32, r33, $r35, $r37, r39;
        java.lang.Package $r20, $r23;
        java.lang.Class[] $r27, $r28;
        javax.xml.bind.'annotation'.XmlRootElement r38;
        java.lang.Class r1, $r9, r15, $r29;
        java.lang.ClassNotFoundException $r36;

        r22 := @parameter0: javax.wsdl.extensions.ExtensionRegistry;

        r15 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.Class;

        r2 := @parameter3: java.lang.String;

        $r0 = new org.apache.cxf.wsdl.JAXBExtensionHelper;

        specialinvoke $r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: void <init>(java.lang.Class,java.lang.String)>(r1, r2);

        z4 = 0;

        z7 = 0;

        z6 = 0;

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ObjectFactory");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r7, 1, $r8);

        $r10 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)>($r9);

        i1 = lengthof $r10;

        i2 = 0;

     label02:
        if i2 >= i1 goto label07;

        r26 = $r10[i2];

        $r27 = virtualinvoke r26.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r27;

        if $i0 != 1 goto label06;

        $r28 = virtualinvoke r26.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r29 = $r28[0];

        $z3 = virtualinvoke $r29.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label06;

        $r30 = virtualinvoke r26.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlElementDecl;");

        r31 = (javax.xml.bind.'annotation'.XmlElementDecl) $r30;

        if null == r31 goto label06;

        $r32 = interfaceinvoke r31.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String name()>();

        if r2 == null goto label03;

        $r37 = r2;

        goto label04;

     label03:
        $r37 = interfaceinvoke r31.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String namespace()>();

     label04:
        r33 = $r37;

        if r2 == null goto label05;

        $r35 = interfaceinvoke r31.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String namespace()>();

        virtualinvoke $r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: void setJaxbNamespace(java.lang.String)>($r35);

     label05:
        $r34 = new javax.xml.namespace.QName;

        specialinvoke $r34.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r33, $r32);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void registerDeserializer(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensionDeserializer)>(r15, $r34, $r0);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void registerSerializer(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensionSerializer)>(r15, $r34, $r0);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void mapExtensionTypes(java.lang.Class,javax.xml.namespace.QName,java.lang.Class)>(r15, $r34, r1);

        z4 = 1;

        z7 = 1;

        z6 = 1;

     label06:
        i2 = i2 + 1;

        goto label02;

     label07:
        goto label09;

     label08:
        $r36 := @caughtexception;

     label09:
        if z7 != 0 goto label14;

        $r17 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlRootElement;");

        r38 = (javax.xml.bind.'annotation'.XmlRootElement) $r17;

        if r38 == null goto label14;

        $r18 = interfaceinvoke r38.<javax.xml.bind.'annotation'.XmlRootElement: java.lang.String name()>();

        $r19 = interfaceinvoke r38.<javax.xml.bind.'annotation'.XmlRootElement: java.lang.String namespace()>();

        r39 = $r19;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r19);

        if $z0 != 0 goto label10;

        $r25 = "##default";

        $z2 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z2 == 0 goto label12;

     label10:
        r40 = null;

        $r20 = virtualinvoke r1.<java.lang.Class: java.lang.Package getPackage()>();

        if $r20 == null goto label11;

        $r23 = virtualinvoke r1.<java.lang.Class: java.lang.Package getPackage()>();

        $r24 = virtualinvoke $r23.<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlSchema;");

        r40 = (javax.xml.bind.'annotation'.XmlSchema) $r24;

     label11:
        if r40 == null goto label12;

        r39 = interfaceinvoke r40.<javax.xml.bind.'annotation'.XmlSchema: java.lang.String namespace()>();

     label12:
        $z5 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r39);

        if $z5 != 0 goto label14;

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r18);

        if $z1 != 0 goto label14;

        if r2 == null goto label13;

        virtualinvoke $r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: void setJaxbNamespace(java.lang.String)>(r39);

        r39 = r2;

     label13:
        $r21 = new javax.xml.namespace.QName;

        specialinvoke $r21.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r39, $r18);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void registerDeserializer(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensionDeserializer)>(r15, $r21, $r0);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void registerSerializer(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensionSerializer)>(r15, $r21, $r0);

        virtualinvoke r22.<javax.wsdl.extensions.ExtensionRegistry: void mapExtensionTypes(java.lang.Class,javax.xml.namespace.QName,java.lang.Class)>(r15, $r21, r1);

        z4 = 1;

        z6 = 1;

     label14:
        if z6 != 0 goto label15;

        $r12 = <org.apache.cxf.wsdl.JAXBExtensionHelper: java.util.logging.Logger LOG>;

        $r13 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r11 = newarray (java.lang.Object)[2];

        $r14 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r11[0] = $r14;

        $r16 = virtualinvoke r15.<java.lang.Class: java.lang.String getName()>();

        $r11[1] = $r16;

        virtualinvoke $r12.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])>($r13, "EXTENSION_NOT_REGISTERED", $r11);

     label15:
        return;

        catch java.lang.ClassNotFoundException from label01 to label07 with label08;
    }

    private synchronized javax.xml.bind.JAXBContext getContext() throws javax.xml.bind.JAXBException
    {
        java.util.Set $r4, $r7;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r3;
        java.lang.RuntimeException $r9;
        javax.xml.bind.JAXBException $r8;
        org.apache.cxf.wsdl.JAXBExtensionHelper r0;
        java.lang.Class $r2;
        javax.xml.bind.JAXBContext $r1, $r5, $r6;

        r0 := @this: org.apache.cxf.wsdl.JAXBExtensionHelper;

        $r1 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: javax.xml.bind.JAXBContext context>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.util.Set classes>;

        if $r7 != null goto label4;

     label1:
        $r2 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.Class typeClass>;

        $r3 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class)>($r2);

        $r4 = virtualinvoke $r3.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.util.Set classes> = $r4;

        $r5 = virtualinvoke $r3.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: javax.xml.bind.JAXBContext context> = $r5;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r6 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: javax.xml.bind.JAXBContext context>;

        return $r6;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public void marshall(java.lang.Class, javax.xml.namespace.QName, javax.wsdl.extensions.ExtensibilityElement, java.io.PrintWriter, javax.wsdl.Definition, javax.wsdl.extensions.ExtensionRegistry) throws javax.wsdl.WSDLException
    {
        org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter $r17;
        java.lang.reflect.Method[] $r15;
        org.apache.cxf.wsdl.JAXBExtensionHelper r0;
        javax.xml.stream.XMLStreamWriter $r19;
        java.lang.reflect.Method r23;
        boolean $z0;
        java.io.PrintWriter r18;
        java.lang.Exception $r30;
        java.lang.StringBuilder $r6, $r9, $r10;
        java.lang.ClassLoader $r13;
        javax.xml.namespace.QName r32;
        java.lang.Object[] $r29;
        javax.xml.bind.Marshaller $r2;
        org.apache.cxf.wsdl.JAXBExtensionHelper$1 $r21;
        javax.wsdl.extensions.ExtensionRegistry r33;
        int $i0, i1, i2;
        java.lang.Boolean $r3, $r4;
        java.lang.String $r8, $r11;
        javax.xml.bind.JAXBContext $r1;
        javax.wsdl.Definition r22;
        javax.wsdl.extensions.ExtensibilityElement r5;
        java.lang.Class[] $r24, $r25;
        javax.wsdl.WSDLException $r31;
        javax.xml.stream.XMLOutputFactory $r16;
        java.lang.Class $r7, $r12, $r14, r20, $r26, $r27;
        java.lang.Object $r28, r34;

        r0 := @this: org.apache.cxf.wsdl.JAXBExtensionHelper;

        r20 := @parameter0: java.lang.Class;

        r32 := @parameter1: javax.xml.namespace.QName;

        r5 := @parameter2: javax.wsdl.extensions.ExtensibilityElement;

        r18 := @parameter3: java.io.PrintWriter;

        r22 := @parameter4: javax.wsdl.Definition;

        r33 := @parameter5: javax.wsdl.extensions.ExtensionRegistry;

     label1:
        $r1 = specialinvoke r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: javax.xml.bind.JAXBContext getContext()>();

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.encoding", "UTF-8");

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r3);

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.formatted.output", $r4);

        r34 = r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.Class typeClass>;

        $r8 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ObjectFactory");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r11, 1, $r13);

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i1 = lengthof $r15;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r23 = $r15[i2];

        $r24 = virtualinvoke r23.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r24;

        if $i0 != 1 goto label3;

        $r25 = virtualinvoke r23.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r27 = $r25[0];

        $r26 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.Class typeClass>;

        $z0 = virtualinvoke $r27.<java.lang.Object: boolean equals(java.lang.Object)>($r26);

        if $z0 == 0 goto label3;

        $r28 = virtualinvoke $r14.<java.lang.Class: java.lang.Object newInstance()>();

        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r5;

        r34 = virtualinvoke r23.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r28, $r29);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r16 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>();

        $r17 = new org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter;

        $r19 = virtualinvoke $r16.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r18);

        specialinvoke $r17.<org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter: void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)>($r19, r20);

        $r21 = new org.apache.cxf.wsdl.JAXBExtensionHelper$1;

        specialinvoke $r21.<org.apache.cxf.wsdl.JAXBExtensionHelper$1: void <init>(org.apache.cxf.wsdl.JAXBExtensionHelper,javax.wsdl.Definition)>(r0, r22);

        interfaceinvoke $r17.<javax.xml.stream.XMLStreamWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>($r21);

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.stream.XMLStreamWriter)>(r34, $r17);

        interfaceinvoke $r17.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label5:
        goto label7;

     label6:
        $r30 := @caughtexception;

        $r31 = new javax.wsdl.WSDLException;

        specialinvoke $r31.<javax.wsdl.WSDLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("PARSER_ERROR", "", $r30);

        throw $r31;

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class, javax.xml.namespace.QName, org.w3c.dom.Element, javax.wsdl.Definition, javax.wsdl.extensions.ExtensionRegistry) throws javax.wsdl.WSDLException
    {
        java.lang.Throwable $r8;
        org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate $r6;
        javax.wsdl.extensions.ExtensionRegistry r17;
        javax.xml.stream.XMLStreamReader $r5, r18;
        org.apache.cxf.wsdl.JAXBExtensionHelper r0;
        java.lang.String $r3, $r14;
        javax.xml.bind.JAXBContext $r1;
        boolean $z0, $z1;
        javax.xml.bind.Unmarshaller $r2;
        javax.wsdl.Definition r16;
        javax.wsdl.extensions.ExtensibilityElement $r21, r22;
        javax.xml.bind.JAXBElement r20;
        java.lang.Exception $r9;
        javax.wsdl.WSDLException $r10;
        org.w3c.dom.Element r4;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.Class r15;
        java.lang.Object r19;
        javax.xml.namespace.QName r7;

        r0 := @this: org.apache.cxf.wsdl.JAXBExtensionHelper;

        r15 := @parameter0: java.lang.Class;

        r7 := @parameter1: javax.xml.namespace.QName;

        r4 := @parameter2: org.w3c.dom.Element;

        r16 := @parameter3: javax.wsdl.Definition;

        r17 := @parameter4: javax.wsdl.extensions.ExtensionRegistry;

        r18 = null;

     label01:
        $r1 = specialinvoke r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: javax.xml.bind.JAXBContext getContext()>();

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r3 = r0.<org.apache.cxf.wsdl.JAXBExtensionHelper: java.lang.String namespace>;

        if $r3 != null goto label02;

        r19 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(org.w3c.dom.Node)>(r4);

        goto label03;

     label02:
        $r5 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(org.w3c.dom.Element)>(r4);

        r18 = $r5;

        $r6 = new org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate;

        specialinvoke $r6.<org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate: void <init>(org.apache.cxf.wsdl.JAXBExtensionHelper,javax.xml.stream.XMLStreamReader)>(r0, $r5);

        r18 = $r6;

        r19 = interfaceinvoke $r2.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>($r6);

     label03:
        $z0 = r19 instanceof javax.xml.bind.JAXBElement;

        if $z0 == 0 goto label04;

        r20 = (javax.xml.bind.JAXBElement) r19;

        r19 = virtualinvoke r20.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

     label04:
        $z1 = r19 instanceof javax.wsdl.extensions.ExtensibilityElement;

        if $z1 == 0 goto label05;

        $r21 = (javax.wsdl.extensions.ExtensibilityElement) r19;

        goto label06;

     label05:
        $r21 = null;

     label06:
        r22 = $r21;

        if null == $r21 goto label07;

        interfaceinvoke $r21.<javax.wsdl.extensions.ExtensibilityElement: void setElementType(javax.xml.namespace.QName)>(r7);

     label07:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r18);

        return r22;

     label08:
        $r9 := @caughtexception;

        $r10 = new javax.wsdl.WSDLException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading element ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<javax.wsdl.WSDLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("PARSER_ERROR", $r14, $r9);

        throw $r10;

     label09:
        $r8 := @caughtexception;

     label10:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamReader)>(r18);

        throw $r8;

        catch java.lang.Exception from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/wsdl/JAXBExtensionHelper;");

        <org.apache.cxf.wsdl.JAXBExtensionHelper: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
