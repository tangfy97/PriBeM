public class org.apache.poi.poifs.crypt.DataSpaceMapUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.poifs.crypt.DataSpaceMapUtils r0;

        r0 := @this: org.apache.poi.poifs.crypt.DataSpaceMapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addDefaultDataSpace(org.apache.poi.poifs.filesystem.DirectoryEntry) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryEntry r5;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader $r8;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition $r6;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry $r0;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMap $r3;
        java.lang.String[] $r2, $r7;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$IRMDSTransformInfo $r9;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceVersionInfo $r10;
        int[] $r1;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry[] $r4;

        r5 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        $r0 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry;

        $r1 = newarray (int)[1];

        $r1[0] = 0;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "EncryptedPackage";

        specialinvoke $r0.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry: void <init>(int[],java.lang.String[],java.lang.String)>($r1, $r2, "StrongEncryptionDataSpace");

        $r3 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMap;

        $r4 = newarray (org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry)[1];

        $r4[0] = $r0;

        specialinvoke $r3.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMap: void <init>(org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceMapEntry[])>($r4);

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: org.apache.poi.poifs.filesystem.DocumentEntry createEncryptionEntry(org.apache.poi.poifs.filesystem.DirectoryEntry,java.lang.String,org.apache.poi.poifs.crypt.standard.EncryptionRecord)>(r5, "\u0006DataSpaces/DataSpaceMap", $r3);

        $r6 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "StrongEncryptionTransform";

        specialinvoke $r6.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceDefinition: void <init>(java.lang.String[])>($r7);

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: org.apache.poi.poifs.filesystem.DocumentEntry createEncryptionEntry(org.apache.poi.poifs.filesystem.DirectoryEntry,java.lang.String,org.apache.poi.poifs.crypt.standard.EncryptionRecord)>(r5, "\u0006DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace", $r6);

        $r8 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader;

        specialinvoke $r8.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader: void <init>(int,java.lang.String,java.lang.String,int,int,int,int,int,int)>(1, "{FF9A3F03-56EF-4613-BDD5-5A41C1D07246}", "Microsoft.Container.EncryptionTransform", 1, 0, 1, 0, 1, 0);

        $r9 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$IRMDSTransformInfo;

        specialinvoke $r9.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$IRMDSTransformInfo: void <init>(org.apache.poi.poifs.crypt.DataSpaceMapUtils$TransformInfoHeader,int,java.lang.String)>($r8, 0, null);

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: org.apache.poi.poifs.filesystem.DocumentEntry createEncryptionEntry(org.apache.poi.poifs.filesystem.DirectoryEntry,java.lang.String,org.apache.poi.poifs.crypt.standard.EncryptionRecord)>(r5, "\u0006DataSpaces/TransformInfo/StrongEncryptionTransform/\u0006Primary", $r9);

        $r10 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceVersionInfo;

        specialinvoke $r10.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$DataSpaceVersionInfo: void <init>(java.lang.String,int,int,int,int,int,int)>("Microsoft.Container.DataSpaces", 1, 0, 1, 0, 1, 0);

        staticinvoke <org.apache.poi.poifs.crypt.DataSpaceMapUtils: org.apache.poi.poifs.filesystem.DocumentEntry createEncryptionEntry(org.apache.poi.poifs.filesystem.DirectoryEntry,java.lang.String,org.apache.poi.poifs.crypt.standard.EncryptionRecord)>(r5, "\u0006DataSpaces/Version", $r10);

        return;
    }

    public static org.apache.poi.poifs.filesystem.DocumentEntry createEncryptionEntry(org.apache.poi.poifs.filesystem.DirectoryEntry, java.lang.String, org.apache.poi.poifs.crypt.standard.EncryptionRecord) throws java.io.IOException
    {
        byte[] r14;
        org.apache.poi.poifs.filesystem.Entry $r7, $r11;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r0, r4, $r8, $r9, $r10;
        org.apache.poi.poifs.filesystem.DocumentEntry $r6;
        boolean $z0, $z1;
        org.apache.poi.poifs.crypt.DataSpaceMapUtils$1 $r5;
        org.apache.poi.poifs.filesystem.DirectoryEntry r12, $r13;
        org.apache.poi.util.LittleEndianByteArrayOutputStream $r2;
        org.apache.poi.poifs.crypt.standard.EncryptionRecord r3;

        r12 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.poi.poifs.crypt.standard.EncryptionRecord;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        i5 = 0;

     label1:
        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label4;

        $r8 = $r1[i5];

        $z1 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean hasEntry(java.lang.String)>($r8);

        if $z1 == 0 goto label2;

        $r10 = $r1[i5];

        $r11 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>($r10);

        $r13 = (org.apache.poi.poifs.filesystem.DirectoryEntry) $r11;

        goto label3;

     label2:
        $r9 = $r1[i5];

        $r13 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String)>($r9);

     label3:
        r12 = $r13;

        i5 = i5 + 1;

        goto label1;

     label4:
        r14 = newarray (byte)[5000];

        $r2 = new org.apache.poi.util.LittleEndianByteArrayOutputStream;

        specialinvoke $r2.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int)>(r14, 0);

        interfaceinvoke r3.<org.apache.poi.poifs.crypt.standard.EncryptionRecord: void write(org.apache.poi.util.LittleEndianByteArrayOutputStream)>($r2);

        $i2 = lengthof $r1;

        $i3 = $i2 - 1;

        r4 = $r1[$i3];

        $z0 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean hasEntry(java.lang.String)>(r4);

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>(r4);

        interfaceinvoke $r7.<org.apache.poi.poifs.filesystem.Entry: boolean delete()>();

     label5:
        $i4 = virtualinvoke $r2.<org.apache.poi.util.LittleEndianByteArrayOutputStream: int getWriteIndex()>();

        $r5 = new org.apache.poi.poifs.crypt.DataSpaceMapUtils$1;

        specialinvoke $r5.<org.apache.poi.poifs.crypt.DataSpaceMapUtils$1: void <init>(byte[])>(r14);

        $r6 = interfaceinvoke r12.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,int,org.apache.poi.poifs.filesystem.POIFSWriterListener)>(r4, $i4, $r5);

        return $r6;
    }

    public static java.lang.String readUnicodeLPP4(org.apache.poi.util.LittleEndianInput)
    {
        byte[] r1;
        org.apache.poi.EncryptedDocumentException $r4;
        org.apache.poi.util.LittleEndianInput r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.io.UnsupportedEncodingException $r3;

        r0 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $i0 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        r1 = newarray (byte)[$i0];

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: void readFully(byte[])>(r1);

        $i1 = $i0 % 4;

        if $i1 != 2 goto label1;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: short readShort()>();

     label1:
        $r2 = new java.lang.String;

        $i2 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, $i2, "UTF-16LE");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r4.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void writeUnicodeLPP4(org.apache.poi.util.LittleEndianOutput, java.lang.String)
    {
        byte[] $r1;
        org.apache.poi.util.LittleEndianOutput r2;
        org.apache.poi.EncryptedDocumentException $r4;
        int $i0, $i1, $i2;
        java.lang.String r0;
        java.io.UnsupportedEncodingException $r3;

        r2 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        r0 := @parameter1: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16LE");

        $i0 = lengthof $r1;

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i0);

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>($r1);

        $i1 = lengthof $r1;

        $i2 = $i1 % 4;

        if $i2 != 2 goto label2;

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>(0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r4.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String readUtf8LPP4(org.apache.poi.util.LittleEndianInput)
    {
        byte[] r5;
        org.apache.poi.EncryptedDocumentException $r3;
        org.apache.poi.util.LittleEndianInput r0;
        int $i0, i1, $i2, $i3, i4;
        java.lang.String $r1, $r4;
        java.io.UnsupportedEncodingException $r2;

        r0 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $i0 = interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        if $i0 == 0 goto label1;

        if $i0 != 4 goto label4;

     label1:
        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        if $i0 != 0 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = "";

     label3:
        return $r4;

     label4:
        r5 = newarray (byte)[$i0];

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: void readFully(byte[])>(r5);

        i1 = $i0 % 4;

        if i1 <= 0 goto label6;

        i4 = 0;

     label5:
        $i3 = 4 - i1;

        if i4 >= $i3 goto label6;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianInput: byte readByte()>();

        i4 = i4 + 1;

        goto label5;

     label6:
        $r1 = new java.lang.String;

        $i2 = lengthof r5;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r5, 0, $i2, "UTF-8");

     label7:
        return $r1;

     label8:
        $r2 := @caughtexception;

        $r3 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r3.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }

    public static void writeUtf8LPP4(org.apache.poi.util.LittleEndianOutput, java.lang.String)
    {
        byte[] $r3;
        byte $b4;
        org.apache.poi.util.LittleEndianOutput r1;
        org.apache.poi.EncryptedDocumentException $r5;
        int $i0, $i1, i2, $i3, i5;
        java.lang.String r0, $r2;
        java.io.UnsupportedEncodingException $r4;
        boolean $z0;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label4;

     label1:
        if r0 != null goto label2;

        $b4 = 0;

        goto label3;

     label2:
        $b4 = 4;

     label3:
        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($b4);

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>(0);

        goto label8;

     label4:
        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r3;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i0);

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>($r3);

        $i1 = lengthof $r3;

        i2 = $i1 % 4;

        if i2 <= 0 goto label6;

        i5 = 0;

     label5:
        $i3 = 4 - i2;

        if i5 >= $i3 goto label6;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(0);

        i5 = i5 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r5.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label4 to label6 with label7;
    }
}
