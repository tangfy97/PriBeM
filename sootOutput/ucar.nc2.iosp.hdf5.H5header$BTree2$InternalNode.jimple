class ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode extends java.lang.Object
{
    ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries;
    int depth;
    final ucar.nc2.iosp.hdf5.H5header$BTree2 this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2, long, short, short, int) throws java.io.IOException
    {
        byte[] $r61;
        byte $b3, $b4, $b5, $b19;
        ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode r0;
        ucar.nc2.iosp.hdf5.H5header $r2, $r4, $r5, $r8, $r10, $r15, $r19, $r20, $r21, $r31, $r37, $r53, $r57;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r40, $r41, $r42, $r43, $r44, $r45, $r50, $r51, $r56, $r59, $r62, $r64, $r67, $r70;
        long l1, $l2, $l13, $l14, $l15, $l16, $l17, $l18, $l20;
        short s6, s9;
        java.lang.String $r30, $r46, $r52, $r60, $r63;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2 r18, $r35, $r68, $r69;
        java.lang.IllegalStateException $r65, $r66;
        ucar.unidata.io.RandomAccessFile $r3, $r6, $r9, $r11, $r16, $r58;
        boolean $z0, $z1, $z2, $z3;
        int i0, $i7, $i8, $i10, i11, $i12, i21, i22, i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        java.io.PrintStream $r22, $r38, $r54;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] $r12, $r14, $r17, $r33, $r34;
        ucar.nc2.iosp.hdf5.H5header$BTree2 r1;
        java.lang.Object $r36;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$BTree2;

        l1 := @parameter1: long;

        s6 := @parameter2: short;

        s9 := @parameter3: short;

        i0 := @parameter4: int;

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: int depth> = i0;

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r2);

        $r4 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>($r4, l1);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l2);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1300()>();

        if $z0 == 0 goto label01;

        $r53 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r54 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r53);

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--Btree2 InternalNode position=");

        $r57 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r58 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r57);

        $l20 = virtualinvoke $r58.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r60);

     label01:
        $r61 = newarray (byte)[4];

        $r5 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r5);

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r61);

        $r63 = new java.lang.String;

        specialinvoke $r63.<java.lang.String: void <init>(byte[])>($r61);

        $z1 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>("BTIN");

        if $z1 != 0 goto label02;

        $r65 = new java.lang.IllegalStateException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal BTIN");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r52);

        throw $r65;

     label02:
        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r8);

        $b3 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r10 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r10);

        $b4 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $b5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: byte access$2100(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i24 = (int) $b4;

        $i25 = (int) $b5;

        if $i24 == $i25 goto label03;

        $r66 = new java.lang.IllegalStateException;

        specialinvoke $r66.<java.lang.IllegalStateException: void <init>()>();

        throw $r66;

     label03:
        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$2200()>();

        if $z2 == 0 goto label04;

        $r37 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r38 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r37);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   BTree2 InternalNode version=");

        $i26 = (int) $b3;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=");

        $i27 = (int) $b4;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nrecords=");

        $i28 = (int) s6;

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r46);

     label04:
        $i29 = (int) s6;

        $i7 = $i29 + 1;

        $r12 = newarray (ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2)[$i7];

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries> = $r12;

        i21 = 0;

     label05:
        $i30 = (int) s6;

        if i21 >= $i30 goto label06;

        $r33 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r68 = new ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2;

        specialinvoke $r68.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $r33[i21] = $r68;

        $r34 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r35 = $r34[i21];

        $b19 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: byte access$2100(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i31 = (int) $b19;

        $r36 = virtualinvoke r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: java.lang.Object readRecord(int)>($i31);

        $r35.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: java.lang.Object record> = $r36;

        i21 = i21 + 1;

        goto label05;

     label06:
        $r14 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r69 = new ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2;

        specialinvoke $r69.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i32 = (int) s6;

        $r14[$i32] = $r69;

        $i8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: int access$5600(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i33 = (int) s9;

        i22 = $i8 / $i33;

        $i10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: int access$5600(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i34 = (int) s9;

        i11 = $i10 / $i34;

        i23 = 0;

     label07:
        $i35 = (int) s6;

        $i12 = $i35 + 1;

        if i23 >= $i12 goto label10;

        $r17 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        r18 = $r17[i23];

        $r19 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r19);

        r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long childAddress> = $l13;

        $r20 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$5700(ucar.nc2.iosp.hdf5.H5header,int)>($r20, 1);

        r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long nrecords> = $l14;

        if i0 <= 1 goto label08;

        $r31 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l18 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$5700(ucar.nc2.iosp.hdf5.H5header,int)>($r31, 2);

        r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long totNrecords> = $l18;

     label08:
        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$2200()>();

        if $z3 == 0 goto label09;

        $r21 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r22 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r21);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BTree2 entry childAddress=");

        $l15 = r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long childAddress>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nrecords=");

        $l16 = r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long nrecords>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" totNrecords=");

        $l17 = r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long totNrecords>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label09:
        i23 = i23 + 1;

        goto label07;

     label10:
        $r15 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r16 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r15);

        virtualinvoke $r16.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        return;
    }

    void recurse() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode $r3;
        long $l4, $l5, $l7, l13;
        short $s3, $s8, $s9;
        int i0, $i1, $i2, $i6, $i10, $i11, i12;
        ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode r0, $r10;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] r1;
        ucar.nc2.iosp.hdf5.H5header$BTree2 $r4, $r5, $r8, $r11, $r12;
        java.util.List $r6, $r9;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2 r2;
        java.lang.Object $r7;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode;

        r1 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        i0 = lengthof r1;

        i12 = 0;

     label1:
        if i12 >= i0 goto label5;

        r2 = r1[i12];

        $i1 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: int depth>;

        if $i1 <= 1 goto label2;

        $r10 = new ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode;

        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1>;

        $l7 = r2.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long childAddress>;

        $l5 = r2.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long nrecords>;

        $i6 = (int) $l5;

        $s8 = (short) $i6;

        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1>;

        $s9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: short access$5800(ucar.nc2.iosp.hdf5.H5header$BTree2)>($r11);

        $i10 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: int depth>;

        $i11 = $i10 - 1;

        specialinvoke $r10.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2,long,short,short,int)>($r12, $l7, $s8, $s9, $i11);

        virtualinvoke $r10.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: void recurse()>();

        goto label3;

     label2:
        l13 = r2.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long nrecords>;

        $r3 = new ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode;

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1>;

        $l4 = r2.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: long childAddress>;

        $i2 = (int) l13;

        $s3 = (short) $i2;

        specialinvoke $r3.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2,long,short)>($r4, $l4, $s3);

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1>;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: java.util.List access$2000(ucar.nc2.iosp.hdf5.H5header$BTree2)>($r5);

        virtualinvoke $r3.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: void addEntries(java.util.List)>($r6);

     label3:
        $r7 = r2.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: java.lang.Object record>;

        if $r7 == null goto label4;

        $r8 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$InternalNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1>;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: java.util.List access$2000(ucar.nc2.iosp.hdf5.H5header$BTree2)>($r8);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        i12 = i12 + 1;

        goto label1;

     label5:
        return;
    }
}
