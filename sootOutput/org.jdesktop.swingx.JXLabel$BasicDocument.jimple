class org.jdesktop.swingx.JXLabel$BasicDocument extends javax.swing.text.DefaultStyledDocument
{

    void <init>(java.awt.Font, java.awt.Color, org.jdesktop.swingx.JXLabel$TextAlignment, float)
    {
        java.awt.Color r2;
        java.awt.Font r1;
        javax.swing.text.SimpleAttributeSet $r3, $r6;
        org.jdesktop.swingx.JXLabel$BasicDocument r0;
        org.jdesktop.swingx.JXLabel$TextAlignment r4;
        javax.swing.text.Style $r5, $r7;
        int $i0;
        float f0;

        r0 := @this: org.jdesktop.swingx.JXLabel$BasicDocument;

        r1 := @parameter0: java.awt.Font;

        r2 := @parameter1: java.awt.Color;

        r4 := @parameter2: org.jdesktop.swingx.JXLabel$TextAlignment;

        f0 := @parameter3: float;

        specialinvoke r0.<javax.swing.text.DefaultStyledDocument: void <init>()>();

        specialinvoke r0.<org.jdesktop.swingx.JXLabel$BasicDocument: void setFontAndColor(java.awt.Font,java.awt.Color)>(r1, r2);

        $r3 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r3.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        $i0 = virtualinvoke r4.<org.jdesktop.swingx.JXLabel$TextAlignment: int getValue()>();

        staticinvoke <javax.swing.text.StyleConstants: void setAlignment(javax.swing.text.MutableAttributeSet,int)>($r3, $i0);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r5.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r3);

        $r6 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r6.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        staticinvoke <javax.swing.text.StyleConstants: void setRightIndent(javax.swing.text.MutableAttributeSet,float)>($r6, f0);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r7.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r6);

        return;
    }

    private void setFontAndColor(java.awt.Font, java.awt.Color)
    {
        java.awt.Color r0;
        javax.swing.text.SimpleAttributeSet $r2, $r5, $r8, $r10, $r12, $r14;
        org.jdesktop.swingx.JXLabel$BasicDocument r3;
        int $i0;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.awt.Font r1;
        javax.swing.text.Style $r4, $r7, $r9, $r11, $r13, $r15;

        r3 := @this: org.jdesktop.swingx.JXLabel$BasicDocument;

        r1 := @parameter0: java.awt.Font;

        r0 := @parameter1: java.awt.Color;

        if r0 == null goto label1;

        $r14 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r14.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        staticinvoke <javax.swing.text.StyleConstants: void setForeground(javax.swing.text.MutableAttributeSet,java.awt.Color)>($r14, r0);

        $r15 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r15.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r14);

     label1:
        if r1 == null goto label2;

        $r5 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r5.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        $r6 = virtualinvoke r1.<java.awt.Font: java.lang.String getFamily()>();

        staticinvoke <javax.swing.text.StyleConstants: void setFontFamily(javax.swing.text.MutableAttributeSet,java.lang.String)>($r5, $r6);

        $r7 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r7.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r5);

        $r8 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r8.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        $i0 = virtualinvoke r1.<java.awt.Font: int getSize()>();

        staticinvoke <javax.swing.text.StyleConstants: void setFontSize(javax.swing.text.MutableAttributeSet,int)>($r8, $i0);

        $r9 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r9.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r8);

        $r10 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r10.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        $z0 = virtualinvoke r1.<java.awt.Font: boolean isBold()>();

        staticinvoke <javax.swing.text.StyleConstants: void setBold(javax.swing.text.MutableAttributeSet,boolean)>($r10, $z0);

        $r11 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r11.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r10);

        $r12 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r12.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        $z1 = virtualinvoke r1.<java.awt.Font: boolean isItalic()>();

        staticinvoke <javax.swing.text.StyleConstants: void setItalic(javax.swing.text.MutableAttributeSet,boolean)>($r12, $z1);

        $r13 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r13.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r12);

     label2:
        $r2 = new javax.swing.text.SimpleAttributeSet;

        specialinvoke $r2.<javax.swing.text.SimpleAttributeSet: void <init>()>();

        staticinvoke <javax.swing.text.StyleConstants: void setSpaceAbove(javax.swing.text.MutableAttributeSet,float)>($r2, 0.0F);

        $r4 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel$BasicDocument: javax.swing.text.Style getStyle(java.lang.String)>("default");

        interfaceinvoke $r4.<javax.swing.text.Style: void addAttributes(javax.swing.text.AttributeSet)>($r2);

        return;
    }
}
