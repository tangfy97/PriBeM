public class org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl extends org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl implements org.apache.xmlbeans.impl.jam.mutable.MClass, org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef, org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext
{
    public static final int NEW;
    public static final int UNPOPULATED;
    public static final int POPULATING;
    public static final int UNINITIALIZED;
    public static final int INITIALIZING;
    public static final int LOADED;
    private int mState;
    private boolean mIsAnnotationType;
    private boolean mIsInterface;
    private boolean mIsEnum;
    private java.lang.String mPackageName;
    private org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef;
    private java.util.ArrayList mInterfaceRefs;
    private java.util.ArrayList mFields;
    private java.util.ArrayList mMethods;
    private java.util.ArrayList mConstructors;
    private java.util.ArrayList mProperties;
    private java.util.ArrayList mDeclaredProperties;
    private java.util.ArrayList mInnerClasses;
    private java.lang.String[] mImports;
    private org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator;

    public void <init>(java.lang.String, java.lang.String, org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, java.lang.String[], org.apache.xmlbeans.impl.jam.provider.JamClassPopulator)
    {
        org.apache.xmlbeans.impl.jam.provider.JamClassPopulator r6;
        java.lang.String[] r5;
        java.lang.String r2, r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r5 := @parameter3: java.lang.String[];

        r6 := @parameter4: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState> = 1;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsAnnotationType> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsInterface> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsEnum> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = null;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void setSimpleName(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = $r4;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = r5;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator> = r6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, java.lang.String[])
    {
        java.lang.String[] r5;
        java.lang.String r2, r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r5 := @parameter3: java.lang.String[];

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState> = 1;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsAnnotationType> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsInterface> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsEnum> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = null;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void setSimpleName(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = $r4;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = r5;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(4);

        return;
    }

    private void <init>(java.lang.String, java.lang.String, java.lang.String[], org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)
    {
        java.lang.String[] r5;
        java.lang.String r2, r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String[];

        r1 := @parameter3: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState> = 1;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsAnnotationType> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsInterface> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsEnum> = 0;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = null;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: void setSimpleName(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName> = $r4;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports> = r5;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(4);

        return;
    }

    public org.apache.xmlbeans.impl.jam.JPackage getContainingPackage()
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r1;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JPackage $r3;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName>;

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JPackage getPackage(java.lang.String)>($r2);

        return $r3;
    }

    public org.apache.xmlbeans.impl.jam.JClass getSuperclass()
    {
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r1, $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef: org.apache.xmlbeans.impl.jam.JClass getRefClass()>();

        return $r3;
    }

    public org.apache.xmlbeans.impl.jam.JClass[] getInterfaces()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r9;
        java.util.ArrayList $r1, $r3, $r4, $r6;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r8;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r7;
        org.apache.xmlbeans.impl.jam.JClass[] $r2, r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = newarray (org.apache.xmlbeans.impl.jam.JClass)[0];

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.jam.JClass)[$i1];

        i3 = 0;

     label3:
        $i2 = lengthof r5;

        if i3 >= $i2 goto label4;

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef: org.apache.xmlbeans.impl.jam.JClass getRefClass()>();

        r5[i3] = $r9;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r5;
    }

    public org.apache.xmlbeans.impl.jam.JField[] getFields()
    {
        org.apache.xmlbeans.impl.jam.JField[] r2;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addFieldsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>(r0, $r1);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (org.apache.xmlbeans.impl.jam.JField)[$i0];

        interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return r2;
    }

    public org.apache.xmlbeans.impl.jam.JField[] getDeclaredFields()
    {
        org.apache.xmlbeans.impl.jam.mutable.MField[] $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.mutable.MField[] getMutableFields()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JMethod[] getMethods()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.JMethod[] r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addMethodsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>(r0, $r1);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (org.apache.xmlbeans.impl.jam.JMethod)[$i0];

        interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        return r2;
    }

    public org.apache.xmlbeans.impl.jam.JProperty[] getProperties()
    {
        org.apache.xmlbeans.impl.jam.JProperty[] r3, $r5;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        if $r1 != null goto label1;

        $r5 = newarray (org.apache.xmlbeans.impl.jam.JProperty)[0];

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r3 = newarray (org.apache.xmlbeans.impl.jam.JProperty)[$i0];

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;
    }

    public org.apache.xmlbeans.impl.jam.JProperty[] getDeclaredProperties()
    {
        org.apache.xmlbeans.impl.jam.JProperty[] r3, $r5;
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        if $r1 != null goto label1;

        $r5 = newarray (org.apache.xmlbeans.impl.jam.JProperty)[0];

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r3 = newarray (org.apache.xmlbeans.impl.jam.JProperty)[$i0];

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;
    }

    public org.apache.xmlbeans.impl.jam.JMethod[] getDeclaredMethods()
    {
        org.apache.xmlbeans.impl.jam.mutable.MMethod[] $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.mutable.MMethod[] getMutableMethods()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JConstructor[] getConstructors()
    {
        org.apache.xmlbeans.impl.jam.mutable.MConstructor[] $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.mutable.MConstructor[] getMutableConstructors()>();

        return $r1;
    }

    public boolean isInterface()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsInterface>;

        return $z0;
    }

    public boolean isAnnotationType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsAnnotationType>;

        return $z0;
    }

    public boolean isEnumType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsEnum>;

        return $z0;
    }

    public int getModifiers()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $i0 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: int getModifiers()>();

        return $i0;
    }

    public boolean isFinal()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public boolean isStatic()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public boolean isAbstract()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        return $z0;
    }

    public boolean isAssignableFrom(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean isPrimitiveType()>();

        if $z0 != 0 goto label1;

        $z2 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JClass: boolean isPrimitiveType()>();

        if $z2 == 0 goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        $z3 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean isAssignableFromRecursively(org.apache.xmlbeans.impl.jam.JClass)>(r2);

        return $z3;
    }

    public org.apache.xmlbeans.impl.jam.JClass[] getClasses()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.JClass[] r3, $r5;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        if $r1 != null goto label1;

        $r5 = newarray (org.apache.xmlbeans.impl.jam.JClass)[0];

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r3 = newarray (org.apache.xmlbeans.impl.jam.JClass)[$i0];

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;
    }

    public java.lang.String getFieldDescriptor()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JClass forName(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader $r1;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>(r2);

        return $r3;
    }

    public org.apache.xmlbeans.impl.jam.JPackage[] getImportedPackages()
    {
        java.lang.String[] $r3;
        java.util.TreeSet $r1;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r6;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        org.apache.xmlbeans.impl.jam.JClass[] $r2;
        java.lang.String $r5, $r7, $r8, $r9;
        boolean $z0;
        org.apache.xmlbeans.impl.jam.JPackage $r10, $r12;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r11;
        org.apache.xmlbeans.impl.jam.JPackage[] $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JClass[] getImportedClasses()>();

        i5 = 0;

     label1:
        $i0 = lengthof $r2;

        if i5 >= $i0 goto label3;

        $r11 = $r2[i5];

        $r12 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JPackage getContainingPackage()>();

        if $r12 == null goto label2;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] getImportSpecs()>();

        if $r3 == null goto label6;

        i6 = 0;

     label4:
        $i2 = lengthof $r3;

        if i6 >= $i2 goto label6;

        $r5 = $r3[i6];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>(".*");

        if $z0 == 0 goto label5;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r8 = $r3[i6];

        $r7 = $r3[i6];

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i4 = $i3 - 2;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r10 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JPackage getPackage(java.lang.String)>($r9);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label5:
        i6 = i6 + 1;

        goto label4;

     label6:
        $i1 = interfaceinvoke $r1.<java.util.Set: int size()>();

        $r4 = newarray (org.apache.xmlbeans.impl.jam.JPackage)[$i1];

        interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        return $r4;
    }

    public org.apache.xmlbeans.impl.jam.JClass[] getImportedClasses()
    {
        java.lang.String[] $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r6;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r4;
        int $i0, $i1, i2;
        java.lang.String $r3, $r5;
        org.apache.xmlbeans.impl.jam.JClass[] $r7, r8;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] getImportSpecs()>();

        if $r1 != null goto label1;

        $r7 = newarray (org.apache.xmlbeans.impl.jam.JClass)[0];

        return $r7;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i2 = 0;

     label2:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label5;

        $r3 = $r1[i2];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r5 = $r1[i2];

        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        r8 = newarray (org.apache.xmlbeans.impl.jam.JClass)[$i1];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r8);

        return r8;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.MVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.MVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.MVisitor: void visit(org.apache.xmlbeans.impl.jam.mutable.MClass)>(r1);

        return;
    }

    public void accept(org.apache.xmlbeans.impl.jam.visitor.JVisitor)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        org.apache.xmlbeans.impl.jam.visitor.JVisitor r0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.visitor.JVisitor;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.visitor.JVisitor: void visit(org.apache.xmlbeans.impl.jam.JClass)>(r1);

        return;
    }

    public void setSimpleName(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Class names cannot be changed");

        throw $r0;
    }

    public java.lang.Class getPrimitiveClass()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return null;
    }

    public boolean isPrimitiveType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public boolean isBuiltinType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public boolean isVoidType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public boolean isUnresolvedType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public boolean isObjectType()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Object");

        return $z0;
    }

    public boolean isArrayType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public org.apache.xmlbeans.impl.jam.JClass getArrayComponentType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return null;
    }

    public int getArrayDimensions()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return 0;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation[] getAnnotations()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JAnnotation[] $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JAnnotation[] getAnnotations()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.Class)
    {
        org.apache.xmlbeans.impl.jam.JAnnotation $r2;
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.Class)>(r1);

        return $r2;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JAnnotation $r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.String)>(r1);

        return $r2;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotationValue getAnnotationValue(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JAnnotationValue $r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JAnnotationValue getAnnotationValue(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.Object getAnnotationProxy(java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r1 := @parameter0: java.lang.Class;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: java.lang.Object getAnnotationProxy(java.lang.Class)>(r1);

        return $r2;
    }

    public org.apache.xmlbeans.impl.jam.JComment getComment()
    {
        org.apache.xmlbeans.impl.jam.JComment $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JComment getComment()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation[] getAllJavadocTags()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JAnnotation[] $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JAnnotation[] getAllJavadocTags()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JSourcePosition getSourcePosition()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JSourcePosition $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.MemberImpl: org.apache.xmlbeans.impl.jam.JSourcePosition getSourcePosition()>();

        return $r1;
    }

    public void setSuperclass(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        java.lang.IllegalArgumentException $r4;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.String r0, $r2, $r9;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = null;

        goto label3;

     label1:
        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A class cannot be it\'s own superclass: \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r0, r1);

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = $r3;

     label3:
        return;
    }

    public void setSuperclassUnqualified(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.UnqualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r1, r0);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = $r2;

        return;
    }

    public void setSuperclass(org.apache.xmlbeans.impl.jam.JClass)
    {
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JClass r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        if r0 != null goto label1;

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef mSuperClassRef> = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setSuperclass(java.lang.String)>($r2);

     label2:
        return;
    }

    public void addInterface(org.apache.xmlbeans.impl.jam.JClass)
    {
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JClass r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null interf");

        throw $r3;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addInterface(java.lang.String)>($r2);

        return;
    }

    public void addInterface(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.lang.IllegalArgumentException $r6;
        java.util.ArrayList $r1, $r4, $r12;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        java.lang.String r2, $r3, $r11;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        if $r1 != null goto label1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs> = $r12;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A class cannot implement itself: \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r2, r0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void addInterfaceUnqualified(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r4;
        java.lang.String r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        if $r1 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs> = $r5;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.classrefs.UnqualifiedJClassRef: org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef create(java.lang.String,org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRefContext)>(r2, r0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void removeInterface(org.apache.xmlbeans.impl.jam.JClass)
    {
        java.lang.String $r2;
        org.apache.xmlbeans.impl.jam.JClass r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null interf");

        throw $r3;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void removeInterface(java.lang.String)>($r2);

        return;
    }

    public void removeInterface(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        java.lang.IllegalArgumentException $r9;
        java.util.ArrayList $r2, $r3, $r4, $r8;
        org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef $r6;
        int $i0, i1;
        java.lang.Object $r5;
        java.lang.String r0, $r7;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null classname");

        throw $r9;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        if $r2 != null goto label2;

        return;

     label2:
        i1 = 0;

     label3:
        $r3 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label5;

        $r4 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r8 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInterfaceRefs>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MConstructor addNewConstructor()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl $r2;
        java.util.ArrayList $r1, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors> = $r4;

     label1:
        $r2 = new org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl;

        specialinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.ConstructorImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>(r0);

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public void removeConstructor(org.apache.xmlbeans.impl.jam.mutable.MConstructor)
    {
        org.apache.xmlbeans.impl.jam.mutable.MConstructor r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MConstructor;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MConstructor[] getMutableConstructors()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r4, $r6;
        int $i0, $i1;
        org.apache.xmlbeans.impl.jam.mutable.MConstructor[] $r2, r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = newarray (org.apache.xmlbeans.impl.jam.mutable.MConstructor)[0];

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.jam.mutable.MConstructor)[$i1];

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mConstructors>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        return r5;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MField addNewField()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.FieldImpl $r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r5, $r6;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields> = $r6;

     label1:
        $r2 = new org.apache.xmlbeans.impl.jam.internal.elements.FieldImpl;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String defaultName(int)>($i0);

        specialinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.FieldImpl: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl,java.lang.String)>($r4, r0, "java.lang.Object");

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public void removeField(org.apache.xmlbeans.impl.jam.mutable.MField)
    {
        org.apache.xmlbeans.impl.jam.mutable.MField r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MField;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MField[] getMutableFields()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r4, $r6;
        int $i0, $i1;
        org.apache.xmlbeans.impl.jam.mutable.MField[] $r2, r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = newarray (org.apache.xmlbeans.impl.jam.mutable.MField)[0];

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.jam.mutable.MField)[$i1];

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mFields>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        return r5;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MMethod addNewMethod()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r5, $r6;
        org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl $r2;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods> = $r6;

     label1:
        $r2 = new org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String defaultName(int)>($i0);

        specialinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.MethodImpl: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>($r4, r0);

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public void removeMethod(org.apache.xmlbeans.impl.jam.mutable.MMethod)
    {
        org.apache.xmlbeans.impl.jam.mutable.MMethod r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MMethod;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MMethod[] getMutableMethods()
    {
        org.apache.xmlbeans.impl.jam.mutable.MMethod[] $r2, r5;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3, $r4, $r6;
        int $i0, $i1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = newarray (org.apache.xmlbeans.impl.jam.mutable.MMethod)[0];

        return $r2;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.jam.mutable.MMethod)[$i1];

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mMethods>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        return r5;
    }

    public org.apache.xmlbeans.impl.jam.JProperty addNewProperty(java.lang.String, org.apache.xmlbeans.impl.jam.JMethod, org.apache.xmlbeans.impl.jam.JMethod)
    {
        org.apache.xmlbeans.impl.jam.JParameter[] $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r6, $r10;
        java.util.ArrayList $r1, $r9, $r11;
        org.apache.xmlbeans.impl.jam.JParameter $r5;
        java.lang.String r8, $r12;
        org.apache.xmlbeans.impl.jam.JMethod r2, r3;
        org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl $r7;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r8 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.jam.JMethod;

        r3 := @parameter2: org.apache.xmlbeans.impl.jam.JMethod;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        if $r1 != null goto label1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties> = $r11;

     label1:
        if r2 == null goto label2;

        $r10 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JClass getReturnType()>();

        $r12 = interfaceinvoke $r10.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        goto label3;

     label2:
        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        $r5 = $r4[0];

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r12 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

     label3:
        $r7 = new org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl;

        specialinvoke $r7.<org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.JMethod,org.apache.xmlbeans.impl.jam.JMethod,java.lang.String)>(r8, r2, r3, $r12);

        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return $r7;
    }

    public void removeProperty(org.apache.xmlbeans.impl.jam.JProperty)
    {
        org.apache.xmlbeans.impl.jam.JProperty r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.JProperty;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mProperties>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public org.apache.xmlbeans.impl.jam.JProperty addNewDeclaredProperty(java.lang.String, org.apache.xmlbeans.impl.jam.JMethod, org.apache.xmlbeans.impl.jam.JMethod)
    {
        org.apache.xmlbeans.impl.jam.JParameter[] $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r6, $r10;
        java.util.ArrayList $r1, $r9, $r11;
        org.apache.xmlbeans.impl.jam.JParameter $r5;
        java.lang.String r8, $r12;
        org.apache.xmlbeans.impl.jam.JMethod r2, r3;
        org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl $r7;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r8 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.jam.JMethod;

        r3 := @parameter2: org.apache.xmlbeans.impl.jam.JMethod;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        if $r1 != null goto label1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties> = $r11;

     label1:
        if r2 == null goto label2;

        $r10 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JClass getReturnType()>();

        $r12 = interfaceinvoke $r10.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        goto label3;

     label2:
        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.impl.jam.JMethod: org.apache.xmlbeans.impl.jam.JParameter[] getParameters()>();

        $r5 = $r4[0];

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.JParameter: org.apache.xmlbeans.impl.jam.JClass getType()>();

        $r12 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

     label3:
        $r7 = new org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl;

        specialinvoke $r7.<org.apache.xmlbeans.impl.jam.internal.elements.PropertyImpl: void <init>(java.lang.String,org.apache.xmlbeans.impl.jam.JMethod,org.apache.xmlbeans.impl.jam.JMethod,java.lang.String)>(r8, r2, r3, $r12);

        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        return $r7;
    }

    public void removeDeclaredProperty(org.apache.xmlbeans.impl.jam.JProperty)
    {
        org.apache.xmlbeans.impl.jam.JProperty r2;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.JProperty;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mDeclaredProperties>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MClass addNewInnerClass(java.lang.String)
    {
        java.lang.String[] $r9;
        java.util.ArrayList $r10, $r11, $r18;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r12;
        java.lang.StringBuffer $r5, $r6, $r7, $r16;
        int $i0, $i1, i2, $i4, $i6;
        java.lang.String $r3, $r4, $r8, r15;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1, $r17;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl $r13;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r15 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r15.<java.lang.String: int lastIndexOf(int)>(46);

        i2 = $i0;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        i2 = virtualinvoke r15.<java.lang.String: int lastIndexOf(int)>(36);

     label1:
        $i6 = (int) -1;

        if i2 == $i6 goto label2;

        $i1 = i2 + 1;

        r15 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $r17 = new org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r3 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("$");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] getImportSpecs()>();

        specialinvoke $r17.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void <init>(java.lang.String,java.lang.String,java.lang.String[],org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>($r3, $r8, $r9, r1);

        $r10 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        if $r10 != null goto label3;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses> = $r18;

     label3:
        $r11 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r17.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(6);

        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r13 = (org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl) $r12;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void addToCache(org.apache.xmlbeans.impl.jam.JClass)>($r17);

        return $r17;
    }

    public void removeInnerClass(org.apache.xmlbeans.impl.jam.mutable.MClass)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MClass r2;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.util.ArrayList mInnerClasses>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        return;
    }

    public void setIsInterface(boolean)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsInterface> = z0;

        return;
    }

    public void setIsAnnotationType(boolean)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsAnnotationType> = z0;

        return;
    }

    public void setIsEnumType(boolean)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean mIsEnum> = z0;

        return;
    }

    public java.lang.String getQualifiedName()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r1;
        java.lang.StringBuffer $r0, $r3, $r5, $r7, $r9, $r10;
        int $i0;
        java.lang.String $r2, $r4, $r6, $r8, $r11;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r11 = "";

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r4 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mSimpleName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public org.apache.xmlbeans.impl.jam.JClass getRefClass()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        return r0;
    }

    public java.lang.String getPackageName()
    {
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String mPackageName>;

        return $r1;
    }

    public java.lang.String[] getImportSpecs()
    {
        java.lang.String[] $r1, $r2, $r3;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports>;

        if $r1 != null goto label1;

        $r3 = newarray (java.lang.String)[0];

        return $r3;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String[] mImports>;

        return $r2;
    }

    public void setState(int)
    {
        int i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState> = i0;

        return;
    }

    public static void validateClassName(java.lang.String) throws java.lang.IllegalArgumentException
    {
        boolean $z0, $z1;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r10, $r11, $r15, $r16, $r20, $r21, $r25, $r27, $r29, $r31;
        int $i1, $i3, $i5, $i6, i7, $i8, $i9;
        java.lang.String r0, $r7, $r12, $r17, $r22;
        char $c0, $c2, $c4;
        java.lang.IllegalArgumentException $r24, $r26, $r28, $r30, $r32;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null class name specified");

        throw $r24;

     label1:
        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c0);

        if $z0 != 0 goto label2;

        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid first character in class name: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r26;

     label2:
        i7 = 1;

     label3:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 >= $i1 goto label7;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c2;

        if $i8 != 46 goto label5;

        $i3 = i7 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i9 = (int) $c4;

        if $i9 != 46 goto label4;

        $r28 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'..\' not allowed in class name: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r28;

     label4:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        if i7 != $i6 goto label6;

        $r30 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.\' not allowed at end of class name: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r30;

     label5:
        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z1 != 0 goto label6;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal character \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in class name: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r32;

     label6:
        i7 = i7 + 1;

        goto label3;

     label7:
        return;
    }

    private boolean isAssignableFromRecursively(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r4, $r5, r6;
        int $i0, i1;
        java.lang.String $r1, $r2;
        org.apache.xmlbeans.impl.jam.JClass[] $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r6 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: java.lang.String getQualifiedName()>();

        $r2 = interfaceinvoke r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = interfaceinvoke r6.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass[] getInterfaces()>();

        if $r3 == null goto label4;

        i1 = 0;

     label2:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label4;

        $r5 = $r3[i1];

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean isAssignableFromRecursively(org.apache.xmlbeans.impl.jam.JClass)>($r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = interfaceinvoke r6.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass getSuperclass()>();

        if $r4 == null goto label5;

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: boolean isAssignableFromRecursively(org.apache.xmlbeans.impl.jam.JClass)>($r4);

        if $z1 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private void addFieldsRecursively(org.apache.xmlbeans.impl.jam.JClass, java.util.Collection)
    {
        java.util.Collection r4;
        org.apache.xmlbeans.impl.jam.JField $r6;
        org.apache.xmlbeans.impl.jam.JClass $r2, $r5, r7;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r3;
        org.apache.xmlbeans.impl.jam.JField[] $r0;
        int $i0, $i1, i2, i3;
        org.apache.xmlbeans.impl.jam.JClass[] $r1;

        r3 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r7 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        r4 := @parameter1: java.util.Collection;

        $r0 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JField[] getDeclaredFields()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r0;

        if i2 >= $i0 goto label2;

        $r6 = $r0[i2];

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass[] getInterfaces()>();

        i3 = 0;

     label3:
        $i1 = lengthof $r1;

        if i3 >= $i1 goto label4;

        $r5 = $r1[i3];

        specialinvoke r3.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addFieldsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>($r5, r4);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r2 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass getSuperclass()>();

        if $r2 == null goto label5;

        specialinvoke r3.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addFieldsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>($r2, r4);

     label5:
        return;
    }

    private void addMethodsRecursively(org.apache.xmlbeans.impl.jam.JClass, java.util.Collection)
    {
        java.util.Collection r4;
        org.apache.xmlbeans.impl.jam.JMethod[] $r0;
        org.apache.xmlbeans.impl.jam.JClass $r2, $r5, r7;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r3;
        int $i0, $i1, i2, i3;
        org.apache.xmlbeans.impl.jam.JClass[] $r1;
        org.apache.xmlbeans.impl.jam.JMethod $r6;

        r3 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        r7 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        r4 := @parameter1: java.util.Collection;

        $r0 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JMethod[] getDeclaredMethods()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r0;

        if i2 >= $i0 goto label2;

        $r6 = $r0[i2];

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass[] getInterfaces()>();

        i3 = 0;

     label3:
        $i1 = lengthof $r1;

        if i3 >= $i1 goto label4;

        $r5 = $r1[i3];

        specialinvoke r3.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addMethodsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>($r5, r4);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r2 = interfaceinvoke r7.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass getSuperclass()>();

        if $r2 == null goto label5;

        specialinvoke r3.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void addMethodsRecursively(org.apache.xmlbeans.impl.jam.JClass,java.util.Collection)>($r2, r4);

     label5:
        return;
    }

    public void ensureLoaded()
    {
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.jam.provider.JamClassPopulator $r3, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r0;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl $r2;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $i0 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState>;

        if $i0 != 6 goto label1;

        return;

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState>;

        if $i1 != 2 goto label3;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator>;

        if $r3 != null goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("null populator");

        throw $r5;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(3);

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.provider.JamClassPopulator mPopulator>;

        interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.provider.JamClassPopulator: void populate(org.apache.xmlbeans.impl.jam.mutable.MClass)>(r0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(4);

     label3:
        $i2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int mState>;

        if $i2 != 4 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(5);

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r2 = (org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl) $r1;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void initialize(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)>(r0);

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void setState(int)>(6);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int LOADED> = 6;

        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int INITIALIZING> = 5;

        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int UNINITIALIZED> = 4;

        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int POPULATING> = 3;

        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int UNPOPULATED> = 2;

        <org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: int NEW> = 1;

        return;
    }
}
