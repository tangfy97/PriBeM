public class org.eclipse.jetty.server.bio.SocketConnector extends org.eclipse.jetty.server.AbstractConnector
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    protected java.net.ServerSocket _serverSocket;
    protected final java.util.Set _connections;
    protected volatile int _localPort;

    public void <init>()
    {
        java.util.HashSet $r2;
        int $i1;
        org.eclipse.jetty.server.bio.SocketConnector r0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        specialinvoke r0.<org.eclipse.jetty.server.AbstractConnector: void <init>()>();

        $i1 = (int) -1;

        r0.<org.eclipse.jetty.server.bio.SocketConnector: int _localPort> = $i1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections> = $r2;

        return;
    }

    public java.lang.Object getConnection()
    {
        java.net.ServerSocket $r1;
        org.eclipse.jetty.server.bio.SocketConnector r0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        $r1 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        return $r1;
    }

    public void open() throws java.io.IOException
    {
        java.lang.IllegalStateException $r4;
        java.net.ServerSocket $r1, $r3, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r8;
        boolean $z0, $z1;
        org.eclipse.jetty.server.bio.SocketConnector r0;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        $r1 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        if $r1 == null goto label1;

        $r9 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        $z0 = virtualinvoke $r9.<java.net.ServerSocket: boolean isClosed()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: java.lang.String getHost()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: int getPort()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: int getAcceptQueueSize()>();

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>($r2, $i0, $i1);

        r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket> = $r3;

     label2:
        $r10 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        $z1 = virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: boolean getReuseAddress()>();

        virtualinvoke $r10.<java.net.ServerSocket: void setReuseAddress(boolean)>($z1);

        $r11 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        $i2 = virtualinvoke $r11.<java.net.ServerSocket: int getLocalPort()>();

        r0.<org.eclipse.jetty.server.bio.SocketConnector: int _localPort> = $i2;

        $i3 = r0.<org.eclipse.jetty.server.bio.SocketConnector: int _localPort>;

        if $i3 > 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("port not allocated for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        return;
    }

    protected java.net.ServerSocket newServerSocket(java.lang.String, int, int) throws java.io.IOException
    {
        java.net.InetAddress $r1;
        java.net.ServerSocket $r3;
        org.eclipse.jetty.server.bio.SocketConnector r2;
        int i0, i1;
        java.lang.String r0;

        r2 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $r3 = new java.net.ServerSocket;

        specialinvoke $r3.<java.net.ServerSocket: void <init>(int,int)>(i0, i1);

        goto label2;

     label1:
        $r3 = new java.net.ServerSocket;

        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0);

        specialinvoke $r3.<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, i1, $r1);

     label2:
        return $r3;
    }

    public void close() throws java.io.IOException
    {
        java.net.ServerSocket $r1, $r2;
        org.eclipse.jetty.server.bio.SocketConnector r0;
        int $i1;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        $r1 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        virtualinvoke $r2.<java.net.ServerSocket: void close()>();

     label1:
        r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket> = null;

        $i1 = (int) -2;

        r0.<org.eclipse.jetty.server.bio.SocketConnector: int _localPort> = $i1;

        return;
    }

    public void accept(int) throws java.io.IOException, java.lang.InterruptedException
    {
        java.net.ServerSocket $r1;
        java.net.Socket $r2;
        org.eclipse.jetty.server.bio.SocketConnector r0;
        org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint $r3;
        int i0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.net.ServerSocket _serverSocket>;

        $r2 = virtualinvoke $r1.<java.net.ServerSocket: java.net.Socket accept()>();

        virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: void configure(java.net.Socket)>($r2);

        $r3 = new org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint;

        specialinvoke $r3.<org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void <init>(org.eclipse.jetty.server.bio.SocketConnector,java.net.Socket)>(r0, $r2);

        virtualinvoke $r3.<org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void dispatch()>();

        return;
    }

    protected org.eclipse.jetty.io.Connection newConnection(org.eclipse.jetty.io.EndPoint)
    {
        org.eclipse.jetty.io.EndPoint r2;
        org.eclipse.jetty.server.BlockingHttpConnection $r0;
        org.eclipse.jetty.server.bio.SocketConnector r1;
        org.eclipse.jetty.server.Server $r3;

        r1 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        r2 := @parameter0: org.eclipse.jetty.io.EndPoint;

        $r0 = new org.eclipse.jetty.server.BlockingHttpConnection;

        $r3 = virtualinvoke r1.<org.eclipse.jetty.server.bio.SocketConnector: org.eclipse.jetty.server.Server getServer()>();

        specialinvoke $r0.<org.eclipse.jetty.server.BlockingHttpConnection: void <init>(org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.Server)>(r1, r2, $r3);

        return $r0;
    }

    public void customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request) throws java.io.IOException
    {
        org.eclipse.jetty.server.Request r3;
        org.eclipse.jetty.io.EndPoint r0;
        org.eclipse.jetty.server.bio.SocketConnector r2;
        org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint r1;
        int $i0;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        r0 := @parameter0: org.eclipse.jetty.io.EndPoint;

        r3 := @parameter1: org.eclipse.jetty.server.Request;

        r1 = (org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint) r0;

        $z0 = virtualinvoke r2.<org.eclipse.jetty.server.bio.SocketConnector: boolean isLowResources()>();

        if $z0 == 0 goto label1;

        $i0 = r2.<org.eclipse.jetty.server.bio.SocketConnector: int _lowResourceMaxIdleTime>;

        goto label2;

     label1:
        $i0 = r2.<org.eclipse.jetty.server.bio.SocketConnector: int _maxIdleTime>;

     label2:
        virtualinvoke r1.<org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void setMaxIdleTime(int)>($i0);

        specialinvoke r2.<org.eclipse.jetty.server.AbstractConnector: void customize(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.Request)>(r0, r3);

        return;
    }

    public int getLocalPort()
    {
        int $i0;
        org.eclipse.jetty.server.bio.SocketConnector r0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        $i0 = r0.<org.eclipse.jetty.server.bio.SocketConnector: int _localPort>;

        return $i0;
    }

    protected void doStart() throws java.lang.Exception
    {
        java.util.Set $r1;
        org.eclipse.jetty.server.bio.SocketConnector r0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        $r1 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        specialinvoke r0.<org.eclipse.jetty.server.AbstractConnector: void doStart()>();

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r4;
        org.eclipse.jetty.io.EndPoint r8;
        org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint r6;
        java.util.Set $r2, $r3;
        java.util.HashSet $r1;
        org.eclipse.jetty.server.bio.SocketConnector r0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        specialinvoke r0.<org.eclipse.jetty.server.AbstractConnector: void doStop()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections>;

        interfaceinvoke $r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3);

        exitmonitor $r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r7;

     label5:
        $r4 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.eclipse.jetty.io.EndPoint) $r5;

        r6 = (org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint) r8;

        virtualinvoke r6.<org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint: void close()>();

        goto label6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void dump(java.lang.Appendable, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.lang.Appendable r1;
        java.util.Set $r4, $r5;
        java.util.HashSet $r3;
        org.eclipse.jetty.server.bio.SocketConnector r0;
        java.util.Collection[] $r6;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.server.bio.SocketConnector;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.AbstractConnector: void dump(java.lang.Appendable,java.lang.String)>(r1, r2);

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        $r4 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections>;

        entermonitor $r4;

     label1:
        $r5 = r0.<org.eclipse.jetty.server.bio.SocketConnector: java.util.Set _connections>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        exitmonitor $r4;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r7;

     label5:
        $r6 = newarray (java.util.Collection)[1];

        $r6[0] = $r3;

        staticinvoke <org.eclipse.jetty.util.component.AggregateLifeCycle: void dump(java.lang.Appendable,java.lang.String,java.util.Collection[])>(r1, r2, $r6);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static int access$000(org.eclipse.jetty.server.bio.SocketConnector)
    {
        int $i0;
        org.eclipse.jetty.server.bio.SocketConnector r0;

        r0 := @parameter0: org.eclipse.jetty.server.bio.SocketConnector;

        $i0 = r0.<org.eclipse.jetty.server.bio.SocketConnector: int _maxIdleTime>;

        return $i0;
    }

    static void access$100(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.io.Connection, org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.server.bio.SocketConnector r0;
        org.eclipse.jetty.io.Connection r1, r2;

        r0 := @parameter0: org.eclipse.jetty.server.bio.SocketConnector;

        r1 := @parameter1: org.eclipse.jetty.io.Connection;

        r2 := @parameter2: org.eclipse.jetty.io.Connection;

        virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: void connectionUpgraded(org.eclipse.jetty.io.Connection,org.eclipse.jetty.io.Connection)>(r1, r2);

        return;
    }

    static org.eclipse.jetty.util.log.Logger access$200()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.server.bio.SocketConnector: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void access$300(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.server.bio.SocketConnector r0;
        org.eclipse.jetty.io.Connection r1;

        r0 := @parameter0: org.eclipse.jetty.server.bio.SocketConnector;

        r1 := @parameter1: org.eclipse.jetty.io.Connection;

        virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: void connectionOpened(org.eclipse.jetty.io.Connection)>(r1);

        return;
    }

    static void access$400(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.server.bio.SocketConnector r0;
        org.eclipse.jetty.io.Connection r1;

        r0 := @parameter0: org.eclipse.jetty.server.bio.SocketConnector;

        r1 := @parameter1: org.eclipse.jetty.io.Connection;

        virtualinvoke r0.<org.eclipse.jetty.server.bio.SocketConnector: void connectionClosed(org.eclipse.jetty.io.Connection)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/bio/SocketConnector;");

        <org.eclipse.jetty.server.bio.SocketConnector: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
