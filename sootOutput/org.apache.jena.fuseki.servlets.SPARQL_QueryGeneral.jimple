public class org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral extends org.apache.jena.fuseki.servlets.SPARQL_Query
{
    static final int MaxTriples;

    public void <init>()
    {
        org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral r0;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral;

        specialinvoke r0.<org.apache.jena.fuseki.servlets.SPARQL_Query: void <init>()>();

        return;
    }

    protected void validateRequest(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        return;
    }

    protected void validateQuery(org.apache.jena.fuseki.servlets.HttpAction, com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r2;
        org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral r0;
        org.apache.jena.fuseki.servlets.HttpAction r1;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral;

        r1 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r2 := @parameter1: com.hp.hpl.jena.query.Query;

        return;
    }

    protected java.lang.String mapRequestToDataset(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral r0;

        r0 := @this: org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    protected com.hp.hpl.jena.query.Dataset decideDataset(org.apache.jena.fuseki.servlets.HttpAction, com.hp.hpl.jena.query.Query, java.lang.String)
    {
        com.hp.hpl.jena.query.Query r3;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral r4;
        com.hp.hpl.jena.query.Dataset $r2;
        java.lang.String r5;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r1, r6;

        r4 := @this: org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r3 := @parameter1: com.hp.hpl.jena.query.Query;

        r5 := @parameter2: java.lang.String;

        $r1 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: com.hp.hpl.jena.sparql.core.DatasetDescription getDatasetDescription(org.apache.jena.fuseki.servlets.HttpAction)>(r0);

        r6 = $r1;

        if $r1 != null goto label1;

        r6 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: com.hp.hpl.jena.sparql.core.DatasetDescription getDatasetDescription(com.hp.hpl.jena.query.Query)>(r3);

     label1:
        if r6 != null goto label2;

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>("No dataset description in protocol request or in the query string");

     label2:
        $r2 = staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: com.hp.hpl.jena.query.Dataset datasetFromDescription(org.apache.jena.fuseki.servlets.HttpAction,com.hp.hpl.jena.sparql.core.DatasetDescription)>(r0, r6);

        return $r2;
    }

    protected static com.hp.hpl.jena.query.Dataset datasetFromDescription(org.apache.jena.fuseki.servlets.HttpAction, com.hp.hpl.jena.sparql.core.DatasetDescription)
    {
        java.lang.Long $r13, $r19, $r29, $r40, $r50, $r63, $r73;
        java.lang.Exception $r21, $r37, $r60;
        com.hp.hpl.jena.query.Dataset $r3;
        java.lang.StringBuilder $r22, $r24, $r26, $r31, $r32, $r34, $r43, $r44, $r45, $r53, $r54, $r55, $r56, $r58, $r66, $r67, $r68, $r76, $r77, $r78, $r79, $r81;
        java.lang.Object[] $r10, $r17, $r28, $r38, $r48, $r61, $r71;
        org.apache.jena.riot.RiotException $r47, $r70;
        org.apache.jena.fuseki.servlets.ActionErrorException $r36;
        long $l1, $l2, $l4, $l5, $l6, $l7, $l8;
        java.lang.String $r14, $r20, $r25, $r27, $r30, $r33, $r35, $r41, $r42, $r46, $r51, $r52, $r57, $r59, $r64, $r65, $r69, $r74, $r75, $r80, $r82, r83, r84;
        com.hp.hpl.jena.rdf.model.Model $r4, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        java.util.List $r1, $r2;
        org.apache.jena.fuseki.servlets.HttpAction r11;
        int $i0, $i3;
        org.slf4j.Logger $r12, $r18, $r23, $r39, $r49, $r62, $r72;
        java.util.Iterator $r5, $r6;
        java.lang.Object $r7, $r15;
        org.apache.jena.atlas.lib.InternalErrorException $r8, $r16;

        r11 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        r0 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetDescription;

     label01:
        if r0 != null goto label03;

     label02:
        return null;

     label03:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: boolean isEmpty()>();

        if $z0 == 0 goto label05;

     label04:
        return null;

     label05:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List getDefaultGraphURIs()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List getNamedGraphURIs()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label07;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i3 != 0 goto label07;

     label06:
        return null;

     label07:
        $r3 = staticinvoke <com.hp.hpl.jena.query.DatasetFactory: com.hp.hpl.jena.query.Dataset createMem()>();

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r15 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r83 = (java.lang.String) $r15;

        if r83 == null goto label09;

        $z3 = virtualinvoke r83.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label10;

     label09:
        $r16 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r16.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("Default graph URI is null or the empty string");

        throw $r16;

     label10:
        staticinvoke <org.apache.jena.fuseki.migrate.GraphLoadUtils: void loadModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String,int)>($r4, r83, 100000);

        $r18 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r17 = newarray (java.lang.Object)[2];

        $l2 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r17[0] = $r19;

        $r17[1] = r83;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Load (default graph) %s", $r17);

        interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>($r20);

     label11:
        goto label14;

     label12:
        $r70 := @caughtexception;

        $r72 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r71 = newarray (java.lang.Object)[3];

        $l8 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        $r71[0] = $r73;

        $r71[1] = r83;

        $r74 = virtualinvoke $r70.<org.apache.jena.riot.RiotException: java.lang.String getMessage()>();

        $r71[2] = $r74;

        $r75 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Parsing error loading %s: %s", $r71);

        interfaceinvoke $r72.<org.slf4j.Logger: void info(java.lang.String)>($r75);

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load URL (parse error) ");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r80 = virtualinvoke $r70.<org.apache.jena.riot.RiotException: java.lang.String getMessage()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>($r82);

        goto label14;

     label13:
        $r60 := @caughtexception;

        $r62 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r61 = newarray (java.lang.Object)[3];

        $l7 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r61[0] = $r63;

        $r61[1] = r83;

        $r64 = virtualinvoke $r60.<java.lang.Exception: java.lang.String getMessage()>();

        $r61[2] = $r64;

        $r65 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Failed to load (default) %s: %s", $r61);

        interfaceinvoke $r62.<org.slf4j.Logger: void info(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load URL ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>($r69);

     label14:
        goto label08;

     label15:
        interfaceinvoke $r3.<com.hp.hpl.jena.query.Dataset: void setDefaultModel(com.hp.hpl.jena.rdf.model.Model)>($r4);

        if $r2 == null goto label23;

        $r6 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label23;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r84 = (java.lang.String) $r7;

        if r84 == null goto label17;

        $z2 = virtualinvoke r84.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label18;

     label17:
        $r8 = new org.apache.jena.atlas.lib.InternalErrorException;

        specialinvoke $r8.<org.apache.jena.atlas.lib.InternalErrorException: void <init>(java.lang.String)>("Named graph URI is null or the empty string");

        throw $r8;

     label18:
        $r9 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        staticinvoke <org.apache.jena.fuseki.migrate.GraphLoadUtils: void loadModel(com.hp.hpl.jena.rdf.model.Model,java.lang.String,int)>($r9, r84, 100000);

        $r12 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r10 = newarray (java.lang.Object)[2];

        $l1 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r10[0] = $r13;

        $r10[1] = r84;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Load (named graph) %s", $r10);

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r14);

        interfaceinvoke $r3.<com.hp.hpl.jena.query.Dataset: void addNamedModel(java.lang.String,com.hp.hpl.jena.rdf.model.Model)>(r84, $r9);

     label19:
        goto label22;

     label20:
        $r47 := @caughtexception;

        $r49 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r48 = newarray (java.lang.Object)[3];

        $l6 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r48[0] = $r50;

        $r48[1] = r84;

        $r51 = virtualinvoke $r47.<org.apache.jena.riot.RiotException: java.lang.String getMessage()>();

        $r48[2] = $r51;

        $r52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Parsing error loading %s: %s", $r48);

        interfaceinvoke $r49.<org.slf4j.Logger: void info(java.lang.String)>($r52);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load URL (parse error) ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r57 = virtualinvoke $r47.<org.apache.jena.riot.RiotException: java.lang.String getMessage()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>($r59);

        goto label22;

     label21:
        $r37 := @caughtexception;

        $r39 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r38 = newarray (java.lang.Object)[3];

        $l5 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r38[0] = $r40;

        $r38[1] = r84;

        $r41 = virtualinvoke $r37.<java.lang.Exception: java.lang.String getMessage()>();

        $r38[2] = $r41;

        $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] Failed to load (named graph) %s: %s", $r38);

        interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load URL ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>($r46);

     label22:
        goto label16;

     label23:
        return $r3;

     label24:
        $r36 := @caughtexception;

        throw $r36;

     label25:
        $r21 := @caughtexception;

        $r23 = <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: org.slf4j.Logger log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[%d] SPARQL parameter error: ");

        $r25 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[2];

        $l4 = r11.<org.apache.jena.fuseki.servlets.HttpAction: long id>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r28[0] = $r29;

        $r28[1] = $r21;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r27, $r28);

        interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter error: ");

        $r33 = virtualinvoke $r21.<java.lang.Exception: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: void errorBadRequest(java.lang.String)>($r35);

        return null;

        catch org.apache.jena.riot.RiotException from label10 to label11 with label12;
        catch java.lang.Exception from label10 to label11 with label13;
        catch org.apache.jena.riot.RiotException from label18 to label19 with label20;
        catch java.lang.Exception from label18 to label19 with label21;
        catch org.apache.jena.fuseki.servlets.ActionErrorException from label01 to label02 with label24;
        catch org.apache.jena.fuseki.servlets.ActionErrorException from label03 to label04 with label24;
        catch org.apache.jena.fuseki.servlets.ActionErrorException from label05 to label06 with label24;
        catch org.apache.jena.fuseki.servlets.ActionErrorException from label07 to label23 with label24;
        catch java.lang.Exception from label01 to label02 with label25;
        catch java.lang.Exception from label03 to label04 with label25;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Exception from label07 to label23 with label25;
    }

    public static void <clinit>()
    {
        <org.apache.jena.fuseki.servlets.SPARQL_QueryGeneral: int MaxTriples> = 100000;

        return;
    }
}
