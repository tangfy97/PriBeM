public class org.apache.xerces.util.SymbolTable extends java.lang.Object
{
    protected static final int TABLE_SIZE;
    protected org.apache.xerces.util.SymbolTable$Entry[] fBuckets;
    protected int fTableSize;
    protected transient int fCount;
    protected int fThreshold;
    protected float fLoadFactor;

    public void <init>(int, float)
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r6;
        byte $b0;
        org.apache.xerces.util.SymbolTable r0;
        java.lang.StringBuffer $r3, $r4, $r9, $r10, $r12, $r14;
        int $i1, $i2, $i3, i4, $i5;
        java.lang.String $r5, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r13, $r15;
        float f0, $f1, $f2;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        i4 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets> = null;

        if i4 >= 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal Capacity: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        $b0 = f0 cmpg 0.0F;

        $i5 = (int) $b0;

        if $i5 <= 0 goto label2;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 == 0 goto label3;

     label2:
        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal Load: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r15;

     label3:
        if i4 != 0 goto label4;

        i4 = 1;

     label4:
        r0.<org.apache.xerces.util.SymbolTable: float fLoadFactor> = f0;

        r0.<org.apache.xerces.util.SymbolTable: int fTableSize> = i4;

        $i1 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        $r6 = newarray (org.apache.xerces.util.SymbolTable$Entry)[$i1];

        r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets> = $r6;

        $i2 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        $f1 = (float) $i2;

        $f2 = $f1 * f0;

        $i3 = (int) $f2;

        r0.<org.apache.xerces.util.SymbolTable: int fThreshold> = $i3;

        r0.<org.apache.xerces.util.SymbolTable: int fCount> = 0;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.xerces.util.SymbolTable r0;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xerces.util.SymbolTable: void <init>(int,float)>(i0, 0.75F);

        return;
    }

    public void <init>()
    {
        org.apache.xerces.util.SymbolTable r0;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        specialinvoke r0.<org.apache.xerces.util.SymbolTable: void <init>(int,float)>(101, 0.75F);

        return;
    }

    public java.lang.String addSymbol(java.lang.String)
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r2, $r6, $r8;
        org.apache.xerces.util.SymbolTable$Entry $r5, $r7, r10;
        org.apache.xerces.util.SymbolTable r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r1, $r3, $r4, $r9;
        boolean $z0;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(java.lang.String)>(r1);

        $i1 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i8 = $i0 % $i1;

        $r2 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        r10 = $r2[i8];

        goto label3;

     label1:
        $r3 = r10.<org.apache.xerces.util.SymbolTable$Entry: java.lang.String symbol>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r4 = r10.<org.apache.xerces.util.SymbolTable$Entry: java.lang.String symbol>;

        return $r4;

     label2:
        r10 = r10.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next>;

     label3:
        if r10 != null goto label1;

        $i3 = r0.<org.apache.xerces.util.SymbolTable: int fCount>;

        $i2 = r0.<org.apache.xerces.util.SymbolTable: int fThreshold>;

        if $i3 < $i2 goto label4;

        virtualinvoke r0.<org.apache.xerces.util.SymbolTable: void rehash()>();

        $i6 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(java.lang.String)>(r1);

        $i7 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i8 = $i6 % $i7;

     label4:
        $r5 = new org.apache.xerces.util.SymbolTable$Entry;

        $r6 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $r7 = $r6[i8];

        specialinvoke $r5.<org.apache.xerces.util.SymbolTable$Entry: void <init>(java.lang.String,org.apache.xerces.util.SymbolTable$Entry)>(r1, $r7);

        $r8 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $r8[i8] = $r5;

        $i4 = r0.<org.apache.xerces.util.SymbolTable: int fCount>;

        $i5 = $i4 + 1;

        r0.<org.apache.xerces.util.SymbolTable: int fCount> = $i5;

        $r9 = $r5.<org.apache.xerces.util.SymbolTable$Entry: java.lang.String symbol>;

        return $r9;
    }

    public java.lang.String addSymbol(char[], int, int)
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r2, $r7, $r9;
        org.apache.xerces.util.SymbolTable$Entry $r8, r11, $r12;
        org.apache.xerces.util.SymbolTable r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i17;
        java.lang.String $r5, $r10;
        char $c6, $c7;
        char[] r1, $r3, $r4;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(char[],int,int)>(r1, i0, i1);

        $i3 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i14 = $i2 % $i3;

        $r2 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        r11 = $r2[i14];

        goto label6;

     label1:
        $r3 = r11.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $i4 = lengthof $r3;

        if i1 != $i4 goto label5;

        i15 = 0;

        goto label4;

     label2:
        $i5 = i0 + i15;

        $c7 = r1[$i5];

        $r4 = r11.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $c6 = $r4[i15];

        $i16 = (int) $c7;

        $i17 = (int) $c6;

        if $i16 == $i17 goto label3;

        goto label5;

     label3:
        i15 = i15 + 1;

     label4:
        if i15 < i1 goto label2;

        $r5 = r11.<org.apache.xerces.util.SymbolTable$Entry: java.lang.String symbol>;

        return $r5;

     label5:
        r11 = r11.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next>;

     label6:
        if r11 != null goto label1;

        $i9 = r0.<org.apache.xerces.util.SymbolTable: int fCount>;

        $i8 = r0.<org.apache.xerces.util.SymbolTable: int fThreshold>;

        if $i9 < $i8 goto label7;

        virtualinvoke r0.<org.apache.xerces.util.SymbolTable: void rehash()>();

        $i12 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(char[],int,int)>(r1, i0, i1);

        $i13 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i14 = $i12 % $i13;

     label7:
        $r12 = new org.apache.xerces.util.SymbolTable$Entry;

        $r7 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $r8 = $r7[i14];

        specialinvoke $r12.<org.apache.xerces.util.SymbolTable$Entry: void <init>(char[],int,int,org.apache.xerces.util.SymbolTable$Entry)>(r1, i0, i1, $r8);

        $r9 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $r9[i14] = $r12;

        $i10 = r0.<org.apache.xerces.util.SymbolTable: int fCount>;

        $i11 = $i10 + 1;

        r0.<org.apache.xerces.util.SymbolTable: int fCount> = $i11;

        $r10 = $r12.<org.apache.xerces.util.SymbolTable$Entry: java.lang.String symbol>;

        return $r10;
    }

    public int hash(java.lang.String)
    {
        org.apache.xerces.util.SymbolTable r1;
        int $i0, $i1;
        java.lang.String r0;

        r1 := @this: org.apache.xerces.util.SymbolTable;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        $i1 = $i0 & 2147483647;

        return $i1;
    }

    public int hash(char[], int, int)
    {
        char $c3;
        org.apache.xerces.util.SymbolTable r1;
        int i0, i1, $i2, $i4, $i5, i6, i7, $i8;
        char[] r0;

        r1 := @this: org.apache.xerces.util.SymbolTable;

        r0 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i6 = 0;

        i7 = 0;

        goto label2;

     label1:
        $i4 = i6 * 31;

        $i2 = i1 + i7;

        $c3 = r0[$i2];

        $i8 = (int) $c3;

        i6 = $i4 + $i8;

        i7 = i7 + 1;

     label2:
        if i7 < i0 goto label1;

        $i5 = i6 & 2147483647;

        return $i5;
    }

    protected void rehash()
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r1, r2, r3, $r4;
        org.apache.xerces.util.SymbolTable$Entry r5, $r8, r9;
        org.apache.xerces.util.SymbolTable r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i11;
        float $f0, $f1, $f2;
        char[] $r6, $r7;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        $r1 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        i0 = lengthof $r1;

        r2 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $i1 = i0 * 2;

        i2 = $i1 + 1;

        r3 = newarray (org.apache.xerces.util.SymbolTable$Entry)[i2];

        $f1 = (float) i2;

        $f0 = r0.<org.apache.xerces.util.SymbolTable: float fLoadFactor>;

        $f2 = $f1 * $f0;

        $i3 = (int) $f2;

        r0.<org.apache.xerces.util.SymbolTable: int fThreshold> = $i3;

        r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets> = r3;

        $r4 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        $i4 = lengthof $r4;

        r0.<org.apache.xerces.util.SymbolTable: int fTableSize> = $i4;

        i9 = i0;

        goto label4;

     label1:
        r9 = r2[i9];

        goto label3;

     label2:
        r5 = r9;

        r9 = r9.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next>;

        $r7 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $r6 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $i6 = lengthof $r6;

        $i7 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(char[],int,int)>($r7, 0, $i6);

        i8 = $i7 % i2;

        $r8 = r3[i8];

        r5.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next> = $r8;

        r3[i8] = r5;

     label3:
        if r9 != null goto label2;

     label4:
        $i5 = i9;

        $i11 = (int) -1;

        i9 = i9 + $i11;

        if $i5 > 0 goto label1;

        return;
    }

    public boolean containsSymbol(java.lang.String)
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r2;
        org.apache.xerces.util.SymbolTable$Entry r5;
        org.apache.xerces.util.SymbolTable r0;
        int $i0, $i1, i2, $i3, $i4, i7, $i8, $i9;
        java.lang.String r1;
        char $c5, $c6;
        char[] $r3, $r4;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(java.lang.String)>(r1);

        $i1 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i2 = $i0 % $i1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        r5 = $r2[i2];

        goto label6;

     label1:
        $r3 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $i4 = lengthof $r3;

        if $i3 != $i4 goto label5;

        i7 = 0;

        goto label4;

     label2:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        $r4 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $c6 = $r4[i7];

        $i8 = (int) $c5;

        $i9 = (int) $c6;

        if $i8 == $i9 goto label3;

        goto label5;

     label3:
        i7 = i7 + 1;

     label4:
        if i7 < $i3 goto label2;

        return 1;

     label5:
        r5 = r5.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next>;

     label6:
        if r5 != null goto label1;

        return 0;
    }

    public boolean containsSymbol(char[], int, int)
    {
        org.apache.xerces.util.SymbolTable$Entry[] $r2;
        org.apache.xerces.util.SymbolTable$Entry r5;
        org.apache.xerces.util.SymbolTable r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i9, $i10, $i11;
        char $c7, $c8;
        char[] r1, $r3, $r4;

        r0 := @this: org.apache.xerces.util.SymbolTable;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<org.apache.xerces.util.SymbolTable: int hash(char[],int,int)>(r1, i0, i1);

        $i3 = r0.<org.apache.xerces.util.SymbolTable: int fTableSize>;

        i4 = $i2 % $i3;

        $r2 = r0.<org.apache.xerces.util.SymbolTable: org.apache.xerces.util.SymbolTable$Entry[] fBuckets>;

        r5 = $r2[i4];

        goto label6;

     label1:
        $r3 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $i5 = lengthof $r3;

        if i1 != $i5 goto label5;

        i9 = 0;

        goto label4;

     label2:
        $i6 = i0 + i9;

        $c8 = r1[$i6];

        $r4 = r5.<org.apache.xerces.util.SymbolTable$Entry: char[] characters>;

        $c7 = $r4[i9];

        $i10 = (int) $c8;

        $i11 = (int) $c7;

        if $i10 == $i11 goto label3;

        goto label5;

     label3:
        i9 = i9 + 1;

     label4:
        if i9 < i1 goto label2;

        return 1;

     label5:
        r5 = r5.<org.apache.xerces.util.SymbolTable$Entry: org.apache.xerces.util.SymbolTable$Entry next>;

     label6:
        if r5 != null goto label1;

        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.util.SymbolTable: int TABLE_SIZE> = 101;

        return;
    }
}
