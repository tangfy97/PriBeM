public final class org.waveprotocol.wave.model.operation.CapturingOperationSink extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    private final java.util.List captured;

    public void <init>()
    {
        org.waveprotocol.wave.model.operation.CapturingOperationSink r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.CapturingOperationSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.ArrayList newArrayList()>();

        r0.<org.waveprotocol.wave.model.operation.CapturingOperationSink: java.util.List captured> = $r1;

        return;
    }

    public void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.Operation r1;
        org.waveprotocol.wave.model.operation.CapturingOperationSink r0;
        java.util.List $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.CapturingOperationSink;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

        $r2 = r0.<org.waveprotocol.wave.model.operation.CapturingOperationSink: java.util.List captured>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getOps()
    {
        org.waveprotocol.wave.model.operation.CapturingOperationSink r0;
        java.util.List $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.CapturingOperationSink;

        $r1 = r0.<org.waveprotocol.wave.model.operation.CapturingOperationSink: java.util.List captured>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void clear()
    {
        org.waveprotocol.wave.model.operation.CapturingOperationSink r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.CapturingOperationSink;

        $r1 = r0.<org.waveprotocol.wave.model.operation.CapturingOperationSink: java.util.List captured>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }
}
