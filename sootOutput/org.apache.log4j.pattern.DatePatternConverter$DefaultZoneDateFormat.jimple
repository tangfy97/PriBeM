class org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat extends java.text.DateFormat
{
    private static final long serialVersionUID;
    private final java.text.DateFormat dateFormat;

    public void <init>(java.text.DateFormat)
    {
        org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat r0;
        java.text.DateFormat r1;

        r0 := @this: org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat;

        r1 := @parameter0: java.text.DateFormat;

        specialinvoke r0.<java.text.DateFormat: void <init>()>();

        r0.<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: java.text.DateFormat dateFormat> = r1;

        return;
    }

    public java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.util.TimeZone $r2;
        java.util.Date r3;
        java.text.FieldPosition r5;
        java.lang.StringBuffer r4, $r7;
        org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat r0;
        java.text.DateFormat $r1, $r6;

        r0 := @this: org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat;

        r3 := @parameter0: java.util.Date;

        r4 := @parameter1: java.lang.StringBuffer;

        r5 := @parameter2: java.text.FieldPosition;

        $r1 = r0.<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: java.text.DateFormat dateFormat>;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        virtualinvoke $r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r6 = r0.<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: java.text.DateFormat dateFormat>;

        $r7 = virtualinvoke $r6.<java.text.DateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>(r3, r4, r5);

        return $r7;
    }

    public java.util.Date parse(java.lang.String, java.text.ParsePosition)
    {
        java.util.TimeZone $r2;
        java.util.Date $r6;
        java.text.ParsePosition r4;
        org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat r0;
        java.lang.String r3;
        java.text.DateFormat $r1, $r5;

        r0 := @this: org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.text.ParsePosition;

        $r1 = r0.<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: java.text.DateFormat dateFormat>;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        virtualinvoke $r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r5 = r0.<org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: java.text.DateFormat dateFormat>;

        $r6 = virtualinvoke $r5.<java.text.DateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>(r3, r4);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat: long serialVersionUID> = 1L;

        return;
    }
}
