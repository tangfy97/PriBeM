public class org.jdesktop.swingx.JXLabel$MultiLineSupport extends java.lang.Object implements java.beans.PropertyChangeListener
{
    private static final java.lang.String HTML;
    private static javax.swing.text.ViewFactory basicViewFactory;
    private static org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit basicFactory;

    public void <init>()
    {
        org.jdesktop.swingx.JXLabel$MultiLineSupport r0;

        r0 := @this: org.jdesktop.swingx.JXLabel$MultiLineSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        org.jdesktop.swingx.JXLabel r3;
        org.jdesktop.swingx.JXLabel$MultiLineSupport r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        javax.swing.text.View $r18, $r32;
        java.lang.Boolean $r7;
        java.lang.String $r1, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r23, $r26, $r34;
        java.beans.PropertyChangeEvent r0;
        java.lang.Object $r2, $r6, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r31, $r33;

        r30 := @this: org.jdesktop.swingx.JXLabel$MultiLineSupport;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $r2 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getSource()>();

        r3 = (org.jdesktop.swingx.JXLabel) $r2;

        $r4 = "ancestor";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        staticinvoke <org.jdesktop.swingx.JXLabel: boolean access$202(org.jdesktop.swingx.JXLabel,boolean)>(r3, 1);

     label1:
        $z1 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: boolean isLineWrap()>();

        if $z1 == 0 goto label8;

        $r8 = "font";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z4 != 0 goto label2;

        $r10 = "foreground";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z6 != 0 goto label2;

        $r11 = "maxLineSpan";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z7 != 0 goto label2;

        $r12 = "textAlignment";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z8 != 0 goto label2;

        $r13 = "icon";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z9 != 0 goto label2;

        $r14 = "iconTextGap";

        $z10 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z10 == 0 goto label3;

     label2:
        $r31 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        if $r31 == null goto label9;

        $r9 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: java.lang.String getText()>();

        $z5 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r9);

        if $z5 != 0 goto label9;

        staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: void updateRenderer(org.jdesktop.swingx.JXLabel)>(r3);

        goto label9;

     label3:
        $r15 = "text";

        $z11 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z11 == 0 goto label7;

        $r19 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $r20 = (java.lang.String) $r19;

        $z14 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r20);

        if $z14 == 0 goto label5;

        $r24 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        if $r24 == null goto label5;

        $r25 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r26 = (java.lang.String) $r25;

        $z16 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r26);

        if $z16 != 0 goto label5;

        $r27 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("washtml");

        if $r27 != null goto label4;

        $r28 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        if $r28 == null goto label4;

        $r29 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        virtualinvoke r3.<org.jdesktop.swingx.JXLabel: void putClientProperty(java.lang.Object,java.lang.Object)>("washtml", $r29);

     label4:
        $r32 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: javax.swing.text.View createView(org.jdesktop.swingx.JXLabel)>(r3);

        virtualinvoke r3.<org.jdesktop.swingx.JXLabel: void putClientProperty(java.lang.Object,java.lang.Object)>("html", $r32);

        goto label9;

     label5:
        $r33 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $r34 = (java.lang.String) $r33;

        $z17 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r34);

        if $z17 != 0 goto label6;

        $r21 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        if $r21 == null goto label6;

        $r22 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r23 = (java.lang.String) $r22;

        $z15 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r23);

        if $z15 != 0 goto label6;

        staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: void updateRenderer(org.jdesktop.swingx.JXLabel)>(r3);

        goto label9;

     label6:
        staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: void restoreHtmlRenderer(org.jdesktop.swingx.JXLabel)>(r3);

        goto label9;

     label7:
        $r16 = "lineWrap";

        $z12 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z12 == 0 goto label9;

        $r17 = virtualinvoke r3.<org.jdesktop.swingx.JXLabel: java.lang.String getText()>();

        $z13 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>($r17);

        if $z13 != 0 goto label9;

        $r18 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: javax.swing.text.View createView(org.jdesktop.swingx.JXLabel)>(r3);

        virtualinvoke r3.<org.jdesktop.swingx.JXLabel: void putClientProperty(java.lang.Object,java.lang.Object)>("html", $r18);

        goto label9;

     label8:
        $r5 = "lineWrap";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label9;

        $r6 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r7 = (java.lang.Boolean) $r6;

        $z3 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label9;

        staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: void restoreHtmlRenderer(org.jdesktop.swingx.JXLabel)>(r3);

     label9:
        return;
    }

    private static void restoreHtmlRenderer(org.jdesktop.swingx.JXLabel)
    {
        org.jdesktop.swingx.JXLabel r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.JXLabel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        if $r1 == null goto label1;

        $z0 = $r1 instanceof org.jdesktop.swingx.JXLabel$Renderer;

        if $z0 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("washtml");

        virtualinvoke r0.<org.jdesktop.swingx.JXLabel: void putClientProperty(java.lang.Object,java.lang.Object)>("html", $r2);

     label2:
        return;
    }

    private static boolean isHTML(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("<html>");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static javax.swing.text.View createView(org.jdesktop.swingx.JXLabel)
    {
        java.lang.Throwable $r9;
        java.awt.Color $r11;
        org.jdesktop.swingx.JXLabel r1;
        javax.swing.text.ViewFactory $r4;
        org.jdesktop.swingx.JXLabel$TextAlignment $r12;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.JXLabel$Renderer $r7;
        java.lang.String $r14, $r15;
        java.awt.Font $r10;
        javax.swing.Icon $r2, $r8;
        java.io.StringReader $r3;
        org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit $r0;
        javax.swing.text.View $r6;
        float f0;
        javax.swing.text.Document $r13;
        javax.swing.text.Element $r5;

        r1 := @parameter0: org.jdesktop.swingx.JXLabel;

        $r0 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit getFactory()>();

        f0 = 0.0F;

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: javax.swing.Icon getIcon()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: int getHorizontalTextPosition()>();

        if $i0 == 0 goto label1;

        $r8 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: javax.swing.Icon getIcon()>();

        $i1 = interfaceinvoke $r8.<javax.swing.Icon: int getIconWidth()>();

        $i2 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: int getIconTextGap()>();

        $i3 = $i1 + $i2;

        f0 = (float) $i3;

     label1:
        $r10 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: java.awt.Font getFont()>();

        $r11 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: java.awt.Color getForeground()>();

        $r12 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: org.jdesktop.swingx.JXLabel$TextAlignment getTextAlignment()>();

        $r13 = virtualinvoke $r0.<org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit: javax.swing.text.Document createDefaultDocument(java.awt.Font,java.awt.Color,org.jdesktop.swingx.JXLabel$TextAlignment,float)>($r10, $r11, $r12, f0);

        $r3 = new java.io.StringReader;

        $r14 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: java.lang.String getText()>();

        if $r14 != null goto label2;

        $r15 = "";

        goto label3;

     label2:
        $r15 = virtualinvoke r1.<org.jdesktop.swingx.JXLabel: java.lang.String getText()>();

     label3:
        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>($r15);

     label4:
        virtualinvoke $r0.<org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit: void read(java.io.Reader,javax.swing.text.Document,int)>($r3, $r13, 0);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        $r4 = virtualinvoke $r0.<org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit: javax.swing.text.ViewFactory getViewFactory()>();

        $r5 = interfaceinvoke $r13.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $r6 = interfaceinvoke $r4.<javax.swing.text.ViewFactory: javax.swing.text.View create(javax.swing.text.Element)>($r5);

        $r7 = new org.jdesktop.swingx.JXLabel$Renderer;

        specialinvoke $r7.<org.jdesktop.swingx.JXLabel$Renderer: void <init>(org.jdesktop.swingx.JXLabel,javax.swing.text.ViewFactory,javax.swing.text.View,boolean)>(r1, $r4, $r6, 1);

        return $r7;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void updateRenderer(org.jdesktop.swingx.JXLabel)
    {
        org.jdesktop.swingx.JXLabel r0;
        int $i0, i1;
        javax.swing.text.View r2, $r3, r4;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.JXLabel;

        r4 = null;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXLabel: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r2 = (javax.swing.text.View) $r1;

        if r2 == null goto label1;

        $z0 = r2 instanceof org.jdesktop.swingx.JXLabel$Renderer;

        if $z0 == 0 goto label2;

     label1:
        r4 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: javax.swing.text.View createView(org.jdesktop.swingx.JXLabel)>(r0);

     label2:
        if r4 == r2 goto label4;

        if r2 == null goto label4;

        i1 = 0;

     label3:
        $i0 = virtualinvoke r2.<javax.swing.text.View: int getViewCount()>();

        if i1 >= $i0 goto label4;

        $r3 = virtualinvoke r2.<javax.swing.text.View: javax.swing.text.View getView(int)>(i1);

        virtualinvoke $r3.<javax.swing.text.View: void setParent(javax.swing.text.View)>(null);

        i1 = i1 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<org.jdesktop.swingx.JXLabel: void putClientProperty(java.lang.Object,java.lang.Object)>("html", r4);

        return;
    }

    private static org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit getFactory()
    {
        org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit $r0, $r1, $r3;
        org.jdesktop.swingx.JXLabel$BasicViewFactory $r2;

        $r0 = <org.jdesktop.swingx.JXLabel$MultiLineSupport: org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit basicFactory>;

        if $r0 != null goto label1;

        $r2 = new org.jdesktop.swingx.JXLabel$BasicViewFactory;

        specialinvoke $r2.<org.jdesktop.swingx.JXLabel$BasicViewFactory: void <init>(org.jdesktop.swingx.JXLabel$1)>(null);

        <org.jdesktop.swingx.JXLabel$MultiLineSupport: javax.swing.text.ViewFactory basicViewFactory> = $r2;

        $r3 = new org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit;

        specialinvoke $r3.<org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit: void <init>(org.jdesktop.swingx.JXLabel$1)>(null);

        <org.jdesktop.swingx.JXLabel$MultiLineSupport: org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit basicFactory> = $r3;

     label1:
        $r1 = <org.jdesktop.swingx.JXLabel$MultiLineSupport: org.jdesktop.swingx.JXLabel$MultiLineSupport$BasicEditorKit basicFactory>;

        return $r1;
    }

    static boolean access$100(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.jdesktop.swingx.JXLabel$MultiLineSupport: boolean isHTML(java.lang.String)>(r0);

        return $z0;
    }

    static javax.swing.text.ViewFactory access$500()
    {
        javax.swing.text.ViewFactory $r0;

        $r0 = <org.jdesktop.swingx.JXLabel$MultiLineSupport: javax.swing.text.ViewFactory basicViewFactory>;

        return $r0;
    }

    public static void <clinit>()
    {
        <org.jdesktop.swingx.JXLabel$MultiLineSupport: java.lang.String HTML> = "<html>";

        return;
    }
}
