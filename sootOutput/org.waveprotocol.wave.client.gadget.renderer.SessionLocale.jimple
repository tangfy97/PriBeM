public class org.waveprotocol.wave.client.gadget.renderer.SessionLocale extends java.lang.Object implements org.waveprotocol.wave.client.gadget.renderer.Locale
{
    private static final java.lang.String LANG_PATTERN;
    private static final java.lang.String COUNTRY_PATTERN;
    private static final java.lang.String DEFAULT_LANG;
    private static final java.lang.String DEFAULT_COUNTRY;
    private final java.lang.String localeString;

    public void <init>(java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.SessionLocale r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.SessionLocale;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String localeString> = r1;

        return;
    }

    private java.lang.String[] splitSessionLocale()
    {
        org.waveprotocol.wave.client.gadget.renderer.SessionLocale r0;
        java.lang.String[] $r2;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.SessionLocale;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String localeString>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("[_-]", 3);

        return $r2;
    }

    public java.lang.String getCountry()
    {
        org.waveprotocol.wave.client.gadget.renderer.SessionLocale r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.SessionLocale;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String[] splitSessionLocale()>();

        $i0 = lengthof $r1;

        if $i0 <= 1 goto label1;

        $r2 = $r1[1];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z0-9]{1,8}");

        if $z0 == 0 goto label1;

        $r3 = $r1[1];

        return $r3;

     label1:
        return "ALL";
    }

    public java.lang.String getLanguage()
    {
        org.waveprotocol.wave.client.gadget.renderer.SessionLocale r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.SessionLocale;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String[] splitSessionLocale()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = $r1[0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("[a-zA-Z]{1,8}");

        if $z0 == 0 goto label1;

        $r3 = $r1[0];

        return $r3;

     label1:
        return "en";
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String DEFAULT_COUNTRY> = "ALL";

        <org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String DEFAULT_LANG> = "en";

        <org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String COUNTRY_PATTERN> = "[a-zA-Z0-9]{1,8}";

        <org.waveprotocol.wave.client.gadget.renderer.SessionLocale: java.lang.String LANG_PATTERN> = "[a-zA-Z]{1,8}";

        return;
    }
}
