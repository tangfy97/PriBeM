public class com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId extends com.hp.hpl.jena.tdb.solver.stats.StatsCollectorBase
{
    private com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable;

    public void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: com.hp.hpl.jena.tdb.store.NodeId findRDFType(com.hp.hpl.jena.tdb.nodetable.NodeTable)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorBase: void <init>(java.lang.Object)>($r2);

        r0.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable> = r1;

        return;
    }

    private static com.hp.hpl.jena.tdb.store.NodeId findRDFType(com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r0;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        $r1 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeRDFType>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getAllocateNodeId(com.hp.hpl.jena.graph.Node)>($r1);

        return $r2;
    }

    protected java.util.Map convert(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r0;
        com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId r6;
        com.hp.hpl.jena.graph.Node $r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r7;
        com.hp.hpl.jena.tdb.store.NodeId r5;
        java.util.Map r1;
        java.lang.Object $r4, $r9;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(1000);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        $r7 = r6.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: com.hp.hpl.jena.tdb.nodetable.NodeTable nodeTable>;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r5);

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label1;

     label2:
        return $r0;
    }

    public volatile com.hp.hpl.jena.tdb.solver.stats.StatsResults results()
    {
        com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId r0;
        com.hp.hpl.jena.tdb.solver.stats.StatsResults $r1;

        r0 := @this: com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorBase: com.hp.hpl.jena.tdb.solver.stats.StatsResults results()>();

        return $r1;
    }
}
