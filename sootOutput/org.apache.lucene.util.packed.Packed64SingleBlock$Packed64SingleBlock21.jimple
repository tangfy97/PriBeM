class org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21 extends org.apache.lucene.util.packed.Packed64SingleBlock
{

    void <init>(int)
    {
        int i0;
        org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21 r0;

        r0 := @this: org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.util.packed.Packed64SingleBlock: void <init>(int,int)>(i0, 21);

        return;
    }

    public long get(int)
    {
        org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21 r0;
        long $l4, $l5, $l6;
        long[] $r1;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21;

        i0 := @parameter0: int;

        i1 = i0 / 3;

        i2 = i0 % 3;

        i3 = i2 * 21;

        $r1 = r0.<org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21: long[] blocks>;

        $l4 = $r1[i1];

        $l5 = $l4 >>> i3;

        $l6 = $l5 & 2097151L;

        return $l6;
    }

    public void set(int, long)
    {
        org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21 r0;
        long $l4, $l5, $l6, l7, $l8, $l9, $l10;
        long[] $r1, $r2;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21;

        i0 := @parameter0: int;

        l7 := @parameter1: long;

        i1 = i0 / 3;

        i2 = i0 % 3;

        i3 = i2 * 21;

        $r2 = r0.<org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21: long[] blocks>;

        $r1 = r0.<org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock21: long[] blocks>;

        $l6 = $r1[i1];

        $l4 = 2097151L << i3;

        $l5 = $l4 ^ -1L;

        $l9 = $l6 & $l5;

        $l8 = l7 << i3;

        $l10 = $l9 | $l8;

        $r2[i1] = $l10;

        return;
    }
}
