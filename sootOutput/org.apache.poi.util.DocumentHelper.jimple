public final class org.apache.poi.util.DocumentHelper extends java.lang.Object
{
    private static org.apache.poi.util.POILogger logger;
    private static final javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory;
    private static final javax.xml.parsers.DocumentBuilder documentBuilderSingleton;

    private void <init>()
    {
        org.apache.poi.util.DocumentHelper r0;

        r0 := @this: org.apache.poi.util.DocumentHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized javax.xml.parsers.DocumentBuilder newDocumentBuilder()
    {
        java.lang.IllegalStateException $r4;
        javax.xml.parsers.ParserConfigurationException $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        org.xml.sax.EntityResolver $r2;

     label1:
        $r0 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory>;

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = <org.apache.poi.util.SAXHelper: org.xml.sax.EntityResolver IGNORING_ENTITY_RESOLVER>;

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("cannot create a DocumentBuilder", $r3);

        throw $r4;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
    }

    private static void trySetSAXFeature(javax.xml.parsers.DocumentBuilderFactory, java.lang.String, boolean)
    {
        org.apache.poi.util.POILogger $r3;
        javax.xml.parsers.DocumentBuilderFactory r0;
        java.lang.String r1;
        java.lang.Exception $r2;
        boolean z0;

        r0 := @parameter0: javax.xml.parsers.DocumentBuilderFactory;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

     label1:
        virtualinvoke r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>(r1, z0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.apache.poi.util.DocumentHelper: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r3.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(3, "SAX Feature unsupported", r1, $r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void trySetXercesSecurityManager(javax.xml.parsers.DocumentBuilderFactory)
    {
        java.lang.Object[] $r8;
        java.lang.Class[] $r5;
        java.lang.String[] $r0;
        org.apache.poi.util.POILogger $r12;
        java.lang.Integer $r9;
        java.lang.Exception $r11;
        int i0, i1;
        java.lang.Class $r2, $r4, $r6;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.xml.parsers.DocumentBuilderFactory r10;
        java.lang.reflect.Method $r7;

        r10 := @parameter0: javax.xml.parsers.DocumentBuilderFactory;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "com.sun.org.apache.xerces.internal.util.SecurityManager";

        $r0[1] = "org.apache.xerces.util.SecurityManager";

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = $r0[i1];

     label2:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setEntityExpansionLimit", $r5);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4096);

        $r8[0] = $r9;

        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r8);

        virtualinvoke r10.<javax.xml.parsers.DocumentBuilderFactory: void setAttribute(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/security-manager", $r3);

     label3:
        return;

     label4:
        $r11 := @caughtexception;

        $r12 = <org.apache.poi.util.DocumentHelper: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r12.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(3, "SAX Security Manager could not be setup", $r11);

        i1 = i1 + 1;

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static org.w3c.dom.Document readDocument(java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r1);

        return $r2;
    }

    public static synchronized org.w3c.dom.Document createDocument()
    {
        org.w3c.dom.Document $r1;
        javax.xml.parsers.DocumentBuilder $r0;

        $r0 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilder documentBuilderSingleton>;

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        return $r1;
    }

    public static void addNamespaceDeclaration(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5, r6;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r5, r6);

        return;
    }

    public static void addNamespaceDeclaration(org.w3c.dom.Element, javax.xml.stream.events.Namespace)
    {
        org.w3c.dom.Element r0;
        javax.xml.stream.events.Namespace r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: javax.xml.stream.events.Namespace;

        $r2 = interfaceinvoke r1.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r3 = interfaceinvoke r1.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        staticinvoke <org.apache.poi.util.DocumentHelper: void addNamespaceDeclaration(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r0, $r2, $r3);

        return;
    }

    static void <clinit>()
    {
        javax.xml.parsers.DocumentBuilder $r6;
        org.apache.poi.util.POILogger $r0;
        javax.xml.parsers.DocumentBuilderFactory $r1, $r2, $r3, $r4, $r5;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/util/DocumentHelper;");

        <org.apache.poi.util.DocumentHelper: org.apache.poi.util.POILogger logger> = $r0;

        $r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory> = $r1;

        $r2 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory>;

        virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r3 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory>;

        virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0);

        $r4 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory>;

        staticinvoke <org.apache.poi.util.DocumentHelper: void trySetSAXFeature(javax.xml.parsers.DocumentBuilderFactory,java.lang.String,boolean)>($r4, "http://javax.xml.XMLConstants/feature/secure-processing", 1);

        $r5 = <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory>;

        staticinvoke <org.apache.poi.util.DocumentHelper: void trySetXercesSecurityManager(javax.xml.parsers.DocumentBuilderFactory)>($r5);

        $r6 = staticinvoke <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        <org.apache.poi.util.DocumentHelper: javax.xml.parsers.DocumentBuilder documentBuilderSingleton> = $r6;

        return;
    }
}
