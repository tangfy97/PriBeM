public class thredds.catalog2.xml.writer.stax.StaxWriter extends java.lang.Object implements thredds.catalog2.xml.writer.ThreddsXmlWriter
{
    private org.slf4j.Logger logger;
    private static final java.lang.String defaultCharEncoding;
    private static final java.lang.String indentString;
    private final javax.xml.stream.XMLOutputFactory factory;

    public static java.lang.String getIndentString(int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void <init>()
    {
        org.slf4j.Logger $r2;
        javax.xml.stream.XMLOutputFactory $r3, $r5, $r6, $r8;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;
        java.lang.Boolean $r4, $r7;
        java.lang.Class $r1;
        boolean $z0;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.xml.writer.stax.StaxWriter: org.slf4j.Logger logger> = $r2;

        $r3 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>();

        r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory> = $r3;

        $r5 = r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r5.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>("javax.xml.stream.isRepairingNamespaces", $r4);

        $r6 = r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory>;

        $z0 = virtualinvoke $r6.<javax.xml.stream.XMLOutputFactory: boolean isPropertySupported(java.lang.String)>("javax.xml.stream.isPrefixDefaulting");

        if $z0 == 0 goto label1;

        $r8 = r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory>;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r8.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>("javax.xml.stream.isPrefixDefaulting", $r7);

     label1:
        return;
    }

    public void writeCatalog(thredds.catalog2.Catalog, java.io.File) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException, java.io.IOException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r2;
        java.io.FileOutputStream $r1;
        thredds.catalog2.xml.writer.stax.CatalogElementWriter $r4;
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.IllegalArgumentException $r6;
        java.io.File r0;
        thredds.catalog2.Catalog r5;

        r2 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r5 := @parameter0: thredds.catalog2.Catalog;

        r0 := @parameter1: java.io.File;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File must not be null.");

        throw $r6;

     label1:
        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        $r3 = specialinvoke r2.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>($r1);

        $r4 = new thredds.catalog2.xml.writer.stax.CatalogElementWriter;

        specialinvoke $r4.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void <init>()>();

        virtualinvoke $r4.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void writeElement(thredds.catalog2.Catalog,javax.xml.stream.XMLStreamWriter,int)>(r5, $r3, 0);

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void writeCatalog(thredds.catalog2.Catalog, java.io.Writer) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r0;
        java.io.Writer r1;
        thredds.catalog2.xml.writer.stax.CatalogElementWriter $r3;
        javax.xml.stream.XMLStreamWriter $r2;
        thredds.catalog2.Catalog r4;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r4 := @parameter0: thredds.catalog2.Catalog;

        r1 := @parameter1: java.io.Writer;

        $r2 = specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.Writer)>(r1);

        $r3 = new thredds.catalog2.xml.writer.stax.CatalogElementWriter;

        specialinvoke $r3.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void <init>()>();

        virtualinvoke $r3.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void writeElement(thredds.catalog2.Catalog,javax.xml.stream.XMLStreamWriter,int)>(r4, $r2, 0);

        return;
    }

    public void writeCatalog(thredds.catalog2.Catalog, java.io.OutputStream) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        java.io.OutputStream r1;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;
        thredds.catalog2.xml.writer.stax.CatalogElementWriter $r3;
        javax.xml.stream.XMLStreamWriter $r2;
        thredds.catalog2.Catalog r4;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r4 := @parameter0: thredds.catalog2.Catalog;

        r1 := @parameter1: java.io.OutputStream;

        $r2 = specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>(r1);

        $r3 = new thredds.catalog2.xml.writer.stax.CatalogElementWriter;

        specialinvoke $r3.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void <init>()>();

        virtualinvoke $r3.<thredds.catalog2.xml.writer.stax.CatalogElementWriter: void writeElement(thredds.catalog2.Catalog,javax.xml.stream.XMLStreamWriter,int)>(r4, $r2, 0);

        return;
    }

    public void writeDataset(thredds.catalog2.Dataset, java.io.File) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException, java.io.IOException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r2;
        thredds.catalog2.Dataset r4;
        java.io.FileOutputStream $r1;
        java.lang.IllegalArgumentException $r3;
        java.io.File r0;

        r2 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r4 := @parameter0: thredds.catalog2.Dataset;

        r0 := @parameter1: java.io.File;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File must not be null.");

        throw $r3;

     label1:
        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        specialinvoke r2.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>($r1);

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void writeDataset(thredds.catalog2.Dataset, java.io.Writer) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        java.io.Writer r1;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;
        thredds.catalog2.Dataset r2;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r2 := @parameter0: thredds.catalog2.Dataset;

        r1 := @parameter1: java.io.Writer;

        specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.Writer)>(r1);

        return;
    }

    public void writeDataset(thredds.catalog2.Dataset, java.io.OutputStream) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        java.io.OutputStream r1;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;
        thredds.catalog2.Dataset r2;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r2 := @parameter0: thredds.catalog2.Dataset;

        r1 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>(r1);

        return;
    }

    public void writeMetadata(thredds.catalog2.Metadata, java.io.File) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException, java.io.IOException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r2;
        java.io.FileOutputStream $r1;
        java.lang.IllegalArgumentException $r3;
        thredds.catalog2.Metadata r4;
        java.io.File r0;

        r2 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r4 := @parameter0: thredds.catalog2.Metadata;

        r0 := @parameter1: java.io.File;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File must not be null.");

        throw $r3;

     label1:
        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r0);

        specialinvoke r2.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>($r1);

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public void writeMetadata(thredds.catalog2.Metadata, java.io.Writer) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        java.io.Writer r1;
        thredds.catalog2.Metadata r2;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r2 := @parameter0: thredds.catalog2.Metadata;

        r1 := @parameter1: java.io.Writer;

        specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.Writer)>(r1);

        return;
    }

    public void writeMetadata(thredds.catalog2.Metadata, java.io.OutputStream) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        java.io.OutputStream r1;
        thredds.catalog2.Metadata r2;
        thredds.catalog2.xml.writer.stax.StaxWriter r0;

        r0 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r2 := @parameter0: thredds.catalog2.Metadata;

        r1 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream)>(r1);

        return;
    }

    private javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.Writer) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r1;
        javax.xml.stream.XMLStreamException $r5;
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.String $r9, $r11, $r15, $r17;
        thredds.catalog2.xml.writer.ThreddsXmlWriterException $r12;
        org.slf4j.Logger $r7;
        java.lang.IllegalArgumentException $r4;
        javax.xml.stream.XMLOutputFactory $r2;
        java.io.Writer r0;
        java.lang.StringBuilder $r6, $r8, $r10, $r13, $r14, $r16;

        r1 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r0 := @parameter0: java.io.Writer;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Writer may not be null.");

        throw $r4;

     label1:
        $r2 = r1.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory>;

        $r3 = virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r7 = r1.<thredds.catalog2.xml.writer.stax.StaxWriter: org.slf4j.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getXmlStreamWriter(): Failed to create XMLStreamWriter: ");

        $r9 = virtualinvoke $r5.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r11);

        $r12 = new thredds.catalog2.xml.writer.ThreddsXmlWriterException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create XMLStreamWriter: ");

        $r15 = virtualinvoke $r5.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<thredds.catalog2.xml.writer.ThreddsXmlWriterException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r5);

        throw $r12;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    private javax.xml.stream.XMLStreamWriter getXmlStreamWriter(java.io.OutputStream) throws thredds.catalog2.xml.writer.ThreddsXmlWriterException
    {
        thredds.catalog2.xml.writer.stax.StaxWriter r1;
        javax.xml.stream.XMLStreamException $r5;
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.String $r9, $r11, $r15, $r17;
        java.io.OutputStream r0;
        thredds.catalog2.xml.writer.ThreddsXmlWriterException $r12;
        org.slf4j.Logger $r7;
        java.lang.IllegalArgumentException $r4;
        javax.xml.stream.XMLOutputFactory $r2;
        java.lang.StringBuilder $r6, $r8, $r10, $r13, $r14, $r16;

        r1 := @this: thredds.catalog2.xml.writer.stax.StaxWriter;

        r0 := @parameter0: java.io.OutputStream;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("OutputStream must not be null.");

        throw $r4;

     label1:
        $r2 = r1.<thredds.catalog2.xml.writer.stax.StaxWriter: javax.xml.stream.XMLOutputFactory factory>;

        $r3 = virtualinvoke $r2.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>(r0, "UTF-8");

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r7 = r1.<thredds.catalog2.xml.writer.stax.StaxWriter: org.slf4j.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getXmlStreamWriter(): Failed to create XMLStreamWriter: ");

        $r9 = virtualinvoke $r5.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r11);

        $r12 = new thredds.catalog2.xml.writer.ThreddsXmlWriterException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create XMLStreamWriter: ");

        $r15 = virtualinvoke $r5.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<thredds.catalog2.xml.writer.ThreddsXmlWriterException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r5);

        throw $r12;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <thredds.catalog2.xml.writer.stax.StaxWriter: java.lang.String indentString> = "  ";

        <thredds.catalog2.xml.writer.stax.StaxWriter: java.lang.String defaultCharEncoding> = "UTF-8";

        return;
    }
}
