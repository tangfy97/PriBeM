public class org.apache.poi.hssf.util.HSSFColor extends java.lang.Object implements org.apache.poi.ss.usermodel.Color
{
    private static java.util.Map indexHash;

    public void <init>()
    {
        org.apache.poi.hssf.util.HSSFColor r0;

        r0 := @this: org.apache.poi.hssf.util.HSSFColor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.util.Map getIndexHash()
    {
        java.util.Map $r0, $r1, $r3;
        java.util.Hashtable $r2;

        $r0 = <org.apache.poi.hssf.util.HSSFColor: java.util.Map indexHash>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: java.util.Hashtable createColorsByIndexMap()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        <org.apache.poi.hssf.util.HSSFColor: java.util.Map indexHash> = $r3;

     label1:
        $r1 = <org.apache.poi.hssf.util.HSSFColor: java.util.Map indexHash>;

        return $r1;
    }

    public static final java.util.Hashtable getMutableIndexHash()
    {
        java.util.Hashtable $r0;

        $r0 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: java.util.Hashtable createColorsByIndexMap()>();

        return $r0;
    }

    private static java.util.Hashtable createColorsByIndexMap()
    {
        java.lang.Integer $r2, $r3;
        org.apache.poi.hssf.util.HSSFColor r5, r20, r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r23;
        short $s5;
        int $i0, $i1, $i2, $i3, $i4, i6, i7, $i8;
        java.lang.String $r12, $r16, $r19;
        java.util.Hashtable $r22;
        org.apache.poi.hssf.util.HSSFColor[] $r0;
        java.lang.RuntimeException $r24;
        java.lang.Object $r4;
        java.lang.Class $r11, $r15;

        $r0 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: org.apache.poi.hssf.util.HSSFColor[] getAllColors()>();

        $r22 = new java.util.Hashtable;

        $i0 = lengthof $r0;

        $i1 = $i0 * 3;

        $i2 = $i1 / 2;

        specialinvoke $r22.<java.util.Hashtable: void <init>(int)>($i2);

        i6 = 0;

     label1:
        $i3 = lengthof $r0;

        if i6 >= $i3 goto label3;

        r20 = $r0[i6];

        $s5 = virtualinvoke r20.<org.apache.poi.hssf.util.HSSFColor: short getIndex()>();

        $i8 = (int) $s5;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $z1 = virtualinvoke $r22.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke $r22.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.poi.hssf.util.HSSFColor) $r4;

        $r24 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dup color index (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for colors (");

        $r11 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("),(");

        $r15 = virtualinvoke r20.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r24;

     label2:
        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r20);

        i6 = i6 + 1;

        goto label1;

     label3:
        i7 = 0;

     label4:
        $i4 = lengthof $r0;

        if i7 >= $i4 goto label8;

        r21 = $r0[i7];

        $r2 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: java.lang.Integer getIndex2(org.apache.poi.hssf.util.HSSFColor)>(r21);

        if $r2 != null goto label5;

        goto label7;

     label5:
        $z0 = virtualinvoke $r22.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label6;

     label6:
        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r21);

     label7:
        i7 = i7 + 1;

        goto label4;

     label8:
        return $r22;
    }

    private static java.lang.Integer getIndex2(org.apache.poi.hssf.util.HSSFColor)
    {
        java.lang.IllegalAccessException $r5;
        java.lang.RuntimeException $r6, $r8;
        java.lang.reflect.Field $r2;
        java.lang.IllegalArgumentException $r7;
        org.apache.poi.hssf.util.HSSFColor r0;
        java.lang.Integer $r4;
        java.lang.NoSuchFieldException $r9;
        java.lang.Short r10;
        int $i0;
        java.lang.Class $r1;
        java.lang.Object $r3;

        r0 := @parameter0: org.apache.poi.hssf.util.HSSFColor;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("index2");

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        return null;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (java.lang.Short) $r3;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label8:
        $i0 = virtualinvoke r10.<java.lang.Short: int intValue()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
    }

    private static org.apache.poi.hssf.util.HSSFColor[] getAllColors()
    {
        org.apache.poi.hssf.util.HSSFColor$AQUA $r20;
        org.apache.poi.hssf.util.HSSFColor$ORANGE $r9;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_CORNFLOWER_BLUE $r46;
        org.apache.poi.hssf.util.HSSFColor$BLACK $r1;
        org.apache.poi.hssf.util.HSSFColor$LAVENDER $r38;
        org.apache.poi.hssf.util.HSSFColor$SKY_BLUE $r30;
        org.apache.poi.hssf.util.HSSFColor$CORNFLOWER_BLUE $r40;
        org.apache.poi.hssf.util.HSSFColor$TAN $r47;
        org.apache.poi.hssf.util.HSSFColor$WHITE $r39;
        org.apache.poi.hssf.util.HSSFColor$OLIVE_GREEN $r3;
        org.apache.poi.hssf.util.HSSFColor$TURQUOISE $r28;
        org.apache.poi.hssf.util.HSSFColor$RED $r16;
        org.apache.poi.hssf.util.HSSFColor$DARK_RED $r29;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_TURQUOISE $r36;
        org.apache.poi.hssf.util.HSSFColor$CORAL $r44;
        org.apache.poi.hssf.util.HSSFColor$PLUM $r31;
        org.apache.poi.hssf.util.HSSFColor$MAROON $r42;
        org.apache.poi.hssf.util.HSSFColor$ORCHID $r43;
        org.apache.poi.hssf.util.HSSFColor$LEMON_CHIFFON $r41;
        org.apache.poi.hssf.util.HSSFColor$GREEN $r11;
        org.apache.poi.hssf.util.HSSFColor$BLUE_GREY $r14;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_GREEN $r35;
        org.apache.poi.hssf.util.HSSFColor$BROWN $r2;
        org.apache.poi.hssf.util.HSSFColor$DARK_TEAL $r5;
        org.apache.poi.hssf.util.HSSFColor$ROYAL_BLUE $r45;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_BLUE $r21;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_ORANGE $r17;
        org.apache.poi.hssf.util.HSSFColor$GREY_80_PERCENT $r8;
        org.apache.poi.hssf.util.HSSFColor$BRIGHT_GREEN $r27;
        org.apache.poi.hssf.util.HSSFColor$GREY_50_PERCENT $r15;
        org.apache.poi.hssf.util.HSSFColor$PINK $r24;
        org.apache.poi.hssf.util.HSSFColor$DARK_BLUE $r6;
        org.apache.poi.hssf.util.HSSFColor[] $r0;
        org.apache.poi.hssf.util.HSSFColor$GREY_40_PERCENT $r23;
        org.apache.poi.hssf.util.HSSFColor$DARK_YELLOW $r10;
        org.apache.poi.hssf.util.HSSFColor$GOLD $r25;
        org.apache.poi.hssf.util.HSSFColor$TEAL $r12;
        org.apache.poi.hssf.util.HSSFColor$INDIGO $r7;
        org.apache.poi.hssf.util.HSSFColor$YELLOW $r26;
        org.apache.poi.hssf.util.HSSFColor$LIGHT_YELLOW $r34;
        org.apache.poi.hssf.util.HSSFColor$DARK_GREEN $r4;
        org.apache.poi.hssf.util.HSSFColor$VIOLET $r22;
        org.apache.poi.hssf.util.HSSFColor$PALE_BLUE $r37;
        org.apache.poi.hssf.util.HSSFColor$GREY_25_PERCENT $r32;
        org.apache.poi.hssf.util.HSSFColor$LIME $r18;
        org.apache.poi.hssf.util.HSSFColor$ROSE $r33;
        org.apache.poi.hssf.util.HSSFColor$SEA_GREEN $r19;
        org.apache.poi.hssf.util.HSSFColor$BLUE $r13;

        $r0 = newarray (org.apache.poi.hssf.util.HSSFColor)[47];

        $r1 = new org.apache.poi.hssf.util.HSSFColor$BLACK;

        specialinvoke $r1.<org.apache.poi.hssf.util.HSSFColor$BLACK: void <init>()>();

        $r0[0] = $r1;

        $r2 = new org.apache.poi.hssf.util.HSSFColor$BROWN;

        specialinvoke $r2.<org.apache.poi.hssf.util.HSSFColor$BROWN: void <init>()>();

        $r0[1] = $r2;

        $r3 = new org.apache.poi.hssf.util.HSSFColor$OLIVE_GREEN;

        specialinvoke $r3.<org.apache.poi.hssf.util.HSSFColor$OLIVE_GREEN: void <init>()>();

        $r0[2] = $r3;

        $r4 = new org.apache.poi.hssf.util.HSSFColor$DARK_GREEN;

        specialinvoke $r4.<org.apache.poi.hssf.util.HSSFColor$DARK_GREEN: void <init>()>();

        $r0[3] = $r4;

        $r5 = new org.apache.poi.hssf.util.HSSFColor$DARK_TEAL;

        specialinvoke $r5.<org.apache.poi.hssf.util.HSSFColor$DARK_TEAL: void <init>()>();

        $r0[4] = $r5;

        $r6 = new org.apache.poi.hssf.util.HSSFColor$DARK_BLUE;

        specialinvoke $r6.<org.apache.poi.hssf.util.HSSFColor$DARK_BLUE: void <init>()>();

        $r0[5] = $r6;

        $r7 = new org.apache.poi.hssf.util.HSSFColor$INDIGO;

        specialinvoke $r7.<org.apache.poi.hssf.util.HSSFColor$INDIGO: void <init>()>();

        $r0[6] = $r7;

        $r8 = new org.apache.poi.hssf.util.HSSFColor$GREY_80_PERCENT;

        specialinvoke $r8.<org.apache.poi.hssf.util.HSSFColor$GREY_80_PERCENT: void <init>()>();

        $r0[7] = $r8;

        $r9 = new org.apache.poi.hssf.util.HSSFColor$ORANGE;

        specialinvoke $r9.<org.apache.poi.hssf.util.HSSFColor$ORANGE: void <init>()>();

        $r0[8] = $r9;

        $r10 = new org.apache.poi.hssf.util.HSSFColor$DARK_YELLOW;

        specialinvoke $r10.<org.apache.poi.hssf.util.HSSFColor$DARK_YELLOW: void <init>()>();

        $r0[9] = $r10;

        $r11 = new org.apache.poi.hssf.util.HSSFColor$GREEN;

        specialinvoke $r11.<org.apache.poi.hssf.util.HSSFColor$GREEN: void <init>()>();

        $r0[10] = $r11;

        $r12 = new org.apache.poi.hssf.util.HSSFColor$TEAL;

        specialinvoke $r12.<org.apache.poi.hssf.util.HSSFColor$TEAL: void <init>()>();

        $r0[11] = $r12;

        $r13 = new org.apache.poi.hssf.util.HSSFColor$BLUE;

        specialinvoke $r13.<org.apache.poi.hssf.util.HSSFColor$BLUE: void <init>()>();

        $r0[12] = $r13;

        $r14 = new org.apache.poi.hssf.util.HSSFColor$BLUE_GREY;

        specialinvoke $r14.<org.apache.poi.hssf.util.HSSFColor$BLUE_GREY: void <init>()>();

        $r0[13] = $r14;

        $r15 = new org.apache.poi.hssf.util.HSSFColor$GREY_50_PERCENT;

        specialinvoke $r15.<org.apache.poi.hssf.util.HSSFColor$GREY_50_PERCENT: void <init>()>();

        $r0[14] = $r15;

        $r16 = new org.apache.poi.hssf.util.HSSFColor$RED;

        specialinvoke $r16.<org.apache.poi.hssf.util.HSSFColor$RED: void <init>()>();

        $r0[15] = $r16;

        $r17 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_ORANGE;

        specialinvoke $r17.<org.apache.poi.hssf.util.HSSFColor$LIGHT_ORANGE: void <init>()>();

        $r0[16] = $r17;

        $r18 = new org.apache.poi.hssf.util.HSSFColor$LIME;

        specialinvoke $r18.<org.apache.poi.hssf.util.HSSFColor$LIME: void <init>()>();

        $r0[17] = $r18;

        $r19 = new org.apache.poi.hssf.util.HSSFColor$SEA_GREEN;

        specialinvoke $r19.<org.apache.poi.hssf.util.HSSFColor$SEA_GREEN: void <init>()>();

        $r0[18] = $r19;

        $r20 = new org.apache.poi.hssf.util.HSSFColor$AQUA;

        specialinvoke $r20.<org.apache.poi.hssf.util.HSSFColor$AQUA: void <init>()>();

        $r0[19] = $r20;

        $r21 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_BLUE;

        specialinvoke $r21.<org.apache.poi.hssf.util.HSSFColor$LIGHT_BLUE: void <init>()>();

        $r0[20] = $r21;

        $r22 = new org.apache.poi.hssf.util.HSSFColor$VIOLET;

        specialinvoke $r22.<org.apache.poi.hssf.util.HSSFColor$VIOLET: void <init>()>();

        $r0[21] = $r22;

        $r23 = new org.apache.poi.hssf.util.HSSFColor$GREY_40_PERCENT;

        specialinvoke $r23.<org.apache.poi.hssf.util.HSSFColor$GREY_40_PERCENT: void <init>()>();

        $r0[22] = $r23;

        $r24 = new org.apache.poi.hssf.util.HSSFColor$PINK;

        specialinvoke $r24.<org.apache.poi.hssf.util.HSSFColor$PINK: void <init>()>();

        $r0[23] = $r24;

        $r25 = new org.apache.poi.hssf.util.HSSFColor$GOLD;

        specialinvoke $r25.<org.apache.poi.hssf.util.HSSFColor$GOLD: void <init>()>();

        $r0[24] = $r25;

        $r26 = new org.apache.poi.hssf.util.HSSFColor$YELLOW;

        specialinvoke $r26.<org.apache.poi.hssf.util.HSSFColor$YELLOW: void <init>()>();

        $r0[25] = $r26;

        $r27 = new org.apache.poi.hssf.util.HSSFColor$BRIGHT_GREEN;

        specialinvoke $r27.<org.apache.poi.hssf.util.HSSFColor$BRIGHT_GREEN: void <init>()>();

        $r0[26] = $r27;

        $r28 = new org.apache.poi.hssf.util.HSSFColor$TURQUOISE;

        specialinvoke $r28.<org.apache.poi.hssf.util.HSSFColor$TURQUOISE: void <init>()>();

        $r0[27] = $r28;

        $r29 = new org.apache.poi.hssf.util.HSSFColor$DARK_RED;

        specialinvoke $r29.<org.apache.poi.hssf.util.HSSFColor$DARK_RED: void <init>()>();

        $r0[28] = $r29;

        $r30 = new org.apache.poi.hssf.util.HSSFColor$SKY_BLUE;

        specialinvoke $r30.<org.apache.poi.hssf.util.HSSFColor$SKY_BLUE: void <init>()>();

        $r0[29] = $r30;

        $r31 = new org.apache.poi.hssf.util.HSSFColor$PLUM;

        specialinvoke $r31.<org.apache.poi.hssf.util.HSSFColor$PLUM: void <init>()>();

        $r0[30] = $r31;

        $r32 = new org.apache.poi.hssf.util.HSSFColor$GREY_25_PERCENT;

        specialinvoke $r32.<org.apache.poi.hssf.util.HSSFColor$GREY_25_PERCENT: void <init>()>();

        $r0[31] = $r32;

        $r33 = new org.apache.poi.hssf.util.HSSFColor$ROSE;

        specialinvoke $r33.<org.apache.poi.hssf.util.HSSFColor$ROSE: void <init>()>();

        $r0[32] = $r33;

        $r34 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_YELLOW;

        specialinvoke $r34.<org.apache.poi.hssf.util.HSSFColor$LIGHT_YELLOW: void <init>()>();

        $r0[33] = $r34;

        $r35 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_GREEN;

        specialinvoke $r35.<org.apache.poi.hssf.util.HSSFColor$LIGHT_GREEN: void <init>()>();

        $r0[34] = $r35;

        $r36 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_TURQUOISE;

        specialinvoke $r36.<org.apache.poi.hssf.util.HSSFColor$LIGHT_TURQUOISE: void <init>()>();

        $r0[35] = $r36;

        $r37 = new org.apache.poi.hssf.util.HSSFColor$PALE_BLUE;

        specialinvoke $r37.<org.apache.poi.hssf.util.HSSFColor$PALE_BLUE: void <init>()>();

        $r0[36] = $r37;

        $r38 = new org.apache.poi.hssf.util.HSSFColor$LAVENDER;

        specialinvoke $r38.<org.apache.poi.hssf.util.HSSFColor$LAVENDER: void <init>()>();

        $r0[37] = $r38;

        $r39 = new org.apache.poi.hssf.util.HSSFColor$WHITE;

        specialinvoke $r39.<org.apache.poi.hssf.util.HSSFColor$WHITE: void <init>()>();

        $r0[38] = $r39;

        $r40 = new org.apache.poi.hssf.util.HSSFColor$CORNFLOWER_BLUE;

        specialinvoke $r40.<org.apache.poi.hssf.util.HSSFColor$CORNFLOWER_BLUE: void <init>()>();

        $r0[39] = $r40;

        $r41 = new org.apache.poi.hssf.util.HSSFColor$LEMON_CHIFFON;

        specialinvoke $r41.<org.apache.poi.hssf.util.HSSFColor$LEMON_CHIFFON: void <init>()>();

        $r0[40] = $r41;

        $r42 = new org.apache.poi.hssf.util.HSSFColor$MAROON;

        specialinvoke $r42.<org.apache.poi.hssf.util.HSSFColor$MAROON: void <init>()>();

        $r0[41] = $r42;

        $r43 = new org.apache.poi.hssf.util.HSSFColor$ORCHID;

        specialinvoke $r43.<org.apache.poi.hssf.util.HSSFColor$ORCHID: void <init>()>();

        $r0[42] = $r43;

        $r44 = new org.apache.poi.hssf.util.HSSFColor$CORAL;

        specialinvoke $r44.<org.apache.poi.hssf.util.HSSFColor$CORAL: void <init>()>();

        $r0[43] = $r44;

        $r45 = new org.apache.poi.hssf.util.HSSFColor$ROYAL_BLUE;

        specialinvoke $r45.<org.apache.poi.hssf.util.HSSFColor$ROYAL_BLUE: void <init>()>();

        $r0[44] = $r45;

        $r46 = new org.apache.poi.hssf.util.HSSFColor$LIGHT_CORNFLOWER_BLUE;

        specialinvoke $r46.<org.apache.poi.hssf.util.HSSFColor$LIGHT_CORNFLOWER_BLUE: void <init>()>();

        $r0[45] = $r46;

        $r47 = new org.apache.poi.hssf.util.HSSFColor$TAN;

        specialinvoke $r47.<org.apache.poi.hssf.util.HSSFColor$TAN: void <init>()>();

        $r0[46] = $r47;

        return $r0;
    }

    public static final java.util.Hashtable getTripletHash()
    {
        java.util.Hashtable $r0;

        $r0 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: java.util.Hashtable createColorsByHexStringMap()>();

        return $r0;
    }

    private static java.util.Hashtable createColorsByHexStringMap()
    {
        org.apache.poi.hssf.util.HSSFColor r2, r5;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r3, $r12, $r17, $r20;
        java.util.Hashtable $r1;
        boolean $z0;
        org.apache.poi.hssf.util.HSSFColor[] $r0;
        java.lang.RuntimeException $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19;
        java.lang.Class $r11, $r16;

        $r0 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: org.apache.poi.hssf.util.HSSFColor[] getAllColors()>();

        $r1 = new java.util.Hashtable;

        $i0 = lengthof $r0;

        $i1 = $i0 * 3;

        $i2 = $i1 / 2;

        specialinvoke $r1.<java.util.Hashtable: void <init>(int)>($i2);

        i4 = 0;

     label1:
        $i3 = lengthof $r0;

        if i4 >= $i3 goto label3;

        r2 = $r0[i4];

        $r3 = virtualinvoke r2.<org.apache.poi.hssf.util.HSSFColor: java.lang.String getHexString()>();

        $z0 = virtualinvoke $r1.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.poi.hssf.util.HSSFColor) $r4;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dup color hexString (");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for color (");

        $r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already taken by (");

        $r16 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20);

        throw $r6;

     label2:
        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        i4 = i4 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public short getIndex()
    {
        org.apache.poi.hssf.util.HSSFColor r0;

        r0 := @this: org.apache.poi.hssf.util.HSSFColor;

        return 8;
    }

    public short[] getTriplet()
    {
        short[] $r0;
        org.apache.poi.hssf.util.HSSFColor r1;

        r1 := @this: org.apache.poi.hssf.util.HSSFColor;

        $r0 = <org.apache.poi.hssf.util.HSSFColor$BLACK: short[] triplet>;

        return $r0;
    }

    public java.lang.String getHexString()
    {
        org.apache.poi.hssf.util.HSSFColor r0;

        r0 := @this: org.apache.poi.hssf.util.HSSFColor;

        return "0:0:0";
    }
}
