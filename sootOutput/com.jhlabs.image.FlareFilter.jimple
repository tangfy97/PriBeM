public class com.jhlabs.image.FlareFilter extends com.jhlabs.image.PointFilter
{
    private int rays;
    private float radius;
    private float baseAmount;
    private float ringAmount;
    private float rayAmount;
    private int color;
    private int width;
    private int height;
    private float centreX;
    private float centreY;
    private float ringWidth;
    private float linear;
    private float gauss;
    private float mix;
    private float falloff;
    private float sigma;
    private float icentreX;
    private float icentreY;

    public void <init>()
    {
        int $i1;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.FlareFilter: int rays> = 50;

        r0.<com.jhlabs.image.FlareFilter: float baseAmount> = 1.0F;

        r0.<com.jhlabs.image.FlareFilter: float ringAmount> = 0.2F;

        r0.<com.jhlabs.image.FlareFilter: float rayAmount> = 0.1F;

        $i1 = (int) -1;

        r0.<com.jhlabs.image.FlareFilter: int color> = $i1;

        r0.<com.jhlabs.image.FlareFilter: float centreX> = 0.5F;

        r0.<com.jhlabs.image.FlareFilter: float centreY> = 0.5F;

        r0.<com.jhlabs.image.FlareFilter: float ringWidth> = 1.6F;

        r0.<com.jhlabs.image.FlareFilter: float linear> = 0.03F;

        r0.<com.jhlabs.image.FlareFilter: float gauss> = 0.006F;

        r0.<com.jhlabs.image.FlareFilter: float mix> = 0.5F;

        r0.<com.jhlabs.image.FlareFilter: float falloff> = 6.0F;

        virtualinvoke r0.<com.jhlabs.image.FlareFilter: void setRadius(float)>(50.0F);

        return;
    }

    public void setColor(int)
    {
        int i0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.FlareFilter: int color> = i0;

        return;
    }

    public int getColor()
    {
        int $i0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $i0 = r0.<com.jhlabs.image.FlareFilter: int color>;

        return $i0;
    }

    public void setRingWidth(float)
    {
        float f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FlareFilter: float ringWidth> = f0;

        return;
    }

    public float getRingWidth()
    {
        float $f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        return $f0;
    }

    public void setBaseAmount(float)
    {
        float f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FlareFilter: float baseAmount> = f0;

        return;
    }

    public float getBaseAmount()
    {
        float $f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float baseAmount>;

        return $f0;
    }

    public void setRingAmount(float)
    {
        float f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FlareFilter: float ringAmount> = f0;

        return;
    }

    public float getRingAmount()
    {
        float $f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float ringAmount>;

        return $f0;
    }

    public void setRayAmount(float)
    {
        float f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FlareFilter: float rayAmount> = f0;

        return;
    }

    public float getRayAmount()
    {
        float $f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float rayAmount>;

        return $f0;
    }

    public void setCentre(java.awt.geom.Point2D)
    {
        com.jhlabs.image.FlareFilter r0;
        java.awt.geom.Point2D r1;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: com.jhlabs.image.FlareFilter;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        r0.<com.jhlabs.image.FlareFilter: float centreX> = $f0;

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        r0.<com.jhlabs.image.FlareFilter: float centreY> = $f1;

        return;
    }

    public java.awt.geom.Point2D getCentre()
    {
        java.awt.geom.Point2D$Float $r0;
        com.jhlabs.image.FlareFilter r1;
        float $f0, $f1;

        r1 := @this: com.jhlabs.image.FlareFilter;

        $r0 = new java.awt.geom.Point2D$Float;

        $f1 = r1.<com.jhlabs.image.FlareFilter: float centreX>;

        $f0 = r1.<com.jhlabs.image.FlareFilter: float centreY>;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f1, $f0);

        return $r0;
    }

    public void setRadius(float)
    {
        float f0, $f1;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FlareFilter: float radius> = f0;

        $f1 = f0 / 3.0F;

        r0.<com.jhlabs.image.FlareFilter: float sigma> = $f1;

        return;
    }

    public float getRadius()
    {
        float $f0;
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        return $f0;
    }

    public void setDimensions(int, int)
    {
        com.jhlabs.image.FlareFilter r0;
        int i0, i1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.jhlabs.image.FlareFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.jhlabs.image.FlareFilter: int width> = i0;

        r0.<com.jhlabs.image.FlareFilter: int height> = i1;

        $f1 = r0.<com.jhlabs.image.FlareFilter: float centreX>;

        $f0 = (float) i0;

        $f2 = $f1 * $f0;

        r0.<com.jhlabs.image.FlareFilter: float icentreX> = $f2;

        $f4 = r0.<com.jhlabs.image.FlareFilter: float centreY>;

        $f3 = (float) i1;

        $f5 = $f4 * $f3;

        r0.<com.jhlabs.image.FlareFilter: float icentreY> = $f5;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void setDimensions(int,int)>(i0, i1);

        return;
    }

    public int filterRGB(int, int, int)
    {
        com.jhlabs.image.FlareFilter r0;
        byte $b2, $b3, $b7;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, f70, f71, f72, f73, f74;
        int i0, i1, i4, $i5, $i6, $i8, $i9, $i10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.jhlabs.image.FlareFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $f1 = (float) i0;

        $f0 = r0.<com.jhlabs.image.FlareFilter: float icentreX>;

        f2 = $f1 - $f0;

        $f4 = (float) i1;

        $f3 = r0.<com.jhlabs.image.FlareFilter: float icentreY>;

        f5 = $f4 - $f3;

        $f7 = f2 * f2;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f9 = (float) $d1;

        $f10 = neg f9;

        $f12 = $f10 * f9;

        $f11 = r0.<com.jhlabs.image.FlareFilter: float gauss>;

        $f13 = $f12 * $f11;

        $d2 = (double) $f13;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        $f15 = (float) $d3;

        $f14 = r0.<com.jhlabs.image.FlareFilter: float mix>;

        $f19 = $f15 * $f14;

        $f17 = neg f9;

        $f16 = r0.<com.jhlabs.image.FlareFilter: float linear>;

        $f18 = $f17 * $f16;

        $d4 = (double) $f18;

        $d5 = staticinvoke <java.lang.Math: double exp(double)>($d4);

        $f22 = (float) $d5;

        $f20 = r0.<com.jhlabs.image.FlareFilter: float mix>;

        $f21 = 1.0F - $f20;

        $f23 = $f22 * $f21;

        f70 = $f19 + $f23;

        $f24 = r0.<com.jhlabs.image.FlareFilter: float baseAmount>;

        f71 = f70 * $f24;

        $f26 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        $f25 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        $f27 = $f26 + $f25;

        $b2 = f9 cmpl $f27;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label1;

        $f65 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        $f64 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        $f66 = $f65 + $f64;

        $f68 = f9 - $f66;

        $f67 = r0.<com.jhlabs.image.FlareFilter: float falloff>;

        $f69 = $f68 / $f67;

        f71 = staticinvoke <com.jhlabs.image.ImageMath: float lerp(float,float,float)>($f69, f71, 0.0F);

     label1:
        $f29 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        $f28 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        $f30 = $f29 - $f28;

        $b3 = f9 cmpg $f30;

        $i9 = (int) $b3;

        if $i9 < 0 goto label2;

        $f47 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        $f46 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        $f48 = $f47 + $f46;

        $b7 = f9 cmpl $f48;

        $i10 = (int) $b7;

        if $i10 <= 0 goto label3;

     label2:
        f72 = 0.0F;

        goto label4;

     label3:
        $f49 = r0.<com.jhlabs.image.FlareFilter: float radius>;

        $f50 = f9 - $f49;

        $f51 = staticinvoke <java.lang.Math: float abs(float)>($f50);

        $f52 = r0.<com.jhlabs.image.FlareFilter: float ringWidth>;

        f73 = $f51 / $f52;

        $f55 = f73 * f73;

        $f53 = 2.0F * f73;

        $f54 = 3.0F - $f53;

        $f56 = $f55 * $f54;

        f74 = 1.0F - $f56;

        $f57 = r0.<com.jhlabs.image.FlareFilter: float ringAmount>;

        f72 = f74 * $f57;

     label4:
        $f58 = f71 + f72;

        $d7 = (double) f2;

        $d6 = (double) f5;

        $d8 = staticinvoke <java.lang.Math: double atan2(double,double)>($d7, $d6);

        $f31 = (float) $d8;

        $f59 = $f31 + 3.1415927F;

        $f32 = $f59 / 3.1415927F;

        $f33 = $f32 * 17.0F;

        $f35 = $f33 + 1.0F;

        $f34 = $f59 * 10.0F;

        $f36 = staticinvoke <com.jhlabs.math.Noise: float noise1(float)>($f34);

        $f37 = $f35 + $f36;

        $f38 = staticinvoke <com.jhlabs.image.ImageMath: float mod(float,float)>($f37, 1.0F);

        $f39 = $f38 - 0.5F;

        $f60 = $f39 * 2.0F;

        $f40 = staticinvoke <java.lang.Math: float abs(float)>($f60);

        $d9 = (double) $f40;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, 5.0);

        $f61 = (float) $d10;

        $f41 = r0.<com.jhlabs.image.FlareFilter: float rayAmount>;

        $f44 = $f41 * $f61;

        $f42 = f9 * 0.1F;

        $f43 = 1.0F + $f42;

        $f62 = $f44 / $f43;

        $f63 = $f58 + $f62;

        $f45 = staticinvoke <com.jhlabs.image.ImageMath: float clamp(float,float,float)>($f63, 0.0F, 1.0F);

        $i5 = r0.<com.jhlabs.image.FlareFilter: int color>;

        $i6 = staticinvoke <com.jhlabs.image.ImageMath: int mixColors(float,int,int)>($f45, i4, $i5);

        return $i6;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.FlareFilter r0;

        r0 := @this: com.jhlabs.image.FlareFilter;

        return "Stylize/Flare...";
    }
}
