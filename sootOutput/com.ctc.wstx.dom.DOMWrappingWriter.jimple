public class com.ctc.wstx.dom.DOMWrappingWriter extends java.lang.Object implements org.codehaus.stax2.XMLStreamWriter2
{
    protected final com.ctc.wstx.api.WriterConfig mConfig;
    protected final boolean mNsAware;
    protected final boolean mNsRepairing;
    protected java.lang.String mEncoding;
    protected javax.xml.namespace.NamespaceContext mNsContext;
    protected final org.w3c.dom.Document mDocument;
    protected org.w3c.dom.Element mParentElem;
    protected org.w3c.dom.Element mOpenElement;

    private void <init>(com.ctc.wstx.api.WriterConfig, org.w3c.dom.Node) throws javax.xml.stream.XMLStreamException
    {
        short $s0;
        org.w3c.dom.Document $r3, $r11, $r12, $r22;
        java.lang.StringBuffer $r6, $r8, $r9, $r15, $r17, $r25, $r27;
        org.w3c.dom.Node r1;
        javax.xml.stream.XMLStreamException $r24, $r26, $r28;
        int $i1;
        java.lang.String $r10, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r23;
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Element r21;
        com.ctc.wstx.api.WriterConfig r2;
        java.lang.Class $r7, $r16;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: java.lang.String mEncoding> = null;

        if r1 != null goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not pass null Node for constructing a DOM-based XMLStreamWriter");

        throw $r23;

     label01:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig> = r2;

        $z0 = virtualinvoke r2.<com.ctc.wstx.api.WriterConfig: boolean willSupportNamespaces()>();

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware> = $z0;

        $z1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z1 == 0 goto label02;

        $z2 = virtualinvoke r2.<com.ctc.wstx.api.WriterConfig: boolean automaticNamespacesEnabled()>();

        if $z2 == 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsRepairing> = $z3;

        $z4 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsRepairing>;

        if $z4 == 0 goto label04;

        $r24 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r24.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>("Repairing mode not (yet) supported with DOM-backed writer");

        throw $r24;

     label04:
        r21 = null;

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label06;
            case 9: goto label05;
            case 11: goto label07;
            default: goto label08;
        };

     label05:
        $r11 = (org.w3c.dom.Document) r1;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r11;

        goto label09;

     label06:
        $r12 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r12;

        r21 = (org.w3c.dom.Element) r1;

        goto label09;

     label07:
        $r3 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument> = $r3;

        goto label09;

     label08:
        $r26 = new javax.xml.stream.XMLStreamException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamWriter for a DOM node of type ");

        $r16 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r18);

        throw $r26;

     label09:
        $r22 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        if $r22 != null goto label10;

        $r28 = new javax.xml.stream.XMLStreamException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamWriter for given node (of type ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): did not have owner document");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r10);

        throw $r28;

     label10:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement> = r21;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem> = r21;

        return;
    }

    public static com.ctc.wstx.dom.DOMWrappingWriter createFrom(com.ctc.wstx.api.WriterConfig, javax.xml.transform.dom.DOMResult) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter $r2;
        com.ctc.wstx.api.WriterConfig r3;
        org.w3c.dom.Node $r1;
        javax.xml.transform.dom.DOMResult r0;

        r3 := @parameter0: com.ctc.wstx.api.WriterConfig;

        r0 := @parameter1: javax.xml.transform.dom.DOMResult;

        $r1 = virtualinvoke r0.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        $r2 = new com.ctc.wstx.dom.DOMWrappingWriter;

        specialinvoke $r2.<com.ctc.wstx.dom.DOMWrappingWriter: void <init>(com.ctc.wstx.api.WriterConfig,org.w3c.dom.Node)>(r3, $r1);

        return $r2;
    }

    public void close()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        return;
    }

    public void flush()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        return;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        com.ctc.wstx.util.EmptyNamespaceContext $r2;
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        javax.xml.namespace.NamespaceContext $r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        $z0 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <com.ctc.wstx.util.EmptyNamespaceContext: com.ctc.wstx.util.EmptyNamespaceContext getInstance()>();

        return $r2;

     label1:
        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: javax.xml.namespace.NamespaceContext mNsContext>;

        return $r1;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        return null;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public void setDefaultNamespace(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        javax.xml.namespace.NamespaceContext r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: javax.xml.namespace.NamespaceContext mNsContext> = r1;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, r1, r2);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, r3);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void writeCData(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Document $r2;
        org.w3c.dom.CDATASection $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeCharacters(char[], int, int)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeCharacters(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Text $r3;
        org.w3c.dom.Document $r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeComment(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Document $r2;
        org.w3c.dom.CDATASection $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeDefaultNamespace(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeNamespace(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeDTD(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeDTD()");

        return;
    }

    public void writeEmptyElement(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeEmptyElement(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, null, r2, 1);

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 1);

        return;
    }

    public void writeEndDocument()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement> = null;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem> = null;

        return;
    }

    public void writeEndElement()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.IllegalStateException $r5;
        org.w3c.dom.Element $r1, $r2, $r6;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node $r3;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No open start element to close");

        throw $r5;

     label1:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement> = null;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $r4 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        if $r3 != $r4 goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r6 = (org.w3c.dom.Element) $r3;

     label3:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem> = $r6;

        return;
    }

    public void writeEntityRef(java.lang.String)
    {
        org.w3c.dom.EntityReference $r3;
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Document $r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.EntityReference createEntityReference(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r3);

        return;
    }

    public void writeNamespace(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r1;
        int $i0;
        java.lang.String r0, r2;
        boolean $z0, $z2, $z3;

        r1 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z3 = 1;

        $z2 = 1;

        goto label3;

     label2:
        $z3 = 0;

        $z2 = 0;

     label3:
        $z0 = r1.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label5;

        if $z2 == 0 goto label4;

        virtualinvoke r1.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, "xmlns", r2);

        goto label7;

     label4:
        virtualinvoke r1.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, "xmlns", r0, r2);

        goto label7;

     label5:
        if $z3 == 0 goto label6;

        virtualinvoke r1.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", null, "xmlns", r2);

        goto label7;

     label6:
        virtualinvoke r1.<com.ctc.wstx.dom.DOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns", r0, r2);

     label7:
        return;
    }

    public void writeProcessingInstruction(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public void writeProcessingInstruction(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.ProcessingInstruction $r4;
        org.w3c.dom.Document $r3;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>($r4);

        return;
    }

    public void writeSpace(char[], int, int)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeSpace(java.lang.String)>($r1);

        return;
    }

    public void writeSpace(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeCharacters(java.lang.String)>(r1);

        return;
    }

    public void writeStartDocument()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>("UTF-8", "1.0");

        return;
    }

    public void writeStartDocument(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: java.lang.String mEncoding> = r1;

        return;
    }

    public void writeStartElement(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeStartElement(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeStartElement(java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, null, r2, 0);

        return;
    }

    public void writeStartElement(java.lang.String, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        com.ctc.wstx.api.WriterConfig $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public boolean setProperty(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        com.ctc.wstx.api.WriterConfig $r3;
        java.lang.Object r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.api.WriterConfig: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.XMLValidationSchema r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.XMLValidationSchema r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        return null;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.XMLValidator r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        return null;
    }

    public org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.validation.ValidationProblemHandler r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.validation.ValidationProblemHandler;

        return null;
    }

    public org.codehaus.stax2.XMLStreamLocation2 getLocation()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        return null;
    }

    public java.lang.String getEncoding()
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: java.lang.String mEncoding>;

        return $r1;
    }

    public void writeCData(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeCData(java.lang.String)>($r1);

        return;
    }

    public void writeDTD(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.IllegalStateException $r2;
        org.w3c.dom.Element $r1;
        java.lang.String r3, r4, r5, r6;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Operation only allowed to the document before adding root element");

        throw $r2;

     label1:
        specialinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeDTD()");

        return;
    }

    public void writeFullEndElement() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeEndElement()>();

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void writeStartDocument(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void writeRaw(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void writeRaw(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        int i0, i1;
        char[] r1;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeRaw()");

        return;
    }

    public void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.codehaus.stax2.XMLStreamReader2 r1;
        boolean z0;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r1 := @parameter0: org.codehaus.stax2.XMLStreamReader2;

        z0 := @parameter1: boolean;

        return;
    }

    protected void appendLeaf(org.w3c.dom.Node) throws java.lang.IllegalStateException
    {
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Element $r1, $r3;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node r2;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem>;

        if $r1 != null goto label1;

        $r4 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r2);

        goto label2;

     label1:
        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement> = null;

        $r3 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem>;

        interfaceinvoke $r3.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r2);

     label2:
        return;
    }

    protected void createStartElem(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        org.w3c.dom.Document $r12, $r14;
        int $i0, $i1;
        java.lang.String r1, r6, r11;
        boolean $z0, z1, $z2;
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Element r13;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        $z0 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z0 == 0 goto label3;

        $z2 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsRepairing>;

        if $z2 == 0 goto label1;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r12 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        r13 = interfaceinvoke $r12.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r6, r11);

        goto label5;

     label3:
        if r1 == null goto label4;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        r11 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r14 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Document mDocument>;

        r13 = interfaceinvoke $r14.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r11);

     label5:
        virtualinvoke r0.<com.ctc.wstx.dom.DOMWrappingWriter: void appendLeaf(org.w3c.dom.Node)>(r13);

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement> = r13;

        if z1 != 0 goto label6;

        r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mParentElem> = r13;

     label6:
        return;
    }

    protected void outputAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r13;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        int $i0, $i1;
        java.lang.String r2, r3, r8, r14;
        boolean $z0, $z1;
        com.ctc.wstx.dom.DOMWrappingWriter r0;
        org.w3c.dom.Element $r1, $r15, $r16;

        r0 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r8 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r14 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement>;

        if $r1 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No currently open START_ELEMENT, cannot write attribute");

        throw $r13;

     label1:
        $z0 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsAware>;

        if $z0 == 0 goto label4;

        $z1 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: boolean mNsRepairing>;

        if $z1 == 0 goto label2;

     label2:
        if r2 == null goto label3;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r15 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement>;

        interfaceinvoke $r15.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(r8, r14, r3);

        goto label6;

     label4:
        if r2 == null goto label5;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        r14 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $r16 = r0.<com.ctc.wstx.dom.DOMWrappingWriter: org.w3c.dom.Element mOpenElement>;

        interfaceinvoke $r16.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>(r14, r3);

     label6:
        return;
    }

    private void reportUnsupported(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        com.ctc.wstx.dom.DOMWrappingWriter r6;
        java.lang.StringBuffer $r1, $r3, $r4;
        java.lang.String r2, $r5;

        r6 := @this: com.ctc.wstx.dom.DOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be used with DOM-backed writer");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }
}
