public class thredds.cataloggen.DirectoryScanner extends java.lang.Object
{
    private static org.slf4j.Logger logger;
    private java.lang.String serviceTitle;
    private java.io.File serviceBaseUrlDir;
    private thredds.crawlabledataset.CrawlableDataset collectionCrDs;
    private java.lang.String prefixPath;
    private boolean createCatalogRefs;
    private thredds.catalog.InvService service;

    public void <init>(thredds.catalog.InvService, java.lang.String, java.io.File, java.lang.String, boolean)
    {
        java.lang.NoSuchMethodException $r36;
        java.lang.InstantiationException $r15;
        boolean $z0, z1;
        java.lang.IllegalAccessException $r29;
        thredds.crawlabledataset.CrawlableDataset $r5, $r6;
        java.lang.reflect.InvocationTargetException $r22;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r17, $r18, $r20, $r24, $r25, $r27, $r31, $r32, $r34, $r38, $r39, $r41, $r45, $r46, $r48, $r52, $r53, $r55;
        java.lang.String r2, $r4, r7, $r11, $r14, $r19, $r21, $r26, $r28, $r33, $r35, $r40, $r42, $r47, $r49, $r54, $r56;
        thredds.catalog.InvService r1;
        java.io.IOException $r50;
        java.lang.IllegalArgumentException $r8, $r16, $r23, $r30, $r37, $r44, $r51;
        java.io.File r3;
        java.lang.ClassNotFoundException $r43;
        thredds.cataloggen.DirectoryScanner r0;

        r0 := @this: thredds.cataloggen.DirectoryScanner;

        r1 := @parameter0: thredds.catalog.InvService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.File;

        r7 := @parameter3: java.lang.String;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.cataloggen.DirectoryScanner: boolean createCatalogRefs> = 1;

        r0.<thredds.cataloggen.DirectoryScanner: thredds.catalog.InvService service> = r1;

        r0.<thredds.cataloggen.DirectoryScanner: java.lang.String serviceTitle> = r2;

        r0.<thredds.cataloggen.DirectoryScanner: java.io.File serviceBaseUrlDir> = r3;

     label01:
        $r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = staticinvoke <thredds.crawlabledataset.CrawlableDatasetFactory: thredds.crawlabledataset.CrawlableDataset createCrawlableDataset(java.lang.String,java.lang.String,java.lang.Object)>($r4, null, null);

        r0.<thredds.cataloggen.DirectoryScanner: thredds.crawlabledataset.CrawlableDataset collectionCrDs> = $r5;

     label02:
        goto label09;

     label03:
        $r50 := @caughtexception;

        $r51 = new java.lang.IllegalArgumentException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException while creating dataset: ");

        $r54 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r56);

        throw $r51;

     label04:
        $r43 := @caughtexception;

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not find class: ");

        $r47 = virtualinvoke $r43.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r49);

        throw $r44;

     label05:
        $r36 := @caughtexception;

        $r37 = new java.lang.IllegalArgumentException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required constructor not found in class: ");

        $r40 = virtualinvoke $r36.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r37;

     label06:
        $r29 := @caughtexception;

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not have necessary access to class: ");

        $r33 = virtualinvoke $r29.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r30;

     label07:
        $r22 := @caughtexception;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not invoke required method in class: ");

        $r26 = virtualinvoke $r22.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label08:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instatiate class: ");

        $r19 = virtualinvoke $r15.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label09:
        $r6 = r0.<thredds.cataloggen.DirectoryScanner: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $z0 = interfaceinvoke $r6.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z0 != 0 goto label10;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Base URL directory is not a directory <");

        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label10:
        r0.<thredds.cataloggen.DirectoryScanner: java.lang.String prefixPath> = r7;

        r0.<thredds.cataloggen.DirectoryScanner: boolean createCatalogRefs> = z1;

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label01 to label02 with label04;
        catch java.lang.NoSuchMethodException from label01 to label02 with label05;
        catch java.lang.IllegalAccessException from label01 to label02 with label06;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.InstantiationException from label01 to label02 with label08;
    }

    public thredds.catalog.InvCatalog getDirCatalog(java.io.File, java.lang.String, boolean, boolean)
    {
        thredds.catalog.InvCatalog $r3;
        thredds.cataloggen.DirectoryScanner r0;
        java.lang.String r2;
        java.io.File r1;
        boolean z0, z1;

        r0 := @this: thredds.cataloggen.DirectoryScanner;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r3 = virtualinvoke r0.<thredds.cataloggen.DirectoryScanner: thredds.catalog.InvCatalog getDirCatalog(java.io.File,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, z0, null, z1, null, null, null);

        return $r3;
    }

    public thredds.catalog.InvCatalog getDirCatalog(java.io.File, java.lang.String, boolean, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.NoSuchMethodException $r39;
        java.lang.InstantiationException $r18;
        boolean $z0, z1, z2;
        java.lang.IllegalAccessException $r32;
        thredds.catalog.InvCatalog $r9;
        thredds.crawlabledataset.CrawlableDataset $r2;
        java.lang.reflect.InvocationTargetException $r25;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r20, $r21, $r23, $r27, $r28, $r30, $r34, $r35, $r37, $r41, $r42, $r44, $r48, $r49, $r51, $r55, $r56, $r58;
        java.lang.String $r1, r4, r5, r6, r7, r8, $r14, $r17, $r22, $r24, $r29, $r31, $r36, $r38, $r43, $r45, $r50, $r52, $r57, $r59;
        java.io.IOException $r53;
        java.lang.IllegalArgumentException $r10, $r19, $r26, $r33, $r40, $r47, $r54;
        java.io.File r0, $r13;
        java.lang.ClassNotFoundException $r46;
        thredds.cataloggen.DirectoryScanner r3;

        r3 := @this: thredds.cataloggen.DirectoryScanner;

        r0 := @parameter0: java.io.File;

        r4 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r5 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.lang.String;

     label01:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <thredds.crawlabledataset.CrawlableDatasetFactory: thredds.crawlabledataset.CrawlableDataset createCrawlableDataset(java.lang.String,java.lang.String,java.lang.Object)>($r1, null, null);

     label02:
        goto label09;

     label03:
        $r53 := @caughtexception;

        $r54 = new java.lang.IllegalArgumentException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException while creating dataset: ");

        $r57 = virtualinvoke $r53.<java.io.IOException: java.lang.String getMessage()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r59);

        throw $r54;

     label04:
        $r46 := @caughtexception;

        $r47 = new java.lang.IllegalArgumentException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not find class: ");

        $r50 = virtualinvoke $r46.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r52);

        throw $r47;

     label05:
        $r39 := @caughtexception;

        $r40 = new java.lang.IllegalArgumentException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required constructor not found in class: ");

        $r43 = virtualinvoke $r39.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r45);

        throw $r40;

     label06:
        $r32 := @caughtexception;

        $r33 = new java.lang.IllegalArgumentException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not have necessary access to class: ");

        $r36 = virtualinvoke $r32.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r33;

     label07:
        $r25 := @caughtexception;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not invoke required method in class: ");

        $r29 = virtualinvoke $r25.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r26;

     label08:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instatiate class: ");

        $r22 = virtualinvoke $r18.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label09:
        $z0 = interfaceinvoke $r2.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z0 != 0 goto label10;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog directory is not a directory <");

        $r13 = r3.<thredds.cataloggen.DirectoryScanner: java.io.File serviceBaseUrlDir>;

        $r14 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label10:
        $r9 = virtualinvoke r3.<thredds.cataloggen.DirectoryScanner: thredds.catalog.InvCatalog getDirCatalog(thredds.crawlabledataset.CrawlableDataset,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>($r2, r4, z1, r5, z2, r6, r7, r8);

        return $r9;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.ClassNotFoundException from label01 to label02 with label04;
        catch java.lang.NoSuchMethodException from label01 to label02 with label05;
        catch java.lang.IllegalAccessException from label01 to label02 with label06;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.InstantiationException from label01 to label02 with label08;
    }

    public thredds.catalog.InvCatalog getDirCatalog(thredds.crawlabledataset.CrawlableDataset, java.lang.String, boolean, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.crawlabledataset.filter.RegExpMatchOnNameFilter $r1, $r33;
        boolean z0, z1, $z2, $z3, $z4;
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector $r32;
        thredds.crawlabledataset.CrawlableDataset $r7, r10, $r13;
        thredds.catalog.InvCatalogImpl $r11;
        thredds.crawlabledataset.sorter.LexigraphicByNameSorter $r44;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r37, $r38, $r40;
        thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer $r31;
        thredds.cataloggen.StandardCatalogBuilder $r3;
        thredds.crawlabledataset.filter.MultiSelectorFilter $r34;
        thredds.crawlabledataset.CrawlableDatasetFilter $r26, r42;
        java.util.ArrayList $r27, $r30, r43;
        java.lang.String r0, r2, r5, $r6, $r14, $r15, $r16, $r20, $r23, $r24, r28, r29, $r39, $r41;
        org.slf4j.Logger $r18;
        thredds.catalog.InvService $r8;
        java.io.IOException $r35;
        thredds.cataloggen.catalogrefexpander.BooleanCatalogRefExpander $r9;
        java.lang.IllegalArgumentException $r36;
        thredds.cataloggen.DirectoryScanner r4;
        thredds.catalog.InvDatasetImpl $r12, $r25;

        r4 := @this: thredds.cataloggen.DirectoryScanner;

        r10 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        r0 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r5 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r2 := @parameter5: java.lang.String;

        r28 := @parameter6: java.lang.String;

        r29 := @parameter7: java.lang.String;

        if r0 == null goto label01;

        $r32 = new thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $r33 = new thredds.crawlabledataset.filter.RegExpMatchOnNameFilter;

        specialinvoke $r33.<thredds.crawlabledataset.filter.RegExpMatchOnNameFilter: void <init>(java.lang.String)>(r0);

        specialinvoke $r32.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: void <init>(thredds.crawlabledataset.CrawlableDatasetFilter,boolean,boolean,boolean)>($r33, 1, 1, 0);

        $r34 = new thredds.crawlabledataset.filter.MultiSelectorFilter;

        specialinvoke $r34.<thredds.crawlabledataset.filter.MultiSelectorFilter: void <init>(thredds.crawlabledataset.filter.MultiSelectorFilter$Selector)>($r32);

        r42 = $r34;

        goto label02;

     label01:
        $r1 = new thredds.crawlabledataset.filter.RegExpMatchOnNameFilter;

        specialinvoke $r1.<thredds.crawlabledataset.filter.RegExpMatchOnNameFilter: void <init>(java.lang.String)>(".*");

        r42 = $r1;

     label02:
        r43 = null;

        if r2 == null goto label03;

        if r28 == null goto label03;

        if r29 == null goto label03;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r43 = $r30;

        $r31 = staticinvoke <thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer: thredds.cataloggen.datasetenhancer.RegExpAndDurationTimeCoverageEnhancer getInstanceToMatchOnDatasetName(java.lang.String,java.lang.String,java.lang.String)>(r2, r28, r29);

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r31);

     label03:
        $r3 = new thredds.cataloggen.StandardCatalogBuilder;

        $r6 = r4.<thredds.cataloggen.DirectoryScanner: java.lang.String prefixPath>;

        $r7 = r4.<thredds.cataloggen.DirectoryScanner: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r26 = r42;

        $r8 = r4.<thredds.cataloggen.DirectoryScanner: thredds.catalog.InvService service>;

        $r44 = new thredds.crawlabledataset.sorter.LexigraphicByNameSorter;

        specialinvoke $r44.<thredds.crawlabledataset.sorter.LexigraphicByNameSorter: void <init>(boolean)>(z1);

        $r27 = r43;

        $r9 = new thredds.cataloggen.catalogrefexpander.BooleanCatalogRefExpander;

        $z3 = r4.<thredds.cataloggen.DirectoryScanner: boolean createCatalogRefs>;

        if $z3 != 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        specialinvoke $r9.<thredds.cataloggen.catalogrefexpander.BooleanCatalogRefExpander: void <init>(boolean)>($z4);

        specialinvoke $r3.<thredds.cataloggen.StandardCatalogBuilder: void <init>(java.lang.String,java.lang.String,thredds.crawlabledataset.CrawlableDataset,thredds.crawlabledataset.CrawlableDatasetFilter,thredds.catalog.InvService,java.lang.String,thredds.crawlabledataset.CrawlableDatasetLabeler,thredds.crawlabledataset.CrawlableDatasetLabeler,boolean,thredds.crawlabledataset.CrawlableDatasetSorter,java.util.Map,java.util.List,thredds.catalog.InvDatasetImpl,thredds.cataloggen.CatalogRefExpander)>($r6, null, $r7, $r26, $r8, r5, null, null, z0, $r44, null, $r27, null, $r9);

     label06:
        $r11 = interfaceinvoke $r3.<thredds.cataloggen.CatalogBuilder: thredds.catalog.InvCatalogImpl generateCatalog(thredds.crawlabledataset.CrawlableDataset)>(r10);

     label07:
        goto label09;

     label08:
        $r35 := @caughtexception;

        $r36 = new java.lang.IllegalArgumentException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not generate catalog: ");

        $r39 = virtualinvoke $r35.<java.io.IOException: java.lang.String getMessage()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r36;

     label09:
        $r12 = virtualinvoke $r11.<thredds.catalog.InvCatalog: thredds.catalog.InvDatasetImpl getDataset()>();

        $r13 = r4.<thredds.cataloggen.DirectoryScanner: thredds.crawlabledataset.CrawlableDataset collectionCrDs>;

        $r14 = interfaceinvoke $r13.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $r15 = interfaceinvoke r10.<thredds.crawlabledataset.CrawlableDataset: java.lang.String getPath()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label10;

        $r16 = r4.<thredds.cataloggen.DirectoryScanner: java.lang.String serviceTitle>;

        if $r16 == null goto label10;

        $r18 = <thredds.cataloggen.DirectoryScanner: org.slf4j.Logger logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDirCatalog(): top dataset name is null, setting to serviceTitle <");

        $r20 = r4.<thredds.cataloggen.DirectoryScanner: java.lang.String serviceTitle>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void warn(java.lang.String)>($r23);

        $r25 = (thredds.catalog.InvDatasetImpl) $r12;

        $r24 = r4.<thredds.cataloggen.DirectoryScanner: java.lang.String serviceTitle>;

        virtualinvoke $r25.<thredds.catalog.InvDatasetImpl: void setName(java.lang.String)>($r24);

     label10:
        return $r11;

        catch java.io.IOException from label06 to label07 with label08;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/DirectoryScanner;");

        <thredds.cataloggen.DirectoryScanner: org.slf4j.Logger logger> = $r0;

        return;
    }
}
