class org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion extends org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion
{
    final org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder this$0;

    void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)
    {
        org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder r1;
        org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion r0;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion;

        r1 := @parameter0: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder;

        r0.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder this$0> = r1;

        $r2 = new org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        specialinvoke $r2.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: javax.xml.namespace.QName getDataClassName()>();

        specialinvoke r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: void <init>(javax.xml.namespace.QName,boolean)>($r3, 0);

        return;
    }

    public boolean equal(org.apache.neethi.PolicyComponent)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion $r6;
        org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator $r12;
        org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion r1;
        short $s0;
        int $i1;
        boolean $z0, $z1, $z2;
        org.apache.cxf.transports.http.configuration.HTTPServerPolicy $r9, $r11;
        org.apache.neethi.Assertion $r3, $r5;
        org.apache.neethi.PolicyComponent r0;
        java.lang.Object $r8, $r10;
        javax.xml.namespace.QName $r2, $r4;

        r1 := @this: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion;

        r0 := @parameter0: org.apache.neethi.PolicyComponent;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $s0 = interfaceinvoke r0.<org.apache.neethi.PolicyComponent: short getType()>();

        $i1 = (int) $s0;

        if $i1 != 5 goto label2;

        $z0 = r0 instanceof org.apache.neethi.Assertion;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r1.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: javax.xml.namespace.QName getName()>();

        $r3 = (org.apache.neethi.Assertion) r0;

        $r4 = interfaceinvoke $r3.<org.apache.neethi.Assertion: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke $r2.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r5 = (org.apache.neethi.Assertion) r0;

        $r6 = staticinvoke <org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion cast(org.apache.neethi.Assertion)>($r5);

        $r12 = new org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator;

        specialinvoke $r12.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: void <init>()>();

        $r8 = virtualinvoke r1.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: java.lang.Object getData()>();

        $r9 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) $r8;

        $r10 = virtualinvoke $r6.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object getData()>();

        $r11 = (org.apache.cxf.transports.http.configuration.HTTPServerPolicy) $r10;

        $z2 = virtualinvoke $r12.<org.apache.cxf.transport.http.policy.impl.ServerPolicyCalculator: boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)>($r9, $r11);

        return $z2;
    }

    protected org.apache.neethi.Assertion clone(boolean)
    {
        org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder $r2;
        org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion r1, $r4;
        java.lang.Object $r3;
        org.apache.neethi.Assertion $r5;
        boolean z0;

        r1 := @this: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion;

        z0 := @parameter0: boolean;

        $r4 = new org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion;

        $r2 = r1.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder this$0>;

        specialinvoke $r4.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)>($r2);

        $r3 = virtualinvoke r1.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: java.lang.Object getData()>();

        virtualinvoke $r4.<org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion: void setData(java.lang.Object)>($r3);

        $r5 = (org.apache.neethi.Assertion) $r4;

        return $r5;
    }
}
