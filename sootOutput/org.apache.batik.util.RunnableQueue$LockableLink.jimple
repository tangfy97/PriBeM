public class org.apache.batik.util.RunnableQueue$LockableLink extends org.apache.batik.util.RunnableQueue$Link
{
    private volatile boolean locked;

    public void <init>(java.lang.Runnable)
    {
        org.apache.batik.util.RunnableQueue$LockableLink r0;
        java.lang.Runnable r1;

        r0 := @this: org.apache.batik.util.RunnableQueue$LockableLink;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<org.apache.batik.util.RunnableQueue$Link: void <init>(java.lang.Runnable)>(r1);

        return;
    }

    public boolean isLocked()
    {
        org.apache.batik.util.RunnableQueue$LockableLink r0;
        boolean $z0;

        r0 := @this: org.apache.batik.util.RunnableQueue$LockableLink;

        $z0 = r0.<org.apache.batik.util.RunnableQueue$LockableLink: boolean locked>;

        return $z0;
    }

    public synchronized void lock() throws java.lang.InterruptedException
    {
        org.apache.batik.util.RunnableQueue$LockableLink r0;

        r0 := @this: org.apache.batik.util.RunnableQueue$LockableLink;

        r0.<org.apache.batik.util.RunnableQueue$LockableLink: boolean locked> = 1;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        virtualinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    public synchronized void unlock()
    {
        org.apache.batik.util.RunnableQueue$LockableLink r0;
        java.lang.InterruptedException $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.util.RunnableQueue$LockableLink;

        goto label4;

     label1:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        $z0 = r0.<org.apache.batik.util.RunnableQueue$LockableLink: boolean locked>;

        if $z0 == 0 goto label1;

        r0.<org.apache.batik.util.RunnableQueue$LockableLink: boolean locked> = 0;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
