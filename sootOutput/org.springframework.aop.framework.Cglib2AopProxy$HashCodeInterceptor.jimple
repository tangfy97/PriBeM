class org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor extends java.lang.Object implements net.sf.cglib.proxy.MethodInterceptor, java.io.Serializable
{
    private final org.springframework.aop.framework.AdvisedSupport advised;

    public void <init>(org.springframework.aop.framework.AdvisedSupport)
    {
        org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor: org.springframework.aop.framework.AdvisedSupport advised> = r1;

        return;
    }

    public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], net.sf.cglib.proxy.MethodProxy)
    {
        java.lang.Object[] r7;
        org.springframework.aop.TargetSource $r3;
        java.lang.Integer $r4;
        org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r0;
        java.lang.Object r5;
        java.lang.reflect.Method r6;
        org.springframework.aop.framework.AdvisedSupport $r2;
        net.sf.cglib.proxy.MethodProxy r8;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.reflect.Method;

        r7 := @parameter2: java.lang.Object[];

        r8 := @parameter3: net.sf.cglib.proxy.MethodProxy;

        $r0 = class "Lorg/springframework/aop/framework/Cglib2AopProxy;";

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 13;

        $r2 = r1.<org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor: org.springframework.aop.framework.AdvisedSupport advised>;

        $r3 = virtualinvoke $r2.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r4;
    }
}
