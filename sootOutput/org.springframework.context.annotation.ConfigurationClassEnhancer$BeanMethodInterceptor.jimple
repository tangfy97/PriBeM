class org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor extends java.lang.Object implements net.sf.cglib.proxy.MethodInterceptor
{
    private final org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory;

    public void <init>(org.springframework.beans.factory.config.ConfigurableBeanFactory)
    {
        org.springframework.beans.factory.config.ConfigurableBeanFactory r1;
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor r0;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor;

        r1 := @parameter0: org.springframework.beans.factory.config.ConfigurableBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory> = r1;

        return;
    }

    public java.lang.Object intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], net.sf.cglib.proxy.MethodProxy) throws java.lang.Throwable
    {
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor r3;
        java.lang.'annotation'.Annotation $r1, $r25;
        java.lang.StringBuilder $r10, $r13, $r27, $r29;
        net.sf.cglib.proxy.MethodProxy r4;
        java.lang.Object[] r6;
        java.lang.String[] $r22, $r23;
        org.springframework.context.'annotation'.Scope $r26;
        int $i0;
        java.lang.String $r12, $r14, $r20, r24, $r28, $r30;
        org.springframework.context.'annotation'.ScopedProxyMode $r18, $r19;
        java.lang.Object r5, $r7, $r9, $r15, $r17;
        java.lang.Class $r16;
        org.springframework.context.'annotation'.Bean r2;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r8, $r11, $r21;

        r3 := @this: org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor;

        r5 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r6 := @parameter2: java.lang.Object[];

        r4 := @parameter3: net.sf.cglib.proxy.MethodProxy;

        r24 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r1 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/springframework/context/annotation/Bean;");

        r2 = (org.springframework.context.'annotation'.Bean) $r1;

        if r2 == null goto label1;

        $r22 = interfaceinvoke r2.<org.springframework.context.'annotation'.Bean: java.lang.String[] name()>();

        $i0 = lengthof $r22;

        if $i0 <= 0 goto label1;

        $r23 = interfaceinvoke r2.<org.springframework.context.'annotation'.Bean: java.lang.String[] name()>();

        r24 = $r23[0];

     label1:
        $r25 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/springframework/context/annotation/Scope;");

        $r26 = (org.springframework.context.'annotation'.Scope) $r25;

        if $r26 == null goto label2;

        $r18 = interfaceinvoke $r26.<org.springframework.context.'annotation'.Scope: org.springframework.context.'annotation'.ScopedProxyMode proxyMode()>();

        $r19 = <org.springframework.context.'annotation'.ScopedProxyMode: org.springframework.context.'annotation'.ScopedProxyMode NO>;

        if $r18 == $r19 goto label2;

        $r20 = staticinvoke <org.springframework.context.'annotation'.ScopedProxyCreator: java.lang.String getTargetBeanName(java.lang.String)>(r24);

        $r21 = r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $z2 = interfaceinvoke $r21.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>($r20);

        if $z2 == 0 goto label2;

        r24 = $r20;

     label2:
        $r27 = new java.lang.StringBuilder;

        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(38);

        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = specialinvoke r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: boolean factoryContainsBean(java.lang.String)>($r30);

        if $z3 == 0 goto label3;

        $z0 = specialinvoke r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: boolean factoryContainsBean(java.lang.String)>(r24);

        if $z0 == 0 goto label3;

        $r11 = r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $r10 = new java.lang.StringBuilder;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(38);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = interfaceinvoke $r11.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.Object getBean(java.lang.String)>($r14);

        $z1 = $r15 instanceof org.springframework.aop.scope.ScopedProxyFactoryBean;

        if $z1 != 0 goto label3;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = specialinvoke r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: java.lang.Object enhanceFactoryBean(java.lang.Class,java.lang.String)>($r16, r24);

        return $r17;

     label3:
        $z4 = specialinvoke r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: boolean factoryContainsBean(java.lang.String)>(r24);

        if $z4 == 0 goto label4;

        $r8 = r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $r9 = interfaceinvoke $r8.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.Object getBean(java.lang.String)>(r24);

        return $r9;

     label4:
        $r7 = virtualinvoke r4.<net.sf.cglib.proxy.MethodProxy: java.lang.Object invokeSuper(java.lang.Object,java.lang.Object[])>(r5, r6);

        return $r7;
    }

    private boolean factoryContainsBean(java.lang.String)
    {
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor r0;
        java.lang.String r1;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $z0 = interfaceinvoke $r2.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean containsBean(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $z1 = interfaceinvoke $r3.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean isCurrentlyInCreation(java.lang.String)>(r1);

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.Object enhanceFactoryBean(java.lang.Class, java.lang.String) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.lang.Object[] $r14, $r18;
        java.util.ArrayList $r4, $r9;
        int $i0, $i1;
        java.lang.String r6;
        net.sf.cglib.proxy.Enhancer $r0;
        boolean $z0;
        net.sf.cglib.proxy.Callback r21;
        java.util.Iterator $r10;
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$GetObjectMethodInterceptor $r5;
        java.lang.Class[] $r13, $r15;
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor$1 $r2;
        org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor r3;
        net.sf.cglib.proxy.NoOp $r8;
        net.sf.cglib.proxy.Callback[] $r17, $r19;
        java.lang.Class r1, $r12, $r16;
        java.lang.Object $r11, $r20;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r7;

        r3 := @this: org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor;

        r1 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        $r0 = new net.sf.cglib.proxy.Enhancer;

        specialinvoke $r0.<net.sf.cglib.proxy.Enhancer: void <init>()>();

        virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: void setUseCache(boolean)>(0);

        virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>(r1);

        virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: void setUseFactory(boolean)>(0);

        $r2 = new org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor$1;

        specialinvoke $r2.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor$1: void <init>(org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor)>(r3);

        virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: void setCallbackFilter(net.sf.cglib.proxy.CallbackFilter)>($r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new org.springframework.context.'annotation'.ConfigurationClassEnhancer$GetObjectMethodInterceptor;

        $r7 = r3.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$BeanMethodInterceptor: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        specialinvoke $r5.<org.springframework.context.'annotation'.ConfigurationClassEnhancer$GetObjectMethodInterceptor: void <init>(org.springframework.beans.factory.config.ConfigurableBeanFactory,java.lang.String)>($r7, r6);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r8 = <net.sf.cglib.proxy.NoOp: net.sf.cglib.proxy.NoOp INSTANCE>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r21 = (net.sf.cglib.proxy.Callback) $r11;

        $r12 = virtualinvoke r21.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12);

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r13 = newarray (java.lang.Class)[$i0];

        $r14 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (java.lang.Class[]) $r14;

        virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: void setCallbackTypes(java.lang.Class[])>($r15);

        $r16 = virtualinvoke $r0.<net.sf.cglib.proxy.Enhancer: java.lang.Class createClass()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r17 = newarray (net.sf.cglib.proxy.Callback)[$i1];

        $r18 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17);

        $r19 = (net.sf.cglib.proxy.Callback[]) $r18;

        staticinvoke <net.sf.cglib.proxy.Enhancer: void registerCallbacks(java.lang.Class,net.sf.cglib.proxy.Callback[])>($r16, $r19);

        $r20 = virtualinvoke $r16.<java.lang.Class: java.lang.Object newInstance()>();

        return $r20;
    }
}
