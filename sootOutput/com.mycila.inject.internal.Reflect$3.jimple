final class com.mycila.inject.internal.Reflect$3 extends java.lang.Object implements com.mycila.inject.internal.guava.base.Predicate
{
    final java.lang.Class[] val$classes;

    void <init>(java.lang.Class[])
    {
        java.lang.Class[] r1;
        com.mycila.inject.internal.Reflect$3 r0;

        r0 := @this: com.mycila.inject.internal.Reflect$3;

        r1 := @parameter0: java.lang.Class[];

        r0.<com.mycila.inject.internal.Reflect$3: java.lang.Class[] val$classes> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(java.lang.reflect.Method)
    {
        com.mycila.inject.internal.Reflect$3 r2;
        java.lang.Class[] $r1, $r3, $r5;
        int $i0, $i1, i2, $i3, i4, i5;
        java.lang.Class r4, $r6;
        java.lang.reflect.Method r0;

        r2 := @this: com.mycila.inject.internal.Reflect$3;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r1;

        $r3 = r2.<com.mycila.inject.internal.Reflect$3: java.lang.Class[] val$classes>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        i4 = 0;

        i2 = lengthof $r1;

        i5 = 0;

     label2:
        if i5 >= i2 goto label4;

        r4 = $r1[i5];

        $r5 = r2.<com.mycila.inject.internal.Reflect$3: java.lang.Class[] val$classes>;

        $i3 = i4;

        i4 = i4 + 1;

        $r6 = $r5[$i3];

        if r4 == $r6 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.mycila.inject.internal.Reflect$3 r0;
        java.lang.Object r1;
        java.lang.reflect.Method $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.Reflect$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.Method) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.Reflect$3: boolean apply(java.lang.reflect.Method)>($r2);

        return $z0;
    }
}
