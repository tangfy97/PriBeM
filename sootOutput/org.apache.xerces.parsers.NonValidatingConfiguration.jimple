public class org.apache.xerces.parsers.NonValidatingConfiguration extends org.apache.xerces.parsers.BasicParserConfiguration implements org.apache.xerces.xni.parser.XMLPullParserConfiguration
{
    protected static final java.lang.String WARN_ON_DUPLICATE_ATTDEF;
    protected static final java.lang.String WARN_ON_DUPLICATE_ENTITYDEF;
    protected static final java.lang.String WARN_ON_UNDECLARED_ELEMDEF;
    protected static final java.lang.String ALLOW_JAVA_ENCODINGS;
    protected static final java.lang.String CONTINUE_AFTER_FATAL_ERROR;
    protected static final java.lang.String LOAD_EXTERNAL_DTD;
    protected static final java.lang.String NOTIFY_BUILTIN_REFS;
    protected static final java.lang.String NOTIFY_CHAR_REFS;
    protected static final java.lang.String NORMALIZE_DATA;
    protected static final java.lang.String SCHEMA_ELEMENT_DEFAULT;
    protected static final java.lang.String ERROR_REPORTER;
    protected static final java.lang.String ENTITY_MANAGER;
    protected static final java.lang.String DOCUMENT_SCANNER;
    protected static final java.lang.String DTD_SCANNER;
    protected static final java.lang.String XMLGRAMMAR_POOL;
    protected static final java.lang.String DTD_VALIDATOR;
    protected static final java.lang.String NAMESPACE_BINDER;
    protected static final java.lang.String DATATYPE_VALIDATOR_FACTORY;
    protected static final java.lang.String VALIDATION_MANAGER;
    protected static final java.lang.String SCHEMA_VALIDATOR;
    protected static final java.lang.String LOCALE;
    private static final boolean PRINT_EXCEPTION_STACK_TRACE;
    protected org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool;
    protected org.apache.xerces.impl.dv.DTDDVFactory fDatatypeValidatorFactory;
    protected org.apache.xerces.impl.XMLErrorReporter fErrorReporter;
    protected org.apache.xerces.impl.XMLEntityManager fEntityManager;
    protected org.apache.xerces.xni.parser.XMLDocumentScanner fScanner;
    protected org.apache.xerces.xni.parser.XMLInputSource fInputSource;
    protected org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner;
    protected org.apache.xerces.impl.validation.ValidationManager fValidationManager;
    private org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner;
    private org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner;
    protected boolean fConfigUpdated;
    protected org.apache.xerces.xni.XMLLocator fLocator;
    protected boolean fParseInProgress;

    public void <init>()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        specialinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)>(null, null, null);

        return;
    }

    public void <init>(org.apache.xerces.util.SymbolTable)
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.util.SymbolTable r1;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: org.apache.xerces.util.SymbolTable;

        specialinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)>(r1, null, null);

        return;
    }

    public void <init>(org.apache.xerces.util.SymbolTable, org.apache.xerces.xni.grammars.XMLGrammarPool)
    {
        org.apache.xerces.xni.grammars.XMLGrammarPool r2;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.util.SymbolTable r1;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: org.apache.xerces.util.SymbolTable;

        r2 := @parameter1: org.apache.xerces.xni.grammars.XMLGrammarPool;

        specialinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)>(r1, r2, null);

        return;
    }

    public void <init>(org.apache.xerces.util.SymbolTable, org.apache.xerces.xni.grammars.XMLGrammarPool, org.apache.xerces.xni.parser.XMLComponentManager)
    {
        org.apache.xerces.util.MessageFormatter $r29;
        org.apache.xerces.xni.parser.XMLDTDScanner $r24, $r25, $r38, $r40, $r41;
        org.apache.xerces.impl.dv.DTDDVFactory $r36, $r46, $r47;
        java.util.Locale $r30;
        org.apache.xerces.impl.validation.ValidationManager $r26, $r27, $r34;
        org.apache.xerces.xni.XNIException $r45;
        boolean $z0;
        org.apache.xerces.impl.msg.XMLMessageFormatter $r31;
        org.apache.xerces.xni.grammars.XMLGrammarPool r11, $r12, $r43;
        org.apache.xerces.impl.XMLEntityManager $r13, $r14, $r16, $r18;
        org.apache.xerces.xni.parser.XMLComponentManager r2;
        org.apache.xerces.impl.XMLErrorReporter $r17, $r19, $r21, $r23, $r28, $r32, $r33;
        org.apache.xerces.impl.XMLEntityScanner $r20;
        java.lang.String[] $r3, $r10;
        java.util.HashMap $r5, $r7, $r9, $r15, $r22, $r35, $r37, $r39, $r44;
        org.apache.xerces.util.SymbolTable r1;
        java.lang.Boolean $r4, $r6, $r8;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.xni.parser.XMLComponent $r42;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: org.apache.xerces.util.SymbolTable;

        r11 := @parameter1: org.apache.xerces.xni.grammars.XMLGrammarPool;

        r2 := @parameter2: org.apache.xerces.xni.parser.XMLComponentManager;

        specialinvoke r0.<org.apache.xerces.parsers.BasicParserConfiguration: void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.parser.XMLComponentManager)>(r1, r2);

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fConfigUpdated> = 0;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fParseInProgress> = 0;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "http://apache.org/xml/features/internal/parser-settings";

        $r3[1] = "http://xml.org/sax/features/namespaces";

        $r3[2] = "http://apache.org/xml/features/continue-after-fatal-error";

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addRecognizedFeatures(java.lang.String[])>($r3);

        $r5 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fFeatures>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/features/continue-after-fatal-error", $r4);

        $r7 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fFeatures>;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/features/internal/parser-settings", $r6);

        $r9 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fFeatures>;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/namespaces", $r8);

        $r10 = newarray (java.lang.String)[10];

        $r10[0] = "http://apache.org/xml/properties/internal/error-reporter";

        $r10[1] = "http://apache.org/xml/properties/internal/entity-manager";

        $r10[2] = "http://apache.org/xml/properties/internal/document-scanner";

        $r10[3] = "http://apache.org/xml/properties/internal/dtd-scanner";

        $r10[4] = "http://apache.org/xml/properties/internal/validator/dtd";

        $r10[5] = "http://apache.org/xml/properties/internal/namespace-binder";

        $r10[6] = "http://apache.org/xml/properties/internal/grammar-pool";

        $r10[7] = "http://apache.org/xml/properties/internal/datatype-validator-factory";

        $r10[8] = "http://apache.org/xml/properties/internal/validation-manager";

        $r10[9] = "http://apache.org/xml/properties/locale";

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addRecognizedProperties(java.lang.String[])>($r10);

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool> = r11;

        $r12 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        if $r12 == null goto label1;

        $r44 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r43 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.grammars.XMLGrammarPool fGrammarPool>;

        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/grammar-pool", $r43);

     label1:
        $r13 = virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager createEntityManager()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager fEntityManager> = $r13;

        $r15 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r14 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager fEntityManager>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/entity-manager", $r14);

        $r16 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager fEntityManager>;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addComponent(org.apache.xerces.xni.parser.XMLComponent)>($r16);

        $r17 = virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter createErrorReporter()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter> = $r17;

        $r19 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        $r18 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager fEntityManager>;

        $r20 = virtualinvoke $r18.<org.apache.xerces.impl.XMLEntityManager: org.apache.xerces.impl.XMLEntityScanner getEntityScanner()>();

        virtualinvoke $r19.<org.apache.xerces.impl.XMLErrorReporter: void setDocumentLocator(org.apache.xerces.xni.XMLLocator)>($r20);

        $r22 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r21 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/error-reporter", $r21);

        $r23 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addComponent(org.apache.xerces.xni.parser.XMLComponent)>($r23);

        $r24 = virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner createDTDScanner()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner> = $r24;

        $r25 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        if $r25 == null goto label2;

        $r39 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r38 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/dtd-scanner", $r38);

        $r40 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        $z0 = $r40 instanceof org.apache.xerces.xni.parser.XMLComponent;

        if $z0 == 0 goto label2;

        $r41 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        $r42 = (org.apache.xerces.xni.parser.XMLComponent) $r41;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addComponent(org.apache.xerces.xni.parser.XMLComponent)>($r42);

     label2:
        $r46 = virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.dv.DTDDVFactory createDatatypeValidatorFactory()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.dv.DTDDVFactory fDatatypeValidatorFactory> = $r46;

        $r47 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.dv.DTDDVFactory fDatatypeValidatorFactory>;

        if $r47 == null goto label3;

        $r37 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r36 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.dv.DTDDVFactory fDatatypeValidatorFactory>;

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/datatype-validator-factory", $r36);

     label3:
        $r26 = virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager createValidationManager()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager fValidationManager> = $r26;

        $r27 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager fValidationManager>;

        if $r27 == null goto label4;

        $r35 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r34 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager fValidationManager>;

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/validation-manager", $r34);

     label4:
        $r28 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        $r29 = virtualinvoke $r28.<org.apache.xerces.impl.XMLErrorReporter: org.apache.xerces.util.MessageFormatter getMessageFormatter(java.lang.String)>("http://www.w3.org/TR/1998/REC-xml-19980210");

        if $r29 != null goto label5;

        $r31 = new org.apache.xerces.impl.msg.XMLMessageFormatter;

        specialinvoke $r31.<org.apache.xerces.impl.msg.XMLMessageFormatter: void <init>()>();

        $r32 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r32.<org.apache.xerces.impl.XMLErrorReporter: void putMessageFormatter(java.lang.String,org.apache.xerces.util.MessageFormatter)>("http://www.w3.org/TR/1998/REC-xml-19980210", $r31);

        $r33 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r33.<org.apache.xerces.impl.XMLErrorReporter: void putMessageFormatter(java.lang.String,org.apache.xerces.util.MessageFormatter)>("http://www.w3.org/TR/1999/REC-xml-names-19990114", $r31);

     label5:
        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fConfigUpdated> = 0;

     label6:
        $r30 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void setLocale(java.util.Locale)>($r30);

     label7:
        goto label9;

     label8:
        $r45 := @caughtexception;

     label9:
        return;

        catch org.apache.xerces.xni.XNIException from label6 to label7 with label8;
    }

    public void setFeature(java.lang.String, boolean) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fConfigUpdated> = 1;

        specialinvoke r0.<org.apache.xerces.parsers.BasicParserConfiguration: void setFeature(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r2;
        java.util.Locale $r4;
        java.lang.Object $r3;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://apache.org/xml/properties/locale";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.Locale getLocale()>();

        return $r4;

     label1:
        $r3 = specialinvoke r2.<org.apache.xerces.parsers.BasicParserConfiguration: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        java.util.Locale $r4;
        java.lang.Object r3;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fConfigUpdated> = 1;

        $r2 = "http://apache.org/xml/properties/locale";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = (java.util.Locale) r3;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void setLocale(java.util.Locale)>($r4);

     label1:
        specialinvoke r0.<org.apache.xerces.parsers.BasicParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r1, r3);

        return;
    }

    public void setLocale(java.util.Locale) throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.impl.XMLErrorReporter $r2;
        java.util.Locale r1;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<org.apache.xerces.parsers.BasicParserConfiguration: void setLocale(java.util.Locale)>(r1);

        $r2 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLErrorReporter fErrorReporter>;

        virtualinvoke $r2.<org.apache.xerces.impl.XMLErrorReporter: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public boolean getFeature(java.lang.String) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/internal/parser-settings");

        if $z0 == 0 goto label1;

        $z2 = r1.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fConfigUpdated>;

        return $z2;

     label1:
        $z1 = specialinvoke r1.<org.apache.xerces.parsers.BasicParserConfiguration: boolean getFeature(java.lang.String)>(r0);

        return $z1;
    }

    public void setInputSource(org.apache.xerces.xni.parser.XMLInputSource) throws org.apache.xerces.xni.parser.XMLConfigurationException, java.io.IOException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.xni.parser.XMLInputSource r1;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLInputSource;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLInputSource fInputSource> = r1;

        return;
    }

    public boolean parse(boolean) throws org.apache.xerces.xni.XNIException, java.io.IOException
    {
        org.apache.xerces.xni.XNIException $r6, $r9, $r11, $r14;
        boolean z0, $z1;
        org.apache.xerces.xni.parser.XMLDocumentScanner $r2, $r4;
        java.io.IOException $r8, $r13;
        org.apache.xerces.xni.parser.XMLInputSource $r1, $r3;
        java.lang.RuntimeException $r7, $r12;
        java.lang.Exception $r5, $r10;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLInputSource fInputSource>;

        if $r1 == null goto label07;

     label01:
        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void reset()>();

        $r4 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner>;

        $r3 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLInputSource fInputSource>;

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLDocumentScanner: void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)>($r3);

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLInputSource fInputSource> = null;

     label02:
        goto label07;

     label03:
        $r14 := @caughtexception;

        throw $r14;

     label04:
        $r13 := @caughtexception;

        throw $r13;

     label05:
        $r12 := @caughtexception;

        throw $r12;

     label06:
        $r10 := @caughtexception;

        $r11 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r11.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label07:
        $r2 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner>;

        $z1 = interfaceinvoke $r2.<org.apache.xerces.xni.parser.XMLDocumentScanner: boolean scanDocument(boolean)>(z0);

        return $z1;

     label08:
        $r9 := @caughtexception;

        throw $r9;

     label09:
        $r8 := @caughtexception;

        throw $r8;

     label10:
        $r7 := @caughtexception;

        throw $r7;

     label11:
        $r5 := @caughtexception;

        $r6 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r6.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

        catch org.apache.xerces.xni.XNIException from label01 to label02 with label03;
        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch java.lang.Exception from label01 to label02 with label06;
        catch org.apache.xerces.xni.XNIException from label07 to label08 with label08;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.RuntimeException from label07 to label08 with label10;
        catch java.lang.Exception from label07 to label08 with label11;
    }

    public void cleanup()
    {
        org.apache.xerces.impl.XMLEntityManager $r1;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r1 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLEntityManager fEntityManager>;

        virtualinvoke $r1.<org.apache.xerces.impl.XMLEntityManager: void closeReaders()>();

        return;
    }

    public void parse(org.apache.xerces.xni.parser.XMLInputSource) throws org.apache.xerces.xni.XNIException, java.io.IOException
    {
        java.lang.Throwable $r3;
        java.io.IOException $r7;
        org.apache.xerces.xni.parser.XMLInputSource r1;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r4;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.xni.XNIException $r2, $r5, $r8;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLInputSource;

        $z0 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fParseInProgress>;

        if $z0 == 0 goto label01;

        $r2 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r2.<org.apache.xerces.xni.XNIException: void <init>(java.lang.String)>("FWK005 parse may not be called while parsing.");

        throw $r2;

     label01:
        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fParseInProgress> = 1;

     label02:
        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)>(r1);

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean parse(boolean)>(1);

     label03:
        goto label12;

     label04:
        goto label11;

     label05:
        $r8 := @caughtexception;

        throw $r8;

     label06:
        $r7 := @caughtexception;

        throw $r7;

     label07:
        $r6 := @caughtexception;

        throw $r6;

     label08:
        $r4 := @caughtexception;

        $r5 = new org.apache.xerces.xni.XNIException;

        specialinvoke $r5.<org.apache.xerces.xni.XNIException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label09:
        $r3 := @caughtexception;

        goto label13;

     label10:
        throw $r3;

     label11:
        return;

     label12:
        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fParseInProgress> = 0;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void cleanup()>();

        goto label04;

     label13:
        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: boolean fParseInProgress> = 0;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void cleanup()>();

        goto label10;

        catch org.apache.xerces.xni.XNIException from label02 to label03 with label05;
        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.RuntimeException from label02 to label03 with label07;
        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label09 with label09;
    }

    protected void reset() throws org.apache.xerces.xni.XNIException
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        org.apache.xerces.impl.validation.ValidationManager $r1, $r2;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r1 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager fValidationManager>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.validation.ValidationManager fValidationManager>;

        virtualinvoke $r2.<org.apache.xerces.impl.validation.ValidationManager: void reset()>();

     label1:
        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void configurePipeline()>();

        specialinvoke r0.<org.apache.xerces.parsers.BasicParserConfiguration: void reset()>();

        return;
    }

    protected void configurePipeline()
    {
        org.apache.xerces.impl.XMLNSDocumentScannerImpl $r14, $r15, $r17, $r18, $r19, $r20;
        java.util.HashMap $r1, $r6, $r16;
        org.apache.xerces.xni.parser.XMLDTDScanner $r9, $r11, $r24;
        org.apache.xerces.xni.XMLDTDHandler $r8;
        org.apache.xerces.xni.XMLDocumentHandler $r22;
        java.lang.Boolean $r3;
        org.apache.xerces.xni.parser.XMLDocumentScanner $r21, $r23;
        org.apache.xerces.impl.XMLDocumentScannerImpl $r4, $r5, $r7, $r12, $r13;
        org.apache.xerces.xni.XMLDTDContentModelHandler $r10;
        org.apache.xerces.parsers.NonValidatingConfiguration r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r1 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fFeatures>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("http://xml.org/sax/features/namespaces");

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r2 != $r3 goto label2;

        $r14 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner>;

        if $r14 != null goto label1;

        $r19 = new org.apache.xerces.impl.XMLNSDocumentScannerImpl;

        specialinvoke $r19.<org.apache.xerces.impl.XMLNSDocumentScannerImpl: void <init>()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner> = $r19;

        $r20 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner>;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addComponent(org.apache.xerces.xni.parser.XMLComponent)>($r20);

     label1:
        $r16 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r15 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/document-scanner", $r15);

        $r17 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner>;

        virtualinvoke $r17.<org.apache.xerces.impl.XMLNSDocumentScannerImpl: void setDTDValidator(org.apache.xerces.impl.dtd.XMLDTDValidatorFilter)>(null);

        $r18 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLNSDocumentScannerImpl fNamespaceScanner>;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner> = $r18;

        goto label4;

     label2:
        $r4 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner>;

        if $r4 != null goto label3;

        $r12 = new org.apache.xerces.impl.XMLDocumentScannerImpl;

        specialinvoke $r12.<org.apache.xerces.impl.XMLDocumentScannerImpl: void <init>()>();

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner> = $r12;

        $r13 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner>;

        virtualinvoke r0.<org.apache.xerces.parsers.NonValidatingConfiguration: void addComponent(org.apache.xerces.xni.parser.XMLComponent)>($r13);

     label3:
        $r6 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: java.util.HashMap fProperties>;

        $r5 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://apache.org/xml/properties/internal/document-scanner", $r5);

        $r7 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.impl.XMLDocumentScannerImpl fNonNSScanner>;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner> = $r7;

     label4:
        $r21 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner>;

        $r22 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.XMLDocumentHandler fDocumentHandler>;

        interfaceinvoke $r21.<org.apache.xerces.xni.parser.XMLDocumentScanner: void setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler)>($r22);

        $r23 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentScanner fScanner>;

        r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDocumentSource fLastComponent> = $r23;

        $r24 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        if $r24 == null goto label5;

        $r9 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        $r8 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.XMLDTDHandler fDTDHandler>;

        interfaceinvoke $r9.<org.apache.xerces.xni.parser.XMLDTDScanner: void setDTDHandler(org.apache.xerces.xni.XMLDTDHandler)>($r8);

        $r11 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.parser.XMLDTDScanner fDTDScanner>;

        $r10 = r0.<org.apache.xerces.parsers.NonValidatingConfiguration: org.apache.xerces.xni.XMLDTDContentModelHandler fDTDContentModelHandler>;

        interfaceinvoke $r11.<org.apache.xerces.xni.parser.XMLDTDScanner: void setDTDContentModelHandler(org.apache.xerces.xni.XMLDTDContentModelHandler)>($r10);

     label5:
        return;
    }

    protected void checkFeature(java.lang.String) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.xerces.xni.parser.XMLConfigurationException $r9, $r10, $r11;
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xerces.parsers.NonValidatingConfiguration r1;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://apache.org/xml/features/");

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = "http://apache.org/xml/features/";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i2 = $i0 - $i1;

        $r3 = "validation/dynamic";

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i2 != $i3 goto label1;

        $z6 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("validation/dynamic");

        if $z6 == 0 goto label1;

        return;

     label1:
        $r4 = "validation/default-attribute-values";

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i2 != $i4 goto label2;

        $z5 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("validation/default-attribute-values");

        if $z5 == 0 goto label2;

        $r11 = new org.apache.xerces.xni.parser.XMLConfigurationException;

        specialinvoke $r11.<org.apache.xerces.xni.parser.XMLConfigurationException: void <init>(short,java.lang.String)>(1, r0);

        throw $r11;

     label2:
        $r5 = "validation/validate-content-models";

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i2 != $i5 goto label3;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("validation/validate-content-models");

        if $z4 == 0 goto label3;

        $r10 = new org.apache.xerces.xni.parser.XMLConfigurationException;

        specialinvoke $r10.<org.apache.xerces.xni.parser.XMLConfigurationException: void <init>(short,java.lang.String)>(1, r0);

        throw $r10;

     label3:
        $r6 = "nonvalidating/load-dtd-grammar";

        $i6 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i2 != $i6 goto label4;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("nonvalidating/load-dtd-grammar");

        if $z3 == 0 goto label4;

        return;

     label4:
        $r7 = "nonvalidating/load-external-dtd";

        $i7 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i2 != $i7 goto label5;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("nonvalidating/load-external-dtd");

        if $z2 == 0 goto label5;

        return;

     label5:
        $r8 = "validation/validate-datatypes";

        $i8 = virtualinvoke $r8.<java.lang.String: int length()>();

        if i2 != $i8 goto label6;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("validation/validate-datatypes");

        if $z1 == 0 goto label6;

        $r9 = new org.apache.xerces.xni.parser.XMLConfigurationException;

        specialinvoke $r9.<org.apache.xerces.xni.parser.XMLConfigurationException: void <init>(short,java.lang.String)>(1, r0);

        throw $r9;

     label6:
        specialinvoke r1.<org.apache.xerces.parsers.BasicParserConfiguration: void checkFeature(java.lang.String)>(r0);

        return;
    }

    protected void checkProperty(java.lang.String) throws org.apache.xerces.xni.parser.XMLConfigurationException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String r0, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xerces.parsers.NonValidatingConfiguration r1;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://apache.org/xml/properties/");

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = "http://apache.org/xml/properties/";

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        i6 = $i3 - $i4;

        $r5 = "internal/dtd-scanner";

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        if i6 != $i5 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("internal/dtd-scanner");

        if $z2 == 0 goto label1;

        return;

     label1:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://java.sun.com/xml/jaxp/properties/");

        if $z3 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = "http://java.sun.com/xml/jaxp/properties/";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i7 = $i0 - $i1;

        $r3 = "schemaSource";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if i7 != $i2 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("schemaSource");

        if $z1 == 0 goto label2;

        return;

     label2:
        specialinvoke r1.<org.apache.xerces.parsers.BasicParserConfiguration: void checkProperty(java.lang.String)>(r0);

        return;
    }

    protected org.apache.xerces.impl.XMLEntityManager createEntityManager()
    {
        org.apache.xerces.impl.XMLEntityManager $r0;
        org.apache.xerces.parsers.NonValidatingConfiguration r1;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r0 = new org.apache.xerces.impl.XMLEntityManager;

        specialinvoke $r0.<org.apache.xerces.impl.XMLEntityManager: void <init>()>();

        return $r0;
    }

    protected org.apache.xerces.impl.XMLErrorReporter createErrorReporter()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r1;
        org.apache.xerces.impl.XMLErrorReporter $r0;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r0 = new org.apache.xerces.impl.XMLErrorReporter;

        specialinvoke $r0.<org.apache.xerces.impl.XMLErrorReporter: void <init>()>();

        return $r0;
    }

    protected org.apache.xerces.xni.parser.XMLDocumentScanner createDocumentScanner()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r0;

        r0 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        return null;
    }

    protected org.apache.xerces.xni.parser.XMLDTDScanner createDTDScanner()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r1;
        org.apache.xerces.impl.XMLDTDScannerImpl $r0;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r0 = new org.apache.xerces.impl.XMLDTDScannerImpl;

        specialinvoke $r0.<org.apache.xerces.impl.XMLDTDScannerImpl: void <init>()>();

        return $r0;
    }

    protected org.apache.xerces.impl.dv.DTDDVFactory createDatatypeValidatorFactory()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r1;
        org.apache.xerces.impl.dv.DTDDVFactory $r0;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r0 = staticinvoke <org.apache.xerces.impl.dv.DTDDVFactory: org.apache.xerces.impl.dv.DTDDVFactory getInstance()>();

        return $r0;
    }

    protected org.apache.xerces.impl.validation.ValidationManager createValidationManager()
    {
        org.apache.xerces.parsers.NonValidatingConfiguration r1;
        org.apache.xerces.impl.validation.ValidationManager $r0;

        r1 := @this: org.apache.xerces.parsers.NonValidatingConfiguration;

        $r0 = new org.apache.xerces.impl.validation.ValidationManager;

        specialinvoke $r0.<org.apache.xerces.impl.validation.ValidationManager: void <init>()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.parsers.NonValidatingConfiguration: boolean PRINT_EXCEPTION_STACK_TRACE> = 0;

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String LOCALE> = "http://apache.org/xml/properties/locale";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String SCHEMA_VALIDATOR> = "http://apache.org/xml/properties/internal/validator/schema";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String VALIDATION_MANAGER> = "http://apache.org/xml/properties/internal/validation-manager";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String DATATYPE_VALIDATOR_FACTORY> = "http://apache.org/xml/properties/internal/datatype-validator-factory";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String NAMESPACE_BINDER> = "http://apache.org/xml/properties/internal/namespace-binder";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String DTD_VALIDATOR> = "http://apache.org/xml/properties/internal/validator/dtd";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String XMLGRAMMAR_POOL> = "http://apache.org/xml/properties/internal/grammar-pool";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String DTD_SCANNER> = "http://apache.org/xml/properties/internal/dtd-scanner";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String DOCUMENT_SCANNER> = "http://apache.org/xml/properties/internal/document-scanner";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String ENTITY_MANAGER> = "http://apache.org/xml/properties/internal/entity-manager";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String ERROR_REPORTER> = "http://apache.org/xml/properties/internal/error-reporter";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String SCHEMA_ELEMENT_DEFAULT> = "http://apache.org/xml/features/validation/schema/element-default";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String NORMALIZE_DATA> = "http://apache.org/xml/features/validation/schema/normalized-value";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String NOTIFY_CHAR_REFS> = "http://apache.org/xml/features/scanner/notify-char-refs";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String NOTIFY_BUILTIN_REFS> = "http://apache.org/xml/features/scanner/notify-builtin-refs";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String LOAD_EXTERNAL_DTD> = "http://apache.org/xml/features/nonvalidating/load-external-dtd";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String CONTINUE_AFTER_FATAL_ERROR> = "http://apache.org/xml/features/continue-after-fatal-error";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String ALLOW_JAVA_ENCODINGS> = "http://apache.org/xml/features/allow-java-encodings";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String WARN_ON_UNDECLARED_ELEMDEF> = "http://apache.org/xml/features/validation/warn-on-undeclared-elemdef";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String WARN_ON_DUPLICATE_ENTITYDEF> = "http://apache.org/xml/features/warn-on-duplicate-entitydef";

        <org.apache.xerces.parsers.NonValidatingConfiguration: java.lang.String WARN_ON_DUPLICATE_ATTDEF> = "http://apache.org/xml/features/validation/warn-on-duplicate-attdef";

        return;
    }
}
