public class org.waveprotocol.wave.model.util.TitleExtractor extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.model.util.TitleExtractor r0;

        r0 := @this: org.waveprotocol.wave.model.util.TitleExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String extractTitle(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String firstPhrase(java.lang.String)>(r0);

        return $r1;
    }

    public static boolean isOnlyTitle(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String processForFirstPhrase(java.lang.String)>(r0);

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String stripWhite(java.lang.String)>($r1);

        $r3 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String extractTitle(java.lang.String)>(r0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private static java.lang.String firstPhrase(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String processForFirstPhrase(java.lang.String)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(10);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label2;

     label1:
        $r3 = $r1;

     label2:
        $r2 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String stripWhite(java.lang.String)>($r3);

        return $r2;
    }

    private static java.lang.String processForFirstPhrase(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("<br.*?>", "\n");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("</p>", "\n");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("((\\.|\\?|!)+(\\s))", "$1\n");

        $r4 = staticinvoke <org.waveprotocol.wave.model.util.TitleExtractor: java.lang.String stripTags(java.lang.String)>($r3);

        return $r4;
    }

    private static java.lang.String stripTags(java.lang.String)
    {
        int $i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder $r0;
        java.lang.String r1, $r2, $r3, $r4;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(60);

        i4 = $i0;

        if $i0 >= 0 goto label1;

        return r1;

     label1:
        if i3 < 0 goto label5;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 >= $i1 goto label5;

        if i4 >= 0 goto label2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label5;

     label2:
        if i4 <= i3 goto label3;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label3:
        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(62, i4);

        i3 = $i2;

        if $i2 <= 0 goto label4;

        i3 = $i2 + 1;

     label4:
        i4 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(60, i3);

        goto label1;

     label5:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String stripWhite(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^(\\s|\u00a0)+|\\s+$", "");

        return $r1;
    }
}
