final class com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule r4;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r5;
        org.xml.sax.Attributes r0;
        java.lang.String $r1, $r2, $r3, r7;
        com.mycila.inject.internal.asm.ClassWriter $r6;

        r4 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("owner");

        $r2 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r3 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r5 = r4.<com.mycila.inject.internal.asm.xml.ASMContentHandler$OuterClassRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r6 = $r5.<com.mycila.inject.internal.asm.xml.ASMContentHandler: com.mycila.inject.internal.asm.ClassWriter cw>;

        virtualinvoke $r6.<com.mycila.inject.internal.asm.ClassWriter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }
}
