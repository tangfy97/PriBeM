public final class org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite extends org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod
{
    private final org.apache.lucene.search.TopTermsRewrite delegate;

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$SpanRewriteMethod: void <init>()>();

        $r1 = new org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        specialinvoke $r1.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: void <init>(org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite,int)>(r0, i0);

        r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate> = $r1;

        return;
    }

    public int getSize()
    {
        int $i0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0;
        org.apache.lucene.search.TopTermsRewrite $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        $r1 = r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.TopTermsRewrite: int getSize()>();

        return $i0;
    }

    public org.apache.lucene.search.spans.SpanQuery rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r4;
        org.apache.lucene.search.MultiTermQuery r2;
        org.apache.lucene.search.TopTermsRewrite $r3;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0;
        org.apache.lucene.search.spans.SpanQuery $r5;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.search.MultiTermQuery;

        $r3 = r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.TopTermsRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)>(r1, r2);

        $r5 = (org.apache.lucene.search.spans.SpanQuery) $r4;

        return $r5;
    }

    public int hashCode()
    {
        org.apache.lucene.search.TopTermsRewrite $r1;
        int $i0, $i1;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        $r1 = r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.TopTermsRewrite: int hashCode()>();

        $i1 = 31 * $i0;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0, r4;
        org.apache.lucene.search.TopTermsRewrite $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite) r1;

        $r6 = r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate>;

        $r5 = r4.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.TopTermsRewrite delegate>;

        $z0 = virtualinvoke $r6.<org.apache.lucene.search.TopTermsRewrite: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public volatile org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery) throws java.io.IOException
    {
        org.apache.lucene.search.MultiTermQuery r2;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r0;
        org.apache.lucene.search.spans.SpanQuery $r3;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.search.MultiTermQuery;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite: org.apache.lucene.search.spans.SpanQuery rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)>(r1, r2);

        return $r3;
    }
}
