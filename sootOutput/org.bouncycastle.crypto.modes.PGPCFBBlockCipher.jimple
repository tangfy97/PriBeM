public class org.bouncycastle.crypto.modes.PGPCFBBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private byte[] IV;
    private byte[] FR;
    private byte[] FRE;
    private byte[] tmp;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private int count;
    private int blockSize;
    private boolean forEncryption;
    private boolean inlineIv;

    public void <init>(org.bouncycastle.crypto.BlockCipher, boolean)
    {
        byte[] $r2, $r3, $r4, $r5;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean inlineIv> = z0;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize> = $i0;

        $i1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i1];

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV> = $r2;

        $i2 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $r3 = newarray (byte)[$i2];

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR> = $r3;

        $i3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE> = $r4;

        $i4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $r5 = newarray (byte)[$i4];

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp> = $r5;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2, $r8;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r10, $r11;
        java.lang.String $r3, $r6, $r9, $r12;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        $z0 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean inlineIv>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/PGPCFBwithIV");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/PGPCFB");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int getBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r1;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean inlineIv>;

        if $z0 == 0 goto label3;

        $z2 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean forEncryption>;

        if $z2 == 0 goto label1;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int encryptBlockWithIV(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label2;

     label1:
        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int decryptBlockWithIV(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label2:
        return $i2;

     label3:
        $z1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean forEncryption>;

        if $z1 == 0 goto label4;

        $i3 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int encryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label5;

     label4:
        $i3 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int decryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label5:
        return $i3;
    }

    public void reset()
    {
        byte[] $r1, $r3, $r4, $r5;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2;
        byte $b1;
        int $i0, i2;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count> = 0;

        i2 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i0 = lengthof $r1;

        if i2 == $i0 goto label4;

        $z0 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean inlineIv>;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r5[i2] = 0;

        goto label3;

     label2:
        $r4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $b1 = $r3[i2];

        $r4[i2] = $b1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13;
        org.bouncycastle.crypto.params.ParametersWithIV r3;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r9;
        org.bouncycastle.crypto.BlockCipher $r2, $r8;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: boolean forEncryption> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z1 == 0 goto label5;

        r3 = (org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r4 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $i1 = lengthof $r4;

        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i0 = lengthof $r5;

        if $i1 >= $i0 goto label3;

        $r11 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $r10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i4 = lengthof $r10;

        $i3 = lengthof $r4;

        $i6 = $i4 - $i3;

        $i5 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r11, $i6, $i5);

        i10 = 0;

     label1:
        $r12 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i8 = lengthof $r12;

        $i7 = lengthof $r4;

        $i9 = $i8 - $i7;

        if i10 >= $i9 goto label2;

        $r13 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $r13[i10] = 0;

        i10 = i10 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r7 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $r6 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i2 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r7, 0, $i2);

     label4:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: void reset()>();

        $r8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r9);

        goto label6;

     label5:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r1);

     label6:
        return;
    }

    private byte encryptByte(byte, int)
    {
        byte[] $r1;
        byte b1, $b2, $b3, $b4;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        int i0;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        b1 := @parameter0: byte;

        i0 := @parameter1: int;

        $r1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        $b2 = $r1[i0];

        $b3 = $b2 ^ b1;

        $b4 = (byte) $b3;

        return $b4;
    }

    private int encryptBlockWithIV(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21;
        org.bouncycastle.crypto.DataLengthException $r22, $r23;
        byte $b16, $b18, $b24, $b26, $b31, $b33, $b53, $b55, $b56, $b58;
        org.bouncycastle.crypto.BlockCipher $r5, $r9, $r13, $r19;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i27, $i28, $i29, $i30, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i57, i59, i60, i61;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label01;

        $r23 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r23.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r23;

     label01:
        $i5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label02;

        $r22 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r22.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r22;

     label02:
        $i8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        if $i8 != 0 goto label07;

        $r9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r7 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r8, 0, $r7, 0);

        i59 = 0;

     label03:
        $i19 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i59 >= $i19 goto label04;

        $i57 = i4 + i59;

        $r21 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $b56 = $r21[i59];

        $b58 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b56, i59);

        r2[$i57] = $b58;

        i59 = i59 + 1;

        goto label03;

     label04:
        $r10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i20 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r10, 0, $i20);

        $r13 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r12 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r11 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r13.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r12, 0, $r11, 0);

        $i21 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i25 = i4 + $i21;

        $r14 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i22 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i23 = $i22 - 2;

        $b24 = $r14[$i23];

        $b26 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b24, 0);

        r2[$i25] = $b26;

        $i27 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i28 = i4 + $i27;

        $i32 = $i28 + 1;

        $r15 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] IV>;

        $i29 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i30 = $i29 - 1;

        $b31 = $r15[$i30];

        $b33 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b31, 1);

        r2[$i32] = $b33;

        $i35 = i4 + 2;

        $r16 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i34 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i35, $r16, 0, $i34);

        $r19 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r18 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r17 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r19.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r18, 0, $r17, 0);

        i60 = 0;

     label05:
        $i36 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i60 >= $i36 goto label06;

        $i49 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i50 = i4 + $i49;

        $i51 = $i50 + 2;

        $i54 = $i51 + i60;

        $i52 = i0 + i60;

        $b53 = r1[$i52];

        $b55 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b53, i60);

        r2[$i54] = $b55;

        i60 = i60 + 1;

        goto label05;

     label06:
        $i37 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i38 = i4 + $i37;

        $i40 = $i38 + 2;

        $r20 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i39 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i40, $r20, 0, $i39);

        $i44 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i41 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i42 = 2 * $i41;

        $i43 = $i42 + 2;

        $i45 = $i44 + $i43;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count> = $i45;

        $i46 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i47 = 2 * $i46;

        $i48 = $i47 + 2;

        return $i48;

     label07:
        $i11 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i10 = $i9 + 2;

        if $i11 < $i10 goto label10;

        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        i61 = 0;

     label08:
        $i13 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i61 >= $i13 goto label09;

        $i17 = i4 + i61;

        $i15 = i0 + i61;

        $b16 = r1[$i15];

        $b18 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b16, i61);

        r2[$i17] = $b18;

        i61 = i61 + 1;

        goto label08;

     label09:
        $r6 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i14 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r6, 0, $i14);

     label10:
        $i12 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        return $i12;
    }

    private int decryptBlockWithIV(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30;
        org.bouncycastle.crypto.DataLengthException $r31, $r32;
        byte $b18, $b20, $b23, $b25, $b34, $b36, $b41, $b44, $b55, $b57, $b63;
        org.bouncycastle.crypto.BlockCipher $r10, $r23, $r29;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i21, $i22, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i37, $i38, $i39, $i40, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i58, $i59, $i60, $i61, $i62, i64, i65, i66;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label01;

        $r32 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r32.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r32;

     label01:
        $i5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label02;

        $r31 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r31.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r31;

     label02:
        $i8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        if $i8 != 0 goto label05;

        i64 = 0;

     label03:
        $i58 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i64 >= $i58 goto label04;

        $r30 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i62 = i0 + i64;

        $b63 = r1[$i62];

        $r30[i64] = $b63;

        i64 = i64 + 1;

        goto label03;

     label04:
        $r29 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r28 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r27 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r29.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r28, 0, $r27, 0);

        $i60 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i59 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i61 = $i60 + $i59;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count> = $i61;

        return 0;

     label05:
        $i10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if $i10 != $i9 goto label08;

        $r14 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $i37 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r14, 0, $i37);

        $r16 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r15 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i38 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i39 = $i38 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 2, $r15, 0, $i39);

        $r18 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i40 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i42 = $i40 - 2;

        $r17 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $b41 = $r17[0];

        $r18[$i42] = $b41;

        $r20 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i43 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i45 = $i43 - 1;

        $r19 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $b44 = $r19[1];

        $r20[$i45] = $b44;

        $r23 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r22 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r21 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r23.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r22, 0, $r21, 0);

        i65 = 0;

     label06:
        $i46 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i47 = $i46 - 2;

        if i65 >= $i47 goto label07;

        $i56 = i4 + i65;

        $r26 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $i54 = i65 + 2;

        $b55 = $r26[$i54];

        $b57 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b55, i65);

        r2[$i56] = $b57;

        i65 = i65 + 1;

        goto label06;

     label07:
        $r25 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $r24 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i48 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i49 = $i48 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r25, 2, $r24, 0, $i49);

        $i50 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i51 = $i50 + 2;

        r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count> = $i51;

        $i52 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i53 = $i52 - 2;

        return $i53;

     label08:
        $i13 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int count>;

        $i11 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i12 = $i11 + 2;

        if $i13 < $i12 goto label11;

        $r3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $i15 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, 0, $i15);

        $i19 = i4 + 0;

        $r4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $b18 = $r4[0];

        $i16 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i17 = $i16 - 2;

        $b20 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b18, $i17);

        r2[$i19] = $b20;

        $i24 = i4 + 1;

        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $b23 = $r5[1];

        $i21 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i22 = $i21 - 1;

        $b25 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b23, $i22);

        r2[$i24] = $b25;

        $r7 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $r6 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i26 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i27 = $i26 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, $i27, 2);

        $r10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r10.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r9, 0, $r8, 0);

        i66 = 0;

     label09:
        $i28 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i29 = $i28 - 2;

        if i66 >= $i29 goto label10;

        $i32 = i4 + i66;

        $i35 = $i32 + 2;

        $r13 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $i33 = i66 + 2;

        $b34 = $r13[$i33];

        $b36 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b34, i66);

        r2[$i35] = $b36;

        i66 = i66 + 1;

        goto label09;

     label10:
        $r12 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] tmp>;

        $r11 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i30 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i31 = $i30 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 2, $r11, 0, $i31);

     label11:
        $i14 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        return $i14;
    }

    private int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        org.bouncycastle.crypto.DataLengthException $r7, $r8;
        byte $b12, $b14, $b16;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, i17, i18;
        org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r8 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r8.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r8;

     label1:
        $i5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label2;

        $r7 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r7.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r7;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        i17 = 0;

     label3:
        $i8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i17 >= $i8 goto label4;

        $i15 = i4 + i17;

        $i13 = i0 + i17;

        $b14 = r1[$i13];

        $b16 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b14, i17);

        r2[$i15] = $b16;

        i17 = i17 + 1;

        goto label3;

     label4:
        i18 = 0;

     label5:
        $i9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i18 >= $i9 goto label6;

        $r6 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i11 = i4 + i18;

        $b12 = r2[$i11];

        $r6[i18] = $b12;

        i18 = i18 + 1;

        goto label5;

     label6:
        $i10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        return $i10;
    }

    private int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6;
        org.bouncycastle.crypto.modes.PGPCFBBlockCipher r0;
        org.bouncycastle.crypto.DataLengthException $r7, $r8;
        byte $b12, $b14, $b16;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, i17, i18;
        org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.modes.PGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r8 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r8.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r8;

     label1:
        $i5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label2;

        $r7 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r7.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r7;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        i17 = 0;

     label3:
        $i8 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i17 >= $i8 goto label4;

        $i15 = i4 + i17;

        $i13 = i0 + i17;

        $b14 = r1[$i13];

        $b16 = specialinvoke r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte encryptByte(byte,int)>($b14, i17);

        r2[$i15] = $b16;

        i17 = i17 + 1;

        goto label3;

     label4:
        i18 = 0;

     label5:
        $i9 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        if i18 >= $i9 goto label6;

        $r6 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: byte[] FR>;

        $i11 = i0 + i18;

        $b12 = r1[$i11];

        $r6[i18] = $b12;

        i18 = i18 + 1;

        goto label5;

     label6:
        $i10 = r0.<org.bouncycastle.crypto.modes.PGPCFBBlockCipher: int blockSize>;

        return $i10;
    }
}
