public class org.apache.poi.xssf.usermodel.XSSFTextRun extends java.lang.Object
{
    private final org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r;
    private final org.apache.poi.xssf.usermodel.XSSFTextParagraph _p;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun, org.apache.poi.xssf.usermodel.XSSFTextParagraph)
    {
        org.apache.poi.xssf.usermodel.XSSFTextParagraph r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun;

        r2 := @parameter1: org.apache.poi.xssf.usermodel.XSSFTextParagraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.apache.poi.xssf.usermodel.XSSFTextParagraph _p> = r2;

        return;
    }

    org.apache.poi.xssf.usermodel.XSSFTextParagraph getParentParagraph()
    {
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.apache.poi.xssf.usermodel.XSSFTextParagraph _p>;

        return $r1;
    }

    public java.lang.String getText()
    {
        java.lang.String $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: java.lang.String getT()>();

        return $r2;
    }

    public void setText(java.lang.String)
    {
        java.lang.String r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r2;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>(r1);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun getXmlObject()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        return $r1;
    }

    public void setFontColor(java.awt.Color)
    {
        java.awt.Color r4;
        byte[] $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties r2, $r5;
        byte $b1, $b3, $b5;
        int $i0, $i2, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r6;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        r4 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSolidFill()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

     label2:
        r2 = $r5;

        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor addNewSrgbClr()>();

     label4:
        $r3 = newarray (byte)[3];

        $i0 = virtualinvoke r4.<java.awt.Color: int getRed()>();

        $b1 = (byte) $i0;

        $r3[0] = $b1;

        $i2 = virtualinvoke r4.<java.awt.Color: int getGreen()>();

        $b3 = (byte) $i2;

        $r3[1] = $b3;

        $i4 = virtualinvoke r4.<java.awt.Color: int getBlue()>();

        $b5 = (byte) $i4;

        $r3[2] = $b5;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r3);

        $z2 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetHslClr()>();

        if $z2 == 0 goto label5;

        interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void unsetHslClr()>();

     label5:
        $z3 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetPrstClr()>();

        if $z3 == 0 goto label6;

        interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void unsetPrstClr()>();

     label6:
        $z4 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSchemeClr()>();

        if $z4 == 0 goto label7;

        interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void unsetSchemeClr()>();

     label7:
        $z5 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetScrgbClr()>();

        if $z5 == 0 goto label8;

        interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void unsetScrgbClr()>();

     label8:
        $z6 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSysClr()>();

        if $z6 == 0 goto label9;

        interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void unsetSysClr()>();

     label9:
        return;
    }

    public java.awt.Color getFontColor()
    {
        java.awt.Color $r7, $r8;
        byte[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        short $s3, $s4, $s5, $s6, $s7, $s8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r3;
        byte $b0, $b1, $b2;
        int $i9, $i10, $i11;
        boolean $z0, $z1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r4;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSolidFill()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z1 == 0 goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: byte[] getVal()>();

        $r7 = new java.awt.Color;

        $b0 = $r5[0];

        $s6 = (short) $b0;

        $s5 = 255 & $s6;

        $b1 = $r5[1];

        $s7 = (short) $b1;

        $s4 = 255 & $s7;

        $b2 = $r5[2];

        $s8 = (short) $b2;

        $s3 = 255 & $s8;

        $i9 = (int) $s5;

        $i10 = (int) $s4;

        $i11 = (int) $s3;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>($i9, $i10, $i11);

        return $r7;

     label1:
        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>(0, 0, 0);

        return $r8;
    }

    public void setFontSize(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        java.lang.IllegalArgumentException $r8;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        double d0, $d1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSz()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void unsetSz()>();

        goto label3;

     label1:
        $b1 = d0 cmpg 1.0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Minimum font size is 1pt but was ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label2:
        $d1 = 100.0 * d0;

        $i2 = (int) $d1;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSz(int)>($i2);

     label3:
        return;
    }

    public double getFontSize()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit $r5;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r2;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r3;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0;
        double $d0, $d1, $d2, d3, d4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        d3 = 1.0;

        d4 = 11.0;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.apache.poi.xssf.usermodel.XSSFTextParagraph getParentParagraph()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape getParentShape()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit getNormAutofit()>();

        if $r5 == null goto label1;

        $i1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit: int getFontScale()>();

        $d2 = (double) $i1;

        d3 = $d2 / 100000.0;

     label1:
        $r6 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSz()>();

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: int getSz()>();

        $d1 = (double) $i0;

        d4 = $d1 * 0.01;

     label2:
        $d0 = d4 * d3;

        return $d0;
    }

    public double getCharacterSpacing()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSpc()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: int getSpc()>();

        $d0 = (double) $i0;

        $d1 = $d0 * 0.01;

        return $d1;

     label1:
        return 0.0;
    }

    public void setCharacterSpacing(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        byte $b0;
        int $i1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        double d0, $d1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSpc()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void unsetSpc()>();

        goto label2;

     label1:
        $d1 = 100.0 * d0;

        $i1 = (int) $d1;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSpc(int)>($i1);

     label2:
        return;
    }

    public void setFont(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: void setFontFamily(java.lang.String,byte,byte,boolean)>(r1, -1, -1, 0);

        return;
    }

    public void setFontFamily(java.lang.String, byte, byte, boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        byte b0, b1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r3, $r4, r5;
        int $i2, $i4, $i5, $i7;
        java.lang.String r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        r2 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        z0 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        if r2 != null goto label03;

        $z3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetLatin()>();

        if $z3 == 0 goto label01;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void unsetLatin()>();

     label01:
        $z4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetCs()>();

        if $z4 == 0 goto label02;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void unsetCs()>();

     label02:
        $z5 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSym()>();

        if $z5 == 0 goto label10;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void unsetSym()>();

        goto label10;

     label03:
        if z0 == 0 goto label06;

        $z2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSym()>();

        if $z2 == 0 goto label04;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getSym()>();

        goto label05;

     label04:
        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont addNewSym()>();

     label05:
        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setTypeface(java.lang.String)>(r2);

        goto label10;

     label06:
        $z1 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetLatin()>();

        if $z1 == 0 goto label07;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getLatin()>();

        goto label08;

     label07:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont addNewLatin()>();

     label08:
        r5 = $r4;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setTypeface(java.lang.String)>(r2);

        $i2 = (int) b0;

        $i4 = (int) -1;

        if $i2 == $i4 goto label09;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setCharset(byte)>(b0);

     label09:
        $i5 = (int) b1;

        $i7 = (int) -1;

        if $i5 == $i7 goto label10;

        interfaceinvoke r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setPitchFamily(byte)>(b1);

     label10:
        return;
    }

    public java.lang.String getFontFamily()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r2;
        java.lang.String $r3;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getLatin()>();

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: java.lang.String getTypeface()>();

        return $r3;

     label1:
        return "Calibri";
    }

    public byte getPitchAndFamily()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        byte $b0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r2;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getLatin()>();

        if $r2 == null goto label1;

        $b0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: byte getPitchFamily()>();

        return $b0;

     label1:
        return 0;
    }

    public void setStrikethrough(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum $r2;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        if z0 == 0 goto label1;

        $r2 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType: org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum SNG_STRIKE>;

        goto label2;

     label1:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType: org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum NO_STRIKE>;

     label2:
        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setStrike(org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum)>($r2);

        return;
    }

    public boolean isStrikethrough()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetStrike()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum getStrike()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType: org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType$Enum NO_STRIKE>;

        if $r2 == $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public boolean isSuperscript()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetBaseline()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: int getBaseline()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public void setBaselineOffset(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $i0 = (int) d0;

        $i1 = $i0 * 1000;

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setBaseline(int)>($i1);

        return;
    }

    public void setSuperscript(boolean)
    {
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $d0 = 30.0;

        goto label2;

     label1:
        $d0 = 0.0;

     label2:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: void setBaselineOffset(double)>($d0);

        return;
    }

    public void setSubscript(boolean)
    {
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $d0 = -25.0;

        goto label2;

     label1:
        $d0 = 0.0;

     label2:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: void setBaselineOffset(double)>($d0);

        return;
    }

    public boolean isSubscript()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetBaseline()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: int getBaseline()>();

        if $i0 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public org.apache.poi.xssf.usermodel.TextCap getTextCap()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextCapsType$Enum $r4;
        org.apache.poi.xssf.usermodel.TextCap[] $r3;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.TextCap $r2, $r5;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetCap()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.TextCap: org.apache.poi.xssf.usermodel.TextCap[] values()>();

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextCapsType$Enum getCap()>();

        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.STTextCapsType$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r5 = $r3[$i1];

        return $r5;

     label1:
        $r2 = <org.apache.poi.xssf.usermodel.TextCap: org.apache.poi.xssf.usermodel.TextCap NONE>;

        return $r2;
    }

    public void setBold(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setB(boolean)>(z0);

        return;
    }

    public boolean isBold()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetB()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean getB()>();

        return $z1;

     label1:
        return 0;
    }

    public void setItalic(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setI(boolean)>(z0);

        return;
    }

    public boolean isItalic()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetI()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean getI()>();

        return $z1;

     label1:
        return 0;
    }

    public void setUnderline(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum $r2;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        if z0 == 0 goto label1;

        $r2 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum SNG>;

        goto label2;

     label1:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum NONE>;

     label2:
        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setU(org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum)>($r2);

        return;
    }

    public boolean isUnderline()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetU()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum getU()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum NONE>;

        if $r2 == $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    protected org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r1, $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFTextRun r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: boolean isSetRPr()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun _r>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

     label2:
        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.Class $r3;
        java.lang.String $r6, $r8;
        org.apache.poi.xssf.usermodel.XSSFTextRun r2;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFTextRun;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFTextRun: java.lang.String getText()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
