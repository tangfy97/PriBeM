final class org.mozilla.javascript.NativeMath extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object MATH_TAG;
    private static final int Id_toSource;
    private static final int Id_abs;
    private static final int Id_acos;
    private static final int Id_asin;
    private static final int Id_atan;
    private static final int Id_atan2;
    private static final int Id_ceil;
    private static final int Id_cos;
    private static final int Id_exp;
    private static final int Id_floor;
    private static final int Id_log;
    private static final int Id_max;
    private static final int Id_min;
    private static final int Id_pow;
    private static final int Id_random;
    private static final int Id_round;
    private static final int Id_sin;
    private static final int Id_sqrt;
    private static final int Id_tan;
    private static final int LAST_METHOD_ID;
    private static final int Id_E;
    private static final int Id_PI;
    private static final int Id_LN10;
    private static final int Id_LN2;
    private static final int Id_LOG2E;
    private static final int Id_LOG10E;
    private static final int Id_SQRT1_2;
    private static final int Id_SQRT2;
    private static final int MAX_ID;

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.NativeMath $r0;
        org.mozilla.javascript.Scriptable r1, $r2;
        boolean z0;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeMath;

        specialinvoke $r0.<org.mozilla.javascript.NativeMath: void <init>()>();

        virtualinvoke $r0.<org.mozilla.javascript.NativeMath: void activatePrototypeMap(int)>(27);

        $r2 = staticinvoke <org.mozilla.javascript.NativeMath: org.mozilla.javascript.Scriptable getObjectPrototype(org.mozilla.javascript.Scriptable)>(r1);

        virtualinvoke $r0.<org.mozilla.javascript.NativeMath: void setPrototype(org.mozilla.javascript.Scriptable)>($r2);

        virtualinvoke $r0.<org.mozilla.javascript.NativeMath: void setParentScope(org.mozilla.javascript.Scriptable)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke $r0.<org.mozilla.javascript.NativeMath: void sealObject()>();

     label1:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r1, "Math", $r0, 2);

        return;
    }

    private void <init>()
    {
        org.mozilla.javascript.NativeMath r0;

        r0 := @this: org.mozilla.javascript.NativeMath;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        return;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeMath r0;

        r0 := @this: org.mozilla.javascript.NativeMath;

        return "Math";
    }

    protected void initPrototypeId(int)
    {
        org.mozilla.javascript.NativeMath r0;
        java.lang.IllegalStateException $r1, $r3;
        byte b1;
        int i0;
        java.lang.Object $r6;
        java.lang.String $r2, $r4, r5, r7;
        java.lang.Number $r8;
        double d0;

        r0 := @this: org.mozilla.javascript.NativeMath;

        i0 := @parameter0: int;

        if i0 > 19 goto label22;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label17;
            case 18: goto label18;
            case 19: goto label19;
            default: goto label20;
        };

     label01:
        b1 = 0;

        r5 = "toSource";

        goto label21;

     label02:
        b1 = 1;

        r5 = "abs";

        goto label21;

     label03:
        b1 = 1;

        r5 = "acos";

        goto label21;

     label04:
        b1 = 1;

        r5 = "asin";

        goto label21;

     label05:
        b1 = 1;

        r5 = "atan";

        goto label21;

     label06:
        b1 = 2;

        r5 = "atan2";

        goto label21;

     label07:
        b1 = 1;

        r5 = "ceil";

        goto label21;

     label08:
        b1 = 1;

        r5 = "cos";

        goto label21;

     label09:
        b1 = 1;

        r5 = "exp";

        goto label21;

     label10:
        b1 = 1;

        r5 = "floor";

        goto label21;

     label11:
        b1 = 1;

        r5 = "log";

        goto label21;

     label12:
        b1 = 2;

        r5 = "max";

        goto label21;

     label13:
        b1 = 2;

        r5 = "min";

        goto label21;

     label14:
        b1 = 2;

        r5 = "pow";

        goto label21;

     label15:
        b1 = 0;

        r5 = "random";

        goto label21;

     label16:
        b1 = 1;

        r5 = "round";

        goto label21;

     label17:
        b1 = 1;

        r5 = "sin";

        goto label21;

     label18:
        b1 = 1;

        r5 = "sqrt";

        goto label21;

     label19:
        b1 = 1;

        r5 = "tan";

        goto label21;

     label20:
        $r3 = new java.lang.IllegalStateException;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label21:
        $r6 = <org.mozilla.javascript.NativeMath: java.lang.Object MATH_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeMath: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r6, i0, r5, b1);

        goto label33;

     label22:
        tableswitch(i0)
        {
            case 20: goto label23;
            case 21: goto label24;
            case 22: goto label25;
            case 23: goto label26;
            case 24: goto label27;
            case 25: goto label28;
            case 26: goto label29;
            case 27: goto label30;
            default: goto label31;
        };

     label23:
        d0 = 2.718281828459045;

        r7 = "E";

        goto label32;

     label24:
        d0 = 3.141592653589793;

        r7 = "PI";

        goto label32;

     label25:
        d0 = 2.302585092994046;

        r7 = "LN10";

        goto label32;

     label26:
        d0 = 0.6931471805599453;

        r7 = "LN2";

        goto label32;

     label27:
        d0 = 1.4426950408889634;

        r7 = "LOG2E";

        goto label32;

     label28:
        d0 = 0.4342944819032518;

        r7 = "LOG10E";

        goto label32;

     label29:
        d0 = 0.7071067811865476;

        r7 = "SQRT1_2";

        goto label32;

     label30:
        d0 = 1.4142135623730951;

        r7 = "SQRT2";

        goto label32;

     label31:
        $r1 = new java.lang.IllegalStateException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label32:
        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d0);

        virtualinvoke r0.<org.mozilla.javascript.NativeMath: void initPrototypeValue(int,java.lang.String,java.lang.Object,int)>(i0, r7, $r8, 7);

     label33:
        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        byte $b1, $b2, $b3, $b4, $b5, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20;
        java.lang.Object[] r2;
        long $l6;
        org.mozilla.javascript.IdFunctionObject r0;
        java.lang.String $r6;
        java.lang.Number $r11;
        org.mozilla.javascript.NativeMath r3;
        org.mozilla.javascript.Context r7;
        java.lang.IllegalStateException $r12;
        boolean $z0;
        org.mozilla.javascript.Scriptable r8, r9;
        int $i0, i21, $i22, $i23, $i24, $i25, $i26, $i27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24;
        java.lang.Object $r1, $r4, $r10;

        r3 := @this: org.mozilla.javascript.NativeMath;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r7 := @parameter1: org.mozilla.javascript.Context;

        r8 := @parameter2: org.mozilla.javascript.Scriptable;

        r9 := @parameter3: org.mozilla.javascript.Scriptable;

        r2 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeMath: java.lang.Object MATH_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r10 = specialinvoke r3.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r7, r8, r9, r2);

        return $r10;

     label01:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label07;
            case 4: goto label07;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label18;
            case 10: goto label22;
            case 11: goto label23;
            case 12: goto label26;
            case 13: goto label26;
            case 14: goto label33;
            case 15: goto label34;
            case 16: goto label35;
            case 17: goto label38;
            case 18: goto label42;
            case 19: goto label43;
            default: goto label44;
        };

     label02:
        return "Math";

     label03:
        $d16 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b19 = $d16 cmpl 0.0;

        if $b19 != 0 goto label04;

        $d17 = 0.0;

        goto label06;

     label04:
        $b20 = $d16 cmpg 0.0;

        $i23 = (int) $b20;

        if $i23 >= 0 goto label05;

        $d17 = neg $d16;

        goto label06;

     label05:
        $d17 = $d16;

     label06:
        d18 = $d17;

        goto label45;

     label07:
        $d15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b16 = $d15 cmpl $d15;

        if $b16 != 0 goto label10;

        $b17 = -1.0 cmpg $d15;

        $i24 = (int) $b17;

        if $i24 > 0 goto label10;

        $b18 = $d15 cmpg 1.0;

        $i25 = (int) $b18;

        if $i25 > 0 goto label10;

        if $i0 != 3 goto label08;

        $d19 = staticinvoke <java.lang.Math: double acos(double)>($d15);

        goto label09;

     label08:
        $d19 = staticinvoke <java.lang.Math: double asin(double)>($d15);

     label09:
        d18 = $d19;

        goto label45;

     label10:
        d18 = #NaN;

        goto label45;

     label11:
        $d14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = staticinvoke <java.lang.Math: double atan(double)>($d14);

        goto label45;

     label12:
        $d12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $d13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 1);

        d18 = staticinvoke <java.lang.Math: double atan2(double,double)>($d12, $d13);

        goto label45;

     label13:
        $d11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = staticinvoke <java.lang.Math: double ceil(double)>($d11);

        goto label45;

     label14:
        $d10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b14 = $d10 cmpl #Infinity;

        if $b14 == 0 goto label15;

        $b15 = $d10 cmpl #-Infinity;

        if $b15 != 0 goto label16;

     label15:
        $d20 = #NaN;

        goto label17;

     label16:
        $d20 = staticinvoke <java.lang.Math: double cos(double)>($d10);

     label17:
        d18 = $d20;

        goto label45;

     label18:
        $d9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b12 = $d9 cmpl #Infinity;

        if $b12 != 0 goto label19;

        $d21 = $d9;

        goto label21;

     label19:
        $b13 = $d9 cmpl #-Infinity;

        if $b13 != 0 goto label20;

        $d21 = 0.0;

        goto label21;

     label20:
        $d21 = staticinvoke <java.lang.Math: double exp(double)>($d9);

     label21:
        d18 = $d21;

        goto label45;

     label22:
        $d8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = staticinvoke <java.lang.Math: double floor(double)>($d8);

        goto label45;

     label23:
        $d7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b11 = $d7 cmpg 0.0;

        $i26 = (int) $b11;

        if $i26 >= 0 goto label24;

        $d22 = #NaN;

        goto label25;

     label24:
        $d22 = staticinvoke <java.lang.Math: double log(double)>($d7);

     label25:
        d18 = $d22;

        goto label45;

     label26:
        if $i0 != 12 goto label27;

        $d23 = #-Infinity;

        goto label28;

     label27:
        $d23 = #Infinity;

     label28:
        d18 = $d23;

        i21 = 0;

     label29:
        $i22 = lengthof r2;

        if i21 == $i22 goto label45;

        $r4 = r2[i21];

        $d6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r4);

        $b10 = $d6 cmpl $d6;

        if $b10 == 0 goto label30;

        d18 = $d6;

        goto label45;

     label30:
        if $i0 != 12 goto label31;

        d18 = staticinvoke <java.lang.Math: double max(double,double)>(d18, $d6);

        goto label32;

     label31:
        d18 = staticinvoke <java.lang.Math: double min(double,double)>(d18, $d6);

     label32:
        i21 = i21 + 1;

        goto label29;

     label33:
        $d4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $d5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 1);

        d18 = specialinvoke r3.<org.mozilla.javascript.NativeMath: double js_pow(double,double)>($d4, $d5);

        goto label45;

     label34:
        d18 = staticinvoke <java.lang.Math: double random()>();

        goto label45;

     label35:
        $d3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = $d3;

        $b3 = $d3 cmpl $d3;

        if $b3 != 0 goto label45;

        $b4 = $d3 cmpl #Infinity;

        if $b4 == 0 goto label45;

        $b5 = $d3 cmpl #-Infinity;

        if $b5 == 0 goto label45;

        $l6 = staticinvoke <java.lang.Math: long round(double)>($d3);

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label36;

        d18 = (double) $l6;

        goto label45;

     label36:
        $b8 = $d3 cmpg 0.0;

        $i27 = (int) $b8;

        if $i27 >= 0 goto label37;

        d18 = <org.mozilla.javascript.ScriptRuntime: double negativeZero>;

        goto label45;

     label37:
        $b9 = $d3 cmpl 0.0;

        if $b9 == 0 goto label45;

        d18 = 0.0;

        goto label45;

     label38:
        $d2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        $b1 = $d2 cmpl #Infinity;

        if $b1 == 0 goto label39;

        $b2 = $d2 cmpl #-Infinity;

        if $b2 != 0 goto label40;

     label39:
        $d24 = #NaN;

        goto label41;

     label40:
        $d24 = staticinvoke <java.lang.Math: double sin(double)>($d2);

     label41:
        d18 = $d24;

        goto label45;

     label42:
        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        goto label45;

     label43:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object[],int)>(r2, 0);

        d18 = staticinvoke <java.lang.Math: double tan(double)>($d0);

        goto label45;

     label44:
        $r12 = new java.lang.IllegalStateException;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r12;

     label45:
        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d18);

        return $r11;
    }

    private double js_pow(double, double)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b26, $b27, $b28;
        long $l10, $l25, l29, l30;
        int $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        double d0, d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12;
        org.mozilla.javascript.NativeMath r0;

        r0 := @this: org.mozilla.javascript.NativeMath;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        $b0 = d0 cmpl d0;

        if $b0 == 0 goto label01;

        d6 = d0;

        goto label26;

     label01:
        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label02;

        d6 = 1.0;

        goto label26;

     label02:
        $b2 = d1 cmpl 0.0;

        if $b2 != 0 goto label11;

        $d4 = 1.0 / d1;

        $b22 = $d4 cmpl 0.0;

        $i31 = (int) $b22;

        if $i31 <= 0 goto label05;

        $b28 = d0 cmpl 0.0;

        $i32 = (int) $b28;

        if $i32 <= 0 goto label03;

        $d7 = 0.0;

        goto label04;

     label03:
        $d7 = #Infinity;

     label04:
        d6 = $d7;

        goto label26;

     label05:
        l29 = (long) d0;

        $d5 = (double) l29;

        $b23 = $d5 cmpl d0;

        if $b23 != 0 goto label08;

        $l25 = l29 & 1L;

        $b26 = $l25 cmp 0L;

        if $b26 == 0 goto label08;

        $b27 = d0 cmpl 0.0;

        $i33 = (int) $b27;

        if $i33 <= 0 goto label06;

        $d8 = -0.0;

        goto label07;

     label06:
        $d8 = #-Infinity;

     label07:
        d6 = $d8;

        goto label26;

     label08:
        $b24 = d0 cmpl 0.0;

        $i34 = (int) $b24;

        if $i34 <= 0 goto label09;

        $d9 = 0.0;

        goto label10;

     label09:
        $d9 = #Infinity;

     label10:
        d6 = $d9;

        goto label26;

     label11:
        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d0);

        d6 = $d2;

        $b3 = $d2 cmpl $d2;

        if $b3 == 0 goto label26;

        $b4 = d0 cmpl #Infinity;

        if $b4 != 0 goto label14;

        $b18 = d1 cmpg -1.0;

        $i35 = (int) $b18;

        if $i35 < 0 goto label12;

        $b19 = 1.0 cmpg d1;

        $i36 = (int) $b19;

        if $i36 >= 0 goto label13;

     label12:
        d6 = #Infinity;

        goto label26;

     label13:
        $b20 = -1.0 cmpg d1;

        $i37 = (int) $b20;

        if $i37 >= 0 goto label26;

        $b21 = d1 cmpg 1.0;

        $i38 = (int) $b21;

        if $i38 >= 0 goto label26;

        d6 = 0.0;

        goto label26;

     label14:
        $b5 = d0 cmpl #-Infinity;

        if $b5 != 0 goto label17;

        $b14 = d1 cmpg -1.0;

        $i39 = (int) $b14;

        if $i39 < 0 goto label15;

        $b15 = 1.0 cmpg d1;

        $i40 = (int) $b15;

        if $i40 >= 0 goto label16;

     label15:
        d6 = 0.0;

        goto label26;

     label16:
        $b16 = -1.0 cmpg d1;

        $i41 = (int) $b16;

        if $i41 >= 0 goto label26;

        $b17 = d1 cmpg 1.0;

        $i42 = (int) $b17;

        if $i42 >= 0 goto label26;

        d6 = #Infinity;

        goto label26;

     label17:
        $b6 = d1 cmpl #Infinity;

        if $b6 != 0 goto label20;

        $b13 = d0 cmpl 0.0;

        $i43 = (int) $b13;

        if $i43 <= 0 goto label18;

        $d10 = #Infinity;

        goto label19;

     label18:
        $d10 = 0.0;

     label19:
        d6 = $d10;

        goto label26;

     label20:
        $b7 = d1 cmpl #-Infinity;

        if $b7 != 0 goto label26;

        l30 = (long) d0;

        $d3 = (double) l30;

        $b8 = $d3 cmpl d0;

        if $b8 != 0 goto label23;

        $l10 = l30 & 1L;

        $b11 = $l10 cmp 0L;

        if $b11 == 0 goto label23;

        $b12 = d0 cmpl 0.0;

        $i44 = (int) $b12;

        if $i44 <= 0 goto label21;

        $d11 = #-Infinity;

        goto label22;

     label21:
        $d11 = -0.0;

     label22:
        d6 = $d11;

        goto label26;

     label23:
        $b9 = d0 cmpl 0.0;

        $i45 = (int) $b9;

        if $i45 <= 0 goto label24;

        $d12 = #Infinity;

        goto label25;

     label24:
        $d12 = 0.0;

     label25:
        d6 = $d12;

     label26:
        return d6;
    }

    protected int findPrototypeId(java.lang.String)
    {
        byte b27;
        boolean $z0;
        int $i0, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55;
        java.lang.String r0, r2, r3, r4, r5;
        org.mozilla.javascript.NativeMath r1;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c22, $c23, $c24, $c25, $c26;

        r1 := @this: org.mozilla.javascript.NativeMath;

        r0 := @parameter0: java.lang.String;

        b27 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label15;
            case 5: goto label23;
            case 6: goto label30;
            case 7: goto label32;
            case 8: goto label33;
            default: goto label34;
        };

     label01:
        $c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i28 = (int) $c26;

        if $i28 != 69 goto label34;

        b27 = 20;

        goto label35;

     label02:
        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i29 = (int) $c24;

        if $i29 != 80 goto label34;

        $c25 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i30 = (int) $c25;

        if $i30 != 73 goto label34;

        b27 = 21;

        goto label35;

     label03:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i31 = (int) $c4;

        lookupswitch($i31)
        {
            case 76: goto label04;
            case 97: goto label05;
            case 99: goto label06;
            case 101: goto label07;
            case 108: goto label08;
            case 109: goto label09;
            case 112: goto label11;
            case 115: goto label12;
            case 116: goto label13;
            default: goto label14;
        };

     label04:
        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i32 = (int) $c22;

        if $i32 != 50 goto label34;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i33 = (int) $c23;

        if $i33 != 78 goto label34;

        b27 = 23;

        goto label35;

     label05:
        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i34 = (int) $c20;

        if $i34 != 115 goto label34;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i35 = (int) $c21;

        if $i35 != 98 goto label34;

        b27 = 2;

        goto label35;

     label06:
        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i36 = (int) $c18;

        if $i36 != 115 goto label34;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i37 = (int) $c19;

        if $i37 != 111 goto label34;

        b27 = 8;

        goto label35;

     label07:
        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i38 = (int) $c16;

        if $i38 != 112 goto label34;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i39 = (int) $c17;

        if $i39 != 120 goto label34;

        b27 = 9;

        goto label35;

     label08:
        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i40 = (int) $c14;

        if $i40 != 103 goto label34;

        $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i41 = (int) $c15;

        if $i41 != 111 goto label34;

        b27 = 11;

        goto label35;

     label09:
        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i42 = (int) $c11;

        if $i42 != 110 goto label10;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i43 = (int) $c13;

        if $i43 != 105 goto label34;

        b27 = 13;

        goto label35;

     label10:
        $i44 = (int) $c11;

        if $i44 != 120 goto label34;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i45 = (int) $c12;

        if $i45 != 97 goto label34;

        b27 = 12;

        goto label35;

     label11:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i46 = (int) $c9;

        if $i46 != 119 goto label34;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i47 = (int) $c10;

        if $i47 != 111 goto label34;

        b27 = 14;

        goto label35;

     label12:
        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i48 = (int) $c7;

        if $i48 != 110 goto label34;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i49 = (int) $c8;

        if $i49 != 105 goto label34;

        b27 = 17;

        goto label35;

     label13:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i50 = (int) $c5;

        if $i50 != 110 goto label34;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i51 = (int) $c6;

        if $i51 != 97 goto label34;

        b27 = 19;

        goto label35;

     label14:
        goto label34;

     label15:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i52 = (int) $c3;

        lookupswitch($i52)
        {
            case 78: goto label16;
            case 99: goto label17;
            case 101: goto label18;
            case 113: goto label19;
            case 115: goto label20;
            case 116: goto label21;
            default: goto label22;
        };

     label16:
        r2 = "LN10";

        r5 = "LN10";

        r4 = "LN10";

        r3 = "LN10";

        b27 = 22;

        goto label34;

     label17:
        r2 = "acos";

        r5 = "acos";

        r4 = "acos";

        r3 = "acos";

        b27 = 3;

        goto label34;

     label18:
        r2 = "ceil";

        r5 = "ceil";

        r4 = "ceil";

        r3 = "ceil";

        b27 = 7;

        goto label34;

     label19:
        r2 = "sqrt";

        r5 = "sqrt";

        r4 = "sqrt";

        r3 = "sqrt";

        b27 = 18;

        goto label34;

     label20:
        r2 = "asin";

        r5 = "asin";

        r4 = "asin";

        r3 = "asin";

        b27 = 4;

        goto label34;

     label21:
        r2 = "atan";

        r5 = "atan";

        r4 = "atan";

        r3 = "atan";

        b27 = 5;

        goto label34;

     label22:
        goto label34;

     label23:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i53 = (int) $c2;

        lookupswitch($i53)
        {
            case 76: goto label24;
            case 83: goto label25;
            case 97: goto label26;
            case 102: goto label27;
            case 114: goto label28;
            default: goto label29;
        };

     label24:
        r2 = "LOG2E";

        r5 = "LOG2E";

        r4 = "LOG2E";

        r3 = "LOG2E";

        b27 = 24;

        goto label34;

     label25:
        r2 = "SQRT2";

        r5 = "SQRT2";

        r4 = "SQRT2";

        r3 = "SQRT2";

        b27 = 27;

        goto label34;

     label26:
        r2 = "atan2";

        r5 = "atan2";

        r4 = "atan2";

        r3 = "atan2";

        b27 = 6;

        goto label34;

     label27:
        r2 = "floor";

        r5 = "floor";

        r4 = "floor";

        r3 = "floor";

        b27 = 10;

        goto label34;

     label28:
        r2 = "round";

        r5 = "round";

        r4 = "round";

        r3 = "round";

        b27 = 16;

        goto label34;

     label29:
        goto label34;

     label30:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i54 = (int) $c1;

        if $i54 != 76 goto label31;

        r2 = "LOG10E";

        r5 = "LOG10E";

        r4 = "LOG10E";

        r3 = "LOG10E";

        b27 = 25;

        goto label34;

     label31:
        $i55 = (int) $c1;

        if $i55 != 114 goto label34;

        r2 = "random";

        r5 = "random";

        r4 = "random";

        r3 = "random";

        b27 = 15;

        goto label34;

     label32:
        r2 = "SQRT1_2";

        r5 = "SQRT1_2";

        r4 = "SQRT1_2";

        r3 = "SQRT1_2";

        b27 = 26;

        goto label34;

     label33:
        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b27 = 1;

        goto label34;

     label34:
        if r4 == null goto label35;

        if r3 == r0 goto label35;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label35;

        b27 = 0;

     label35:
        return b27;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeMath: int MAX_ID> = 27;

        <org.mozilla.javascript.NativeMath: int Id_SQRT2> = 27;

        <org.mozilla.javascript.NativeMath: int Id_SQRT1_2> = 26;

        <org.mozilla.javascript.NativeMath: int Id_LOG10E> = 25;

        <org.mozilla.javascript.NativeMath: int Id_LOG2E> = 24;

        <org.mozilla.javascript.NativeMath: int Id_LN2> = 23;

        <org.mozilla.javascript.NativeMath: int Id_LN10> = 22;

        <org.mozilla.javascript.NativeMath: int Id_PI> = 21;

        <org.mozilla.javascript.NativeMath: int Id_E> = 20;

        <org.mozilla.javascript.NativeMath: int LAST_METHOD_ID> = 19;

        <org.mozilla.javascript.NativeMath: int Id_tan> = 19;

        <org.mozilla.javascript.NativeMath: int Id_sqrt> = 18;

        <org.mozilla.javascript.NativeMath: int Id_sin> = 17;

        <org.mozilla.javascript.NativeMath: int Id_round> = 16;

        <org.mozilla.javascript.NativeMath: int Id_random> = 15;

        <org.mozilla.javascript.NativeMath: int Id_pow> = 14;

        <org.mozilla.javascript.NativeMath: int Id_min> = 13;

        <org.mozilla.javascript.NativeMath: int Id_max> = 12;

        <org.mozilla.javascript.NativeMath: int Id_log> = 11;

        <org.mozilla.javascript.NativeMath: int Id_floor> = 10;

        <org.mozilla.javascript.NativeMath: int Id_exp> = 9;

        <org.mozilla.javascript.NativeMath: int Id_cos> = 8;

        <org.mozilla.javascript.NativeMath: int Id_ceil> = 7;

        <org.mozilla.javascript.NativeMath: int Id_atan2> = 6;

        <org.mozilla.javascript.NativeMath: int Id_atan> = 5;

        <org.mozilla.javascript.NativeMath: int Id_asin> = 4;

        <org.mozilla.javascript.NativeMath: int Id_acos> = 3;

        <org.mozilla.javascript.NativeMath: int Id_abs> = 2;

        <org.mozilla.javascript.NativeMath: int Id_toSource> = 1;

        <org.mozilla.javascript.NativeMath: long serialVersionUID> = -8838847185801131569L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeMath: java.lang.Object MATH_TAG> = $r0;

        return;
    }
}
