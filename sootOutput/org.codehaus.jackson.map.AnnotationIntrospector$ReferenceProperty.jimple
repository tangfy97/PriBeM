public class org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty extends java.lang.Object
{
    private final org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type;
    private final java.lang.String _name;

    public void <init>(org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type, java.lang.String)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty r0;
        java.lang.String r2;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type> = r1;

        r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String _name> = r2;

        return;
    }

    public static org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r0;
        java.lang.String r1;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r2 = <org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE>;

        specialinvoke $r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: void <init>(org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String)>($r2, r1);

        return $r0;
    }

    public static org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String)
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r0;
        java.lang.String r1;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r2 = <org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE>;

        specialinvoke $r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: void <init>(org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String)>($r2, r1);

        return $r0;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType()
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty r0;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r1 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r1 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String _name>;

        return $r1;
    }

    public boolean isManagedReference()
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty r0;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type>;

        $r1 = <org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isBackReference()
    {
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty r0;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty;

        $r2 = r0.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type _type>;

        $r1 = <org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
