public class org.apache.xalan.lib.sql.PooledConnection extends java.lang.Object
{
    private java.sql.Connection connection;
    private boolean inuse;

    public void <init>(java.sql.Connection)
    {
        org.apache.xalan.lib.sql.PooledConnection r0;
        java.sql.Connection r1;

        r0 := @this: org.apache.xalan.lib.sql.PooledConnection;

        r1 := @parameter0: java.sql.Connection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection connection> = null;

        r0.<org.apache.xalan.lib.sql.PooledConnection: boolean inuse> = 0;

        if r1 == null goto label1;

        r0.<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection connection> = r1;

     label1:
        return;
    }

    public java.sql.Connection getConnection()
    {
        org.apache.xalan.lib.sql.PooledConnection r0;
        java.sql.Connection $r1;

        r0 := @this: org.apache.xalan.lib.sql.PooledConnection;

        $r1 = r0.<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection connection>;

        return $r1;
    }

    public void setInUse(boolean)
    {
        org.apache.xalan.lib.sql.PooledConnection r0;
        boolean z0;

        r0 := @this: org.apache.xalan.lib.sql.PooledConnection;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.lib.sql.PooledConnection: boolean inuse> = z0;

        return;
    }

    public boolean inUse()
    {
        org.apache.xalan.lib.sql.PooledConnection r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.lib.sql.PooledConnection;

        $z0 = r0.<org.apache.xalan.lib.sql.PooledConnection: boolean inuse>;

        return $z0;
    }

    public void close()
    {
        java.io.PrintStream $r3;
        java.sql.SQLException $r2;
        java.sql.Connection $r1;
        org.apache.xalan.lib.sql.PooledConnection r0;
        java.lang.String $r4;

        r0 := @this: org.apache.xalan.lib.sql.PooledConnection;

     label1:
        $r1 = r0.<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection connection>;

        interfaceinvoke $r1.<java.sql.Connection: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label4:
        return;

        catch java.sql.SQLException from label1 to label2 with label3;
    }
}
