public class org.codehaus.jackson.map.ser.BeanSerializer extends org.codehaus.jackson.map.ser.std.BeanSerializerBase
{

    public void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.ser.BeanPropertyWriter[], org.codehaus.jackson.map.ser.BeanPropertyWriter[], org.codehaus.jackson.map.ser.AnyGetterWriter, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanSerializer r0;
        org.codehaus.jackson.map.ser.AnyGetterWriter r4;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Object r5;
        org.codehaus.jackson.map.ser.BeanPropertyWriter[] r2, r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: org.codehaus.jackson.map.ser.BeanPropertyWriter[];

        r3 := @parameter2: org.codehaus.jackson.map.ser.BeanPropertyWriter[];

        r4 := @parameter3: org.codehaus.jackson.map.ser.AnyGetterWriter;

        r5 := @parameter4: java.lang.Object;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.AnyGetterWriter,java.lang.Object)>(r1, r2, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.Class, org.codehaus.jackson.map.ser.BeanPropertyWriter[], org.codehaus.jackson.map.ser.BeanPropertyWriter[], org.codehaus.jackson.map.ser.AnyGetterWriter, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanSerializer r0;
        org.codehaus.jackson.map.ser.AnyGetterWriter r4;
        java.lang.Class r1;
        java.lang.Object r5;
        org.codehaus.jackson.map.ser.BeanPropertyWriter[] r2, r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.map.ser.BeanPropertyWriter[];

        r3 := @parameter2: org.codehaus.jackson.map.ser.BeanPropertyWriter[];

        r4 := @parameter3: org.codehaus.jackson.map.ser.AnyGetterWriter;

        r5 := @parameter4: java.lang.Object;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.AnyGetterWriter,java.lang.Object)>(r1, r2, r3, r4, r5);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ser.BeanSerializer)
    {
        org.codehaus.jackson.map.ser.BeanSerializer r0, r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        r1 := @parameter0: org.codehaus.jackson.map.ser.BeanSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void <init>(org.codehaus.jackson.map.ser.std.BeanSerializerBase)>(r1);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ser.std.BeanSerializerBase)
    {
        org.codehaus.jackson.map.ser.BeanSerializer r0;
        org.codehaus.jackson.map.ser.std.BeanSerializerBase r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        r1 := @parameter0: org.codehaus.jackson.map.ser.std.BeanSerializerBase;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void <init>(org.codehaus.jackson.map.ser.std.BeanSerializerBase)>(r1);

        return;
    }

    public static org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.ser.BeanSerializer $r0;
        org.codehaus.jackson.map.ser.BeanPropertyWriter[] $r2;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.codehaus.jackson.map.ser.BeanSerializer;

        $r2 = <org.codehaus.jackson.map.ser.BeanSerializer: org.codehaus.jackson.map.ser.BeanPropertyWriter[] NO_PROPS>;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.AnyGetterWriter,java.lang.Object)>(r1, $r2, null, null, null);

        return $r0;
    }

    public org.codehaus.jackson.map.JsonSerializer unwrappingSerializer()
    {
        org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer $r0;
        org.codehaus.jackson.map.ser.BeanSerializer r1;

        r1 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        $r0 = new org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer;

        specialinvoke $r0.<org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer: void <init>(org.codehaus.jackson.map.ser.std.BeanSerializerBase)>(r1);

        return $r0;
    }

    public final void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.BeanSerializer r1;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.SerializerProvider r4;
        java.lang.Object $r2, r3;

        r1 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r2 = r1.<org.codehaus.jackson.map.ser.BeanSerializer: java.lang.Object _propertyFilterId>;

        if $r2 == null goto label1;

        virtualinvoke r1.<org.codehaus.jackson.map.ser.BeanSerializer: void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r3, r0, r4);

        goto label2;

     label1:
        virtualinvoke r1.<org.codehaus.jackson.map.ser.BeanSerializer: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r3, r0, r4);

     label2:
        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        return;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.ser.BeanSerializer r2;
        java.lang.StringBuilder $r0, $r1, $r5;
        java.lang.Class $r3;
        java.lang.String $r4, $r6;

        r2 := @this: org.codehaus.jackson.map.ser.BeanSerializer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BeanSerializer for ");

        $r3 = virtualinvoke r2.<org.codehaus.jackson.map.ser.BeanSerializer: java.lang.Class handledType()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
