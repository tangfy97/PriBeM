class org.jivesoftware.util.FastDateFormat$TimeZoneRule extends java.lang.Object implements org.jivesoftware.util.FastDateFormat$Rule
{
    private final java.util.TimeZone mTimeZone;
    private final java.util.Locale mLocale;
    private final int mStyle;
    private final java.lang.String mStandard;
    private final java.lang.String mDaylight;

    void <init>(java.util.TimeZone, java.util.Locale, int)
    {
        java.util.TimeZone r1;
        java.util.Locale r2;
        int i0;
        java.lang.String $r3, $r4;
        org.jivesoftware.util.FastDateFormat$TimeZoneRule r0;

        r0 := @this: org.jivesoftware.util.FastDateFormat$TimeZoneRule;

        r1 := @parameter0: java.util.TimeZone;

        r2 := @parameter1: java.util.Locale;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.TimeZone mTimeZone> = r1;

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.Locale mLocale> = r2;

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: int mStyle> = i0;

        if r1 == null goto label1;

        $r3 = staticinvoke <org.jivesoftware.util.FastDateFormat: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(r1, 0, i0, r2);

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mStandard> = $r3;

        $r4 = staticinvoke <org.jivesoftware.util.FastDateFormat: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>(r1, 1, i0, r2);

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mDaylight> = $r4;

        goto label2;

     label1:
        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mStandard> = null;

        r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mDaylight> = null;

     label2:
        return;
    }

    public int estimateLength()
    {
        java.util.TimeZone $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;
        org.jivesoftware.util.FastDateFormat$TimeZoneRule r0;

        r0 := @this: org.jivesoftware.util.FastDateFormat$TimeZoneRule;

        $r1 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.TimeZone mTimeZone>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mStandard>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mDaylight>;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;

     label1:
        $i0 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: int mStyle>;

        if $i0 != 0 goto label2;

        return 4;

     label2:
        return 40;
    }

    public void appendTo(java.lang.StringBuffer, java.util.Calendar)
    {
        java.util.Calendar r2;
        java.lang.StringBuffer r4;
        java.util.Locale $r5, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6, $r8, $r9, $r10;
        org.jivesoftware.util.FastDateFormat$TimeZoneRule r0;
        boolean $z0, $z1;
        java.util.TimeZone $r1, $r3;

        r0 := @this: org.jivesoftware.util.FastDateFormat$TimeZoneRule;

        r4 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.util.Calendar;

        $r1 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.TimeZone mTimeZone>;

        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z1 == 0 goto label1;

        $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(16);

        if $i3 == 0 goto label1;

        $r10 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mDaylight>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label4;

     label1:
        $r9 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.lang.String mStandard>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label4;

     label2:
        $r3 = virtualinvoke r2.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $z0 = virtualinvoke $r3.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r2.<java.util.Calendar: int get(int)>(16);

        if $i1 == 0 goto label3;

        $i2 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: int mStyle>;

        $r7 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.Locale mLocale>;

        $r8 = staticinvoke <org.jivesoftware.util.FastDateFormat: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>($r3, 1, $i2, $r7);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label4;

     label3:
        $i0 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: int mStyle>;

        $r5 = r0.<org.jivesoftware.util.FastDateFormat$TimeZoneRule: java.util.Locale mLocale>;

        $r6 = staticinvoke <org.jivesoftware.util.FastDateFormat: java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)>($r3, 0, $i0, $r5);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label4:
        return;
    }
}
