public class org.apache.lucene.queryparser.xml.builders.SpanNearBuilder extends org.apache.lucene.queryparser.xml.builders.SpanBuilderBase
{
    private final org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory;

    public void <init>(org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder)
    {
        org.apache.lucene.queryparser.xml.builders.SpanNearBuilder r0;
        org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder r1;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.SpanNearBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder;

        specialinvoke r0.<org.apache.lucene.queryparser.xml.builders.SpanBuilderBase: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.builders.SpanNearBuilder: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory> = r1;

        return;
    }

    public org.apache.lucene.search.spans.SpanQuery getSpanQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        java.lang.Object[] $r4;
        org.apache.lucene.search.spans.SpanQuery[] $r3, r11;
        java.util.ArrayList $r2;
        short $s2;
        org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder $r8;
        org.w3c.dom.Node r10;
        int $i0, $i1;
        org.apache.lucene.queryparser.xml.builders.SpanNearBuilder r6;
        java.lang.String $r1;
        org.apache.lucene.search.spans.SpanQuery $r9;
        boolean $z0;
        org.apache.lucene.search.spans.SpanNearQuery $r5;
        org.w3c.dom.Element r0, $r7;

        r6 := @this: org.apache.lucene.queryparser.xml.builders.SpanNearBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeOrFail(org.w3c.dom.Element,java.lang.String)>(r0, "slop");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $z0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: boolean getAttribute(org.w3c.dom.Element,java.lang.String,boolean)>(r0, "inOrder", 0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r10 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r10 == null goto label3;

        $s2 = interfaceinvoke r10.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 != 1 goto label2;

        $r8 = r6.<org.apache.lucene.queryparser.xml.builders.SpanNearBuilder: org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder factory>;

        $r7 = (org.w3c.dom.Element) r10;

        $r9 = interfaceinvoke $r8.<org.apache.lucene.queryparser.xml.builders.SpanQueryBuilder: org.apache.lucene.search.spans.SpanQuery getSpanQuery(org.w3c.dom.Element)>($r7);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        r10 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (org.apache.lucene.search.spans.SpanQuery)[$i1];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        r11 = (org.apache.lucene.search.spans.SpanQuery[]) $r4;

        $r5 = new org.apache.lucene.search.spans.SpanNearQuery;

        specialinvoke $r5.<org.apache.lucene.search.spans.SpanNearQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[],int,boolean)>(r11, $i0, $z0);

        return $r5;
    }
}
