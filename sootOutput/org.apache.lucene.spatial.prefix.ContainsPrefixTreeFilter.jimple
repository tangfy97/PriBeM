public class org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter extends org.apache.lucene.spatial.prefix.AbstractPrefixTreeFilter
{

    public void <init>(com.spatial4j.core.shape.Shape, java.lang.String, org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree, int)
    {
        com.spatial4j.core.shape.Shape r1;
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree r3;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter r0;
        int i0;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter;

        r1 := @parameter0: com.spatial4j.core.shape.Shape;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.AbstractPrefixTreeFilter: void <init>(com.spatial4j.core.shape.Shape,java.lang.String,org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,int)>(r1, r2, r3, i0);

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r4;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter r1;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor $r0;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.spatial.prefix.tree.Cell $r5;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet $r6;
        org.apache.lucene.index.AtomicReaderContext r2;

        r1 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter;

        r2 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r3 := @parameter1: org.apache.lucene.util.Bits;

        $r0 = new org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor;

        specialinvoke $r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: void <init>(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, r2, r3);

        $r4 = r1.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: org.apache.lucene.spatial.prefix.tree.Cell getWorldCell()>();

        $r6 = staticinvoke <org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet access$000(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$ContainsVisitor,org.apache.lucene.spatial.prefix.tree.Cell,org.apache.lucene.util.Bits)>($r0, $r5, r3);

        return $r6;
    }
}
