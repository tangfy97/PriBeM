public class com.hp.hpl.jena.sparql.modify.request.UpdateWriter extends java.lang.Object implements org.apache.jena.atlas.lib.Closeable
{
    private final org.apache.jena.atlas.io.IndentedWriter out;
    private final com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt;
    private com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw;
    private boolean firstOp;
    private boolean opened;

    public void <init>(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2, r5;
        com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode $r3;
        org.apache.jena.atlas.io.IndentedWriter r1;
        java.lang.NullPointerException $r4;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r5 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp> = 1;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean opened> = 0;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("out");

        throw $r4;

     label1:
        if r5 != null goto label2;

        $r2 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r3 = new com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode: void <init>()>();

        specialinvoke $r2.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.sparql.core.Prologue,com.hp.hpl.jena.sparql.util.NodeToLabelMap)>(null, $r3);

        r5 = $r2;

     label2:
        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out> = r1;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt> = r5;

        return;
    }

    public void open()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt>;

        if null == $r1 goto label1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prologue()>();

     label1:
        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean opened> = 1;

        return;
    }

    private void checkOpen()
    {
        java.lang.IllegalStateException $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean opened>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("UpdateStreamWriter is not opened.  Call open() first.");

        throw $r1;

     label1:
        return;
    }

    private void prologue()
    {
        com.hp.hpl.jena.sparql.core.Prologue $r4;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r3, $r5, $r6;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        int $i0, $i1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt>;

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.serializer.SerializationContext: com.hp.hpl.jena.sparql.core.Prologue getPrologue()>();

        staticinvoke <com.hp.hpl.jena.sparql.serializer.PrologueSerializer: void output(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.core.Prologue)>($r3, $r4);

        $r5 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        if $i0 == $i1 goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void newline()>();

     label1:
        return;
    }

    private void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode r3, $r9;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        org.apache.jena.atlas.io.IndentedWriter $r5, $r7;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r1, $r2, $r6, $r8, $r10, $r11;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r3 := @parameter0: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        if null == $r1 goto label1;

        $r8 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode getMode()>();

        $z1 = virtualinvoke $r9.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r10.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void close()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw> = null;

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp> = 0;

     label1:
        $r11 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        if null != $r11 goto label3;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp>;

        if $z0 != 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" ;");

     label2:
        $r2 = new com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter;

        $r5 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt>;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void <init>(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode,org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r3, $r5, $r4);

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw> = $r2;

        $r6 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r6.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void open()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp> = 0;

     label3:
        return;
    }

    public void insert(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.sparql.core.Quad r1;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void insert(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>($r2, $r3);

        return;
    }

    public void insert(java.util.Iterator)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        java.util.Iterator r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r3;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.Quad $r5;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r2 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode INSERT>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.hp.hpl.jena.sparql.core.Quad) $r4;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.sparql.core.Quad)>($r5);

        goto label1;

     label2:
        return;
    }

    public void insert(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r4;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.graph.Triple r3;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Triple;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode INSERT>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>(r2, r3);

        return;
    }

    public void insert(com.hp.hpl.jena.graph.Node, java.util.Iterator)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        java.util.Iterator r2;
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.graph.Triple $r6;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode INSERT>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.hp.hpl.jena.graph.Triple) $r5;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>(r3, $r6);

        goto label1;

     label2:
        return;
    }

    public void delete(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.sparql.core.Quad r1;
        com.hp.hpl.jena.graph.Triple $r3;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Triple asTriple()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void delete(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>($r2, $r3);

        return;
    }

    public void delete(java.util.Iterator)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        java.util.Iterator r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r3;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.Quad $r5;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r2 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode DELETE>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.hp.hpl.jena.sparql.core.Quad) $r4;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.sparql.core.Quad)>($r5);

        goto label1;

     label2:
        return;
    }

    public void delete(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r4;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.graph.Triple r3;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Triple;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode DELETE>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>(r2, r3);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Node, java.util.Iterator)
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode $r1;
        java.util.Iterator r2;
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.graph.Triple $r6;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: java.util.Iterator;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = <com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode DELETE>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void prepareForDataUpdate(com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter$UpdateMode)>($r1);

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.hp.hpl.jena.graph.Triple) $r5;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void send(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>(r3, $r6);

        goto label1;

     label2:
        return;
    }

    public void update(com.hp.hpl.jena.update.Update)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter$Writer $r2;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r6;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r1, $r7;
        com.hp.hpl.jena.update.Update r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r5 := @parameter0: com.hp.hpl.jena.update.Update;

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void checkOpen()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        if null == $r1 goto label1;

        $r7 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void close()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw> = null;

     label1:
        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp>;

        if $z0 != 0 goto label2;

        $r6 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>(" ;");

     label2:
        $r2 = new com.hp.hpl.jena.sparql.modify.request.UpdateWriter$Writer;

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.serializer.SerializationContext sCxt>;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter$Writer: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r4, $r3);

        virtualinvoke r5.<com.hp.hpl.jena.update.Update: void visit(com.hp.hpl.jena.sparql.modify.request.UpdateVisitor)>($r2);

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean firstOp> = 0;

        return;
    }

    public void update(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Iterable r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void update(java.util.Iterator)>($r2);

        return;
    }

    public void update(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.update.Update $r3;
        boolean $z0;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r1;

        r1 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        r0 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.hp.hpl.jena.update.Update) $r2;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void update(com.hp.hpl.jena.update.Update)>($r3);

        goto label1;

     label2:
        return;
    }

    public void flush()
    {
        org.apache.jena.atlas.io.IndentedWriter $r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void flush()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter $r1, $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        $z0 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean opened>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        if null == $r1 goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter: void close()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: com.hp.hpl.jena.sparql.modify.request.UpdateDataWriter udw> = null;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void flush()>();

        r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: boolean opened> = 0;

     label2:
        return;
    }

    public static void output(com.hp.hpl.jena.update.UpdateRequest, org.apache.jena.atlas.io.IndentedWriter)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r0;
        com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode $r2;
        org.apache.jena.atlas.io.IndentedWriter r3;
        com.hp.hpl.jena.update.UpdateRequest r1;

        r1 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r3 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        $r0 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r2 = new com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.util.NodeToLabelMapBNode: void <init>()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.sparql.core.Prologue,com.hp.hpl.jena.sparql.util.NodeToLabelMap)>(r1, $r2);

        staticinvoke <com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void output(com.hp.hpl.jena.update.UpdateRequest,org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r3, $r0);

        return;
    }

    public static void output(com.hp.hpl.jena.update.UpdateRequest, org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r2;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.update.UpdateRequest r3;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter $r0;

        r3 := @parameter0: com.hp.hpl.jena.update.UpdateRequest;

        r1 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter2: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r0 = new com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r2);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void open()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void update(java.lang.Iterable)>(r3);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void close()>();

        return;
    }

    public static void output(com.hp.hpl.jena.update.Update, org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r2;
        com.hp.hpl.jena.update.Update r3;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.modify.request.UpdateWriter $r0;

        r3 := @parameter0: com.hp.hpl.jena.update.Update;

        r1 := @parameter1: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter2: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r0 = new com.hp.hpl.jena.sparql.modify.request.UpdateWriter;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void <init>(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, r2);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void open()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void update(com.hp.hpl.jena.update.Update)>(r3);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.modify.request.UpdateWriter: void close()>();

        return;
    }
}
