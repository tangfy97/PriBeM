public class org.eclipse.jdt.internal.core.util.StackMapFrame extends org.eclipse.jdt.internal.core.util.ClassFileStruct implements org.eclipse.jdt.core.util.IStackMapFrame
{
    private static final org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS;
    private int readOffset;
    private int frameType;
    private int numberOfLocals;
    private int numberOfStackItems;
    private org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals;
    private org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems;
    private int offsetDelta;

    static void <clinit>()
    {
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r0;

        $r0 = newarray (org.eclipse.jdt.core.util.IVerificationTypeInfo)[0];

        <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS> = $r0;

        return;
    }

    public void <init>(byte[], org.eclipse.jdt.core.util.IConstantPool, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        byte[] r1;
        java.lang.Object[] $r7, $r10, $r14, $r21, $r25;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r2, $r3, $r4, $r8, $r11, $r12, $r15, $r16, $r17, $r18, $r22, $r26, $r27, $r28;
        org.eclipse.jdt.internal.core.util.VerificationInfo[] $r19, $r23;
        org.eclipse.jdt.core.util.IConstantPool r6;
        org.eclipse.jdt.internal.core.util.VerificationInfo $r5, $r9, $r13, $r20, $r24;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41;
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        r1 := @parameter0: byte[];

        r6 := @parameter1: org.eclipse.jdt.core.util.IConstantPool;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileStruct: void <init>()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u1At(byte[],int,int)>(r1, 0, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int frameType> = $i1;

        tableswitch($i1)
        {
            case 247: goto label01;
            case 248: goto label02;
            case 249: goto label02;
            case 250: goto label02;
            case 251: goto label03;
            case 252: goto label04;
            case 253: goto label04;
            case 254: goto label04;
            case 255: goto label07;
            default: goto label15;
        };

     label01:
        $i27 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i27;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 1;

        $r19 = newarray (org.eclipse.jdt.internal.core.util.VerificationInfo)[1];

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r19;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 3;

        $r20 = new org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i28 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i29 = i0 + $i28;

        specialinvoke $r20.<org.eclipse.jdt.internal.core.util.VerificationInfo: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r6, $i29);

        $r21 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems>;

        $r21[0] = $r20;

        $i30 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i31 = virtualinvoke $r20.<org.eclipse.jdt.internal.core.util.VerificationInfo: int sizeInBytes()>();

        $i32 = $i30 + $i31;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i32;

        $r22 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r22;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = 0;

        goto label17;

     label02:
        $i26 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i26;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 0;

        $r17 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r17;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 3;

        $r18 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r18;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = 0;

        goto label17;

     label03:
        $i25 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i25;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 0;

        $r15 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r15;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 3;

        $r16 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r16;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = 0;

        goto label17;

     label04:
        $i18 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i18;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 0;

        $r11 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r11;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 3;

        i19 = $i1 - 251;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = i19;

        $r12 = newarray (org.eclipse.jdt.core.util.IVerificationTypeInfo)[i19];

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r12;

        i39 = 0;

        goto label06;

     label05:
        $r13 = new org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i20 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i21 = i0 + $i20;

        specialinvoke $r13.<org.eclipse.jdt.internal.core.util.VerificationInfo: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r6, $i21);

        $r14 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals>;

        $r14[i39] = $r13;

        $i22 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i23 = virtualinvoke $r13.<org.eclipse.jdt.internal.core.util.VerificationInfo: int sizeInBytes()>();

        $i24 = $i22 + $i23;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i24;

        i39 = i39 + 1;

     label06:
        if i39 < i19 goto label05;

        goto label17;

     label07:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 1, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i2;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, 3, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = $i3;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 5;

        if $i3 == 0 goto label10;

        $r8 = newarray (org.eclipse.jdt.core.util.IVerificationTypeInfo)[$i3];

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r8;

        i40 = 0;

        goto label09;

     label08:
        $r9 = new org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i13 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i14 = i0 + $i13;

        specialinvoke $r9.<org.eclipse.jdt.internal.core.util.VerificationInfo: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r6, $i14);

        $r10 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals>;

        $r10[i40] = $r9;

        $i15 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i16 = virtualinvoke $r9.<org.eclipse.jdt.internal.core.util.VerificationInfo: int sizeInBytes()>();

        $i17 = $i15 + $i16;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i17;

        i40 = i40 + 1;

     label09:
        if i40 < $i3 goto label08;

        goto label11;

     label10:
        $r2 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r2;

     label11:
        $i4 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int u2At(byte[],int,int)>(r1, $i4, i0);

        $i6 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i7 = $i6 + 2;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i7;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = $i5;

        if $i5 == 0 goto label14;

        $r4 = newarray (org.eclipse.jdt.core.util.IVerificationTypeInfo)[$i5];

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r4;

        i41 = 0;

        goto label13;

     label12:
        $r5 = new org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i8 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i9 = i0 + $i8;

        specialinvoke $r5.<org.eclipse.jdt.internal.core.util.VerificationInfo: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r6, $i9);

        $r7 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems>;

        $r7[i41] = $r5;

        $i10 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i11 = virtualinvoke $r5.<org.eclipse.jdt.internal.core.util.VerificationInfo: int sizeInBytes()>();

        $i12 = $i10 + $i11;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i12;

        i41 = i41 + 1;

     label13:
        if i41 < $i5 goto label12;

        goto label17;

     label14:
        $r3 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r3;

        goto label17;

     label15:
        if $i1 > 63 goto label16;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i1;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 0;

        $r27 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r27;

        $r28 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r28;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = 0;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 1;

        goto label17;

     label16:
        if $i1 > 127 goto label17;

        $i33 = $i1 - 64;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta> = $i33;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems> = 1;

        $r23 = newarray (org.eclipse.jdt.internal.core.util.VerificationInfo)[1];

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems> = $r23;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = 1;

        $r24 = new org.eclipse.jdt.internal.core.util.VerificationInfo;

        $i34 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i35 = i0 + $i34;

        specialinvoke $r24.<org.eclipse.jdt.internal.core.util.VerificationInfo: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r6, $i35);

        $r25 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems>;

        $r25[0] = $r24;

        $i36 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        $i37 = virtualinvoke $r24.<org.eclipse.jdt.internal.core.util.VerificationInfo: int sizeInBytes()>();

        $i38 = $i36 + $i37;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset> = $i38;

        $r26 = <org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] EMPTY_LOCALS_OR_STACK_ITEMS>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals> = $r26;

        r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals> = 0;

     label17:
        return;
    }

    int sizeInBytes()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int readOffset>;

        return $i0;
    }

    public int getFrameType()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int frameType>;

        return $i0;
    }

    public org.eclipse.jdt.core.util.IVerificationTypeInfo[] getLocals()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] locals>;

        return $r1;
    }

    public int getNumberOfLocals()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfLocals>;

        return $i0;
    }

    public int getNumberOfStackItems()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int numberOfStackItems>;

        return $i0;
    }

    public int getOffsetDelta()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: int offsetDelta>;

        return $i0;
    }

    public org.eclipse.jdt.core.util.IVerificationTypeInfo[] getStackItems()
    {
        org.eclipse.jdt.internal.core.util.StackMapFrame r0;
        org.eclipse.jdt.core.util.IVerificationTypeInfo[] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapFrame;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.StackMapFrame: org.eclipse.jdt.core.util.IVerificationTypeInfo[] stackItems>;

        return $r1;
    }
}
