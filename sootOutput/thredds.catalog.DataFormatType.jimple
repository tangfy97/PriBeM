public final class thredds.catalog.DataFormatType extends java.lang.Object
{
    private static java.util.List members;
    public static final thredds.catalog.DataFormatType NONE;
    public static final thredds.catalog.DataFormatType BUFR;
    public static final thredds.catalog.DataFormatType ESML;
    public static final thredds.catalog.DataFormatType GEMPAK;
    public static final thredds.catalog.DataFormatType GINI;
    public static final thredds.catalog.DataFormatType GRIB1;
    public static final thredds.catalog.DataFormatType GRIB2;
    public static final thredds.catalog.DataFormatType HDF4;
    public static final thredds.catalog.DataFormatType HDF5;
    public static final thredds.catalog.DataFormatType NETCDF;
    public static final thredds.catalog.DataFormatType NEXRAD2;
    public static final thredds.catalog.DataFormatType NCML;
    public static final thredds.catalog.DataFormatType NIDS;
    public static final thredds.catalog.DataFormatType MCIDAS_AREA;
    public static final thredds.catalog.DataFormatType GIF;
    public static final thredds.catalog.DataFormatType JPEG;
    public static final thredds.catalog.DataFormatType TIFF;
    public static final thredds.catalog.DataFormatType PLAIN;
    public static final thredds.catalog.DataFormatType TSV;
    public static final thredds.catalog.DataFormatType XML;
    public static final thredds.catalog.DataFormatType MPEG;
    public static final thredds.catalog.DataFormatType QUICKTIME;
    public static final thredds.catalog.DataFormatType REALTIME;
    public static final thredds.catalog.DataFormatType OTHER_UNKNOWN;
    private java.lang.String name;

    private void <init>(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        thredds.catalog.DataFormatType r0;

        r0 := @this: thredds.catalog.DataFormatType;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.DataFormatType: java.lang.String name> = r1;

        $r2 = <thredds.catalog.DataFormatType: java.util.List members>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    private void <init>(java.lang.String, boolean)
    {
        java.lang.String r1;
        thredds.catalog.DataFormatType r0;
        boolean z0;

        r0 := @this: thredds.catalog.DataFormatType;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.catalog.DataFormatType: java.lang.String name> = r1;

        return;
    }

    public static java.util.Collection getAllTypes()
    {
        java.util.List $r0;

        $r0 = <thredds.catalog.DataFormatType: java.util.List members>;

        return $r0;
    }

    public static thredds.catalog.DataFormatType findType(java.lang.String)
    {
        java.util.Iterator $r2;
        thredds.catalog.DataFormatType r4;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r0, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <thredds.catalog.DataFormatType: java.util.List members>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (thredds.catalog.DataFormatType) $r3;

        $r5 = r4.<thredds.catalog.DataFormatType: java.lang.String name>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static thredds.catalog.DataFormatType getType(java.lang.String)
    {
        java.lang.String r0;
        thredds.catalog.DataFormatType $r1, $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType findType(java.lang.String)>(r0);

        if $r1 == null goto label2;

        $r2 = $r1;

        goto label3;

     label2:
        $r2 = new thredds.catalog.DataFormatType;

        specialinvoke $r2.<thredds.catalog.DataFormatType: void <init>(java.lang.String,boolean)>(r0, 0);

     label3:
        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        thredds.catalog.DataFormatType r0;

        r0 := @this: thredds.catalog.DataFormatType;

        $r1 = r0.<thredds.catalog.DataFormatType: java.lang.String name>;

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        thredds.catalog.DataFormatType r0;

        r0 := @this: thredds.catalog.DataFormatType;

        $r1 = r0.<thredds.catalog.DataFormatType: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        thredds.catalog.DataFormatType r0;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.DataFormatType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof thredds.catalog.DataFormatType;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<thredds.catalog.DataFormatType: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        thredds.catalog.DataFormatType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(20);

        <thredds.catalog.DataFormatType: java.util.List members> = $r0;

        $r1 = new thredds.catalog.DataFormatType;

        specialinvoke $r1.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NONE> = $r1;

        $r2 = new thredds.catalog.DataFormatType;

        specialinvoke $r2.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("BUFR");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType BUFR> = $r2;

        $r3 = new thredds.catalog.DataFormatType;

        specialinvoke $r3.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("ESML");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType ESML> = $r3;

        $r4 = new thredds.catalog.DataFormatType;

        specialinvoke $r4.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("GEMPAK");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GEMPAK> = $r4;

        $r5 = new thredds.catalog.DataFormatType;

        specialinvoke $r5.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("GINI");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GINI> = $r5;

        $r6 = new thredds.catalog.DataFormatType;

        specialinvoke $r6.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("GRIB-1");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GRIB1> = $r6;

        $r7 = new thredds.catalog.DataFormatType;

        specialinvoke $r7.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("GRIB-2");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GRIB2> = $r7;

        $r8 = new thredds.catalog.DataFormatType;

        specialinvoke $r8.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("HDF4");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType HDF4> = $r8;

        $r9 = new thredds.catalog.DataFormatType;

        specialinvoke $r9.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("HDF5");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType HDF5> = $r9;

        $r10 = new thredds.catalog.DataFormatType;

        specialinvoke $r10.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("NetCDF");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NETCDF> = $r10;

        $r11 = new thredds.catalog.DataFormatType;

        specialinvoke $r11.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("NEXRAD2");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NEXRAD2> = $r11;

        $r12 = new thredds.catalog.DataFormatType;

        specialinvoke $r12.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("NcML");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NCML> = $r12;

        $r13 = new thredds.catalog.DataFormatType;

        specialinvoke $r13.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("NIDS");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType NIDS> = $r13;

        $r14 = new thredds.catalog.DataFormatType;

        specialinvoke $r14.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("McIDAS-AREA");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType MCIDAS_AREA> = $r14;

        $r15 = new thredds.catalog.DataFormatType;

        specialinvoke $r15.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("image/gif");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType GIF> = $r15;

        $r16 = new thredds.catalog.DataFormatType;

        specialinvoke $r16.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("image/jpeg");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType JPEG> = $r16;

        $r17 = new thredds.catalog.DataFormatType;

        specialinvoke $r17.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("image/tiff");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType TIFF> = $r17;

        $r18 = new thredds.catalog.DataFormatType;

        specialinvoke $r18.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("text/plain");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType PLAIN> = $r18;

        $r19 = new thredds.catalog.DataFormatType;

        specialinvoke $r19.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("text/tab-separated-values");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType TSV> = $r19;

        $r20 = new thredds.catalog.DataFormatType;

        specialinvoke $r20.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("text/xml");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType XML> = $r20;

        $r21 = new thredds.catalog.DataFormatType;

        specialinvoke $r21.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("video/mpeg");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType MPEG> = $r21;

        $r22 = new thredds.catalog.DataFormatType;

        specialinvoke $r22.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("video/quicktime");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType QUICKTIME> = $r22;

        $r23 = new thredds.catalog.DataFormatType;

        specialinvoke $r23.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("video/realtime");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType REALTIME> = $r23;

        $r24 = new thredds.catalog.DataFormatType;

        specialinvoke $r24.<thredds.catalog.DataFormatType: void <init>(java.lang.String)>("other/unknown");

        <thredds.catalog.DataFormatType: thredds.catalog.DataFormatType OTHER_UNKNOWN> = $r24;

        return;
    }
}
