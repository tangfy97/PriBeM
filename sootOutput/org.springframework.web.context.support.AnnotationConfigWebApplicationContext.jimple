public class org.springframework.web.context.support.AnnotationConfigWebApplicationContext extends org.springframework.web.context.support.AbstractRefreshableWebApplicationContext
{

    public void <init>()
    {
        org.springframework.web.context.support.AnnotationConfigWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.AnnotationConfigWebApplicationContext;

        specialinvoke r0.<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void <init>()>();

        return;
    }

    protected void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)
    {
        org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner $r2;
        org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader $r0;
        boolean $z0, $z1, $z2;
        org.springframework.beans.factory.support.BeanNameGenerator $r4;
        java.lang.StringBuilder $r12, $r14, $r15, $r21, $r23, $r24, $r25, $r26, $r28, $r30, $r31, $r33, $r35, $r36, $r37;
        java.lang.ClassLoader $r8;
        java.lang.String[] $r6, $r19;
        int i0, $i1, i2;
        org.springframework.web.context.support.AnnotationConfigWebApplicationContext r3;
        java.lang.String r7, $r16, $r27, $r32, $r38;
        java.lang.Class[] $r11;
        org.springframework.context.'annotation'.ScopeMetadataResolver $r5;
        java.lang.Class $r9;
        org.apache.commons.logging.Log $r10, $r13, $r18, $r20, $r22, $r29, $r34;
        java.lang.ClassNotFoundException $r17;
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;

        r3 := @this: org.springframework.web.context.support.AnnotationConfigWebApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        $r0 = new org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader;

        specialinvoke $r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r1);

        $r2 = new org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner;

        specialinvoke $r2.<org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r1);

        $r4 = virtualinvoke r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.beans.factory.support.BeanNameGenerator getBeanNameGenerator()>();

        $r5 = virtualinvoke r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.context.'annotation'.ScopeMetadataResolver getScopeMetadataResolver()>();

        if $r4 == null goto label01;

        virtualinvoke $r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)>($r4);

        virtualinvoke $r2.<org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)>($r4);

     label01:
        if $r5 == null goto label02;

        virtualinvoke $r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)>($r5);

        virtualinvoke $r2.<org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)>($r5);

     label02:
        $r6 = virtualinvoke r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: java.lang.String[] getConfigLocations()>();

        if $r6 == null goto label12;

        i0 = lengthof $r6;

        i2 = 0;

        goto label11;

     label03:
        r7 = $r6[i2];

     label04:
        $r8 = virtualinvoke r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: java.lang.ClassLoader getClassLoader()>();

        $r9 = virtualinvoke $r8.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r7);

        $r10 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z0 == 0 goto label05;

        $r13 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Successfully resolved class for [");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r16);

     label05:
        $r11 = newarray (java.lang.Class)[1];

        $r11[0] = $r9;

        virtualinvoke $r0.<org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader: void register(java.lang.Class[])>($r11);

     label06:
        goto label10;

     label07:
        $r17 := @caughtexception;

        $r18 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r18.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label08;

        $r34 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not load class for config location [");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] - trying package scan. ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r38);

     label08:
        $r19 = newarray (java.lang.String)[1];

        $r19[0] = r7;

        $i1 = virtualinvoke $r2.<org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner: int scan(java.lang.String[])>($r19);

        $r20 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r20.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z2 == 0 goto label10;

        if $i1 != 0 goto label09;

        $r29 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("No annotated classes found for specified class/package [");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r32);

        goto label10;

     label09:
        $r22 = r3.<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.apache.commons.logging.Log logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" annotated classes in package [");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r27);

     label10:
        i2 = i2 + 1;

     label11:
        if i2 < i0 goto label03;

     label12:
        return;

        catch java.lang.ClassNotFoundException from label04 to label06 with label07;
    }

    protected org.springframework.beans.factory.support.BeanNameGenerator getBeanNameGenerator()
    {
        org.springframework.web.context.support.AnnotationConfigWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.AnnotationConfigWebApplicationContext;

        return null;
    }

    protected org.springframework.context.'annotation'.ScopeMetadataResolver getScopeMetadataResolver()
    {
        org.springframework.web.context.support.AnnotationConfigWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.AnnotationConfigWebApplicationContext;

        return null;
    }
}
