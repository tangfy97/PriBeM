public class org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray extends org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam
{
    private boolean backgroundSet;
    private int backgroundPaletteGray;
    private int[] transparency;
    private int bitShift;
    private boolean bitShiftSet;

    public void <init>()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        specialinvoke r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean backgroundSet> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean bitShiftSet> = 0;

        return;
    }

    public void unsetBackground()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean backgroundSet> = 0;

        return;
    }

    public boolean isBackgroundSet()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean backgroundSet>;

        return $z0;
    }

    public void setBitDepth(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r1;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 4 goto label1;

        if i0 == 8 goto label1;

        if i0 == 16 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: int bitDepth> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean bitDepthSet> = 1;

        return;
    }

    public void setBackgroundGray(int)
    {
        int i0;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        i0 := @parameter0: int;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int backgroundPaletteGray> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean backgroundSet> = 1;

        return;
    }

    public int getBackgroundGray()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean backgroundSet>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam6");

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int backgroundPaletteGray>;

        return $i0;
    }

    public void setTransparentGray(int)
    {
        int[] $r1, $r2;
        int i0;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        i0 := @parameter0: int;

        $r1 = newarray (int)[1];

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int[] transparency> = $r1;

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int[] transparency>;

        $r2[0] = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean transparencySet> = 1;

        return;
    }

    public int getTransparentGray()
    {
        java.lang.IllegalStateException $r2;
        int[] $r1;
        int i0;
        java.lang.String $r3;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean transparencySet>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam7");

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        $r1 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int[] transparency>;

        i0 = $r1[0];

        return i0;
    }

    public void setBitShift(int)
    {
        int i0;
        java.lang.RuntimeException $r1;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int bitShift> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean bitShiftSet> = 1;

        return;
    }

    public int getBitShift()
    {
        java.lang.IllegalStateException $r1;
        int $i0;
        java.lang.String $r2;
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean bitShiftSet>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("PNGEncodeParam8");

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: int bitShift>;

        return $i0;
    }

    public void unsetBitShift()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean bitShiftSet> = 0;

        return;
    }

    public boolean isBitShiftSet()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray: boolean bitShiftSet>;

        return $z0;
    }

    public boolean isBitDepthSet()
    {
        org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray r0;
        boolean $z0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam$Gray;

        $z0 = r0.<org.apache.batik.ext.awt.image.codec.png.PNGEncodeParam: boolean bitDepthSet>;

        return $z0;
    }
}
