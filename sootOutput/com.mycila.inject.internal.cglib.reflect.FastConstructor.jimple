public class com.mycila.inject.internal.cglib.reflect.FastConstructor extends com.mycila.inject.internal.cglib.reflect.FastMember
{

    void <init>(com.mycila.inject.internal.cglib.reflect.FastClass, java.lang.reflect.Constructor)
    {
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        int $i0;
        java.lang.Class[] $r3;
        com.mycila.inject.internal.cglib.reflect.FastClass r1;
        java.lang.reflect.Constructor r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        r1 := @parameter0: com.mycila.inject.internal.cglib.reflect.FastClass;

        r2 := @parameter1: java.lang.reflect.Constructor;

        $r3 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.cglib.reflect.FastClass: int getIndex(java.lang.Class[])>($r3);

        specialinvoke r0.<com.mycila.inject.internal.cglib.reflect.FastMember: void <init>(com.mycila.inject.internal.cglib.reflect.FastClass,java.lang.reflect.Member,int)>(r1, r2, $i0);

        return;
    }

    public java.lang.Class[] getParameterTypes()
    {
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        java.lang.reflect.Member $r1;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Constructor) $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        return $r3;
    }

    public java.lang.Class[] getExceptionTypes()
    {
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        java.lang.reflect.Member $r1;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Constructor) $r1;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        return $r3;
    }

    public java.lang.Object newInstance() throws java.lang.reflect.InvocationTargetException
    {
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        int $i0;
        java.lang.Object $r2;
        com.mycila.inject.internal.cglib.reflect.FastClass $r1;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: com.mycila.inject.internal.cglib.reflect.FastClass fc>;

        $i0 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: int index>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.cglib.reflect.FastClass: java.lang.Object newInstance(int,java.lang.Object[])>($i0, null);

        return $r2;
    }

    public java.lang.Object newInstance(java.lang.Object[]) throws java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] r1;
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        int $i0;
        java.lang.Object $r3;
        com.mycila.inject.internal.cglib.reflect.FastClass $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: com.mycila.inject.internal.cglib.reflect.FastClass fc>;

        $i0 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: int index>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.cglib.reflect.FastClass: java.lang.Object newInstance(int,java.lang.Object[])>($i0, r1);

        return $r3;
    }

    public java.lang.reflect.Constructor getJavaConstructor()
    {
        java.lang.reflect.Constructor $r2;
        com.mycila.inject.internal.cglib.reflect.FastConstructor r0;
        java.lang.reflect.Member $r1;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastConstructor;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastConstructor: java.lang.reflect.Member member>;

        $r2 = (java.lang.reflect.Constructor) $r1;

        return $r2;
    }
}
