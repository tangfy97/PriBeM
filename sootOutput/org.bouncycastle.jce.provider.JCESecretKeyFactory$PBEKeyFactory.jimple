public class org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory extends org.bouncycastle.jce.provider.JCESecretKeyFactory
{
    private boolean forCipher;
    private int scheme;
    private int digest;
    private int keySize;
    private int ivSize;

    public void <init>(java.lang.String, org.bouncycastle.asn1.DERObjectIdentifier, boolean, int, int, int, int)
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        org.bouncycastle.asn1.DERObjectIdentifier r2;
        boolean z0;

        r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bouncycastle.asn1.DERObjectIdentifier;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        specialinvoke r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier)>(r1, r2);

        r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: boolean forCipher> = z0;

        r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int scheme> = i0;

        r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int digest> = i1;

        r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int keySize> = i2;

        r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int ivSize> = i3;

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        byte[] $r3;
        java.security.spec.InvalidKeySpecException $r1;
        java.security.spec.KeySpec r0;
        javax.crypto.spec.PBEKeySpec r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r7, $r10;
        boolean $z0, $z1;
        org.bouncycastle.asn1.DERObjectIdentifier $r6, $r9;
        org.bouncycastle.crypto.CipherParameters r11;
        org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory r4;
        org.bouncycastle.jce.provider.JCEPBEKey $r5, $r8;

        r4 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory;

        r0 := @parameter0: java.security.spec.KeySpec;

        $z0 = r0 instanceof javax.crypto.spec.PBEKeySpec;

        if $z0 == 0 goto label4;

        r2 = (javax.crypto.spec.PBEKeySpec) r0;

        $r3 = virtualinvoke r2.<javax.crypto.spec.PBEKeySpec: byte[] getSalt()>();

        if $r3 != null goto label1;

        $r8 = new org.bouncycastle.jce.provider.JCEPBEKey;

        $r10 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: java.lang.String algName>;

        $r9 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: org.bouncycastle.asn1.DERObjectIdentifier algOid>;

        $i14 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int scheme>;

        $i13 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int digest>;

        $i12 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int keySize>;

        $i11 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int ivSize>;

        specialinvoke $r8.<org.bouncycastle.jce.provider.JCEPBEKey: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier,int,int,int,int,javax.crypto.spec.PBEKeySpec,org.bouncycastle.crypto.CipherParameters)>($r10, $r9, $i14, $i13, $i12, $i11, r2, null);

        return $r8;

     label1:
        $z1 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: boolean forCipher>;

        if $z1 == 0 goto label2;

        $i10 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int scheme>;

        $i9 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int digest>;

        $i8 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int keySize>;

        $i7 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int ivSize>;

        r11 = staticinvoke <org.bouncycastle.jce.provider.PBE$Util: org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)>(r2, $i10, $i9, $i8, $i7);

        goto label3;

     label2:
        $i2 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int scheme>;

        $i1 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int digest>;

        $i0 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int keySize>;

        r11 = staticinvoke <org.bouncycastle.jce.provider.PBE$Util: org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)>(r2, $i2, $i1, $i0);

     label3:
        $r5 = new org.bouncycastle.jce.provider.JCEPBEKey;

        $r7 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: java.lang.String algName>;

        $r6 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: org.bouncycastle.asn1.DERObjectIdentifier algOid>;

        $i6 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int scheme>;

        $i5 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int digest>;

        $i4 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int keySize>;

        $i3 = r4.<org.bouncycastle.jce.provider.JCESecretKeyFactory$PBEKeyFactory: int ivSize>;

        specialinvoke $r5.<org.bouncycastle.jce.provider.JCEPBEKey: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier,int,int,int,int,javax.crypto.spec.PBEKeySpec,org.bouncycastle.crypto.CipherParameters)>($r7, $r6, $i6, $i5, $i4, $i3, r2, r11);

        return $r5;

     label4:
        $r1 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r1.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw $r1;
    }
}
