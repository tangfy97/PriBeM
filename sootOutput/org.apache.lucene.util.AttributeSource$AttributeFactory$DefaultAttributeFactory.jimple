final class org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory extends org.apache.lucene.util.AttributeSource$AttributeFactory
{
    private static final org.apache.lucene.util.WeakIdentityMap attClassImplMap;

    void <init>()
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory r0;

        r0 := @this: org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory;

        specialinvoke r0.<org.apache.lucene.util.AttributeSource$AttributeFactory: void <init>()>();

        return;
    }

    public org.apache.lucene.util.AttributeImpl createAttributeInstance(java.lang.Class)
    {
        java.lang.InstantiationException $r11;
        java.lang.String $r8, $r10, $r15, $r17;
        java.lang.IllegalAccessException $r4;
        java.lang.IllegalArgumentException $r5, $r12;
        org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory r18;
        org.apache.lucene.util.AttributeImpl $r3;
        java.lang.Class r0, $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r6, $r7, $r9, $r13, $r14, $r16;

        r18 := @this: org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = staticinvoke <org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory: java.lang.Class getClassForInterface(java.lang.Class)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.apache.lucene.util.AttributeImpl) $r2;

     label2:
        return $r3;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate implementing class for ");

        $r15 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not instantiate implementing class for ");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    private static java.lang.Class getClassForInterface(java.lang.Class)
    {
        org.apache.lucene.util.WeakIdentityMap $r1, $r7;
        java.lang.String $r8, $r11, $r19, $r21;
        java.lang.ref.WeakReference r3, $r5;
        java.lang.IllegalArgumentException $r16;
        java.lang.Class r0, $r13, $r14, $r22, r23;
        java.lang.Object $r2, $r4;
        java.lang.StringBuilder $r6, $r9, $r10, $r17, $r18, $r20;
        java.lang.ClassNotFoundException $r15;
        java.lang.ClassLoader $r12;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory: org.apache.lucene.util.WeakIdentityMap attClassImplMap>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.ref.WeakReference) $r2;

        if r3 != null goto label1;

        $r22 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r22 = (java.lang.Class) $r4;

     label2:
        r23 = $r22;

        if $r22 != null goto label6;

     label3:
        $r7 = <org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory: org.apache.lucene.util.WeakIdentityMap attClassImplMap>;

        $r5 = new java.lang.ref.WeakReference;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Impl");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r11, 1, $r12);

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/lucene/util/AttributeImpl;");

        r23 = $r14;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r14);

        virtualinvoke $r7.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find implementing class for ");

        $r19 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label6:
        return r23;

        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        org.apache.lucene.util.WeakIdentityMap $r0;

        $r0 = staticinvoke <org.apache.lucene.util.WeakIdentityMap: org.apache.lucene.util.WeakIdentityMap newConcurrentHashMap(boolean)>(0);

        <org.apache.lucene.util.AttributeSource$AttributeFactory$DefaultAttributeFactory: org.apache.lucene.util.WeakIdentityMap attClassImplMap> = $r0;

        return;
    }
}
