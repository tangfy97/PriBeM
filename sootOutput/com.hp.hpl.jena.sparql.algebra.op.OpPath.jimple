public class com.hp.hpl.jena.sparql.algebra.op.OpPath extends com.hp.hpl.jena.sparql.algebra.op.Op0
{
    private com.hp.hpl.jena.sparql.core.TriplePath triplePath;

    public void <init>(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.core.TriplePath r1;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.Op0: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.core.TriplePath getTriplePath()
    {
        com.hp.hpl.jena.sparql.core.TriplePath $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath>;

        return $r1;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.sparql.algebra.op.OpPath r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        return "path";
    }

    public com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform)
    {
        com.hp.hpl.jena.sparql.algebra.Transform r0;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r1;
        com.hp.hpl.jena.sparql.algebra.Op $r2;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Transform;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.Transform: com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpPath)>(r1);

        return $r2;
    }

    public com.hp.hpl.jena.sparql.algebra.op.Op0 copy()
    {
        com.hp.hpl.jena.sparql.core.TriplePath $r2;
        com.hp.hpl.jena.sparql.algebra.op.OpPath $r0, r1;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r0 = new com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r2 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath>;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.op.OpPath: void <init>(com.hp.hpl.jena.sparql.core.TriplePath)>($r2);

        return $r0;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpPath r1, r2;
        com.hp.hpl.jena.sparql.core.TriplePath $r4, $r5;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r3;
        com.hp.hpl.jena.sparql.algebra.Op r0;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r3 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.algebra.op.OpPath;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.algebra.op.OpPath) r0;

        $r5 = r2.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath>;

        $r4 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.util.Iso: boolean triplePathIso(com.hp.hpl.jena.sparql.core.TriplePath,com.hp.hpl.jena.sparql.core.TriplePath,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r5, $r4, r3);

        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        com.hp.hpl.jena.sparql.core.TriplePath $r1;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath triplePath>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.TriplePath: int hashCode()>();

        return $i0;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpPath r1;
        com.hp.hpl.jena.sparql.algebra.OpVisitor r0;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpVisitor: void visit(com.hp.hpl.jena.sparql.algebra.op.OpPath)>(r1);

        return;
    }
}
