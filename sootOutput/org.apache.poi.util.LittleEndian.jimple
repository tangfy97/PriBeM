public class org.apache.poi.util.LittleEndian extends java.lang.Object implements org.apache.poi.util.LittleEndianConsts
{

    public static byte[] getByteArray(byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r0, 0, i0);

        return r0;
    }

    public static double getDouble(byte[])
    {
        byte[] r0;
        long $l0;
        double $d0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[],int)>(r0, 0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public static double getDouble(byte[], int)
    {
        byte[] r0;
        int i0;
        long $l1;
        double $d0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l1 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[],int)>(r0, i0);

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l1);

        return $d0;
    }

    public static float getFloat(byte[])
    {
        byte[] r0;
        float $f0;

        r0 := @parameter0: byte[];

        $f0 = staticinvoke <org.apache.poi.util.LittleEndian: float getFloat(byte[],int)>(r0, 0);

        return $f0;
    }

    public static float getFloat(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        float $f0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, i0);

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i1);

        return $f0;
    }

    public static int getInt(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getInt(byte[], int)
    {
        byte[] r0;
        short s2, s4, s6, s8, $s19, $s20, $s21, $s22;
        byte $b1, $b3, $b5, $b7;
        int i0, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i23, $i24, $i25, $i26;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i16 = i0 + 1;

        $b1 = r0[i0];

        $s19 = (short) $b1;

        s2 = $s19 & 255;

        i17 = i16 + 1;

        $b3 = r0[i16];

        $s20 = (short) $b3;

        s4 = $s20 & 255;

        i18 = i17 + 1;

        $b5 = r0[i17];

        $s21 = (short) $b5;

        s6 = $s21 & 255;

        $b7 = r0[i18];

        $s22 = (short) $b7;

        s8 = $s22 & 255;

        $i23 = (int) s8;

        $i10 = $i23 << 24;

        $i24 = (int) s6;

        $i9 = $i24 << 16;

        $i12 = $i10 + $i9;

        $i25 = (int) s4;

        $i11 = $i25 << 8;

        $i14 = $i12 + $i11;

        $i26 = (int) s2;

        $i13 = $i26 << 0;

        $i15 = $i14 + $i13;

        return $i15;
    }

    public static long getLong(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getLong(byte[], int)
    {
        byte[] r0;
        long $l7, l8, l10;
        short $s3, $s6, $s11, $s12;
        byte $b2, $b5;
        int i0, $i1, $i4, i9, $i14;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = i0 + 7;

        $b2 = r0[$i1];

        $s11 = (short) $b2;

        $s3 = 255 & $s11;

        l8 = (long) $s3;

        $i4 = i0 + 8;

        i9 = $i4 - 1;

     label1:
        if i9 < i0 goto label2;

        l10 = l8 << 8;

        $b5 = r0[i9];

        $s12 = (short) $b5;

        $s6 = 255 & $s12;

        $l7 = (long) $s6;

        l8 = l10 | $l7;

        $i14 = (int) -1;

        i9 = i9 + $i14;

        goto label1;

     label2:
        return l8;
    }

    public static short getShort(byte[])
    {
        byte[] r0;
        short $s0;

        r0 := @parameter0: byte[];

        $s0 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r0, 0);

        return $s0;
    }

    public static short getShort(byte[], int)
    {
        byte[] r0;
        short s2, s5, $s9, $s10, $s11;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i8, $i12, $i13;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s10 = (short) $b1;

        s2 = $s10 & 255;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s11 = (short) $b4;

        s5 = $s11 & 255;

        $i12 = (int) s5;

        $i7 = $i12 << 8;

        $i13 = (int) s2;

        $i6 = $i13 << 0;

        $i8 = $i7 + $i6;

        $s9 = (short) $i8;

        return $s9;
    }

    public static short[] getShortArray(byte[], int, int)
    {
        byte[] r1;
        short $s6;
        int i0, $i1, $i2, i3, $i4, $i5, i7;
        short[] r0;

        r1 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 / 2;

        r0 = newarray (short)[$i1];

        i7 = 0;

     label1:
        $i2 = lengthof r0;

        if i7 >= $i2 goto label2;

        $i4 = i7 * 2;

        $i5 = i3 + $i4;

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r1, $i5);

        r0[i7] = $s6;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r0;
    }

    public static short getUByte(byte[])
    {
        byte[] r0;
        short $s1, $s2, $s3;
        byte $b0;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $s3 = (short) $b0;

        $s1 = $s3 & 255;

        $s2 = (short) $s1;

        return $s2;
    }

    public static short getUByte(byte[], int)
    {
        byte[] r0;
        short $s2, $s3, $s4;
        byte $b1;
        int i0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s4 = (short) $b1;

        $s2 = $s4 & 255;

        $s3 = (short) $s2;

        return $s3;
    }

    public static long getUInt(byte[])
    {
        byte[] r0;
        long $l0;

        r0 := @parameter0: byte[];

        $l0 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>(r0, 0);

        return $l0;
    }

    public static long getUInt(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        long l2, $l3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r0, i0);

        l2 = (long) $i1;

        $l3 = l2 & 4294967295L;

        return $l3;
    }

    public static int getUnsignedByte(byte[], int)
    {
        byte[] r0;
        short $s2, $s3;
        byte $b1;
        int i0, $i4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s3 = (short) $b1;

        $s2 = $s3 & 255;

        $i4 = (int) $s2;

        return $i4;
    }

    public static int getUShort(byte[])
    {
        int $i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r0, 0);

        return $i0;
    }

    public static int getUShort(byte[], int)
    {
        byte[] r0;
        short s2, s5, $s9, $s10;
        byte $b1, $b4;
        int i0, $i3, $i6, $i7, $i8, $i11, $i12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s9 = (short) $b1;

        s2 = $s9 & 255;

        $i3 = i0 + 1;

        $b4 = r0[$i3];

        $s10 = (short) $b4;

        s5 = $s10 & 255;

        $i11 = (int) s5;

        $i7 = $i11 << 8;

        $i12 = (int) s2;

        $i6 = $i12 << 0;

        $i8 = $i7 + $i6;

        return $i8;
    }

    public static void putByte(byte[], int, int)
    {
        byte[] r0;
        byte $b2;
        int i0, i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $b2 = (byte) i1;

        r0[i0] = $b2;

        return;
    }

    public static void putDouble(byte[], int, double)
    {
        byte[] r0;
        int i0;
        long $l1;
        double d0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        staticinvoke <org.apache.poi.util.LittleEndian: void putLong(byte[],int,long)>(r0, i0, $l1);

        return;
    }

    public static void putDouble(double, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        long $l0;
        double d0;

        d0 := @parameter0: double;

        r0 := @parameter1: java.io.OutputStream;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        staticinvoke <org.apache.poi.util.LittleEndian: void putLong(long,java.io.OutputStream)>($l0, r0);

        return;
    }

    public static void putFloat(byte[], int, float)
    {
        byte[] r0;
        int i0, $i1;
        float f0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, i0, $i1);

        return;
    }

    public static void putFloat(float, java.io.OutputStream) throws java.io.IOException
    {
        int $i0;
        java.io.OutputStream r0;
        float f0;

        f0 := @parameter0: float;

        r0 := @parameter1: java.io.OutputStream;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(int,java.io.OutputStream)>($i0, r0);

        return;
    }

    public static void putInt(byte[], int)
    {
        int i0;
        byte[] r0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 0, i0);

        return;
    }

    public static void putInt(byte[], int, int)
    {
        byte[] r0;
        byte $b4, $b7, $b10, $b13;
        int i0, i1, $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, i14, i15, i16;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i14 = i0 + 1;

        $i2 = i1 >>> 0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r0[i0] = $b4;

        i15 = i14 + 1;

        $i5 = i1 >>> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r0[i14] = $b7;

        i16 = i15 + 1;

        $i8 = i1 >>> 16;

        $i9 = $i8 & 255;

        $b10 = (byte) $i9;

        r0[i15] = $b10;

        $i11 = i1 >>> 24;

        $i12 = $i11 & 255;

        $b13 = (byte) $i12;

        r0[i16] = $b13;

        return;
    }

    public static void putInt(int, java.io.OutputStream) throws java.io.IOException
    {
        byte $b3, $b6, $b9, $b12;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16;
        java.io.OutputStream r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.io.OutputStream;

        $i1 = i0 >>> 0;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $i13 = (int) $b3;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i13);

        $i4 = i0 >>> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $i14 = (int) $b6;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i14);

        $i7 = i0 >>> 16;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        $i15 = (int) $b9;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i15);

        $i10 = i0 >>> 24;

        $i11 = $i10 & 255;

        $b12 = (byte) $i11;

        $i16 = (int) $b12;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i16);

        return;
    }

    public static void putLong(byte[], int, long)
    {
        byte[] r0;
        byte $b5, $b10, $b15, $b20, $b25, $b30, $b35, $b40;
        long l1, $l2, $l3, $l7, $l8, $l12, $l13, $l17, $l18, $l22, $l23, $l27, $l28, $l32, $l33, $l37, $l38;
        int i0, $i4, $i6, $i9, $i11, $i14, $i16, $i19, $i21, $i24, $i26, $i29, $i31, $i34, $i36, $i39, $i41;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $i6 = i0 + 0;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[$i6] = $b5;

        $i11 = i0 + 1;

        $l7 = l1 >>> 8;

        $l8 = $l7 & 255L;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        r0[$i11] = $b10;

        $i16 = i0 + 2;

        $l12 = l1 >>> 16;

        $l13 = $l12 & 255L;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r0[$i16] = $b15;

        $i21 = i0 + 3;

        $l17 = l1 >>> 24;

        $l18 = $l17 & 255L;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        r0[$i21] = $b20;

        $i26 = i0 + 4;

        $l22 = l1 >>> 32;

        $l23 = $l22 & 255L;

        $i24 = (int) $l23;

        $b25 = (byte) $i24;

        r0[$i26] = $b25;

        $i31 = i0 + 5;

        $l27 = l1 >>> 40;

        $l28 = $l27 & 255L;

        $i29 = (int) $l28;

        $b30 = (byte) $i29;

        r0[$i31] = $b30;

        $i36 = i0 + 6;

        $l32 = l1 >>> 48;

        $l33 = $l32 & 255L;

        $i34 = (int) $l33;

        $b35 = (byte) $i34;

        r0[$i36] = $b35;

        $i41 = i0 + 7;

        $l37 = l1 >>> 56;

        $l38 = $l37 & 255L;

        $i39 = (int) $l38;

        $b40 = (byte) $i39;

        r0[$i41] = $b40;

        return;
    }

    public static void putLong(long, java.io.OutputStream) throws java.io.IOException
    {
        byte $b4, $b8, $b12, $b16, $b20, $b24, $b28, $b32;
        long l0, $l1, $l2, $l5, $l6, $l9, $l10, $l13, $l14, $l17, $l18, $l21, $l22, $l25, $l26, $l29, $l30;
        int $i3, $i7, $i11, $i15, $i19, $i23, $i27, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        java.io.OutputStream r0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.io.OutputStream;

        $l1 = l0 >>> 0;

        $l2 = $l1 & 255L;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $i33 = (int) $b4;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i33);

        $l5 = l0 >>> 8;

        $l6 = $l5 & 255L;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        $i34 = (int) $b8;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i34);

        $l9 = l0 >>> 16;

        $l10 = $l9 & 255L;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        $i35 = (int) $b12;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i35);

        $l13 = l0 >>> 24;

        $l14 = $l13 & 255L;

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        $i36 = (int) $b16;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i36);

        $l17 = l0 >>> 32;

        $l18 = $l17 & 255L;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        $i37 = (int) $b20;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i37);

        $l21 = l0 >>> 40;

        $l22 = $l21 & 255L;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        $i38 = (int) $b24;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i38);

        $l25 = l0 >>> 48;

        $l26 = $l25 & 255L;

        $i27 = (int) $l26;

        $b28 = (byte) $i27;

        $i39 = (int) $b28;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i39);

        $l29 = l0 >>> 56;

        $l30 = $l29 & 255L;

        $i31 = (int) $l30;

        $b32 = (byte) $i31;

        $i40 = (int) $b32;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i40);

        return;
    }

    public static void putShort(byte[], int, short)
    {
        byte[] r0;
        short s1;
        byte $b4, $b7;
        int i0, $i2, $i3, $i5, $i6, i8, $i9, $i10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        s1 := @parameter2: short;

        i8 = i0 + 1;

        $i9 = (int) s1;

        $i2 = $i9 >>> 0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r0[i0] = $b4;

        $i10 = (int) s1;

        $i5 = $i10 >>> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r0[i8] = $b7;

        return;
    }

    public static void putShort(byte[], short)
    {
        byte[] r0;
        short s0;

        r0 := @parameter0: byte[];

        s0 := @parameter1: short;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, 0, s0);

        return;
    }

    public static void putShort(java.io.OutputStream, short) throws java.io.IOException
    {
        java.io.OutputStream r0;
        short s0;
        byte $b3, $b6;
        int $i1, $i2, $i4, $i5, $i7, $i8, $i9, $i10;

        r0 := @parameter0: java.io.OutputStream;

        s0 := @parameter1: short;

        $i7 = (int) s0;

        $i1 = $i7 >>> 0;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $i8 = (int) $b3;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i8);

        $i9 = (int) s0;

        $i4 = $i9 >>> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $i10 = (int) $b6;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i10);

        return;
    }

    public static void putShortArray(byte[], int, short[])
    {
        byte[] r1;
        short s2;
        int i0, i1, i3, i4;
        short[] r0;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r0 := @parameter2: short[];

        i3 = i0;

        i1 = lengthof r0;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        s2 = r0[i4];

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r1, i3, s2);

        i3 = i3 + 2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static void putUByte(byte[], int, short)
    {
        byte[] r0;
        short s1, $s2;
        byte $b3;
        int i0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        s1 := @parameter2: short;

        $s2 = s1 & 255;

        $b3 = (byte) $s2;

        r0[i0] = $b3;

        return;
    }

    public static void putUInt(byte[], int, long)
    {
        byte[] r0;
        long l1, $l2, $l3, $l6, $l7, $l10, $l11, $l14, $l15;
        byte $b5, $b9, $b13, $b17;
        int i0, $i4, $i8, $i12, $i16, i18, i19, i20;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        i18 = i0 + 1;

        $l2 = l1 >>> 0;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r0[i0] = $b5;

        i19 = i18 + 1;

        $l6 = l1 >>> 8;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r0[i18] = $b9;

        i20 = i19 + 1;

        $l10 = l1 >>> 16;

        $l11 = $l10 & 255L;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r0[i19] = $b13;

        $l14 = l1 >>> 24;

        $l15 = $l14 & 255L;

        $i16 = (int) $l15;

        $b17 = (byte) $i16;

        r0[i20] = $b17;

        return;
    }

    public static void putUInt(byte[], long)
    {
        byte[] r0;
        long l0;

        r0 := @parameter0: byte[];

        l0 := @parameter1: long;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUInt(byte[],int,long)>(r0, 0, l0);

        return;
    }

    public static void putUInt(long, java.io.OutputStream) throws java.io.IOException
    {
        long l0, $l1, $l2, $l5, $l6, $l9, $l10, $l13, $l14;
        byte $b4, $b8, $b12, $b16;
        int $i3, $i7, $i11, $i15, $i17, $i18, $i19, $i20;
        java.io.OutputStream r0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.io.OutputStream;

        $l1 = l0 >>> 0;

        $l2 = $l1 & 255L;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $i17 = (int) $b4;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i17);

        $l5 = l0 >>> 8;

        $l6 = $l5 & 255L;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        $i18 = (int) $b8;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i18);

        $l9 = l0 >>> 16;

        $l10 = $l9 & 255L;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        $i19 = (int) $b12;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i19);

        $l13 = l0 >>> 24;

        $l14 = $l13 & 255L;

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        $i20 = (int) $b16;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i20);

        return;
    }

    public static void putUShort(byte[], int, int)
    {
        byte[] r0;
        byte $b4, $b7;
        int i0, i1, $i2, $i3, $i5, $i6, i8;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i8 = i0 + 1;

        $i2 = i1 >>> 0;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r0[i0] = $b4;

        $i5 = i1 >>> 8;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r0[i8] = $b7;

        return;
    }

    public static void putUShort(int, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte $b3, $b6;
        int i0, $i1, $i2, $i4, $i5, $i7, $i8;

        i0 := @parameter0: int;

        r0 := @parameter1: java.io.OutputStream;

        $i1 = i0 >>> 0;

        $i2 = $i1 & 255;

        $b3 = (byte) $i2;

        $i7 = (int) $b3;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i7);

        $i4 = i0 >>> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        $i8 = (int) $b6;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i8);

        return;
    }

    public static int readInt(java.io.InputStream) throws java.io.IOException, org.apache.poi.util.LittleEndian$BufferUnderrunException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.poi.util.LittleEndian$BufferUnderrunException $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = $i0 | $i1;

        $i5 = $i4 | $i2;

        $i6 = $i5 | $i3;

        if $i6 >= 0 goto label1;

        $r1 = new org.apache.poi.util.LittleEndian$BufferUnderrunException;

        specialinvoke $r1.<org.apache.poi.util.LittleEndian$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i8 = $i3 << 24;

        $i7 = $i2 << 16;

        $i10 = $i8 + $i7;

        $i9 = $i1 << 8;

        $i12 = $i10 + $i9;

        $i11 = $i0 << 0;

        $i13 = $i12 + $i11;

        return $i13;
    }

    public static long readUInt(java.io.InputStream) throws java.io.IOException, org.apache.poi.util.LittleEndian$BufferUnderrunException
    {
        int $i0;
        long l1, $l2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int readInt(java.io.InputStream)>(r0);

        l1 = (long) $i0;

        $l2 = l1 & 4294967295L;

        return $l2;
    }

    public static long readLong(java.io.InputStream) throws java.io.IOException, org.apache.poi.util.LittleEndian$BufferUnderrunException
    {
        org.apache.poi.util.LittleEndian$BufferUnderrunException $r1;
        long $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l29, $l30, $l32, $l33, $l35, $l36, $l37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i28, $i31, $i34;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i4 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i5 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i6 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i7 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i8 = $i0 | $i1;

        $i9 = $i8 | $i2;

        $i10 = $i9 | $i3;

        $i11 = $i10 | $i4;

        $i12 = $i11 | $i5;

        $i13 = $i12 | $i6;

        $i14 = $i13 | $i7;

        if $i14 >= 0 goto label1;

        $r1 = new org.apache.poi.util.LittleEndian$BufferUnderrunException;

        specialinvoke $r1.<org.apache.poi.util.LittleEndian$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $l15 = (long) $i7;

        $l18 = $l15 << 56;

        $l16 = (long) $i6;

        $l17 = $l16 << 48;

        $l21 = $l18 + $l17;

        $l19 = (long) $i5;

        $l20 = $l19 << 40;

        $l24 = $l21 + $l20;

        $l22 = (long) $i4;

        $l23 = $l22 << 32;

        $l27 = $l24 + $l23;

        $l25 = (long) $i3;

        $l26 = $l25 << 24;

        $l30 = $l27 + $l26;

        $i28 = $i2 << 16;

        $l29 = (long) $i28;

        $l33 = $l30 + $l29;

        $i31 = $i1 << 8;

        $l32 = (long) $i31;

        $l36 = $l33 + $l32;

        $i34 = $i0 << 0;

        $l35 = (long) $i34;

        $l37 = $l36 + $l35;

        return $l37;
    }

    public static short readShort(java.io.InputStream) throws java.io.IOException, org.apache.poi.util.LittleEndian$BufferUnderrunException
    {
        int $i0;
        short $s1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int readUShort(java.io.InputStream)>(r0);

        $s1 = (short) $i0;

        return $s1;
    }

    public static int readUShort(java.io.InputStream) throws java.io.IOException, org.apache.poi.util.LittleEndian$BufferUnderrunException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.poi.util.LittleEndian$BufferUnderrunException $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i2 = $i0 | $i1;

        if $i2 >= 0 goto label1;

        $r1 = new org.apache.poi.util.LittleEndian$BufferUnderrunException;

        specialinvoke $r1.<org.apache.poi.util.LittleEndian$BufferUnderrunException: void <init>()>();

        throw $r1;

     label1:
        $i4 = $i1 << 8;

        $i3 = $i0 << 0;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public static int ubyteToInt(byte)
    {
        short $s1, $s2;
        byte b0;
        int $i3;

        b0 := @parameter0: byte;

        $s2 = (short) b0;

        $s1 = $s2 & 255;

        $i3 = (int) $s1;

        return $i3;
    }

    private void <init>()
    {
        org.apache.poi.util.LittleEndian r0;

        r0 := @this: org.apache.poi.util.LittleEndian;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
