public class org.apache.jena.riot.system.ParserProfileBase extends java.lang.Object implements org.apache.jena.riot.system.ParserProfile
{
    protected org.apache.jena.riot.system.ErrorHandler errorHandler;
    protected org.apache.jena.riot.system.Prologue prologue;
    protected org.apache.jena.riot.lang.LabelToNode labelMapping;
    protected boolean strictMode;

    public void <init>(org.apache.jena.riot.system.Prologue, org.apache.jena.riot.system.ErrorHandler)
    {
        org.apache.jena.riot.lang.LabelToNode $r3;
        org.apache.jena.riot.system.ErrorHandler r2;
        org.apache.jena.riot.system.Prologue r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: org.apache.jena.riot.system.Prologue;

        r2 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        $r3 = staticinvoke <org.apache.jena.riot.system.SyntaxLabels: org.apache.jena.riot.lang.LabelToNode createLabelToNode()>();

        specialinvoke r0.<org.apache.jena.riot.system.ParserProfileBase: void <init>(org.apache.jena.riot.system.Prologue,org.apache.jena.riot.system.ErrorHandler,org.apache.jena.riot.lang.LabelToNode)>(r1, r2, $r3);

        return;
    }

    public void <init>(org.apache.jena.riot.system.Prologue, org.apache.jena.riot.system.ErrorHandler, org.apache.jena.riot.lang.LabelToNode)
    {
        org.apache.jena.riot.lang.LabelToNode r3;
        org.apache.jena.riot.system.ErrorHandler r2;
        org.apache.jena.riot.system.Prologue r1;
        org.apache.jena.riot.system.ParserProfileBase r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: org.apache.jena.riot.system.Prologue;

        r2 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        r3 := @parameter2: org.apache.jena.riot.lang.LabelToNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.apache.jena.riot.SysRIOT: boolean strictMode>;

        r0.<org.apache.jena.riot.system.ParserProfileBase: boolean strictMode> = $z0;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue> = r1;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.ErrorHandler errorHandler> = r2;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.lang.LabelToNode labelMapping> = r3;

        return;
    }

    public org.apache.jena.riot.system.ErrorHandler getHandler()
    {
        org.apache.jena.riot.system.ErrorHandler $r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.ErrorHandler errorHandler>;

        return $r1;
    }

    public void setHandler(org.apache.jena.riot.system.ErrorHandler)
    {
        org.apache.jena.riot.system.ErrorHandler r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: org.apache.jena.riot.system.ErrorHandler;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.ErrorHandler errorHandler> = r1;

        return;
    }

    public org.apache.jena.riot.system.Prologue getPrologue()
    {
        org.apache.jena.riot.system.Prologue $r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue>;

        return $r1;
    }

    public void setPrologue(org.apache.jena.riot.system.Prologue)
    {
        org.apache.jena.riot.system.Prologue r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: org.apache.jena.riot.system.Prologue;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue> = r1;

        return;
    }

    public org.apache.jena.riot.lang.LabelToNode getLabelToNode()
    {
        org.apache.jena.riot.lang.LabelToNode $r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.lang.LabelToNode labelMapping>;

        return $r1;
    }

    public void setLabelToNode(org.apache.jena.riot.lang.LabelToNode)
    {
        org.apache.jena.riot.lang.LabelToNode r1;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: org.apache.jena.riot.lang.LabelToNode;

        r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.lang.LabelToNode labelMapping> = r1;

        return;
    }

    public java.lang.String resolveIRI(java.lang.String, long, long)
    {
        org.apache.jena.riot.system.Prologue $r1;
        long l0, l1;
        java.lang.String r3, $r4;
        org.apache.jena.riot.system.IRIResolver $r2;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.system.Prologue: org.apache.jena.riot.system.IRIResolver getResolver()>();

        $r4 = virtualinvoke $r2.<org.apache.jena.riot.system.IRIResolver: java.lang.String resolveToString(java.lang.String)>(r3);

        return $r4;
    }

    public org.apache.jena.iri.IRI makeIRI(java.lang.String, long, long)
    {
        org.apache.jena.riot.system.Prologue $r1;
        long l0, l1;
        java.lang.String r3;
        org.apache.jena.riot.system.IRIResolver $r2;
        org.apache.jena.iri.IRI $r4;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r3 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.system.Prologue: org.apache.jena.riot.system.IRIResolver getResolver()>();

        $r4 = virtualinvoke $r2.<org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRI resolve(java.lang.String)>(r3);

        return $r4;
    }

    public com.hp.hpl.jena.sparql.core.Quad createQuad(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, long, long)
    {
        long l0, l1;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.Quad $r0;
        org.apache.jena.riot.system.ParserProfileBase r5;

        r5 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        $r0 = new com.hp.hpl.jena.sparql.core.Quad;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.Quad: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return $r0;
    }

    public com.hp.hpl.jena.graph.Triple createTriple(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, long, long)
    {
        long l0, l1;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.graph.Triple $r0;
        org.apache.jena.riot.system.ParserProfileBase r4;

        r4 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        $r0 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r0.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        return $r0;
    }

    public com.hp.hpl.jena.graph.Node createURI(java.lang.String, long, long)
    {
        long l0, l1;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        org.apache.jena.riot.system.ParserProfileBase r2;

        r2 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = staticinvoke <org.apache.jena.riot.system.RiotLib: com.hp.hpl.jena.graph.Node createIRIorBNode(java.lang.String)>(r0);

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node createBlankNode(com.hp.hpl.jena.graph.Node, java.lang.String, long, long)
    {
        long l0, l1;
        com.hp.hpl.jena.graph.Node r1, $r5;
        org.apache.jena.riot.lang.LabelToNode $r3;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r3 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.lang.LabelToNode labelMapping>;

        $r4 = virtualinvoke $r3.<org.apache.jena.riot.lang.LabelToNode: java.lang.Object get(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (com.hp.hpl.jena.graph.Node) $r4;

        return $r5;
    }

    public com.hp.hpl.jena.graph.Node createBlankNode(com.hp.hpl.jena.graph.Node, long, long)
    {
        org.apache.jena.riot.lang.LabelToNode $r1;
        java.lang.Object $r2;
        long l0, l1;
        com.hp.hpl.jena.graph.Node $r3, r4;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r4 := @parameter0: com.hp.hpl.jena.graph.Node;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.lang.LabelToNode labelMapping>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.lang.LabelToNode: java.lang.Object create()>();

        $r3 = (com.hp.hpl.jena.graph.Node) $r2;

        return $r3;
    }

    public com.hp.hpl.jena.graph.Node createTypedLiteral(java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype, long, long)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype r1;
        long l0, l1;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r2;
        org.apache.jena.riot.system.ParserProfileBase r3;

        r3 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.datatypes.RDFDatatype;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r0, null, r1);

        return $r2;
    }

    public com.hp.hpl.jena.graph.Node createLangLiteral(java.lang.String, java.lang.String, long, long)
    {
        long l0, l1;
        java.lang.String r0, r1;
        com.hp.hpl.jena.graph.Node $r2;
        org.apache.jena.riot.system.ParserProfileBase r3;

        r3 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String,java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype)>(r0, r1, null);

        return $r2;
    }

    public com.hp.hpl.jena.graph.Node createStringLiteral(java.lang.String, long, long)
    {
        long l0, l1;
        java.lang.String r0;
        com.hp.hpl.jena.graph.Node $r1;
        org.apache.jena.riot.system.ParserProfileBase r2;

        r2 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>(r0);

        return $r1;
    }

    public com.hp.hpl.jena.graph.Node createNodeFromToken(com.hp.hpl.jena.graph.Node, org.apache.jena.riot.tokens.Token, long, long)
    {
        long l0, l1;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.riot.tokens.Token r2;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: org.apache.jena.riot.tokens.Token;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        return null;
    }

    public com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node, org.apache.jena.riot.tokens.Token)
    {
        com.hp.hpl.jena.graph.Node $r5, $r7, $r15, $r22, $r24, $r26, r27, $r28, $r31, $r32, $r33;
        int[] $r2, $r9;
        org.apache.jena.riot.system.ParserProfileBase r4;
        java.lang.StringBuilder $r17, $r18, $r19, $r34, $r36, $r37;
        org.apache.jena.riot.RiotException $r16;
        long $l0, $l1, $l6, $l7;
        org.apache.jena.riot.tokens.Token r0, $r8;
        org.apache.jena.riot.system.ErrorHandler $r35;
        int $i2, $i3, $i4, $i5;
        java.lang.String $r1, $r6, $r11, $r12, $r13, $r20, $r29, $r30, $r38, r39;
        com.hp.hpl.jena.datatypes.xsd.XSDDatatype $r21, $r23, $r25;
        org.apache.jena.riot.tokens.TokenType $r3, $r10;
        com.hp.hpl.jena.datatypes.RDFDatatype $r14;

        r4 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r27 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: org.apache.jena.riot.tokens.Token;

        $l0 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $r1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r2 = <org.apache.jena.riot.system.ParserProfileBase$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r3 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $i2 = virtualinvoke $r3.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i3 = $r2[$i2];

        tableswitch($i3)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label01;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label13;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label13;
            default: goto label14;
        };

     label01:
        $r28 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createBlankNode(com.hp.hpl.jena.graph.Node,java.lang.String,long,long)>(r27, $r1, $l0, $l1);

        return $r28;

     label02:
        $r32 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createURI(java.lang.String,long,long)>($r1, $l0, $l1);

        return $r32;

     label03:
        $r29 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        $r30 = specialinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: java.lang.String expandPrefixedName(java.lang.String,java.lang.String,org.apache.jena.riot.tokens.Token)>($r1, $r29, r0);

        $r31 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createURI(java.lang.String,long,long)>($r30, $l0, $l1);

        return $r31;

     label04:
        $r25 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdecimal>;

        $r26 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createTypedLiteral(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype,long,long)>($r1, $r25, $l0, $l1);

        return $r26;

     label05:
        $r23 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDdouble>;

        $r24 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createTypedLiteral(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype,long,long)>($r1, $r23, $l0, $l1);

        return $r24;

     label06:
        $r21 = <com.hp.hpl.jena.datatypes.xsd.XSDDatatype: com.hp.hpl.jena.datatypes.xsd.XSDDatatype XSDinteger>;

        $r22 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createTypedLiteral(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype,long,long)>($r1, $r21, $l0, $l1);

        return $r22;

     label07:
        $r8 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token getSubToken2()>();

        $r9 = <org.apache.jena.riot.system.ParserProfileBase$1: int[] $SwitchMap$org$apache$jena$riot$tokens$TokenType>;

        $r10 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.TokenType getType()>();

        $i4 = virtualinvoke $r10.<org.apache.jena.riot.tokens.TokenType: int ordinal()>();

        $i5 = $r9[$i4];

        lookupswitch($i5)
        {
            case 1: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        r39 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        goto label11;

     label09:
        $r11 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r12 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        r39 = specialinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: java.lang.String expandPrefixedName(java.lang.String,java.lang.String,org.apache.jena.riot.tokens.Token)>($r11, $r12, $r8);

        goto label11;

     label10:
        $r16 = new org.apache.jena.riot.RiotException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected IRI for datatype: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label11:
        $l6 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l7 = virtualinvoke $r8.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        $r13 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: java.lang.String resolveIRI(java.lang.String,long,long)>(r39, $l6, $l7);

        $r14 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.datatypes.RDFDatatype getType(java.lang.String)>($r13);

        $r15 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createTypedLiteral(java.lang.String,com.hp.hpl.jena.datatypes.RDFDatatype,long,long)>($r1, $r14, $l0, $l1);

        return $r15;

     label12:
        $r6 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        $r7 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createLangLiteral(java.lang.String,java.lang.String,long,long)>($r1, $r6, $l0, $l1);

        return $r7;

     label13:
        $r5 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createStringLiteral(java.lang.String,long,long)>($r1, $l0, $l1);

        return $r5;

     label14:
        $r33 = virtualinvoke r4.<org.apache.jena.riot.system.ParserProfileBase: com.hp.hpl.jena.graph.Node createNodeFromToken(com.hp.hpl.jena.graph.Node,org.apache.jena.riot.tokens.Token,long,long)>(r27, r0, $l0, $l1);

        if $r33 == null goto label15;

        return $r33;

     label15:
        $r35 = r4.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.ErrorHandler errorHandler>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a valid token for an RDF term: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.jena.riot.system.ErrorHandler: void fatal(java.lang.String,long,long)>($r38, $l0, $l1);

        return null;
    }

    private java.lang.String expandPrefixedName(java.lang.String, java.lang.String, org.apache.jena.riot.tokens.Token)
    {
        org.apache.jena.riot.system.Prologue $r1;
        long $l0, $l1;
        org.apache.jena.riot.tokens.Token r11;
        org.apache.jena.riot.system.PrefixMap $r2;
        org.apache.jena.riot.system.ErrorHandler $r7;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String r3, r4, $r5, $r10;
        org.apache.jena.riot.system.ParserProfileBase r0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r11 := @parameter2: org.apache.jena.riot.tokens.Token;

        $r1 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.Prologue prologue>;

        $r2 = virtualinvoke $r1.<org.apache.jena.riot.system.Prologue: org.apache.jena.riot.system.PrefixMap getPrefixMap()>();

        $r5 = interfaceinvoke $r2.<org.apache.jena.riot.system.PrefixMap: java.lang.String expand(java.lang.String,java.lang.String)>(r3, r4);

        if $r5 != null goto label1;

        $r7 = r0.<org.apache.jena.riot.system.ParserProfileBase: org.apache.jena.riot.system.ErrorHandler errorHandler>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Undefined prefix: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $l0 = virtualinvoke r11.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l1 = virtualinvoke r11.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        interfaceinvoke $r7.<org.apache.jena.riot.system.ErrorHandler: void fatal(java.lang.String,long,long)>($r10, $l0, $l1);

     label1:
        return $r5;
    }

    public boolean isStrictMode()
    {
        org.apache.jena.riot.system.ParserProfileBase r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        $z0 = r0.<org.apache.jena.riot.system.ParserProfileBase: boolean strictMode>;

        return $z0;
    }

    public void setStrictMode(boolean)
    {
        org.apache.jena.riot.system.ParserProfileBase r0;
        boolean z0;

        r0 := @this: org.apache.jena.riot.system.ParserProfileBase;

        z0 := @parameter0: boolean;

        r0.<org.apache.jena.riot.system.ParserProfileBase: boolean strictMode> = z0;

        return;
    }
}
