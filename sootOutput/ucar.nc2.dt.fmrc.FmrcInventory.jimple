public class ucar.nc2.dt.fmrc.FmrcInventory extends java.lang.Object
{
    private static org.slf4j.Logger log;
    private static java.text.SimpleDateFormat dateFormatShort;
    private static java.text.SimpleDateFormat dateFormat;
    private static boolean debug;
    private java.lang.String name;
    private int tc_seqno;
    private java.util.List timeCoords;
    private int ec_seqno;
    private java.util.List ensCoords;
    private int vc_seqno;
    private java.util.List vertCoords;
    private int run_seqno;
    private java.util.List runSequences;
    private java.util.Map uvHash;
    private java.util.List varList;
    private java.util.Set runTimeHash;
    private java.util.List runTimeList;
    private java.util.Set offsetHash;
    private java.util.List offsetList;
    private java.util.Set forecastTimeHash;
    private java.util.List forecastTimeList;
    private java.lang.String fmrcDefinitionDir;
    private ucar.nc2.dt.fmrc.FmrcDefinition definition;
    private ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll;
    private java.util.Calendar cal;
    private ucar.nc2.units.DateFormatter formatter;
    private static boolean debugTiming;

    void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.HashMap $r5;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;
        java.util.HashSet $r6, $r7, $r8;
        java.util.Calendar $r21;
        int $i0;
        java.lang.String r11, r12, $r14, $r18, $r20, $r23;
        boolean $z0;
        org.slf4j.Logger $r16;
        java.util.GregorianCalendar $r9;
        java.util.TimeZone $r22;
        ucar.nc2.dt.fmrc.FmrcDefinition $r13;
        java.lang.StringBuilder $r15, $r17, $r19;
        ucar.nc2.units.DateFormatter $r10;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int tc_seqno> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List timeCoords> = $r1;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int ec_seqno> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List ensCoords> = $r2;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int vc_seqno> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List vertCoords> = $r3;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int run_seqno> = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runSequences> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Map uvHash> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set runTimeHash> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set offsetHash> = $r7;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set forecastTimeHash> = $r8;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition> = null;

        $r9 = new java.util.GregorianCalendar;

        specialinvoke $r9.<java.util.GregorianCalendar: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal> = $r9;

        $r10 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r10.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.units.DateFormatter formatter> = $r10;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String fmrcDefinitionDir> = r11;

        $i0 = virtualinvoke r12.<java.lang.String: int indexOf(java.lang.String)>(".fmrcDefinition.xml");

        if $i0 <= 0 goto label1;

        $r23 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name> = $r23;

        goto label2;

     label1:
        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name> = r12;

     label2:
        $r13 = new ucar.nc2.dt.fmrc.FmrcDefinition;

        specialinvoke $r13.<ucar.nc2.dt.fmrc.FmrcDefinition: void <init>()>();

        $r14 = virtualinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        $z0 = virtualinvoke $r13.<ucar.nc2.dt.fmrc.FmrcDefinition: boolean readDefinitionXML(java.lang.String)>($r14);

        if $z0 == 0 goto label3;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition> = $r13;

        goto label4;

     label3:
        $r16 = <ucar.nc2.dt.fmrc.FmrcInventory: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcCollection has no Definition ");

        $r18 = virtualinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r20);

     label4:
        $r21 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal>;

        $r22 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r21.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r22);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getDefinitionPath()
    {
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r10, $r12, $r13;
        java.lang.String $r1, $r4, $r7, $r9, $r11, $r14;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String fmrcDefinitionDir>;

        if $r1 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String fmrcDefinitionDir>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".fmrcDefinition.xml");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("./");

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".fmrcDefinition.xml");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.util.List getTimeCoords()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List timeCoords>;

        return $r1;
    }

    public java.util.List getRunSequences()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runSequences>;

        return $r1;
    }

    public java.util.List getEnsCoords()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List ensCoords>;

        return $r1;
    }

    public java.util.List getVertCoords()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List vertCoords>;

        return $r1;
    }

    public java.lang.String getSuffixFilter()
    {
        java.lang.String $r3;
        ucar.nc2.dt.fmrc.FmrcDefinition $r1, $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.FmrcDefinition: java.lang.String getSuffixFilter()>();

     label2:
        return $r3;
    }

    public ucar.nc2.dt.fmrc.FmrcDefinition getDefinition()
    {
        ucar.nc2.dt.fmrc.FmrcDefinition $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        return $r1;
    }

    void addRun(ucar.nc2.dt.fmrc.ForecastModelRunInventory)
    {
        java.util.Date $r3, $r10, $r35, $r36, $r38;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.Map $r16, $r22;
        boolean $z0, $z1, $z2;
        java.util.Set $r2, $r40, $r41;
        ucar.nc2.dt.fmrc.FmrcDefinition $r18, $r24;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory r1;
        java.util.List $r4, $r12, $r39, $r43;
        java.lang.StringBuilder $r26, $r28, $r30, $r31, $r33, $r45, $r47, $r49;
        ucar.nc2.dt.fmrc.FmrcInventory$Run $r9;
        java.lang.Double $r42;
        double[] $r11;
        ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq $r25;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord r7, $r8, r51;
        ucar.nc2.dt.fmrc.FmrcInventory$Inventory $r37;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid $r19, r53;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r15, $r20, $r21, $r23, $r29, $r32, $r34, $r44, $r48, $r50;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid r52;
        double d0;
        java.io.PrintStream $r46;
        org.slf4j.Logger $r27;
        java.util.Iterator $r5, $r13;
        java.lang.Object $r6, $r14, $r17;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter0: ucar.nc2.dt.fmrc.ForecastModelRunInventory;

        $z0 = <ucar.nc2.dt.fmrc.FmrcInventory: boolean debug>;

        if $z0 == 0 goto label01;

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Adding ForecastModelRun ");

        $r48 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.lang.String getRunDateString()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r50);

     label01:
        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set runTimeHash>;

        $r3 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.util.Date getRunDate()>();

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.util.List getTimeCoords()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord) $r6;

        $r8 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord findTime(ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord)>(r7);

        r51 = $r8;

        if $r8 != null goto label03;

        $r43 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List timeCoords>;

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>(r7);

        r51 = r7;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int tc_seqno>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r7.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: void setId(java.lang.String)>($r44);

        $i1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int tc_seqno>;

        $i2 = $i1 + 1;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int tc_seqno> = $i2;

     label03:
        $r9 = new ucar.nc2.dt.fmrc.FmrcInventory$Run;

        $r10 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.util.Date getRunDate()>();

        specialinvoke $r9.<ucar.nc2.dt.fmrc.FmrcInventory$Run: void <init>(java.util.Date,ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord)>($r10, r51);

        $r11 = virtualinvoke r51.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: double[] getOffsetHours()>();

        $i3 = lengthof $r11;

        i4 = 0;

     label04:
        if i4 >= $i3 goto label05;

        d0 = $r11[i4];

        $r35 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.util.Date getRunDate()>();

        $r36 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Date addHour(java.util.Date,double)>($r35, d0);

        $r37 = new ucar.nc2.dt.fmrc.FmrcInventory$Inventory;

        $r38 = virtualinvoke r1.<ucar.nc2.dt.fmrc.ForecastModelRunInventory: java.util.Date getRunDate()>();

        specialinvoke $r37.<ucar.nc2.dt.fmrc.FmrcInventory$Inventory: void <init>(ucar.nc2.dt.fmrc.FmrcInventory,java.util.Date,java.util.Date,double)>(r0, $r38, $r36, d0);

        $r39 = $r9.<ucar.nc2.dt.fmrc.FmrcInventory$Run: java.util.List invList>;

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r37);

        $r40 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set forecastTimeHash>;

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>($r36);

        $r41 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set offsetHash>;

        $r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>($r42);

        i4 = i4 + 1;

        goto label04;

     label05:
        $r12 = virtualinvoke r7.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: java.util.List getGrids()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r52 = (ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid) $r14;

        $r16 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Map uvHash>;

        $r15 = r52.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: java.lang.String name>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        r53 = (ucar.nc2.dt.fmrc.FmrcInventory$UberGrid) $r17;

        if r53 != null goto label08;

        $r18 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        if $r18 == null goto label07;

        $r24 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        $r23 = r52.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: java.lang.String name>;

        $r25 = virtualinvoke $r24.<ucar.nc2.dt.fmrc.FmrcDefinition: ucar.nc2.dt.fmrc.FmrcDefinition$RunSeq findSeqForVariable(java.lang.String)>($r23);

        if null != $r25 goto label07;

        $r27 = <ucar.nc2.dt.fmrc.FmrcInventory: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FmrcCollection Definition ");

        $r29 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not contain variable ");

        $r32 = r52.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: java.lang.String name>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

        goto label06;

     label07:
        $r19 = new ucar.nc2.dt.fmrc.FmrcInventory$UberGrid;

        $r20 = r52.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: java.lang.String name>;

        specialinvoke $r19.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: void <init>(ucar.nc2.dt.fmrc.FmrcInventory,java.lang.String)>(r0, $r20);

        r53 = $r19;

        $r22 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Map uvHash>;

        $r21 = r52.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: java.lang.String name>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r19);

     label08:
        virtualinvoke r53.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: void addRun(ucar.nc2.dt.fmrc.FmrcInventory$Run,ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid)>($r9, r52);

        goto label06;

     label09:
        goto label02;

     label10:
        return;
    }

    void finish()
    {
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.Map $r2;
        boolean $z0;
        java.util.Collection $r3;
        java.util.Set $r5, $r6, $r13, $r14, $r21, $r22;
        java.util.List $r4, $r11, $r12, $r19, $r20, $r27, $r28, $r29, $r33;
        java.util.Date[] $r7, $r9, $r10, $r15, $r17, $r18;
        ucar.nc2.dt.fmrc.FmrcInventory$RunSeq $r34, $r35;
        java.lang.Object[] $r8, $r16, $r24;
        java.util.ArrayList $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid r32;
        int $i0, $i1, $i2;
        java.util.Iterator $r30;
        java.lang.Double[] $r23, $r25, $r26;
        java.lang.Object $r31;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Map uvHash>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList> = $r1;

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r6 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set runTimeHash>;

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set runTimeHash>;

        $i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        $r7 = newarray (java.util.Date)[$i0];

        $r8 = interfaceinvoke $r6.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.util.Date[]) $r8;

        $r10 = (java.util.Date[]) $r9;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList> = $r11;

        $r12 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r12);

        $r14 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set forecastTimeHash>;

        $r13 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set forecastTimeHash>;

        $i1 = interfaceinvoke $r13.<java.util.Set: int size()>();

        $r15 = newarray (java.util.Date)[$i1];

        $r16 = interfaceinvoke $r14.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (java.util.Date[]) $r16;

        $r18 = (java.util.Date[]) $r17;

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList> = $r19;

        $r20 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r20);

        $r22 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set offsetHash>;

        $r21 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set offsetHash>;

        $i2 = interfaceinvoke $r21.<java.util.Set: int size()>();

        $r23 = newarray (java.lang.Double)[$i2];

        $r24 = interfaceinvoke $r22.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r23);

        $r25 = (java.lang.Double[]) $r24;

        $r26 = (java.lang.Double[]) $r25;

        $r27 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r26);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList> = $r27;

        $r28 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r28);

        $r29 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (ucar.nc2.dt.fmrc.FmrcInventory$UberGrid) $r31;

        virtualinvoke r32.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: void finish()>();

        $r33 = r32.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.util.List runs>;

        $r34 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$RunSeq findRunSequence(java.util.List)>($r33);

        r32.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: ucar.nc2.dt.fmrc.FmrcInventory$RunSeq seq> = $r34;

        $r35 = r32.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: ucar.nc2.dt.fmrc.FmrcInventory$RunSeq seq>;

        virtualinvoke $r35.<ucar.nc2.dt.fmrc.FmrcInventory$RunSeq: void addVariable(ucar.nc2.dt.fmrc.FmrcInventory$UberGrid)>(r32);

        goto label1;

     label2:
        return;
    }

    private ucar.nc2.dt.fmrc.FmrcInventory$UberGrid findVar(java.lang.String)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid r4;
        java.lang.Object $r3;
        java.lang.String r5, $r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.fmrc.FmrcInventory$UberGrid) $r3;

        $r6 = r4.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.lang.String name>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private ucar.nc2.dt.fmrc.FmrcInventory$RunSeq findRunSequence(java.util.List)
    {
        ucar.nc2.dt.fmrc.FmrcInventory$RunSeq $r3, r7;
        java.util.Iterator $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.List $r1, r4, $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r4 := @parameter0: java.util.List;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runSequences>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.dt.fmrc.FmrcInventory$RunSeq) $r6;

        $z1 = virtualinvoke r7.<ucar.nc2.dt.fmrc.FmrcInventory$RunSeq: boolean equalsData(java.util.List)>(r4);

        if $z1 == 0 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        $r3 = new ucar.nc2.dt.fmrc.FmrcInventory$RunSeq;

        specialinvoke $r3.<ucar.nc2.dt.fmrc.FmrcInventory$RunSeq: void <init>(ucar.nc2.dt.fmrc.FmrcInventory,java.util.List)>(r0, r4);

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runSequences>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    private ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord findTime(ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord r4, r5;
        java.util.List $r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r5 := @parameter0: ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List timeCoords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord) $r3;

        $z1 = virtualinvoke r5.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord: boolean equalsData(ucar.nc2.dt.fmrc.ForecastModelRunInventory$TimeCoord)>(r4);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord findEnsCoord(ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.List $r1;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord r4, r5;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r5 := @parameter0: ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List ensCoords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord) $r3;

        $z1 = virtualinvoke r5.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord: boolean equalsData(ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord)>(r4);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord findVertCoord(ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord r4, r5;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.List $r1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r5 := @parameter0: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List vertCoords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord) $r3;

        $z1 = virtualinvoke r5.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord: boolean equalsData(ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord)>(r4);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private java.util.Date addHour(java.util.Date, double)
    {
        java.util.Date r1, $r6;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        java.util.Calendar $r2, $r3, $r4, $r5;
        int i0, $i1, i2;
        double d0, $d1, $d2;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter0: java.util.Date;

        d0 := @parameter1: double;

        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal>;

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        i0 = (int) d0;

        $d1 = (double) i0;

        $d2 = d0 - $d1;

        $i1 = (int) $d2;

        i2 = $i1 * 60;

        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal>;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(11, i0);

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal>;

        virtualinvoke $r4.<java.util.Calendar: void add(int,int)>(12, i2);

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Calendar cal>;

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.util.Date getTime()>();

        return $r6;
    }

    private double getOffsetHour(java.util.Date, java.util.Date)
    {
        java.util.Date r0, r1;
        long $l0, $l1, $l2;
        ucar.nc2.dt.fmrc.FmrcInventory r2;
        double d0, $d1, $d2, $d3;

        r2 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter0: java.util.Date;

        r0 := @parameter1: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        d0 = (double) $l2;

        $d1 = d0 / 1000.0;

        $d2 = $d1 / 60.0;

        $d3 = $d2 / 60.0;

        return $d3;
    }

    public java.lang.String writeMatrixXML(java.lang.String)
    {
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        ucar.nc2.dt.fmrc.FmrcInventory r3;
        org.jdom.Document $r4, $r6;
        java.lang.String r2, $r5, $r7;

        r3 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        if r2 != null goto label1;

        $r6 = virtualinvoke r3.<ucar.nc2.dt.fmrc.FmrcInventory: org.jdom.Document makeMatrixDocument()>();

        $r7 = virtualinvoke $r0.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r6);

        return $r7;

     label1:
        $r4 = virtualinvoke r3.<ucar.nc2.dt.fmrc.FmrcInventory: org.jdom.Document makeMatrixDocument(java.lang.String)>(r2);

        $r5 = virtualinvoke $r0.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r4);

        return $r5;
    }

    public void writeMatrixXML(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r5;
        org.jdom.Document $r4, $r6;
        org.jdom.output.Format $r1;
        org.jdom.output.XMLOutputter $r0;
        java.lang.String r2;
        ucar.nc2.dt.fmrc.FmrcInventory r3;

        r3 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.io.OutputStream;

        $r0 = new org.jdom.output.XMLOutputter;

        $r1 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r1);

        if r2 != null goto label1;

        $r6 = virtualinvoke r3.<ucar.nc2.dt.fmrc.FmrcInventory: org.jdom.Document makeMatrixDocument()>();

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r6, r5);

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<ucar.nc2.dt.fmrc.FmrcInventory: org.jdom.Document makeMatrixDocument(java.lang.String)>(r2);

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r4, r5);

     label2:
        return;
    }

    public org.jdom.Document makeMatrixDocument()
    {
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        org.jdom.Document $r58;
        ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset $r1, $r18, $r21, $r29, $r31, $r39, $r42, $r56;
        java.lang.Double r37, r52;
        java.text.SimpleDateFormat $r14, $r27;
        short $s3, $s4, $s8, $s9;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid r53;
        java.lang.String $r4, $r15, $r28, $r38, $r47, $r50;
        org.jdom.Element $r57, $r59, $r60, $r61, $r62, $r63, $r64;
        java.util.Date r54, r55;
        short[][] $r19, $r22, $r40, $r43;
        int[] $r30, $r32;
        boolean $z0, $z1;
        java.util.List $r5, $r7, $r9, $r10, $r12, $r16, $r25, $r33, $r35;
        short[] $r20, $r23, $r41, $r44;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i10, $i11, i12, i13, i14, i15, $i16, $i17, $i19, $i20, $i21, $i23, $i25;
        java.util.Iterator $r6, $r8;
        java.lang.Object $r13, $r26, $r36, $r45, $r48;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        if $r1 != null goto label01;

        $r56 = new ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset;

        specialinvoke $r56.<ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: void <init>(ucar.nc2.dt.fmrc.FmrcInventory)>(r0);

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll> = $r56;

     label01:
        $r57 = new org.jdom.Element;

        specialinvoke $r57.<org.jdom.Element: void <init>(java.lang.String)>("forecastModelRunCollectionInventory");

        $r58 = new org.jdom.Document;

        specialinvoke $r58.<org.jdom.Document: void <init>(org.jdom.Element)>($r57);

        $r4 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dataset", $r4);

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r48 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.lang.Double) $r48;

        $r59 = new org.jdom.Element;

        specialinvoke $r59.<org.jdom.Element: void <init>(java.lang.String)>("offsetTime");

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r59);

        $r50 = virtualinvoke r52.<java.lang.Double: java.lang.String toString()>();

        virtualinvoke $r59.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("hours", $r50);

        goto label02;

     label03:
        $r7 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r45 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r53 = (ucar.nc2.dt.fmrc.FmrcInventory$UberGrid) $r45;

        $r60 = new org.jdom.Element;

        specialinvoke $r60.<org.jdom.Element: void <init>(java.lang.String)>("variable");

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r60);

        $r47 = r53.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.lang.String name>;

        virtualinvoke $r60.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r47);

        $i11 = r53.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countInv>;

        $i10 = r53.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: int countExpected>;

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i11, $i10, $r60, 0);

        goto label04;

     label05:
        $r9 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        i12 = $i0 - 1;

     label06:
        if i12 < 0 goto label09;

        $r61 = new org.jdom.Element;

        specialinvoke $r61.<org.jdom.Element: void <init>(java.lang.String)>("run");

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r61);

        $r25 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i12);

        r54 = (java.util.Date) $r26;

        $r27 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat>;

        $r28 = virtualinvoke $r27.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r54);

        virtualinvoke $r61.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r28);

        $r29 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r30 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] access$1800(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r29);

        $i5 = $r30[i12];

        $r31 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r32 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: int[] access$1900(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r31);

        $i6 = $r32[i12];

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i5, $i6, $r61, 1);

        i13 = 0;

     label07:
        $r33 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $i7 = interfaceinvoke $r33.<java.util.List: int size()>();

        if i13 >= $i7 goto label08;

        $r62 = new org.jdom.Element;

        specialinvoke $r62.<org.jdom.Element: void <init>(java.lang.String)>("offset");

        virtualinvoke $r61.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r62);

        $r35 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $r36 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>(i13);

        r37 = (java.lang.Double) $r36;

        $r38 = virtualinvoke r37.<java.lang.Double: java.lang.String toString()>();

        virtualinvoke $r62.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("hours", $r38);

        $r39 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r40 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] access$2000(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r39);

        $r41 = $r40[i12];

        $s8 = $r41[i13];

        $r42 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r43 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] access$2100(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r42);

        $r44 = $r43[i12];

        $s9 = $r44[i13];

        $i16 = (int) $s8;

        $i17 = (int) $s9;

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i16, $i17, $r62, 0);

        i13 = i13 + 1;

        goto label07;

     label08:
        $i19 = (int) -1;

        i12 = i12 + $i19;

        goto label06;

     label09:
        $r10 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        i14 = $i1 - 1;

     label10:
        if i14 < 0 goto label13;

        $r63 = new org.jdom.Element;

        specialinvoke $r63.<org.jdom.Element: void <init>(java.lang.String)>("forecastTime");

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r63);

        $r12 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i14);

        r55 = (java.util.Date) $r13;

        $r14 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat>;

        $r15 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r55);

        virtualinvoke $r63.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r15);

        $r16 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $i2 = interfaceinvoke $r16.<java.util.List: int size()>();

        i15 = $i2 - 1;

     label11:
        if i15 < 0 goto label12;

        $r64 = new org.jdom.Element;

        specialinvoke $r64.<org.jdom.Element: void <init>(java.lang.String)>("runTime");

        virtualinvoke $r63.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r64);

        $r18 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r19 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] access$2200(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r18);

        $r20 = $r19[i14];

        $s3 = $r20[i15];

        $r21 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset tmAll>;

        $r22 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset: short[][] access$2300(ucar.nc2.dt.fmrc.FmrcInventory$TimeMatrixDataset)>($r21);

        $r23 = $r22[i14];

        $s4 = $r23[i15];

        $i20 = (int) $s3;

        $i21 = (int) $s4;

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i20, $i21, $r64, 0);

        $i23 = (int) -1;

        i15 = i15 + $i23;

        goto label11;

     label12:
        $i25 = (int) -1;

        i14 = i14 + $i25;

        goto label10;

     label13:
        return $r58;
    }

    private void addCountPercent(int, int, org.jdom.Element, boolean)
    {
        ucar.nc2.dt.fmrc.FmrcInventory r8;
        int i0, i1, i2;
        java.lang.String $r5, $r6, $r7;
        double $d0, $d1, $d2, $d3;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        org.jdom.Element r0;

        r8 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.jdom.Element;

        z0 := @parameter3: boolean;

        if i0 == i1 goto label1;

        if i1 != 0 goto label2;

     label1:
        if i0 == 0 goto label2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("count", $r7);

        if z0 == 0 goto label3;

        virtualinvoke r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("percent", "100");

        goto label3;

     label2:
        if i1 == 0 goto label3;

        $d0 = (double) i0;

        $d2 = 100.0 * $d0;

        $d1 = (double) i1;

        $d3 = $d2 / $d1;

        i2 = (int) $d3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("count", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        virtualinvoke r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("percent", $r6);

     label3:
        return;
    }

    public org.jdom.Document makeMatrixDocument(java.lang.String)
    {
        java.util.Date r41, r43, r44;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        org.jdom.Document $r48;
        boolean $z0;
        java.util.List $r7, $r8, $r9, $r11, $r15, $r17, $r21, $r26, $r32;
        java.lang.StringBuilder $r37, $r38, $r45;
        java.lang.Double r40, r42;
        java.text.SimpleDateFormat $r13, $r23;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, $i13, $i15, $i17;
        ucar.nc2.dt.fmrc.FmrcInventory$RunExpected $r19, $r25;
        java.lang.String r1, $r5, $r6, $r14, $r24, $r30, $r34, $r39;
        double $d0, $d1;
        java.util.Iterator $r27;
        java.lang.IllegalArgumentException $r46;
        java.lang.Object $r12, $r18, $r22, $r28, $r33;
        org.jdom.Element $r47, $r49, $r50, $r51, $r52, $r53;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$UberGrid findVar(java.lang.String)>(r1);

        if $r2 != null goto label01;

        $r46 = new java.lang.IllegalArgumentException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No variable named = ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        throw $r46;

     label01:
        $r47 = new org.jdom.Element;

        specialinvoke $r47.<org.jdom.Element: void <init>(java.lang.String)>("forecastModelRunCollectionInventory");

        $r48 = new org.jdom.Document;

        specialinvoke $r48.<org.jdom.Document: void <init>(org.jdom.Element)>($r47);

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        virtualinvoke $r47.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("dataset", $r5);

        $r6 = $r2.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.lang.String name>;

        virtualinvoke $r47.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("variable", $r6);

        i8 = 0;

     label02:
        $r7 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i8 >= $i0 goto label03;

        $r49 = new org.jdom.Element;

        specialinvoke $r49.<org.jdom.Element: void <init>(java.lang.String)>("offsetTime");

        virtualinvoke $r47.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r49);

        $r32 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i8);

        r40 = (java.lang.Double) $r33;

        $r34 = virtualinvoke r40.<java.lang.Double: java.lang.String toString()>();

        virtualinvoke $r49.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("hour", $r34);

        i8 = i8 + 1;

        goto label02;

     label03:
        $r8 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        i9 = $i1 - 1;

     label04:
        if i9 < 0 goto label07;

        $r50 = new org.jdom.Element;

        specialinvoke $r50.<org.jdom.Element: void <init>(java.lang.String)>("run");

        virtualinvoke $r47.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r50);

        $r21 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i9);

        r41 = (java.util.Date) $r22;

        $r23 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat>;

        $r24 = virtualinvoke $r23.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r41);

        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r24);

        $r25 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: ucar.nc2.dt.fmrc.FmrcInventory$RunExpected findRun(java.util.Date)>(r41);

        $r26 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        $r27 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.lang.Double) $r28;

        $r51 = new org.jdom.Element;

        specialinvoke $r51.<org.jdom.Element: void <init>(java.lang.String)>("offset");

        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r51);

        $d1 = virtualinvoke r42.<java.lang.Double: double doubleValue()>();

        $r30 = virtualinvoke r42.<java.lang.Double: java.lang.String toString()>();

        virtualinvoke $r51.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("hour", $r30);

        $i6 = virtualinvoke $r25.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countInventory(double)>($d1);

        $i7 = virtualinvoke $r25.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countExpected(double)>($d1);

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i6, $i7, $r51, 0);

        goto label05;

     label06:
        $i13 = (int) -1;

        i9 = i9 + $i13;

        goto label04;

     label07:
        $r9 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        i10 = $i2 - 1;

     label08:
        if i10 < 0 goto label11;

        $r52 = new org.jdom.Element;

        specialinvoke $r52.<org.jdom.Element: void <init>(java.lang.String)>("forecastTime");

        virtualinvoke $r47.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r52);

        $r11 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i10);

        r43 = (java.util.Date) $r12;

        $r13 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat>;

        $r14 = virtualinvoke $r13.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r43);

        virtualinvoke $r52.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r14);

        $r15 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $i3 = interfaceinvoke $r15.<java.util.List: int size()>();

        i11 = $i3 - 1;

     label09:
        if i11 < 0 goto label10;

        $r53 = new org.jdom.Element;

        specialinvoke $r53.<org.jdom.Element: void <init>(java.lang.String)>("runTime");

        virtualinvoke $r52.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r53);

        $r17 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i11);

        r44 = (java.util.Date) $r18;

        $r19 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: ucar.nc2.dt.fmrc.FmrcInventory$RunExpected findRun(java.util.Date)>(r44);

        $d0 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: double getOffsetHour(java.util.Date,java.util.Date)>(r44, r43);

        $i4 = virtualinvoke $r19.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countInventory(double)>($d0);

        $i5 = virtualinvoke $r19.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: int countExpected(double)>($d0);

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addCountPercent(int,int,org.jdom.Element,boolean)>($i4, $i5, $r53, 0);

        $i15 = (int) -1;

        i11 = i11 + $i15;

        goto label09;

     label10:
        $i17 = (int) -1;

        i10 = i10 + $i17;

        goto label08;

     label11:
        return $r48;
    }

    public java.lang.String showOffsetHour(java.lang.String, java.lang.String)
    {
        java.util.Date $r22, $r29;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        boolean $z0, $z1;
        java.util.List $r9, $r15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r32, $r33, $r34;
        ucar.nc2.dt.fmrc.FmrcInventory$Run $r21, $r28;
        ucar.nc2.units.DateFormatter $r23, $r30;
        ucar.nc2.dt.fmrc.FmrcDefinition$Grid $r19;
        double[] $r20, $r27;
        ucar.nc2.dt.fmrc.FmrcInventory$UberGrid $r2;
        int $i0, $i1, i2, i3;
        ucar.nc2.dt.fmrc.FmrcInventory$RunExpected r36, r37;
        java.lang.String r1, r3, $r17, $r24, $r31, $r35;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid $r26;
        double $d0, $d1, $d2;
        java.util.Iterator $r10, $r16;
        java.lang.Object $r18, $r25;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory$UberGrid findVar(java.lang.String)>(r1);

        if $r2 != null goto label01;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No variable named = ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;

     label01:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inventory for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for offset hour= ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = $r2.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.util.List runs>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r25 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.dt.fmrc.FmrcInventory$RunExpected) $r25;

        $r26 = r36.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid grid>;

        $r27 = virtualinvoke $r26.<ucar.nc2.dt.fmrc.ForecastModelRunInventory$Grid: double[] getVertCoords(double)>($d0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Run ");

        $r30 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.units.DateFormatter formatter>;

        $r28 = r36.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: ucar.nc2.dt.fmrc.FmrcInventory$Run run>;

        $r29 = $r28.<ucar.nc2.dt.fmrc.FmrcInventory$Run: java.util.Date runTime>;

        $r31 = virtualinvoke $r30.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r29);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        i2 = 0;

     label03:
        $i1 = lengthof $r27;

        if i2 >= $i1 goto label05;

        if i2 <= 0 goto label04;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label04:
        $d2 = $r27[i2];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        i2 = i2 + 1;

        goto label03;

     label05:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label02;

     label06:
        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nExpected for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for offset hour= ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = $r2.<ucar.nc2.dt.fmrc.FmrcInventory$UberGrid: java.util.List runs>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r18 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r37 = (ucar.nc2.dt.fmrc.FmrcInventory$RunExpected) $r18;

        $r19 = r37.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: ucar.nc2.dt.fmrc.FmrcDefinition$Grid expectedGrid>;

        $r20 = virtualinvoke $r19.<ucar.nc2.dt.fmrc.FmrcDefinition$Grid: double[] getVertCoords(double)>($d0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Run ");

        $r23 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.units.DateFormatter formatter>;

        $r21 = r37.<ucar.nc2.dt.fmrc.FmrcInventory$RunExpected: ucar.nc2.dt.fmrc.FmrcInventory$Run run>;

        $r22 = $r21.<ucar.nc2.dt.fmrc.FmrcInventory$Run: java.util.Date runTime>;

        $r24 = virtualinvoke $r23.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r22);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        i3 = 0;

     label08:
        $i0 = lengthof $r20;

        if i3 >= $i0 goto label10;

        if i3 <= 0 goto label09;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label09:
        $d1 = $r20[i3];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        i3 = i3 + 1;

        goto label08;

     label10:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label07;

     label11:
        $r17 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public static ucar.nc2.dt.fmrc.FmrcInventory makeFromDirectory(java.lang.String, java.lang.String, ucar.nc2.util.DiskCache2, java.lang.String, java.lang.String, int) throws java.lang.Exception
    {
        long $l0, $l2, l5;
        ucar.nc2.dt.fmrc.FmrcInventory $r0;
        int i1, i3, i4;
        ucar.nc2.util.DiskCache2 r15;
        java.lang.String r1, r2, $r3, r5, $r12, $r14, $r16, r18;
        boolean $z0, $z1;
        java.io.PrintStream $r8;
        java.io.File $r4, r13;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory $r17;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.io.File[] $r6;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r15 := @parameter2: ucar.nc2.util.DiskCache2;

        r5 := @parameter3: java.lang.String;

        r18 := @parameter4: java.lang.String;

        i3 := @parameter5: int;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new ucar.nc2.dt.fmrc.FmrcInventory;

        specialinvoke $r0.<ucar.nc2.dt.fmrc.FmrcInventory: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r3 = virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getSuffixFilter()>();

        if $r3 == null goto label1;

        r18 = virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getSuffixFilter()>();

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r5);

        $r6 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        if null != $r6 goto label2;

        return null;

     label2:
        i1 = lengthof $r6;

        i4 = 0;

     label3:
        if i4 >= i1 goto label6;

        r13 = $r6[i4];

        $r14 = virtualinvoke r13.<java.io.File: java.lang.String getPath()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean endsWith(java.lang.String)>(r18);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r16 = virtualinvoke r13.<java.io.File: java.lang.String getPath()>();

        $r17 = staticinvoke <ucar.nc2.dt.fmrc.ForecastModelRunInventory: ucar.nc2.dt.fmrc.ForecastModelRunInventory open(ucar.nc2.util.DiskCache2,java.lang.String,int,boolean)>(r15, $r16, i3, 1);

        if null == $r17 goto label5;

        virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcInventory: void addRun(ucar.nc2.dt.fmrc.ForecastModelRunInventory)>($r17);

     label5:
        i4 = i4 + 1;

        goto label3;

     label6:
        virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcInventory: void finish()>();

        $z0 = <ucar.nc2.dt.fmrc.FmrcInventory: boolean debugTiming>;

        if $z0 == 0 goto label7;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = $l2 - $l0;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("that took = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label7:
        return $r0;
    }

    public static void main2(java.lang.String[]) throws java.lang.Exception
    {
        ucar.nc2.dt.fmrc.FmrcInventory $r4;
        ucar.nc2.dt.fmrc.FmrcDefinition $r5, $r12;
        java.lang.StringBuilder $r0, $r1, $r2, $r6, $r8, $r10, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r35, $r37, $r39;
        java.lang.String[] r43;
        java.lang.String $r3, $r9, $r11, $r14, $r16, $r18, $r24, $r26, $r32, $r34, $r38, $r40, $r42;
        java.io.PrintStream $r7, $r15, $r17, $r25, $r33, $r36, $r41;
        java.io.FileOutputStream $r13, $r19, $r27;

        r43 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/grib/");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nam/c20s");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory makeFromDirectory(java.lang.String,java.lang.String,ucar.nc2.util.DiskCache2,java.lang.String,java.lang.String,int)>("R:/testdata/motherlode/grid/inv/new/", "NCEP-NAM-CONUS_20km-surface", null, $r3, "grib1", 2);

        $r5 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition getDefinition()>();

        if null == $r5 goto label1;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("current definition = ");

        $r38 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40);

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r42 = virtualinvoke $r5.<ucar.nc2.dt.fmrc.FmrcDefinition: java.lang.String writeDefinitionXML()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r42);

        goto label2;

     label1:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write definition to ");

        $r9 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = new ucar.nc2.dt.fmrc.FmrcDefinition;

        specialinvoke $r12.<ucar.nc2.dt.fmrc.FmrcDefinition: void <init>()>();

        virtualinvoke $r12.<ucar.nc2.dt.fmrc.FmrcDefinition: void makeFromCollectionInventory(ucar.nc2.dt.fmrc.FmrcInventory)>($r4);

        $r13 = new java.io.FileOutputStream;

        $r14 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r14);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r16 = virtualinvoke $r12.<ucar.nc2.dt.fmrc.FmrcDefinition: java.lang.String writeDefinitionXML()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r16);

        virtualinvoke $r12.<ucar.nc2.dt.fmrc.FmrcDefinition: void writeDefinitionXML(java.io.OutputStream)>($r13);

     label2:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r18 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String writeMatrixXML(java.lang.String)>("Temperature");

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = new java.io.FileOutputStream;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/grib/");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nam/c20s");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fmrcMatrix.xml");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.lang.String)>($r24);

        virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: void writeMatrixXML(java.lang.String,java.io.OutputStream)>("Temperature", $r19);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r26 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String writeMatrixXML(java.lang.String)>(null);

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r27 = new java.io.FileOutputStream;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/grib/");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nam/c20s");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/fmrcMatrixAll.xml");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.io.FileOutputStream: void <init>(java.lang.String)>($r32);

        virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: void writeMatrixXML(java.lang.String,java.io.OutputStream)>(null, $r27);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r34 = virtualinvoke $r4.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String showOffsetHour(java.lang.String,java.lang.String)>("Temperature", "7.0");

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r34);

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        int i0, i1;
        java.lang.String[] r0, r2;
        java.lang.String r1;
        boolean $z0;

        r2 := @parameter0: java.lang.String[];

        r0 = <ucar.nc2.dt.fmrc.FmrcDefinition: java.lang.String[] fmrcDatasets>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r1 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/RUC");

        if $z0 == 0 goto label2;

        staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: void doOne(java.lang.String,int)>(r1, 72);

        goto label3;

     label2:
        staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: void doOne(java.lang.String,int)>(r1, 12);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static void doOne(java.lang.String, int) throws java.lang.Exception
    {
        ucar.nc2.dt.fmrc.FmrcInventory $r7;
        int i0;
        java.lang.String r3, $r6, $r10, $r13, $r18;
        java.io.PrintStream $r15;
        java.io.FileOutputStream $r20;
        ucar.nc2.dt.fmrc.FmrcDefinition $r19;
        java.io.File $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r14, $r16, $r17;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("D:/temp/modelDef/");

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://motherlode.ucar.edu:8080/thredds/catalog/fmrc/");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/files/catalog.xml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory makeFromCatalog(ucar.nc2.util.DiskCache2,java.lang.String,java.lang.String,int,int)>(null, $r6, $r6, i0, 2);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D:/temp/modelDef/");

        $r10 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r3, "/", "-");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".fmrcDefinition.xml");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write definition to ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = new ucar.nc2.dt.fmrc.FmrcDefinition;

        specialinvoke $r19.<ucar.nc2.dt.fmrc.FmrcDefinition: void <init>()>();

        virtualinvoke $r19.<ucar.nc2.dt.fmrc.FmrcDefinition: void makeFromCollectionInventory(ucar.nc2.dt.fmrc.FmrcInventory)>($r7);

        $r20 = new java.io.FileOutputStream;

        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.lang.String)>($r13);

        virtualinvoke $r19.<ucar.nc2.dt.fmrc.FmrcDefinition: void writeDefinitionXML(java.io.OutputStream)>($r20);

        virtualinvoke $r20.<java.io.FileOutputStream: void close()>();

        return;
    }

    public static void writeDefinitionFromCatalog(java.lang.String, java.lang.String, int) throws java.lang.Exception
    {
        java.io.PrintStream $r4;
        java.io.FileOutputStream $r10;
        ucar.nc2.dt.fmrc.FmrcDefinition $r9;
        ucar.nc2.dt.fmrc.FmrcInventory $r2;
        int i0;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.String r0, r1, $r6, $r8, $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory makeFromCatalog(java.lang.String,java.lang.String,int,int)>(r0, r1, i0, 1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write definition to ");

        $r6 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = new ucar.nc2.dt.fmrc.FmrcDefinition;

        specialinvoke $r9.<ucar.nc2.dt.fmrc.FmrcDefinition: void <init>()>();

        virtualinvoke $r9.<ucar.nc2.dt.fmrc.FmrcDefinition: void makeFromCollectionInventory(ucar.nc2.dt.fmrc.FmrcInventory)>($r2);

        $r10 = new java.io.FileOutputStream;

        $r11 = virtualinvoke $r2.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String getDefinitionPath()>();

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.lang.String)>($r11);

        virtualinvoke $r9.<ucar.nc2.dt.fmrc.FmrcDefinition: void writeDefinitionXML(java.io.OutputStream)>($r10);

        return;
    }

    public static ucar.nc2.dt.fmrc.FmrcInventory makeFromCatalog(java.lang.String, java.lang.String, int, int) throws java.lang.Exception
    {
        int i0, i1, $i3;
        ucar.nc2.util.DiskCache2 $r4;
        java.lang.String r1, r2;
        ucar.nc2.dt.fmrc.FmrcInventory $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = new ucar.nc2.util.DiskCache2;

        $i3 = (int) -1;

        specialinvoke $r4.<ucar.nc2.util.DiskCache2: void <init>(java.lang.String,boolean,int,int)>("fmrcInventory/", 1, 0, $i3);

        $r3 = staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory makeFromCatalog(ucar.nc2.util.DiskCache2,java.lang.String,java.lang.String,int,int)>($r4, r1, r2, i0, i1);

        return $r3;
    }

    public static ucar.nc2.dt.fmrc.FmrcInventory makeFromCatalog(ucar.nc2.util.DiskCache2, java.lang.String, java.lang.String, int, int) throws java.lang.Exception
    {
        long $l0, $l3, l4;
        ucar.nc2.dt.fmrc.FmrcInventory $r11;
        ucar.nc2.dt.fmrc.FmrcInventory$MyListener $r14;
        int i1, i2;
        ucar.nc2.util.DiskCache2 r0;
        java.lang.String $r2, r8, $r10, r12, $r21, $r22;
        boolean $z0;
        java.io.PrintStream $r6, $r15, $r17;
        thredds.catalog.crawl.CatalogCrawler $r13;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r7, $r9, $r16, $r18, $r19, $r20;

        r0 := @parameter0: ucar.nc2.util.DiskCache2;

        r8 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label1;

        $r22 = null;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<ucar.nc2.util.DiskCache2: java.lang.String getRootDirectory()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/defs/");

        $r22 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***makeFromCatalog ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = new ucar.nc2.dt.fmrc.FmrcInventory;

        specialinvoke $r11.<ucar.nc2.dt.fmrc.FmrcInventory: void <init>(java.lang.String,java.lang.String)>($r22, r12);

        $r13 = new thredds.catalog.crawl.CatalogCrawler;

        $r14 = new ucar.nc2.dt.fmrc.FmrcInventory$MyListener;

        specialinvoke $r14.<ucar.nc2.dt.fmrc.FmrcInventory$MyListener: void <init>(ucar.nc2.dt.fmrc.FmrcInventory,int,int,ucar.nc2.util.DiskCache2)>($r11, i1, i2, r0);

        specialinvoke $r13.<thredds.catalog.crawl.CatalogCrawler: void <init>(int,boolean,thredds.catalog.crawl.CatalogCrawler$Listener)>(1, 0, $r14);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<thredds.catalog.crawl.CatalogCrawler: int crawl(java.lang.String,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object)>(r8, null, $r15, null);

        virtualinvoke $r11.<ucar.nc2.dt.fmrc.FmrcInventory: void finish()>();

        $z0 = <ucar.nc2.dt.fmrc.FmrcInventory: boolean debugTiming>;

        if $z0 == 0 goto label3;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l4 = $l3 - $l0;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("that took = ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label3:
        return $r11;
    }

    public static void main4(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String[] r4;
        java.lang.String $r3;

        r4 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/grib/");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nam/conus80");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcInventory makeFromDirectory(java.lang.String,java.lang.String,ucar.nc2.util.DiskCache2,java.lang.String,java.lang.String,int)>("C:/temp", "NCEP-NAM-CONUS_80km", null, $r3, "grib1", 2);

        return;
    }

    static int access$000(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int run_seqno>;

        return $i0;
    }

    static int access$008(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0, $i1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int run_seqno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int run_seqno> = $i1;

        return $i0;
    }

    static ucar.nc2.dt.fmrc.FmrcDefinition access$100(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        ucar.nc2.dt.fmrc.FmrcDefinition $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.FmrcDefinition definition>;

        return $r1;
    }

    static java.util.Date access$200(ucar.nc2.dt.fmrc.FmrcInventory, java.util.Date, double)
    {
        java.util.Date r1, $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        double d0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter1: java.util.Date;

        d0 := @parameter2: double;

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Date addHour(java.util.Date,double)>(r1, d0);

        return $r2;
    }

    static java.util.Set access$300(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.Set $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set forecastTimeHash>;

        return $r1;
    }

    static java.util.Set access$400(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.Set $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.Set offsetHash>;

        return $r1;
    }

    static ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord access$500(ucar.nc2.dt.fmrc.FmrcInventory, ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord)
    {
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord r1, $r2;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter1: ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord;

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord findEnsCoord(ucar.nc2.dt.fmrc.ForecastModelRunInventory$EnsCoord)>(r1);

        return $r2;
    }

    static java.util.List access$600(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List ensCoords>;

        return $r1;
    }

    static int access$700(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int ec_seqno>;

        return $i0;
    }

    static int access$708(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0, $i1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int ec_seqno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int ec_seqno> = $i1;

        return $i0;
    }

    static ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord access$800(ucar.nc2.dt.fmrc.FmrcInventory, ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord)
    {
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord r1, $r2;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        r1 := @parameter1: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord;

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord findVertCoord(ucar.nc2.dt.fmrc.ForecastModelRunInventory$VertCoord)>(r1);

        return $r2;
    }

    static java.util.List access$900(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List vertCoords>;

        return $r1;
    }

    static int access$1000(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int vc_seqno>;

        return $i0;
    }

    static int access$1008(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        int $i0, $i1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $i0 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: int vc_seqno>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.dt.fmrc.FmrcInventory: int vc_seqno> = $i1;

        return $i0;
    }

    static java.util.List access$1100(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List runTimeList>;

        return $r1;
    }

    static java.util.List access$1200(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List forecastTimeList>;

        return $r1;
    }

    static java.util.List access$1300(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List offsetList>;

        return $r1;
    }

    static java.util.List access$1400(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.util.List varList>;

        return $r1;
    }

    static ucar.nc2.units.DateFormatter access$1500(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        ucar.nc2.dt.fmrc.FmrcInventory r0;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: ucar.nc2.units.DateFormatter formatter>;

        return $r1;
    }

    static java.lang.String access$1600(ucar.nc2.dt.fmrc.FmrcInventory)
    {
        java.lang.String $r1;
        ucar.nc2.dt.fmrc.FmrcInventory r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcInventory;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcInventory: java.lang.String name>;

        return $r1;
    }

    static org.slf4j.Logger access$1700()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.dt.fmrc.FmrcInventory: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.TimeZone $r4, $r6;
        java.text.SimpleDateFormat $r1, $r2, $r3, $r5;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/fmrc/FmrcInventory;");

        <ucar.nc2.dt.fmrc.FmrcInventory: org.slf4j.Logger log> = $r0;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM-dd HH.mm");

        <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormatShort> = $r1;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH.mm\'Z\'");

        <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat> = $r2;

        <ucar.nc2.dt.fmrc.FmrcInventory: boolean debug> = 0;

        $r3 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormat>;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        $r5 = <ucar.nc2.dt.fmrc.FmrcInventory: java.text.SimpleDateFormat dateFormatShort>;

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r5.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r6);

        <ucar.nc2.dt.fmrc.FmrcInventory: boolean debugTiming> = 0;

        return;
    }
}
