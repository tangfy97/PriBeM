public class org.tukaani.xz.delta.DeltaEncoder extends org.tukaani.xz.delta.DeltaCoder
{

    public void <init>(int)
    {
        int i0;
        org.tukaani.xz.delta.DeltaEncoder r0;

        r0 := @this: org.tukaani.xz.delta.DeltaEncoder;

        i0 := @parameter0: int;

        specialinvoke r0.<org.tukaani.xz.delta.DeltaCoder: void <init>(int)>(i0);

        return;
    }

    public void encode(byte[], int, int, byte[])
    {
        byte[] $r1, $r2, r3, r4;
        byte b5, $b10, $b13, $b15;
        org.tukaani.xz.delta.DeltaEncoder r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, i8, $i9, $i11, $i12, $i14, i16, $i17, $i18;

        r0 := @this: org.tukaani.xz.delta.DeltaEncoder;

        r3 := @parameter0: byte[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        r4 := @parameter3: byte[];

        i16 = 0;

     label1:
        if i16 >= i0 goto label2;

        $r1 = r0.<org.tukaani.xz.delta.DeltaEncoder: byte[] history>;

        $i2 = r0.<org.tukaani.xz.delta.DeltaEncoder: int distance>;

        $i1 = r0.<org.tukaani.xz.delta.DeltaEncoder: int pos>;

        $i3 = $i2 + $i1;

        $i4 = $i3 & 255;

        b5 = $r1[$i4];

        $r2 = r0.<org.tukaani.xz.delta.DeltaEncoder: byte[] history>;

        $i6 = r0.<org.tukaani.xz.delta.DeltaEncoder: int pos>;

        $i7 = $i6 - 1;

        r0.<org.tukaani.xz.delta.DeltaEncoder: int pos> = $i7;

        $i11 = $i6 & 255;

        $i9 = i8 + i16;

        $b10 = r3[$i9];

        $r2[$i11] = $b10;

        $i12 = i8 + i16;

        $b13 = r3[$i12];

        $i17 = (int) $b13;

        $i18 = (int) b5;

        $i14 = $i17 - $i18;

        $b15 = (byte) $i14;

        r4[i16] = $b15;

        i16 = i16 + 1;

        goto label1;

     label2:
        return;
    }
}
