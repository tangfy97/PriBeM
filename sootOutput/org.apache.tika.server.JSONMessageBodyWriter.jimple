public class org.apache.tika.server.JSONMessageBodyWriter extends java.lang.Object implements javax.ws.rs.ext.MessageBodyWriter
{

    public void <init>()
    {
        org.apache.tika.server.JSONMessageBodyWriter r0;

        r0 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        org.apache.tika.server.JSONMessageBodyWriter r2;
        java.lang.reflect.Type r3;
        java.lang.Class r0, $r1;
        java.lang.'annotation'.Annotation[] r4;
        boolean $z0;

        r2 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r5 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Lorg/apache/tika/metadata/Metadata;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        return $z0;
    }

    public long getSize(org.apache.tika.metadata.Metadata, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.tika.metadata.Metadata r1;
        javax.ws.rs.core.MediaType r5;
        org.apache.tika.server.JSONMessageBodyWriter r0;
        java.lang.reflect.Type r3;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public void writeTo(org.apache.tika.metadata.Metadata, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r1;
        java.io.IOException $r4;
        java.lang.'annotation'.Annotation[] r8;
        javax.ws.rs.core.MultivaluedMap r10;
        org.apache.tika.metadata.Metadata r2;
        javax.ws.rs.core.MediaType r9;
        org.apache.tika.exception.TikaException $r3;
        org.apache.tika.server.JSONMessageBodyWriter r5;
        java.lang.reflect.Type r7;
        java.io.OutputStreamWriter $r0;
        java.lang.Class r6;

        r5 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        r2 := @parameter0: org.apache.tika.metadata.Metadata;

        r6 := @parameter1: java.lang.Class;

        r7 := @parameter2: java.lang.reflect.Type;

        r8 := @parameter3: java.lang.'annotation'.Annotation[];

        r9 := @parameter4: javax.ws.rs.core.MediaType;

        r10 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r1 := @parameter6: java.io.OutputStream;

     label1:
        $r0 = new java.io.OutputStreamWriter;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");

        staticinvoke <org.apache.tika.metadata.serialization.JsonMetadata: void toJson(org.apache.tika.metadata.Metadata,java.io.Writer)>(r2, $r0);

        virtualinvoke $r0.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;

        catch org.apache.tika.exception.TikaException from label1 to label2 with label3;
    }

    public volatile void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r7;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MultivaluedMap r6;
        javax.ws.rs.core.MediaType r5;
        org.apache.tika.metadata.Metadata $r8;
        org.apache.tika.server.JSONMessageBodyWriter r0;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;

        r0 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        r6 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter6: java.io.OutputStream;

        $r8 = (org.apache.tika.metadata.Metadata) r1;

        virtualinvoke r0.<org.apache.tika.server.JSONMessageBodyWriter: void writeTo(org.apache.tika.metadata.Metadata,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>($r8, r2, r3, r4, r5, r6, r7);

        return;
    }

    public volatile long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        long $l0;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MediaType r5;
        org.apache.tika.metadata.Metadata $r6;
        org.apache.tika.server.JSONMessageBodyWriter r0;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;

        r0 := @this: org.apache.tika.server.JSONMessageBodyWriter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        $r6 = (org.apache.tika.metadata.Metadata) r1;

        $l0 = virtualinvoke r0.<org.apache.tika.server.JSONMessageBodyWriter: long getSize(org.apache.tika.metadata.Metadata,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>($r6, r2, r3, r4, r5);

        return $l0;
    }
}
