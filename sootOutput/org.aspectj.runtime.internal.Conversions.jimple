public final class org.aspectj.runtime.internal.Conversions extends java.lang.Object
{

    private void <init>()
    {
        org.aspectj.runtime.internal.Conversions r0;

        r0 := @this: org.aspectj.runtime.internal.Conversions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object intObject(int)
    {
        int i0;
        java.lang.Integer $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(i0);

        return $r0;
    }

    public static java.lang.Object shortObject(short)
    {
        short s0;
        java.lang.Short $r0;

        s0 := @parameter0: short;

        $r0 = new java.lang.Short;

        specialinvoke $r0.<java.lang.Short: void <init>(short)>(s0);

        return $r0;
    }

    public static java.lang.Object byteObject(byte)
    {
        java.lang.Byte $r0;
        byte b0;

        b0 := @parameter0: byte;

        $r0 = new java.lang.Byte;

        specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(b0);

        return $r0;
    }

    public static java.lang.Object charObject(char)
    {
        char c0;
        java.lang.Character $r0;

        c0 := @parameter0: char;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>(c0);

        return $r0;
    }

    public static java.lang.Object longObject(long)
    {
        long l0;
        java.lang.Long $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.Long;

        specialinvoke $r0.<java.lang.Long: void <init>(long)>(l0);

        return $r0;
    }

    public static java.lang.Object floatObject(float)
    {
        java.lang.Float $r0;
        float f0;

        f0 := @parameter0: float;

        $r0 = new java.lang.Float;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>(f0);

        return $r0;
    }

    public static java.lang.Object doubleObject(double)
    {
        java.lang.Double $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(d0);

        return $r0;
    }

    public static java.lang.Object booleanObject(boolean)
    {
        java.lang.Boolean $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.Boolean;

        specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(z0);

        return $r0;
    }

    public static java.lang.Object voidObject()
    {
        return null;
    }

    public static int intValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        java.lang.StringBuffer $r2, $r5, $r6;
        int $i0;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $i0 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        return $i0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to int");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static long longValue(java.lang.Object)
    {
        long $l0;
        java.lang.ClassCastException $r1;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0L;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $l0 = virtualinvoke $r8.<java.lang.Number: long longValue()>();

        return $l0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to long");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static float floatValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        java.lang.StringBuffer $r2, $r5, $r6;
        float $f0;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0.0F;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $f0 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        return $f0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to float");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static double doubleValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0.0;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        return $d0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to double");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static byte byteValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        byte $b0;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $b0 = virtualinvoke $r8.<java.lang.Number: byte byteValue()>();

        return $b0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to byte");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static short shortValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        short $s0;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        java.lang.Number $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Number) r0;

        $s0 = virtualinvoke $r8.<java.lang.Number: short shortValue()>();

        return $s0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to short");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static char charValue(java.lang.Object)
    {
        char $c0;
        java.lang.ClassCastException $r1;
        java.lang.Character $r8;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Character;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r8.<java.lang.Character: char charValue()>();

        return $c0;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to char");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static boolean booleanValue(java.lang.Object)
    {
        java.lang.ClassCastException $r1;
        java.lang.StringBuffer $r2, $r5, $r6;
        java.lang.Boolean $r8;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Boolean) r0;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label2:
        $r1 = new java.lang.ClassCastException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be converted to boolean");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.ClassCastException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public static java.lang.Object voidValue(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return r0;

     label1:
        return r0;
    }
}
