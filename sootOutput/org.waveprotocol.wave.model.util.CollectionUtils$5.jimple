final class org.waveprotocol.wave.model.util.CollectionUtils$5 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableIdentitySet
{
    final java.lang.Object val$value;

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.util.CollectionUtils$5 r0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        r1 := @parameter0: java.lang.Object;

        r0.<org.waveprotocol.wave.model.util.CollectionUtils$5: java.lang.Object val$value> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r1, $r2;
        org.waveprotocol.wave.model.util.CollectionUtils$5 r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.util.CollectionUtils$5: java.lang.Object val$value>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int countEntries()
    {
        org.waveprotocol.wave.model.util.CollectionUtils$5 r0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        return 1;
    }

    public void each(org.waveprotocol.wave.model.util.ReadableIdentitySet$Proc)
    {
        java.lang.Object $r2;
        org.waveprotocol.wave.model.util.ReadableIdentitySet$Proc r0;
        org.waveprotocol.wave.model.util.CollectionUtils$5 r1;

        r1 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        r0 := @parameter0: org.waveprotocol.wave.model.util.ReadableIdentitySet$Proc;

        $r2 = r1.<org.waveprotocol.wave.model.util.CollectionUtils$5: java.lang.Object val$value>;

        interfaceinvoke r0.<org.waveprotocol.wave.model.util.ReadableIdentitySet$Proc: void apply(java.lang.Object)>($r2);

        return;
    }

    public java.lang.Object someElement()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.util.CollectionUtils$5 r0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        $r1 = r0.<org.waveprotocol.wave.model.util.CollectionUtils$5: java.lang.Object val$value>;

        return $r1;
    }

    public boolean isEmpty()
    {
        org.waveprotocol.wave.model.util.CollectionUtils$5 r0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$5;

        return 0;
    }
}
