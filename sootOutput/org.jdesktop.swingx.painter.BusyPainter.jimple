public class org.jdesktop.swingx.painter.BusyPainter extends org.jdesktop.swingx.painter.AbstractPainter
{
    private int frame;
    private int points;
    private java.awt.Color baseColor;
    private java.awt.Color highlightColor;
    private int trailLength;
    private java.awt.Shape pointShape;
    private java.awt.Shape trajectory;
    private org.jdesktop.swingx.JXBusyLabel$Direction direction;
    private boolean paintCentered;

    public void <init>()
    {
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void <init>(int)>(26);

        return;
    }

    public void <init>(int)
    {
        java.awt.Shape $r1, $r2;
        org.jdesktop.swingx.painter.BusyPainter r0;
        int i0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getScaledDefaultPoint(int)>(i0);

        $r2 = staticinvoke <org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getScaledDefaultTrajectory(int)>(i0);

        specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void <init>(java.awt.Shape,java.awt.Shape)>($r1, $r2);

        return;
    }

    protected static java.awt.Shape getScaledDefaultTrajectory(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float $f0, $f1, $f2, $f3;
        java.awt.geom.Ellipse2D$Float $r0;

        i0 := @parameter0: int;

        $r0 = new java.awt.geom.Ellipse2D$Float;

        $i1 = i0 * 8;

        $i2 = $i1 / 26;

        $i3 = $i2 / 2;

        $f3 = (float) $i3;

        $i4 = i0 * 8;

        $i5 = $i4 / 26;

        $i6 = $i5 / 2;

        $f2 = (float) $i6;

        $i7 = i0 * 8;

        $i8 = $i7 / 26;

        $i9 = i0 - $i8;

        $f1 = (float) $i9;

        $i10 = i0 * 8;

        $i11 = $i10 / 26;

        $i12 = i0 - $i11;

        $f0 = (float) $i12;

        specialinvoke $r0.<java.awt.geom.Ellipse2D$Float: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r0;
    }

    protected static java.awt.Shape getScaledDefaultPoint(int)
    {
        int i0, $i1, $i2;
        float $f0;
        java.awt.geom.RoundRectangle2D$Float $r0;

        i0 := @parameter0: int;

        $r0 = new java.awt.geom.RoundRectangle2D$Float;

        $i1 = i0 * 8;

        $i2 = $i1 / 26;

        $f0 = (float) $i2;

        specialinvoke $r0.<java.awt.geom.RoundRectangle2D$Float: void <init>(float,float,float,float,float,float)>(0.0F, 0.0F, $f0, 4.0F, 4.0F, 4.0F);

        return $r0;
    }

    public void <init>(java.awt.Shape, java.awt.Shape)
    {
        java.awt.Color $r2, $r6, $r7, $r8;
        java.awt.Shape r4, r5;
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i1;
        org.jdesktop.swingx.JXBusyLabel$Direction $r3;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r4 := @parameter0: java.awt.Shape;

        r5 := @parameter1: java.awt.Shape;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractPainter: void <init>()>();

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.painter.BusyPainter: int frame> = $i1;

        r0.<org.jdesktop.swingx.painter.BusyPainter: int points> = 8;

        $r8 = new java.awt.Color;

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>(200, 200, 200);

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color baseColor> = $r8;

        $r2 = <java.awt.Color: java.awt.Color BLACK>;

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color highlightColor> = $r2;

        r0.<org.jdesktop.swingx.painter.BusyPainter: int trailLength> = 4;

        $r3 = <org.jdesktop.swingx.JXBusyLabel$Direction: org.jdesktop.swingx.JXBusyLabel$Direction RIGHT>;

        r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction direction> = $r3;

        $r7 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        $r6 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void init(java.awt.Shape,java.awt.Shape,java.awt.Color,java.awt.Color)>(r4, r5, $r7, $r6);

        return;
    }

    protected void init(java.awt.Shape, java.awt.Shape, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r1, r2;
        java.awt.Shape r3, r4;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r3 := @parameter0: java.awt.Shape;

        r4 := @parameter1: java.awt.Shape;

        r1 := @parameter2: java.awt.Color;

        r2 := @parameter3: java.awt.Color;

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color baseColor> = r1;

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color highlightColor> = r2;

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape pointShape> = r3;

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape trajectory> = r4;

        return;
    }

    protected void doPaint(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        byte $b19, $b20, $b21;
        float[] $r18, $r19, $r20, $r23, r24;
        java.util.ArrayList $r27, $r28;
        java.awt.geom.Point2D$Float r15, $r16, $r25, $r26, $r29, $r30;
        java.awt.geom.PathIterator $r4;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Shape $r1, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, f48, $f49, $f50, $f51, $f52, $f53, $f54, f55, f56, f57;
        java.awt.Rectangle $r2;
        java.awt.Graphics2D r12;
        org.jdesktop.swingx.painter.BusyPainter r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i22, $i23, $i24, i25, i26, i27, $i28;
        java.util.NoSuchElementException $r21;
        double $d0, $d1, $d2, $d3;
        java.util.Iterator $r13;
        java.lang.Object $r10, $r14, $r17, r22;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r12 := @parameter0: java.awt.Graphics2D;

        r22 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i6 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i1 = $r2.<java.awt.Rectangle: int width>;

        $i4 = i0 - $i1;

        $i2 = $r2.<java.awt.Rectangle: int x>;

        $i3 = 2 * $i2;

        i5 = $i4 - $i3;

        $i7 = $r2.<java.awt.Rectangle: int height>;

        $i10 = i6 - $i7;

        $i8 = $r2.<java.awt.Rectangle: int y>;

        $i9 = 2 * $i8;

        i11 = $i10 - $i9;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: boolean isPaintCentered()>();

        if $z0 == 0 goto label01;

        $i23 = i5 / 2;

        $i22 = i11 / 2;

        virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>($i23, $i22);

     label01:
        $r3 = r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape trajectory>;

        $r4 = interfaceinvoke $r3.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        $r20 = newarray (float)[6];

        $r25 = new java.awt.geom.Point2D$Float;

        specialinvoke $r25.<java.awt.geom.Point2D$Float: void <init>()>();

        $r26 = new java.awt.geom.Point2D$Float;

        specialinvoke $r26.<java.awt.geom.Point2D$Float: void <init>()>();

        f48 = 0.0F;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

     label02:
        $i24 = interfaceinvoke $r4.<java.awt.geom.PathIterator: int currentSegment(float[])>($r20);

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

        return;

     label05:
        if $i24 == 1 goto label06;

        if $i24 != 4 goto label07;

        $f45 = $r26.<java.awt.geom.Point2D$Float: float x>;

        $f44 = $r25.<java.awt.geom.Point2D$Float: float x>;

        $b20 = $f45 cmpl $f44;

        if $b20 != 0 goto label06;

        $f47 = $r26.<java.awt.geom.Point2D$Float: float y>;

        $f46 = $r25.<java.awt.geom.Point2D$Float: float y>;

        $b21 = $f47 cmpl $f46;

        if $b21 == 0 goto label07;

     label06:
        $f49 = specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: float calcLine(float[],java.awt.geom.Point2D$Float)>($r20, $r25);

        f48 = f48 + $f49;

        $r23 = newarray (float)[8];

        $r23[0] = $f49;

        $r23[1] = 0.0F;

        $r23[2] = 0.0F;

        $r23[3] = 0.0F;

        $r23[4] = 0.0F;

        $f50 = $r20[0];

        $r23[5] = $f50;

        $f51 = $r20[1];

        $r23[6] = $f51;

        $f52 = (float) $i24;

        $r23[7] = $f52;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r23);

        $f53 = $r20[0];

        $r25.<java.awt.geom.Point2D$Float: float x> = $f53;

        $f54 = $r20[1];

        $r25.<java.awt.geom.Point2D$Float: float y> = $f54;

     label07:
        if $i24 != 0 goto label08;

        $f42 = $r20[0];

        $r25.<java.awt.geom.Point2D$Float: float x> = $f42;

        $r26.<java.awt.geom.Point2D$Float: float x> = $f42;

        $f43 = $r20[1];

        $r25.<java.awt.geom.Point2D$Float: float y> = $f43;

        $r26.<java.awt.geom.Point2D$Float: float y> = $f43;

     label08:
        if $i24 != 3 goto label09;

        $f32 = specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: float calcCube(float[],java.awt.geom.Point2D$Float)>($r20, $r25);

        f48 = f48 + $f32;

        $r19 = newarray (float)[8];

        $r19[0] = $f32;

        $f33 = $r20[0];

        $r19[1] = $f33;

        $f34 = $r20[1];

        $r19[2] = $f34;

        $f35 = $r20[2];

        $r19[3] = $f35;

        $f36 = $r20[3];

        $r19[4] = $f36;

        $f37 = $r20[4];

        $r19[5] = $f37;

        $f38 = $r20[5];

        $r19[6] = $f38;

        $f39 = (float) $i24;

        $r19[7] = $f39;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r19);

        $f40 = $r20[4];

        $r25.<java.awt.geom.Point2D$Float: float x> = $f40;

        $f41 = $r20[5];

        $r25.<java.awt.geom.Point2D$Float: float y> = $f41;

     label09:
        if $i24 != 2 goto label10;

        $f24 = specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: float calcLengthOfQuad(float[],java.awt.geom.Point2D$Float)>($r20, $r25);

        f48 = f48 + $f24;

        $r18 = newarray (float)[8];

        $r18[0] = $f24;

        $f25 = $r20[0];

        $r18[1] = $f25;

        $f26 = $r20[1];

        $r18[2] = $f26;

        $r18[3] = 0.0F;

        $r18[4] = 0.0F;

        $f27 = $r20[2];

        $r18[5] = $f27;

        $f28 = $r20[3];

        $r18[6] = $f28;

        $f29 = (float) $i24;

        $r18[7] = $f29;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r18);

        $f30 = $r20[2];

        $r25.<java.awt.geom.Point2D$Float: float x> = $f30;

        $f31 = $r20[3];

        $r25.<java.awt.geom.Point2D$Float: float y> = $f31;

     label10:
        interfaceinvoke $r4.<java.awt.geom.PathIterator: void next()>();

        $z1 = interfaceinvoke $r4.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z1 == 0 goto label02;

        $i12 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        $f0 = (float) $i12;

        f55 = f48 / $f0;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        $r29 = new java.awt.geom.Point2D$Float;

        $f2 = $r26.<java.awt.geom.Point2D$Float: float x>;

        $f1 = $r26.<java.awt.geom.Point2D$Float: float y>;

        specialinvoke $r29.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f2, $f1);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r29);

        i25 = 0;

        $r10 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(0);

        r24 = (float[]) $r10;

        f56 = r24[0];

        f57 = f55;

        $r30 = new java.awt.geom.Point2D$Float;

        $f4 = $r26.<java.awt.geom.Point2D$Float: float x>;

        $f3 = $r26.<java.awt.geom.Point2D$Float: float y>;

        specialinvoke $r30.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f4, $f3);

        i26 = 1;

     label11:
        $i13 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        if i26 >= $i13 goto label14;

     label12:
        $b19 = f56 cmpg f55;

        $i28 = (int) $b19;

        if $i28 >= 0 goto label13;

        i25 = i25 + 1;

        $f21 = r24[5];

        $r26.<java.awt.geom.Point2D$Float: float x> = $f21;

        $f22 = r24[6];

        $r26.<java.awt.geom.Point2D$Float: float y> = $f22;

        $r17 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i25);

        r24 = (float[]) $r17;

        f57 = f55 - f56;

        $f23 = r24[0];

        f56 = f56 + $f23;

        goto label12;

     label13:
        f56 = f56 - f55;

        $r16 = specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.geom.Point2D$Float calcPoint(float,java.awt.geom.Point2D$Float,float[],int,int)>(f57, $r26, r24, i0, i6);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r16);

        $f16 = $r30.<java.awt.geom.Point2D$Float: float x>;

        $f15 = $r16.<java.awt.geom.Point2D$Float: float x>;

        $f17 = $f16 + $f15;

        $r30.<java.awt.geom.Point2D$Float: float x> = $f17;

        $f19 = $r30.<java.awt.geom.Point2D$Float: float y>;

        $f18 = $r16.<java.awt.geom.Point2D$Float: float y>;

        $f20 = $f19 + $f18;

        $r30.<java.awt.geom.Point2D$Float: float y> = $f20;

        f57 = f57 + f55;

        i26 = i26 + 1;

        goto label11;

     label14:
        $f5 = (float) i0;

        $f6 = $f5 / 2.0F;

        $r30.<java.awt.geom.Point2D$Float: float x> = $f6;

        $f7 = (float) i6;

        $f8 = $f7 / 2.0F;

        $r30.<java.awt.geom.Point2D$Float: float y> = $f8;

        i27 = 0;

        $f9 = $r30.<java.awt.geom.Point2D$Float: float x>;

        $d1 = (double) $f9;

        $f10 = $r30.<java.awt.geom.Point2D$Float: float y>;

        $d0 = (double) $f10;

        virtualinvoke r12.<java.awt.Graphics2D: void translate(double,double)>($d1, $d0);

        $r13 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.awt.geom.Point2D$Float) $r14;

        $i18 = i27;

        i27 = i27 + 1;

        specialinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void drawAt(java.awt.Graphics2D,int,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float)>(r12, $i18, r15, $r30);

        goto label15;

     label16:
        $f11 = $r30.<java.awt.geom.Point2D$Float: float x>;

        $f12 = neg $f11;

        $d3 = (double) $f12;

        $f13 = $r30.<java.awt.geom.Point2D$Float: float y>;

        $f14 = neg $f13;

        $d2 = (double) $f14;

        virtualinvoke r12.<java.awt.Graphics2D: void translate(double,double)>($d3, $d2);

        $z3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: boolean isPaintCentered()>();

        if $z3 == 0 goto label17;

        $i14 = neg i5;

        $i17 = $i14 / 2;

        $i15 = neg i11;

        $i16 = $i15 / 2;

        virtualinvoke r12.<java.awt.Graphics2D: void translate(int,int)>($i17, $i16);

     label17:
        return;

        catch java.util.NoSuchElementException from label02 to label03 with label04;
    }

    public boolean isPaintCentered()
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $z0 = r0.<org.jdesktop.swingx.painter.BusyPainter: boolean paintCentered>;

        return $z0;
    }

    private void drawAt(java.awt.Graphics2D, int, java.awt.geom.Point2D$Float, java.awt.geom.Point2D$Float)
    {
        java.awt.Color $r2;
        java.awt.geom.Point2D$Float r3, r4;
        java.awt.Graphics2D r0;
        org.jdesktop.swingx.painter.BusyPainter r1;
        int i0;

        r1 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r0 := @parameter0: java.awt.Graphics2D;

        i0 := @parameter1: int;

        r3 := @parameter2: java.awt.geom.Point2D$Float;

        r4 := @parameter3: java.awt.geom.Point2D$Float;

        $r2 = specialinvoke r1.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color calcFrameColor(int)>(i0);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r2);

        specialinvoke r1.<org.jdesktop.swingx.painter.BusyPainter: void paintRotatedCenteredShapeAtPoint(java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float,java.awt.Graphics2D)>(r3, r4, r0);

        return;
    }

    private void paintRotatedCenteredShapeAtPoint(java.awt.geom.Point2D$Float, java.awt.geom.Point2D$Float, java.awt.Graphics2D)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        java.awt.Shape $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.awt.Rectangle $r2, $r3;
        java.awt.Graphics2D r6;
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i5, $i6, $i7;
        double $d0, d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, $d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        java.awt.geom.Point2D$Float r4, r5;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r5 := @parameter0: java.awt.geom.Point2D$Float;

        r4 := @parameter1: java.awt.geom.Point2D$Float;

        r6 := @parameter2: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        $r2 = interfaceinvoke $r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d0 = virtualinvoke $r2.<java.awt.Rectangle: double getHeight()>();

        d1 = $d0 / 2.0;

        $r3 = interfaceinvoke $r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d2 = virtualinvoke $r3.<java.awt.Rectangle: double getWidth()>();

        d3 = $d2 / 2.0;

        $f1 = r4.<java.awt.geom.Point2D$Float: float y>;

        $f0 = r5.<java.awt.geom.Point2D$Float: float y>;

        $f2 = $f1 - $f0;

        d10 = (double) $f2;

        $f4 = r5.<java.awt.geom.Point2D$Float: float x>;

        $f3 = r4.<java.awt.geom.Point2D$Float: float x>;

        $f5 = $f4 - $f3;

        d11 = (double) $f5;

        $d4 = staticinvoke <java.lang.Math: double signum(double)>(d10);

        $d5 = staticinvoke <java.lang.Math: double signum(double)>(d11);

        $b0 = $d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d12 = 1.0;

        goto label2;

     label1:
        $d12 = $d4;

     label2:
        d13 = $d12;

        $b1 = $d5 cmpl 0.0;

        if $b1 != 0 goto label3;

        $d14 = 1.0;

        goto label4;

     label3:
        $d14 = $d5;

     label4:
        $d6 = staticinvoke <java.lang.Math: double abs(double)>(d10);

        $d7 = staticinvoke <java.lang.Math: double abs(double)>(d11);

        $d8 = $d6 / $d7;

        $d9 = staticinvoke <java.lang.Math: double atan(double)>($d8);

        $b2 = d13 cmpl 0.0;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label6;

        $b4 = $d14 cmpl 0.0;

        $i6 = (int) $b4;

        if $i6 <= 0 goto label5;

        $d15 = neg $d9;

        goto label8;

     label5:
        $d15 = -3.141592653589793 + $d9;

        goto label8;

     label6:
        $b3 = $d14 cmpl 0.0;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label7;

        $d15 = $d9;

        goto label8;

     label7:
        $d15 = 3.141592653589793 - $d9;

     label8:
        $d16 = $d6 * $d6;

        $d17 = $d7 * $d7;

        $d18 = $d16 + $d17;

        $d19 = staticinvoke <java.lang.Math: double sqrt(double)>($d18);

        $d20 = $d19 - d3;

        $d21 = neg d1;

        virtualinvoke r6.<java.awt.Graphics2D: void rotate(double)>($d15);

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d20, $d21);

        virtualinvoke r6.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r1);

        $d22 = neg $d20;

        $d23 = neg $d21;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d22, $d23);

        $d24 = neg $d15;

        virtualinvoke r6.<java.awt.Graphics2D: void rotate(double)>($d24);

        return;
    }

    private java.awt.geom.Point2D$Float calcPoint(float, java.awt.geom.Point2D$Float, float[], int, int)
    {
        byte $b0, $b1, $b2;
        float[] r1;
        java.awt.geom.Point2D$Float $r0, r2, $r4, $r5, $r6, $r7, $r8, r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, $f20, $f21, $f22, $f23, f24, $f25, $f26, $f27, $f28, f29, f30, $f31, $f32, $f33, $f34, f35, $f36, $f37, f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, f85, f86, f87, f88;
        org.jdesktop.swingx.painter.BusyPainter r3;
        int i3, i4;

        r3 := @this: org.jdesktop.swingx.painter.BusyPainter;

        f30 := @parameter0: float;

        r2 := @parameter1: java.awt.geom.Point2D$Float;

        r1 := @parameter2: float[];

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r0 = new java.awt.geom.Point2D$Float;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>()>();

        r9 = $r0;

        $f0 = r1[7];

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $f74 = r1[5];

        $f73 = r2.<java.awt.geom.Point2D$Float: float x>;

        f85 = $f74 - $f73;

        $f76 = r1[6];

        $f75 = r2.<java.awt.geom.Point2D$Float: float y>;

        f86 = $f76 - $f75;

        f87 = r1[0];

        $f79 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f77 = f85 * f30;

        $f78 = $f77 / f87;

        $f80 = $f79 + $f78;

        $r0.<java.awt.geom.Point2D$Float: float x> = $f80;

        $f83 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f81 = f86 * f30;

        $f82 = $f81 / f87;

        $f84 = $f83 + $f82;

        $r0.<java.awt.geom.Point2D$Float: float y> = $f84;

        goto label3;

     label1:
        $f1 = r1[7];

        $b1 = $f1 cmpl 2.0F;

        if $b1 != 0 goto label2;

        $r5 = new java.awt.geom.Point2D$Float;

        $f48 = r1[1];

        $f47 = (float) i3;

        $f52 = $f48 / $f47;

        $f50 = r1[2];

        $f49 = (float) i4;

        $f51 = $f50 / $f49;

        specialinvoke $r5.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f52, $f51);

        $r6 = new java.awt.geom.Point2D$Float;

        $f54 = r1[5];

        $f53 = (float) i3;

        $f58 = $f54 / $f53;

        $f56 = r1[6];

        $f55 = (float) i4;

        $f57 = $f56 / $f55;

        specialinvoke $r6.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f58, $f57);

        $r7 = new java.awt.geom.Point2D$Float;

        $f60 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f59 = (float) i3;

        $f64 = $f60 / $f59;

        $f62 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f61 = (float) i4;

        $f63 = $f62 / $f61;

        specialinvoke $r7.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f64, $f63);

        $f65 = r1[0];

        $f66 = f30 / $f65;

        $r8 = staticinvoke <org.jdesktop.swingx.painter.BusyPainter: java.awt.geom.Point2D$Float getXY(float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float)>($f66, $r7, $r5, $r6);

        r9 = $r8;

        $f68 = $r8.<java.awt.geom.Point2D$Float: float x>;

        $f67 = (float) i3;

        $f69 = $f68 * $f67;

        $r8.<java.awt.geom.Point2D$Float: float x> = $f69;

        $f71 = $r8.<java.awt.geom.Point2D$Float: float y>;

        $f70 = (float) i4;

        $f72 = $f71 * $f70;

        $r8.<java.awt.geom.Point2D$Float: float y> = $f72;

        goto label3;

     label2:
        $f2 = r1[7];

        $b2 = $f2 cmpl 3.0F;

        if $b2 != 0 goto label3;

        $f4 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f3 = r1[5];

        $f5 = $f4 - $f3;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f5);

        $f8 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f7 = r1[6];

        $f9 = $f8 - $f7;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        $f12 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f11 = r1[1];

        $f13 = $f12 - $f11;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>($f13);

        f88 = $f14 / $f6;

        $f16 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f15 = r1[2];

        $f17 = $f16 - $f15;

        $f18 = staticinvoke <java.lang.Math: float abs(float)>($f17);

        f19 = $f18 / $f10;

        $f21 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f20 = r1[3];

        $f22 = $f21 - $f20;

        $f23 = staticinvoke <java.lang.Math: float abs(float)>($f22);

        f24 = $f23 / $f6;

        $f26 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f25 = r1[4];

        $f27 = $f26 - $f25;

        $f28 = staticinvoke <java.lang.Math: float abs(float)>($f27);

        f29 = $f28 / $f10;

        $f31 = r1[0];

        $f32 = f30 / $f31;

        $r4 = specialinvoke r3.<org.jdesktop.swingx.painter.BusyPainter: java.awt.geom.Point2D$Float getXY(float,float,float,float,float)>($f32, f88, f19, f24, f29);

        r9 = $r4;

        $f34 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f33 = r1[5];

        f35 = $f34 - $f33;

        $f37 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f36 = r1[6];

        f38 = $f37 - $f36;

        $f41 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f39 = $r4.<java.awt.geom.Point2D$Float: float x>;

        $f40 = $f39 * f35;

        $f42 = $f41 - $f40;

        $r4.<java.awt.geom.Point2D$Float: float x> = $f42;

        $f45 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f43 = $r4.<java.awt.geom.Point2D$Float: float y>;

        $f44 = $f43 * f38;

        $f46 = $f45 - $f44;

        $r4.<java.awt.geom.Point2D$Float: float y> = $f46;

     label3:
        return r9;
    }

    private float calcLine(float[], java.awt.geom.Point2D$Float)
    {
        float[] r1;
        java.awt.geom.Point2D$Float r0;
        org.jdesktop.swingx.painter.BusyPainter r2;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, f9;
        double $d0, $d1;

        r2 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r1 := @parameter0: float[];

        r0 := @parameter1: java.awt.geom.Point2D$Float;

        $f1 = r0.<java.awt.geom.Point2D$Float: float x>;

        $f0 = r1[0];

        f2 = $f1 - $f0;

        $f4 = r0.<java.awt.geom.Point2D$Float: float y>;

        $f3 = r1[1];

        f5 = $f4 - $f3;

        $f7 = f2 * f2;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f9 = (float) $d1;

        return f9;
    }

    private float calcCube(float[], java.awt.geom.Point2D$Float)
    {
        byte $b0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, $f14, $f15, $f16, f17, $f18, $f19, $f20, $f21, f22, $f23, $f24, $f25, $f26, f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, f44, f45, f46, f47, f48;
        float[] r1;
        org.jdesktop.swingx.painter.BusyPainter r2;
        int $i1;
        double $d0, $d1;
        java.awt.geom.Point2D$Float r0, $r3;

        r2 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r1 := @parameter0: float[];

        r0 := @parameter1: java.awt.geom.Point2D$Float;

        $f1 = r0.<java.awt.geom.Point2D$Float: float x>;

        $f0 = r1[4];

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f5 = r0.<java.awt.geom.Point2D$Float: float y>;

        $f4 = r1[5];

        $f6 = $f5 - $f4;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f9 = r0.<java.awt.geom.Point2D$Float: float x>;

        $f8 = r1[0];

        $f10 = $f9 - $f8;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        f12 = $f11 / $f3;

        $f14 = r0.<java.awt.geom.Point2D$Float: float y>;

        $f13 = r1[1];

        $f15 = $f14 - $f13;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        f17 = $f16 / $f7;

        $f19 = r0.<java.awt.geom.Point2D$Float: float x>;

        $f18 = r1[2];

        $f20 = $f19 - $f18;

        $f21 = staticinvoke <java.lang.Math: float abs(float)>($f20);

        f22 = $f21 / $f3;

        $f24 = r0.<java.awt.geom.Point2D$Float: float y>;

        $f23 = r1[3];

        $f25 = $f24 - $f23;

        $f26 = staticinvoke <java.lang.Math: float abs(float)>($f25);

        f27 = $f26 / $f7;

        f44 = 0.0F;

        f45 = 0.0F;

        f46 = 0.0F;

        f47 = 0.01F;

     label1:
        $b0 = f47 cmpg 1.0F;

        $i1 = (int) $b0;

        if $i1 > 0 goto label2;

        $r3 = specialinvoke r2.<org.jdesktop.swingx.painter.BusyPainter: java.awt.geom.Point2D$Float getXY(float,float,float,float,float)>(f47, f12, f17, f22, f27);

        $f32 = $r3.<java.awt.geom.Point2D$Float: float x>;

        $f35 = $f32 - f45;

        $f33 = $r3.<java.awt.geom.Point2D$Float: float x>;

        $f34 = $f33 - f45;

        $f41 = $f35 * $f34;

        $f36 = $r3.<java.awt.geom.Point2D$Float: float y>;

        $f39 = $f36 - f46;

        $f37 = $r3.<java.awt.geom.Point2D$Float: float y>;

        $f38 = $f37 - f46;

        $f40 = $f39 * $f38;

        $f42 = $f41 + $f40;

        $d0 = (double) $f42;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f43 = (float) $d1;

        f44 = f44 + $f43;

        f45 = $r3.<java.awt.geom.Point2D$Float: float x>;

        f46 = $r3.<java.awt.geom.Point2D$Float: float y>;

        f47 = f47 + 0.01F;

        goto label1;

     label2:
        $f28 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $f29 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $f30 = $f28 + $f29;

        $f31 = $f30 / 2.0F;

        f48 = $f31 * f44;

        return f48;
    }

    private float calcLengthOfQuad(float[], java.awt.geom.Point2D$Float)
    {
        byte $b0;
        float[] r1;
        java.awt.geom.Point2D$Float r3, $r5, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, f51, f52, f53, f54;
        org.jdesktop.swingx.painter.BusyPainter r6;
        int $i1;
        double $d0, $d1, $d2, $d3;

        r6 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r1 := @parameter0: float[];

        r3 := @parameter1: java.awt.geom.Point2D$Float;

        $r7 = new java.awt.geom.Point2D$Float;

        $f1 = r1[0];

        $f0 = r1[1];

        specialinvoke $r7.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f1, $f0);

        $r8 = new java.awt.geom.Point2D$Float;

        $f3 = r1[2];

        $f2 = r1[3];

        specialinvoke $r8.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f3, $f2);

        $f5 = r3.<java.awt.geom.Point2D$Float: float x>;

        $f4 = $r7.<java.awt.geom.Point2D$Float: float x>;

        $f6 = $f5 - $f4;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f9 = r3.<java.awt.geom.Point2D$Float: float y>;

        $f8 = $r7.<java.awt.geom.Point2D$Float: float y>;

        $f10 = $f9 - $f8;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $f13 = r3.<java.awt.geom.Point2D$Float: float x>;

        $f12 = $r8.<java.awt.geom.Point2D$Float: float x>;

        $f14 = $f13 - $f12;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>($f14);

        $f17 = r3.<java.awt.geom.Point2D$Float: float y>;

        $f16 = $r8.<java.awt.geom.Point2D$Float: float y>;

        $f18 = $f17 - $f16;

        $f19 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        $f20 = staticinvoke <java.lang.Math: float max(float,float)>($f7, $f15);

        $f21 = staticinvoke <java.lang.Math: float max(float,float)>($f11, $f19);

        $f22 = $f7 / $f20;

        $r7.<java.awt.geom.Point2D$Float: float x> = $f22;

        $f23 = $f11 / $f21;

        $r7.<java.awt.geom.Point2D$Float: float y> = $f23;

        $f24 = $f15 / $f20;

        $r8.<java.awt.geom.Point2D$Float: float x> = $f24;

        $f25 = $f19 / $f21;

        $r8.<java.awt.geom.Point2D$Float: float y> = $f25;

        f51 = 0.0F;

        f52 = 0.0F;

        f53 = 0.0F;

        f54 = 0.01F;

     label1:
        $b0 = f54 cmpg 1.0F;

        $i1 = (int) $b0;

        if $i1 > 0 goto label2;

        $r9 = new java.awt.geom.Point2D$Float;

        specialinvoke $r9.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, 0.0F);

        $r5 = staticinvoke <org.jdesktop.swingx.painter.BusyPainter: java.awt.geom.Point2D$Float getXY(float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float)>(f54, $r9, $r7, $r8);

        $f39 = $r5.<java.awt.geom.Point2D$Float: float x>;

        $f42 = $f39 - f52;

        $f40 = $r5.<java.awt.geom.Point2D$Float: float x>;

        $f41 = $f40 - f52;

        $f48 = $f42 * $f41;

        $f43 = $r5.<java.awt.geom.Point2D$Float: float y>;

        $f46 = $f43 - f53;

        $f44 = $r5.<java.awt.geom.Point2D$Float: float y>;

        $f45 = $f44 - f53;

        $f47 = $f46 * $f45;

        $f49 = $f48 + $f47;

        $d2 = (double) $f49;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $f50 = (float) $d3;

        f51 = f51 + $f50;

        f52 = $r5.<java.awt.geom.Point2D$Float: float x>;

        f53 = $r5.<java.awt.geom.Point2D$Float: float y>;

        f54 = f54 + 0.01F;

        goto label1;

     label2:
        $f27 = r1[2];

        $f26 = r3.<java.awt.geom.Point2D$Float: float x>;

        $f28 = $f27 - $f26;

        $f29 = staticinvoke <java.lang.Math: float abs(float)>($f28);

        $f31 = r1[3];

        $f30 = r3.<java.awt.geom.Point2D$Float: float y>;

        $f32 = $f31 - $f30;

        $f33 = staticinvoke <java.lang.Math: float abs(float)>($f32);

        $f35 = $f29 * $f29;

        $f34 = $f33 * $f33;

        $f36 = $f35 + $f34;

        $d0 = (double) $f36;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f37 = (float) $d1;

        $f38 = f51 * f37;

        return $f38;
    }

    private java.awt.geom.Point2D$Float getXY(float, float, float, float, float)
    {
        org.jdesktop.swingx.painter.BusyPainter r1;
        java.awt.geom.Point2D$Float $r0;
        float f0, f1, $f2, $f3, f4, $f5, $f6, f7, $f8, f9, f10, f11, $f12, $f13, $f14, f15, f16, $f17, $f18, $f19, $f20, $f21;

        r1 := @this: org.jdesktop.swingx.painter.BusyPainter;

        f0 := @parameter0: float;

        f10 := @parameter1: float;

        f15 := @parameter2: float;

        f11 := @parameter3: float;

        f16 := @parameter4: float;

        f1 = 1.0F - f0;

        $f3 = 3.0F * f0;

        $f2 = f1 * f1;

        f4 = $f3 * $f2;

        $f5 = f0 * f0;

        $f6 = 3.0F * $f5;

        f7 = $f6 * f1;

        $f8 = f0 * f0;

        f9 = $f8 * f0;

        $r0 = new java.awt.geom.Point2D$Float;

        $f13 = f4 * f10;

        $f12 = f7 * f11;

        $f14 = $f13 + $f12;

        $f21 = $f14 + f9;

        $f18 = f4 * f15;

        $f17 = f7 * f16;

        $f19 = $f18 + $f17;

        $f20 = $f19 + f9;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f21, $f20);

        return $r0;
    }

    public static java.awt.geom.Point2D$Float getXY(float, java.awt.geom.Point2D$Float, java.awt.geom.Point2D$Float, java.awt.geom.Point2D$Float)
    {
        java.awt.geom.Point2D$Float $r0, r1, r2, r3;
        float f0, f1, f2, $f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;

        f0 := @parameter0: float;

        r1 := @parameter1: java.awt.geom.Point2D$Float;

        r2 := @parameter2: java.awt.geom.Point2D$Float;

        r3 := @parameter3: java.awt.geom.Point2D$Float;

        f1 = 1.0F - f0;

        f2 = f1 * f1;

        $f3 = 2.0F * f0;

        f4 = $f3 * f1;

        f5 = f0 * f0;

        $r0 = new java.awt.geom.Point2D$Float;

        $f6 = r1.<java.awt.geom.Point2D$Float: float x>;

        $f9 = f2 * $f6;

        $f7 = r2.<java.awt.geom.Point2D$Float: float x>;

        $f8 = f4 * $f7;

        $f12 = $f9 + $f8;

        $f10 = r3.<java.awt.geom.Point2D$Float: float x>;

        $f11 = f5 * $f10;

        $f21 = $f12 + $f11;

        $f13 = r1.<java.awt.geom.Point2D$Float: float y>;

        $f16 = f2 * $f13;

        $f14 = r2.<java.awt.geom.Point2D$Float: float y>;

        $f15 = f4 * $f14;

        $f19 = $f16 + $f15;

        $f17 = r3.<java.awt.geom.Point2D$Float: float y>;

        $f18 = f5 * $f17;

        $f20 = $f19 + $f18;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f21, $f20);

        return $r0;
    }

    private java.awt.Color calcFrameColor(int)
    {
        java.awt.Color $r1, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        float $f0, $f1, $f2, $f3, $f4, f5, f6;
        org.jdesktop.swingx.JXBusyLabel$Direction $r2, $r3, $r4, $r5;
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i19;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        i2 := @parameter0: int;

        $i0 = r0.<org.jdesktop.swingx.painter.BusyPainter: int frame>;

        $i19 = (int) -1;

        if $i0 != $i19 goto label1;

        $r12 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        return $r12;

     label1:
        i17 = 0;

     label2:
        $i1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        if i17 >= $i1 goto label5;

        $r3 = r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction direction>;

        $r2 = <org.jdesktop.swingx.JXBusyLabel$Direction: org.jdesktop.swingx.JXBusyLabel$Direction RIGHT>;

        if $r3 != $r2 goto label3;

        $i8 = r0.<org.jdesktop.swingx.painter.BusyPainter: int frame>;

        $i9 = $i8 - i17;

        $i10 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        $i11 = $i9 + $i10;

        $i12 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        $i13 = $i11 % $i12;

        if i2 != $i13 goto label3;

        $i14 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        $i15 = $i14 - i17;

        $f2 = (float) $i15;

        $i16 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        $f3 = (float) $i16;

        $f4 = $f2 / $f3;

        f5 = 1.0F - $f4;

        $r9 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getHighlightColor()>();

        $r11 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color interpolate(java.awt.Color,java.awt.Color,float)>($r9, $r10, f5);

        return $r11;

     label3:
        $r5 = r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction direction>;

        $r4 = <org.jdesktop.swingx.JXBusyLabel$Direction: org.jdesktop.swingx.JXBusyLabel$Direction LEFT>;

        if $r5 != $r4 goto label4;

        $i3 = r0.<org.jdesktop.swingx.painter.BusyPainter: int frame>;

        $i4 = $i3 + i17;

        $i5 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        $i6 = $i4 % $i5;

        if i2 != $i6 goto label4;

        $f0 = (float) i17;

        $i7 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        $f1 = (float) $i7;

        f6 = $f0 / $f1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getHighlightColor()>();

        $r8 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Color interpolate(java.awt.Color,java.awt.Color,float)>($r6, $r7, f6);

        return $r8;

     label4:
        i17 = i17 + 1;

        goto label2;

     label5:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        return $r1;
    }

    public int getFrame()
    {
        int $i0;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $i0 = r0.<org.jdesktop.swingx.painter.BusyPainter: int frame>;

        return $i0;
    }

    public void setFrame(int)
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i0, i1, $i2;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getFrame()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: int frame> = i1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getFrame()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("frame", $r1, $r2);

        return;
    }

    public java.awt.Color getBaseColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color baseColor>;

        return $r1;
    }

    public void setBaseColor(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color baseColor> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getBaseColor()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("baseColor", $r1, $r3);

        return;
    }

    public java.awt.Color getHighlightColor()
    {
        java.awt.Color $r1;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color highlightColor>;

        return $r1;
    }

    public void setHighlightColor(java.awt.Color)
    {
        java.awt.Color $r1, r2, $r3;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getHighlightColor()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color highlightColor> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Color getHighlightColor()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("highlightColor", $r1, $r3);

        return;
    }

    public int getPoints()
    {
        int $i0;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $i0 = r0.<org.jdesktop.swingx.painter.BusyPainter: int points>;

        return $i0;
    }

    public void setPoints(int)
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i0, i1, $i2;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: int points> = i1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getPoints()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("points", $r1, $r2);

        return;
    }

    public int getTrailLength()
    {
        int $i0;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $i0 = r0.<org.jdesktop.swingx.painter.BusyPainter: int trailLength>;

        return $i0;
    }

    public void setTrailLength(int)
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        int $i0, i1, $i2;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: int trailLength> = i1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: int getTrailLength()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("trailLength", $r1, $r2);

        return;
    }

    public final java.awt.Shape getPointShape()
    {
        java.awt.Shape $r1;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape pointShape>;

        return $r1;
    }

    public final void setPointShape(java.awt.Shape)
    {
        java.awt.Shape $r1, r2, $r3, $r4, $r5, $r6;
        org.jdesktop.swingx.painter.BusyPainter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: java.awt.Shape;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape pointShape> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        if $r3 == $r1 goto label1;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getPointShape()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("pointShape", $r1, $r6);

     label1:
        return;
    }

    public final java.awt.Shape getTrajectory()
    {
        java.awt.Shape $r1;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape trajectory>;

        return $r1;
    }

    public final void setTrajectory(java.awt.Shape)
    {
        java.awt.Shape $r1, r2, $r3, $r4, $r5, $r6;
        org.jdesktop.swingx.painter.BusyPainter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: java.awt.Shape;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape trajectory> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        if $r3 == $r1 goto label1;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: java.awt.Shape getTrajectory()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("trajectory", $r1, $r6);

     label1:
        return;
    }

    public void setDirection(org.jdesktop.swingx.JXBusyLabel$Direction)
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        org.jdesktop.swingx.JXBusyLabel$Direction $r1, r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: org.jdesktop.swingx.JXBusyLabel$Direction;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction getDirection()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction direction> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction getDirection()>();

        if $r3 == $r1 goto label1;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction getDirection()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction getDirection()>();

        $z0 = virtualinvoke $r5.<org.jdesktop.swingx.JXBusyLabel$Direction: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction getDirection()>();

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("direction", $r1, $r6);

     label1:
        return;
    }

    public org.jdesktop.swingx.JXBusyLabel$Direction getDirection()
    {
        org.jdesktop.swingx.JXBusyLabel$Direction $r1;
        org.jdesktop.swingx.painter.BusyPainter r0;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        $r1 = r0.<org.jdesktop.swingx.painter.BusyPainter: org.jdesktop.swingx.JXBusyLabel$Direction direction>;

        return $r1;
    }

    protected java.awt.Shape provideShape(java.awt.Graphics2D, java.lang.Object, int, int)
    {
        java.awt.Rectangle $r0;
        java.awt.Graphics2D r2;
        org.jdesktop.swingx.painter.BusyPainter r1;
        int i0, i1;
        java.lang.Object r3;

        r1 := @this: org.jdesktop.swingx.painter.BusyPainter;

        r2 := @parameter0: java.awt.Graphics2D;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new java.awt.Rectangle;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, i0, i1);

        return $r0;
    }

    public void setPaintCentered(boolean)
    {
        org.jdesktop.swingx.painter.BusyPainter r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.painter.BusyPainter;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: boolean isPaintCentered()>();

        r0.<org.jdesktop.swingx.painter.BusyPainter: boolean paintCentered> = z1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: boolean isPaintCentered()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.painter.BusyPainter: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("paintCentered", $r1, $r2);

        return;
    }
}
