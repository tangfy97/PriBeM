public class com.pff.PSTTimeZone extends java.lang.Object
{
    public static java.util.SimpleTimeZone utcTimeZone;
    private java.lang.String name;
    private com.pff.PSTTimeZone$TZRule rule;
    private java.util.SimpleTimeZone simpleTimeZone;

    void <init>(byte[])
    {
        byte[] r1;
        java.lang.Object[] $r5;
        long $l0, $l1, $l5, $l9;
        com.pff.PSTTimeZone r0;
        int $i2, i3, $i4, i6, $i7, $i8, i10, $i11, $i12, i13, i14, i15, i16;
        java.lang.String $r2, $r7;
        java.io.PrintStream $r6;
        com.pff.PSTTimeZone$TZRule $r3;
        java.lang.Exception $r4;

        r0 := @this: com.pff.PSTTimeZone;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone> = null;

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = null;

        r0.<com.pff.PSTTimeZone: java.lang.String name> = "";

     label1:
        $l0 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 2, 4);

        i13 = (int) $l0;

        $l1 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, 6, 8);

        $i2 = (int) $l1;

        i3 = 2 * $i2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 8, i3, "UTF-16LE");

        r0.<com.pff.PSTTimeZone: java.lang.String name> = $r2;

        i14 = 8 + i3;

        $i4 = i14 + 2;

        $l5 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, i14, $i4);

        i6 = (int) $l5;

        i15 = 4 + i13;

        i16 = 0;

     label2:
        if i16 >= i6 goto label4;

        $i8 = i15 + 4;

        $i7 = i15 + 6;

        $l9 = staticinvoke <com.pff.PSTObject: long convertLittleEndianBytesToLong(byte[],int,int)>(r1, $i8, $i7);

        i10 = (int) $l9;

        $i11 = i10 & 2;

        if $i11 == 0 goto label3;

        $r3 = new com.pff.PSTTimeZone$TZRule;

        $i12 = i15 + 6;

        specialinvoke $r3.<com.pff.PSTTimeZone$TZRule: void <init>(com.pff.PSTTimeZone,byte[],int)>(r0, r1, $i12);

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = $r3;

        goto label4;

     label3:
        i15 = i15 + 66;

        i16 = i16 + 1;

        goto label2;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        $r5[0] = $r7;

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Exception reading timezone: %s\n", $r5);

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = null;

        r0.<com.pff.PSTTimeZone: java.lang.String name> = "";

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    void <init>(java.lang.String, byte[])
    {
        java.io.PrintStream $r6;
        byte[] r3;
        java.lang.Object[] $r5;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;
        java.lang.Exception $r4;
        com.pff.PSTTimeZone$SYSTEMTIME $r2;
        java.lang.String $r7, r8;

        r0 := @this: com.pff.PSTTimeZone;

        r8 := @parameter0: java.lang.String;

        r3 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone> = null;

        r0.<com.pff.PSTTimeZone: java.lang.String name> = r8;

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = null;

     label1:
        $r1 = new com.pff.PSTTimeZone$TZRule;

        $r2 = new com.pff.PSTTimeZone$SYSTEMTIME;

        specialinvoke $r2.<com.pff.PSTTimeZone$SYSTEMTIME: void <init>(com.pff.PSTTimeZone)>(r0);

        specialinvoke $r1.<com.pff.PSTTimeZone$TZRule: void <init>(com.pff.PSTTimeZone,com.pff.PSTTimeZone$SYSTEMTIME,byte[],int)>(r0, $r2, r3, 0);

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = $r1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        $r5[0] = $r7;

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Exception reading timezone: %s\n", $r5);

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule> = null;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        com.pff.PSTTimeZone r0;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: java.lang.String name>;

        return $r1;
    }

    public java.util.SimpleTimeZone getSimpleTimeZone()
    {
        com.pff.PSTTimeZone r0;
        short $s0, $s1, $s4, $s5, $s9, $s10, $s12, $s13, $s16, $s26, $s27, $s30, $s33, $s35, $s36, $s39, $s42;
        java.lang.String $r41, $r46;
        com.pff.PSTTimeZone$SYSTEMTIME $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40;
        java.util.SimpleTimeZone $r1, $r42, $r47, $r48, $r49, $r50;
        int $i2, i3, $i6, $i7, i8, $i11, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i31, $i32, $i34, $i37, $i38, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79;
        com.pff.PSTTimeZone$TZRule $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r23, $r24, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r44, $r45;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone>;

        if $r1 == null goto label1;

        $r48 = r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone>;

        return $r48;

     label1:
        $r2 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r3 = $r2.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s0 = $r3.<com.pff.PSTTimeZone$SYSTEMTIME: short wMonth>;

        if $s0 != 0 goto label2;

        $r49 = new java.util.SimpleTimeZone;

        $r44 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i54 = $r44.<com.pff.PSTTimeZone$TZRule: int lBias>;

        $r45 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i53 = $r45.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        $i55 = $i54 + $i53;

        $i56 = $i55 * 60;

        $i57 = $i56 * 1000;

        $r46 = r0.<com.pff.PSTTimeZone: java.lang.String name>;

        specialinvoke $r49.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i57, $r46);

        r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone> = $r49;

        $r47 = r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone>;

        return $r47;

     label2:
        $r4 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r5 = $r4.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s1 = $r5.<com.pff.PSTTimeZone$SYSTEMTIME: short wMonth>;

        $i60 = (int) $s1;

        $i2 = $i60 - 1;

        i3 = $i2 + 0;

        $r6 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r7 = $r6.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s4 = $r7.<com.pff.PSTTimeZone$SYSTEMTIME: short wDay>;

        $i61 = (int) $s4;

        if $i61 != 5 goto label3;

        $i63 = (int) -1;

        $i58 = $i63;

        goto label4;

     label3:
        $r8 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r9 = $r8.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s5 = $r9.<com.pff.PSTTimeZone$SYSTEMTIME: short wDay>;

        $i64 = (int) $s5;

        $i6 = $i64 - 1;

        $i7 = $i6 * 7;

        $i58 = $i7 + 1;

     label4:
        i8 = $i58;

        $r10 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r11 = $r10.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s9 = $r11.<com.pff.PSTTimeZone$SYSTEMTIME: short wDayOfWeek>;

        $i65 = (int) $s9;

        $i51 = $i65 + 1;

        $r12 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r13 = $r12.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s10 = $r13.<com.pff.PSTTimeZone$SYSTEMTIME: short wMonth>;

        $i66 = (int) $s10;

        $i11 = $i66 - 1;

        $i52 = $i11 + 0;

        $r14 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r15 = $r14.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s12 = $r15.<com.pff.PSTTimeZone$SYSTEMTIME: short wDay>;

        $i67 = (int) $s12;

        if $i67 != 5 goto label5;

        $i69 = (int) -1;

        $i59 = $i69;

        goto label6;

     label5:
        $r16 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r17 = $r16.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s13 = $r17.<com.pff.PSTTimeZone$SYSTEMTIME: short wDay>;

        $i70 = (int) $s13;

        $i14 = $i70 - 1;

        $i15 = $i14 * 7;

        $i59 = $i15 + 1;

     label6:
        $r18 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r19 = $r18.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s16 = $r19.<com.pff.PSTTimeZone$SYSTEMTIME: short wDayOfWeek>;

        $i71 = (int) $s16;

        $i49 = $i71 + 1;

        $r20 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i18 = $r20.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        $r21 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i17 = $r21.<com.pff.PSTTimeZone$TZRule: int lDaylightBias>;

        $i19 = $i18 - $i17;

        $i20 = $i19 * 60;

        $i50 = $i20 * 1000;

        $r50 = new java.util.SimpleTimeZone;

        $r23 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i22 = $r23.<com.pff.PSTTimeZone$TZRule: int lBias>;

        $r24 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i21 = $r24.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        $i23 = $i22 + $i21;

        $i24 = $i23 * 60;

        $i25 = $i24 * 1000;

        $i48 = neg $i25;

        $r41 = r0.<com.pff.PSTTimeZone: java.lang.String name>;

        $i47 = neg $i51;

        $r25 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r26 = $r25.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s26 = $r26.<com.pff.PSTTimeZone$SYSTEMTIME: short wHour>;

        $i72 = (int) $s26;

        $i28 = $i72 * 60;

        $r27 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r28 = $r27.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s27 = $r28.<com.pff.PSTTimeZone$SYSTEMTIME: short wMinute>;

        $i73 = (int) $s27;

        $i29 = $i28 + $i73;

        $i31 = $i29 * 60;

        $r29 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r30 = $r29.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s30 = $r30.<com.pff.PSTTimeZone$SYSTEMTIME: short wSecond>;

        $i74 = (int) $s30;

        $i32 = $i31 + $i74;

        $i34 = $i32 * 1000;

        $r31 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r32 = $r31.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        $s33 = $r32.<com.pff.PSTTimeZone$SYSTEMTIME: short wMilliseconds>;

        $i75 = (int) $s33;

        $i46 = $i34 + $i75;

        $i45 = neg $i49;

        $r33 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r34 = $r33.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s35 = $r34.<com.pff.PSTTimeZone$SYSTEMTIME: short wHour>;

        $i76 = (int) $s35;

        $i37 = $i76 * 60;

        $r35 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r36 = $r35.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s36 = $r36.<com.pff.PSTTimeZone$SYSTEMTIME: short wMinute>;

        $i77 = (int) $s36;

        $i38 = $i37 + $i77;

        $i40 = $i38 * 60;

        $r37 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r38 = $r37.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s39 = $r38.<com.pff.PSTTimeZone$SYSTEMTIME: short wSecond>;

        $i78 = (int) $s39;

        $i41 = $i40 + $i78;

        $i43 = $i41 * 1000;

        $r39 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r40 = $r39.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        $s42 = $r40.<com.pff.PSTTimeZone$SYSTEMTIME: short wMilliseconds>;

        $i79 = (int) $s42;

        $i44 = $i43 + $i79;

        specialinvoke $r50.<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int)>($i48, $r41, i3, i8, $i47, $i46, $i52, $i59, $i45, $i44, $i50);

        r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone> = $r50;

        $r42 = r0.<com.pff.PSTTimeZone: java.util.SimpleTimeZone simpleTimeZone>;

        return $r42;
    }

    public boolean isEqual(com.pff.PSTTimeZone)
    {
        java.io.PrintStream $r8;
        java.lang.Object[] $r6;
        com.pff.PSTTimeZone r0, r1;
        com.pff.PSTTimeZone$TZRule $r4, $r5;
        java.lang.String $r2, $r3, $r7;
        boolean $z0, $z1;

        r0 := @this: com.pff.PSTTimeZone;

        r1 := @parameter0: com.pff.PSTTimeZone;

        $r3 = r0.<com.pff.PSTTimeZone: java.lang.String name>;

        $r2 = r1.<com.pff.PSTTimeZone: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r4 = r1.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $z1 = virtualinvoke $r5.<com.pff.PSTTimeZone$TZRule: boolean isEqual(com.pff.PSTTimeZone$TZRule)>($r4);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.<com.pff.PSTTimeZone: java.lang.String name>;

        $r6[0] = $r7;

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Warning: different timezones with the same name: %s\n", $r6);

     label2:
        return 0;
    }

    public com.pff.PSTTimeZone$SYSTEMTIME getStart()
    {
        com.pff.PSTTimeZone$SYSTEMTIME $r2;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r2 = $r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME dtStart>;

        return $r2;
    }

    public int getBias()
    {
        int $i0;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i0 = $r1.<com.pff.PSTTimeZone$TZRule: int lBias>;

        return $i0;
    }

    public int getStandardBias()
    {
        int $i0;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i0 = $r1.<com.pff.PSTTimeZone$TZRule: int lStandardBias>;

        return $i0;
    }

    public int getDaylightBias()
    {
        int $i0;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $i0 = $r1.<com.pff.PSTTimeZone$TZRule: int lDaylightBias>;

        return $i0;
    }

    public com.pff.PSTTimeZone$SYSTEMTIME getDaylightStart()
    {
        com.pff.PSTTimeZone$SYSTEMTIME $r2;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r2 = $r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startDaylight>;

        return $r2;
    }

    public com.pff.PSTTimeZone$SYSTEMTIME getStandardStart()
    {
        com.pff.PSTTimeZone$SYSTEMTIME $r2;
        com.pff.PSTTimeZone r0;
        com.pff.PSTTimeZone$TZRule $r1;

        r0 := @this: com.pff.PSTTimeZone;

        $r1 = r0.<com.pff.PSTTimeZone: com.pff.PSTTimeZone$TZRule rule>;

        $r2 = $r1.<com.pff.PSTTimeZone$TZRule: com.pff.PSTTimeZone$SYSTEMTIME startStandard>;

        return $r2;
    }

    static void <clinit>()
    {
        java.util.SimpleTimeZone $r0;

        $r0 = new java.util.SimpleTimeZone;

        specialinvoke $r0.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "UTC");

        <com.pff.PSTTimeZone: java.util.SimpleTimeZone utcTimeZone> = $r0;

        return;
    }
}
