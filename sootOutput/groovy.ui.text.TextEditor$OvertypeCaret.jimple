class groovy.ui.text.TextEditor$OvertypeCaret extends javax.swing.text.DefaultCaret
{
    private final groovy.ui.text.TextEditor this$0;

    private void <init>(groovy.ui.text.TextEditor)
    {
        groovy.ui.text.TextEditor r1;
        groovy.ui.text.TextEditor$OvertypeCaret r0;

        r0 := @this: groovy.ui.text.TextEditor$OvertypeCaret;

        r1 := @parameter0: groovy.ui.text.TextEditor;

        r0.<groovy.ui.text.TextEditor$OvertypeCaret: groovy.ui.text.TextEditor this$0> = r1;

        specialinvoke r0.<javax.swing.text.DefaultCaret: void <init>()>();

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Color $r5, $r6, $r7;
        java.awt.Rectangle $r3;
        groovy.ui.text.TextEditor$OvertypeCaret r0;
        javax.swing.plaf.TextUI $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        javax.swing.text.BadLocationException $r10;
        javax.swing.text.JTextComponent $r1;
        java.awt.FontMetrics $r8, $r9;
        java.awt.Graphics r4;

        r0 := @this: groovy.ui.text.TextEditor$OvertypeCaret;

        r4 := @parameter0: java.awt.Graphics;

        $z0 = virtualinvoke r0.<groovy.ui.text.TextEditor$OvertypeCaret: boolean isVisible()>();

        if $z0 == 0 goto label4;

     label1:
        $r1 = virtualinvoke r0.<groovy.ui.text.TextEditor$OvertypeCaret: javax.swing.text.JTextComponent getComponent()>();

        $r2 = virtualinvoke $r1.<javax.swing.text.JTextComponent: javax.swing.plaf.TextUI getUI()>();

        $i0 = virtualinvoke r0.<groovy.ui.text.TextEditor$OvertypeCaret: int getDot()>();

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int)>($r1, $i0);

        $r5 = virtualinvoke r4.<java.awt.Graphics: java.awt.Color getColor()>();

        $r6 = virtualinvoke $r1.<javax.swing.text.JTextComponent: java.awt.Color getBackground()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $r7 = virtualinvoke $r1.<javax.swing.text.JTextComponent: java.awt.Color getCaretColor()>();

        virtualinvoke r4.<java.awt.Graphics: void setXORMode(java.awt.Color)>($r7);

        $i1 = $r3.<java.awt.Rectangle: int x>;

        $i2 = $r3.<java.awt.Rectangle: int y>;

        $r8 = virtualinvoke r4.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $i3 = virtualinvoke $r8.<java.awt.FontMetrics: int charWidth(char)>(119);

        $r9 = virtualinvoke r4.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $i4 = virtualinvoke $r9.<java.awt.FontMetrics: int getHeight()>();

        virtualinvoke $r3.<java.awt.Rectangle: void setBounds(int,int,int,int)>($i1, $i2, $i3, $i4);

        $i8 = $r3.<java.awt.Rectangle: int x>;

        $i7 = $r3.<java.awt.Rectangle: int y>;

        $i6 = $r3.<java.awt.Rectangle: int width>;

        $i5 = $r3.<java.awt.Rectangle: int height>;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>($i8, $i7, $i6, $i5);

        virtualinvoke r4.<java.awt.Graphics: void setPaintMode()>();

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label4:
        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    protected synchronized void damage(java.awt.Rectangle)
    {
        java.awt.Rectangle r0;
        java.awt.Font $r3;
        javax.swing.text.JTextComponent $r2;
        groovy.ui.text.TextEditor$OvertypeCaret r1;
        java.awt.FontMetrics $r4;
        int $i0, $i1, $i2, $i3;

        r1 := @this: groovy.ui.text.TextEditor$OvertypeCaret;

        r0 := @parameter0: java.awt.Rectangle;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<groovy.ui.text.TextEditor$OvertypeCaret: javax.swing.text.JTextComponent getComponent()>();

        $i0 = r0.<java.awt.Rectangle: int x>;

        r1.<groovy.ui.text.TextEditor$OvertypeCaret: int x> = $i0;

        $i1 = r0.<java.awt.Rectangle: int y>;

        r1.<groovy.ui.text.TextEditor$OvertypeCaret: int y> = $i1;

        $r3 = virtualinvoke $r2.<javax.swing.text.JTextComponent: java.awt.Font getFont()>();

        $r4 = virtualinvoke $r2.<javax.swing.text.JTextComponent: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r3);

        $i2 = virtualinvoke $r4.<java.awt.FontMetrics: int charWidth(char)>(119);

        r1.<groovy.ui.text.TextEditor$OvertypeCaret: int width> = $i2;

        $i3 = r0.<java.awt.Rectangle: int height>;

        r1.<groovy.ui.text.TextEditor$OvertypeCaret: int height> = $i3;

        virtualinvoke r1.<groovy.ui.text.TextEditor$OvertypeCaret: void repaint()>();

     label1:
        return;
    }

    void <init>(groovy.ui.text.TextEditor, groovy.ui.text.TextEditor$1)
    {
        groovy.ui.text.TextEditor r1;
        groovy.ui.text.TextEditor$OvertypeCaret r0;
        groovy.ui.text.TextEditor$1 r2;

        r0 := @this: groovy.ui.text.TextEditor$OvertypeCaret;

        r1 := @parameter0: groovy.ui.text.TextEditor;

        r2 := @parameter1: groovy.ui.text.TextEditor$1;

        specialinvoke r0.<groovy.ui.text.TextEditor$OvertypeCaret: void <init>(groovy.ui.text.TextEditor)>(r1);

        return;
    }
}
