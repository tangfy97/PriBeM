public class org.bouncycastle.mail.smime.validator.SignedMailValidator extends java.lang.Object
{
    private static final java.lang.String RESOURCE_NAME;
    private static final java.lang.Class DEFAULT_CERT_PATH_REVIEWER;
    private static final java.lang.String EXT_KEY_USAGE;
    private static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    private static final int shortKeyLength;
    private static final long THIRTY_YEARS_IN_MILLI_SEC;
    private java.security.cert.CertStore certs;
    private org.bouncycastle.cms.SignerInformationStore signers;
    private java.util.Map results;
    private java.lang.String[] fromAddresses;
    private java.lang.Class certPathReviewerClass;

    public void <init>(javax.mail.internet.MimeMessage, java.security.cert.PKIXParameters) throws org.bouncycastle.mail.smime.validator.SignedMailValidatorException
    {
        org.bouncycastle.mail.smime.validator.SignedMailValidator r0;
        java.lang.Class $r3;
        javax.mail.internet.MimeMessage r1;
        java.security.cert.PKIXParameters r2;

        r0 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        r1 := @parameter0: javax.mail.internet.MimeMessage;

        r2 := @parameter1: java.security.cert.PKIXParameters;

        $r3 = <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class DEFAULT_CERT_PATH_REVIEWER>;

        specialinvoke r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: void <init>(javax.mail.internet.MimeMessage,java.security.cert.PKIXParameters,java.lang.Class)>(r1, r2, $r3);

        return;
    }

    public void <init>(javax.mail.internet.MimeMessage, java.security.cert.PKIXParameters, java.lang.Class) throws org.bouncycastle.mail.smime.validator.SignedMailValidatorException
    {
        javax.mail.MessagingException $r40;
        org.bouncycastle.cms.SignerInformationStore $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.mail.internet.MimeMultipart r41;
        org.bouncycastle.mail.smime.validator.SignedMailValidatorException $r22, $r38, $r39;
        java.lang.Exception $r32;
        org.bouncycastle.i18n.ErrorBundle $r21, $r33;
        java.lang.StringBuilder $r26, $r27, $r30;
        javax.mail.Address $r14;
        java.lang.Object[] $r34;
        java.lang.String[] $r8, $r9, $r12, $r16, $r19;
        java.util.HashMap $r10;
        javax.mail.internet.InternetAddress r15, $r18, r43;
        javax.mail.Address[] $r7;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String $r13, $r17, $r20, $r29, $r31, $r35, $r37;
        org.bouncycastle.mail.smime.validator.SignedMailValidator r0;
        javax.mail.internet.MimeMessage r3;
        java.security.cert.PKIXParameters r11;
        java.lang.IllegalArgumentException $r25;
        java.security.cert.CertStore $r5;
        java.lang.Class r1, $r2, $r28, $r36;
        java.lang.Object $r23;
        org.bouncycastle.mail.smime.SMIMESigned $r4, $r24, r42;

        r0 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        r3 := @parameter0: javax.mail.internet.MimeMessage;

        r11 := @parameter1: java.security.cert.PKIXParameters;

        r1 := @parameter2: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class certPathReviewerClass> = r1;

        $r2 = <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class DEFAULT_CERT_PATH_REVIEWER>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 != 0 goto label01;

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certPathReviewerClass is not a subclass of ");

        $r28 = <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class DEFAULT_CERT_PATH_REVIEWER>;

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r25;

     label01:
        $z1 = virtualinvoke r3.<javax.mail.internet.MimeMessage: boolean isMimeType(java.lang.String)>("multipart/signed");

        if $z1 == 0 goto label02;

        $r23 = virtualinvoke r3.<javax.mail.internet.MimeMessage: java.lang.Object getContent()>();

        r41 = (javax.mail.internet.MimeMultipart) $r23;

        $r24 = new org.bouncycastle.mail.smime.SMIMESigned;

        specialinvoke $r24.<org.bouncycastle.mail.smime.SMIMESigned: void <init>(javax.mail.internet.MimeMultipart)>(r41);

        r42 = $r24;

        goto label05;

     label02:
        $z2 = virtualinvoke r3.<javax.mail.internet.MimeMessage: boolean isMimeType(java.lang.String)>("application/pkcs7-mime");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke r3.<javax.mail.internet.MimeMessage: boolean isMimeType(java.lang.String)>("application/x-pkcs7-mime");

        if $z3 == 0 goto label04;

     label03:
        $r4 = new org.bouncycastle.mail.smime.SMIMESigned;

        specialinvoke $r4.<org.bouncycastle.mail.smime.SMIMESigned: void <init>(javax.mail.Part)>(r3);

        r42 = $r4;

        goto label05;

     label04:
        $r21 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r21.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.noSignedMessage");

        $r22 = new org.bouncycastle.mail.smime.validator.SignedMailValidatorException;

        specialinvoke $r22.<org.bouncycastle.mail.smime.validator.SignedMailValidatorException: void <init>(org.bouncycastle.i18n.ErrorBundle)>($r21);

        throw $r22;

     label05:
        $r5 = virtualinvoke r42.<org.bouncycastle.mail.smime.SMIMESigned: java.security.cert.CertStore getCertificatesAndCRLs(java.lang.String,java.lang.String)>("Collection", "BC");

        r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.CertStore certs> = $r5;

        $r6 = virtualinvoke r42.<org.bouncycastle.mail.smime.SMIMESigned: org.bouncycastle.cms.SignerInformationStore getSignerInfos()>();

        r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.cms.SignerInformationStore signers> = $r6;

        $r7 = virtualinvoke r3.<javax.mail.internet.MimeMessage: javax.mail.Address[] getFrom()>();

        r43 = null;

     label06:
        $r8 = virtualinvoke r3.<javax.mail.internet.MimeMessage: java.lang.String[] getHeader(java.lang.String)>("Sender");

        if $r8 == null goto label07;

        $r18 = new javax.mail.internet.InternetAddress;

        $r19 = virtualinvoke r3.<javax.mail.internet.MimeMessage: java.lang.String[] getHeader(java.lang.String)>("Sender");

        $r20 = $r19[0];

        specialinvoke $r18.<javax.mail.internet.InternetAddress: void <init>(java.lang.String)>($r20);

        r43 = $r18;

     label07:
        goto label09;

     label08:
        $r40 := @caughtexception;

     label09:
        $i0 = lengthof $r7;

        if r43 == null goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        $i1 = $i0 + $z5;

        $r9 = newarray (java.lang.String)[$i1];

        r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses> = $r9;

        i3 = 0;

     label12:
        $i4 = lengthof $r7;

        if i3 >= $i4 goto label13;

        $r14 = $r7[i3];

        r15 = (javax.mail.internet.InternetAddress) $r14;

        $r16 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses>;

        $r17 = virtualinvoke r15.<javax.mail.internet.InternetAddress: java.lang.String getAddress()>();

        $r16[i3] = $r17;

        i3 = i3 + 1;

        goto label12;

     label13:
        if r43 == null goto label14;

        $r12 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses>;

        $i2 = lengthof $r7;

        $r13 = virtualinvoke r43.<javax.mail.internet.InternetAddress: java.lang.String getAddress()>();

        $r12[$i2] = $r13;

     label14:
        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results> = $r10;

     label15:
        goto label18;

     label16:
        $r32 := @caughtexception;

        $z4 = $r32 instanceof org.bouncycastle.mail.smime.validator.SignedMailValidatorException;

        if $z4 == 0 goto label17;

        $r39 = (org.bouncycastle.mail.smime.validator.SignedMailValidatorException) $r32;

        throw $r39;

     label17:
        $r33 = new org.bouncycastle.i18n.ErrorBundle;

        $r34 = newarray (java.lang.Object)[3];

        $r35 = virtualinvoke $r32.<java.lang.Exception: java.lang.String getMessage()>();

        $r34[0] = $r35;

        $r34[1] = $r32;

        $r36 = virtualinvoke $r32.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r36.<java.lang.Class: java.lang.String getName()>();

        $r34[2] = $r37;

        specialinvoke $r33.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.exceptionReadingMessage", $r34);

        $r38 = new org.bouncycastle.mail.smime.validator.SignedMailValidatorException;

        specialinvoke $r38.<org.bouncycastle.mail.smime.validator.SignedMailValidatorException: void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable)>($r33, $r32);

        throw $r38;

     label18:
        virtualinvoke r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: void validateSignatures(java.security.cert.PKIXParameters)>(r11);

        return;

        catch javax.mail.MessagingException from label06 to label07 with label08;
        catch java.lang.Exception from label01 to label15 with label16;
    }

    protected void validateSignatures(java.security.cert.PKIXParameters)
    {
        java.security.cert.CertificateExpiredException $r71;
        java.security.GeneralSecurityException $r35;
        java.util.Map $r18, $r22, $r34, $r42;
        org.bouncycastle.cms.SignerInformationStore $r5;
        org.bouncycastle.asn1.cms.Attribute $r27;
        java.util.Set $r94;
        java.lang.Exception $r77;
        java.security.cert.CertStoreException $r83;
        org.bouncycastle.i18n.ErrorBundle $r16, $r23, $r24, $r28, $r29, $r32, $r36, $r66, $r72, $r78, $r84;
        java.lang.StringBuilder $r45, $r46, $r49, $r50, $r52, $r56, $r57, $r60, $r61, $r63;
        java.lang.Object[] $r37, $r67, $r73, $r79, $r85, $r96;
        java.util.ArrayList $r8, $r9, $r92;
        java.lang.String $r38, $r40, $r48, $r51, $r53, $r59, $r62, $r64, $r80, $r82, $r86, $r88;
        java.security.cert.X509Certificate r89;
        java.util.Date $r25, $r70, $r76, $r90, r91;
        java.lang.InstantiationException $r43;
        boolean $z0, $z1, $z2, $z3, z4;
        org.bouncycastle.asn1.DERObjectIdentifier $r26;
        java.lang.IllegalAccessException $r54;
        java.util.Collection $r6;
        org.bouncycastle.i18n.filter.TrustedInput $r68, $r69, $r74, $r75;
        org.bouncycastle.x509.PKIXCertPathReviewer $r103;
        java.util.List $r12, $r14, $r95, $r100;
        java.security.cert.CertificateNotYetValidException $r65;
        org.bouncycastle.cms.SignerId $r13;
        org.bouncycastle.mail.smime.validator.SignedMailValidator r3;
        java.util.Iterator $r7, $r15;
        org.bouncycastle.cms.SignerInformation r11;
        org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult $r17, $r21, $r33, $r41;
        java.security.PublicKey $r19;
        java.security.cert.CertPath $r98;
        java.security.cert.PKIXParameters r0, r2;
        java.lang.IllegalArgumentException $r44, $r55;
        org.bouncycastle.asn1.cms.AttributeTable $r20;
        org.bouncycastle.x509.CertPathReviewerException $r31;
        java.security.cert.CertStore $r4, $r93;
        java.lang.Object $r1, $r10, $r30, $r97, $r99, $r102;
        java.lang.Class $r39, $r47, $r58, $r81, $r87, $r101;

        r3 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        r0 := @parameter0: java.security.cert.PKIXParameters;

        $r1 = virtualinvoke r0.<java.security.cert.PKIXParameters: java.lang.Object clone()>();

        r2 = (java.security.cert.PKIXParameters) $r1;

        $r4 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.CertStore certs>;

        virtualinvoke r2.<java.security.cert.PKIXParameters: void addCertStore(java.security.cert.CertStore)>($r4);

        $r5 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.cms.SignerInformationStore signers>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.cms.SignerInformationStore: java.util.Collection getSigners()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label29;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.bouncycastle.cms.SignerInformation) $r10;

        r89 = null;

     label02:
        $r12 = virtualinvoke r2.<java.security.cert.PKIXParameters: java.util.List getCertStores()>();

        $r13 = virtualinvoke r11.<org.bouncycastle.cms.SignerInformation: org.bouncycastle.cms.SignerId getSID()>();

        $r14 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.List findCerts(java.util.List,java.security.cert.X509CertSelector)>($r12, $r13);

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        $r30 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r89 = (java.security.cert.X509Certificate) $r30;

     label03:
        goto label05;

     label04:
        $r83 := @caughtexception;

        $r84 = new org.bouncycastle.i18n.ErrorBundle;

        $r85 = newarray (java.lang.Object)[3];

        $r86 = virtualinvoke $r83.<java.security.cert.CertStoreException: java.lang.String getMessage()>();

        $r85[0] = $r86;

        $r85[1] = $r83;

        $r87 = virtualinvoke $r83.<java.lang.Object: java.lang.Class getClass()>();

        $r88 = virtualinvoke $r87.<java.lang.Class: java.lang.String getName()>();

        $r85[2] = $r88;

        specialinvoke $r84.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.exceptionRetrievingSignerCert", $r85);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r84);

     label05:
        if r89 == null goto label27;

        z4 = 0;

     label06:
        $r19 = virtualinvoke r89.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $z2 = virtualinvoke r11.<org.bouncycastle.cms.SignerInformation: boolean verify(java.security.PublicKey,java.lang.String)>($r19, "BC");

        z4 = $z2;

        if $z2 != 0 goto label07;

        $r29 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r29.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.signatureNotVerified");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r29);

     label07:
        goto label09;

     label08:
        $r77 := @caughtexception;

        $r78 = new org.bouncycastle.i18n.ErrorBundle;

        $r79 = newarray (java.lang.Object)[3];

        $r80 = virtualinvoke $r77.<java.lang.Exception: java.lang.String getMessage()>();

        $r79[0] = $r80;

        $r79[1] = $r77;

        $r81 = virtualinvoke $r77.<java.lang.Object: java.lang.Class getClass()>();

        $r82 = virtualinvoke $r81.<java.lang.Class: java.lang.String getName()>();

        $r79[2] = $r82;

        specialinvoke $r78.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.exceptionVerifyingSignature", $r79);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r78);

     label09:
        virtualinvoke r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: void checkSignerCert(java.security.cert.X509Certificate,java.util.List,java.util.List)>(r89, $r8, $r9);

        $r20 = virtualinvoke r11.<org.bouncycastle.cms.SignerInformation: org.bouncycastle.asn1.cms.AttributeTable getSignedAttributes()>();

        if $r20 == null goto label10;

        $r26 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_aa_receiptRequest>;

        $r27 = virtualinvoke $r20.<org.bouncycastle.asn1.cms.AttributeTable: org.bouncycastle.asn1.cms.Attribute get(org.bouncycastle.asn1.DERObjectIdentifier)>($r26);

        if $r27 == null goto label10;

        $r28 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r28.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.signedReceiptRequest");

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r28);

     label10:
        $r90 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Date getSignatureTime(org.bouncycastle.cms.SignerInformation)>(r11);

        r91 = $r90;

        if $r90 != null goto label11;

        $r24 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r24.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.noSigningTime");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = new java.util.Date;

        specialinvoke $r25.<java.util.Date: void <init>()>();

        r91 = $r25;

        goto label15;

     label11:
        virtualinvoke r89.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r90);

     label12:
        goto label15;

     label13:
        $r71 := @caughtexception;

        $r72 = new org.bouncycastle.i18n.ErrorBundle;

        $r73 = newarray (java.lang.Object)[2];

        $r74 = new org.bouncycastle.i18n.filter.TrustedInput;

        specialinvoke $r74.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r90);

        $r73[0] = $r74;

        $r75 = new org.bouncycastle.i18n.filter.TrustedInput;

        $r76 = virtualinvoke r89.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        specialinvoke $r75.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r76);

        $r73[1] = $r75;

        specialinvoke $r72.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.certExpired", $r73);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r72);

        goto label15;

     label14:
        $r65 := @caughtexception;

        $r66 = new org.bouncycastle.i18n.ErrorBundle;

        $r67 = newarray (java.lang.Object)[2];

        $r68 = new org.bouncycastle.i18n.filter.TrustedInput;

        specialinvoke $r68.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r90);

        $r67[0] = $r68;

        $r69 = new org.bouncycastle.i18n.filter.TrustedInput;

        $r70 = virtualinvoke r89.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        specialinvoke $r69.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r70);

        $r67[1] = $r69;

        specialinvoke $r66.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.certNotYetValid", $r67);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r66);

     label15:
        virtualinvoke r2.<java.security.cert.PKIXParameters: void setDate(java.util.Date)>(r91);

     label16:
        $r92 = new java.util.ArrayList;

        specialinvoke $r92.<java.util.ArrayList: void <init>()>();

        $r93 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.CertStore certs>;

        interfaceinvoke $r92.<java.util.List: boolean add(java.lang.Object)>($r93);

        $r94 = virtualinvoke r2.<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()>();

        $r95 = virtualinvoke r0.<java.security.cert.PKIXParameters: java.util.List getCertStores()>();

        $r96 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Object[] createCertPath(java.security.cert.X509Certificate,java.util.Set,java.util.List,java.util.List)>(r89, $r94, $r95, $r92);

        $r97 = $r96[0];

        $r98 = (java.security.cert.CertPath) $r97;

        $r99 = $r96[1];

        $r100 = (java.util.List) $r99;

     label17:
        $r101 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class certPathReviewerClass>;

        $r102 = virtualinvoke $r101.<java.lang.Class: java.lang.Object newInstance()>();

        $r103 = (org.bouncycastle.x509.PKIXCertPathReviewer) $r102;

     label18:
        goto label21;

     label19:
        $r54 := @caughtexception;

        $r55 = new java.lang.IllegalArgumentException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate object of type ");

        $r58 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class certPathReviewerClass>;

        $r59 = virtualinvoke $r58.<java.lang.Class: java.lang.String getName()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r62 = virtualinvoke $r54.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r64);

        throw $r55;

     label20:
        $r43 := @caughtexception;

        $r44 = new java.lang.IllegalArgumentException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot instantiate object of type ");

        $r47 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class certPathReviewerClass>;

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r51 = virtualinvoke $r43.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53);

        throw $r44;

     label21:
        virtualinvoke $r103.<org.bouncycastle.x509.PKIXCertPathReviewer: void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)>($r98, r2);

        $z3 = virtualinvoke $r103.<org.bouncycastle.x509.PKIXCertPathReviewer: boolean isValidCertPath()>();

        if $z3 != 0 goto label22;

        $r23 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r23.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.certPathInvalid");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r23);

     label22:
        $r22 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results>;

        $r21 = new org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult;

        specialinvoke $r21.<org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult: void <init>(org.bouncycastle.mail.smime.validator.SignedMailValidator,org.bouncycastle.x509.PKIXCertPathReviewer,boolean,java.util.List,java.util.List,java.util.List)>(r3, $r103, z4, $r8, $r9, $r100);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r21);

     label23:
        goto label26;

     label24:
        $r35 := @caughtexception;

        $r36 = new org.bouncycastle.i18n.ErrorBundle;

        $r37 = newarray (java.lang.Object)[3];

        $r38 = virtualinvoke $r35.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        $r37[0] = $r38;

        $r37[1] = $r35;

        $r39 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        $r37[2] = $r40;

        specialinvoke $r36.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.exceptionCreateCertPath", $r37);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r42 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results>;

        $r41 = new org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult;

        specialinvoke $r41.<org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult: void <init>(org.bouncycastle.mail.smime.validator.SignedMailValidator,org.bouncycastle.x509.PKIXCertPathReviewer,boolean,java.util.List,java.util.List,java.util.List)>(r3, null, z4, $r8, $r9, null);

        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r41);

        goto label26;

     label25:
        $r31 := @caughtexception;

        $r32 = virtualinvoke $r31.<org.bouncycastle.x509.CertPathReviewerException: org.bouncycastle.i18n.ErrorBundle getErrorMessage()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r34 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results>;

        $r33 = new org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult;

        specialinvoke $r33.<org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult: void <init>(org.bouncycastle.mail.smime.validator.SignedMailValidator,org.bouncycastle.x509.PKIXCertPathReviewer,boolean,java.util.List,java.util.List,java.util.List)>(r3, null, z4, $r8, $r9, null);

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r33);

     label26:
        goto label28;

     label27:
        $r16 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r16.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.noSignerCert");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r18 = r3.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results>;

        $r17 = new org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult;

        specialinvoke $r17.<org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult: void <init>(org.bouncycastle.mail.smime.validator.SignedMailValidator,org.bouncycastle.x509.PKIXCertPathReviewer,boolean,java.util.List,java.util.List,java.util.List)>(r3, null, 0, $r8, $r9, null);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r17);

     label28:
        goto label01;

     label29:
        return;

        catch java.security.cert.CertStoreException from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.security.cert.CertificateExpiredException from label11 to label12 with label13;
        catch java.security.cert.CertificateNotYetValidException from label11 to label12 with label14;
        catch java.lang.IllegalAccessException from label17 to label18 with label19;
        catch java.lang.InstantiationException from label17 to label18 with label20;
        catch java.security.GeneralSecurityException from label16 to label23 with label24;
        catch org.bouncycastle.x509.CertPathReviewerException from label16 to label23 with label25;
    }

    public static java.util.Set getEmailAddresses(java.security.cert.X509Certificate) throws java.io.IOException, java.security.cert.CertificateEncodingException
    {
        java.security.cert.X509Certificate r1;
        byte[] $r6;
        org.bouncycastle.jce.X509Principal $r2;
        org.bouncycastle.asn1.DERObject $r7;
        org.bouncycastle.asn1.DEREncodable $r8;
        java.util.HashSet $r0;
        java.util.Vector $r3, $r4;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r5, $r11, $r12, $r16, $r17;
        org.bouncycastle.asn1.DERObjectIdentifier $r14;
        boolean $z0;
        org.bouncycastle.asn1.ASN1TaggedObject r9;
        org.bouncycastle.asn1.DERIA5String $r10;
        org.bouncycastle.asn1.DERSequence r18;
        java.lang.Object $r13, $r15;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <org.bouncycastle.jce.PrincipalUtil: org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)>(r1);

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.X509Principal: java.util.Vector getOIDs()>();

        $r4 = virtualinvoke $r2.<org.bouncycastle.jce.X509Principal: java.util.Vector getValues()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i3 >= $i0 goto label3;

        $r13 = virtualinvoke $r3.<java.util.Vector: java.lang.Object get(int)>(i3);

        $r14 = <org.bouncycastle.jce.X509Principal: org.bouncycastle.asn1.DERObjectIdentifier EmailAddress>;

        $z0 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label2;

        $r15 = virtualinvoke $r4.<java.util.Vector: java.lang.Object get(int)>(i3);

        $r16 = (java.lang.String) $r15;

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r5 = <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $r6 = virtualinvoke r1.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r5);

        if $r6 == null goto label6;

        $r7 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.asn1.DERObject getObject(byte[])>($r6);

        r18 = (org.bouncycastle.asn1.DERSequence) $r7;

        i4 = 0;

     label4:
        $i1 = virtualinvoke r18.<org.bouncycastle.asn1.DERSequence: int size()>();

        if i4 >= $i1 goto label6;

        $r8 = virtualinvoke r18.<org.bouncycastle.asn1.DERSequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(i4);

        r9 = (org.bouncycastle.asn1.ASN1TaggedObject) $r8;

        $i2 = virtualinvoke r9.<org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i2 != 1 goto label5;

        $r10 = staticinvoke <org.bouncycastle.asn1.DERIA5String: org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r9, 1);

        $r11 = virtualinvoke $r10.<org.bouncycastle.asn1.DERIA5String: java.lang.String getString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        return $r0;
    }

    private static org.bouncycastle.asn1.DERObject getObject(byte[]) throws java.io.IOException
    {
        byte[] r1, $r5;
        org.bouncycastle.asn1.ASN1OctetString r3;
        org.bouncycastle.asn1.DERObject $r2, $r6;
        org.bouncycastle.asn1.ASN1InputStream $r0, $r4;

        r1 := @parameter0: byte[];

        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r1);

        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        r3 = (org.bouncycastle.asn1.ASN1OctetString) $r2;

        $r4 = new org.bouncycastle.asn1.ASN1InputStream;

        $r5 = virtualinvoke r3.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        return $r6;
    }

    protected void checkSignerCert(java.security.cert.X509Certificate, java.util.List, java.util.List)
    {
        byte[] $r53;
        java.lang.Integer $r54;
        java.security.interfaces.RSAPublicKey $r36;
        byte $b5;
        java.math.BigInteger $r35, $r37;
        java.util.Set $r3;
        java.lang.Exception $r38, $r44;
        org.bouncycastle.i18n.ErrorBundle $r55, $r58, $r59, $r60, $r61, $r62, $r65, $r66;
        java.lang.Object[] $r7, $r24, $r31, $r40, $r46;
        org.bouncycastle.asn1.DERObject $r17;
        long $l2, $l3, $l4;
        org.bouncycastle.asn1.x509.KeyPurposeId $r19, $r20;
        org.bouncycastle.asn1.x509.ExtendedKeyUsage $r18;
        java.lang.String $r10, $r14, $r15, $r41, $r43, $r47, $r49, $r52;
        boolean[] $r2;
        java.security.interfaces.DSAPublicKey $r33;
        java.security.interfaces.DSAParams $r34;
        java.security.cert.X509Certificate r0;
        java.util.Date $r26, $r28, $r50, $r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        org.bouncycastle.i18n.filter.TrustedInput $r56, $r57;
        java.util.List r12, r29;
        org.bouncycastle.i18n.filter.UntrustedInput $r63, $r64;
        java.lang.String[] $r5, $r9, $r13;
        int $i0, i1, i6, $i8, $i10, $i11;
        org.bouncycastle.mail.smime.validator.SignedMailValidator r4;
        java.security.PublicKey $r1;
        java.lang.Class $r42, $r48;

        r4 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r12 := @parameter1: java.util.List;

        r29 := @parameter2: java.util.List;

        $r1 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $i8 = (int) -1;

        i1 = $i8;

        $z0 = $r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 == 0 goto label01;

        $r36 = (java.security.interfaces.RSAPublicKey) $r1;

        $r37 = interfaceinvoke $r36.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        i1 = virtualinvoke $r37.<java.math.BigInteger: int bitLength()>();

        goto label02;

     label01:
        $z1 = $r1 instanceof java.security.interfaces.DSAPublicKey;

        if $z1 == 0 goto label02;

        $r33 = (java.security.interfaces.DSAPublicKey) $r1;

        $r34 = interfaceinvoke $r33.<java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()>();

        $r35 = interfaceinvoke $r34.<java.security.interfaces.DSAParams: java.math.BigInteger getP()>();

        i1 = virtualinvoke $r35.<java.math.BigInteger: int bitLength()>();

     label02:
        $i10 = (int) -1;

        if i1 == $i10 goto label03;

        if i1 > 512 goto label03;

        $r55 = new org.bouncycastle.i18n.ErrorBundle;

        $r31 = newarray (java.lang.Object)[1];

        $r54 = new java.lang.Integer;

        specialinvoke $r54.<java.lang.Integer: void <init>(int)>(i1);

        $r31[0] = $r54;

        specialinvoke $r55.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.shortSigningKey", $r31);

        interfaceinvoke r29.<java.util.List: boolean add(java.lang.Object)>($r55);

     label03:
        $r50 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        $l2 = virtualinvoke $r50.<java.util.Date: long getTime()>();

        $r51 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        $l3 = virtualinvoke $r51.<java.util.Date: long getTime()>();

        $l4 = $l2 - $l3;

        $b5 = $l4 cmp 946728000000L;

        $i11 = (int) $b5;

        if $i11 <= 0 goto label04;

        $r58 = new org.bouncycastle.i18n.ErrorBundle;

        $r24 = newarray (java.lang.Object)[2];

        $r56 = new org.bouncycastle.i18n.filter.TrustedInput;

        $r26 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Date getNotBefore()>();

        specialinvoke $r56.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r26);

        $r24[0] = $r56;

        $r57 = new org.bouncycastle.i18n.filter.TrustedInput;

        $r28 = virtualinvoke r0.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        specialinvoke $r57.<org.bouncycastle.i18n.filter.TrustedInput: void <init>(java.lang.Object)>($r28);

        $r24[1] = $r57;

        specialinvoke $r58.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.longValidity", $r24);

        interfaceinvoke r29.<java.util.List: boolean add(java.lang.Object)>($r58);

     label04:
        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if $r2 == null goto label05;

        $z6 = $r2[0];

        if $z6 != 0 goto label05;

        $z7 = $r2[1];

        if $z7 != 0 goto label05;

        $r59 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r59.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.signingNotPermitted");

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r59);

     label05:
        $r52 = <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String EXT_KEY_USAGE>;

        $r53 = virtualinvoke r0.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r52);

        if $r53 == null goto label06;

        $r17 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.asn1.DERObject getObject(byte[])>($r53);

        $r18 = staticinvoke <org.bouncycastle.asn1.x509.ExtendedKeyUsage: org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)>($r17);

        $r19 = <org.bouncycastle.asn1.x509.KeyPurposeId: org.bouncycastle.asn1.x509.KeyPurposeId anyExtendedKeyUsage>;

        $z4 = virtualinvoke $r18.<org.bouncycastle.asn1.x509.ExtendedKeyUsage: boolean hasKeyPurposeId(org.bouncycastle.asn1.x509.KeyPurposeId)>($r19);

        if $z4 != 0 goto label06;

        $r20 = <org.bouncycastle.asn1.x509.KeyPurposeId: org.bouncycastle.asn1.x509.KeyPurposeId id_kp_emailProtection>;

        $z5 = virtualinvoke $r18.<org.bouncycastle.asn1.x509.ExtendedKeyUsage: boolean hasKeyPurposeId(org.bouncycastle.asn1.x509.KeyPurposeId)>($r20);

        if $z5 != 0 goto label06;

        $r60 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r60.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.extKeyUsageNotPermitted");

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r60);

     label06:
        goto label08;

     label07:
        $r44 := @caughtexception;

        $r61 = new org.bouncycastle.i18n.ErrorBundle;

        $r46 = newarray (java.lang.Object)[3];

        $r47 = virtualinvoke $r44.<java.lang.Exception: java.lang.String getMessage()>();

        $r46[0] = $r47;

        $r46[1] = $r44;

        $r48 = virtualinvoke $r44.<java.lang.Object: java.lang.Class getClass()>();

        $r49 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        $r46[2] = $r49;

        specialinvoke $r61.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.extKeyUsageError", $r46);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r61);

     label08:
        $r3 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Set getEmailAddresses(java.security.cert.X509Certificate)>(r0);

        $z2 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label09;

        $r62 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r62.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.noEmailInCert");

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r62);

        goto label13;

     label09:
        z8 = 0;

        i6 = 0;

     label10:
        $r5 = r4.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses>;

        $i0 = lengthof $r5;

        if i6 >= $i0 goto label12;

        $r13 = r4.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses>;

        $r14 = $r13[i6];

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r15);

        if $z3 == 0 goto label11;

        z8 = 1;

        goto label12;

     label11:
        i6 = i6 + 1;

        goto label10;

     label12:
        if z8 != 0 goto label13;

        $r65 = new org.bouncycastle.i18n.ErrorBundle;

        $r7 = newarray (java.lang.Object)[2];

        $r63 = new org.bouncycastle.i18n.filter.UntrustedInput;

        $r9 = r4.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String[] fromAddresses>;

        $r10 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String addressesToString(java.lang.Object[])>($r9);

        specialinvoke $r63.<org.bouncycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r10);

        $r7[0] = $r63;

        $r64 = new org.bouncycastle.i18n.filter.UntrustedInput;

        specialinvoke $r64.<org.bouncycastle.i18n.filter.UntrustedInput: void <init>(java.lang.Object)>($r3);

        $r7[1] = $r64;

        specialinvoke $r65.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.emailFromCertMismatch", $r7);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r65);

     label13:
        goto label15;

     label14:
        $r38 := @caughtexception;

        $r66 = new org.bouncycastle.i18n.ErrorBundle;

        $r40 = newarray (java.lang.Object)[3];

        $r41 = virtualinvoke $r38.<java.lang.Exception: java.lang.String getMessage()>();

        $r40[0] = $r41;

        $r40[1] = $r38;

        $r42 = virtualinvoke $r38.<java.lang.Object: java.lang.Class getClass()>();

        $r43 = virtualinvoke $r42.<java.lang.Class: java.lang.String getName()>();

        $r40[2] = $r43;

        specialinvoke $r66.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.certGetEmailError", $r40);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r66);

     label15:
        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label13 with label14;
    }

    static java.lang.String addressesToString(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.StringBuffer $r1, $r2;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String $r3, $r5;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 == $i0 goto label4;

        if i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r4 = r0[i1];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        i1 = i1 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.util.Date getSignatureTime(org.bouncycastle.cms.SignerInformation)
    {
        org.bouncycastle.asn1.ASN1Set $r4;
        org.bouncycastle.asn1.DERObject $r6;
        org.bouncycastle.asn1.cms.Time $r7;
        java.util.Date r8;
        org.bouncycastle.cms.SignerInformation r0;
        org.bouncycastle.asn1.DEREncodable $r5;
        org.bouncycastle.asn1.cms.AttributeTable $r1;
        org.bouncycastle.asn1.DERObjectIdentifier $r2;
        org.bouncycastle.asn1.cms.Attribute $r3;

        r0 := @parameter0: org.bouncycastle.cms.SignerInformation;

        $r1 = virtualinvoke r0.<org.bouncycastle.cms.SignerInformation: org.bouncycastle.asn1.cms.AttributeTable getSignedAttributes()>();

        r8 = null;

        if $r1 == null goto label1;

        $r2 = <org.bouncycastle.asn1.cms.CMSAttributes: org.bouncycastle.asn1.DERObjectIdentifier signingTime>;

        $r3 = virtualinvoke $r1.<org.bouncycastle.asn1.cms.AttributeTable: org.bouncycastle.asn1.cms.Attribute get(org.bouncycastle.asn1.DERObjectIdentifier)>($r2);

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.cms.Attribute: org.bouncycastle.asn1.ASN1Set getAttrValues()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.ASN1Set: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r6 = interfaceinvoke $r5.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r7 = staticinvoke <org.bouncycastle.asn1.cms.Time: org.bouncycastle.asn1.cms.Time getInstance(java.lang.Object)>($r6);

        r8 = virtualinvoke $r7.<org.bouncycastle.asn1.cms.Time: java.util.Date getDate()>();

     label1:
        return r8;
    }

    private static java.util.List findCerts(java.util.List, java.security.cert.X509CertSelector) throws java.security.cert.CertStoreException
    {
        java.util.Iterator $r2;
        java.security.cert.X509CertSelector r5;
        java.util.Collection $r6;
        java.util.ArrayList $r0;
        java.util.List r1;
        java.security.cert.CertStore r4;
        java.lang.Object $r3;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        r5 := @parameter1: java.security.cert.X509CertSelector;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.CertStore) $r3;

        $r6 = virtualinvoke r4.<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)>(r5);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    private static java.security.cert.X509Certificate findNextCert(java.util.List, java.security.cert.X509CertSelector, java.util.Set) throws java.security.cert.CertStoreException
    {
        java.security.cert.X509Certificate r6, $r7;
        java.util.Iterator $r3;
        java.security.cert.X509CertSelector r1;
        java.util.Set r5;
        java.util.List r0, $r2;
        java.lang.Object $r4;
        boolean $z0, $z1, z2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.security.cert.X509CertSelector;

        r5 := @parameter2: java.util.Set;

        $r2 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.List findCerts(java.util.List,java.security.cert.X509CertSelector)>(r0, r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        z2 = 0;

        r6 = null;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.security.cert.X509Certificate) $r4;

        $z1 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label2:
        if z2 == 0 goto label3;

        $r7 = r6;

        goto label4;

     label3:
        $r7 = null;

     label4:
        return $r7;
    }

    public static java.security.cert.CertPath createCertPath(java.security.cert.X509Certificate, java.util.Set, java.util.List) throws java.security.GeneralSecurityException
    {
        java.security.cert.X509Certificate r0;
        java.util.List r2;
        java.lang.Object[] $r3;
        java.util.Set r1;
        java.lang.Object $r4;
        java.security.cert.CertPath $r5;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: java.util.List;

        $r3 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Object[] createCertPath(java.security.cert.X509Certificate,java.util.Set,java.util.List,java.util.List)>(r0, r1, r2, null);

        $r4 = $r3[0];

        $r5 = (java.security.cert.CertPath) $r4;

        return $r5;
    }

    public static java.lang.Object[] createCertPath(java.security.cert.X509Certificate, java.util.Set, java.util.List, java.util.List) throws java.security.GeneralSecurityException
    {
        byte[] $r6, $r8, $r21, $r24, $r28, $r30, $r31;
        java.security.GeneralSecurityException $r41;
        java.util.Set r17;
        java.lang.Exception $r49, $r50;
        java.security.cert.TrustAnchor r53;
        java.lang.Object[] $r59;
        org.bouncycastle.asn1.DERObject $r26;
        java.util.ArrayList $r1, $r57;
        java.lang.String $r23, $r34, $r36, $r44, $r48;
        java.util.LinkedHashSet $r0;
        java.io.IOException $r42, $r45, $r46;
        java.security.cert.X509Certificate r2, $r10, $r33, r51, r52, $r54, r55;
        java.lang.IllegalStateException $r43, $r47;
        java.security.cert.CertificateFactory $r56;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9;
        org.bouncycastle.asn1.DERObjectIdentifier $r22;
        java.security.cert.X509CertSelector $r4, $r19;
        java.util.List r9, r13;
        javax.security.auth.x500.X500Principal $r5, $r7, $r14, $r15, $r20, $r35, $r38, $r39;
        org.bouncycastle.asn1.x509.AuthorityKeyIdentifier $r27;
        org.bouncycastle.asn1.DEROctetString $r29;
        java.lang.Boolean $r3, $r12, $r16, $r25;
        java.util.Iterator $r18;
        java.security.PublicKey $r11, $r37, $r40;
        java.security.cert.CertPath $r58;
        java.lang.Object $r32;

        r2 := @parameter0: java.security.cert.X509Certificate;

        r17 := @parameter1: java.util.Set;

        r9 := @parameter2: java.util.List;

        r13 := @parameter3: java.util.List;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r51 = r2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r2);

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>(1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        z4 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        r52 = null;

     label01:
        if r51 == null goto label22;

        if z8 != 0 goto label22;

        $r18 = interfaceinvoke r17.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r32 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.security.cert.TrustAnchor) $r32;

        $r33 = virtualinvoke r53.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if $r33 == null goto label06;

        $r38 = virtualinvoke $r33.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r39 = virtualinvoke r51.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z3 = virtualinvoke $r38.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r39);

        if $z3 == 0 goto label10;

     label03:
        $r40 = virtualinvoke $r33.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke r51.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>($r40, "BC");

        z4 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        r52 = $r33;

     label04:
        goto label11;

     label05:
        $r50 := @caughtexception;

        goto label10;

     label06:
        $r34 = virtualinvoke r53.<java.security.cert.TrustAnchor: java.lang.String getCAName()>();

        $r35 = virtualinvoke r51.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r36 = virtualinvoke $r35.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z2 == 0 goto label10;

     label07:
        $r37 = virtualinvoke r53.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

        virtualinvoke r51.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>($r37, "BC");

        z4 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

     label08:
        goto label11;

     label09:
        $r49 := @caughtexception;

     label10:
        goto label02;

     label11:
        if z9 != 0 goto label21;

        $r19 = new java.security.cert.X509CertSelector;

        specialinvoke $r19.<java.security.cert.X509CertSelector: void <init>()>();

     label12:
        $r20 = virtualinvoke r51.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r21 = virtualinvoke $r20.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r19.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r21);

     label13:
        goto label15;

     label14:
        $r46 := @caughtexception;

        $r47 = new java.lang.IllegalStateException;

        $r48 = virtualinvoke $r46.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r48);

        throw $r47;

     label15:
        $r22 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier AuthorityKeyIdentifier>;

        $r23 = virtualinvoke $r22.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r24 = virtualinvoke r51.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>($r23);

        if $r24 == null goto label19;

     label16:
        $r26 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.asn1.DERObject getObject(byte[])>($r24);

        $r27 = staticinvoke <org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>();

        if $r28 == null goto label17;

        $r29 = new org.bouncycastle.asn1.DEROctetString;

        $r30 = virtualinvoke $r27.<org.bouncycastle.asn1.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()>();

        specialinvoke $r29.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r30);

        $r31 = virtualinvoke $r29.<org.bouncycastle.asn1.DEROctetString: byte[] getDEREncoded()>();

        virtualinvoke $r19.<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])>($r31);

     label17:
        goto label19;

     label18:
        $r45 := @caughtexception;

     label19:
        z5 = 0;

        $r54 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.X509Certificate findNextCert(java.util.List,java.security.cert.X509CertSelector,java.util.Set)>(r9, $r19, $r0);

        r51 = $r54;

        if $r54 != null goto label20;

        if r13 == null goto label20;

        z5 = 1;

        r51 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.X509Certificate findNextCert(java.util.List,java.security.cert.X509CertSelector,java.util.Set)>(r13, $r19, $r0);

     label20:
        if r51 == null goto label21;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r51);

        $r25 = new java.lang.Boolean;

        specialinvoke $r25.<java.lang.Boolean: void <init>(boolean)>(z5);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r25);

     label21:
        goto label01;

     label22:
        if z7 == 0 goto label32;

        if r52 == null goto label23;

        $r14 = virtualinvoke r52.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r15 = virtualinvoke r52.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z0 = virtualinvoke $r14.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label23;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r52);

        $r16 = new java.lang.Boolean;

        specialinvoke $r16.<java.lang.Boolean: void <init>(boolean)>(0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label32;

     label23:
        $r4 = new java.security.cert.X509CertSelector;

        specialinvoke $r4.<java.security.cert.X509CertSelector: void <init>()>();

     label24:
        $r5 = virtualinvoke r51.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r6 = virtualinvoke $r5.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r4.<java.security.cert.X509CertSelector: void setSubject(byte[])>($r6);

        $r7 = virtualinvoke r51.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r4.<java.security.cert.X509CertSelector: void setIssuer(byte[])>($r8);

     label25:
        goto label27;

     label26:
        $r42 := @caughtexception;

        $r43 = new java.lang.IllegalStateException;

        $r44 = virtualinvoke $r42.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r44);

        throw $r43;

     label27:
        z6 = 0;

        $r10 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.X509Certificate findNextCert(java.util.List,java.security.cert.X509CertSelector,java.util.Set)>(r9, $r4, $r0);

        r55 = $r10;

        if $r10 != null goto label28;

        if r13 == null goto label28;

        z6 = 1;

        r55 = staticinvoke <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.X509Certificate findNextCert(java.util.List,java.security.cert.X509CertSelector,java.util.Set)>(r13, $r4, $r0);

     label28:
        if r55 == null goto label32;

     label29:
        $r11 = virtualinvoke r55.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        virtualinvoke r51.<java.security.cert.X509Certificate: void verify(java.security.PublicKey,java.lang.String)>($r11, "BC");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r55);

        $r12 = new java.lang.Boolean;

        specialinvoke $r12.<java.lang.Boolean: void <init>(boolean)>(z6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r12);

     label30:
        goto label32;

     label31:
        $r41 := @caughtexception;

     label32:
        $r56 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

        $r57 = new java.util.ArrayList;

        specialinvoke $r57.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        $r58 = virtualinvoke $r56.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>($r57);

        $r59 = newarray (java.lang.Object)[2];

        $r59[0] = $r58;

        $r59[1] = $r1;

        return $r59;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.security.GeneralSecurityException from label29 to label30 with label31;
    }

    public java.security.cert.CertStore getCertsAndCRLs()
    {
        org.bouncycastle.mail.smime.validator.SignedMailValidator r0;
        java.security.cert.CertStore $r1;

        r0 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        $r1 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.security.cert.CertStore certs>;

        return $r1;
    }

    public org.bouncycastle.cms.SignerInformationStore getSignerInformationStore()
    {
        org.bouncycastle.cms.SignerInformationStore $r1;
        org.bouncycastle.mail.smime.validator.SignedMailValidator r0;

        r0 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        $r1 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.cms.SignerInformationStore signers>;

        return $r1;
    }

    public org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult getValidationResult(org.bouncycastle.cms.SignerInformation) throws org.bouncycastle.mail.smime.validator.SignedMailValidatorException
    {
        org.bouncycastle.mail.smime.validator.SignedMailValidator r0;
        org.bouncycastle.cms.SignerInformation r1;
        java.util.Collection $r4;
        org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult $r7;
        org.bouncycastle.cms.SignerId $r3;
        org.bouncycastle.mail.smime.validator.SignedMailValidatorException $r9;
        java.util.Map $r5;
        org.bouncycastle.cms.SignerInformationStore $r2;
        java.lang.Object $r6;
        org.bouncycastle.i18n.ErrorBundle $r8;
        boolean $z0;

        r0 := @this: org.bouncycastle.mail.smime.validator.SignedMailValidator;

        r1 := @parameter0: org.bouncycastle.cms.SignerInformation;

        $r2 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: org.bouncycastle.cms.SignerInformationStore signers>;

        $r3 = virtualinvoke r1.<org.bouncycastle.cms.SignerInformation: org.bouncycastle.cms.SignerId getSID()>();

        $r4 = virtualinvoke $r2.<org.bouncycastle.cms.SignerInformationStore: java.util.Collection getSigners(org.bouncycastle.cms.SignerId)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = new org.bouncycastle.i18n.ErrorBundle;

        specialinvoke $r8.<org.bouncycastle.i18n.ErrorBundle: void <init>(java.lang.String,java.lang.String)>("org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages", "SignedMailValidator.wrongSigner");

        $r9 = new org.bouncycastle.mail.smime.validator.SignedMailValidatorException;

        specialinvoke $r9.<org.bouncycastle.mail.smime.validator.SignedMailValidatorException: void <init>(org.bouncycastle.i18n.ErrorBundle)>($r8);

        throw $r9;

     label1:
        $r5 = r0.<org.bouncycastle.mail.smime.validator.SignedMailValidator: java.util.Map results>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (org.bouncycastle.mail.smime.validator.SignedMailValidator$ValidationResult) $r6;

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.String $r1, $r3;
        org.bouncycastle.asn1.DERObjectIdentifier $r0, $r2;

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: long THIRTY_YEARS_IN_MILLI_SEC> = 946728000000L;

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: int shortKeyLength> = 512;

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String RESOURCE_NAME> = "org.bouncycastle.mail.smime.validator.SignedMailValidatorMessages";

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.Class DEFAULT_CERT_PATH_REVIEWER> = class "Lorg/bouncycastle/x509/PKIXCertPathReviewer;";

        $r0 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier ExtendedKeyUsage>;

        $r1 = virtualinvoke $r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String EXT_KEY_USAGE> = $r1;

        $r2 = <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.DERObjectIdentifier SubjectAlternativeName>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        <org.bouncycastle.mail.smime.validator.SignedMailValidator: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r3;

        return;
    }
}
