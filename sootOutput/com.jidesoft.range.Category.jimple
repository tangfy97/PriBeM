public class com.jidesoft.range.Category extends java.lang.Object implements com.jidesoft.range.Positionable
{
    private java.lang.String _name;
    private java.lang.Object _value;
    private com.jidesoft.range.CategoryRange _range;

    public void <init>(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        com.jidesoft.range.Category r0;
        java.lang.String r1;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.jidesoft.range.Category: void setName(java.lang.String)>(r1);

        r0.<com.jidesoft.range.Category: java.lang.Object _value> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, com.jidesoft.range.CategoryRange)
    {
        java.lang.Object r2;
        com.jidesoft.range.Category r0;
        java.lang.String r1;
        com.jidesoft.range.CategoryRange r3;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.jidesoft.range.CategoryRange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.jidesoft.range.Category: void setName(java.lang.String)>(r1);

        r0.<com.jidesoft.range.Category: java.lang.Object _value> = r2;

        r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range> = r3;

        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        com.jidesoft.range.Category r0;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.range.Category: java.lang.Object _value> = r1;

        return;
    }

    public void <init>(java.lang.Object, com.jidesoft.range.CategoryRange)
    {
        java.lang.Object r1;
        com.jidesoft.range.Category r0;
        com.jidesoft.range.CategoryRange r2;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.jidesoft.range.CategoryRange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.range.Category: java.lang.Object _value> = r1;

        r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range> = r2;

        return;
    }

    public com.jidesoft.range.CategoryRange getRange()
    {
        com.jidesoft.range.Category r0;
        com.jidesoft.range.CategoryRange $r1;

        r0 := @this: com.jidesoft.range.Category;

        $r1 = r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range>;

        return $r1;
    }

    public void setRange(com.jidesoft.range.CategoryRange)
    {
        com.jidesoft.range.Category r0;
        com.jidesoft.range.CategoryRange r1;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: com.jidesoft.range.CategoryRange;

        r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range> = r1;

        return;
    }

    public double position()
    {
        java.lang.IllegalStateException $r4;
        int $i0;
        java.lang.Object $r2;
        com.jidesoft.range.Category r0;
        com.jidesoft.range.CategoryRange $r1, $r3;
        double $d0;

        r0 := @this: com.jidesoft.range.Category;

        $r1 = r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot compute position for a category that does not belong to a range");

        throw $r4;

     label1:
        $r3 = r0.<com.jidesoft.range.Category: com.jidesoft.range.CategoryRange _range>;

        $r2 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        $i0 = virtualinvoke $r3.<com.jidesoft.range.CategoryRange: int position(java.lang.Object)>($r2);

        $d0 = (double) $i0;

        return $d0;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        com.jidesoft.range.Category r0;

        r0 := @this: com.jidesoft.range.Category;

        $r1 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.Object $r3;
        com.jidesoft.range.Category r0;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: com.jidesoft.range.Category;

        $r1 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        if $r1 != null goto label1;

        $r3 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        $r2 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        return $r2;
    }

    private void setName(java.lang.String)
    {
        com.jidesoft.range.Category r0;
        java.lang.String r1;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.String;

        r0.<com.jidesoft.range.Category: java.lang.String _name> = r1;

        return;
    }

    public int compareTo(com.jidesoft.range.Positionable)
    {
        com.jidesoft.range.Category r1;
        byte $b0, $b1;
        com.jidesoft.range.Positionable r0;
        int $i2, $i4, $i5;
        double $d0, $d1;

        r1 := @this: com.jidesoft.range.Category;

        r0 := @parameter0: com.jidesoft.range.Positionable;

        $d0 = interfaceinvoke r0.<com.jidesoft.range.Positionable: double position()>();

        $d1 = virtualinvoke r1.<com.jidesoft.range.Category: double position()>();

        $b0 = $d1 cmpg $d0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $b1 = $d1 cmpl $d0;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        com.jidesoft.range.Category r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3, $r4;
        java.lang.String $r1, $r2;

        r0 := @this: com.jidesoft.range.Category;

        $r1 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i2 = 31 + $i3;

        $i0 = 31 * $i2;

        $r3 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        if $r3 != null goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r4 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        $i4 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

     label4:
        $i1 = $i0 + $i4;

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        com.jidesoft.range.Category r0, r4;
        java.lang.Object r1, $r8, $r9, $r10, $r11;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r12;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (com.jidesoft.range.Category) r1;

        $r5 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        if $r5 != null goto label4;

        $r12 = r4.<com.jidesoft.range.Category: java.lang.String _name>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<com.jidesoft.range.Category: java.lang.String _name>;

        $r6 = r4.<com.jidesoft.range.Category: java.lang.String _name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        if $r8 != null goto label6;

        $r11 = r4.<com.jidesoft.range.Category: java.lang.Object _value>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<com.jidesoft.range.Category: java.lang.Object _value>;

        $r9 = r4.<com.jidesoft.range.Category: java.lang.Object _value>;

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.Object $r3;
        com.jidesoft.range.Category r1;
        java.lang.String $r2, $r4, $r5;

        r1 := @this: com.jidesoft.range.Category;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = r1.<com.jidesoft.range.Category: java.lang.String _name>;

        $r0[0] = $r2;

        $r3 = r1.<com.jidesoft.range.Category: java.lang.Object _value>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r0[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#<Category name=\'%s\' value=\'%s\'>", $r0);

        return $r5;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.jidesoft.range.Positionable $r2;
        int $i0;
        java.lang.Object r1;
        com.jidesoft.range.Category r0;

        r0 := @this: com.jidesoft.range.Category;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.jidesoft.range.Positionable) r1;

        $i0 = virtualinvoke r0.<com.jidesoft.range.Category: int compareTo(com.jidesoft.range.Positionable)>($r2);

        return $i0;
    }
}
