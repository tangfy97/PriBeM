public class org.springframework.beans.factory.config.MethodInvokingFactoryBean extends org.springframework.beans.support.ArgumentConvertingMethodInvoker implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean
{
    private boolean singleton;
    private java.lang.ClassLoader beanClassLoader;
    private org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory;
    private boolean initialized;
    private java.lang.Object singletonObject;

    public void <init>()
    {
        java.lang.ClassLoader $r1;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        specialinvoke r0.<org.springframework.beans.support.ArgumentConvertingMethodInvoker: void <init>()>();

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean singleton> = 1;

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean initialized> = 0;

        return;
    }

    public void setSingleton(boolean)
    {
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean singleton> = z0;

        return;
    }

    public boolean isSingleton()
    {
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        $z0 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean singleton>;

        return $z0;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    protected java.lang.Class resolveClassName(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r3;
        java.lang.String r0;
        java.lang.ClassLoader $r2;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r1;

        r1 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>(r0, $r2);

        return $r3;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.BeanFactory r0;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r2;
        boolean $z0;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r1;

        r1 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableBeanFactory;

        if $z0 == 0 goto label1;

        $r2 = (org.springframework.beans.factory.config.ConfigurableBeanFactory) r0;

        r1.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory> = $r2;

     label1:
        return;
    }

    protected org.springframework.beans.TypeConverter getDefaultTypeConverter()
    {
        org.springframework.beans.TypeConverter $r2, $r4;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r1, $r3;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        if $r1 == null goto label1;

        $r3 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.config.ConfigurableBeanFactory: org.springframework.beans.TypeConverter getTypeConverter()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<org.springframework.beans.support.ArgumentConvertingMethodInvoker: org.springframework.beans.TypeConverter getDefaultTypeConverter()>();

        return $r2;
    }

    public void afterPropertiesSet() throws java.lang.Exception
    {
        java.lang.Object $r1;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        virtualinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: void prepare()>();

        $z0 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean singleton>;

        if $z0 == 0 goto label1;

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean initialized> = 1;

        $r1 = specialinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object doInvoke()>();

        r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object singletonObject> = $r1;

     label1:
        return;
    }

    private java.lang.Object doInvoke() throws java.lang.Exception
    {
        java.lang.Throwable $r3, $r4, $r5, $r7;
        java.lang.Error $r6;
        java.lang.Exception $r8;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        java.lang.reflect.InvocationTargetException $r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object invoke()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z0 = $r3 instanceof java.lang.Exception;

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke $r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r8 = (java.lang.Exception) $r7;

        throw $r8;

     label4:
        $r4 = virtualinvoke $r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z1 = $r4 instanceof java.lang.Error;

        if $z1 == 0 goto label5;

        $r5 = virtualinvoke $r2.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r6 = (java.lang.Error) $r5;

        throw $r6;

     label5:
        throw $r2;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public java.lang.Object getObject() throws java.lang.Exception
    {
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r3;
        java.lang.Object $r1, $r2;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        $z0 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean singleton>;

        if $z0 == 0 goto label2;

        $z1 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean initialized>;

        if $z1 != 0 goto label1;

        $r3 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r3.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object singletonObject>;

        return $r2;

     label2:
        $r1 = specialinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object doInvoke()>();

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;
        org.springframework.beans.factory.config.MethodInvokingFactoryBean r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.MethodInvokingFactoryBean;

        $z0 = virtualinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: boolean isPrepared()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.reflect.Method getPreparedMethod()>();

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r2;
    }
}
