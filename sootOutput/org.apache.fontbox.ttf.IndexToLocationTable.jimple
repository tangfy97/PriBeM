public class org.apache.fontbox.ttf.IndexToLocationTable extends org.apache.fontbox.ttf.TTFTable
{
    private static final short SHORT_OFFSETS;
    private static final short LONG_OFFSETS;
    public static final java.lang.String TAG;
    private long[] offsets;

    public void <init>()
    {
        org.apache.fontbox.ttf.IndexToLocationTable r0;

        r0 := @this: org.apache.fontbox.ttf.IndexToLocationTable;

        specialinvoke r0.<org.apache.fontbox.ttf.TTFTable: void <init>()>();

        return;
    }

    public void initData(org.apache.fontbox.ttf.TrueTypeFont, org.apache.fontbox.ttf.TTFDataStream) throws java.io.IOException
    {
        long $l5, $l8;
        org.apache.fontbox.ttf.IndexToLocationTable r2;
        short $s3, $s4;
        long[] $r3, $r6, $r7;
        org.apache.fontbox.ttf.HeaderTable $r1;
        int $i0, $i1, $i2, $i6, $i7, i9;
        org.apache.fontbox.ttf.TTFDataStream r5;
        java.io.IOException $r4;
        org.apache.fontbox.ttf.TrueTypeFont r0;

        r2 := @this: org.apache.fontbox.ttf.IndexToLocationTable;

        r0 := @parameter0: org.apache.fontbox.ttf.TrueTypeFont;

        r5 := @parameter1: org.apache.fontbox.ttf.TTFDataStream;

        $r1 = virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>();

        $i0 = virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: int getNumberOfGlyphs()>();

        $i1 = $i0 + 1;

        $r3 = newarray (long)[$i1];

        r2.<org.apache.fontbox.ttf.IndexToLocationTable: long[] offsets> = $r3;

        i9 = 0;

     label1:
        $i2 = $i0 + 1;

        if i9 >= $i2 goto label5;

        $s3 = virtualinvoke $r1.<org.apache.fontbox.ttf.HeaderTable: short getIndexToLocFormat()>();

        if $s3 != 0 goto label2;

        $r7 = r2.<org.apache.fontbox.ttf.IndexToLocationTable: long[] offsets>;

        $i6 = virtualinvoke r5.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        $i7 = $i6 * 2;

        $l8 = (long) $i7;

        $r7[i9] = $l8;

        goto label4;

     label2:
        $s4 = virtualinvoke $r1.<org.apache.fontbox.ttf.HeaderTable: short getIndexToLocFormat()>();

        if $s4 != 1 goto label3;

        $r6 = r2.<org.apache.fontbox.ttf.IndexToLocationTable: long[] offsets>;

        $l5 = virtualinvoke r5.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        $r6[i9] = $l5;

        goto label4;

     label3:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Error:TTF.loca unknown offset format.");

        throw $r4;

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        r2.<org.apache.fontbox.ttf.IndexToLocationTable: boolean initialized> = 1;

        return;
    }

    public long[] getOffsets()
    {
        org.apache.fontbox.ttf.IndexToLocationTable r0;
        long[] $r1;

        r0 := @this: org.apache.fontbox.ttf.IndexToLocationTable;

        $r1 = r0.<org.apache.fontbox.ttf.IndexToLocationTable: long[] offsets>;

        return $r1;
    }

    public void setOffsets(long[])
    {
        org.apache.fontbox.ttf.IndexToLocationTable r0;
        long[] r1;

        r0 := @this: org.apache.fontbox.ttf.IndexToLocationTable;

        r1 := @parameter0: long[];

        r0.<org.apache.fontbox.ttf.IndexToLocationTable: long[] offsets> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.fontbox.ttf.IndexToLocationTable: java.lang.String TAG> = "loca";

        <org.apache.fontbox.ttf.IndexToLocationTable: short LONG_OFFSETS> = 1;

        <org.apache.fontbox.ttf.IndexToLocationTable: short SHORT_OFFSETS> = 0;

        return;
    }
}
