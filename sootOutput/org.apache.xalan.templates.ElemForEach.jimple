public class org.apache.xalan.templates.ElemForEach extends org.apache.xalan.templates.ElemTemplateElement implements org.apache.xpath.ExpressionOwner
{
    static final boolean DEBUG;
    public boolean m_doc_cache_off;
    protected org.apache.xpath.Expression m_selectExpression;
    protected org.apache.xpath.XPath m_xpath;
    protected java.util.Vector m_sortElems;

    public void <init>()
    {
        org.apache.xalan.templates.ElemForEach r0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemForEach: boolean m_doc_cache_off> = 0;

        r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression> = null;

        r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.XPath m_xpath> = null;

        r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems> = null;

        return;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.ElemForEach r0;
        org.apache.xpath.Expression $r2;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        r1 := @parameter0: org.apache.xpath.XPath;

        $r2 = virtualinvoke r1.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression> = $r2;

        r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.XPath m_xpath> = r1;

        return;
    }

    public org.apache.xpath.Expression getSelect()
    {
        org.apache.xalan.templates.ElemForEach r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        $r1 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        return $r1;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.Expression $r5, $r8, $r9;
        org.apache.xpath.XPath $r7;
        org.apache.xalan.templates.ElemForEach r0;
        org.apache.xalan.templates.StylesheetRoot r1, $r6;
        java.util.Vector $r4;
        org.apache.xalan.templates.ElemSort $r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r3, $r10;
        int $i0, $i1, i2;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: int getSortElemCount()>();

        i2 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)>(i2);

        virtualinvoke $r2.<org.apache.xalan.templates.ElemSort: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        i2 = i2 + 1;

     label2:
        if i2 < $i0 goto label1;

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r5 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        if null == $r5 goto label3;

        $r9 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        $r10 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i1 = virtualinvoke $r10.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r9.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>($r4, $i1);

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $r7 = $r6.<org.apache.xalan.templates.StylesheetRoot: org.apache.xpath.XPath m_selectDefault>;

        $r8 = virtualinvoke $r7.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression> = $r8;

     label4:
        return;
    }

    public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r2;
        org.apache.xalan.templates.ElemSort $r1;
        org.apache.xalan.templates.ElemForEach r0;
        int $i0, i1;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        r2 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: int getSortElemCount()>();

        i1 = 0;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)>(i1);

        virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: void endCompose(org.apache.xalan.templates.StylesheetRoot)>(r2);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void endCompose(org.apache.xalan.templates.StylesheetRoot)>(r2);

        return;
    }

    public int getSortElemCount()
    {
        java.util.Vector $r1, $r2;
        org.apache.xalan.templates.ElemForEach r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        $r1 = r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

     label2:
        return $i0;
    }

    public org.apache.xalan.templates.ElemSort getSortElem(int)
    {
        java.util.Vector $r1;
        org.apache.xalan.templates.ElemSort $r3;
        org.apache.xalan.templates.ElemForEach r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r3 = (org.apache.xalan.templates.ElemSort) $r2;

        return $r3;
    }

    public void setSortElem(org.apache.xalan.templates.ElemSort)
    {
        java.util.Vector $r1, $r3, $r4;
        org.apache.xalan.templates.ElemSort r2;
        org.apache.xalan.templates.ElemForEach r0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        r2 := @parameter0: org.apache.xalan.templates.ElemSort;

        $r1 = r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        if null != $r1 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemForEach r0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        return 28;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemForEach r0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        return "for-each";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r4;
        org.apache.xalan.templates.ElemForEach r1;
        org.apache.xalan.trace.TraceManager $r2, $r3, $r5;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xalan.templates.ElemForEach;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushCurrentTemplateRuleIsNull(boolean)>(1);

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r3.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r1);

     label1:
        virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)>(r0);

        goto label6;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label8;

     label4:
        throw $r4;

     label5:
        return;

     label6:
        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label7;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r2.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r1);

     label7:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentTemplateRuleIsNull()>();

        goto label2;

     label8:
        $z2 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z2 == 0 goto label9;

        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r5.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r1);

     label9:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentTemplateRuleIsNull()>();

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    protected org.apache.xalan.templates.ElemTemplateElement getTemplateMatch()
    {
        org.apache.xalan.templates.ElemForEach r0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        return r0;
    }

    public org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext, java.util.Vector, org.apache.xml.dtm.DTMIterator) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r4;
        java.util.Vector r3;
        org.apache.xpath.XPathContext r1;
        org.apache.xalan.templates.ElemForEach r5;
        org.apache.xalan.transformer.NodeSorter $r6;
        int $i1;
        org.apache.xml.dtm.DTMIterator r2;

        r5 := @this: org.apache.xalan.templates.ElemForEach;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r3 := @parameter1: java.util.Vector;

        r2 := @parameter2: org.apache.xml.dtm.DTMIterator;

        $r6 = new org.apache.xalan.transformer.NodeSorter;

        specialinvoke $r6.<org.apache.xalan.transformer.NodeSorter: void <init>(org.apache.xpath.XPathContext)>(r1);

        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void setShouldCacheNodes(boolean)>(1);

        $i1 = (int) -1;

        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void runTo(int)>($i1);

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>(r2);

     label1:
        virtualinvoke $r6.<org.apache.xalan.transformer.NodeSorter: void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)>(r2, r3, r1);

        interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: void setCurrentPos(int)>(0);

        goto label6;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label7;

     label4:
        throw $r4;

     label5:
        return r2;

     label6:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        goto label2;

     label7:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        goto label4;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    public void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.IntStack $r6, $r7;
        org.apache.xalan.trace.TraceManager $r9, $r10, $r11, $r18, $r21;
        java.util.Vector $r5, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xpath.Expression $r3, $r13, $r16, $r23;
        org.apache.xpath.XPath $r15, $r19, $r29, $r31;
        org.apache.xalan.templates.ElemTemplateElement r28;
        org.apache.xpath.objects.XNodeSet $r30, $r32;
        org.apache.xalan.templates.ElemForEach r2;
        org.apache.xml.dtm.DTMIterator $r4, r25;
        org.apache.xpath.objects.XObject $r17;
        java.lang.Throwable $r20;
        org.apache.xpath.XPathContext $r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7, $i9, $i11;
        org.apache.xpath.SourceTreeManager $r8;
        org.apache.xml.dtm.DTM r27;
        org.apache.xalan.transformer.TransformerImpl r0;

        r2 := @this: org.apache.xalan.templates.ElemForEach;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = r2.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.Expression: org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)>($r1, $i0);

        r25 = $r4;

     label01:
        $r5 = r2.<org.apache.xalan.templates.ElemForEach: java.util.Vector m_sortElems>;

        if $r5 != null goto label02;

        $r26 = null;

        goto label03;

     label02:
        $r26 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)>(r2, $i0);

     label03:
        if null == $r26 goto label04;

        r25 = virtualinvoke r2.<org.apache.xalan.templates.ElemForEach: org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)>($r1, $r26, $r4);

     label04:
        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label05;

        $r15 = r2.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.XPath m_xpath>;

        $r16 = virtualinvoke $r15.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r17 = virtualinvoke $r16.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>($r1);

        $i3 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r18 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r19 = r2.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.XPath m_xpath>;

        virtualinvoke $r18.<org.apache.xalan.trace.TraceManager: void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($i3, r2, "select", $r19, $r17);

     label05:
        $i7 = (int) -1;

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>($i7);

        $r6 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentNodeStack()>();

        $i9 = (int) -1;

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushCurrentExpressionNode(int)>($i9);

        $r7 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentExpressionNodeStack()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushSAXLocatorNull()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>(r25);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(null);

        r27 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        i4 = $i0 & -65536;

        goto label12;

     label06:
        virtualinvoke $r6.<org.apache.xml.utils.IntStack: void setTop(int)>($i5);

        virtualinvoke $r7.<org.apache.xml.utils.IntStack: void setTop(int)>($i5);

        $i1 = $i5 & -65536;

        if $i1 == i4 goto label07;

        r27 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i5);

        i4 = $i5 & -65536;

     label07:
        interfaceinvoke r27.<org.apache.xml.dtm.DTM: short getNodeType(int)>($i5);

        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label08;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r10.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label08:
        r28 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label10;

     label09:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r28);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)>(r28);

        virtualinvoke r28.<org.apache.xalan.templates.ElemTemplateElement: void execute(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r28 = r28.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label10:
        if r28 != null goto label09;

        $z2 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z2 == 0 goto label11;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)>(null);

        $r9 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r9.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label11:
        $z3 = r2.<org.apache.xalan.templates.ElemForEach: boolean m_doc_cache_off>;

        if $z3 == 0 goto label12;

        $r8 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        $i2 = interfaceinvoke r27.<org.apache.xml.dtm.DTM: int getDocument()>();

        virtualinvoke $r8.<org.apache.xpath.SourceTreeManager: void removeDocumentFromCache(int)>($i2);

        virtualinvoke $r1.<org.apache.xpath.XPathContext: boolean release(org.apache.xml.dtm.DTM,boolean)>(r27, 0);

     label12:
        $i5 = interfaceinvoke r25.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $i11 = (int) -1;

        if $i11 != $i5 goto label06;

        goto label17;

     label13:
        goto label16;

     label14:
        $r20 := @caughtexception;

        goto label19;

     label15:
        throw $r20;

     label16:
        return;

     label17:
        $z4 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z4 == 0 goto label18;

        $r11 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r29 = new org.apache.xpath.XPath;

        $r13 = r2.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        specialinvoke $r29.<org.apache.xpath.XPath: void <init>(org.apache.xpath.Expression)>($r13);

        $r30 = new org.apache.xpath.objects.XNodeSet;

        specialinvoke $r30.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>(r25);

        virtualinvoke $r11.<org.apache.xalan.trace.TraceManager: void fireSelectedEndEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($i0, r2, "select", $r29, $r30);

     label18:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        interfaceinvoke r25.<org.apache.xml.dtm.DTMIterator: void detach()>();

        goto label13;

     label19:
        $z5 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z5 == 0 goto label20;

        $r21 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r31 = new org.apache.xpath.XPath;

        $r23 = r2.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        specialinvoke $r31.<org.apache.xpath.XPath: void <init>(org.apache.xpath.Expression)>($r23);

        $r32 = new org.apache.xpath.objects.XNodeSet;

        specialinvoke $r32.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>(r25);

        virtualinvoke $r21.<org.apache.xalan.trace.TraceManager: void fireSelectedEndEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($i0, r2, "select", $r31, $r32);

     label20:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentExpressionNode()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        interfaceinvoke r25.<org.apache.xml.dtm.DTMIterator: void detach()>();

        goto label15;

        catch java.lang.Throwable from label01 to label14 with label14;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        org.apache.xalan.templates.ElemSort $r3;
        int $i0;
        org.apache.xalan.templates.ElemForEach r1;

        r1 := @this: org.apache.xalan.templates.ElemForEach;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 64 != $i0 goto label1;

        $r3 = (org.apache.xalan.templates.ElemSort) r0;

        virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: void setSortElem(org.apache.xalan.templates.ElemSort)>($r3);

        return r0;

     label1:
        $r2 = specialinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return $r2;
    }

    public void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xpath.Expression $r3, $r4;
        org.apache.xalan.templates.XSLTVisitor r2;
        org.apache.xalan.templates.ElemForEach r0;
        org.apache.xalan.templates.ElemSort $r1;
        int $i0, i1;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        r2 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r3 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        if null == $r3 goto label1;

        $r4 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        virtualinvoke $r4.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>(r0, r2);

     label1:
        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: int getSortElemCount()>();

        i1 = 0;

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)>(i1);

        virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r2);

        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label2;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r2, z0);

        return;
    }

    public org.apache.xpath.Expression getExpression()
    {
        org.apache.xalan.templates.ElemForEach r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xalan.templates.ElemForEach;

        $r1 = r0.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression>;

        return $r1;
    }

    public void setExpression(org.apache.xpath.Expression)
    {
        org.apache.xalan.templates.ElemForEach r1;
        org.apache.xpath.Expression r0;

        r1 := @this: org.apache.xalan.templates.ElemForEach;

        r0 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r0.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        r1.<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression m_selectExpression> = r0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemForEach: boolean DEBUG> = 0;

        return;
    }
}
