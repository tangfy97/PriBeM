public class com.jhlabs.vecmath.Quat4f extends com.jhlabs.vecmath.Tuple4f
{

    public void <init>()
    {
        com.jhlabs.vecmath.Quat4f r0;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        specialinvoke r0.<com.jhlabs.vecmath.Quat4f: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        return;
    }

    public void <init>(float[])
    {
        com.jhlabs.vecmath.Quat4f r0;
        float $f0, $f1, $f2, $f3;
        float[] r1;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        r1 := @parameter0: float[];

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1[0];

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1[1];

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1[3];

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public void <init>(float, float, float, float)
    {
        com.jhlabs.vecmath.Quat4f r0;
        float f0, f1, f2, f3;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = f0;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = f1;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = f2;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = f3;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Quat4f)
    {
        com.jhlabs.vecmath.Quat4f r0, r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        r1 := @parameter0: com.jhlabs.vecmath.Quat4f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple4f: float x>;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple4f: float y>;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple4f: float z>;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1.<com.jhlabs.vecmath.Tuple4f: float w>;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Tuple4f)
    {
        com.jhlabs.vecmath.Tuple4f r1;
        com.jhlabs.vecmath.Quat4f r0;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple4f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple4f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple4f: float x>;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple4f: float y>;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple4f: float z>;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f2;

        $f3 = r1.<com.jhlabs.vecmath.Tuple4f: float w>;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f3;

        return;
    }

    public void set(com.jhlabs.vecmath.AxisAngle4f)
    {
        com.jhlabs.vecmath.Quat4f r1;
        double $d0, $d1, $d2, $d3;
        com.jhlabs.vecmath.AxisAngle4f r0;
        float $f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r1 := @this: com.jhlabs.vecmath.Quat4f;

        r0 := @parameter0: com.jhlabs.vecmath.AxisAngle4f;

        $f0 = r0.<com.jhlabs.vecmath.AxisAngle4f: float angle>;

        f1 = $f0 * 0.5F;

        $d0 = (double) f1;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f2 = (float) $d1;

        $d2 = (double) f1;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f3 = (float) $d3;

        $f4 = r0.<com.jhlabs.vecmath.AxisAngle4f: float x>;

        $f5 = $f4 * f3;

        r1.<com.jhlabs.vecmath.Tuple4f: float x> = $f5;

        $f6 = r0.<com.jhlabs.vecmath.AxisAngle4f: float y>;

        $f7 = $f6 * f3;

        r1.<com.jhlabs.vecmath.Tuple4f: float y> = $f7;

        $f8 = r0.<com.jhlabs.vecmath.AxisAngle4f: float z>;

        $f9 = $f8 * f3;

        r1.<com.jhlabs.vecmath.Tuple4f: float z> = $f9;

        r1.<com.jhlabs.vecmath.Tuple4f: float w> = f2;

        return;
    }

    public void normalize()
    {
        com.jhlabs.vecmath.Quat4f r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;

        r0 := @this: com.jhlabs.vecmath.Quat4f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f0 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f5 = $f1 * $f0;

        $f3 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f2 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f4 = $f3 * $f2;

        $f9 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f6 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f8 = $f7 * $f6;

        $f13 = $f9 + $f8;

        $f11 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f10 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f12 = $f11 * $f10;

        $f14 = $f13 + $f12;

        f15 = 1.0F / $f14;

        $f16 = r0.<com.jhlabs.vecmath.Tuple4f: float x>;

        $f17 = $f16 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float x> = $f17;

        $f18 = r0.<com.jhlabs.vecmath.Tuple4f: float y>;

        $f19 = $f18 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float y> = $f19;

        $f20 = r0.<com.jhlabs.vecmath.Tuple4f: float z>;

        $f21 = $f20 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float z> = $f21;

        $f22 = r0.<com.jhlabs.vecmath.Tuple4f: float w>;

        $f23 = $f22 * f15;

        r0.<com.jhlabs.vecmath.Tuple4f: float w> = $f23;

        return;
    }

    public void set(com.jhlabs.vecmath.Matrix4f)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, b7;
        com.jhlabs.vecmath.Quat4f r1;
        float $f0, $f1, $f2, $f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, f82, f83, f84, f85, f86;
        int $i8, $i9, $i10, $i11;
        com.jhlabs.vecmath.Matrix4f r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r1 := @this: com.jhlabs.vecmath.Quat4f;

        r0 := @parameter0: com.jhlabs.vecmath.Matrix4f;

        $f1 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $f0 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $f3 = $f1 + $f0;

        $f2 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        f4 = $f3 + $f2;

        $d0 = (double) f4;

        $b0 = $d0 cmpl 0.0;

        $i8 = (int) $b0;

        if $i8 <= 0 goto label01;

        $f68 = f4 + 1.0F;

        $d10 = (double) $f68;

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);

        f82 = (float) $d11;

        $f69 = f82 / 2.0F;

        r1.<com.jhlabs.vecmath.Tuple4f: float w> = $f69;

        f83 = 0.5F / f82;

        $f71 = r0.<com.jhlabs.vecmath.Matrix4f: float m12>;

        $f70 = r0.<com.jhlabs.vecmath.Matrix4f: float m21>;

        $f72 = $f71 - $f70;

        $f73 = $f72 * f83;

        r1.<com.jhlabs.vecmath.Tuple4f: float x> = $f73;

        $f75 = r0.<com.jhlabs.vecmath.Matrix4f: float m20>;

        $f74 = r0.<com.jhlabs.vecmath.Matrix4f: float m02>;

        $f76 = $f75 - $f74;

        $f77 = $f76 * f83;

        r1.<com.jhlabs.vecmath.Tuple4f: float y> = $f77;

        $f79 = r0.<com.jhlabs.vecmath.Matrix4f: float m01>;

        $f78 = r0.<com.jhlabs.vecmath.Matrix4f: float m10>;

        $f80 = $f79 - $f78;

        $f81 = $f80 * f83;

        r1.<com.jhlabs.vecmath.Tuple4f: float z> = $f81;

        goto label10;

     label01:
        b7 = 0;

        $f6 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $f5 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $b1 = $f6 cmpl $f5;

        $i9 = (int) $b1;

        if $i9 <= 0 goto label02;

        b7 = 1;

        $f67 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        $f66 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $b6 = $f67 cmpl $f66;

        $i10 = (int) $b6;

        if $i10 <= 0 goto label03;

        b7 = 2;

        goto label03;

     label02:
        $f8 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        $f7 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $b2 = $f8 cmpl $f7;

        $i11 = (int) $b2;

        if $i11 <= 0 goto label03;

        b7 = 2;

     label03:
        tableswitch(b7)
        {
            case 0: goto label04;
            case 1: goto label06;
            case 2: goto label08;
            default: goto label10;
        };

     label04:
        $f50 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $f48 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $f47 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        $f49 = $f48 + $f47;

        $f51 = $f50 - $f49;

        $f52 = $f51 + 1.0F;

        $d7 = (double) $f52;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        f84 = (float) $d8;

        $f53 = f84 * 0.5F;

        r1.<com.jhlabs.vecmath.Tuple4f: float x> = $f53;

        $d9 = (double) f84;

        $b5 = $d9 cmpl 0.0;

        if $b5 == 0 goto label05;

        f84 = 0.5F / f84;

     label05:
        $f55 = r0.<com.jhlabs.vecmath.Matrix4f: float m12>;

        $f54 = r0.<com.jhlabs.vecmath.Matrix4f: float m21>;

        $f56 = $f55 - $f54;

        $f57 = $f56 * f84;

        r1.<com.jhlabs.vecmath.Tuple4f: float w> = $f57;

        $f59 = r0.<com.jhlabs.vecmath.Matrix4f: float m01>;

        $f58 = r0.<com.jhlabs.vecmath.Matrix4f: float m10>;

        $f60 = $f59 + $f58;

        $f61 = $f60 * f84;

        r1.<com.jhlabs.vecmath.Tuple4f: float y> = $f61;

        $f63 = r0.<com.jhlabs.vecmath.Matrix4f: float m02>;

        $f62 = r0.<com.jhlabs.vecmath.Matrix4f: float m20>;

        $f64 = $f63 + $f62;

        $f65 = $f64 * f84;

        r1.<com.jhlabs.vecmath.Tuple4f: float z> = $f65;

        goto label10;

     label06:
        $f31 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $f29 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        $f28 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $f30 = $f29 + $f28;

        $f32 = $f31 - $f30;

        $f33 = $f32 + 1.0F;

        $d4 = (double) $f33;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f85 = (float) $d5;

        $f34 = f85 * 0.5F;

        r1.<com.jhlabs.vecmath.Tuple4f: float y> = $f34;

        $d6 = (double) f85;

        $b4 = $d6 cmpl 0.0;

        if $b4 == 0 goto label07;

        f85 = 0.5F / f85;

     label07:
        $f36 = r0.<com.jhlabs.vecmath.Matrix4f: float m20>;

        $f35 = r0.<com.jhlabs.vecmath.Matrix4f: float m02>;

        $f37 = $f36 - $f35;

        $f38 = $f37 * f85;

        r1.<com.jhlabs.vecmath.Tuple4f: float w> = $f38;

        $f40 = r0.<com.jhlabs.vecmath.Matrix4f: float m12>;

        $f39 = r0.<com.jhlabs.vecmath.Matrix4f: float m21>;

        $f41 = $f40 + $f39;

        $f42 = $f41 * f85;

        r1.<com.jhlabs.vecmath.Tuple4f: float z> = $f42;

        $f44 = r0.<com.jhlabs.vecmath.Matrix4f: float m10>;

        $f43 = r0.<com.jhlabs.vecmath.Matrix4f: float m01>;

        $f45 = $f44 + $f43;

        $f46 = $f45 * f85;

        r1.<com.jhlabs.vecmath.Tuple4f: float x> = $f46;

        goto label10;

     label08:
        $f12 = r0.<com.jhlabs.vecmath.Matrix4f: float m00>;

        $f10 = r0.<com.jhlabs.vecmath.Matrix4f: float m11>;

        $f9 = r0.<com.jhlabs.vecmath.Matrix4f: float m22>;

        $f11 = $f10 + $f9;

        $f13 = $f12 - $f11;

        $f14 = $f13 + 1.0F;

        $d1 = (double) $f14;

        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        f86 = (float) $d2;

        $f15 = f86 * 0.5F;

        r1.<com.jhlabs.vecmath.Tuple4f: float z> = $f15;

        $d3 = (double) f86;

        $b3 = $d3 cmpl 0.0;

        if $b3 == 0 goto label09;

        f86 = 0.5F / f86;

     label09:
        $f17 = r0.<com.jhlabs.vecmath.Matrix4f: float m01>;

        $f16 = r0.<com.jhlabs.vecmath.Matrix4f: float m10>;

        $f18 = $f17 - $f16;

        $f19 = $f18 * f86;

        r1.<com.jhlabs.vecmath.Tuple4f: float w> = $f19;

        $f21 = r0.<com.jhlabs.vecmath.Matrix4f: float m20>;

        $f20 = r0.<com.jhlabs.vecmath.Matrix4f: float m02>;

        $f22 = $f21 + $f20;

        $f23 = $f22 * f86;

        r1.<com.jhlabs.vecmath.Tuple4f: float x> = $f23;

        $f25 = r0.<com.jhlabs.vecmath.Matrix4f: float m21>;

        $f24 = r0.<com.jhlabs.vecmath.Matrix4f: float m12>;

        $f26 = $f25 + $f24;

        $f27 = $f26 * f86;

        r1.<com.jhlabs.vecmath.Tuple4f: float y> = $f27;

     label10:
        return;
    }
}
