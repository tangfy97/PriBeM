public class org.codehaus.groovy.ant.LoggingHelper extends java.lang.Object
{
    private org.apache.tools.ant.Task owner;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$codehaus$groovy$ant$LoggingHelper;

    public void <init>(org.apache.tools.ant.Task)
    {
        org.apache.tools.ant.Task r1;
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: org.apache.tools.ant.Task;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.codehaus.groovy.ant.LoggingHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner> = r1;

        return;
    }

    public void error(java.lang.String)
    {
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.String r1;
        org.apache.tools.ant.Task $r2;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner>;

        virtualinvoke $r2.<org.apache.tools.ant.Task: void log(java.lang.String,int)>(r1, 0);

        return;
    }

    public void warn(java.lang.String)
    {
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.String r1;
        org.apache.tools.ant.Task $r2;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner>;

        virtualinvoke $r2.<org.apache.tools.ant.Task: void log(java.lang.String,int)>(r1, 1);

        return;
    }

    public void info(java.lang.String)
    {
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.String r1;
        org.apache.tools.ant.Task $r2;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner>;

        virtualinvoke $r2.<org.apache.tools.ant.Task: void log(java.lang.String,int)>(r1, 2);

        return;
    }

    public void verbose(java.lang.String)
    {
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.String r1;
        org.apache.tools.ant.Task $r2;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner>;

        virtualinvoke $r2.<org.apache.tools.ant.Task: void log(java.lang.String,int)>(r1, 3);

        return;
    }

    public void debug(java.lang.String)
    {
        org.codehaus.groovy.ant.LoggingHelper r0;
        java.lang.String r1;
        org.apache.tools.ant.Task $r2;

        r0 := @this: org.codehaus.groovy.ant.LoggingHelper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ant.LoggingHelper: org.apache.tools.ant.Task owner>;

        virtualinvoke $r2.<org.apache.tools.ant.Task: void log(java.lang.String,int)>(r1, 4);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.codehaus.groovy.ant.LoggingHelper: java.lang.Class class$org$codehaus$groovy$ant$LoggingHelper>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.codehaus.groovy.ant.LoggingHelper: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.ant.LoggingHelper");

        <org.codehaus.groovy.ant.LoggingHelper: java.lang.Class class$org$codehaus$groovy$ant$LoggingHelper> = $r1;

        goto label2;

     label1:
        $r1 = <org.codehaus.groovy.ant.LoggingHelper: java.lang.Class class$org$codehaus$groovy$ant$LoggingHelper>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.codehaus.groovy.ant.LoggingHelper: boolean $assertionsDisabled> = $z1;

        return;
    }
}
