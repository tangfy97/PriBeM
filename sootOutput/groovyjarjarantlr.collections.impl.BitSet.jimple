public class groovyjarjarantlr.collections.impl.BitSet extends java.lang.Object implements java.lang.Cloneable
{
    protected static final int BITS;
    protected static final int NIBBLE;
    protected static final int LOG_BITS;
    protected static final int MOD_MASK;
    protected long[] bits;

    public void <init>()
    {
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        specialinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(int)>(64);

        return;
    }

    public void <init>(long[])
    {
        long[] r1;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r1 := @parameter0: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits> = r1;

        return;
    }

    public void <init>(int)
    {
        long[] $r1;
        int i0, $i1, $i2, $i3;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 - 1;

        $i2 = $i1 >> 6;

        $i3 = $i2 + 1;

        $r1 = newarray (long)[$i3];

        r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits> = $r1;

        return;
    }

    public void add(int)
    {
        long $l3, $l4, $l5;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        int i0, $i1, $i2;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        $i1 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: int wordNumber(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i0);

     label1:
        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l3 = $r2[$i1];

        $l4 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: long bitMask(int)>(i0);

        $l5 = $l3 | $l4;

        $r2[$i1] = $l5;

        return;
    }

    public groovyjarjarantlr.collections.impl.BitSet and(groovyjarjarantlr.collections.impl.BitSet)
    {
        java.lang.Object $r1;
        groovyjarjarantlr.collections.impl.BitSet r0, r2, r3;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r3 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.collections.impl.BitSet) $r1;

        virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: void andInPlace(groovyjarjarantlr.collections.impl.BitSet)>(r3);

        return r2;
    }

    public void andInPlace(groovyjarjarantlr.collections.impl.BitSet)
    {
        long $l4, $l5, $l6;
        long[] $r1, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, i7, i8, $i10;
        groovyjarjarantlr.collections.impl.BitSet r0, r2;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r2 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r1;

        $r3 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        i7 = $i2 - 1;

     label1:
        if i7 < 0 goto label2;

        $r6 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l5 = $r6[i7];

        $r7 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l4 = $r7[i7];

        $l6 = $l5 & $l4;

        $r6[i7] = $l6;

        $i10 = (int) -1;

        i7 = i7 + $i10;

        goto label1;

     label2:
        i8 = $i2;

     label3:
        $r4 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i3 = lengthof $r4;

        if i8 >= $i3 goto label4;

        $r5 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r5[i8] = 0L;

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    private static final long bitMask(int)
    {
        int i0, i1;
        long $l2;

        i0 := @parameter0: int;

        i1 = i0 & 63;

        $l2 = 1L << i1;

        return $l2;
    }

    public void clear()
    {
        long[] $r1, $r2;
        int $i0, i1, $i3;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r2[i1] = 0L;

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label2:
        return;
    }

    public void clear(int)
    {
        long $l3, $l4, $l5, $l6;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        int i0, $i1, $i2;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        $i1 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: int wordNumber(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i0);

     label1:
        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l3 = $r2[$i1];

        $l4 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: long bitMask(int)>(i0);

        $l5 = $l4 ^ -1L;

        $l6 = $l3 & $l5;

        $r2[$i1] = $l6;

        return;
    }

    public java.lang.Object clone()
    {
        groovyjarjarantlr.collections.impl.BitSet r0, r2;
        java.lang.CloneNotSupportedException $r8;
        long[] $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.InternalError $r9;
        java.lang.Object $r1;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.collections.impl.BitSet) $r1;

        $r3 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r3;

        $r4 = newarray (long)[$i0];

        r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits> = $r4;

        $r7 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r6 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r5 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.InternalError;

        specialinvoke $r9.<java.lang.InternalError: void <init>()>();

        throw $r9;

     label4:
        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public int degree()
    {
        long l1, $l3, $l4;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        byte $b2, $b5;
        int $i0, i6, i7, i8, $i10, $i12;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i6 = 0;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        i7 = $i0 - 1;

     label1:
        if i7 < 0 goto label5;

        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        l1 = $r2[i7];

        $b2 = l1 cmp 0L;

        if $b2 == 0 goto label4;

        i8 = 63;

     label2:
        if i8 < 0 goto label4;

        $l3 = 1L << i8;

        $l4 = l1 & $l3;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label3;

        i6 = i6 + 1;

     label3:
        $i10 = (int) -1;

        i8 = i8 + $i10;

        goto label2;

     label4:
        $i12 = (int) -1;

        i7 = i7 + $i12;

        goto label1;

     label5:
        return i6;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b8, $b12, $b16;
        boolean $z0;
        groovyjarjarantlr.collections.impl.BitSet r1, r2;
        long $l7, $l11, $l14, $l15;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i13, $i17, i18, i19, i20;
        java.lang.Object r0;

        r2 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label7;

        $z0 = r0 instanceof groovyjarjarantlr.collections.impl.BitSet;

        if $z0 == 0 goto label7;

        r1 = (groovyjarjarantlr.collections.impl.BitSet) r0;

        $r3 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r3;

        $r4 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r4;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        i18 = $i2;

     label1:
        $i3 = i18;

        $i17 = i18 - 1;

        i18 = $i17;

        if $i3 <= 0 goto label2;

        $r11 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l15 = $r11[$i17];

        $r12 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l14 = $r12[$i17];

        $b16 = $l15 cmp $l14;

        if $b16 == 0 goto label1;

        return 0;

     label2:
        $r5 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i4 = lengthof $r5;

        if $i4 <= $i2 goto label4;

        $r9 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        i19 = lengthof $r9;

     label3:
        $i10 = i19;

        $i13 = i19 - 1;

        i19 = $i13;

        if $i10 <= $i2 goto label6;

        $r10 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l11 = $r10[$i13];

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label3;

        return 0;

     label4:
        $r6 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i5 = lengthof $r6;

        if $i5 <= $i2 goto label6;

        $r7 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        i20 = lengthof $r7;

     label5:
        $i6 = i20;

        $i9 = i20 - 1;

        i20 = $i9;

        if $i6 <= $i2 goto label6;

        $r8 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l7 = $r8[$i9];

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label5;

        return 0;

     label6:
        return 1;

     label7:
        return 0;
    }

    public static groovyjarjarantlr.collections.impl.Vector getRanges(int[])
    {
        int[] r0;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19;
        groovyjarjarantlr.collections.impl.Vector $r1;
        groovyjarjarantlr.collections.impl.IntRange $r2;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        return null;

     label1:
        i1 = r0[0];

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        i4 = r0[$i3];

        $i5 = lengthof r0;

        if $i5 > 2 goto label2;

        return null;

     label2:
        $r1 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r1.<groovyjarjarantlr.collections.impl.Vector: void <init>(int)>(5);

        i17 = 0;

     label3:
        $i6 = lengthof r0;

        $i7 = $i6 - 2;

        if i17 >= $i7 goto label8;

        $i8 = lengthof r0;

        i18 = $i8 - 1;

        i19 = i17 + 1;

     label4:
        $i9 = lengthof r0;

        if i19 >= $i9 goto label6;

        $i16 = r0[i19];

        $i13 = i19 - 1;

        $i14 = r0[$i13];

        $i15 = $i14 + 1;

        if $i16 == $i15 goto label5;

        i18 = i19 - 1;

        goto label6;

     label5:
        i19 = i19 + 1;

        goto label4;

     label6:
        $i10 = i18 - i17;

        if $i10 <= 2 goto label7;

        $r2 = new groovyjarjarantlr.collections.impl.IntRange;

        $i12 = r0[i17];

        $i11 = r0[i18];

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.IntRange: void <init>(int,int)>($i12, $i11);

        virtualinvoke $r1.<groovyjarjarantlr.collections.impl.Vector: void appendElement(java.lang.Object)>($r2);

     label7:
        i17 = i17 + 1;

        goto label3;

     label8:
        return $r1;
    }

    public void growToInclude(int)
    {
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, r2, $r3, $r4;
        int $i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i1 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        $i2 = $i0 << 1;

        $i3 = specialinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: int numWordsToHold(int)>(i1);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        r2 = newarray (long)[$i4];

        $r4 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r3 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i5 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i5);

        r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits> = r2;

        return;
    }

    public boolean member(int)
    {
        long $l3, $l4, $l5;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        byte $b6;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        $i1 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: int wordNumber(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        return 0;

     label1:
        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l3 = $r2[$i1];

        $l4 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: long bitMask(int)>(i0);

        $l5 = $l3 & $l4;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean nil()
    {
        long $l1;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        byte $b2;
        int $i0, i3, $i5;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l1 = $r2[i3];

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        return 0;

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label3:
        return 1;
    }

    public groovyjarjarantlr.collections.impl.BitSet not()
    {
        java.lang.Object $r1;
        groovyjarjarantlr.collections.impl.BitSet r0, r2;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.collections.impl.BitSet) $r1;

        virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: void notInPlace()>();

        return r2;
    }

    public void notInPlace()
    {
        long $l1, $l2;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2, $r3;
        int $i0, i3, $i5;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label2;

        $r3 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l1 = $r2[i3];

        $l2 = $l1 ^ -1L;

        $r3[i3] = $l2;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label2:
        return;
    }

    public void notInPlace(int)
    {
        int i0;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void notInPlace(int,int)>(0, i0);

        return;
    }

    public void notInPlace(int, int)
    {
        long $l3, $l4, $l5;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1;
        int i0, i1, $i2, i6;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i0);

        i6 = i1;

     label1:
        if i6 > i0 goto label2;

        $i2 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: int wordNumber(int)>(i6);

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l3 = $r1[$i2];

        $l4 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: long bitMask(int)>(i6);

        $l5 = $l3 ^ $l4;

        $r1[$i2] = $l5;

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    private final int numWordsToHold(int)
    {
        int i0, $i1, $i2;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        $i1 = i0 >> 6;

        $i2 = $i1 + 1;

        return $i2;
    }

    public static groovyjarjarantlr.collections.impl.BitSet of(int)
    {
        int i0, $i1;
        groovyjarjarantlr.collections.impl.BitSet $r0;

        i0 := @parameter0: int;

        $r0 = new groovyjarjarantlr.collections.impl.BitSet;

        $i1 = i0 + 1;

        specialinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void <init>(int)>($i1);

        virtualinvoke $r0.<groovyjarjarantlr.collections.impl.BitSet: void add(int)>(i0);

        return $r0;
    }

    public groovyjarjarantlr.collections.impl.BitSet or(groovyjarjarantlr.collections.impl.BitSet)
    {
        java.lang.Object $r1;
        groovyjarjarantlr.collections.impl.BitSet r0, r2, r3;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r3 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.collections.impl.BitSet) $r1;

        virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: void orInPlace(groovyjarjarantlr.collections.impl.BitSet)>(r3);

        return r2;
    }

    public void orInPlace(groovyjarjarantlr.collections.impl.BitSet)
    {
        long $l5, $l6, $l7;
        long[] $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i8, i9, $i11;
        groovyjarjarantlr.collections.impl.BitSet r0, r2;

        r2 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r0 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r1;

        $r3 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r3;

        if $i1 <= $i0 goto label1;

        $r8 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i8 = lengthof $r8;

        specialinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: void setSize(int)>($i8);

     label1:
        $r4 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i3 = lengthof $r4;

        $r5 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i2 = lengthof $r5;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        i9 = $i4 - 1;

     label2:
        if i9 < 0 goto label3;

        $r6 = r2.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l6 = $r6[i9];

        $r7 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l5 = $r7[i9];

        $l7 = $l6 | $l5;

        $r6[i9] = $l7;

        $i11 = (int) -1;

        i9 = i9 + $i11;

        goto label2;

     label3:
        return;
    }

    public void remove(int)
    {
        long $l3, $l4, $l5, $l6;
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1, $r2;
        int i0, $i1, $i2;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        $i1 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: int wordNumber(int)>(i0);

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: void growToInclude(int)>(i0);

     label1:
        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l3 = $r2[$i1];

        $l4 = staticinvoke <groovyjarjarantlr.collections.impl.BitSet: long bitMask(int)>(i0);

        $l5 = $l4 ^ -1L;

        $l6 = $l3 & $l5;

        $r2[$i1] = $l6;

        return;
    }

    private void setSize(int)
    {
        long[] r0, $r2, $r3;
        int i0, $i1, $i2;
        groovyjarjarantlr.collections.impl.BitSet r1;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        i0 := @parameter0: int;

        r0 = newarray (long)[i0];

        $r2 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r2;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i1);

        $r3 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r0, 0, $i2);

        r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits> = r0;

        return;
    }

    public int size()
    {
        long[] $r1;
        int $i0, $i1;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        $i1 = $i0 << 6;

        return $i1;
    }

    public int lengthInLongWords()
    {
        int $i0;
        long[] $r1;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean subset(groovyjarjarantlr.collections.impl.BitSet)
    {
        groovyjarjarantlr.collections.impl.BitSet r0, r1, $r2;
        boolean $z0, $z1;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r0 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        if r0 == null goto label1;

        $z0 = r0 instanceof groovyjarjarantlr.collections.impl.BitSet;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke r1.<groovyjarjarantlr.collections.impl.BitSet: groovyjarjarantlr.collections.impl.BitSet and(groovyjarjarantlr.collections.impl.BitSet)>(r0);

        $z1 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public void subtractInPlace(groovyjarjarantlr.collections.impl.BitSet)
    {
        long $l2, $l3, $l4, $l5;
        groovyjarjarantlr.collections.impl.BitSet r0, r1;
        long[] $r2, $r3, $r4, $r5;
        int $i0, $i1, i6;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r0 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        if r0 != null goto label1;

        return;

     label1:
        i6 = 0;

     label2:
        $r2 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r2;

        if i6 >= $i0 goto label3;

        $r3 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r3;

        if i6 >= $i1 goto label3;

        $r4 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l4 = $r4[i6];

        $r5 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l2 = $r5[i6];

        $l3 = $l2 ^ -1L;

        $l5 = $l4 & $l3;

        $r4[i6] = $l5;

        i6 = i6 + 1;

        goto label2;

     label3:
        return;
    }

    public int[] toArray()
    {
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r2;
        int[] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $i0 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: int degree()>();

        r1 = newarray (int)[$i0];

        i4 = 0;

        i5 = 0;

     label1:
        $r2 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i1 = lengthof $r2;

        $i2 = $i1 << 6;

        if i5 >= $i2 goto label3;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>(i5);

        if $z0 == 0 goto label2;

        $i3 = i4;

        i4 = i4 + 1;

        r1[$i3] = i5;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return r1;
    }

    public long[] toPackedArray()
    {
        long[] $r1;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: java.lang.String toString(java.lang.String)>(",");

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        groovyjarjarantlr.collections.impl.BitSet r0;
        long[] $r1;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.String r7, r9;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r7 := @parameter0: java.lang.String;

        r9 = "";

        i3 = 0;

     label1:
        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        $i1 = $i0 << 6;

        if i3 >= $i1 goto label4;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>(i3);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        r9 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r9;
    }

    public java.lang.String toString(java.lang.String, groovyjarjarantlr.CharFormatter)
    {
        groovyjarjarantlr.CharFormatter r4;
        long[] $r1;
        java.lang.StringBuffer $r2, $r3, $r6, $r7, $r8, $r10;
        int $i0, $i1, $i2, i3;
        java.lang.String $r5, r9, r11;
        boolean $z0;
        groovyjarjarantlr.collections.impl.BitSet r0;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r9 := @parameter0: java.lang.String;

        r4 := @parameter1: groovyjarjarantlr.CharFormatter;

        r11 = "";

        i3 = 0;

     label1:
        $r1 = r0.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r1;

        $i1 = $i0 << 6;

        if i3 >= $i1 goto label4;

        $z0 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>(i3);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r5 = interfaceinvoke r4.<groovyjarjarantlr.CharFormatter: java.lang.String literalChar(int)>(i3);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r11 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r11;
    }

    public java.lang.String toString(java.lang.String, groovyjarjarantlr.collections.impl.Vector)
    {
        long[] $r2;
        java.lang.StringBuffer $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r7, r21, $r23, r24;
        groovyjarjarantlr.collections.impl.Vector r0;
        boolean $z0;
        groovyjarjarantlr.collections.impl.BitSet r1;
        java.lang.Object $r3, $r6;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r21 := @parameter0: java.lang.String;

        r0 := @parameter1: groovyjarjarantlr.collections.impl.Vector;

        if r0 != null goto label1;

        $r23 = virtualinvoke r1.<groovyjarjarantlr.collections.impl.BitSet: java.lang.String toString(java.lang.String)>(r21);

        return $r23;

     label1:
        r24 = "";

        i4 = 0;

     label2:
        $r2 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r2;

        $i1 = $i0 << 6;

        if i4 >= $i1 goto label7;

        $z0 = virtualinvoke r1.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>(i4);

        if $z0 == 0 goto label6;

        $i2 = virtualinvoke r24.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $i3 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: int size()>();

        if i4 < $i3 goto label4;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<bad element ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        r24 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label4:
        $r3 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i4);

        if $r3 != null goto label5;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        r24 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r6 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i4);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r24 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        return r24;
    }

    public java.lang.String toStringOfHalfWords()
    {
        long $l1, $l2, $l3, $l4, $l5;
        long[] $r2, $r3, $r13;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        int $i0, i6;
        java.lang.String $r0, $r8, $r12, r21;
        groovyjarjarantlr.collections.impl.BitSet r1;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        r21 = $r0;

        i6 = 0;

     label1:
        $r2 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r2;

        if i6 >= $i0 goto label3;

        if i6 == 0 goto label2;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r3 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l2 = $r3[i6];

        $l3 = $l2 & 4294967295L;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UL");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l1 = $r13[i6];

        $l4 = $l1 >>> 32;

        $l5 = $l4 & 4294967295L;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("UL");

        r21 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        i6 = i6 + 1;

        goto label1;

     label3:
        return r21;
    }

    public java.lang.String toStringOfWords()
    {
        long $l1;
        groovyjarjarantlr.collections.impl.BitSet r1;
        long[] $r2, $r5;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        int $i0, i2;
        java.lang.String $r0, r11;

        r1 := @this: groovyjarjarantlr.collections.impl.BitSet;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        r11 = $r0;

        i2 = 0;

     label1:
        $r2 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label3;

        if i2 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r5 = r1.<groovyjarjarantlr.collections.impl.BitSet: long[] bits>;

        $l1 = $r5[i2];

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L");

        r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label1;

     label3:
        return r11;
    }

    public java.lang.String toStringWithRanges(java.lang.String, groovyjarjarantlr.CharFormatter)
    {
        groovyjarjarantlr.CharFormatter r4;
        int[] $r1;
        groovyjarjarantlr.collections.impl.BitSet r0;
        java.lang.StringBuffer $r2, $r3, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        java.lang.String $r5, $r9, $r11, $r15, $r18, r22, r24;

        r0 := @this: groovyjarjarantlr.collections.impl.BitSet;

        r22 := @parameter0: java.lang.String;

        r4 := @parameter1: groovyjarjarantlr.CharFormatter;

        r24 = "";

        $r1 = virtualinvoke r0.<groovyjarjarantlr.collections.impl.BitSet: int[] toArray()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return "";

     label1:
        i12 = 0;

     label2:
        $i1 = lengthof $r1;

        if i12 >= $i1 goto label9;

        i13 = 0;

        i14 = i12 + 1;

     label3:
        $i2 = lengthof $r1;

        if i14 >= $i2 goto label5;

        $i11 = $r1[i14];

        $i8 = i14 - 1;

        $i9 = $r1[$i8];

        $i10 = $i9 + 1;

        if $i11 == $i10 goto label4;

        goto label5;

     label4:
        i13 = i14;

        i14 = i14 + 1;

        goto label3;

     label5:
        $i3 = virtualinvoke r24.<java.lang.String: int length()>();

        if $i3 <= 0 goto label6;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        $i4 = i13 - i12;

        if $i4 < 2 goto label7;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $i6 = $r1[i12];

        $r9 = interfaceinvoke r4.<groovyjarjarantlr.CharFormatter: java.lang.String literalChar(int)>($i6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $i7 = $r1[i13];

        $r18 = interfaceinvoke r4.<groovyjarjarantlr.CharFormatter: java.lang.String literalChar(int)>($i7);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        r24 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        i12 = i13;

        goto label8;

     label7:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $i5 = $r1[i12];

        $r5 = interfaceinvoke r4.<groovyjarjarantlr.CharFormatter: java.lang.String literalChar(int)>($i5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r24 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label8:
        i12 = i12 + 1;

        goto label2;

     label9:
        return r24;
    }

    private static final int wordNumber(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >> 6;

        return $i1;
    }

    public static void <clinit>()
    {
        <groovyjarjarantlr.collections.impl.BitSet: int MOD_MASK> = 63;

        <groovyjarjarantlr.collections.impl.BitSet: int LOG_BITS> = 6;

        <groovyjarjarantlr.collections.impl.BitSet: int NIBBLE> = 4;

        <groovyjarjarantlr.collections.impl.BitSet: int BITS> = 64;

        return;
    }
}
