public interface  org.apache.tika.config.LoadErrorHandler extends java.lang.Object
{
    public static final org.apache.tika.config.LoadErrorHandler IGNORE;
    public static final org.apache.tika.config.LoadErrorHandler WARN;
    public static final org.apache.tika.config.LoadErrorHandler THROW;

    public abstract void handleLoadError(java.lang.String, java.lang.Throwable);

    static void <clinit>()
    {
        org.apache.tika.config.LoadErrorHandler$2 $r1;
        org.apache.tika.config.LoadErrorHandler$1 $r0;
        org.apache.tika.config.LoadErrorHandler$3 $r2;

        $r0 = new org.apache.tika.config.LoadErrorHandler$1;

        specialinvoke $r0.<org.apache.tika.config.LoadErrorHandler$1: void <init>()>();

        <org.apache.tika.config.LoadErrorHandler: org.apache.tika.config.LoadErrorHandler IGNORE> = $r0;

        $r1 = new org.apache.tika.config.LoadErrorHandler$2;

        specialinvoke $r1.<org.apache.tika.config.LoadErrorHandler$2: void <init>()>();

        <org.apache.tika.config.LoadErrorHandler: org.apache.tika.config.LoadErrorHandler WARN> = $r1;

        $r2 = new org.apache.tika.config.LoadErrorHandler$3;

        specialinvoke $r2.<org.apache.tika.config.LoadErrorHandler$3: void <init>()>();

        <org.apache.tika.config.LoadErrorHandler: org.apache.tika.config.LoadErrorHandler THROW> = $r2;

        return;
    }
}
