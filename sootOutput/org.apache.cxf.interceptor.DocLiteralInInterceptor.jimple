public class org.apache.cxf.interceptor.DocLiteralInInterceptor extends org.apache.cxf.interceptor.AbstractInDatabindingInterceptor
{
    public static final java.lang.String KEEP_PARAMETERS_WRAPPER;
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r0;
        java.lang.String $r2;

        r0 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: void <init>(java.lang.String)>("unmarshal");

        $r1 = class "Lorg/apache/cxf/interceptor/URIMappingInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void addAfter(java.lang.String)>($r2);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.MessageContentsList $r4;
        org.apache.cxf.service.Service $r8;
        org.apache.cxf.service.model.InterfaceInfo $r11;
        javax.xml.namespace.QName $r13, $r31, $r35, $r49, $r58;
        java.lang.Object[] $r44;
        org.apache.cxf.service.model.BindingOperationInfo $r6, $r9, $r27;
        org.apache.cxf.service.model.ServiceInfo $r25, $r53, $r64;
        java.util.ArrayList $r10;
        org.apache.cxf.service.model.MessagePartInfo $r34, $r38, $r42, $r48, r65;
        org.apache.cxf.service.model.EndpointInfo $r63;
        org.apache.cxf.service.model.BindingInfo $r24, $r50, $r52;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r0;
        org.apache.cxf.message.Exchange $r5, $r7;
        org.apache.cxf.service.model.BindingMessageInfo $r22, r60;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.util.Collection $r12;
        java.util.logging.Logger $r45, $r56;
        java.util.List $r15, $r16, $r17, $r18, $r20, $r21, $r29, $r32, $r36, $r40, $r46;
        org.apache.cxf.interceptor.Fault $r43, $r57;
        org.apache.cxf.staxutils.DepthXMLStreamReader $r2, r59;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Boolean $r51;
        org.apache.cxf.databinding.DataReader $r3;
        java.util.Iterator $r30;
        org.apache.cxf.service.model.MessageInfo $r23, $r26, $r28;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.endpoint.Endpoint $r62;
        java.lang.Object $r14, $r19, $r33, $r37, $r39, $r41, $r47, $r54, $r55, $r61, $r66;

        r0 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: boolean isGET(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label01;

        $r55 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/util/List;");

        if $r55 == null goto label01;

        $r56 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r56.<java.util.logging.Logger: void fine(java.lang.String)>("DocLiteralInInterceptor skipped in HTTP GET method");

        return;

     label01:
        $r2 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)>(r1);

        r59 = $r2;

        $r3 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)>(r1);

        $r4 = new org.apache.cxf.message.MessageContentsList;

        specialinvoke $r4.<org.apache.cxf.message.MessageContentsList: void <init>()>();

        $r5 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo()>();

        $z1 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r1);

        if $r6 == null goto label02;

        $z8 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>($r2);

        if $z8 != 0 goto label02;

        return;

     label02:
        $r7 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r8 = staticinvoke <org.apache.cxf.service.model.ServiceModelUtil: org.apache.cxf.service.Service getService(org.apache.cxf.message.Exchange)>($r7);

        $r9 = specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,boolean)>($r2, $r5, $r6, $z1);

        z10 = 0;

        if $r9 == null goto label03;

        $r50 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        if $r50 == null goto label03;

        $r51 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r52 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r53 = virtualinvoke $r52.<org.apache.cxf.service.model.BindingInfo: org.apache.cxf.service.model.ServiceInfo getService()>();

        $r54 = virtualinvoke $r53.<org.apache.cxf.service.model.ServiceInfo: java.lang.Object getProperty(java.lang.String)>("soap.force.doclit.bare");

        z10 = virtualinvoke $r51.<java.lang.Boolean: boolean equals(java.lang.Object)>($r54);

     label03:
        if z10 != 0 goto label08;

        if $r9 == null goto label08;

        $z5 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: boolean isUnwrappedCapable()>();

        if $z5 == 0 goto label08;

        $r24 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r25 = virtualinvoke $r24.<org.apache.cxf.service.model.BindingInfo: org.apache.cxf.service.model.ServiceInfo getService()>();

        $r26 = specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)>(r1, $r9, $z1, $r25);

        virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)>($r8, r1, $r3);

        $z6 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)>($r26, r1);

        if $z6 == 0 goto label05;

        $r31 = virtualinvoke $r2.<org.apache.cxf.staxutils.DepthXMLStreamReader: javax.xml.namespace.QName getName()>();

        $r32 = virtualinvoke $r26.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        $r34 = (org.apache.cxf.service.model.MessagePartInfo) $r33;

        $r35 = virtualinvoke $r34.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z7 = virtualinvoke $r35.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r31);

        if $z7 != 0 goto label04;

        $r43 = new org.apache.cxf.interceptor.Fault;

        $r45 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG>;

        $r44 = newarray (java.lang.Object)[2];

        $r44[0] = $r31;

        $r46 = virtualinvoke $r26.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r47 = interfaceinvoke $r46.<java.util.List: java.lang.Object get(int)>(0);

        $r48 = (org.apache.cxf.service.model.MessagePartInfo) $r47;

        $r49 = virtualinvoke $r48.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r44[1] = $r49;

        specialinvoke $r43.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("UNEXPECTED_WRAPPER_ELEMENT", $r45, null, $r44);

        throw $r43;

     label04:
        $r36 = virtualinvoke $r26.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r37 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(0);

        $r38 = (org.apache.cxf.service.model.MessagePartInfo) $r37;

        $r39 = interfaceinvoke $r3.<org.apache.cxf.databinding.DataReader: java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r38, $r2);

        $r40 = virtualinvoke $r26.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r41 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(0);

        $r42 = (org.apache.cxf.service.model.MessagePartInfo) $r41;

        virtualinvoke $r4.<org.apache.cxf.message.MessageContentsList: java.lang.Object put(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>($r42, $r39);

        goto label07;

     label05:
        $r27 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo getUnwrappedOperation()>();

        $r28 = specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)>(r1, $r27, $z1, $r25);

        $r29 = virtualinvoke $r28.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

        $i3 = virtualinvoke $r2.<org.apache.cxf.staxutils.DepthXMLStreamReader: int getEventType()>();

        if $i3 != 1 goto label06;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void nextEvent(javax.xml.stream.XMLStreamReader)>($r2);

     label06:
        specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)>($r2, $r3, $r4, $r30, r1);

     label07:
        goto label28;

     label08:
        r60 = null;

        $r61 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/Endpoint;");

        $r62 = (org.apache.cxf.endpoint.Endpoint) $r61;

        $r63 = interfaceinvoke $r62.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r64 = virtualinvoke $r63.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.ServiceInfo getService()>();

        if $r9 == null goto label13;

        if $z1 == 0 goto label09;

        r60 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getOutput()>();

        goto label10;

     label09:
        r60 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getInput()>();

        $r22 = virtualinvoke $r9.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingMessageInfo getOutput()>();

        if $r22 != null goto label10;

        interfaceinvoke $r5.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>(1);

     label10:
        if r60 != null goto label12;

     label11:
        return;

     label12:
        $r23 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: org.apache.cxf.service.model.MessageInfo getMessageInfo()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)>(r1, $r9, $z1, $r64, $r23);

     label13:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke $r64.<org.apache.cxf.service.model.ServiceInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        $r12 = virtualinvoke $r11.<org.apache.cxf.service.model.InterfaceInfo: java.util.Collection getOperations()>();

        interfaceinvoke $r10.<java.util.Collection: boolean addAll(java.util.Collection)>($r12);

        if $r2 == null goto label14;

        $z2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>($r2);

        if $z2 != 0 goto label16;

     label14:
        specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void getBindingOperationForEmptyBody(java.util.Collection,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.message.Exchange)>($r10, $r62, $r5);

     label15:
        return;

     label16:
        virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)>($r8, r1, $r3);

        i4 = 0;

     label17:
        $r13 = virtualinvoke r59.<org.apache.cxf.staxutils.DepthXMLStreamReader: javax.xml.namespace.QName getName()>();

        if $z1 != 0 goto label19;

        if r60 == null goto label19;

        $r20 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        if $r20 == null goto label19;

        $r21 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $i2 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i2 != 0 goto label19;

     label18:
        return;

     label19:
        if r60 == null goto label21;

        $r15 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        if $r15 == null goto label21;

        $r16 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $i0 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i0 <= 0 goto label21;

        $r17 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if $i1 <= i4 goto label20;

        $r18 = virtualinvoke r60.<org.apache.cxf.service.model.BindingMessageInfo: java.util.List getMessageParts()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i4);

        r65 = (org.apache.cxf.service.model.MessagePartInfo) $r19;

        goto label22;

     label20:
        r65 = null;

        goto label22;

     label21:
        r65 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)>($r5, $r10, $r13, $z1, i4, r1);

     label22:
        if z10 != 0 goto label23;

        specialinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: void validatePart(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.message.Message)>(r65, $r13, r1);

     label23:
        $r14 = interfaceinvoke $r3.<org.apache.cxf.databinding.DataReader: java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>(r65, r59);

        if z10 == 0 goto label24;

        $z4 = virtualinvoke $r4.<org.apache.cxf.message.MessageContentsList: boolean isEmpty()>();

        if $z4 == 0 goto label24;

        virtualinvoke $r4.<org.apache.cxf.message.MessageContentsList: boolean add(java.lang.Object)>($r14);

        goto label25;

     label24:
        virtualinvoke $r4.<org.apache.cxf.message.MessageContentsList: java.lang.Object put(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>(r65, $r14);

     label25:
        i4 = i4 + 1;

        $r66 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        if $r66 == null goto label26;

        if $r14 != r59 goto label27;

     label26:
        r59 = null;

     label27:
        if r59 == null goto label28;

        $z3 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>(r59);

        if $z3 != 0 goto label17;

     label28:
        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r4);

     label29:
        goto label32;

     label30:
        $r57 := @caughtexception;

        $z9 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r1);

        if $z9 != 0 goto label31;

        $r58 = <org.apache.cxf.interceptor.Fault: javax.xml.namespace.QName FAULT_CODE_CLIENT>;

        virtualinvoke $r57.<org.apache.cxf.interceptor.Fault: org.apache.cxf.interceptor.Fault setFaultCode(javax.xml.namespace.QName)>($r58);

     label31:
        throw $r57;

     label32:
        return;

        catch org.apache.cxf.interceptor.Fault from label03 to label11 with label30;
        catch org.apache.cxf.interceptor.Fault from label12 to label15 with label30;
        catch org.apache.cxf.interceptor.Fault from label16 to label18 with label30;
        catch org.apache.cxf.interceptor.Fault from label19 to label29 with label30;
    }

    private void getBindingOperationForEmptyBody(java.util.Collection, org.apache.cxf.endpoint.Endpoint, org.apache.cxf.message.Exchange)
    {
        org.apache.cxf.service.model.BindingOperationInfo $r9;
        int $i0, $i1;
        org.apache.cxf.service.model.MessagePartInfo $r13;
        boolean $z0, $z1, $z2;
        org.apache.cxf.service.model.EndpointInfo $r7;
        java.util.Iterator $r1;
        org.apache.cxf.service.model.MessageInfo $r4;
        java.util.Collection r0;
        org.apache.cxf.service.model.OperationInfo r3;
        org.apache.cxf.service.model.BindingInfo $r8;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r15;
        org.apache.cxf.message.Exchange r10;
        java.util.List $r5;
        org.apache.cxf.endpoint.Endpoint r6;
        java.lang.Object $r2, $r12;
        javax.xml.namespace.QName $r11, $r14;

        r15 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r0 := @parameter0: java.util.Collection;

        r6 := @parameter1: org.apache.cxf.endpoint.Endpoint;

        r10 := @parameter2: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.cxf.service.model.OperationInfo) $r2;

        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 == 0 goto label2;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 != 1 goto label3;

        $r11 = <org.apache.cxf.common.util.XMLSchemaQNames: javax.xml.namespace.QName XSD_ANY>;

        $r12 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (org.apache.cxf.service.model.MessagePartInfo) $r12;

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getTypeQName()>();

        $z2 = virtualinvoke $r11.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label3;

     label2:
        $r7 = interfaceinvoke r6.<org.apache.cxf.endpoint.Endpoint: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r8 = virtualinvoke $r7.<org.apache.cxf.service.model.EndpointInfo: org.apache.cxf.service.model.BindingInfo getBinding()>();

        $r9 = virtualinvoke $r8.<org.apache.cxf.service.model.BindingInfo: org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)>(r3);

        interfaceinvoke r10.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;", $r9);

        interfaceinvoke r10.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/OperationInfo;", r3);

        $z1 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: boolean isOneWay()>();

        interfaceinvoke r10.<org.apache.cxf.message.Exchange: void setOneWay(boolean)>($z1);

     label3:
        goto label1;

     label4:
        return;
    }

    private org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.staxutils.DepthXMLStreamReader, org.apache.cxf.message.Exchange, org.apache.cxf.service.model.BindingOperationInfo, boolean)
    {
        org.apache.cxf.staxutils.DepthXMLStreamReader r0;
        org.apache.cxf.service.model.BindingOperationInfo r3;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r1;
        javax.xml.namespace.QName $r4;
        org.apache.cxf.message.Exchange r2;
        boolean z0, $z1;

        r1 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r0 := @parameter0: org.apache.cxf.staxutils.DepthXMLStreamReader;

        r2 := @parameter1: org.apache.cxf.message.Exchange;

        r3 := @parameter2: org.apache.cxf.service.model.BindingOperationInfo;

        z0 := @parameter3: boolean;

        if r3 == null goto label1;

        $z1 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: boolean isUnwrapped()>();

        if $z1 == 0 goto label1;

        r3 = virtualinvoke r3.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo getWrappedOperation()>();

     label1:
        if r3 != null goto label4;

        if r0 != null goto label2;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://cxf.apache.org/jaxws/provider", "invoke");

        goto label3;

     label2:
        $r4 = virtualinvoke r0.<org.apache.cxf.staxutils.DepthXMLStreamReader: javax.xml.namespace.QName getName()>();

     label3:
        r3 = virtualinvoke r1.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)>(r2, $r4, z0);

     label4:
        return r3;
    }

    private void validatePart(org.apache.cxf.service.model.MessagePartInfo, javax.xml.namespace.QName, org.apache.cxf.message.Message)
    {
        org.apache.cxf.service.model.AbstractMessageContainer $r1, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        org.apache.cxf.service.model.OperationInfo $r17, $r19;
        java.util.logging.Logger $r8, $r14, $r25;
        javax.xml.namespace.QName r3, $r4, $r5, $r9, $r10, $r11, $r15, $r26;
        java.lang.Object[] $r7, $r13, $r24;
        org.apache.cxf.common.i18n.Message $r23;
        org.apache.cxf.interceptor.Fault $r6, $r12, $r22;
        java.lang.Boolean r21;
        org.apache.cxf.service.model.MessagePartInfo r0;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r27;
        java.lang.Object $r20;

        r27 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        r3 := @parameter1: javax.xml.namespace.QName;

        r2 := @parameter2: org.apache.cxf.message.Message;

        if r0 != null goto label1;

        $r22 = new org.apache.cxf.interceptor.Fault;

        $r23 = new org.apache.cxf.common.i18n.Message;

        $r25 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG>;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r3;

        specialinvoke $r23.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("NO_PART_FOUND", $r25, $r24);

        $r26 = <org.apache.cxf.interceptor.Fault: javax.xml.namespace.QName FAULT_CODE_CLIENT>;

        specialinvoke $r22.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,javax.xml.namespace.QName)>($r23, $r26);

        throw $r22;

     label1:
        z4 = 0;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        if $r1 == null goto label2;

        $r16 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r17 = virtualinvoke $r16.<org.apache.cxf.service.model.AbstractMessageContainer: org.apache.cxf.service.model.OperationInfo getOperation()>();

        if $r17 == null goto label2;

        $r18 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: org.apache.cxf.service.model.AbstractMessageContainer getMessageInfo()>();

        $r19 = virtualinvoke $r18.<org.apache.cxf.service.model.AbstractMessageContainer: org.apache.cxf.service.model.OperationInfo getOperation()>();

        $r20 = virtualinvoke $r19.<org.apache.cxf.service.model.OperationInfo: java.lang.Object getProperty(java.lang.String)>("operation.is.synthetic");

        r21 = (java.lang.Boolean) $r20;

        if r21 == null goto label2;

        z4 = virtualinvoke r21.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        $z5 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)>(r2, "soap.no.validate.parts", 0);

        if $z5 == 0 goto label3;

        z4 = 1;

     label3:
        if z4 == 0 goto label4;

        return;

     label4:
        $z0 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: boolean isElement()>();

        if $z0 == 0 goto label5;

        $r10 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        if $r10 == null goto label6;

        $r11 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z3 = virtualinvoke r3.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r11);

        if $z3 != 0 goto label6;

        if z4 != 0 goto label6;

        $r12 = new org.apache.cxf.interceptor.Fault;

        $r14 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r3;

        $r15 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r13[1] = $r15;

        specialinvoke $r12.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("UNEXPECTED_ELEMENT", $r14, null, $r13);

        throw $r12;

     label5:
        $r4 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke r3.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label6;

        $r5 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z2 = virtualinvoke r3.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label6;

        if z4 != 0 goto label6;

        $r6 = new org.apache.cxf.interceptor.Fault;

        $r8 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r3;

        $r9 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $r7[1] = $r9;

        specialinvoke $r6.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("UNEXPECTED_ELEMENT", $r8, null, $r7);

        throw $r6;

     label6:
        return;
    }

    private void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader, org.apache.cxf.databinding.DataReader, org.apache.cxf.message.MessageContentsList, java.util.Iterator, org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.MessageContentsList r2;
        org.apache.cxf.staxutils.DepthXMLStreamReader r3;
        org.apache.ws.commons.schema.XmlSchemaAnnotated $r8;
        org.apache.cxf.service.model.MessagePartInfo r12;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        org.apache.cxf.databinding.DataReader r6;
        java.util.Iterator r0;
        org.apache.cxf.message.Message r11;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r10;
        java.lang.Object $r1, $r9, r13;
        javax.xml.namespace.QName $r4, $r5, $r7;

        r10 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r3 := @parameter0: org.apache.cxf.staxutils.DepthXMLStreamReader;

        r6 := @parameter1: org.apache.cxf.databinding.DataReader;

        r2 := @parameter2: org.apache.cxf.message.MessageContentsList;

        r0 := @parameter3: java.util.Iterator;

        r11 := @parameter4: org.apache.cxf.message.Message;

        z5 = 1;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.cxf.service.model.MessagePartInfo) $r1;

        if z5 == 0 goto label2;

        z5 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)>(r3);

     label2:
        r13 = null;

        if z5 == 0 goto label8;

        $r4 = virtualinvoke r3.<org.apache.cxf.staxutils.DepthXMLStreamReader: javax.xml.namespace.QName getName()>();

     label3:
        if r12 == null goto label6;

        $r7 = virtualinvoke r12.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z2 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label6;

        $r8 = virtualinvoke r12.<org.apache.cxf.service.model.MessagePartInfo: org.apache.ws.commons.schema.XmlSchemaAnnotated getXmlSchema()>();

        $z3 = $r8 instanceof org.apache.ws.commons.schema.XmlSchemaElement;

        if $z3 == 0 goto label4;

        virtualinvoke r2.<org.apache.cxf.message.MessageContentsList: java.lang.Object put(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>(r12, null);

     label4:
        $z4 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r9 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.cxf.service.model.MessagePartInfo) $r9;

        goto label3;

     label5:
        r12 = null;

        goto label3;

     label6:
        if r12 != null goto label7;

        return;

     label7:
        $r5 = virtualinvoke r12.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

        $z1 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label8;

        r13 = interfaceinvoke r6.<org.apache.cxf.databinding.DataReader: java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>(r12, r3);

     label8:
        virtualinvoke r2.<org.apache.cxf.message.MessageContentsList: java.lang.Object put(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)>(r12, r13);

        goto label1;

     label9:
        return;
    }

    private org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message, org.apache.cxf.service.model.BindingOperationInfo, boolean, org.apache.cxf.service.model.ServiceInfo)
    {
        org.apache.cxf.service.model.MessageInfo $r3, $r5;
        org.apache.cxf.message.Message r1;
        org.apache.cxf.service.model.BindingOperationInfo r2;
        org.apache.cxf.service.model.ServiceInfo r4;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r0;
        boolean z0;

        r0 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.service.model.BindingOperationInfo;

        z0 := @parameter2: boolean;

        r4 := @parameter3: org.apache.cxf.service.model.ServiceInfo;

        $r3 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)>(r1, r2, z0);

        $r5 = virtualinvoke r0.<org.apache.cxf.interceptor.DocLiteralInInterceptor: org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)>(r1, r2, z0, r4, $r3);

        return $r5;
    }

    protected org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange, javax.xml.namespace.QName, boolean)
    {
        org.apache.cxf.service.model.OperationInfo $r3;
        org.apache.cxf.service.model.BindingOperationInfo $r2, r5;
        javax.xml.namespace.QName r1;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r4;
        org.apache.cxf.message.Exchange r0;
        boolean z0;

        r4 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        r1 := @parameter1: javax.xml.namespace.QName;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <org.apache.cxf.service.model.ServiceModelUtil: org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)>(r0, r1, z0);

        r5 = $r2;

        if $r2 != null goto label1;

        r5 = specialinvoke r4.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)>(r0, r1, z0);

     label1:
        if r5 == null goto label2;

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/BindingOperationInfo;", r5);

        $r3 = virtualinvoke r5.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        interfaceinvoke r0.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/service/model/OperationInfo;", $r3);

     label2:
        return r5;
    }

    protected boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo, org.apache.cxf.message.Message)
    {
        org.apache.cxf.service.model.MessageInfo r4;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.interceptor.DocLiteralInInterceptor r9;
        java.util.List $r5;
        java.lang.Object $r2, $r6;
        java.lang.Class $r8;
        java.lang.String $r1, $r3;
        org.apache.cxf.service.model.MessagePartInfo $r7;
        boolean $z0, $z1;

        r9 := @this: org.apache.cxf.interceptor.DocLiteralInInterceptor;

        r4 := @parameter0: org.apache.cxf.service.model.MessageInfo;

        r0 := @parameter1: org.apache.cxf.message.Message;

        $r1 = <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.lang.String KEEP_PARAMETERS_WRAPPER>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label3;

        $r5 = virtualinvoke r4.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.cxf.service.model.MessagePartInfo) $r6;

        $r8 = virtualinvoke $r7.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        if $r8 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r3);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;
        java.util.logging.Logger $r6;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lorg/apache/cxf/interceptor/DocLiteralInInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".DocLiteralInInterceptor.keep-parameters-wrapper");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.lang.String KEEP_PARAMETERS_WRAPPER> = $r5;

        $r6 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/DocLiteralInInterceptor;");

        <org.apache.cxf.interceptor.DocLiteralInInterceptor: java.util.logging.Logger LOG> = $r6;

        return;
    }
}
