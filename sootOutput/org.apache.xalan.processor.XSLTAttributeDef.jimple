public class org.apache.xalan.processor.XSLTAttributeDef extends java.lang.Object
{
    static final int FATAL;
    static final int ERROR;
    static final int WARNING;
    static final int T_CDATA;
    static final int T_URL;
    static final int T_AVT;
    static final int T_PATTERN;
    static final int T_EXPR;
    static final int T_CHAR;
    static final int T_NUMBER;
    static final int T_YESNO;
    static final int T_QNAME;
    static final int T_QNAMES;
    static final int T_ENUM;
    static final int T_SIMPLEPATTERNLIST;
    static final int T_NMTOKEN;
    static final int T_STRINGLIST;
    static final int T_PREFIX_URLLIST;
    static final int T_ENUM_OR_PQNAME;
    static final int T_NCNAME;
    static final int T_AVT_QNAME;
    static final int T_QNAMES_RESOLVE_NULL;
    static final int T_PREFIXLIST;
    static org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr;
    static java.lang.String S_FOREIGNATTR_SETTER;
    private java.lang.String m_namespace;
    private java.lang.String m_name;
    private int m_type;
    private org.apache.xml.utils.StringToIntTable m_enums;
    private java.lang.String m_default;
    private boolean m_required;
    private boolean m_supportsAVT;
    int m_errorType;
    java.lang.String m_setterString;
    static java.lang.Class class$org$apache$xpath$XPath;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$lang$Character;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Long;

    void <init>(java.lang.String, java.lang.String, int, boolean, boolean, int)
    {
        int i0, i1;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2;
        boolean z0, z1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = i0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i1;

        return;
    }

    void <init>(java.lang.String, java.lang.String, int, boolean, int, java.lang.String)
    {
        int i0, i1;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = i0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default> = r3;

        return;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xml.utils.StringToIntTable $r3, $r5, $r7;
        byte $b3;
        int i0, i1, i2;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r4, r6;
        boolean z0, z1, z2;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r6 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z0 == 0 goto label1;

        $b3 = 16;

        goto label2;

     label1:
        $b3 = 11;

     label2:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = $b3;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r3 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r3.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(2);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r3;

        $r5 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r5.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i1);

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r6, i2);

        return;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xml.utils.StringToIntTable $r3, $r5, $r7, $r9;
        byte $b4;
        int i0, i1, i2, i3;
        java.lang.String r1, r2, r4, r6, r8;
        boolean z0, z1, z2;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r6 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        r8 := @parameter10: java.lang.String;

        i3 := @parameter11: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z0 == 0 goto label1;

        $b4 = 16;

        goto label2;

     label1:
        $b4 = 11;

     label2:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = $b4;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r3 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r3.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(3);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r3;

        $r5 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r5.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i1);

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r6, i2);

        $r9 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r9.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r8, i3);

        return;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xml.utils.StringToIntTable $r3, $r5, $r7, $r9, $r11;
        byte $b5;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2, r4, r6, r8, r10;
        boolean z0, z1, z2;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r6 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        r8 := @parameter10: java.lang.String;

        i3 := @parameter11: int;

        r10 := @parameter12: java.lang.String;

        i4 := @parameter13: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z0 == 0 goto label1;

        $b5 = 16;

        goto label2;

     label1:
        $b5 = 11;

     label2:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = $b5;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r3 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r3.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(4);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r3;

        $r5 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r5.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i1);

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r6, i2);

        $r9 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r9.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r8, i3);

        $r11 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r11.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r10, i4);

        return;
    }

    java.lang.String getNamespace()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        return $r1;
    }

    java.lang.String getName()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        return $r1;
    }

    int getType()
    {
        int $i0;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type>;

        return $i0;
    }

    private int getEnum(java.lang.String)
    {
        org.apache.xml.utils.StringToIntTable $r2;
        int $i0;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.StringToIntTable: int get(java.lang.String)>(r1);

        return $i0;
    }

    private java.lang.String[] getEnumNames()
    {
        java.lang.String[] $r2;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xml.utils.StringToIntTable $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.StringToIntTable: java.lang.String[] keys()>();

        return $r2;
    }

    java.lang.String getDefault()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default>;

        return $r1;
    }

    void setDefault(java.lang.String)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default> = r1;

        return;
    }

    boolean getRequired()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required>;

        return $z0;
    }

    boolean getSupportsAVT()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT>;

        return $z0;
    }

    int getErrorType()
    {
        int $i0;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType>;

        return $i0;
    }

    public java.lang.String getSetterMethodName()
    {
        java.lang.StringBuffer $r14;
        int $i2, i3, $i5;
        java.lang.String $r1, $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1;
        char $c0, $c1, c4;
        org.apache.xalan.processor.XSLTAttributeDef r0, $r3;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        if null != $r1 goto label8;

        $r3 = <org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr>;

        if $r3 != r0 goto label1;

        $r12 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.String S_FOREIGNATTR_SETTER>;

        return $r12;

     label1:
        $r4 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = "addLiteralResultAttribute";

        $r11 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        return $r11;

     label2:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");

        $r6 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        if $r6 == null goto label3;

        $r10 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z1 == 0 goto label3;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Xml");

     label3:
        $r13 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        i3 = 0;

        goto label7;

     label4:
        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $c0 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i3);

        c4 = $c0;

        $i5 = (int) $c0;

        if 45 != $i5 goto label5;

        i3 = i3 + 1;

        $r8 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $c1 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i3);

        c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        goto label6;

     label5:
        if 0 != i3 goto label6;

        c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

     label6:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

        i3 = i3 + 1;

     label7:
        if i3 < $i2 goto label4;

        $r9 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = $r9;

     label8:
        $r2 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        return $r2;
    }

    org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r6;
        javax.xml.transform.TransformerException $r7;
        org.apache.xalan.templates.AVT $r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        org.xml.sax.SAXException $r8;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.processor.XSLTAttributeDef r9;

        r9 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r0 = new org.apache.xalan.templates.AVT;

        specialinvoke $r0.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r0;

     label2:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r7;
        javax.xml.transform.TransformerException $r8;
        org.apache.xalan.templates.AVT $r2;
        org.apache.xalan.processor.StylesheetHandler r3;
        org.xml.sax.SAXException $r9;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r4, r5, r6;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r7 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label3;

     label1:
        $r2 = new org.apache.xalan.templates.AVT;

        specialinvoke $r2.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r3, r4, r5, r6, r1, r7);

        return $r2;

     label2:
        $r8 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label3:
        return r1;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r4, $r10;
        javax.xml.transform.TransformerException $r11;
        org.apache.xalan.templates.AVT $r6;
        java.lang.Character $r2;
        org.apache.xalan.processor.StylesheetHandler r3;
        int $i0, $i2;
        java.lang.String r1, r5, r7, r8;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r9;
        char $c1;
        org.xml.sax.SAXException $r12;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r7 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r9 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r6 = new org.apache.xalan.templates.AVT;

        specialinvoke $r6.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r3, r7, r5, r8, r1, r9);

        $z1 = virtualinvoke $r6.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 == 0 goto label2;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 == 1 goto label2;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r5;

        $r10[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_TCHAR", $r10, null);

        return null;

     label2:
        return $r6;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r11);

        throw $r12;

     label4:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 1 goto label5;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_TCHAR", $r4, null);

        return null;

     label5:
        $r2 = new java.lang.Character;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r2.<java.lang.Character: void <init>(char)>($c1);

        return $r2;

        catch javax.xml.transform.TransformerException from label1 to label3 with label3;
    }

    java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r5;
        javax.xml.transform.TransformerException $r12;
        org.apache.xalan.templates.AVT r14, $r15;
        java.lang.Integer $r17;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.lang.StringBuffer $r3;
        int $i0, $i2;
        java.lang.String r1, r6, $r7, r9, r10;
        boolean $z0, $z1, $z2;
        org.apache.xalan.templates.ElemTemplateElement r11;
        org.xml.sax.SAXException $r16;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r9 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r11 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        r14 = null;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r15 = new org.apache.xalan.templates.AVT;

        specialinvoke $r15.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r4, r9, r6, r10, r1, r11);

        r14 = $r15;

        $z2 = virtualinvoke $r15.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 != 0 goto label2;

        return $r15;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r16 = new org.xml.sax.SAXException;

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r12);

        throw $r16;

     label4:
        $i0 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)>(r1);

        $i2 = (int) -10000;

        if $i0 != $i2 goto label5;

        $r3 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r6;

        $r5[1] = r1;

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5[2] = $r7;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r4, "INVALID_ENUM", $r5, null);

        return null;

     label5:
        $z1 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z1 == 0 goto label6;

        return r14;

     label6:
        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>($i0);

        return $r17;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r6, $r16, $r20;
        javax.xml.transform.TransformerException $r22;
        org.apache.xalan.templates.AVT $r25;
        java.lang.Integer $r27;
        org.apache.xalan.processor.StylesheetHandler r3;
        java.lang.StringBuffer $r5, $r15, $r19;
        int $i0, $i2;
        java.lang.String r1, $r4, r7, $r8, r11, r12, $r17, $r21;
        boolean $z0, $z1;
        org.apache.xml.utils.QName $r28;
        org.apache.xalan.templates.ElemTemplateElement r13;
        java.lang.RuntimeException $r14;
        java.lang.IllegalArgumentException $r18;
        java.io.Serializable r24;
        org.xml.sax.SAXException $r26;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r11 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r13 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        r24 = null;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label05;

     label01:
        $r25 = new org.apache.xalan.templates.AVT;

        specialinvoke $r25.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r3, r11, r7, r12, r1, r13);

        $z1 = virtualinvoke $r25.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 != 0 goto label02;

        return $r25;

     label02:
        r24 = $r25;

     label03:
        goto label05;

     label04:
        $r22 := @caughtexception;

        $r26 = new org.xml.sax.SAXException;

        specialinvoke $r26.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r22);

        throw $r26;

     label05:
        $i0 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)>(r1);

        $i2 = (int) -10000;

        if $i0 == $i2 goto label06;

        if r24 != null goto label11;

        $r27 = new java.lang.Integer;

        specialinvoke $r27.<java.lang.Integer: void <init>(int)>($i0);

        r24 = $r27;

        goto label11;

     label06:
        $r28 = new org.apache.xml.utils.QName;

        specialinvoke $r28.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)>(r1, r3, 1);

        if r24 != null goto label07;

        r24 = $r28;

     label07:
        $r4 = virtualinvoke $r28.<org.apache.xml.utils.QName: java.lang.String getPrefix()>();

        if $r4 != null goto label08;

        $r5 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        $r6 = newarray (java.lang.Object)[3];

        $r6[0] = r7;

        $r6[1] = r1;

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6[2] = $r8;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_ENUM", $r6, null);

        return null;

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

        $r19 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        $r20 = newarray (java.lang.Object)[3];

        $r20[0] = r7;

        $r20[1] = r1;

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20[2] = $r21;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_ENUM", $r20, $r18);

        return null;

     label10:
        $r14 := @caughtexception;

        $r15 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = r7;

        $r16[1] = r1;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16[2] = $r17;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_ENUM", $r16, $r14);

        return null;

     label11:
        return r24;

        catch javax.xml.transform.TransformerException from label01 to label03 with label04;
        catch java.lang.IllegalArgumentException from label06 to label08 with label09;
        catch java.lang.RuntimeException from label06 to label08 with label10;
    }

    java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r2;
        org.apache.xpath.XPath $r3;
        javax.xml.transform.TransformerException $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.SAXException $r5, $r6;
        java.lang.String r1, r8, r9, r10;
        org.apache.xalan.processor.XSLTAttributeDef r7;

        r7 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r0 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2);

        return $r3;

     label2:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r6;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r3, $r9;
        javax.xml.transform.TransformerException $r10;
        org.apache.xalan.templates.AVT $r5;
        org.apache.xalan.processor.StylesheetHandler r2;
        java.lang.String r1, r4, r6, r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.ElemTemplateElement r8;
        org.xml.sax.SAXException $r11;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r2 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r8 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = new org.apache.xalan.templates.AVT;

        specialinvoke $r5.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r2, r6, r4, r7, r1, r8);

        $z2 = virtualinvoke $r5.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNmtoken(java.lang.String)>(r1);

        if $z3 != 0 goto label2;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r4;

        $r9[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_NMTOKEN", $r9, null);

        return null;

     label2:
        return $r5;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label4:
        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNmtoken(java.lang.String)>(r1);

        if $z1 != 0 goto label5;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r4;

        $r3[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_NMTOKEN", $r3, null);

        return null;

     label5:
        return r1;

        catch javax.xml.transform.TransformerException from label1 to label3 with label3;
    }

    java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r2;
        org.apache.xpath.XPath $r3;
        javax.xml.transform.TransformerException $r4;
        org.apache.xalan.processor.StylesheetHandler r0;
        org.xml.sax.SAXException $r5;
        java.lang.String r1, r7, r8, r9;
        org.apache.xalan.processor.XSLTAttributeDef r6;

        r6 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r0 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2);

        return $r3;

     label2:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r10, $r12;
        javax.xml.transform.TransformerException $r13;
        java.lang.Double $r2;
        org.apache.xalan.templates.AVT $r3;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.lang.String r1, r5, r6, r7;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r8;
        java.lang.NumberFormatException $r9, $r11;
        org.xml.sax.SAXException $r14;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r8 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label6;

     label1:
        $r3 = new org.apache.xalan.templates.AVT;

        specialinvoke $r3.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r4, r5, r6, r7, r1, r8);

        $z1 = virtualinvoke $r3.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 == 0 goto label2;

        staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r1);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        $r14 = new org.xml.sax.SAXException;

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r13);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r6;

        $r12[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r4, "INVALID_NUMBER", $r12, $r11);

        return null;

     label5:
        return $r3;

     label6:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r1);

        return $r2;

     label7:
        $r9 := @caughtexception;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r6;

        $r10[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r4, "INVALID_NUMBER", $r10, $r9);

        return null;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label4;
        catch java.lang.NumberFormatException from label6 to label7 with label7;
    }

    java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.QName $r0;
        java.lang.Object[] $r5, $r8;
        org.apache.xalan.templates.ElemTemplateElement r11;
        java.lang.RuntimeException $r3;
        java.lang.IllegalArgumentException $r7;
        org.apache.xalan.processor.StylesheetHandler r2;
        java.lang.String r1, r6, r9, r10;
        org.apache.xalan.processor.XSLTAttributeDef r4;

        r4 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r2 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r9 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r11 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r0 = new org.apache.xml.utils.QName;

        specialinvoke $r0.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)>(r1, r2, 1);

        return $r0;

     label2:
        $r7 := @caughtexception;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r6;

        $r8[1] = r1;

        specialinvoke r4.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_QNAME", $r8, $r7);

        return null;

     label3:
        $r3 := @caughtexception;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r6;

        $r5[1] = r1;

        specialinvoke r4.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_QNAME", $r5, $r3);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label2;
        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r9, $r13;
        javax.xml.transform.TransformerException $r10;
        org.apache.xalan.templates.AVT $r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        int $i0, $i1, $i2;
        java.lang.String r2, r3, r4, r5, $r8, $r12;
        boolean $z0, $z1, $z2;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.xml.sax.SAXException $r11;
        org.apache.xalan.processor.XSLTAttributeDef r7;

        r7 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r0 = new org.apache.xalan.templates.AVT;

        specialinvoke $r0.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        $z0 = virtualinvoke $r0.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);

        if $i0 < 0 goto label2;

        $r8 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $z2 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>($r8);

        if $z2 != 0 goto label2;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r3;

        $r9[1] = r5;

        specialinvoke r7.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r9, null);

        return null;

     label2:
        if $i0 >= 0 goto label3;

        $r12 = r5;

        goto label4;

     label3:
        $i1 = $i0 + 1;

        $r12 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);

     label4:
        if $r12 == null goto label5;

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 == 0 goto label5;

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>($r12);

        if $z1 != 0 goto label6;

     label5:
        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r3;

        $r13[1] = r5;

        specialinvoke r7.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r13, null);

        return null;

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label8:
        return $r0;

        catch javax.xml.transform.TransformerException from label1 to label6 with label7;
    }

    java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r3, $r9;
        javax.xml.transform.TransformerException $r10;
        org.apache.xalan.templates.AVT $r5;
        org.apache.xalan.processor.StylesheetHandler r2;
        java.lang.String r1, r4, r6, r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xalan.templates.ElemTemplateElement r8;
        org.xml.sax.SAXException $r11;
        org.apache.xalan.processor.XSLTAttributeDef r0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r2 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r8 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = new org.apache.xalan.templates.AVT;

        specialinvoke $r5.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r2, r6, r4, r7, r1, r8);

        $z2 = virtualinvoke $r5.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 == 0 goto label2;

        $z3 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r1);

        if $z3 != 0 goto label2;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r4;

        $r9[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_NCNAME", $r9, null);

        return null;

     label2:
        return $r5;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label4:
        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r1);

        if $z1 != 0 goto label5;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r4;

        $r3[1] = r1;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, "INVALID_NCNAME", $r3, null);

        return null;

     label5:
        return r1;

        catch javax.xml.transform.TransformerException from label1 to label3 with label3;
    }

    java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.QName $r3;
        java.util.Vector $r2;
        org.apache.xalan.processor.StylesheetHandler r5;
        java.util.StringTokenizer $r0;
        int $i0, i1;
        java.lang.String r1, $r4, r7, r8, r9;
        org.apache.xalan.processor.XSLTAttributeDef r6;

        r6 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r5 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>(int)>($i0);

        i1 = 0;

        goto label2;

     label1:
        $r3 = new org.apache.xml.utils.QName;

        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke $r3.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>($r4, r5);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        return $r2;
    }

    final java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.util.Vector $r13;
        org.apache.xalan.processor.StylesheetHandler r3;
        java.util.StringTokenizer $r12;
        int $i0, $i1, i2, $i4;
        java.lang.String r1, $r4, $r5, r9, r10, r11;
        org.apache.xml.utils.QName $r14, $r15;
        org.apache.xalan.processor.XSLTAttributeDef r8;

        r8 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r12 = new java.util.StringTokenizer;

        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r12.<java.util.StringTokenizer: int countTokens()>();

        $r13 = new java.util.Vector;

        specialinvoke $r13.<java.util.Vector: void <init>(int)>($i0);

        $r4 = virtualinvoke r3.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>("");

        i2 = 0;

        goto label4;

     label1:
        $r5 = virtualinvoke $r12.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(58);

        $i4 = (int) -1;

        if $i1 != $i4 goto label2;

        $r14 = new org.apache.xml.utils.QName;

        specialinvoke $r14.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        virtualinvoke $r13.<java.util.Vector: void addElement(java.lang.Object)>($r14);

        goto label3;

     label2:
        $r15 = new org.apache.xml.utils.QName;

        specialinvoke $r15.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>($r5, r3);

        virtualinvoke $r13.<java.util.Vector: void addElement(java.lang.Object)>($r15);

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        return $r13;
    }

    java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r5;
        org.apache.xpath.XPath $r6;
        javax.xml.transform.TransformerException $r7;
        java.util.Vector $r2;
        org.apache.xalan.processor.StylesheetHandler r3;
        java.util.StringTokenizer $r0;
        org.xml.sax.SAXException $r8;
        int $i0, i1;
        java.lang.String r1, $r4, r10, r11, r12;
        org.apache.xalan.processor.XSLTAttributeDef r9;

        r9 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r5 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>(int)>($i0);

        i1 = 0;

        goto label3;

     label2:
        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = virtualinvoke r3.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>($r4, r5);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label2;

        return $r2;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

        catch javax.xml.transform.TransformerException from label1 to label4 with label4;
    }

    org.apache.xml.utils.StringVector processSTRINGLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.StylesheetHandler r5;
        java.util.StringTokenizer $r0;
        int $i0, i1;
        java.lang.String r1, $r3, r6, r7, r8;
        org.apache.xalan.processor.XSLTAttributeDef r4;
        org.apache.xml.utils.StringVector $r2;

        r4 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r5 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        $r2 = new org.apache.xml.utils.StringVector;

        specialinvoke $r2.<org.apache.xml.utils.StringVector: void <init>(int)>($i0);

        i1 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r2.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>($r3);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        return $r2;
    }

    org.apache.xml.utils.StringVector processPREFIX_URLLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r7;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.util.StringTokenizer $r0;
        org.xml.sax.SAXException $r6;
        int $i0, i1;
        java.lang.String r1, $r3, $r5, $r8, r10, r11, r12;
        org.apache.xalan.processor.XSLTAttributeDef r9;
        org.apache.xml.utils.StringVector $r2;

        r9 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        $r2 = new org.apache.xml.utils.StringVector;

        specialinvoke $r2.<org.apache.xml.utils.StringVector: void <init>(int)>($i0);

        i1 = 0;

        goto label4;

     label1:
        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>($r3);

        if $r5 == null goto label2;

        virtualinvoke $r2.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>($r5);

        goto label3;

     label2:
        $r6 = new org.xml.sax.SAXException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", $r7);

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        i1 = i1 + 1;

     label4:
        if i1 < $i0 goto label1;

        return $r2;
    }

    org.apache.xml.utils.StringVector processPREFIX_LIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r7;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.util.StringTokenizer $r0;
        int $i0, i1;
        java.lang.String r1, $r3, $r5, $r8, r10, r11, r12;
        org.apache.xml.utils.StringVector $r2;
        boolean $z0;
        org.xml.sax.SAXException $r6;
        org.apache.xalan.processor.XSLTAttributeDef r9;

        r9 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r10 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " \t\n\r\f");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        $r2 = new org.apache.xml.utils.StringVector;

        specialinvoke $r2.<org.apache.xml.utils.StringVector: void <init>(int)>($i0);

        i1 = 0;

        goto label5;

     label1:
        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>($r3);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("#default");

        if $z0 != 0 goto label2;

        if $r5 == null goto label3;

     label2:
        virtualinvoke $r2.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>($r3);

        goto label4;

     label3:
        $r6 = new org.xml.sax.SAXException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r3;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", $r7);

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < $i0 goto label1;

        return $r2;
    }

    java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r7;
        javax.xml.transform.TransformerException $r8;
        org.apache.xalan.templates.AVT $r2;
        org.apache.xalan.processor.StylesheetHandler r3;
        org.xml.sax.SAXException $r9;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r4, r5, r6;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r7 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label3;

     label1:
        $r2 = new org.apache.xalan.templates.AVT;

        specialinvoke $r2.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r3, r4, r5, r6, r1, r7);

        return $r2;

     label2:
        $r8 := @caughtexception;

        $r9 = new org.xml.sax.SAXException;

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r8);

        throw $r9;

     label3:
        return r1;

        catch javax.xml.transform.TransformerException from label1 to label2 with label2;
    }

    private java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r4;
        org.apache.xalan.processor.StylesheetHandler r3;
        java.lang.Boolean $r1;
        java.lang.String r0, r5, r6, r7;
        org.apache.xalan.processor.XSLTAttributeDef r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r3 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r0 := @parameter4: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("no");

        if $z2 != 0 goto label1;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r0;

        specialinvoke r2.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r3, "INVALID_BOOLEAN", $r4, null);

        return null;

     label1:
        $r1 = new java.lang.Boolean;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>($z3);

        return $r1;
    }

    java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.processor.StylesheetHandler r1;
        int $i0;
        java.lang.Object r7;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r2, r3, r4, r5;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getType()>();

        r7 = null;

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label13;
            case 3: goto label01;
            case 4: goto label07;
            case 5: goto label05;
            case 6: goto label03;
            case 7: goto label08;
            case 8: goto label14;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label04;
            case 12: goto label12;
            case 13: goto label06;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label11;
            case 20: goto label20;
            default: goto label21;
        };

     label01:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label02:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label03:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label04:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label05:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label06:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label07:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label08:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label09:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label10:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label11:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label12:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label13:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label14:
        r7 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label15:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processSTRINGLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label16:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processPREFIX_URLLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label17:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label18:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label19:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        goto label21;

     label20:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processPREFIX_LIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        goto label21;

     label21:
        return r7;
    }

    void setDefAttrValue(org.apache.xalan.processor.StylesheetHandler, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.StylesheetHandler r1;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r6 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getNamespace()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getDefault()>();

        virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, $r2, $r3, $r4, $r5, r6);

        return;
    }

    private java.lang.Class getPrimativeClass(java.lang.Object)
    {
        boolean $z0;
        java.lang.Object r0;
        java.lang.Class $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        org.apache.xalan.processor.XSLTAttributeDef r18;

        r18 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.xpath.XPath;

        if $z0 == 0 goto label03;

        $r17 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$org$apache$xpath$XPath>;

        if $r17 != null goto label01;

        $r19 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("org.apache.xpath.XPath");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$org$apache$xpath$XPath> = $r19;

        goto label02;

     label01:
        $r19 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$org$apache$xpath$XPath>;

     label02:
        return $r19;

     label03:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r20 = $r1;

        $r2 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Double>;

        if $r2 != null goto label04;

        $r21 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Double> = $r21;

        goto label05;

     label04:
        $r21 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Double>;

     label05:
        if $r1 != $r21 goto label06;

        r20 = <java.lang.Double: java.lang.Class TYPE>;

     label06:
        $r16 = r20;

        $r3 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Float>;

        if $r3 != null goto label07;

        $r22 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Float> = $r22;

        goto label08;

     label07:
        $r22 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Float>;

     label08:
        if $r16 != $r22 goto label09;

        r20 = <java.lang.Float: java.lang.Class TYPE>;

        goto label27;

     label09:
        $r15 = r20;

        $r4 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label10;

        $r23 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Boolean> = $r23;

        goto label11;

     label10:
        $r23 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Boolean>;

     label11:
        if $r15 != $r23 goto label12;

        r20 = <java.lang.Boolean: java.lang.Class TYPE>;

        goto label27;

     label12:
        $r14 = r20;

        $r5 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Byte>;

        if $r5 != null goto label13;

        $r24 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Byte> = $r24;

        goto label14;

     label13:
        $r24 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Byte>;

     label14:
        if $r14 != $r24 goto label15;

        r20 = <java.lang.Byte: java.lang.Class TYPE>;

        goto label27;

     label15:
        $r13 = r20;

        $r6 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Character>;

        if $r6 != null goto label16;

        $r25 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Character");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Character> = $r25;

        goto label17;

     label16:
        $r25 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Character>;

     label17:
        if $r13 != $r25 goto label18;

        r20 = <java.lang.Character: java.lang.Class TYPE>;

        goto label27;

     label18:
        $r12 = r20;

        $r7 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Short>;

        if $r7 != null goto label19;

        $r26 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Short> = $r26;

        goto label20;

     label19:
        $r26 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Short>;

     label20:
        if $r12 != $r26 goto label21;

        r20 = <java.lang.Short: java.lang.Class TYPE>;

        goto label27;

     label21:
        $r11 = r20;

        $r8 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Integer>;

        if $r8 != null goto label22;

        $r27 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Integer> = $r27;

        goto label23;

     label22:
        $r27 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Integer>;

     label23:
        if $r11 != $r27 goto label24;

        r20 = <java.lang.Integer: java.lang.Class TYPE>;

        goto label27;

     label24:
        $r10 = r20;

        $r9 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Long>;

        if $r9 != null goto label25;

        $r28 = staticinvoke <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Long> = $r28;

        goto label26;

     label25:
        $r28 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class class$java$lang$Long>;

     label26:
        if $r10 != $r28 goto label27;

        r20 = <java.lang.Long: java.lang.Class TYPE>;

     label27:
        return r20;
    }

    private java.lang.StringBuffer getListOfEnums()
    {
        java.lang.StringBuffer $r0;
        int i0, $i1;
        java.lang.String[] $r2;
        org.apache.xalan.processor.XSLTAttributeDef r1;
        java.lang.String $r3;

        r1 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String[] getEnumNames()>();

        i0 = 0;

        goto label3;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $r3 = $r2[i0];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        i0 = i0 + 1;

     label3:
        $i1 = lengthof $r2;

        if i0 < $i1 goto label1;

        return $r0;
    }

    boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        java.lang.NoSuchMethodException $r22, $r25;
        java.lang.reflect.Method r29;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalAccessException $r20;
        org.apache.xalan.templates.ElemTemplateElement r7;
        java.lang.reflect.InvocationTargetException $r17;
        java.lang.Object[] $r12, $r16, $r18, $r21, $r24, r30;
        org.apache.xalan.processor.StylesheetHandler r4;
        java.lang.String r0, $r2, $r3, r5, r6, $r19, $r23, r28;
        java.lang.Class[] $r9, $r14;
        java.lang.Object $r8;
        java.lang.Class $r10, $r11, $r13, $r15, $r26, $r27;
        org.apache.xalan.processor.XSLTAttributeDef r1;

        r1 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r4 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r28 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r0 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z1 == 0 goto label02;

     label01:
        return 1;

     label02:
        $r2 = virtualinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getSetterMethodName()>();

        if null == $r2 goto label16;

     label03:
        $r3 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.String S_FOREIGNATTR_SETTER>;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label05;

        if r28 != null goto label04;

        r28 = "";

     label04:
        $r13 = virtualinvoke r28.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = newarray (java.lang.Class)[4];

        $r14[0] = $r13;

        $r14[1] = $r13;

        $r14[2] = $r13;

        $r14[3] = $r13;

        $r15 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        r29 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r14);

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = r28;

        $r16[1] = r5;

        $r16[2] = r0;

        $r16[3] = r6;

        r30 = $r16;

        goto label11;

     label05:
        $r8 = virtualinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r4, r28, r5, r0, r6, r7);

        if null != $r8 goto label06;

        return 0;

     label06:
        $r9 = newarray (java.lang.Class)[1];

        $r10 = specialinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class getPrimativeClass(java.lang.Object)>($r8);

        $r9[0] = $r10;

     label07:
        $r11 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        r29 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r9);

     label08:
        goto label10;

     label09:
        $r25 := @caughtexception;

        $r26 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r9[0] = $r26;

        $r27 = virtualinvoke r7.<java.lang.Object: java.lang.Class getClass()>();

        r29 = virtualinvoke $r27.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r9);

     label10:
        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r8;

        r30 = $r12;

     label11:
        virtualinvoke r29.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r7, r30);

     label12:
        goto label16;

     label13:
        $r22 := @caughtexception;

        $r23 = <org.apache.xalan.processor.XSLTAttributeDef: java.lang.String S_FOREIGNATTR_SETTER>;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z3 != 0 goto label16;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = $r2;

        virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CALLING_METHOD", $r24, $r22);

        return 0;

     label14:
        $r20 := @caughtexception;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r2;

        virtualinvoke r4.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CALLING_METHOD", $r21, $r20);

        return 0;

     label15:
        $r17 := @caughtexception;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = "name";

        $r19 = virtualinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $r18[1] = $r19;

        specialinvoke r1.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r4, "WG_ILLEGAL_ATTRIBUTE_VALUE", $r18, $r17);

        return 0;

     label16:
        return 1;

        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
        catch java.lang.NoSuchMethodException from label03 to label12 with label13;
        catch java.lang.IllegalAccessException from label03 to label12 with label14;
        catch java.lang.reflect.InvocationTargetException from label03 to label12 with label15;
    }

    private void handleError(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.Object[], java.lang.Exception) throws org.xml.sax.SAXException
    {
        java.lang.Object[] r3;
        org.apache.xalan.processor.StylesheetHandler r1;
        int $i0;
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r2;
        java.lang.Exception r4;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.Exception;

        $i0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getErrorType()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, r3, r4);

        goto label3;

     label2:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>(r2, r3);

     label3:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        org.apache.xalan.processor.XSLTAttributeDef $r0;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PREFIXLIST> = 20;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAMES_RESOLVE_NULL> = 19;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_AVT_QNAME> = 18;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NCNAME> = 17;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_ENUM_OR_PQNAME> = 16;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PREFIX_URLLIST> = 15;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_STRINGLIST> = 14;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NMTOKEN> = 13;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_SIMPLEPATTERNLIST> = 12;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_ENUM> = 11;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAMES> = 10;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAME> = 9;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_YESNO> = 8;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NUMBER> = 7;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_CHAR> = 6;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_EXPR> = 5;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PATTERN> = 4;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_AVT> = 3;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_URL> = 2;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_CDATA> = 1;

        <org.apache.xalan.processor.XSLTAttributeDef: int WARNING> = 2;

        <org.apache.xalan.processor.XSLTAttributeDef: int ERROR> = 1;

        <org.apache.xalan.processor.XSLTAttributeDef: int FATAL> = 0;

        $r0 = new org.apache.xalan.processor.XSLTAttributeDef;

        specialinvoke $r0.<org.apache.xalan.processor.XSLTAttributeDef: void <init>(java.lang.String,java.lang.String,int,boolean,boolean,int)>("*", "*", 1, 0, 0, 2);

        <org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr> = $r0;

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.String S_FOREIGNATTR_SETTER> = "setForeignAttr";

        return;
    }
}
