public class com.sun.syndication.io.impl.NumberParser extends java.lang.Object
{

    private void <init>()
    {
        com.sun.syndication.io.impl.NumberParser r0;

        r0 := @this: com.sun.syndication.io.impl.NumberParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Long parseLong(java.lang.String)
    {
        java.lang.Long $r2;
        long $l0;
        java.lang.String r0, $r1;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label4;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Integer parseInt(java.lang.String)
    {
        int $i0;
        java.lang.String r0, $r1;
        java.lang.Integer $r2;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label4;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Float parseFloat(java.lang.String)
    {
        java.lang.Float $r2;
        float $f0;
        java.lang.String r0, $r1;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.String;

        if null == r0 goto label4;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static float parseFloat(java.lang.String, float)
    {
        java.lang.Float $r1;
        float f0, $f1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r1 = staticinvoke <com.sun.syndication.io.impl.NumberParser: java.lang.Float parseFloat(java.lang.String)>(r0);

        if $r1 != null goto label1;

        $f1 = f0;

        goto label2;

     label1:
        $f1 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

     label2:
        return $f1;
    }

    public static long parseLong(java.lang.String, long)
    {
        java.lang.Long $r1;
        long l0, $l1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <com.sun.syndication.io.impl.NumberParser: java.lang.Long parseLong(java.lang.String)>(r0);

        if null != $r1 goto label1;

        $l1 = l0;

        goto label2;

     label1:
        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

     label2:
        return $l1;
    }
}
