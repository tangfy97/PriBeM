public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField extends java.lang.Object implements org.apache.commons.compress.archivers.zip.ZipExtraField
{
    private long nameCRC32;
    private byte[] unicodeName;
    private byte[] data;

    protected void <init>()
    {
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, byte[], int, int)
    {
        byte[] r2, $r4;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        long $l2;
        java.lang.RuntimeException $r6;
        int i0, i1;
        java.util.zip.CRC32 $r1;
        java.lang.String r3;
        java.io.UnsupportedEncodingException $r5;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.zip.CRC32;

        specialinvoke $r1.<java.util.zip.CRC32: void <init>()>();

        virtualinvoke $r1.<java.util.zip.CRC32: void update(byte[],int,int)>(r2, i0, i1);

        $l2 = virtualinvoke $r1.<java.util.zip.CRC32: long getValue()>();

        r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: long nameCRC32> = $l2;

     label1:
        $r4 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("FATAL: UTF-8 encoding not supported.", $r5);

        throw $r6;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    protected void <init>(java.lang.String, byte[])
    {
        byte[] r2;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $i0 = lengthof r2;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: void <init>(java.lang.String,byte[],int,int)>(r1, r2, 0, $i0);

        return;
    }

    private void assembleData()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        long $l2;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i0 = lengthof $r2;

        $i1 = 5 + $i0;

        $r3 = newarray (byte)[$i1];

        r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data> = $r3;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        $r4[0] = 1;

        $l2 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: long nameCRC32>;

        $r5 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipLong: byte[] getBytes(long)>($l2);

        $r6 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r6, 1, 4);

        $r9 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $r8 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        $r7 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r8, 5, $i3);

        return;
    }

    public long getNameCRC32()
    {
        long $l0;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $l0 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: long nameCRC32>;

        return $l0;
    }

    public void setNameCRC32(long)
    {
        long l0;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: long nameCRC32> = l0;

        r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data> = null;

        return;
    }

    public byte[] getUnicodeName()
    {
        byte[] $r1, $r2, $r3, r4;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r4 = null;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i0 = lengthof $r2;

        r4 = newarray (byte)[$i0];

        $r3 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i1 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r4, 0, $i1);

     label1:
        return r4;
    }

    public void setUnicodeName(byte[])
    {
        byte[] r0, $r2, $r3;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r1;
        int $i0, $i1;

        r1 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        $r2 = newarray (byte)[$i0];

        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName> = $r2;

        $r3 = r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r3, 0, $i1);

        goto label2;

     label1:
        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName> = null;

     label2:
        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data> = null;

        return;
    }

    public byte[] getCentralDirectoryData()
    {
        byte[] $r1, $r2, $r3, $r4, r5;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: void assembleData()>();

     label1:
        r5 = null;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        $i0 = lengthof $r3;

        r5 = newarray (byte)[$i0];

        $r4 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        $i1 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, 0, $i1);

     label2:
        return r5;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()
    {
        byte[] $r1, $r3, $r4;
        org.apache.commons.compress.archivers.zip.ZipShort $r2;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        int $i0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: void assembleData()>();

     label1:
        $r2 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data>;

        $i0 = lengthof $r4;

        goto label3;

     label2:
        $i0 = 0;

     label3:
        specialinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

        return $r2;
    }

    public byte[] getLocalFileDataData()
    {
        byte[] $r1;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] getCentralDirectoryData()>();

        return $r1;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r1;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()>();

        return $r1;
    }

    public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException
    {
        byte[] r0, $r2, $r3;
        long $l4;
        byte b2;
        int i0, i1, $i3, $i5, $i6, $i7, $i8;
        java.lang.String $r9;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r1;
        java.util.zip.ZipException $r11, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r12;

        r1 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= 5 goto label1;

        $r11 = new java.util.zip.ZipException;

        specialinvoke $r11.<java.util.zip.ZipException: void <init>(java.lang.String)>("UniCode path extra data must have at least 5 bytes.");

        throw $r11;

     label1:
        b2 = r0[i1];

        if b2 == 1 goto label2;

        $r13 = new java.util.zip.ZipException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported version [");

        $i8 = (int) b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] for UniCode path extra data.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.util.zip.ZipException: void <init>(java.lang.String)>($r9);

        throw $r13;

     label2:
        $i3 = i1 + 1;

        $l4 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipLong: long getValue(byte[],int)>(r0, $i3);

        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: long nameCRC32> = $l4;

        $i5 = i0 - 5;

        $r2 = newarray (byte)[$i5];

        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName> = $r2;

        $i7 = i1 + 5;

        $r3 = r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] unicodeName>;

        $i6 = i0 - 5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i7, $r3, 0, $i6);

        r1.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: byte[] data> = null;

        return;
    }

    public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField r0;
        int i0, i1;

        r0 := @this: org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField: void parseFromLocalFileData(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
