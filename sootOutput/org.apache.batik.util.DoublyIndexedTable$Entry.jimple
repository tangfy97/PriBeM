public class org.apache.batik.util.DoublyIndexedTable$Entry extends java.lang.Object
{
    protected int hash;
    protected java.lang.Object key1;
    protected java.lang.Object key2;
    protected java.lang.Object value;
    protected org.apache.batik.util.DoublyIndexedTable$Entry next;

    public void <init>(int, java.lang.Object, java.lang.Object, java.lang.Object, org.apache.batik.util.DoublyIndexedTable$Entry)
    {
        int i0;
        java.lang.Object r1, r2, r3;
        org.apache.batik.util.DoublyIndexedTable$Entry r0, r4;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$Entry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: org.apache.batik.util.DoublyIndexedTable$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.DoublyIndexedTable$Entry: int hash> = i0;

        r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key1> = r1;

        r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key2> = r2;

        r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object value> = r3;

        r0.<org.apache.batik.util.DoublyIndexedTable$Entry: org.apache.batik.util.DoublyIndexedTable$Entry next> = r4;

        return;
    }

    public java.lang.Object getKey1()
    {
        java.lang.Object $r1;
        org.apache.batik.util.DoublyIndexedTable$Entry r0;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$Entry;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key1>;

        return $r1;
    }

    public java.lang.Object getKey2()
    {
        java.lang.Object $r1;
        org.apache.batik.util.DoublyIndexedTable$Entry r0;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$Entry;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key2>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.apache.batik.util.DoublyIndexedTable$Entry r0;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$Entry;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object value>;

        return $r1;
    }

    protected boolean match(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, r2, $r3, r4, $r5, $r6;
        org.apache.batik.util.DoublyIndexedTable$Entry r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$Entry;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key1>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key1>;

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        return 0;

     label1:
        if r2 == null goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key2>;

        if $r3 == null goto label3;

        $r5 = r0.<org.apache.batik.util.DoublyIndexedTable$Entry: java.lang.Object key2>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        return $z0;

     label3:
        if r4 != null goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }
}
