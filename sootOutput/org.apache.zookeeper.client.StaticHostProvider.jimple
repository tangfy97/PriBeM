public final class org.apache.zookeeper.client.StaticHostProvider extends java.lang.Object implements org.apache.zookeeper.client.HostProvider
{
    private static final org.slf4j.Logger LOG;
    private final java.util.List serverAddresses;
    private int lastIndex;
    private int currentIndex;

    public void <init>(java.util.Collection) throws java.net.UnknownHostException
    {
        org.apache.zookeeper.client.StaticHostProvider r0;
        java.net.InetAddress[] $r10;
        java.util.ArrayList $r15;
        java.net.InetAddress r11;
        int i0, $i1, i2, $i4, $i6;
        java.lang.String $r9, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Collection r2;
        java.lang.IllegalArgumentException $r17;
        java.net.InetSocketAddress r8, $r16;
        java.util.List $r4, $r5, $r13;
        java.lang.Object $r7;

        r0 := @this: org.apache.zookeeper.client.StaticHostProvider;

        r2 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>(5);

        r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses> = $r15;

        $i4 = (int) -1;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int lastIndex> = $i4;

        $i6 = (int) -1;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex> = $i6;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.net.InetSocketAddress) $r7;

        $r9 = virtualinvoke r8.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r9);

        i0 = lengthof $r10;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        r11 = $r10[i2];

        $r13 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        $r16 = new java.net.InetSocketAddress;

        $r14 = virtualinvoke r11.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i1 = virtualinvoke r8.<java.net.InetSocketAddress: int getPort()>();

        specialinvoke $r16.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r14, $i1);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r16);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $r4 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A HostProvider may not be empty!");

        throw $r17;

     label5:
        $r5 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r5);

        return;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        org.apache.zookeeper.client.StaticHostProvider r0;

        r0 := @this: org.apache.zookeeper.client.StaticHostProvider;

        $r1 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.net.InetSocketAddress next(long)
    {
        org.apache.zookeeper.client.StaticHostProvider r0;
        long l7;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i12;
        org.slf4j.Logger $r3;
        java.net.InetSocketAddress $r6;
        java.util.List $r1, $r4;
        java.lang.InterruptedException $r2;
        java.lang.Object $r5;

        r0 := @this: org.apache.zookeeper.client.StaticHostProvider;

        l7 := @parameter0: long;

        $i0 = r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex> = $i1;

        $i2 = r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex>;

        $r1 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i2 != $i3 goto label1;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex> = 0;

     label1:
        $i5 = r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex>;

        $i4 = r0.<org.apache.zookeeper.client.StaticHostProvider: int lastIndex>;

        if $i5 != $i4 goto label5;

        $b8 = l7 cmp 0L;

        $i10 = (int) $b8;

        if $i10 <= 0 goto label5;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(l7);

     label3:
        goto label6;

     label4:
        $r2 := @caughtexception;

        $r3 = <org.apache.zookeeper.client.StaticHostProvider: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r2);

        goto label6;

     label5:
        $i6 = r0.<org.apache.zookeeper.client.StaticHostProvider: int lastIndex>;

        $i12 = (int) -1;

        if $i6 != $i12 goto label6;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int lastIndex> = 0;

     label6:
        $r4 = r0.<org.apache.zookeeper.client.StaticHostProvider: java.util.List serverAddresses>;

        $i9 = r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i9);

        $r6 = (java.net.InetSocketAddress) $r5;

        return $r6;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void onConnected()
    {
        int $i0;
        org.apache.zookeeper.client.StaticHostProvider r0;

        r0 := @this: org.apache.zookeeper.client.StaticHostProvider;

        $i0 = r0.<org.apache.zookeeper.client.StaticHostProvider: int currentIndex>;

        r0.<org.apache.zookeeper.client.StaticHostProvider: int lastIndex> = $i0;

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/client/StaticHostProvider;");

        <org.apache.zookeeper.client.StaticHostProvider: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
