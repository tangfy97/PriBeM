public class org.springframework.util.CustomizableThreadCreator extends java.lang.Object implements java.io.Serializable
{
    private java.lang.String threadNamePrefix;
    private int threadPriority;
    private boolean daemon;
    private java.lang.ThreadGroup threadGroup;
    private int threadCount;
    private final java.lang.Object threadCountMonitor;

    public void <init>()
    {
        org.springframework.util.CustomizableThreadCreator$SerializableMonitor $r1;
        java.lang.String $r2;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.CustomizableThreadCreator: int threadPriority> = 5;

        r0.<org.springframework.util.CustomizableThreadCreator: boolean daemon> = 0;

        r0.<org.springframework.util.CustomizableThreadCreator: int threadCount> = 0;

        $r1 = new org.springframework.util.CustomizableThreadCreator$SerializableMonitor;

        specialinvoke $r1.<org.springframework.util.CustomizableThreadCreator$SerializableMonitor: void <init>(org.springframework.util.CustomizableThreadCreator$SerializableMonitor)>(null);

        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.Object threadCountMonitor> = $r1;

        $r2 = virtualinvoke r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String getDefaultThreadNamePrefix()>();

        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String threadNamePrefix> = $r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.util.CustomizableThreadCreator$SerializableMonitor $r1;
        java.lang.String r2, $r3;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.CustomizableThreadCreator: int threadPriority> = 5;

        r0.<org.springframework.util.CustomizableThreadCreator: boolean daemon> = 0;

        r0.<org.springframework.util.CustomizableThreadCreator: int threadCount> = 0;

        $r1 = new org.springframework.util.CustomizableThreadCreator$SerializableMonitor;

        specialinvoke $r1.<org.springframework.util.CustomizableThreadCreator$SerializableMonitor: void <init>(org.springframework.util.CustomizableThreadCreator$SerializableMonitor)>(null);

        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.Object threadCountMonitor> = $r1;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String getDefaultThreadNamePrefix()>();

     label2:
        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String threadNamePrefix> = $r3;

        return;
    }

    public void setThreadNamePrefix(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String getDefaultThreadNamePrefix()>();

     label2:
        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String threadNamePrefix> = $r2;

        return;
    }

    public java.lang.String getThreadNamePrefix()
    {
        java.lang.String $r1;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        $r1 = r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String threadNamePrefix>;

        return $r1;
    }

    public void setThreadPriority(int)
    {
        int i0;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        i0 := @parameter0: int;

        r0.<org.springframework.util.CustomizableThreadCreator: int threadPriority> = i0;

        return;
    }

    public int getThreadPriority()
    {
        int $i0;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        $i0 = r0.<org.springframework.util.CustomizableThreadCreator: int threadPriority>;

        return $i0;
    }

    public void setDaemon(boolean)
    {
        org.springframework.util.CustomizableThreadCreator r0;
        boolean z0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        z0 := @parameter0: boolean;

        r0.<org.springframework.util.CustomizableThreadCreator: boolean daemon> = z0;

        return;
    }

    public boolean isDaemon()
    {
        org.springframework.util.CustomizableThreadCreator r0;
        boolean $z0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        $z0 = r0.<org.springframework.util.CustomizableThreadCreator: boolean daemon>;

        return $z0;
    }

    public void setThreadGroupName(java.lang.String)
    {
        java.lang.ThreadGroup $r1;
        java.lang.String r2;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.lang.ThreadGroup;

        specialinvoke $r1.<java.lang.ThreadGroup: void <init>(java.lang.String)>(r2);

        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.ThreadGroup threadGroup> = $r1;

        return;
    }

    public void setThreadGroup(java.lang.ThreadGroup)
    {
        java.lang.ThreadGroup r1;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        r1 := @parameter0: java.lang.ThreadGroup;

        r0.<org.springframework.util.CustomizableThreadCreator: java.lang.ThreadGroup threadGroup> = r1;

        return;
    }

    public java.lang.ThreadGroup getThreadGroup()
    {
        java.lang.ThreadGroup $r1;
        org.springframework.util.CustomizableThreadCreator r0;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        $r1 = r0.<org.springframework.util.CustomizableThreadCreator: java.lang.ThreadGroup threadGroup>;

        return $r1;
    }

    public java.lang.Thread createThread(java.lang.Runnable)
    {
        java.lang.Thread $r0;
        int $i0;
        java.lang.ThreadGroup $r2;
        java.lang.String $r4;
        java.lang.Runnable r3;
        org.springframework.util.CustomizableThreadCreator r1;
        boolean $z0;

        r1 := @this: org.springframework.util.CustomizableThreadCreator;

        r3 := @parameter0: java.lang.Runnable;

        $r0 = new java.lang.Thread;

        $r2 = virtualinvoke r1.<org.springframework.util.CustomizableThreadCreator: java.lang.ThreadGroup getThreadGroup()>();

        $r4 = virtualinvoke r1.<org.springframework.util.CustomizableThreadCreator: java.lang.String nextThreadName()>();

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>($r2, r3, $r4);

        $i0 = virtualinvoke r1.<org.springframework.util.CustomizableThreadCreator: int getThreadPriority()>();

        virtualinvoke $r0.<java.lang.Thread: void setPriority(int)>($i0);

        $z0 = virtualinvoke r1.<org.springframework.util.CustomizableThreadCreator: boolean isDaemon()>();

        virtualinvoke $r0.<java.lang.Thread: void setDaemon(boolean)>($z0);

        return $r0;
    }

    protected java.lang.String nextThreadName()
    {
        java.lang.Throwable $r7;
        org.springframework.util.CustomizableThreadCreator r0;
        int $i0, $i1, i2;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r5;
        java.lang.String $r3, $r4, $r6;

        r0 := @this: org.springframework.util.CustomizableThreadCreator;

        $r1 = r0.<org.springframework.util.CustomizableThreadCreator: java.lang.Object threadCountMonitor>;

        entermonitor $r1;

     label1:
        $i0 = r0.<org.springframework.util.CustomizableThreadCreator: int threadCount>;

        $i1 = $i0 + 1;

        r0.<org.springframework.util.CustomizableThreadCreator: int threadCount> = $i1;

        i2 = r0.<org.springframework.util.CustomizableThreadCreator: int threadCount>;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r7;

     label5:
        $r2 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r0.<org.springframework.util.CustomizableThreadCreator: java.lang.String getThreadNamePrefix()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected java.lang.String getDefaultThreadNamePrefix()
    {
        java.lang.StringBuilder $r0, $r5;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r6;
        org.springframework.util.CustomizableThreadCreator r1;

        r1 := @this: org.springframework.util.CustomizableThreadCreator;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)>($r2);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
