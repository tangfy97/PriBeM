public class org.apache.xalan.templates.ElemPI extends org.apache.xalan.templates.ElemTemplateElement
{
    private org.apache.xalan.templates.AVT m_name_atv;

    public void <init>()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv> = null;

        return;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv> = r1;

        return;
    }

    public org.apache.xalan.templates.AVT getName()
    {
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        $r1 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        return $r1;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.AVT $r4, $r5;
        org.apache.xalan.templates.ElemPI r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector $r3;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r2, $r6;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        if null == $r4 goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r5.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>($r3, $i0);

     label1:
        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        return 58;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemPI r0;

        r0 := @this: org.apache.xalan.templates.ElemPI;

        return "processing-instruction";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.lang.Object[] $r11, $r13;
        javax.xml.transform.TransformerException $r16;
        org.apache.xalan.templates.AVT $r3, $r4, $r6;
        org.apache.xalan.templates.ElemPI r2;
        org.apache.xalan.transformer.MsgMgr $r10, $r12;
        org.apache.xml.serializer.SerializationHandler $r8;
        org.apache.xalan.trace.TraceManager $r9, $r14;
        org.apache.xpath.XPathContext $r1;
        int $i0;
        java.lang.String r5, $r7, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.xml.sax.SAXException $r15;
        org.apache.xalan.transformer.TransformerImpl r0;

        r2 := @this: org.apache.xalan.templates.ElemPI;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label01;

        $r14 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r14.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = r2.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        if $r3 != null goto label02;

        $r17 = null;

        goto label03;

     label02:
        $r4 = r2.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $r17 = virtualinvoke $r4.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r1, $i0, r2);

     label03:
        r5 = $r17;

        if $r17 != null goto label04;

        return;

     label04:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("xml");

        if $z1 == 0 goto label05;

        $r12 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "name";

        $r13[1] = $r17;

        virtualinvoke $r12.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r2, "WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML", $r13);

        return;

     label05:
        $r6 = r2.<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT m_name_atv>;

        $z2 = virtualinvoke $r6.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 != 0 goto label06;

        $z4 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>($r17);

        if $z4 != 0 goto label06;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = "name";

        $r11[1] = $r17;

        virtualinvoke $r10.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r2, "WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME", $r11);

        return;

     label06:
        $r7 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label07:
        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r8.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>(r5, $r7);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label10:
        $z3 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z3 == 0 goto label11;

        $r9 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r9.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label11:
        return;

        catch org.xml.sax.SAXException from label07 to label08 with label09;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        java.lang.Object[] $r3;
        org.apache.xalan.templates.ElemTemplateElement r0, $r2;
        int $i0;
        org.apache.xalan.templates.ElemPI r1;
        java.lang.String $r4, $r5;

        r1 := @this: org.apache.xalan.templates.ElemPI;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        lookupswitch($i0)
        {
            case 9: goto label1;
            case 17: goto label1;
            case 28: goto label1;
            case 30: goto label1;
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label1;
            case 42: goto label1;
            case 50: goto label1;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 78: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r3[0] = $r4;

        $r5 = virtualinvoke r1.<org.apache.xalan.templates.ElemPI: java.lang.String getNodeName()>();

        $r3[1] = $r5;

        virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r3);

     label3:
        $r2 = specialinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        return $r2;
    }
}
