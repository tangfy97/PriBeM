public class org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xmlbeans.SchemaTypeSystem compile(org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters)
    {
        org.apache.xmlbeans.BindingConfig $r4;
        org.apache.xmlbeans.SchemaTypeLoader $r5;
        java.util.Collection $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r11;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters r0;
        java.io.File $r10;
        org.apache.xmlbeans.SchemaTypeSystem $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] $r3;
        org.apache.xmlbeans.XmlOptions $r6;
        java.util.Map $r9;
        java.lang.String $r2;
        java.net.URI $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: org.apache.xmlbeans.SchemaTypeSystem getExistingTypeSystem()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] getSchemas()>();

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: org.apache.xmlbeans.BindingConfig getConfig()>();

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: org.apache.xmlbeans.SchemaTypeLoader getLinkTo()>();

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: org.apache.xmlbeans.XmlOptions getOptions()>();

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: java.util.Collection getErrorListener()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: boolean isJavaize()>();

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: java.net.URI getBaseURI()>();

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: java.util.Map getSourcesToCopyMap()>();

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler$Parameters: java.io.File getSchemasDir()>();

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl compileImpl(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[],org.apache.xmlbeans.BindingConfig,org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions,java.util.Collection,boolean,java.net.URI,java.util.Map,java.io.File)>($r1, $r2, $r3, $r4, $r5, $r6, $r7, $z0, $r8, $r9, $r10);

        return $r11;
    }

    public static org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl compile(java.lang.String, org.apache.xmlbeans.SchemaTypeSystem, org.apache.xmlbeans.XmlObject[], org.apache.xmlbeans.BindingConfig, org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.Filer, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r16;
        org.apache.xmlbeans.impl.common.XmlErrorWatcher $r4;
        java.lang.Thread $r25;
        java.net.URI $r15;
        org.apache.xmlbeans.SchemaType $r32;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r37, $r40;
        java.util.Collection $r19;
        org.apache.xmlbeans.XmlObject[] r2;
        org.apache.xmlbeans.SchemaTypeSystem r5;
        org.apache.xmlbeans.XmlError $r18;
        org.apache.xmlbeans.Filer r12;
        java.lang.Object[] $r8;
        java.util.ArrayList $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] $r7, $r9, $r13;
        java.lang.StringBuffer $r23, $r24, $r27, $r28, $r29, $r30, $r33;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument $r36, $r39;
        java.lang.String r6, $r26, $r34;
        org.apache.xmlbeans.XmlObject $r20, $r21, $r31, $r35, $r38, $r41;
        org.apache.xmlbeans.BindingConfig r10;
        org.apache.xmlbeans.SchemaTypeLoader r11;
        org.apache.xmlbeans.XmlException $r17, $r22;
        org.apache.xmlbeans.XmlOptions $r0, r42;
        java.lang.Object $r3, $r14;

        r6 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.xmlbeans.SchemaTypeSystem;

        r2 := @parameter2: org.apache.xmlbeans.XmlObject[];

        r10 := @parameter3: org.apache.xmlbeans.BindingConfig;

        r11 := @parameter4: org.apache.xmlbeans.SchemaTypeLoader;

        r12 := @parameter5: org.apache.xmlbeans.Filer;

        r42 := @parameter6: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r42);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if r2 == null goto label5;

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label5;

        $r20 = r2[i2];

        $z2 = $r20 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema;

        if $z2 == 0 goto label2;

        $r41 = r2[i2];

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        goto label4;

     label2:
        $r21 = r2[i2];

        $z3 = $r21 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        if $z3 == 0 goto label3;

        $r35 = r2[i2];

        $r36 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r35;

        $r37 = interfaceinvoke $r36.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        if $r37 == null goto label3;

        $r38 = r2[i2];

        $r39 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r38;

        $r40 = interfaceinvoke $r39.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r40);

        goto label4;

     label3:
        $r22 = new org.apache.xmlbeans.XmlException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Thread ");

        $r25 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r26 = virtualinvoke $r25.<java.lang.Thread: java.lang.String getName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": The ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("th supplied input is not a schema document: its type is ");

        $r31 = r2[i2];

        $r32 = interfaceinvoke $r31.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String)>($r34);

        throw $r22;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("ERROR_LISTENER");

        $r19 = (java.util.Collection) $r3;

        $r4 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        specialinvoke $r4.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: void <init>(java.util.Collection)>($r19);

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r7 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)[$i0];

        $r8 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r8;

        $r13 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r9;

        if r12 == null goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        $r14 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("BASE_URI");

        $r15 = (java.net.URI) $r14;

        $r16 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl compileImpl(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[],org.apache.xmlbeans.BindingConfig,org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions,java.util.Collection,boolean,java.net.URI,java.util.Map,java.io.File)>(r5, r6, $r13, r10, r11, $r0, $r4, $z4, $r15, null, null);

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean hasError()>();

        if $z0 == 0 goto label8;

        if $r16 != null goto label8;

        $r17 = new org.apache.xmlbeans.XmlException;

        $r18 = virtualinvoke $r4.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: org.apache.xmlbeans.XmlError firstError()>();

        specialinvoke $r17.<org.apache.xmlbeans.XmlException: void <init>(org.apache.xmlbeans.XmlError)>($r18);

        throw $r17;

     label8:
        if $r16 == null goto label9;

        $z1 = virtualinvoke $r16.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean isIncomplete()>();

        if $z1 != 0 goto label9;

        if r12 == null goto label9;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void save(org.apache.xmlbeans.Filer)>(r12);

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: boolean generateTypes(org.apache.xmlbeans.SchemaTypeSystem,org.apache.xmlbeans.Filer,org.apache.xmlbeans.XmlOptions)>($r16, r12, $r0);

     label9:
        return $r16;
    }

    static org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl compileImpl(org.apache.xmlbeans.SchemaTypeSystem, java.lang.String, org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[], org.apache.xmlbeans.BindingConfig, org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.XmlOptions, java.util.Collection, boolean, java.net.URI, java.util.Map, java.io.File)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r21, $r24, $r25, $r27, $r30, $r31;
        org.apache.xmlbeans.impl.common.XmlErrorWatcher $r0;
        org.apache.xmlbeans.impl.schema.StscState $r3, $r20, $r23, $r26;
        java.util.Map r22, $r28;
        java.net.URI r8;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r18;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r35, $r36;
        java.util.Collection r1;
        java.util.List $r14;
        org.apache.xmlbeans.SchemaTypeSystem r2, $r10;
        java.lang.Throwable $r38;
        java.lang.Object[] $r16;
        java.util.ArrayList $r12;
        java.util.HashSet $r29;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] r13, $r15, $r17, $r34, r40;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String r6;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[] $r19;
        org.apache.xmlbeans.BindingConfig r5;
        org.apache.xmlbeans.SchemaTypeLoader $r11, r39;
        java.lang.IllegalArgumentException $r37;
        java.io.File r7;
        org.apache.xmlbeans.SchemaTypeLoader[] $r9;
        org.apache.xmlbeans.XmlOptions r4, $r32, $r33;

        r2 := @parameter0: org.apache.xmlbeans.SchemaTypeSystem;

        r6 := @parameter1: java.lang.String;

        r13 := @parameter2: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[];

        r5 := @parameter3: org.apache.xmlbeans.BindingConfig;

        r39 := @parameter4: org.apache.xmlbeans.SchemaTypeLoader;

        r4 := @parameter5: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter6: java.util.Collection;

        z2 := @parameter7: boolean;

        r8 := @parameter8: java.net.URI;

        r22 := @parameter9: java.util.Map;

        r7 := @parameter10: java.io.File;

        if r39 != null goto label01;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply linkTo");

        throw $r37;

     label01:
        $r0 = new org.apache.xmlbeans.impl.common.XmlErrorWatcher;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: void <init>(java.util.Collection)>(r1);

        if r2 == null goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z0 = $z8;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState start()>();

        if r4 == null goto label04;

        $z7 = virtualinvoke r4.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_NO_VALIDATION");

        if $z7 != 0 goto label05;

     label04:
        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        z1 = $z9;

     label07:
        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setErrorListener(java.util.Collection)>($r0);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setBindingConfig(org.apache.xmlbeans.BindingConfig)>(r5);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setOptions(org.apache.xmlbeans.XmlOptions)>(r4);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setGivenTypeSystemName(java.lang.String)>(r6);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setSchemasDir(java.io.File)>(r7);

        if r8 == null goto label08;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setBaseUri(java.net.URI)>(r8);

     label08:
        $r9 = newarray (org.apache.xmlbeans.SchemaTypeLoader)[2];

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.SchemaTypeSystem get()>();

        $r9[0] = $r10;

        $r9[1] = r39;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderImpl: org.apache.xmlbeans.SchemaTypeLoader build(org.apache.xmlbeans.SchemaTypeLoader[],org.apache.xmlbeans.ResourceLoader,java.lang.ClassLoader)>($r9, null, null);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setImportingTypeLoader(org.apache.xmlbeans.SchemaTypeLoader)>($r11);

        $r12 = new java.util.ArrayList;

        $i0 = lengthof r13;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i0);

        if z1 == 0 goto label13;

        $r32 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r32.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r33 = virtualinvoke $r32.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r0);

        $z5 = virtualinvoke r4.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("VALIDATE_TREAT_LAX_AS_SKIP");

        if $z5 == 0 goto label09;

        virtualinvoke $r33.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setValidateTreatLaxAsSkip()>();

     label09:
        i4 = 0;

     label10:
        $i5 = lengthof r13;

        if i4 >= $i5 goto label12;

        $r35 = r13[i4];

        $z6 = interfaceinvoke $r35.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: boolean validate(org.apache.xmlbeans.XmlOptions)>($r33);

        if $z6 == 0 goto label11;

        $r36 = r13[i4];

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r36);

     label11:
        i4 = i4 + 1;

        goto label10;

     label12:
        goto label14;

     label13:
        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r13);

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r14);

     label14:
        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r15 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)[$i1];

        $r16 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r17 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r16;

        $r34 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r17;

        r40 = $r34;

        if z0 == 0 goto label15;

        $r29 = new java.util.HashSet;

        specialinvoke $r29.<java.util.HashSet: void <init>()>();

        $r30 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) r2;

        r40 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeSystemCompiler: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] getSchemasToRecompile(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[],java.util.Set)>($r30, $r34, $r29);

        $r31 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) r2;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void initFromTypeSystem(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl,java.util.Set)>($r31, $r29);

        goto label16;

     label15:
        $r18 = new org.apache.xmlbeans.impl.schema.SchemaDependencies;

        specialinvoke $r18.<org.apache.xmlbeans.impl.schema.SchemaDependencies: void <init>()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void setDependencies(org.apache.xmlbeans.impl.schema.SchemaDependencies)>($r18);

     label16:
        $r19 = staticinvoke <org.apache.xmlbeans.impl.schema.StscImporter: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[] resolveImportsAndIncludes(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[],boolean)>(r40, z0);

        staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: void addAllDefinitions(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[])>($r19);

        staticinvoke <org.apache.xmlbeans.impl.schema.StscResolver: void resolveAll()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscChecker: void checkAll()>();

        staticinvoke <org.apache.xmlbeans.impl.schema.StscJavaizer: void javaizeAllTypes(boolean)>(z2);

        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r21 = virtualinvoke $r20.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl sts()>();

        virtualinvoke $r21.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void loadFromStscState(org.apache.xmlbeans.impl.schema.StscState)>($r3);

        if r22 == null goto label17;

        $r28 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map sourceCopyMap()>();

        interfaceinvoke r22.<java.util.Map: void putAll(java.util.Map)>($r28);

     label17:
        $z3 = virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: boolean hasError()>();

        if $z3 == 0 goto label19;

        $z4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: boolean allowPartial()>();

        if $z4 == 0 goto label18;

        $i2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: int getRecovered()>();

        $i3 = virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XmlErrorWatcher: int size()>();

        if $i2 != $i3 goto label18;

        $r26 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r27 = virtualinvoke $r26.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl sts()>();

        virtualinvoke $r27.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void setIncomplete(boolean)>(1);

        goto label19;

     label18:
        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void end()>();

        return null;

     label19:
        if r2 == null goto label20;

        $r25 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) r2;

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void setIncomplete(boolean)>(1);

     label20:
        $r23 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r24 = virtualinvoke $r23.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl sts()>();

     label21:
        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void end()>();

        return $r24;

     label22:
        $r38 := @caughtexception;

     label23:
        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void end()>();

        throw $r38;

        catch java.lang.Throwable from label07 to label18 with label22;
        catch java.lang.Throwable from label19 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private static org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] getSchemasToRecompile(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[], java.util.Set)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r4;
        org.apache.xmlbeans.impl.schema.StscState $r10, $r20, $r24, $r26, $r40, $r44, $r48;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r5, $r11;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema r19, $r32, $r33, $r36, $r37;
        java.util.Collection $r25;
        java.util.Set r7, $r8;
        java.util.List $r6, $r9;
        org.apache.xmlbeans.XmlDocumentProperties $r34;
        java.lang.Object[] $r13, $r41, $r45, $r49;
        java.util.HashMap $r1;
        java.util.ArrayList $r2;
        java.util.HashSet $r0;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[] r3, $r12, $r14, $r15;
        java.lang.StringBuffer $r27, $r28, $r29;
        int $i0, $i1, $i2, i3, i4;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument r31;
        java.lang.String r17, $r30, $r35, $r42, $r46, $r50;
        org.apache.xmlbeans.XmlObject $r22;
        java.net.MalformedURLException $r47;
        org.apache.xmlbeans.SchemaTypeLoader $r21;
        java.io.IOException $r43;
        java.lang.IllegalArgumentException $r38;
        org.apache.xmlbeans.XmlException $r39;
        org.apache.xmlbeans.XmlOptions $r23;
        java.lang.Object $r16, $r18;

        r4 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r3 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[];

        r7 := @parameter2: java.util.Set;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label01:
        $i0 = lengthof r3;

        if i3 >= $i0 goto label03;

        $r33 = r3[i3];

        $r34 = interfaceinvoke $r33.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r35 = virtualinvoke $r34.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        if $r35 != null goto label02;

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("One of the Schema files passed in doesn\'t have the source set, which prevents it to be incrementally compiled");

        throw $r38;

     label02:
        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r35);

        $r36 = r3[i3];

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, $r36);

        $r37 = r3[i3];

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r37);

        i3 = i3 + 1;

        goto label01;

     label03:
        $r5 = virtualinvoke r4.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaDependencies getDependencies()>();

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.List getNamespacesTouched(java.util.Set)>($r0);

        $r8 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.Set computeTransitiveClosure(java.util.List)>($r6);

        interfaceinvoke r7.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

        $r9 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaDependencies: java.util.List getFilesTouched(java.util.Set)>(r7);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r11 = new org.apache.xmlbeans.impl.schema.SchemaDependencies;

        specialinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaDependencies: void <init>(org.apache.xmlbeans.impl.schema.SchemaDependencies,java.util.Set)>($r5, r7);

        virtualinvoke $r10.<org.apache.xmlbeans.impl.schema.StscState: void setDependencies(org.apache.xmlbeans.impl.schema.SchemaDependencies)>($r11);

        i4 = 0;

     label04:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i4 >= $i1 goto label14;

        $r16 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i4);

        r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r19 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema) $r18;

        if r19 != null goto label13;

     label05:
        $r20 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r21 = virtualinvoke $r20.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader getS4SLoader()>();

        $r22 = staticinvoke <org.apache.xmlbeans.impl.schema.StscImporter$DownloadTable: org.apache.xmlbeans.XmlObject downloadDocument(org.apache.xmlbeans.SchemaTypeLoader,java.lang.String,java.lang.String)>($r21, null, r17);

        $r23 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r23.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        $r24 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r25 = virtualinvoke $r24.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection getErrorListener()>();

        virtualinvoke $r23.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)>($r25);

        $z0 = $r22 instanceof org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument;

        if $z0 == 0 goto label06;

        $z1 = interfaceinvoke $r22.<org.apache.xmlbeans.XmlObject: boolean validate(org.apache.xmlbeans.XmlOptions)>($r23);

        if $z1 != 0 goto label08;

     label06:
        $r26 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Referenced document is not a valid schema, URL = ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,int,org.apache.xmlbeans.XmlObject)>($r30, 56, null);

     label07:
        goto label13;

     label08:
        r31 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument) $r22;

        $r32 = interfaceinvoke r31.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r32);

     label09:
        goto label13;

     label10:
        $r47 := @caughtexception;

        $r48 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r49 = newarray (java.lang.Object)[3];

        $r49[0] = "MalformedURLException";

        $r49[1] = r17;

        $r50 = virtualinvoke $r47.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r49[2] = $r50;

        virtualinvoke $r48.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("exception.loading.url", $r49, null);

        goto label13;

     label11:
        $r43 := @caughtexception;

        $r44 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r45 = newarray (java.lang.Object)[3];

        $r45[0] = "IOException";

        $r45[1] = r17;

        $r46 = virtualinvoke $r43.<java.io.IOException: java.lang.String getMessage()>();

        $r45[2] = $r46;

        virtualinvoke $r44.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("exception.loading.url", $r45, null);

        goto label13;

     label12:
        $r39 := @caughtexception;

        $r40 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r41 = newarray (java.lang.Object)[3];

        $r41[0] = "XmlException";

        $r41[1] = r17;

        $r42 = virtualinvoke $r39.<org.apache.xmlbeans.XmlException: java.lang.String getMessage()>();

        $r41[2] = $r42;

        virtualinvoke $r40.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("exception.loading.url", $r41, null);

        goto label13;

     label13:
        i4 = i4 + 1;

        goto label04;

     label14:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r12 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)[$i2];

        $r13 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r13;

        $r15 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema[]) $r14;

        return $r15;

        catch java.net.MalformedURLException from label05 to label07 with label10;
        catch java.net.MalformedURLException from label08 to label09 with label10;
        catch java.io.IOException from label05 to label07 with label11;
        catch java.io.IOException from label08 to label09 with label11;
        catch org.apache.xmlbeans.XmlException from label05 to label07 with label12;
        catch org.apache.xmlbeans.XmlException from label08 to label09 with label12;
    }

    public static boolean generateTypes(org.apache.xmlbeans.SchemaTypeSystem, org.apache.xmlbeans.Filer, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.SchemaType[] $r2, $r4, $r6;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r16;
        org.apache.xmlbeans.SchemaType r10;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.List $r3, $r5, $r7;
        org.apache.xmlbeans.SchemaTypeSystem r0;
        java.io.Writer $r14, r37, $r39;
        org.apache.xmlbeans.Filer r13;
        java.lang.Throwable $r18, $r28;
        java.util.ArrayList $r1;
        java.lang.StringBuffer $r21, $r23, $r24, $r31, $r33, $r34;
        java.lang.String $r11, $r12, $r25, $r35, $r38;
        java.io.PrintStream $r22, $r32;
        java.util.Iterator $r8;
        java.io.IOException $r17, $r19, $r20, $r26, $r27, $r29, $r30, $r36;
        org.apache.xmlbeans.XmlOptions r15;
        java.lang.Object $r9;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeSystem;

        r13 := @parameter1: org.apache.xmlbeans.Filer;

        r15 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $z0 = r0 instanceof org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        if $z0 == 0 goto label01;

        $r16 = (org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl) r0;

        $z2 = virtualinvoke $r16.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: boolean isIncomplete()>();

        if $z2 == 0 goto label01;

        return 0;

     label01:
        z3 = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType[] globalTypes()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType[] documentTypes()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType[] attributeTypes()>();

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r6);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label32;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.xmlbeans.SchemaType) $r9;

        $z1 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: boolean isBuiltinType()>();

        if $z1 == 0 goto label03;

        goto label02;

     label03:
        $r11 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r11 != null goto label04;

        goto label02;

     label04:
        $r12 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        r37 = null;

     label05:
        $r14 = interfaceinvoke r13.<org.apache.xmlbeans.Filer: java.io.Writer createSourceFile(java.lang.String)>($r12);

        r37 = $r14;

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printType(java.io.Writer,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r14, r10, r15);

     label06:
        if $r14 == null goto label07;

        virtualinvoke $r14.<java.io.Writer: void close()>();

     label07:
        goto label18;

     label08:
        $r36 := @caughtexception;

        goto label18;

     label09:
        $r30 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IO Error ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r35);

        z3 = 0;

     label10:
        if r37 == null goto label11;

        virtualinvoke r37.<java.io.Writer: void close()>();

     label11:
        goto label18;

     label12:
        $r29 := @caughtexception;

        goto label18;

     label13:
        $r28 := @caughtexception;

     label14:
        if r37 == null goto label15;

        virtualinvoke r37.<java.io.Writer: void close()>();

     label15:
        goto label17;

     label16:
        $r27 := @caughtexception;

     label17:
        throw $r28;

     label18:
        $r38 = interfaceinvoke r10.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaImplName()>();

        $r39 = interfaceinvoke r13.<org.apache.xmlbeans.Filer: java.io.Writer createSourceFile(java.lang.String)>($r38);

        r37 = $r39;

        staticinvoke <org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: void printTypeImpl(java.io.Writer,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r39, r10, r15);

     label19:
        if $r39 == null goto label20;

        virtualinvoke $r39.<java.io.Writer: void close()>();

     label20:
        goto label31;

     label21:
        $r26 := @caughtexception;

        goto label31;

     label22:
        $r20 := @caughtexception;

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IO Error ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r25);

        z3 = 0;

     label23:
        if r37 == null goto label24;

        virtualinvoke r37.<java.io.Writer: void close()>();

     label24:
        goto label31;

     label25:
        $r19 := @caughtexception;

        goto label31;

     label26:
        $r18 := @caughtexception;

     label27:
        if r37 == null goto label28;

        virtualinvoke r37.<java.io.Writer: void close()>();

     label28:
        goto label30;

     label29:
        $r17 := @caughtexception;

     label30:
        throw $r18;

     label31:
        goto label02;

     label32:
        return z3;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label18 to label19 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label26 to label27 with label26;
    }
}
