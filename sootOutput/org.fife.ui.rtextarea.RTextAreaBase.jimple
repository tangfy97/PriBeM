abstract class org.fife.ui.rtextarea.RTextAreaBase extends javax.swing.JTextArea
{
    public static final java.lang.String BACKGROUND_IMAGE_PROPERTY;
    public static final java.lang.String CURRENT_LINE_HIGHLIGHT_COLOR_PROPERTY;
    public static final java.lang.String CURRENT_LINE_HIGHLIGHT_FADE_PROPERTY;
    public static final java.lang.String HIGHLIGHT_CURRENT_LINE_PROPERTY;
    public static final java.lang.String ROUNDED_SELECTION_PROPERTY;
    private boolean tabsEmulatedWithSpaces;
    private boolean highlightCurrentLine;
    private java.awt.Color currentLineColor;
    private boolean marginLineEnabled;
    private java.awt.Color marginLineColor;
    private int marginLineX;
    private int marginSizeInChars;
    private boolean fadeCurrentLineHighlight;
    private boolean roundedSelectionEdges;
    private int previousCaretY;
    int currentCaretY;
    private org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter;
    private org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener;
    private static final java.awt.Color DEFAULT_CARET_COLOR;
    private static final java.awt.Color DEFAULT_CURRENT_LINE_HIGHLIGHT_COLOR;
    private static final java.awt.Color DEFAULT_MARGIN_LINE_COLOR;
    private static final int DEFAULT_TAB_SIZE;
    private static final int DEFAULT_MARGIN_LINE_POSITION;

    public void <init>()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        specialinvoke r0.<javax.swing.JTextArea: void <init>()>();

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    public void <init>(javax.swing.text.AbstractDocument)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        javax.swing.text.AbstractDocument r1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: javax.swing.text.AbstractDocument;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(javax.swing.text.Document)>(r1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(int,int)>(i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    public void <init>(javax.swing.text.AbstractDocument, java.lang.String, int, int)
    {
        javax.swing.text.AbstractDocument r1;
        int i0, i1;
        java.lang.String r2;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: javax.swing.text.AbstractDocument;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<javax.swing.JTextArea: void <init>(javax.swing.text.Document,java.lang.String,int,int)>(r1, r2, i0, i1);

        specialinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void init()>();

        return;
    }

    protected void addCurrentLineHighlightListeners()
    {
        java.awt.event.MouseListener[] $r2;
        int $i0, i1, i2, $i3;
        java.awt.event.MouseListener $r5;
        boolean z0, z1, z2;
        org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener $r3, $r4, $r6, $r7;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        java.awt.event.MouseMotionListener $r8;
        java.awt.event.MouseMotionListener[] $r1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 = 1;

        z2 = 1;

        z1 = 1;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.event.MouseMotionListener[] getMouseMotionListeners()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r8 = $r1[i1];

        $r7 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        if $r8 != $r7 goto label2;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z1 != 1 goto label4;

        $r6 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r6);

     label4:
        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.event.MouseListener[] getMouseListeners()>();

        i2 = 0;

     label5:
        $i3 = lengthof $r2;

        if i2 >= $i3 goto label7;

        $r5 = $r2[i2];

        $r4 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        if $r5 != $r4 goto label6;

        z0 = 0;

        z2 = 0;

        goto label7;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        if z2 != 1 goto label8;

        $r3 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void addMouseListener(java.awt.event.MouseListener)>($r3);

     label8:
        return;
    }

    public void convertSpacesToTabs()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        java.lang.StringBuffer $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r1, $r2, r7;
        javax.swing.text.Document $r3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretPosition()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getTabSize()>();

        r7 = "";

        i4 = 0;

     label1:
        if i4 >= $i1 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        i4 = i4 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.String getText()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r7, "\t");

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setText(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: javax.swing.text.Document getDocument()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Document: int getLength()>();

        if $i0 >= $i2 goto label3;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setCaretPosition(int)>($i0);

        goto label4;

     label3:
        $i3 = $i2 - 1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setCaretPosition(int)>($i3);

     label4:
        return;
    }

    public void convertTabsToSpaces()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, i2;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretPosition()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getTabSize()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.String getText()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\t", $r3);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setText(java.lang.String)>($r4);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setCaretPosition(int)>($i0);

        return;
    }

    protected abstract org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener createMouseListener();

    protected abstract org.fife.ui.rtextarea.RTextAreaUI createRTextAreaUI();

    protected void forceCurrentLineHighlightRepaint()
    {
        int $i1;
        org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $i1 = (int) -1;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY> = $i1;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void fireCaretUpdate(javax.swing.event.CaretEvent)>($r1);

     label1:
        return;
    }

    public final java.awt.Color getBackground()
    {
        java.awt.Color $r2;
        java.lang.Object $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.Object getBackgroundObject()>();

        $z0 = $r1 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Color) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final java.awt.Image getBackgroundImage()
    {
        java.awt.Image $r2;
        java.lang.Object $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.Object getBackgroundObject()>();

        $z0 = $r1 instanceof java.awt.Image;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Image) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final java.lang.Object getBackgroundObject()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        org.fife.ui.rtextarea.BackgroundPainterStrategy $r1, $r2, $r3, $r5;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy $r4;
        java.lang.Object $r7;
        org.fife.ui.rtextarea.ImageBackgroundPainterStrategy $r6;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $z0 = $r2 instanceof org.fife.ui.rtextarea.ImageBackgroundPainterStrategy;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $r6 = (org.fife.ui.rtextarea.ImageBackgroundPainterStrategy) $r5;

        $r7 = virtualinvoke $r6.<org.fife.ui.rtextarea.ImageBackgroundPainterStrategy: java.awt.Image getMasterImage()>();

        goto label3;

     label2:
        $r3 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $r4 = (org.fife.ui.rtextarea.ColorBackgroundPainterStrategy) $r3;

        $r7 = virtualinvoke $r4.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color getColor()>();

     label3:
        return $r7;
    }

    public final int getCaretLineNumber()
    {
        int $i0, $i1;
        javax.swing.text.BadLocationException $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretPosition()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineOfOffset(int)>($i0);

     label2:
        return $i1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public final int getCaretOffsetFromLineStart()
    {
        int $i0, $i1, $i2, $i3;
        javax.swing.text.BadLocationException $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretPosition()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineOfOffset(int)>($i0);

        $i2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineStartOffset(int)>($i1);

        $i3 = $i0 - $i2;

     label2:
        return $i3;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public java.awt.Color getCurrentLineHighlightColor()
    {
        java.awt.Color $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color currentLineColor>;

        return $r1;
    }

    public static final java.awt.Color getDefaultCaretColor()
    {
        java.awt.Color $r0;

        $r0 = <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_CARET_COLOR>;

        return $r0;
    }

    public static final java.awt.Color getDefaultCurrentLineHighlightColor()
    {
        java.awt.Color $r0;

        $r0 = <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_CURRENT_LINE_HIGHLIGHT_COLOR>;

        return $r0;
    }

    public static final java.awt.Font getDefaultFont()
    {
        java.awt.Font $r1, $r4, $r7, r10;
        javax.swing.text.StyleContext $r0;
        java.lang.String $r2, $r3, $r5, $r6, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        $r0 = staticinvoke <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>();

        $z0 = staticinvoke <org.fife.ui.rtextarea.RTextAreaBase: boolean isOSX()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>("Menlo", 0, 12);

        r10 = $r4;

        $r5 = "Menlo";

        $r6 = virtualinvoke $r4.<java.awt.Font: java.lang.String getFamily()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label2;

        $r7 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>("Monaco", 0, 12);

        r10 = $r7;

        $r8 = "Monaco";

        $r9 = virtualinvoke $r7.<java.awt.Font: java.lang.String getFamily()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label2;

        r10 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>("Monospaced", 0, 13);

        goto label2;

     label1:
        $r1 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>("Consolas", 0, 13);

        r10 = $r1;

        $r2 = "Consolas";

        $r3 = virtualinvoke $r1.<java.awt.Font: java.lang.String getFamily()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        r10 = virtualinvoke $r0.<javax.swing.text.StyleContext: java.awt.Font getFont(java.lang.String,int,int)>("Monospaced", 0, 13);

     label2:
        return r10;
    }

    public static final java.awt.Color getDefaultForeground()
    {
        java.awt.Color $r0;

        $r0 = <java.awt.Color: java.awt.Color BLACK>;

        return $r0;
    }

    public static final java.awt.Color getDefaultMarginLineColor()
    {
        java.awt.Color $r0;

        $r0 = <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_MARGIN_LINE_COLOR>;

        return $r0;
    }

    public static final int getDefaultMarginLinePosition()
    {
        return 80;
    }

    public static final int getDefaultTabSize()
    {
        return 4;
    }

    public boolean getFadeCurrentLineHighlight()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean fadeCurrentLineHighlight>;

        return $z0;
    }

    public boolean getHighlightCurrentLine()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean highlightCurrentLine>;

        return $z0;
    }

    public final int getLineEndOffsetOfCurrentLine()
    {
        int $i0, $i1;
        javax.swing.text.BadLocationException $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretLineNumber()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineEndOffset(int)>($i0);

     label2:
        return $i1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public int getLineHeight()
    {
        int $i0;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getRowHeight()>();

        return $i0;
    }

    public final int getLineStartOffsetOfCurrentLine()
    {
        int $i0, $i1;
        javax.swing.text.BadLocationException $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretLineNumber()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineStartOffset(int)>($i0);

     label2:
        return $i1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    public java.awt.Color getMarginLineColor()
    {
        java.awt.Color $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color marginLineColor>;

        return $r1;
    }

    public int getMarginLinePixelLocation()
    {
        int $i0;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX>;

        return $i0;
    }

    public int getMarginLinePosition()
    {
        int $i0;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginSizeInChars>;

        return $i0;
    }

    public boolean getRoundedSelectionEdges()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean roundedSelectionEdges>;

        return $z0;
    }

    public boolean getTabsEmulated()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean tabsEmulatedWithSpaces>;

        return $z0;
    }

    private void init()
    {
        java.awt.Color $r2, $r3, $r4, $r5;
        java.awt.Insets $r6;
        org.fife.ui.rtextarea.RTextAreaUI $r1;
        org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener $r7, $r8;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        int $i0, $i1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaUI createRTextAreaUI()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setRTextAreaUI(org.fife.ui.rtextarea.RTextAreaUI)>($r1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void enableEvents(long)>(9L);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setHighlightCurrentLine(boolean)>(1);

        $r2 = staticinvoke <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color getDefaultCurrentLineHighlightColor()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setCurrentLineHighlightColor(java.awt.Color)>($r2);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setMarginLineEnabled(boolean)>(0);

        $r3 = staticinvoke <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color getDefaultMarginLineColor()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setMarginLineColor(java.awt.Color)>($r3);

        $i0 = staticinvoke <org.fife.ui.rtextarea.RTextAreaBase: int getDefaultMarginLinePosition()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setMarginLinePosition(int)>($i0);

        $r4 = <java.awt.Color: java.awt.Color WHITE>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setBackgroundObject(java.lang.Object)>($r4);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setWrapStyleWord(boolean)>(1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setTabSize(int)>(5);

        $r5 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setForeground(java.awt.Color)>($r5);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setTabsEmulated(boolean)>(0);

        $r6 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Insets getInsets()>();

        $i1 = $r6.<java.awt.Insets: int top>;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY> = $i1;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY> = $i1;

        $r7 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener createMouseListener()>();

        r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener> = $r7;

        $r8 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void addFocusListener(java.awt.event.FocusListener)>($r8);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void addCurrentLineHighlightListeners()>();

        return;
    }

    public boolean isMarginLineEnabled()
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled>;

        return $z0;
    }

    public static boolean isOSX()
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("mac os x");

        return $z0;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.lang.Throwable $r6;
        java.awt.Rectangle $r3;
        javax.swing.plaf.TextUI $r4;
        java.awt.Graphics r1, $r5;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        org.fife.ui.rtextarea.BackgroundPainterStrategy $r2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: java.awt.Graphics;

        $r2 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $r3 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle getVisibleRect()>();

        interfaceinvoke $r2.<org.fife.ui.rtextarea.BackgroundPainterStrategy: void paint(java.awt.Graphics,java.awt.Rectangle)>(r1, $r3);

        $r4 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: javax.swing.plaf.TextUI getUI()>();

        if $r4 == null goto label5;

        $r5 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();

     label1:
        virtualinvoke $r4.<javax.swing.plaf.TextUI: void update(java.awt.Graphics,javax.swing.JComponent)>($r5, r0);

     label2:
        virtualinvoke $r5.<java.awt.Graphics: void dispose()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        virtualinvoke $r5.<java.awt.Graphics: void dispose()>();

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void possiblyUpdateCurrentLineHighlightLocation()
    {
        java.awt.Rectangle $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        javax.swing.text.BadLocationException $r3, $r4;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getWidth()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getLineHeight()>();

        $i2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: int getCaretPosition()>();

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean getLineWrap()>();

        if $z0 == 0 goto label4;

     label1:
        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle modelToView(int)>($i2);

        if $r2 == null goto label2;

        $i6 = $r2.<java.awt.Rectangle: int y>;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY> = $i6;

     label2:
        goto label7;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<javax.swing.text.BadLocationException: void printStackTrace()>();

        goto label7;

     label4:
        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle modelToView(int)>($i2);

        if $r1 == null goto label5;

        $i5 = $r1.<java.awt.Rectangle: int y>;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY> = $i5;

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        virtualinvoke $r3.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label7:
        $i7 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>(0, $i7, $i0, $i1);

        $i8 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY>;

        $i9 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY>;

        if $i8 == $i9 goto label8;

        $i4 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>(0, $i4, $i0, $i1);

     label8:
        $i3 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int currentCaretY>;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY> = $i3;

        return;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
        catch javax.swing.text.BadLocationException from label4 to label5 with label6;
    }

    protected void processComponentEvent(java.awt.event.ComponentEvent)
    {
        int $i0, $i2;
        org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener $r2;
        java.awt.event.ComponentEvent r0;
        org.fife.ui.rtextarea.RTextAreaBase r1;
        boolean $z0, $z1;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r0 := @parameter0: java.awt.event.ComponentEvent;

        $i0 = virtualinvoke r0.<java.awt.event.ComponentEvent: int getID()>();

        if $i0 != 101 goto label1;

        $z0 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: boolean getLineWrap()>();

        if $z0 != 1 goto label1;

        $z1 = virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: boolean getHighlightCurrentLine()>();

        if $z1 == 0 goto label1;

        $i2 = (int) -1;

        r1.<org.fife.ui.rtextarea.RTextAreaBase: int previousCaretY> = $i2;

        $r2 = r1.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.RTextAreaBase$RTAMouseListener mouseListener>;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void fireCaretUpdate(javax.swing.event.CaretEvent)>($r2);

     label1:
        specialinvoke r1.<javax.swing.JTextArea: void processComponentEvent(java.awt.event.ComponentEvent)>(r0);

        return;
    }

    public void setBackground(java.awt.Color)
    {
        java.awt.Color r3;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy $r2, $r5;
        java.lang.Object $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        org.fife.ui.rtextarea.BackgroundPainterStrategy $r4;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.Object getBackgroundObject()>();

        $z0 = $r1 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $r5 = (org.fife.ui.rtextarea.ColorBackgroundPainterStrategy) $r4;

        virtualinvoke $r5.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: void setColor(java.awt.Color)>(r3);

        goto label2;

     label1:
        $r2 = new org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        specialinvoke $r2.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: void <init>(java.awt.Color)>(r3);

        r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter> = $r2;

     label2:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setOpaque(boolean)>(1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("background", $r1, r3);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint()>();

        return;
    }

    public void setBackgroundImage(java.awt.Image)
    {
        java.awt.Image r3;
        org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy $r2, $r5;
        java.lang.Object $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        org.fife.ui.rtextarea.BackgroundPainterStrategy $r4;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r3 := @parameter0: java.awt.Image;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.Object getBackgroundObject()>();

        $z0 = $r1 instanceof java.awt.Image;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter>;

        $r5 = (org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy) $r4;

        virtualinvoke $r5.<org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy: void setImage(java.awt.Image)>(r3);

        goto label2;

     label1:
        $r2 = new org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy;

        specialinvoke $r2.<org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy: void <init>(org.fife.ui.rtextarea.RTextAreaBase)>(r0);

        virtualinvoke $r2.<org.fife.ui.rtextarea.BufferedImageBackgroundPainterStrategy: void setImage(java.awt.Image)>(r3);

        r0.<org.fife.ui.rtextarea.RTextAreaBase: org.fife.ui.rtextarea.BackgroundPainterStrategy backgroundPainter> = $r2;

     label2:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setOpaque(boolean)>(0);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("background.image", $r1, r3);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint()>();

        return;
    }

    public void setBackgroundObject(java.lang.Object)
    {
        java.awt.Color $r2, $r4;
        java.awt.Image $r3;
        java.lang.Object r0;
        org.fife.ui.rtextarea.RTextAreaBase r1;
        boolean $z0, $z1;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r4 = (java.awt.Color) r0;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void setBackground(java.awt.Color)>($r4);

        goto label3;

     label1:
        $z1 = r0 instanceof java.awt.Image;

        if $z1 == 0 goto label2;

        $r3 = (java.awt.Image) r0;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void setBackgroundImage(java.awt.Image)>($r3);

        goto label3;

     label2:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void setBackground(java.awt.Color)>($r2);

     label3:
        return;
    }

    public void setCurrentLineHighlightColor(java.awt.Color)
    {
        java.awt.Color r0, $r2, r3;
        org.fife.ui.rtextarea.RTextAreaBase r1;
        java.lang.NullPointerException $r4;
        boolean $z0;

        r1 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r0 := @parameter0: java.awt.Color;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color currentLineColor>;

        $z0 = virtualinvoke r0.<java.awt.Color: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        r3 = r1.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color currentLineColor>;

        r1.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color currentLineColor> = r0;

        virtualinvoke r1.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("RTA.currentLineHighlightColor", r3, r0);

     label2:
        return;
    }

    public void setFadeCurrentLineHighlight(boolean)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean fadeCurrentLineHighlight>;

        if z0 == $z1 goto label4;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean fadeCurrentLineHighlight> = z0;

        $z2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean getHighlightCurrentLine()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void forceCurrentLineHighlightRepaint()>();

     label1:
        if z0 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,boolean,boolean)>("RTA.currentLineHighlightFade", $z3, z0);

     label4:
        return;
    }

    public void setFont(java.awt.Font)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        java.awt.Font r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: java.awt.Font;

        specialinvoke r0.<javax.swing.JTextArea: void setFont(java.awt.Font)>(r1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void updateMarginLineX()>();

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean highlightCurrentLine>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void possiblyUpdateCurrentLineHighlightLocation()>();

     label1:
        return;
    }

    public void setHighlightCurrentLine(boolean)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean z0, $z1, $z2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean highlightCurrentLine>;

        if z0 == $z1 goto label3;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean highlightCurrentLine> = z0;

        if z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,boolean,boolean)>("RTA.currentLineHighlight", $z2, z0);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint()>();

     label3:
        return;
    }

    public void setLineWrap(boolean)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JTextArea: void setLineWrap(boolean)>(z0);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void forceCurrentLineHighlightRepaint()>();

        return;
    }

    public void setMarginLineColor(java.awt.Color)
    {
        java.awt.Color r1;
        java.awt.Rectangle $r2;
        int $i0, $i1, $i2;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: java.awt.Color;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color marginLineColor> = r1;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled>;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle getVisibleRect()>();

        $i2 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX>;

        $i1 = $r2.<java.awt.Rectangle: int y>;

        $i0 = $r2.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>($i2, $i1, 1, $i0);

     label1:
        return;
    }

    public void setMarginLineEnabled(boolean)
    {
        java.awt.Rectangle $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        int $i0, $i1, $i2;
        boolean z0, $z1, $z2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled>;

        if z0 == $z1 goto label1;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled> = z0;

        $z2 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled>;

        if $z2 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle getVisibleRect()>();

        $i2 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX>;

        $i1 = $r1.<java.awt.Rectangle: int y>;

        $i0 = $r1.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>($i2, $i1, 1, $i0);

     label1:
        return;
    }

    public void setMarginLinePosition(int)
    {
        java.awt.Rectangle $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        i0 := @parameter0: int;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginSizeInChars> = i0;

        $z0 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean marginLineEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Rectangle getVisibleRect()>();

        $i3 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX>;

        $i2 = $r1.<java.awt.Rectangle: int y>;

        $i1 = $r1.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>($i3, $i2, 1, $i1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void updateMarginLineX()>();

        $i6 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX>;

        $i5 = $r1.<java.awt.Rectangle: int y>;

        $i4 = $r1.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint(int,int,int,int)>($i6, $i5, 1, $i4);

     label1:
        return;
    }

    public void setRoundedSelectionEdges(boolean)
    {
        javax.swing.text.Caret $r1;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        int $i0, $i1;
        boolean z0, $z1, $z2, $z3;
        org.fife.ui.rtextarea.ConfigurableCaret $r2;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean roundedSelectionEdges>;

        if $z1 == z0 goto label4;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean roundedSelectionEdges> = z0;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: javax.swing.text.Caret getCaret()>();

        $z2 = $r1 instanceof org.fife.ui.rtextarea.ConfigurableCaret;

        if $z2 == 0 goto label1;

        $r2 = (org.fife.ui.rtextarea.ConfigurableCaret) $r1;

        virtualinvoke $r2.<org.fife.ui.rtextarea.ConfigurableCaret: void setRoundedSelectionEdges(boolean)>(z0);

        $i0 = interfaceinvoke $r1.<javax.swing.text.Caret: int getDot()>();

        $i1 = interfaceinvoke $r1.<javax.swing.text.Caret: int getMark()>();

        if $i0 == $i1 goto label1;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void repaint()>();

     label1:
        if z0 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void firePropertyChange(java.lang.String,boolean,boolean)>("RTA.roundedSelection", $z3, z0);

     label4:
        return;
    }

    protected void setRTextAreaUI(org.fife.ui.rtextarea.RTextAreaUI)
    {
        org.fife.ui.rtextarea.RTextAreaUI r1;
        java.lang.Object $r2;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        r1 := @parameter0: org.fife.ui.rtextarea.RTextAreaUI;

        specialinvoke r0.<javax.swing.JTextArea: void setUI(javax.swing.plaf.TextUI)>(r1);

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.lang.Object getBackgroundObject()>();

        $z0 = $r2 instanceof java.awt.Color;

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setOpaque(boolean)>($z0);

        return;
    }

    public void setTabsEmulated(boolean)
    {
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean z0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        z0 := @parameter0: boolean;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean tabsEmulatedWithSpaces> = z0;

        return;
    }

    public void setTabSize(int)
    {
        int i0;
        org.fife.ui.rtextarea.RTextAreaBase r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.JTextArea: void setTabSize(int)>(i0);

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: boolean getLineWrap()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setLineWrap(boolean)>($z1);

        virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: void setLineWrap(boolean)>($z0);

        return;
    }

    protected void updateMarginLineX()
    {
        java.awt.FontMetrics $r2;
        java.awt.Font $r1;
        int $i0, $i1, $i2;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.Font getFont()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r1);

        $i0 = virtualinvoke $r2.<java.awt.FontMetrics: int charWidth(char)>(109);

        $i1 = r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginSizeInChars>;

        $i2 = $i0 * $i1;

        r0.<org.fife.ui.rtextarea.RTextAreaBase: int marginLineX> = $i2;

        return;
    }

    public int yForLine(int) throws javax.swing.text.BadLocationException
    {
        javax.swing.plaf.TextUI $r1;
        org.fife.ui.rtextarea.RTextAreaUI $r2;
        int i0, $i1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: javax.swing.plaf.TextUI getUI()>();

        $r2 = (org.fife.ui.rtextarea.RTextAreaUI) $r1;

        $i1 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextAreaUI: int yForLine(int)>(i0);

        return $i1;
    }

    public int yForLineContaining(int) throws javax.swing.text.BadLocationException
    {
        javax.swing.plaf.TextUI $r1;
        org.fife.ui.rtextarea.RTextAreaUI $r2;
        int i0, $i1;
        org.fife.ui.rtextarea.RTextAreaBase r0;

        r0 := @this: org.fife.ui.rtextarea.RTextAreaBase;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextAreaBase: javax.swing.plaf.TextUI getUI()>();

        $r2 = (org.fife.ui.rtextarea.RTextAreaUI) $r1;

        $i1 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextAreaUI: int yForLineContaining(int)>(i0);

        return $i1;
    }

    static void <clinit>()
    {
        java.awt.Color $r1, $r2;
        javax.swing.plaf.ColorUIResource $r0;

        <org.fife.ui.rtextarea.RTextAreaBase: int DEFAULT_MARGIN_LINE_POSITION> = 80;

        <org.fife.ui.rtextarea.RTextAreaBase: int DEFAULT_TAB_SIZE> = 4;

        <org.fife.ui.rtextarea.RTextAreaBase: java.lang.String ROUNDED_SELECTION_PROPERTY> = "RTA.roundedSelection";

        <org.fife.ui.rtextarea.RTextAreaBase: java.lang.String HIGHLIGHT_CURRENT_LINE_PROPERTY> = "RTA.currentLineHighlight";

        <org.fife.ui.rtextarea.RTextAreaBase: java.lang.String CURRENT_LINE_HIGHLIGHT_FADE_PROPERTY> = "RTA.currentLineHighlightFade";

        <org.fife.ui.rtextarea.RTextAreaBase: java.lang.String CURRENT_LINE_HIGHLIGHT_COLOR_PROPERTY> = "RTA.currentLineHighlightColor";

        <org.fife.ui.rtextarea.RTextAreaBase: java.lang.String BACKGROUND_IMAGE_PROPERTY> = "background.image";

        $r0 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r0.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 51, 51);

        <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_CARET_COLOR> = $r0;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(255, 255, 170);

        <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_CURRENT_LINE_HIGHLIGHT_COLOR> = $r1;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int)>(255, 224, 224);

        <org.fife.ui.rtextarea.RTextAreaBase: java.awt.Color DEFAULT_MARGIN_LINE_COLOR> = $r2;

        return;
    }
}
