public class org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory extends java.lang.Object implements org.apache.batik.bridge.SVGAnimationEngine$Factory
{
    protected short type;
    protected float value;
    protected org.apache.batik.parser.LengthParser parser;
    protected org.apache.batik.parser.LengthHandler handler;
    private final org.apache.batik.bridge.SVGAnimationEngine this$0;

    public void <init>(org.apache.batik.bridge.SVGAnimationEngine)
    {
        org.apache.batik.parser.LengthParser $r2, $r5;
        org.apache.batik.bridge.SVGAnimationEngine$3 $r3;
        org.apache.batik.parser.LengthHandler $r4;
        org.apache.batik.bridge.SVGAnimationEngine r1;
        org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory r0;

        r0 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory;

        r1 := @parameter0: org.apache.batik.bridge.SVGAnimationEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.bridge.SVGAnimationEngine this$0> = r1;

        $r2 = new org.apache.batik.parser.LengthParser;

        specialinvoke $r2.<org.apache.batik.parser.LengthParser: void <init>()>();

        r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.parser.LengthParser parser> = $r2;

        $r3 = new org.apache.batik.bridge.SVGAnimationEngine$3;

        specialinvoke $r3.<org.apache.batik.bridge.SVGAnimationEngine$3: void <init>(org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory)>(r0);

        r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.parser.LengthHandler handler> = $r3;

        $r5 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.parser.LengthParser parser>;

        $r4 = r0.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.parser.LengthHandler handler>;

        virtualinvoke $r5.<org.apache.batik.parser.LengthParser: void setLengthHandler(org.apache.batik.parser.LengthHandler)>($r4);

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.dom.anim.AnimationTarget, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        org.apache.batik.dom.anim.AnimationTarget r0;
        org.apache.batik.anim.values.AnimatableLengthValue $r6;
        org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory r3;
        org.apache.batik.parser.LengthParser $r5;
        short $s0, $s1;
        float $f0;
        java.lang.String r1, r2, r4;
        boolean z0;
        org.apache.batik.parser.ParseException $r7;

        r3 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory;

        r0 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.String;

        $s0 = interfaceinvoke r0.<org.apache.batik.dom.anim.AnimationTarget: short getPercentageInterpretation(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

     label1:
        $r5 = r3.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: org.apache.batik.parser.LengthParser parser>;

        virtualinvoke $r5.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>(r4);

        $r6 = new org.apache.batik.anim.values.AnimatableLengthValue;

        $s1 = r3.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: short type>;

        $f0 = r3.<org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory: float value>;

        specialinvoke $r6.<org.apache.batik.anim.values.AnimatableLengthValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,short,float,short)>(r0, $s1, $f0, $s0);

        return $r6;

     label2:
        $r7 := @caughtexception;

        return null;

        catch org.apache.batik.parser.ParseException from label1 to label2 with label2;
    }

    public org.apache.batik.anim.values.AnimatableValue createValue(org.apache.batik.dom.anim.AnimationTarget, java.lang.String, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableIntegerValue $r0;
        int $i0;
        float $f0;
        java.lang.String r4;
        org.apache.batik.css.engine.value.Value r2;
        org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory r3;

        r3 := @this: org.apache.batik.bridge.SVGAnimationEngine$AnimatableLengthValueFactory;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.batik.css.engine.value.Value;

        $r0 = new org.apache.batik.anim.values.AnimatableIntegerValue;

        $f0 = interfaceinvoke r2.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatableIntegerValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,int)>(r1, $i0);

        return $r0;
    }
}
