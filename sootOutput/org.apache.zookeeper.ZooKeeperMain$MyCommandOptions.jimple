class org.apache.zookeeper.ZooKeeperMain$MyCommandOptions extends java.lang.Object
{
    private java.util.Map options;
    private java.util.List cmdArgs;
    private java.lang.String command;

    public void <init>()
    {
        java.util.Map $r2, $r3;
        java.util.HashMap $r1;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options> = $r1;

        r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs> = null;

        r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.lang.String command> = null;

        $r2 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("server", "localhost:2181");

        $r3 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeout", "30000");

        return;
    }

    public java.lang.String getOption(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getCommand()
    {
        java.lang.String $r1;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        $r1 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.lang.String command>;

        return $r1;
    }

    public java.lang.String getCmdArgument(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public int getNumArguments()
    {
        int $i0;
        java.util.List $r1;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        $r1 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String[] getArgArray()
    {
        java.util.List $r2;
        java.lang.Object[] $r3;
        java.lang.String[] $r1, $r4;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r0;

        r0 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        $r2 = r0.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs>;

        $r1 = newarray (java.lang.String)[0];

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public boolean parseOptions(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.ArrayList $r6;
        java.util.Map $r11, $r12, $r14;
        java.lang.String r4, $r7, $r21;
        java.util.NoSuchElementException $r16;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r18;
        java.util.Iterator $r2;
        java.util.List $r1, $r8, $r9;
        java.lang.Object $r3, $r10, $r13, $r15;
        java.lang.StringBuilder $r17, $r19, $r20;

        r5 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

     label02:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-server");

        if $z1 == 0 goto label03;

        $r14 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        $r15 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("server", $r15);

        goto label05;

     label03:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-timeout");

        if $z2 == 0 goto label04;

        $r12 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timeout", $r13);

        goto label05;

     label04:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("-r");

        if $z3 == 0 goto label05;

        $r11 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.Map options>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readonly", "true");

     label05:
        goto label07;

     label06:
        $r16 := @caughtexception;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: no argument found for option ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r21);

        return 0;

     label07:
        $z4 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z4 != 0 goto label10;

        r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.lang.String command> = r4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs> = $r6;

        $r8 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs>;

        $r7 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.lang.String command>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

     label08:
        $z5 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r9 = r5.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs>;

        $r10 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label08;

     label09:
        return 1;

     label10:
        goto label01;

     label11:
        return 1;

        catch java.util.NoSuchElementException from label02 to label05 with label06;
    }

    public boolean parseCommand(java.lang.String)
    {
        java.lang.String[] r2;
        java.util.List $r5;
        java.util.StringTokenizer $r0;
        int $i0, $i1, i2;
        java.lang.String r1, $r4, $r6;
        org.apache.zookeeper.ZooKeeperMain$MyCommandOptions r3;
        boolean $z0;

        r3 := @this: org.apache.zookeeper.ZooKeeperMain$MyCommandOptions;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, " ");

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = lengthof r2;

        if $i1 != 0 goto label3;

        return 0;

     label3:
        $r4 = r2[0];

        r3.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.lang.String command> = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        r3.<org.apache.zookeeper.ZooKeeperMain$MyCommandOptions: java.util.List cmdArgs> = $r5;

        return 1;
    }
}
