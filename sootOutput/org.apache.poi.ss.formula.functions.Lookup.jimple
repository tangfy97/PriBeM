public final class org.apache.poi.ss.formula.functions.Lookup extends org.apache.poi.ss.formula.functions.Var2or3ArgFunction
{

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.Lookup r0;

        r0 := @this: org.apache.poi.ss.formula.functions.Lookup;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Var2or3ArgFunction: void <init>()>();

        return;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ValueEval r2, r3;
        int i0, i1;
        java.lang.RuntimeException $r0;
        org.apache.poi.ss.formula.functions.Lookup r1;

        r1 := @this: org.apache.poi.ss.formula.functions.Lookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r3 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Two arg version of LOOKUP not supported yet");

        throw $r0;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector $r6, $r7;
        org.apache.poi.ss.formula.eval.ErrorEval $r11;
        int i0, i1, $i2, $i3, $i4;
        org.apache.poi.ss.formula.eval.EvaluationException $r10;
        java.lang.RuntimeException $r9;
        org.apache.poi.ss.formula.functions.Lookup r12;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1, r2, r4, $r8;
        org.apache.poi.ss.formula.TwoDEval $r3, $r5;

        r12 := @this: org.apache.poi.ss.formula.functions.Lookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

        r4 := @parameter4: org.apache.poi.ss.formula.eval.ValueEval;

     label1:
        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $r3 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.TwoDEval resolveTableArrayArg(org.apache.poi.ss.formula.eval.ValueEval)>(r2);

        $r5 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.TwoDEval resolveTableArrayArg(org.apache.poi.ss.formula.eval.ValueEval)>(r4);

        $r6 = staticinvoke <org.apache.poi.ss.formula.functions.Lookup: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.TwoDEval)>($r3);

        $r7 = staticinvoke <org.apache.poi.ss.formula.functions.Lookup: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.TwoDEval)>($r5);

        $i2 = interfaceinvoke $r6.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: int getSize()>();

        $i3 = interfaceinvoke $r7.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: int getSize()>();

        if $i2 <= $i3 goto label2;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Lookup vector and result vector of differing sizes not supported yet");

        throw $r9;

     label2:
        $i4 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: int lookupIndexOfValue(org.apache.poi.ss.formula.eval.ValueEval,org.apache.poi.ss.formula.functions.LookupUtils$ValueVector,boolean)>($r1, $r6, 1);

        $r8 = interfaceinvoke $r7.<org.apache.poi.ss.formula.functions.LookupUtils$ValueVector: org.apache.poi.ss.formula.eval.ValueEval getItem(int)>($i4);

     label3:
        return $r8;

     label4:
        $r10 := @caughtexception;

        $r11 = virtualinvoke $r10.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r11;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label3 with label4;
    }

    private static org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.TwoDEval)
    {
        org.apache.poi.ss.formula.TwoDEval r0;
        org.apache.poi.ss.formula.functions.LookupUtils$ValueVector $r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: org.apache.poi.ss.formula.TwoDEval;

        $r1 = staticinvoke <org.apache.poi.ss.formula.functions.LookupUtils: org.apache.poi.ss.formula.functions.LookupUtils$ValueVector createVector(org.apache.poi.ss.formula.TwoDEval)>(r0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("non-vector lookup or result areas not supported yet");

        throw $r2;
    }
}
