class org.apache.poi.hpsf.Section$PropertyListEntry extends java.lang.Object implements java.lang.Comparable
{
    int id;
    int offset;
    int length;

    void <init>()
    {
        org.apache.poi.hpsf.Section$PropertyListEntry r0;

        r0 := @this: org.apache.poi.hpsf.Section$PropertyListEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compareTo(org.apache.poi.hpsf.Section$PropertyListEntry)
    {
        org.apache.poi.hpsf.Section$PropertyListEntry r0, r1;
        int i0, $i1, $i2, $i4;

        r1 := @this: org.apache.poi.hpsf.Section$PropertyListEntry;

        r0 := @parameter0: org.apache.poi.hpsf.Section$PropertyListEntry;

        i0 = r0.<org.apache.poi.hpsf.Section$PropertyListEntry: int offset>;

        $i1 = r1.<org.apache.poi.hpsf.Section$PropertyListEntry: int offset>;

        if $i1 >= i0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $i2 = r1.<org.apache.poi.hpsf.Section$PropertyListEntry: int offset>;

        if $i2 != i0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hpsf.Section$PropertyListEntry r1;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;

        r1 := @this: org.apache.poi.hpsf.Section$PropertyListEntry;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[id=");

        $i0 = r1.<org.apache.poi.hpsf.Section$PropertyListEntry: int id>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", offset=");

        $i1 = r1.<org.apache.poi.hpsf.Section$PropertyListEntry: int offset>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", length=");

        $i2 = r1.<org.apache.poi.hpsf.Section$PropertyListEntry: int length>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.poi.hpsf.Section$PropertyListEntry r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.poi.hpsf.Section$PropertyListEntry;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.poi.hpsf.Section$PropertyListEntry) r1;

        $i0 = virtualinvoke r0.<org.apache.poi.hpsf.Section$PropertyListEntry: int compareTo(org.apache.poi.hpsf.Section$PropertyListEntry)>($r2);

        return $i0;
    }
}
