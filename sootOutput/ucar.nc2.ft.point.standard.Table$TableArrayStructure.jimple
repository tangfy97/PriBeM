public class ucar.nc2.ft.point.standard.Table$TableArrayStructure extends ucar.nc2.ft.point.standard.Table
{
    ucar.ma2.ArrayStructure as;
    ucar.nc2.Dimension dim;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.Table$TableArrayStructure r0;
        ucar.ma2.ArrayStructure $r3, $r5, $r7, $r15;
        long $l0;
        java.lang.AssertionError $r16;
        ucar.ma2.StructureMembers$Member r12;
        ucar.nc2.ft.point.standard.TableConfig r2;
        int $i1;
        java.lang.String $r6;
        boolean $z0, $z1;
        ucar.nc2.VariableSimpleAdapter $r13;
        java.util.Iterator $r10;
        java.util.List $r9, $r14;
        ucar.ma2.StructureMembers $r8;
        ucar.nc2.Dimension $r4;
        java.lang.Object $r11;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableArrayStructure;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.ma2.ArrayStructure as>;

        r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.ma2.ArrayStructure as> = $r3;

        $r4 = new ucar.nc2.Dimension;

        $r6 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        $r5 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.ma2.ArrayStructure as>;

        $l0 = virtualinvoke $r5.<ucar.ma2.ArrayStructure: long getSize()>();

        $i1 = (int) $l0;

        specialinvoke $r4.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r6, $i1, 0);

        r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.nc2.Dimension dim> = $r4;

        $z0 = <ucar.nc2.ft.point.standard.Table$TableArrayStructure: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r15 = r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.ma2.ArrayStructure as>;

        if $r15 != null goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $r7 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.ma2.ArrayStructure as>;

        $r8 = virtualinvoke $r7.<ucar.ma2.ArrayStructure: ucar.ma2.StructureMembers getStructureMembers()>();

        $r9 = virtualinvoke $r8.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.ma2.StructureMembers$Member) $r11;

        $r14 = r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: java.util.List cols>;

        $r13 = new ucar.nc2.VariableSimpleAdapter;

        specialinvoke $r13.<ucar.nc2.VariableSimpleAdapter: void <init>(ucar.ma2.StructureMembers$Member)>(r12);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        return;
    }

    protected void showTableExtraInfo(java.lang.String, java.util.Formatter)
    {
        java.lang.Object[] $r1;
        ucar.nc2.ft.point.standard.Table$TableArrayStructure r4;
        ucar.ma2.Section $r3;
        ucar.ma2.ArrayStructure $r5;
        java.util.Formatter r0;
        int[] $r6;
        ucar.nc2.Dimension $r7;
        java.lang.String r2, $r8;

        r4 := @this: ucar.nc2.ft.point.standard.Table$TableArrayStructure;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r3 = new ucar.ma2.Section;

        $r5 = r4.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.ma2.ArrayStructure as>;

        $r6 = virtualinvoke $r5.<ucar.ma2.ArrayStructure: int[] getShape()>();

        specialinvoke $r3.<ucar.ma2.Section: void <init>(int[])>($r6);

        $r1[1] = $r3;

        $r7 = r4.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.nc2.Dimension dim>;

        $r8 = virtualinvoke $r7.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r1[2] = $r8;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sArrayStruct=%s, dim=%s%n", $r1);

        return;
    }

    public java.lang.String showDimension()
    {
        ucar.nc2.Dimension $r1;
        ucar.nc2.ft.point.standard.Table$TableArrayStructure r0;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableArrayStructure;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.nc2.Dimension dim>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        return $r2;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.Table$TableArrayStructure r0;
        ucar.ma2.ArrayStructure $r1;
        ucar.ma2.StructureDataIterator $r2;
        int i0;
        ucar.nc2.ft.point.standard.Cursor r3;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableArrayStructure;

        r3 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i0 := @parameter1: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: ucar.ma2.ArrayStructure as>;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.point.standard.Table$TableArrayStructure r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: ucar.nc2.ft.point.standard.Table$TableArrayStructure;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ArrayStructure(");

        $r3 = r2.<ucar.nc2.ft.point.standard.Table$TableArrayStructure: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ft/point/standard/Table;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ft.point.standard.Table$TableArrayStructure: boolean $assertionsDisabled> = $z1;

        return;
    }
}
