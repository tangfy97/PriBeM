public class org.apache.commons.lang.math.NumberUtils extends java.lang.Object
{
    public static final java.lang.Long LONG_ZERO;
    public static final java.lang.Long LONG_ONE;
    public static final java.lang.Long LONG_MINUS_ONE;
    public static final java.lang.Integer INTEGER_ZERO;
    public static final java.lang.Integer INTEGER_ONE;
    public static final java.lang.Integer INTEGER_MINUS_ONE;
    public static final java.lang.Short SHORT_ZERO;
    public static final java.lang.Short SHORT_ONE;
    public static final java.lang.Short SHORT_MINUS_ONE;
    public static final java.lang.Byte BYTE_ZERO;
    public static final java.lang.Byte BYTE_ONE;
    public static final java.lang.Byte BYTE_MINUS_ONE;
    public static final java.lang.Double DOUBLE_ZERO;
    public static final java.lang.Double DOUBLE_ONE;
    public static final java.lang.Double DOUBLE_MINUS_ONE;
    public static final java.lang.Float FLOAT_ZERO;
    public static final java.lang.Float FLOAT_ONE;
    public static final java.lang.Float FLOAT_MINUS_ONE;

    public void <init>()
    {
        org.apache.commons.lang.math.NumberUtils r0;

        r0 := @this: org.apache.commons.lang.math.NumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int stringToInt(java.lang.String)
    {
        int $i0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String)>(r0);

        return $i0;
    }

    public static int toInt(java.lang.String)
    {
        int $i0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r0, 0);

        return $i0;
    }

    public static int stringToInt(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r0, i0);

        return $i1;
    }

    public static int toInt(java.lang.String, int)
    {
        int $i0, i1;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r0 != null goto label1;

        return i1;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        return i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long toLong(java.lang.String)
    {
        long $l0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: long toLong(java.lang.String,long)>(r0, 0L);

        return $l0;
    }

    public static long toLong(java.lang.String, long)
    {
        long $l0, l1;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        l1 := @parameter1: long;

        if r0 != null goto label1;

        return l1;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        return l1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static float toFloat(java.lang.String)
    {
        float $f0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $f0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: float toFloat(java.lang.String,float)>(r0, 0.0F);

        return $f0;
    }

    public static float toFloat(java.lang.String, float)
    {
        float $f0, f1;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        f1 := @parameter1: float;

        if r0 != null goto label1;

        return f1;

     label1:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r0);

     label2:
        return $f0;

     label3:
        $r1 := @caughtexception;

        return f1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static double toDouble(java.lang.String)
    {
        java.lang.String r0;
        double $d0;

        r0 := @parameter0: java.lang.String;

        $d0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: double toDouble(java.lang.String,double)>(r0, 0.0);

        return $d0;
    }

    public static double toDouble(java.lang.String, double)
    {
        java.lang.NumberFormatException $r1;
        java.lang.String r0;
        double $d0, d1;

        r0 := @parameter0: java.lang.String;

        d1 := @parameter1: double;

        if r0 != null goto label1;

        return d1;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        return d1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.Number createNumber(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.Float $r7, $r42;
        java.lang.Integer $r1, $r4;
        java.math.BigDecimal $r3, $r8;
        byte $b8, $b9, $b15, $b16;
        java.lang.Long $r5, $r25;
        java.math.BigInteger $r23, $r30;
        java.lang.Double $r2, $r40;
        java.lang.StringBuffer $r11, $r12, $r16, $r17, $r37, $r38, $r44, $r46, $r48;
        java.lang.String r0, $r6, $r13, $r18, r31, r32, r33, $r34, $r39, r41;
        java.lang.NumberFormatException $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r43, $r45, $r47, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z14, $z15, z17, $z18, $z19, $z20, $z21, $z22;
        float $f0, $f1, $f2;
        int $i0, $i1, $i3, $i4, $i5, $i6, i7, $i10, $i11, $i12, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29, $i31, $i33, $i34, $i35, $i37;
        double $d0, $d1;
        char $c2, $c14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0);

        if $z0 == 0 goto label02;

        $r43 = new java.lang.NumberFormatException;

        specialinvoke $r43.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number");

        throw $r43;

     label02:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 == 0 goto label03;

        return null;

     label03:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-0x");

        if $z3 == 0 goto label05;

     label04:
        $r1 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

        return $r1;

     label05:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i1);

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(101);

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(69);

        $i6 = $i4 + $i5;

        i7 = $i6 + 1;

        $i27 = (int) -1;

        if $i3 <= $i27 goto label09;

        $i29 = (int) -1;

        if i7 <= $i29 goto label07;

        if i7 >= $i3 goto label06;

        $r45 = new java.lang.NumberFormatException;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r18);

        throw $r45;

     label06:
        $i23 = $i3 + 1;

        r31 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i23, i7);

        goto label08;

     label07:
        $i22 = $i3 + 1;

        r31 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i22);

     label08:
        r32 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        goto label12;

     label09:
        $i31 = (int) -1;

        if i7 <= $i31 goto label10;

        r32 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i7);

        goto label11;

     label10:
        r32 = r0;

     label11:
        r31 = null;

     label12:
        $z11 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c2);

        if $z11 != 0 goto label35;

        $i33 = (int) -1;

        if i7 <= $i33 goto label13;

        $i17 = virtualinvoke r0.<java.lang.String: int length()>();

        $i18 = $i17 - 1;

        if i7 >= $i18 goto label13;

        $i19 = i7 + 1;

        $i20 = virtualinvoke r0.<java.lang.String: int length()>();

        $i21 = $i20 - 1;

        r33 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i19, $i21);

        goto label14;

     label13:
        r33 = null;

     label14:
        $i24 = virtualinvoke r0.<java.lang.String: int length()>();

        $i25 = $i24 - 1;

        $r34 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i25);

        $z12 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isAllZeros(java.lang.String)>(r32);

        if $z12 == 0 goto label15;

        $z10 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isAllZeros(java.lang.String)>(r33);

        if $z10 == 0 goto label15;

        $z20 = 1;

        $z19 = 1;

        goto label16;

     label15:
        $z20 = 0;

        $z19 = 0;

     label16:
        z14 = $z20;

        $i34 = (int) $c2;

        lookupswitch($i34)
        {
            case 68: goto label27;
            case 70: goto label23;
            case 76: goto label17;
            case 100: goto label27;
            case 102: goto label23;
            case 108: goto label17;
            default: goto label34;
        };

     label17:
        if r31 != null goto label22;

        if r33 != null goto label22;

        $c14 = virtualinvoke $r34.<java.lang.String: char charAt(int)>(0);

        $i35 = (int) $c14;

        if $i35 != 45 goto label18;

        $r6 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int)>(1);

        $z8 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>($r6);

        if $z8 != 0 goto label19;

     label18:
        $z7 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>($r34);

        if $z7 == 0 goto label22;

     label19:
        $r5 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Long createLong(java.lang.String)>($r34);

     label20:
        return $r5;

     label21:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>($r34);

        return $r30;

     label22:
        $r47 = new java.lang.NumberFormatException;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>()>();

        $r37 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r39);

        throw $r47;

     label23:
        $r7 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Float createFloat(java.lang.String)>($r34);

        $z9 = virtualinvoke $r7.<java.lang.Float: boolean isInfinite()>();

        if $z9 != 0 goto label25;

        $f2 = virtualinvoke $r7.<java.lang.Float: float floatValue()>();

        $b16 = $f2 cmpl 0.0F;

        if $b16 != 0 goto label24;

        if $z19 == 0 goto label25;

     label24:
        return $r7;

     label25:
        goto label27;

     label26:
        $r28 := @caughtexception;

     label27:
        $r40 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Double createDouble(java.lang.String)>($r34);

        $z15 = virtualinvoke $r40.<java.lang.Double: boolean isInfinite()>();

        if $z15 != 0 goto label29;

        $f1 = virtualinvoke $r40.<java.lang.Double: float floatValue()>();

        $d1 = (double) $f1;

        $b15 = $d1 cmpl 0.0;

        if $b15 != 0 goto label28;

        if z14 == 0 goto label29;

     label28:
        return $r40;

     label29:
        goto label31;

     label30:
        $r27 := @caughtexception;

     label31:
        $r8 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>($r34);

     label32:
        return $r8;

     label33:
        $r26 := @caughtexception;

     label34:
        $r49 = new java.lang.NumberFormatException;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid number.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r49.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r13);

        throw $r49;

     label35:
        $i37 = (int) -1;

        if i7 <= $i37 goto label36;

        $i10 = virtualinvoke r0.<java.lang.String: int length()>();

        $i11 = $i10 - 1;

        if i7 >= $i11 goto label36;

        $i12 = i7 + 1;

        $i13 = virtualinvoke r0.<java.lang.String: int length()>();

        r41 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i12, $i13);

        goto label37;

     label36:
        r41 = null;

     label37:
        if r31 != null goto label44;

        if r41 != null goto label44;

     label38:
        $r4 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

     label39:
        return $r4;

     label40:
        $r24 := @caughtexception;

     label41:
        $r25 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Long createLong(java.lang.String)>(r0);

     label42:
        return $r25;

     label43:
        $r22 := @caughtexception;

        $r23 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(r0);

        return $r23;

     label44:
        $z4 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isAllZeros(java.lang.String)>(r32);

        if $z4 == 0 goto label45;

        $z6 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isAllZeros(java.lang.String)>(r41);

        if $z6 == 0 goto label45;

        $z22 = 1;

        $z21 = 1;

        goto label46;

     label45:
        $z22 = 0;

        $z21 = 0;

     label46:
        z17 = $z21;

     label47:
        $r42 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Float createFloat(java.lang.String)>(r0);

        $z18 = virtualinvoke $r42.<java.lang.Float: boolean isInfinite()>();

        if $z18 != 0 goto label49;

        $f0 = virtualinvoke $r42.<java.lang.Float: float floatValue()>();

        $b9 = $f0 cmpl 0.0F;

        if $b9 != 0 goto label48;

        if $z22 == 0 goto label49;

     label48:
        return $r42;

     label49:
        goto label51;

     label50:
        $r21 := @caughtexception;

     label51:
        $r2 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.lang.Double createDouble(java.lang.String)>(r0);

        $z5 = virtualinvoke $r2.<java.lang.Double: boolean isInfinite()>();

        if $z5 != 0 goto label53;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $b8 = $d0 cmpl 0.0;

        if $b8 != 0 goto label52;

        if z17 == 0 goto label53;

     label52:
        return $r2;

     label53:
        goto label55;

     label54:
        $r20 := @caughtexception;

     label55:
        $r3 = staticinvoke <org.apache.commons.lang.math.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(r0);

        return $r3;

        catch java.lang.NumberFormatException from label19 to label20 with label21;
        catch java.lang.NumberFormatException from label23 to label24 with label26;
        catch java.lang.NumberFormatException from label27 to label28 with label30;
        catch java.lang.NumberFormatException from label31 to label32 with label33;
        catch java.lang.NumberFormatException from label38 to label39 with label40;
        catch java.lang.NumberFormatException from label41 to label42 with label43;
        catch java.lang.NumberFormatException from label47 to label48 with label50;
        catch java.lang.NumberFormatException from label51 to label52 with label54;
    }

    private static boolean isAllZeros(java.lang.String)
    {
        char $c2;
        int $i0, $i1, i3, $i4, $i6;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i0 - 1;

     label2:
        if i3 < 0 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i4 == 48 goto label3;

        return 0;

     label3:
        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label2;

     label4:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public static java.lang.Float createFloat(java.lang.String)
    {
        java.lang.Float $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Double createDouble(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Double $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Integer createInteger(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Long createLong(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Long $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.math.BigInteger createBigInteger(java.lang.String)
    {
        java.math.BigInteger $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.math.BigInteger;

        specialinvoke $r1.<java.math.BigInteger: void <init>(java.lang.String)>(r0);

        return $r1;
    }

    public static java.math.BigDecimal createBigDecimal(java.lang.String)
    {
        java.math.BigDecimal $r1;
        java.lang.NumberFormatException $r2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $r2 = new java.lang.NumberFormatException;

        specialinvoke $r2.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number");

        throw $r2;

     label2:
        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>(r0);

        return $r1;
    }

    public static long min(long[])
    {
        long $l2, l4;
        java.lang.IllegalArgumentException $r3, $r4;
        long[] r0;
        byte $b3;
        int $i0, $i1, i5, $i6;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        l4 = r0[0];

        i5 = 1;

     label3:
        $i1 = lengthof r0;

        if i5 >= $i1 goto label5;

        $l2 = r0[i5];

        $b3 = $l2 cmp l4;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label4;

        l4 = r0[i5];

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return l4;
    }

    public static int min(int[])
    {
        java.lang.IllegalArgumentException $r1, $r2;
        int[] r0;
        int $i0, $i1, $i2, i3, i4;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r2;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r1;

     label2:
        i3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $i2 = r0[i4];

        if $i2 >= i3 goto label4;

        i3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return i3;
    }

    public static short min(short[])
    {
        java.lang.IllegalArgumentException $r3, $r4;
        short $s2, s3;
        int $i0, $i1, i4, $i5, $i6;
        short[] r0;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        s3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $s2 = r0[i4];

        $i5 = (int) $s2;

        $i6 = (int) s3;

        if $i5 >= $i6 goto label4;

        s3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return s3;
    }

    public static byte min(byte[])
    {
        byte[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2, b3;
        int $i0, $i1, i4, $i5, $i6;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        b3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $b2 = r0[i4];

        $i5 = (int) $b2;

        $i6 = (int) b3;

        if $i5 >= $i6 goto label4;

        b3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return b3;
    }

    public static double min(double[])
    {
        double[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2;
        int $i0, $i1, i3, $i4;
        double $d0, $d1, d2;
        boolean $z0;

        r0 := @parameter0: double[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        d2 = r0[0];

        i3 = 1;

     label3:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label6;

        $d0 = r0[i3];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label4;

        return #NaN;

     label4:
        $d1 = r0[i3];

        $b2 = $d1 cmpg d2;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label5;

        d2 = r0[i3];

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return d2;
    }

    public static float min(float[])
    {
        float[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2;
        int $i0, $i1, i3, $i4;
        float $f0, $f1, f2;
        boolean $z0;

        r0 := @parameter0: float[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        f2 = r0[0];

        i3 = 1;

     label3:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label6;

        $f0 = r0[i3];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label4;

        return #NaNF;

     label4:
        $f1 = r0[i3];

        $b2 = $f1 cmpg f2;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label5;

        f2 = r0[i3];

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return f2;
    }

    public static long max(long[])
    {
        long $l2, l4;
        java.lang.IllegalArgumentException $r3, $r4;
        long[] r0;
        byte $b3;
        int $i0, $i1, i5, $i6;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        l4 = r0[0];

        i5 = 1;

     label3:
        $i1 = lengthof r0;

        if i5 >= $i1 goto label5;

        $l2 = r0[i5];

        $b3 = $l2 cmp l4;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label4;

        l4 = r0[i5];

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        return l4;
    }

    public static int max(int[])
    {
        java.lang.IllegalArgumentException $r1, $r2;
        int[] r0;
        int $i0, $i1, $i2, i3, i4;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r2;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r1;

     label2:
        i3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $i2 = r0[i4];

        if $i2 <= i3 goto label4;

        i3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return i3;
    }

    public static short max(short[])
    {
        java.lang.IllegalArgumentException $r3, $r4;
        short $s2, s3;
        int $i0, $i1, i4, $i5, $i6;
        short[] r0;

        r0 := @parameter0: short[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        s3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $s2 = r0[i4];

        $i5 = (int) $s2;

        $i6 = (int) s3;

        if $i5 <= $i6 goto label4;

        s3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return s3;
    }

    public static byte max(byte[])
    {
        byte[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2, b3;
        int $i0, $i1, i4, $i5, $i6;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        b3 = r0[0];

        i4 = 1;

     label3:
        $i1 = lengthof r0;

        if i4 >= $i1 goto label5;

        $b2 = r0[i4];

        $i5 = (int) $b2;

        $i6 = (int) b3;

        if $i5 <= $i6 goto label4;

        b3 = r0[i4];

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return b3;
    }

    public static double max(double[])
    {
        double[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2;
        int $i0, $i1, i3, $i4;
        double $d0, $d1, d2;
        boolean $z0;

        r0 := @parameter0: double[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        d2 = r0[0];

        i3 = 1;

     label3:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label6;

        $d0 = r0[i3];

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label4;

        return #NaN;

     label4:
        $d1 = r0[i3];

        $b2 = $d1 cmpl d2;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label5;

        d2 = r0[i3];

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return d2;
    }

    public static float max(float[])
    {
        float[] r0;
        java.lang.IllegalArgumentException $r3, $r4;
        byte $b2;
        int $i0, $i1, i3, $i4;
        float $f0, $f1, f2;
        boolean $z0;

        r0 := @parameter0: float[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Array must not be null");

        throw $r3;

     label1:
        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array cannot be empty.");

        throw $r4;

     label2:
        f2 = r0[0];

        i3 = 1;

     label3:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label6;

        $f0 = r0[i3];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label4;

        return #NaNF;

     label4:
        $f1 = r0[i3];

        $b2 = $f1 cmpl f2;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label5;

        f2 = r0[i3];

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return f2;
    }

    public static long min(long, long, long)
    {
        byte $b1, $b3;
        int $i5, $i6;
        long l0, l2, l4;

        l4 := @parameter0: long;

        l0 := @parameter1: long;

        l2 := @parameter2: long;

        $b1 = l0 cmp l4;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label1;

        l4 = l0;

     label1:
        $b3 = l2 cmp l4;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label2;

        l4 = l2;

     label2:
        return l4;
    }

    public static int min(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 >= i2 goto label1;

        i2 = i0;

     label1:
        if i1 >= i2 goto label2;

        i2 = i1;

     label2:
        return i2;
    }

    public static short min(short, short, short)
    {
        short s0, s1, s2;
        int $i3, $i4, $i5, $i6;

        s2 := @parameter0: short;

        s0 := @parameter1: short;

        s1 := @parameter2: short;

        $i3 = (int) s0;

        $i4 = (int) s2;

        if $i3 >= $i4 goto label1;

        s2 = s0;

     label1:
        $i5 = (int) s1;

        $i6 = (int) s2;

        if $i5 >= $i6 goto label2;

        s2 = s1;

     label2:
        return s2;
    }

    public static byte min(byte, byte, byte)
    {
        byte b0, b1, b2;
        int $i3, $i4, $i5, $i6;

        b2 := @parameter0: byte;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        $i3 = (int) b0;

        $i4 = (int) b2;

        if $i3 >= $i4 goto label1;

        b2 = b0;

     label1:
        $i5 = (int) b1;

        $i6 = (int) b2;

        if $i5 >= $i6 goto label2;

        b2 = b1;

     label2:
        return b2;
    }

    public static double min(double, double, double)
    {
        double d0, d1, $d2, d3, $d4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d3 := @parameter2: double;

        $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        $d4 = staticinvoke <java.lang.Math: double min(double,double)>($d2, d3);

        return $d4;
    }

    public static float min(float, float, float)
    {
        float f0, f1, $f2, f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f3 := @parameter2: float;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f2, f3);

        return $f4;
    }

    public static long max(long, long, long)
    {
        byte $b1, $b3;
        int $i5, $i6;
        long l0, l2, l4;

        l4 := @parameter0: long;

        l0 := @parameter1: long;

        l2 := @parameter2: long;

        $b1 = l0 cmp l4;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        l4 = l0;

     label1:
        $b3 = l2 cmp l4;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label2;

        l4 = l2;

     label2:
        return l4;
    }

    public static int max(int, int, int)
    {
        int i0, i1, i2;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 <= i2 goto label1;

        i2 = i0;

     label1:
        if i1 <= i2 goto label2;

        i2 = i1;

     label2:
        return i2;
    }

    public static short max(short, short, short)
    {
        short s0, s1, s2;
        int $i3, $i4, $i5, $i6;

        s2 := @parameter0: short;

        s0 := @parameter1: short;

        s1 := @parameter2: short;

        $i3 = (int) s0;

        $i4 = (int) s2;

        if $i3 <= $i4 goto label1;

        s2 = s0;

     label1:
        $i5 = (int) s1;

        $i6 = (int) s2;

        if $i5 <= $i6 goto label2;

        s2 = s1;

     label2:
        return s2;
    }

    public static byte max(byte, byte, byte)
    {
        byte b0, b1, b2;
        int $i3, $i4, $i5, $i6;

        b2 := @parameter0: byte;

        b0 := @parameter1: byte;

        b1 := @parameter2: byte;

        $i3 = (int) b0;

        $i4 = (int) b2;

        if $i3 <= $i4 goto label1;

        b2 = b0;

     label1:
        $i5 = (int) b1;

        $i6 = (int) b2;

        if $i5 <= $i6 goto label2;

        b2 = b1;

     label2:
        return b2;
    }

    public static double max(double, double, double)
    {
        double d0, d1, $d2, d3, $d4;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d3 := @parameter2: double;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d2, d3);

        return $d4;
    }

    public static float max(float, float, float)
    {
        float f0, f1, $f2, f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f3 := @parameter2: float;

        $f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        $f4 = staticinvoke <java.lang.Math: float max(float,float)>($f2, f3);

        return $f4;
    }

    public static int compare(double, double)
    {
        long $l2, $l3;
        byte $b0, $b1, $b4, $b5;
        int $i6, $i8, $i9, $i10, $i12;
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpg d1;

        $i6 = (int) $b0;

        if $i6 >= 0 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        $b1 = d0 cmpl d1;

        $i9 = (int) $b1;

        if $i9 <= 0 goto label2;

        return 1;

     label2:
        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label3;

        return 0;

     label3:
        $b5 = $l2 cmp $l3;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label4;

        $i12 = (int) -1;

        return $i12;

     label4:
        return 1;
    }

    public static int compare(float, float)
    {
        byte $b0, $b1;
        int $i2, $i3, $i4, $i6, $i7, $i9;
        float f0, f1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpg f1;

        $i4 = (int) $b0;

        if $i4 >= 0 goto label1;

        $i6 = (int) -1;

        return $i6;

     label1:
        $b1 = f0 cmpl f1;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label2;

        return 1;

     label2:
        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        if $i2 != $i3 goto label3;

        return 0;

     label3:
        if $i2 >= $i3 goto label4;

        $i9 = (int) -1;

        return $i9;

     label4:
        return 1;
    }

    public static boolean isDigits(java.lang.String)
    {
        int $i0, i2;
        char $c1;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean isNumber(java.lang.String)
    {
        byte b1, $b36, $b37;
        java.lang.String r0;
        char[] $r1;
        boolean $z0, z1, z2, z3, z4, $z6, $z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, $z20, $z21, $z22;
        int $i2, $i10, $i22, $i24, i31, i32, i33, i34, $i35, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        char $c0, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c11, $c12, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c21, $c23, $c25, $c26, $c27, $c28, $c29, $c30;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i31 = lengthof $r1;

        z1 = 0;

        z19 = 0;

        z18 = 0;

        z17 = 0;

        z2 = 0;

        z3 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z4 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        $c0 = $r1[0];

        $i38 = (int) $c0;

        if $i38 != 45 goto label02;

        $z22 = 1;

        $z21 = 1;

        $b37 = 1;

        $z20 = 1;

        $b36 = 1;

        goto label03;

     label02:
        $z22 = 0;

        $z21 = 0;

        $b37 = 0;

        $z20 = 0;

        $b36 = 0;

     label03:
        b1 = $b36;

        $i2 = $z20 + 1;

        if i31 <= $i2 goto label10;

        $c21 = $r1[$b37];

        $i39 = (int) $c21;

        if $i39 != 48 goto label10;

        $i22 = $z21 + 1;

        $c23 = $r1[$i22];

        $i40 = (int) $c23;

        if $i40 != 120 goto label10;

        i32 = $z22 + 2;

        if i32 != i31 goto label04;

        return 0;

     label04:
        $i24 = lengthof $r1;

        if i32 >= $i24 goto label09;

        $c25 = $r1[i32];

        $i41 = (int) $c25;

        if $i41 < 48 goto label05;

        $c30 = $r1[i32];

        $i42 = (int) $c30;

        if $i42 <= 57 goto label08;

     label05:
        $c26 = $r1[i32];

        $i43 = (int) $c26;

        if $i43 < 97 goto label06;

        $c29 = $r1[i32];

        $i44 = (int) $c29;

        if $i44 <= 102 goto label08;

     label06:
        $c27 = $r1[i32];

        $i45 = (int) $c27;

        if $i45 < 65 goto label07;

        $c28 = $r1[i32];

        $i46 = (int) $c28;

        if $i46 <= 70 goto label08;

     label07:
        return 0;

     label08:
        i32 = i32 + 1;

        goto label04;

     label09:
        return 1;

     label10:
        $i48 = (int) -1;

        i33 = i31 + $i48;

        i34 = b1;

     label11:
        if i34 < i33 goto label12;

        $i10 = i33 + 1;

        if i34 >= $i10 goto label25;

        if z11 == 0 goto label25;

        if z13 != 0 goto label25;

     label12:
        $c3 = $r1[i34];

        $i49 = (int) $c3;

        if $i49 < 48 goto label13;

        $c9 = $r1[i34];

        $i50 = (int) $c9;

        if $i50 > 57 goto label13;

        z4 = 1;

        z16 = 1;

        z15 = 1;

        z14 = 1;

        z13 = 1;

        z12 = 1;

        z3 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        goto label24;

     label13:
        $c4 = $r1[i34];

        $i51 = (int) $c4;

        if $i51 != 46 goto label16;

        if z2 != 0 goto label14;

        if z17 == 0 goto label15;

     label14:
        return 0;

     label15:
        z2 = 1;

        goto label24;

     label16:
        $c5 = $r1[i34];

        $i52 = (int) $c5;

        if $i52 == 101 goto label17;

        $c6 = $r1[i34];

        $i53 = (int) $c6;

        if $i53 != 69 goto label20;

     label17:
        if z18 == 0 goto label18;

        return 0;

     label18:
        if z15 != 0 goto label19;

        return 0;

     label19:
        z1 = 1;

        z19 = 1;

        z18 = 1;

        z17 = 1;

        z3 = 1;

        z11 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        goto label24;

     label20:
        $c7 = $r1[i34];

        $i54 = (int) $c7;

        if $i54 == 43 goto label21;

        $c8 = $r1[i34];

        $i55 = (int) $c8;

        if $i55 != 45 goto label23;

     label21:
        if z8 != 0 goto label22;

        return 0;

     label22:
        z3 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z4 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        goto label24;

     label23:
        return 0;

     label24:
        i34 = i34 + 1;

        goto label11;

     label25:
        $i35 = lengthof $r1;

        if i34 >= $i35 goto label35;

        $c11 = $r1[i34];

        $i56 = (int) $c11;

        if $i56 < 48 goto label26;

        $c20 = $r1[i34];

        $i57 = (int) $c20;

        if $i57 > 57 goto label26;

        return 1;

     label26:
        $c12 = $r1[i34];

        $i58 = (int) $c12;

        if $i58 == 101 goto label27;

        $c13 = $r1[i34];

        $i59 = (int) $c13;

        if $i59 != 69 goto label28;

     label27:
        return 0;

     label28:
        if z9 != 0 goto label30;

        $c16 = $r1[i34];

        $i60 = (int) $c16;

        if $i60 == 100 goto label29;

        $c17 = $r1[i34];

        $i61 = (int) $c17;

        if $i61 == 68 goto label29;

        $c18 = $r1[i34];

        $i62 = (int) $c18;

        if $i62 == 102 goto label29;

        $c19 = $r1[i34];

        $i63 = (int) $c19;

        if $i63 != 70 goto label30;

     label29:
        return z16;

     label30:
        $c14 = $r1[i34];

        $i64 = (int) $c14;

        if $i64 == 108 goto label31;

        $c15 = $r1[i34];

        $i65 = (int) $c15;

        if $i65 != 76 goto label34;

     label31:
        if z14 == 0 goto label32;

        if z19 != 0 goto label32;

        $z6 = 1;

        goto label33;

     label32:
        $z6 = 0;

     label33:
        return $z6;

     label34:
        return 0;

     label35:
        if z10 != 0 goto label36;

        if z12 == 0 goto label36;

        $z7 = 1;

        goto label37;

     label36:
        $z7 = 0;

     label37:
        return $z7;
    }

    static void <clinit>()
    {
        java.lang.Float $r33, $r34, $r35;
        java.lang.Double $r30, $r31, $r32;
        java.lang.Integer $r21, $r22, $r23;
        short $s3;
        java.lang.Long $r18, $r19, $r20;
        java.lang.Short $r24, $r25, $r26;
        int $i1;
        java.lang.Byte $r27, $r28, $r29;

        $r18 = new java.lang.Long;

        specialinvoke $r18.<java.lang.Long: void <init>(long)>(0L);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Long LONG_ZERO> = $r18;

        $r19 = new java.lang.Long;

        specialinvoke $r19.<java.lang.Long: void <init>(long)>(1L);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Long LONG_ONE> = $r19;

        $r20 = new java.lang.Long;

        specialinvoke $r20.<java.lang.Long: void <init>(long)>(-1L);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Long LONG_MINUS_ONE> = $r20;

        $r21 = new java.lang.Integer;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>(0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Integer INTEGER_ZERO> = $r21;

        $r22 = new java.lang.Integer;

        specialinvoke $r22.<java.lang.Integer: void <init>(int)>(1);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Integer INTEGER_ONE> = $r22;

        $r23 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r23.<java.lang.Integer: void <init>(int)>($i1);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Integer INTEGER_MINUS_ONE> = $r23;

        $r24 = new java.lang.Short;

        specialinvoke $r24.<java.lang.Short: void <init>(short)>(0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Short SHORT_ZERO> = $r24;

        $r25 = new java.lang.Short;

        specialinvoke $r25.<java.lang.Short: void <init>(short)>(1);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Short SHORT_ONE> = $r25;

        $r26 = new java.lang.Short;

        $s3 = (short) -1;

        specialinvoke $r26.<java.lang.Short: void <init>(short)>($s3);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Short SHORT_MINUS_ONE> = $r26;

        $r27 = new java.lang.Byte;

        specialinvoke $r27.<java.lang.Byte: void <init>(byte)>(0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Byte BYTE_ZERO> = $r27;

        $r28 = new java.lang.Byte;

        specialinvoke $r28.<java.lang.Byte: void <init>(byte)>(1);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Byte BYTE_ONE> = $r28;

        $r29 = new java.lang.Byte;

        specialinvoke $r29.<java.lang.Byte: void <init>(byte)>(-1);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Byte BYTE_MINUS_ONE> = $r29;

        $r30 = new java.lang.Double;

        specialinvoke $r30.<java.lang.Double: void <init>(double)>(0.0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Double DOUBLE_ZERO> = $r30;

        $r31 = new java.lang.Double;

        specialinvoke $r31.<java.lang.Double: void <init>(double)>(1.0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Double DOUBLE_ONE> = $r31;

        $r32 = new java.lang.Double;

        specialinvoke $r32.<java.lang.Double: void <init>(double)>(-1.0);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Double DOUBLE_MINUS_ONE> = $r32;

        $r33 = new java.lang.Float;

        specialinvoke $r33.<java.lang.Float: void <init>(float)>(0.0F);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Float FLOAT_ZERO> = $r33;

        $r34 = new java.lang.Float;

        specialinvoke $r34.<java.lang.Float: void <init>(float)>(1.0F);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Float FLOAT_ONE> = $r34;

        $r35 = new java.lang.Float;

        specialinvoke $r35.<java.lang.Float: void <init>(float)>(-1.0F);

        <org.apache.commons.lang.math.NumberUtils: java.lang.Float FLOAT_MINUS_ONE> = $r35;

        return;
    }
}
