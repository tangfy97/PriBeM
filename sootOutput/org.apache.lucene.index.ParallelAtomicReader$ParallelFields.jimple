final class org.apache.lucene.index.ParallelAtomicReader$ParallelFields extends org.apache.lucene.index.Fields
{
    final java.util.Map fields;
    final org.apache.lucene.index.ParallelAtomicReader this$0;

    void <init>(org.apache.lucene.index.ParallelAtomicReader)
    {
        org.apache.lucene.index.ParallelAtomicReader$ParallelFields r0;
        java.util.TreeMap $r2;
        org.apache.lucene.index.ParallelAtomicReader r1;

        r0 := @this: org.apache.lucene.index.ParallelAtomicReader$ParallelFields;

        r1 := @parameter0: org.apache.lucene.index.ParallelAtomicReader;

        r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: org.apache.lucene.index.ParallelAtomicReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.Fields: void <init>()>();

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: java.util.Map fields> = $r2;

        return;
    }

    void addField(java.lang.String, org.apache.lucene.index.Terms)
    {
        org.apache.lucene.index.Terms r2;
        java.util.Map $r3;
        org.apache.lucene.index.ParallelAtomicReader$ParallelFields r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.ParallelAtomicReader$ParallelFields;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.index.Terms;

        $r3 = r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: java.util.Map fields>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r4;
        java.util.Map $r1;
        java.util.Set $r2, $r3;
        org.apache.lucene.index.ParallelAtomicReader$ParallelFields r0;

        r0 := @this: org.apache.lucene.index.ParallelAtomicReader$ParallelFields;

        $r1 = r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: java.util.Map fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public org.apache.lucene.index.Terms terms(java.lang.String)
    {
        org.apache.lucene.index.Terms $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.lucene.index.ParallelAtomicReader$ParallelFields r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.ParallelAtomicReader$ParallelFields;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: java.util.Map fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.lucene.index.Terms) $r3;

        return $r4;
    }

    public int size()
    {
        int $i0;
        org.apache.lucene.index.ParallelAtomicReader$ParallelFields r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.index.ParallelAtomicReader$ParallelFields;

        $r1 = r0.<org.apache.lucene.index.ParallelAtomicReader$ParallelFields: java.util.Map fields>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }
}
