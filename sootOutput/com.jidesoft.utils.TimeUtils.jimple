public class com.jidesoft.utils.TimeUtils extends java.lang.Object
{
    private static final java.util.logging.Logger logger;

    public void <init>()
    {
        com.jidesoft.utils.TimeUtils r0;

        r0 := @this: com.jidesoft.utils.TimeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Date createTime(java.lang.String) throws java.text.ParseException
    {
        java.text.SimpleDateFormat $r0;
        java.lang.String r1;
        java.util.Date $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd-MMM-yyyy HH:mm:ss");

        $r2 = virtualinvoke $r0.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r1);

        return $r2;
    }

    public static java.lang.Integer mostSignificantDifference(java.util.Calendar, java.util.Calendar)
    {
        java.lang.Integer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        java.util.Calendar r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.logging.Logger $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameYear(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z0 != 0 goto label1;

        $r16 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r16.<java.util.logging.Logger: void info(java.lang.String)>("YEAR");

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        return $r17;

     label1:
        $z1 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameMonth(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z1 != 0 goto label2;

        $r14 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r14.<java.util.logging.Logger: void info(java.lang.String)>("Month");

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        return $r15;

     label2:
        $z2 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameWeek(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z2 != 0 goto label3;

        $r12 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r12.<java.util.logging.Logger: void info(java.lang.String)>("WEEK_OF_YEAR");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        return $r13;

     label3:
        $z3 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameDay(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z3 != 0 goto label4;

        $r10 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r10.<java.util.logging.Logger: void info(java.lang.String)>("DAY_OF_MONTH");

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        return $r11;

     label4:
        $z4 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameHour(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z4 != 0 goto label5;

        $r8 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r8.<java.util.logging.Logger: void info(java.lang.String)>("HOUR_OF_DAY");

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        return $r9;

     label5:
        $z5 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameMinute(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z5 != 0 goto label6;

        $r6 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>("MINUTE");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        return $r7;

     label6:
        $z6 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameSecond(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z6 != 0 goto label7;

        $r4 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r4.<java.util.logging.Logger: void info(java.lang.String)>("SECOND");

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        return $r5;

     label7:
        $z7 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameMillis(java.util.Calendar,java.util.Calendar)>(r0, r1);

        if $z7 != 0 goto label8;

        $r2 = <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger>;

        virtualinvoke $r2.<java.util.logging.Logger: void info(java.lang.String)>("MILLISECOND");

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14);

        return $r3;

     label8:
        return null;
    }

    public static boolean isSameYear(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(1, r0, r1);

        return $z0;
    }

    public static boolean isSameMonth(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(2, r0, r1);

        return $z0;
    }

    public static boolean isSameWeek(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(3, r0, r1);

        return $z0;
    }

    public static boolean isSameDay(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(5, r0, r1);

        return $z0;
    }

    public static boolean isSameHour(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(11, r0, r1);

        return $z0;
    }

    public static boolean isSameMinute(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(12, r0, r1);

        return $z0;
    }

    public static boolean isSameSecond(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(13, r0, r1);

        return $z0;
    }

    public static boolean isSameMillis(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        boolean $z0;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $z0 = staticinvoke <com.jidesoft.utils.TimeUtils: boolean isSameInField(int,java.util.Calendar,java.util.Calendar)>(14, r0, r1);

        return $z0;
    }

    public static boolean isSameInField(int, java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        int i0, $i1, $i2;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Calendar;

        r1 := @parameter2: java.util.Calendar;

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(i0);

        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(i0);

        if $i1 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static double yearsDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double weeksDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d1 = $d0 / 52.0;

        return $d1;
    }

    public static double weeksDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double daysDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d1 = $d0 / 7.0;

        return $d1;
    }

    public static double daysDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double hoursDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d1 = $d0 / 24.0;

        return $d1;
    }

    public static double hoursDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double minutesDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d1 = $d0 / 60.0;

        return $d1;
    }

    public static double minutesDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double secondsDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d1 = $d0 / 60.0;

        return $d1;
    }

    public static double secondsDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        long $l0;
        double $d0, $d1;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $l0 = staticinvoke <com.jidesoft.utils.TimeUtils: long millisDiff(java.util.Calendar,java.util.Calendar)>(r0, r1);

        $d0 = (double) $l0;

        $d1 = $d0 / 1000.0;

        return $d1;
    }

    public static long millisDiff(java.util.Calendar, java.util.Calendar)
    {
        java.util.Calendar r0, r1;
        long $l0, $l1, $l2, $l3;

        r0 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $l0 = virtualinvoke r0.<java.util.Calendar: long getTimeInMillis()>();

        $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        $l2 = $l0 - $l1;

        $l3 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        return $l3;
    }

    public static java.util.Calendar min(java.util.Calendar, java.util.Calendar)
    {
        long $l0;
        java.util.Calendar $r0, r1, r2;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        int $i7, $i8, $i9, $i10, $i11, $i12;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r2 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double yearsDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b1 = $d0 cmpl 1.0;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label1;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(3, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        goto label6;

     label1:
        $d1 = staticinvoke <com.jidesoft.utils.TimeUtils: double weeksDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b2 = $d1 cmpl 1.0;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label2;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        goto label6;

     label2:
        $d2 = staticinvoke <com.jidesoft.utils.TimeUtils: double daysDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b3 = $d2 cmpl 1.0;

        $i9 = (int) $b3;

        if $i9 <= 0 goto label3;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        return $r0;

     label3:
        $d3 = staticinvoke <com.jidesoft.utils.TimeUtils: double hoursDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b4 = $d3 cmpl 1.0;

        $i10 = (int) $b4;

        if $i10 <= 0 goto label4;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        goto label6;

     label4:
        $d4 = staticinvoke <com.jidesoft.utils.TimeUtils: double minutesDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b5 = $d4 cmpl 1.0;

        $i11 = (int) $b5;

        if $i11 <= 0 goto label5;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        goto label6;

     label5:
        $d5 = staticinvoke <com.jidesoft.utils.TimeUtils: double secondsDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b6 = $d5 cmpl 1.0;

        $i12 = (int) $b6;

        if $i12 <= 0 goto label6;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(13, 1);

     label6:
        return $r0;
    }

    public static java.util.Calendar max(java.util.Calendar, java.util.Calendar)
    {
        long $l0;
        java.util.Calendar $r0, r1, r2;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        int $i7, $i8, $i9, $i10, $i11, $i12;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r2 := @parameter0: java.util.Calendar;

        r1 := @parameter1: java.util.Calendar;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        $d0 = staticinvoke <com.jidesoft.utils.TimeUtils: double yearsDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b1 = $d0 cmpl 1.0;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label1;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(3, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(2, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(5, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(1, 1);

        goto label6;

     label1:
        $d1 = staticinvoke <com.jidesoft.utils.TimeUtils: double weeksDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b2 = $d1 cmpl 1.0;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label2;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label6;

     label2:
        $d2 = staticinvoke <com.jidesoft.utils.TimeUtils: double daysDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b3 = $d2 cmpl 1.0;

        $i9 = (int) $b3;

        if $i9 <= 0 goto label3;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(5, 1);

        goto label6;

     label3:
        $d3 = staticinvoke <com.jidesoft.utils.TimeUtils: double hoursDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b4 = $d3 cmpl 1.0;

        $i10 = (int) $b4;

        if $i10 <= 0 goto label4;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(11, 1);

        goto label6;

     label4:
        $d4 = staticinvoke <com.jidesoft.utils.TimeUtils: double minutesDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b5 = $d4 cmpl 1.0;

        $i11 = (int) $b5;

        if $i11 <= 0 goto label5;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(12, 1);

        goto label6;

     label5:
        $d5 = staticinvoke <com.jidesoft.utils.TimeUtils: double secondsDiff(java.util.Calendar,java.util.Calendar)>(r2, r1);

        $b6 = $d5 cmpl 1.0;

        $i12 = (int) $b6;

        if $i12 <= 0 goto label6;

        virtualinvoke $r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke $r0.<java.util.Calendar: void add(int,int)>(13, 1);

     label6:
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/jidesoft/utils/TimeUtils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.jidesoft.utils.TimeUtils: java.util.logging.Logger logger> = $r2;

        return;
    }
}
