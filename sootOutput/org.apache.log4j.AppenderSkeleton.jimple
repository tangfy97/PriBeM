public abstract class org.apache.log4j.AppenderSkeleton extends java.lang.Object implements org.apache.log4j.Appender, org.apache.log4j.spi.OptionHandler
{
    protected org.apache.log4j.Layout layout;
    protected java.lang.String name;
    protected org.apache.log4j.Priority threshold;
    protected org.apache.log4j.spi.ErrorHandler errorHandler;
    protected org.apache.log4j.spi.Filter headFilter;
    protected org.apache.log4j.spi.Filter tailFilter;
    protected boolean closed;

    public void <init>()
    {
        org.apache.log4j.helpers.OnlyOnceErrorHandler $r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.log4j.helpers.OnlyOnceErrorHandler;

        specialinvoke $r1.<org.apache.log4j.helpers.OnlyOnceErrorHandler: void <init>()>();

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler> = $r1;

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 0;

        return;
    }

    protected void <init>(boolean)
    {
        org.apache.log4j.helpers.OnlyOnceErrorHandler $r1;
        org.apache.log4j.AppenderSkeleton r0;
        boolean z0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.log4j.helpers.OnlyOnceErrorHandler;

        specialinvoke $r1.<org.apache.log4j.helpers.OnlyOnceErrorHandler: void <init>()>();

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler> = $r1;

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 0;

        return;
    }

    public void activateOptions()
    {
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        return;
    }

    public void addFilter(org.apache.log4j.spi.Filter)
    {
        org.apache.log4j.AppenderSkeleton r0;
        org.apache.log4j.spi.Filter $r1, r2, $r3;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r2 := @parameter0: org.apache.log4j.spi.Filter;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter>;

        if $r1 != null goto label1;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter tailFilter> = r2;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter tailFilter>;

        virtualinvoke $r3.<org.apache.log4j.spi.Filter: void setNext(org.apache.log4j.spi.Filter)>(r2);

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter tailFilter> = r2;

     label2:
        return;
    }

    protected abstract void append(org.apache.log4j.spi.LoggingEvent);

    public void clearFilters()
    {
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter tailFilter> = null;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter> = null;

        return;
    }

    public void finalize()
    {
        org.apache.log4j.AppenderSkeleton r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $z0 = r0.<org.apache.log4j.AppenderSkeleton: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Finalizing appender named [");

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        interfaceinvoke r0.<org.apache.log4j.Appender: void close()>();

        return;
    }

    public org.apache.log4j.spi.ErrorHandler getErrorHandler()
    {
        org.apache.log4j.spi.ErrorHandler $r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        return $r1;
    }

    public org.apache.log4j.spi.Filter getFilter()
    {
        org.apache.log4j.AppenderSkeleton r0;
        org.apache.log4j.spi.Filter $r1;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter>;

        return $r1;
    }

    public final org.apache.log4j.spi.Filter getFirstFilter()
    {
        org.apache.log4j.AppenderSkeleton r0;
        org.apache.log4j.spi.Filter $r1;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter>;

        return $r1;
    }

    public org.apache.log4j.Layout getLayout()
    {
        org.apache.log4j.Layout $r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        return $r1;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        return $r1;
    }

    public org.apache.log4j.Priority getThreshold()
    {
        org.apache.log4j.Priority $r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Priority threshold>;

        return $r1;
    }

    public boolean isAsSevereAsThreshold(org.apache.log4j.Priority)
    {
        org.apache.log4j.Priority $r1, r2, $r3;
        org.apache.log4j.AppenderSkeleton r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r2 := @parameter0: org.apache.log4j.Priority;

        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Priority threshold>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Priority threshold>;

        $z0 = virtualinvoke r2.<org.apache.log4j.Priority: boolean isGreaterOrEqual(org.apache.log4j.Priority)>($r3);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public synchronized void doAppend(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.AppenderSkeleton r0;
        org.apache.log4j.spi.Filter r9;
        java.lang.StringBuffer $r3, $r4, $r6, $r7;
        org.apache.log4j.Level $r2;
        int $i0;
        java.lang.String $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $z0 = r0.<org.apache.log4j.AppenderSkeleton: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempted to append to closed appender named [");

        $r5 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String)>($r8);

        return;

     label1:
        $r2 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $z1 = virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: boolean isAsSevereAsThreshold(org.apache.log4j.Priority)>($r2);

        if $z1 != 0 goto label2;

        return;

     label2:
        r9 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.Filter headFilter>;

     label3:
        if r9 == null goto label8;

        $i0 = virtualinvoke r9.<org.apache.log4j.spi.Filter: int decide(org.apache.log4j.spi.LoggingEvent)>(r1);

        tableswitch($i0)
        {
            case -1: goto label4;
            case 0: goto label6;
            case 1: goto label5;
            default: goto label7;
        };

     label4:
        return;

     label5:
        goto label8;

     label6:
        r9 = virtualinvoke r9.<org.apache.log4j.spi.Filter: org.apache.log4j.spi.Filter getNext()>();

     label7:
        goto label3;

     label8:
        virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: void append(org.apache.log4j.spi.LoggingEvent)>(r1);

        return;
    }

    public synchronized void setErrorHandler(org.apache.log4j.spi.ErrorHandler)
    {
        org.apache.log4j.spi.ErrorHandler r0;
        org.apache.log4j.AppenderSkeleton r1;

        r1 := @this: org.apache.log4j.AppenderSkeleton;

        r0 := @parameter0: org.apache.log4j.spi.ErrorHandler;

        if r0 != null goto label1;

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("You have tried to set a null error-handler.");

        goto label2;

     label1:
        r1.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler> = r0;

     label2:
        return;
    }

    public void setLayout(org.apache.log4j.Layout)
    {
        org.apache.log4j.Layout r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r1 := @parameter0: org.apache.log4j.Layout;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = r1;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name> = r1;

        return;
    }

    public void setThreshold(org.apache.log4j.Priority)
    {
        org.apache.log4j.Priority r1;
        org.apache.log4j.AppenderSkeleton r0;

        r0 := @this: org.apache.log4j.AppenderSkeleton;

        r1 := @parameter0: org.apache.log4j.Priority;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Priority threshold> = r1;

        return;
    }

    public abstract boolean requiresLayout();

    public abstract void close();
}
