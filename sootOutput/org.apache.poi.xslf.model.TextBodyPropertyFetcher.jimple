public abstract class org.apache.poi.xslf.model.TextBodyPropertyFetcher extends org.apache.poi.xslf.model.PropertyFetcher
{

    public void <init>()
    {
        org.apache.poi.xslf.model.TextBodyPropertyFetcher r0;

        r0 := @this: org.apache.poi.xslf.model.TextBodyPropertyFetcher;

        specialinvoke r0.<org.apache.poi.xslf.model.PropertyFetcher: void <init>()>();

        return;
    }

    public boolean fetch(org.apache.poi.xslf.usermodel.XSLFSimpleShape)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties r4;
        org.apache.poi.xslf.model.TextBodyPropertyFetcher r5;
        org.apache.poi.xslf.usermodel.XSLFSimpleShape r0;
        org.apache.xmlbeans.XmlObject[] $r2;
        int $i0;
        org.apache.xmlbeans.XmlObject $r1, $r3;
        boolean $z0;

        r5 := @this: org.apache.poi.xslf.model.TextBodyPropertyFetcher;

        r0 := @parameter0: org.apache.poi.xslf.usermodel.XSLFSimpleShape;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSimpleShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace p=\'http://schemas.openxmlformats.org/presentationml/2006/main\' declare namespace a=\'http://schemas.openxmlformats.org/drawingml/2006/main\' .//p:txBody/a:bodyPr");

        $i0 = lengthof $r2;

        if $i0 != 1 goto label1;

        $r3 = $r2[0];

        r4 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties) $r3;

        $z0 = virtualinvoke r5.<org.apache.poi.xslf.model.TextBodyPropertyFetcher: boolean fetch(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties)>(r4);

        return $z0;

     label1:
        return 0;
    }

    public abstract boolean fetch(org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties);
}
