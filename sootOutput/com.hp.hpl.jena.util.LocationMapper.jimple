public class com.hp.hpl.jena.util.LocationMapper extends java.lang.Object
{
    static org.slf4j.Logger log;
    public static final java.lang.String DEFAULT_PATH;
    public static final java.lang.String GlobalMapperSystemProperty1;
    public static final java.lang.String GlobalMapperSystemProperty2;
    static java.lang.String s_globalMapperPath;
    java.util.Map altLocations;
    java.util.Map altPrefixes;
    static com.hp.hpl.jena.util.LocationMapper theMapper;

    public static com.hp.hpl.jena.util.LocationMapper get()
    {
        com.hp.hpl.jena.util.LocationMapper $r0, $r1, $r3, $r5;
        java.lang.String $r2, $r4;

        $r0 = <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper>;

        if $r0 != null goto label1;

        $r1 = new com.hp.hpl.jena.util.LocationMapper;

        specialinvoke $r1.<com.hp.hpl.jena.util.LocationMapper: void <init>()>();

        <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.util.LocationMapper: java.lang.String getGlobalConfigPath()>();

        if $r2 == null goto label1;

        $r3 = <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper>;

        $r4 = staticinvoke <com.hp.hpl.jena.util.LocationMapper: java.lang.String getGlobalConfigPath()>();

        specialinvoke $r3.<com.hp.hpl.jena.util.LocationMapper: void initFromPath(java.lang.String,boolean)>($r4, 0);

     label1:
        $r5 = <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper>;

        return $r5;
    }

    public static void setGlobalLocationMapper(com.hp.hpl.jena.util.LocationMapper)
    {
        com.hp.hpl.jena.util.LocationMapper r0;

        r0 := @parameter0: com.hp.hpl.jena.util.LocationMapper;

        <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper> = r0;

        return;
    }

    public static com.hp.hpl.jena.util.LocationMapper makeGlobal()
    {
        java.lang.String $r1, $r2;
        com.hp.hpl.jena.util.LocationMapper $r0;

        $r0 = new com.hp.hpl.jena.util.LocationMapper;

        specialinvoke $r0.<com.hp.hpl.jena.util.LocationMapper: void <init>()>();

        $r1 = staticinvoke <com.hp.hpl.jena.util.LocationMapper: java.lang.String getGlobalConfigPath()>();

        if $r1 == null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.util.LocationMapper: java.lang.String getGlobalConfigPath()>();

        specialinvoke $r0.<com.hp.hpl.jena.util.LocationMapper: void initFromPath(java.lang.String,boolean)>($r2, 0);

     label1:
        return $r0;
    }

    public void <init>()
    {
        java.util.HashMap $r1, $r2;
        com.hp.hpl.jena.util.LocationMapper r0;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes> = $r2;

        return;
    }

    public void <init>(com.hp.hpl.jena.util.LocationMapper)
    {
        com.hp.hpl.jena.util.LocationMapper r0, r3;
        java.util.HashMap $r1, $r2;
        java.util.Map $r4, $r5, $r6, $r7;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r3 := @parameter0: com.hp.hpl.jena.util.LocationMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes> = $r2;

        $r5 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r4 = r3.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        $r7 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r6 = r3.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>($r6);

        return;
    }

    public void <init>(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        com.hp.hpl.jena.rdf.model.Model r3;
        java.util.HashMap $r1, $r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes> = $r2;

        virtualinvoke r0.<com.hp.hpl.jena.util.LocationMapper: void processConfig(com.hp.hpl.jena.rdf.model.Model)>(r3);

        return;
    }

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.HashMap $r1, $r2;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes> = $r2;

        specialinvoke r0.<com.hp.hpl.jena.util.LocationMapper: void initFromPath(java.lang.String,boolean)>(r3, 1);

        return;
    }

    private void initFromPath(java.lang.String, boolean)
    {
        com.hp.hpl.jena.shared.JenaException $r16;
        java.util.StringTokenizer $r5;
        int $i0, $i1;
        com.hp.hpl.jena.util.FileManager $r2;
        java.lang.String r0, $r6, $r13, $r14, $r20, $r22, r23;
        boolean $z0, z1;
        org.slf4j.Logger $r1, $r10, $r17;
        com.hp.hpl.jena.util.LocationMapper r8;
        com.hp.hpl.jena.rdf.model.Model $r7;
        java.lang.Class $r3;
        java.lang.StringBuilder $r9, $r11, $r12, $r18, $r19, $r21;
        java.lang.ClassLoader $r4;
        java.io.InputStream $r15, r24;

        r8 := @this: com.hp.hpl.jena.util.LocationMapper;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r1 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>("Null configuration");

        return;

     label02:
        $r2 = new com.hp.hpl.jena.util.FileManager;

        specialinvoke $r2.<com.hp.hpl.jena.util.FileManager: void <init>()>();

        virtualinvoke $r2.<com.hp.hpl.jena.util.FileManager: void addLocatorFile()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r2.<com.hp.hpl.jena.util.FileManager: void addLocatorClassLoader(java.lang.ClassLoader)>($r4);

     label03:
        r23 = null;

        r24 = null;

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ";");

     label04:
        $z0 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label07;

        $r14 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if $r14 == null goto label07;

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i1 != 0 goto label05;

        goto label07;

     label05:
        $r15 = virtualinvoke $r2.<com.hp.hpl.jena.util.FileManager: java.io.InputStream openNoMap(java.lang.String)>($r14);

        r24 = $r15;

        if $r15 == null goto label06;

        r23 = $r14;

        goto label07;

     label06:
        goto label04;

     label07:
        if r24 != null goto label09;

        if z1 != 0 goto label08;

        $r10 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find configuration: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String)>($r13);

     label08:
        return;

     label09:
        $r6 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String guessLang(java.lang.String)>(r23);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.InputStream,java.lang.String,java.lang.String)>(r24, r23, $r6);

        virtualinvoke r8.<com.hp.hpl.jena.util.LocationMapper: void processConfig(com.hp.hpl.jena.rdf.model.Model)>($r7);

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

        $r17 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/util/LocationMapper;");

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in configuration file: ");

        $r20 = virtualinvoke $r16.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String)>($r22);

     label12:
        return;

        catch com.hp.hpl.jena.shared.JenaException from label03 to label08 with label11;
        catch com.hp.hpl.jena.shared.JenaException from label09 to label10 with label11;
    }

    public java.lang.String altMapping(java.lang.String)
    {
        java.lang.String r1, $r2;
        com.hp.hpl.jena.util.LocationMapper r0;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.util.LocationMapper: java.lang.String altMapping(java.lang.String,java.lang.String)>(r1, r1);

        return $r2;
    }

    public java.lang.String altMapping(java.lang.String, java.lang.String)
    {
        java.util.Map $r2, $r3, $r14, $r17;
        int $i0, $i1, $i2;
        java.lang.String r1, r6, $r9, $r11, r13, r16, $r19, r20, r21;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Set $r4;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Object $r12, $r15, $r18;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r17 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r19 = (java.lang.String) $r18;

        return $r19;

     label1:
        r20 = null;

        r21 = null;

        $r3 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r13);

        if $z2 == 0 goto label4;

        $r14 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r16 = (java.lang.String) $r15;

        if r20 == null goto label3;

        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        $i2 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

     label3:
        r21 = r13;

        r20 = r16;

     label4:
        goto label2;

     label5:
        if r20 == null goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label6:
        return r6;
    }

    public void addAltEntry(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addAltPrefix(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator listAltEntries()
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        $r1 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Iterator listAltPrefixes()
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        $r1 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public void removeAltEntry(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void removeAltPrefix(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getAltEntry(java.lang.String)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getAltPrefix(java.lang.String)
    {
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    private static java.lang.String getGlobalConfigPath()
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("http://jena.hpl.hp.com/2004/08/LocationMap", null);

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath> = $r5;

     label1:
        $r1 = <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath>;

        if $r1 != null goto label2;

        $r4 = staticinvoke <com.hp.hpl.jena.JenaRuntime: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("LocationMap", null);

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath> = $r4;

     label2:
        $r2 = <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath>;

        if $r2 != null goto label3;

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath> = "file:location-mapping.rdf;file:location-mapping.n3;file:location-mapping.ttl;file:etc/location-mapping.rdf;file:etc/location-mapping.n3;file:etc/location-mapping.ttl";

     label3:
        $r3 = <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath>;

        return $r3;
    }

    public int hashCode()
    {
        java.util.Map $r1, $r4, $r8, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r13, r14, r15, r16;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r6;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Set $r2, $r5;
        java.lang.Object $r7, $r9, $r10, $r12;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        i6 = 0;

        $r1 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r10;

        $r11 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (java.lang.String) $r12;

        $i3 = virtualinvoke r13.<java.lang.String: int hashCode()>();

        $i4 = i6 ^ $i3;

        $i5 = virtualinvoke r14.<java.lang.String: int hashCode()>();

        i6 = $i4 ^ $i5;

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r7;

        $r8 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (java.lang.String) $r9;

        $i0 = virtualinvoke r15.<java.lang.String: int hashCode()>();

        $i1 = i6 ^ $i0;

        $i2 = virtualinvoke r16.<java.lang.String: int hashCode()>();

        i6 = $i1 ^ $i2;

        goto label3;

     label4:
        return i6;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r3, $r4, $r5, $r6, $r7, $r10, $r14, $r16, $r20, $r22;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.util.LocationMapper r1, r2;
        java.util.Set $r8, $r11;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r18, $r24, r25, r26, r27, r28;
        java.util.Iterator $r9, $r12;
        java.lang.Object r0, $r13, $r15, $r17, $r19, $r21, $r23;

        r2 := @this: com.hp.hpl.jena.util.LocationMapper;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.util.LocationMapper;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.util.LocationMapper) r0;

        $r3 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = r1.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $i1 = interfaceinvoke $r4.<java.util.Map: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r5 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $i2 = interfaceinvoke $r5.<java.util.Map: int size()>();

        $r6 = r1.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $i3 = interfaceinvoke $r6.<java.util.Map: int size()>();

        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $r7 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r19 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r19;

        $r20 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        r26 = (java.lang.String) $r21;

        $r22 = r1.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25);

        $r24 = (java.lang.String) $r23;

        $z4 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r26);

        if $z4 != 0 goto label5;

        return 0;

     label5:
        goto label4;

     label6:
        $r10 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r13;

        $r14 = r2.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r27);

        r28 = (java.lang.String) $r15;

        $r16 = r1.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r27);

        $r18 = (java.lang.String) $r17;

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r28);

        if $z3 != 0 goto label8;

        return 0;

     label8:
        goto label7;

     label9:
        return 1;
    }

    public java.lang.String toString()
    {
        java.util.Map $r1, $r4, $r8, $r18;
        boolean $z0, $z1;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Set $r2, $r5;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        java.lang.String r27, r28, r29, r30, r31;
        java.util.Iterator $r3, $r6;
        java.lang.Object $r7, $r9, $r17, $r19;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r27 = "";

        $r1 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.String) $r17;

        $r18 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r28);

        r29 = (java.lang.String) $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Loc:");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.String) $r7;

        $r8 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r30);

        r31 = (java.lang.String) $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Prefix:");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        r27 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label4:
        return r27;
    }

    public com.hp.hpl.jena.rdf.model.Model toModel()
    {
        com.hp.hpl.jena.rdf.model.Model $r0;
        com.hp.hpl.jena.util.LocationMapper r1;

        r1 := @this: com.hp.hpl.jena.util.LocationMapper;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>("lmap", "http://jena.hpl.hp.com/2004/08/location-mapping#");

        virtualinvoke r1.<com.hp.hpl.jena.util.LocationMapper: void toModel(com.hp.hpl.jena.rdf.model.Model)>($r0);

        return $r0;
    }

    public void toModel(com.hp.hpl.jena.rdf.model.Model)
    {
        java.util.Map $r1, $r4, $r12, $r20;
        com.hp.hpl.jena.rdf.model.Property $r10, $r14, $r15, $r18, $r22, $r23;
        java.lang.String r24, r25, r26, r27;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r6;
        com.hp.hpl.jena.util.LocationMapper r0;
        java.util.Set $r2, $r5;
        com.hp.hpl.jena.rdf.model.Resource $r8, $r9, $r16, $r17;
        com.hp.hpl.jena.rdf.model.Model r7;
        java.lang.Object $r11, $r13, $r19, $r21;

        r0 := @this: com.hp.hpl.jena.util.LocationMapper;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r17 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r18 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property mapping>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r16, $r18, $r17);

        $r19 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r19;

        $r20 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altLocations>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        r25 = (java.lang.String) $r21;

        $r22 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property name>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r17, $r22, r24);

        $r23 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altName>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r17, $r23, r25);

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r9 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource()>();

        $r10 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property mapping>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r8, $r10, $r9);

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r11;

        $r12 = r0.<com.hp.hpl.jena.util.LocationMapper: java.util.Map altPrefixes>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        r27 = (java.lang.String) $r13;

        $r14 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property prefix>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r9, $r14, r26);

        $r15 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altPrefix>;

        interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r9, $r15, r27);

        goto label3;

     label4:
        return;
    }

    public void processConfig(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1, $r5, $r6, $r7, $r10, $r21, $r24;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.util.LocationMapper r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r19, $r27, $r29, $r30, $r31, $r32, $r35, $r37, $r39, $r42, $r44, $r46;
        com.hp.hpl.jena.shared.JenaException $r34, $r41;
        java.lang.String $r9, $r12, $r20, $r23, $r26, $r33, $r38, $r40, $r45, $r47;
        org.slf4j.Logger $r15, $r28, $r36, $r43;
        com.hp.hpl.jena.rdf.model.Statement $r3, $r8, $r11, $r22, $r25;
        com.hp.hpl.jena.rdf.model.Resource $r4;
        com.hp.hpl.jena.rdf.model.Model r0;

        r13 := @this: com.hp.hpl.jena.util.LocationMapper;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property mapping>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r1, null);

     label01:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getResource()>();

        $r5 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property name>;

        $z1 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r5);

        if $z1 == 0 goto label05;

     label02:
        $r21 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property name>;

        $r22 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r21);

        $r23 = interfaceinvoke $r22.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getString()>();

        $r24 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altName>;

        $r25 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r24);

        $r26 = interfaceinvoke $r25.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getString()>();

        virtualinvoke r13.<com.hp.hpl.jena.util.LocationMapper: void addAltEntry(java.lang.String,java.lang.String)>($r23, $r26);

        $r28 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mapping: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r33);

     label03:
        goto label05;

     label04:
        $r41 := @caughtexception;

        $r43 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing name mapping: ");

        $r45 = virtualinvoke $r41.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r43.<org.slf4j.Logger: void warn(java.lang.String)>($r47);

        return;

     label05:
        $r6 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property prefix>;

        $z2 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: boolean hasProperty(com.hp.hpl.jena.rdf.model.Property)>($r6);

        if $z2 == 0 goto label09;

     label06:
        $r7 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property prefix>;

        $r8 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r7);

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getString()>();

        $r10 = <com.hp.hpl.jena.vocabulary.LocationMappingVocab: com.hp.hpl.jena.rdf.model.Property altPrefix>;

        $r11 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Statement getRequiredProperty(com.hp.hpl.jena.rdf.model.Property)>($r10);

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Statement: java.lang.String getString()>();

        virtualinvoke r13.<com.hp.hpl.jena.util.LocationMapper: void addAltPrefix(java.lang.String,java.lang.String)>($r9, $r12);

        $r15 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefix mapping: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>($r20);

     label07:
        goto label09;

     label08:
        $r34 := @caughtexception;

        $r36 = <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing prefix mapping: ");

        $r38 = virtualinvoke $r34.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String)>($r40);

        return;

     label09:
        goto label01;

     label10:
        return;

        catch com.hp.hpl.jena.shared.JenaException from label02 to label03 with label04;
        catch com.hp.hpl.jena.shared.JenaException from label06 to label07 with label08;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String GlobalMapperSystemProperty2> = "LocationMap";

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String GlobalMapperSystemProperty1> = "http://jena.hpl.hp.com/2004/08/LocationMap";

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String DEFAULT_PATH> = "file:location-mapping.rdf;file:location-mapping.n3;file:location-mapping.ttl;file:etc/location-mapping.rdf;file:etc/location-mapping.n3;file:etc/location-mapping.ttl";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/util/LocationMapper;");

        <com.hp.hpl.jena.util.LocationMapper: org.slf4j.Logger log> = $r0;

        <com.hp.hpl.jena.util.LocationMapper: java.lang.String s_globalMapperPath> = null;

        <com.hp.hpl.jena.util.LocationMapper: com.hp.hpl.jena.util.LocationMapper theMapper> = null;

        return;
    }
}
