public final class com.google.common.base.Strings extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.base.Strings r0;

        r0 := @this: com.google.common.base.Strings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String nullToEmpty(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r1 = "";

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static java.lang.String emptyToNull(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static boolean isNullOrEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static java.lang.String padStart(java.lang.String, int, char)
    {
        int $i0, i1, i3;
        java.lang.StringBuilder $r1;
        char c2;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        c2 := @parameter2: char;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < i1 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(i1);

        i3 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        if i3 >= i1 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        i3 = i3 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String padEnd(java.lang.String, int, char)
    {
        int $i0, i1, i3;
        java.lang.StringBuilder $r1;
        char c2;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        c2 := @parameter2: char;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < i1 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        i3 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        if i3 >= i1 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String repeat(java.lang.String, int)
    {
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r3;
        java.lang.String r0, $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "invalid count: %s", $r1);

        $r3 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 * i0;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);

        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
