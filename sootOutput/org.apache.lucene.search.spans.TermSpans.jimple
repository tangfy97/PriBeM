public class org.apache.lucene.search.spans.TermSpans extends org.apache.lucene.search.spans.Spans
{
    protected final org.apache.lucene.index.DocsAndPositionsEnum postings;
    protected final org.apache.lucene.index.Term term;
    protected int doc;
    protected int freq;
    protected int count;
    protected int position;
    protected boolean readPayload;
    public static final org.apache.lucene.search.spans.TermSpans EMPTY_TERM_SPANS;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.DocsAndPositionsEnum, org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.DocsAndPositionsEnum r1;
        org.apache.lucene.search.spans.TermSpans r0;
        org.apache.lucene.index.Term r2;
        int $i1;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        r1 := @parameter0: org.apache.lucene.index.DocsAndPositionsEnum;

        r2 := @parameter1: org.apache.lucene.index.Term;

        specialinvoke r0.<org.apache.lucene.search.spans.Spans: void <init>()>();

        r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings> = r1;

        r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.Term term> = r2;

        $i1 = (int) -1;

        r0.<org.apache.lucene.search.spans.TermSpans: int doc> = $i1;

        return;
    }

    void <init>()
    {
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        specialinvoke r0.<org.apache.lucene.search.spans.Spans: void <init>()>();

        r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.Term term> = null;

        r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings> = null;

        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.index.DocsAndPositionsEnum $r1, $r2, $r3, $r4;
        org.apache.lucene.search.spans.TermSpans r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $i1 = r0.<org.apache.lucene.search.spans.TermSpans: int count>;

        $i0 = r0.<org.apache.lucene.search.spans.TermSpans: int freq>;

        if $i1 != $i0 goto label3;

        $r2 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i5 = virtualinvoke $r3.<org.apache.lucene.index.DocsAndPositionsEnum: int nextDoc()>();

        r0.<org.apache.lucene.search.spans.TermSpans: int doc> = $i5;

        $i6 = r0.<org.apache.lucene.search.spans.TermSpans: int doc>;

        if $i6 != 2147483647 goto label2;

        return 0;

     label2:
        $r4 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i7 = virtualinvoke $r4.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        r0.<org.apache.lucene.search.spans.TermSpans: int freq> = $i7;

        r0.<org.apache.lucene.search.spans.TermSpans: int count> = 0;

     label3:
        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i2 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        r0.<org.apache.lucene.search.spans.TermSpans: int position> = $i2;

        $i3 = r0.<org.apache.lucene.search.spans.TermSpans: int count>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.search.spans.TermSpans: int count> = $i4;

        r0.<org.apache.lucene.search.spans.TermSpans: boolean readPayload> = 0;

        return 1;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        java.lang.AssertionError $r4;
        org.apache.lucene.index.DocsAndPositionsEnum $r1, $r2, $r3;
        org.apache.lucene.search.spans.TermSpans r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        i0 := @parameter0: int;

        $z0 = <org.apache.lucene.search.spans.TermSpans: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i7 = r0.<org.apache.lucene.search.spans.TermSpans: int doc>;

        if i0 > $i7 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: int advance(int)>(i0);

        r0.<org.apache.lucene.search.spans.TermSpans: int doc> = $i1;

        $i2 = r0.<org.apache.lucene.search.spans.TermSpans: int doc>;

        if $i2 != 2147483647 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i3 = virtualinvoke $r2.<org.apache.lucene.index.DocsAndPositionsEnum: int freq()>();

        r0.<org.apache.lucene.search.spans.TermSpans: int freq> = $i3;

        r0.<org.apache.lucene.search.spans.TermSpans: int count> = 0;

        $r3 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $i4 = virtualinvoke $r3.<org.apache.lucene.index.DocsAndPositionsEnum: int nextPosition()>();

        r0.<org.apache.lucene.search.spans.TermSpans: int position> = $i4;

        $i5 = r0.<org.apache.lucene.search.spans.TermSpans: int count>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.search.spans.TermSpans: int count> = $i6;

        r0.<org.apache.lucene.search.spans.TermSpans: boolean readPayload> = 0;

        return 1;
    }

    public int doc()
    {
        int $i0;
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $i0 = r0.<org.apache.lucene.search.spans.TermSpans: int doc>;

        return $i0;
    }

    public int start()
    {
        int $i0;
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $i0 = r0.<org.apache.lucene.search.spans.TermSpans: int position>;

        return $i0;
    }

    public int end()
    {
        int $i0, $i1;
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $i0 = r0.<org.apache.lucene.search.spans.TermSpans: int position>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public long cost()
    {
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        long $l0;
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: long cost()>();

        return $l0;
    }

    public java.util.Collection getPayload() throws java.io.IOException
    {
        byte[] $r4, r5;
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        java.util.List $r3;
        org.apache.lucene.search.spans.TermSpans r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        r0.<org.apache.lucene.search.spans.TermSpans: boolean readPayload> = 1;

        if $r2 == null goto label1;

        $i0 = $r2.<org.apache.lucene.util.BytesRef: int length>;

        r5 = newarray (byte)[$i0];

        $r4 = $r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i2 = $r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i1 = $r2.<org.apache.lucene.util.BytesRef: int length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i2, r5, 0, $i1);

        goto label2;

     label1:
        r5 = null;

     label2:
        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5);

        return $r3;
    }

    public boolean isPayloadAvailable() throws java.io.IOException
    {
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.search.spans.TermSpans r0;
        org.apache.lucene.util.BytesRef $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $z0 = r0.<org.apache.lucene.search.spans.TermSpans: boolean readPayload>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DocsAndPositionsEnum: org.apache.lucene.util.BytesRef getPayload()>();

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.Term $r3;
        org.apache.lucene.search.spans.TermSpans r2;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r4, $r11, $r13;
        java.lang.StringBuilder $r1, $r5, $r7, $r8, $r9, $r10, $r12, $r14, $r15;

        r2 := @this: org.apache.lucene.search.spans.TermSpans;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("spans(");

        $r3 = r2.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.Term term>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.index.Term: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")@");

        $i0 = r2.<org.apache.lucene.search.spans.TermSpans: int doc>;

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        $r11 = "START";

        goto label3;

     label1:
        $i1 = r2.<org.apache.lucene.search.spans.TermSpans: int doc>;

        if $i1 != 2147483647 goto label2;

        $r11 = "END";

        goto label3;

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $i2 = r2.<org.apache.lucene.search.spans.TermSpans: int doc>;

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i3 = r2.<org.apache.lucene.search.spans.TermSpans: int position>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum getPostings()
    {
        org.apache.lucene.index.DocsAndPositionsEnum $r1;
        org.apache.lucene.search.spans.TermSpans r0;

        r0 := @this: org.apache.lucene.search.spans.TermSpans;

        $r1 = r0.<org.apache.lucene.search.spans.TermSpans: org.apache.lucene.index.DocsAndPositionsEnum postings>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.lucene.search.spans.TermSpans$EmptyTermSpans $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/spans/TermSpans;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.spans.TermSpans: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.search.spans.TermSpans$EmptyTermSpans;

        specialinvoke $r1.<org.apache.lucene.search.spans.TermSpans$EmptyTermSpans: void <init>(org.apache.lucene.search.spans.TermSpans$1)>(null);

        <org.apache.lucene.search.spans.TermSpans: org.apache.lucene.search.spans.TermSpans EMPTY_TERM_SPANS> = $r1;

        return;
    }
}
