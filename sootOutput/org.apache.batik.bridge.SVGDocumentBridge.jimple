public class org.apache.batik.bridge.SVGDocumentBridge extends java.lang.Object implements org.apache.batik.bridge.DocumentBridge, org.apache.batik.bridge.BridgeUpdateHandler, org.apache.batik.dom.svg.SVGContext
{
    protected org.w3c.dom.Document document;
    protected org.apache.batik.gvt.RootGraphicsNode node;
    protected org.apache.batik.bridge.BridgeContext ctx;

    public void <init>()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return null;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return null;
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGDocumentBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        $r0 = new org.apache.batik.bridge.SVGDocumentBridge;

        specialinvoke $r0.<org.apache.batik.bridge.SVGDocumentBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.gvt.RootGraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Document)
    {
        org.apache.batik.gvt.RootGraphicsNode $r0;
        org.w3c.dom.Document r2;
        org.apache.batik.bridge.BridgeContext r3;
        org.apache.batik.bridge.SVGDocumentBridge r1;
        org.apache.batik.dom.svg.SVGOMDocument $r4;

        r1 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Document;

        $r0 = new org.apache.batik.gvt.RootGraphicsNode;

        specialinvoke $r0.<org.apache.batik.gvt.RootGraphicsNode: void <init>()>();

        r1.<org.apache.batik.bridge.SVGDocumentBridge: org.w3c.dom.Document document> = r2;

        r1.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.gvt.RootGraphicsNode node> = $r0;

        r1.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx> = r3;

        $r4 = (org.apache.batik.dom.svg.SVGOMDocument) r2;

        virtualinvoke $r4.<org.apache.batik.dom.svg.SVGOMDocument: void setSVGContext(org.apache.batik.dom.svg.SVGContext)>(r1);

        return $r0;
    }

    public void buildGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Document, org.apache.batik.gvt.RootGraphicsNode)
    {
        org.apache.batik.gvt.RootGraphicsNode r2;
        org.w3c.dom.Document r1;
        org.apache.batik.bridge.BridgeContext r0;
        org.apache.batik.bridge.SVGDocumentBridge r3;
        boolean $z0;

        r3 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r0 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r1 := @parameter1: org.w3c.dom.Document;

        r2 := @parameter2: org.apache.batik.gvt.RootGraphicsNode;

        $z0 = virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeContext: void bind(org.w3c.dom.Node,org.apache.batik.gvt.GraphicsNode)>(r1, r2);

     label1:
        return;
    }

    public void handleDOMAttrModifiedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMNodeInsertedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.gvt.GraphicsNode $r8;
        org.apache.batik.bridge.GVTBuilder $r6;
        org.apache.batik.bridge.BridgeContext $r5, $r7;
        org.apache.batik.gvt.RootGraphicsNode $r9;
        org.w3c.dom.Element r3;
        org.w3c.dom.events.EventTarget $r1, $r2;
        org.apache.batik.bridge.SVGDocumentBridge r4;
        org.w3c.dom.events.MutationEvent r0;
        boolean $z0;

        r4 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r0 := @parameter0: org.w3c.dom.events.MutationEvent;

        $r1 = interfaceinvoke r0.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        $z0 = $r1 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<org.w3c.dom.events.Event: org.w3c.dom.events.EventTarget getTarget()>();

        r3 = (org.w3c.dom.Element) $r2;

        $r5 = r4.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r6 = virtualinvoke $r5.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r7 = r4.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r8 = virtualinvoke $r6.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>($r7, r3);

        if $r8 != null goto label1;

        return;

     label1:
        $r9 = r4.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.gvt.RootGraphicsNode node>;

        virtualinvoke $r9.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r8);

     label2:
        return;
    }

    public void handleDOMNodeRemovedEvent(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleDOMCharacterDataModified(org.w3c.dom.events.MutationEvent)
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;
        org.w3c.dom.events.MutationEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: org.w3c.dom.events.MutationEvent;

        return;
    }

    public void handleCSSEngineEvent(org.apache.batik.css.engine.CSSEngineEvent)
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;
        org.apache.batik.css.engine.CSSEngineEvent r1;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngineEvent;

        return;
    }

    public void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)
    {
        org.apache.batik.dom.svg.AnimatedLiveAttributeValue r1;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: org.apache.batik.dom.svg.AnimatedLiveAttributeValue;

        return;
    }

    public void handleOtherAnimationChanged(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void dispose()
    {
        org.w3c.dom.Document $r1, $r3;
        org.apache.batik.bridge.BridgeContext $r4;
        org.apache.batik.bridge.SVGDocumentBridge r0;
        org.apache.batik.dom.svg.SVGOMDocument $r2;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.w3c.dom.Document document>;

        $r2 = (org.apache.batik.dom.svg.SVGOMDocument) $r1;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMDocument: void setSVGContext(org.apache.batik.dom.svg.SVGContext)>(null);

        $r4 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r3 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.w3c.dom.Document document>;

        virtualinvoke $r4.<org.apache.batik.bridge.BridgeContext: void unbind(org.w3c.dom.Node)>($r3);

        return;
    }

    public float getPixelUnitToMillimeter()
    {
        org.apache.batik.bridge.UserAgent $r2;
        float $f0;
        org.apache.batik.bridge.BridgeContext $r1;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $f0 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public float getPixelToMM()
    {
        float $f0;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        $f0 = virtualinvoke r0.<org.apache.batik.bridge.SVGDocumentBridge: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public java.awt.geom.Rectangle2D getBBox()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return null;
    }

    public java.awt.geom.AffineTransform getScreenTransform()
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.bridge.BridgeContext $r1;
        java.awt.geom.AffineTransform $r3;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: java.awt.geom.AffineTransform getTransform()>();

        return $r3;
    }

    public void setScreenTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.apache.batik.bridge.BridgeContext $r1;
        java.awt.geom.AffineTransform r3;
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        r3 := @parameter0: java.awt.geom.AffineTransform;

        $r1 = r0.<org.apache.batik.bridge.SVGDocumentBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        interfaceinvoke $r2.<org.apache.batik.bridge.UserAgent: void setTransform(java.awt.geom.AffineTransform)>(r3);

        return;
    }

    public java.awt.geom.AffineTransform getCTM()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return null;
    }

    public java.awt.geom.AffineTransform getGlobalTransform()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return null;
    }

    public float getViewportWidth()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return 0.0F;
    }

    public float getViewportHeight()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return 0.0F;
    }

    public float getFontSize()
    {
        org.apache.batik.bridge.SVGDocumentBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGDocumentBridge;

        return 0.0F;
    }
}
