class org.apache.lucene.index.BufferedDeletesStream extends java.lang.Object
{
    private final java.util.List deletes;
    private long nextGen;
    private org.apache.lucene.index.Term lastDeleteTerm;
    private final org.apache.lucene.util.InfoStream infoStream;
    private final java.util.concurrent.atomic.AtomicLong bytesUsed;
    private final java.util.concurrent.atomic.AtomicInteger numTerms;
    private static final java.util.Comparator sortSegInfoByDelGen;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.util.InfoStream)
    {
        java.util.concurrent.atomic.AtomicLong $r2;
        org.apache.lucene.index.BufferedDeletesStream r0;
        org.apache.lucene.util.InfoStream r4;
        java.util.concurrent.atomic.AtomicInteger $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r4 := @parameter0: org.apache.lucene.util.InfoStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes> = $r1;

        r0.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = 1L;

        $r2 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms> = $r3;

        r0.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream> = r4;

        return;
    }

    public synchronized long push(org.apache.lucene.index.FrozenBufferedDeletes)
    {
        byte $b10, $b13;
        java.util.concurrent.atomic.AtomicInteger $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r10, $r16, $r17, $r18, $r25;
        org.apache.lucene.util.InfoStream $r4, $r28;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r33;
        long $l0, $l1, $l2, $l3, $l5, $l8, $l9, $l11, $l12, $l16;
        java.lang.AssertionError $r29, $r30, $r31, $r32, $r34;
        org.apache.lucene.index.FrozenBufferedDeletes r0, $r20;
        int $i4, $i6, $i7, $i14, $i15, $i17, $i18;
        java.lang.String $r15;
        java.util.concurrent.atomic.AtomicLong $r13, $r27;
        org.apache.lucene.index.BufferedDeletesStream r1;
        java.lang.Object $r19;

        r1 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r0 := @parameter0: org.apache.lucene.index.FrozenBufferedDeletes;

        $l0 = r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $l1 = $l0 + 1L;

        r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = $l1;

        virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: void setDelGen(long)>($l0);

        $z0 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z8 = virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: boolean any()>();

        if $z8 != 0 goto label1;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label1:
        $z1 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z7 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z7 != 0 goto label2;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label2:
        $z2 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $l11 = virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $l12 = r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $b13 = $l11 cmp $l12;

        $i17 = (int) $b13;

        if $i17 < 0 goto label3;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label3:
        $z3 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r16 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $z6 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label4;

        $r18 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r17 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i6 = interfaceinvoke $r17.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>($i7);

        $r20 = (org.apache.lucene.index.FrozenBufferedDeletes) $r19;

        $l8 = virtualinvoke $r20.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $l9 = virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $b10 = $l8 cmp $l9;

        $i18 = (int) $b10;

        if $i18 < 0 goto label4;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>(java.lang.Object)>("Delete packets must be in order");

        throw $r32;

     label4:
        $r25 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r26 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i14 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes>;

        virtualinvoke $r26.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i14);

        $r27 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $i15 = r0.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed>;

        $l16 = (long) $i15;

        virtualinvoke $r27.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l16);

        $r28 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z9 = virtualinvoke $r28.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z9 == 0 goto label5;

        $r4 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("push deletes ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delGen=");

        $l3 = virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packetCount=");

        $r10 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" totBytesUsed=");

        $r13 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l5 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r15);

     label5:
        $z4 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z4 != 0 goto label6;

        $z5 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z5 != 0 goto label6;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label6:
        $l2 = virtualinvoke r0.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        return $l2;
    }

    public synchronized void clear()
    {
        java.util.concurrent.atomic.AtomicLong $r3;
        java.util.List $r1;
        org.apache.lucene.index.BufferedDeletesStream r0;
        java.util.concurrent.atomic.AtomicInteger $r2;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r0.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = 1L;

        $r2 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

        $r3 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        return;
    }

    public boolean any()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.lucene.index.BufferedDeletesStream r0;
        byte $b1;
        long $l0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int numTerms()
    {
        int $i0;
        org.apache.lucene.index.BufferedDeletesStream r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public long bytesUsed()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;
        org.apache.lucene.index.BufferedDeletesStream r0;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public synchronized org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult applyDeletes(org.apache.lucene.index.IndexWriter$ReaderPool, java.util.List) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentInfoPerCommit $r23, $r24, $r39, $r47, $r48, $r66, $r80;
        byte $b23, $b40;
        org.apache.lucene.store.IOContext $r19, $r44;
        org.apache.lucene.index.SegmentInfo $r25, $r40, $r49, $r67;
        org.apache.lucene.util.InfoStream $r2, $r6, $r9, $r27, $r52, $r82, $r89, $r91, $r99, $r102;
        java.lang.StringBuilder $r10, $r11, $r12, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r74, $r75, $r83, $r84, $r85, $r87, $r108, $r111, $r116, $r121, $r123;
        long $l0, $l2, $l3, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l22, $l24, $l25, $l26, $l31, $l32, $l33, $l34, $l35, $l36, $l39, $l42, $l43, $l44, $l45;
        org.apache.lucene.index.FrozenBufferedDeletes r15, $r98;
        org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult $r105, $r107, $r124;
        int $i1, $i4, $i5, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i27, $i28, $i29, $i30, $i37, $i38, $i41, i46, i47, i48, i49, $i50, $i52, $i54, $i56, $i58;
        org.apache.lucene.index.BufferedDeletesStream r1;
        org.apache.lucene.index.IndexWriter$ReaderPool r17;
        java.lang.Object $r16, $r79, $r100, $r103;
        java.util.Comparator $r4;
        org.apache.lucene.index.CoalescedDeletes r96, $r110, $r117;
        org.apache.lucene.index.ReadersAndLiveDocs $r18, $r43;
        java.lang.Throwable $r94, $r95;
        java.lang.AssertionError $r106, $r112, $r113, $r114, $r118, $r119, $r122;
        java.util.ArrayList r97, $r109, $r115, $r120;
        java.lang.String $r13, $r37, $r64, $r76, $r88, $r101, $r104;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20, z21, $z22, $z23, $z24, z25, $z26, $z27;
        java.util.List r0, $r5, $r78, $r86;
        java.lang.Iterable $r21, $r22, $r46, $r69, $r70;
        org.apache.lucene.index.SegmentReader $r20, $r45;

        r1 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r17 := @parameter0: org.apache.lucene.index.IndexWriter$ReaderPool;

        r0 := @parameter1: java.util.List;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 0 goto label01;

        $r105 = new org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult;

        $l44 = r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $l45 = $l44 + 1L;

        r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = $l45;

        specialinvoke $r105.<org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult: void <init>(boolean,long,java.util.List)>(0, $l44, null);

        return $r105;

     label01:
        $z0 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z18 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z18 != 0 goto label02;

        $r106 = new java.lang.AssertionError;

        specialinvoke $r106.<java.lang.AssertionError: void <init>()>();

        throw $r106;

     label02:
        $z1 = virtualinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: boolean any()>();

        if $z1 != 0 goto label04;

        $r89 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z17 = virtualinvoke $r89.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z17 == 0 goto label03;

        $r91 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r91.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", "applyDeletes: no deletes; skipping");

     label03:
        $r107 = new org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult;

        $l42 = r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $l43 = $l42 + 1L;

        r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = $l43;

        specialinvoke $r107.<org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult: void <init>(boolean,long,java.util.List)>(0, $l42, null);

        return $r107;

     label04:
        $r2 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r2.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z2 == 0 goto label05;

        $r82 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyDeletes: infos=");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packetCount=");

        $r86 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i41 = interfaceinvoke $r86.<java.util.List: int size()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r88);

     label05:
        $l2 = r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $l3 = $l2 + 1L;

        r1.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = $l3;

        $r109 = new java.util.ArrayList;

        specialinvoke $r109.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r109.<java.util.List: boolean addAll(java.util.Collection)>(r0);

        $r4 = <org.apache.lucene.index.BufferedDeletesStream: java.util.Comparator sortSegInfoByDelGen>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r109, $r4);

        r96 = null;

        z19 = 0;

        $i4 = interfaceinvoke $r109.<java.util.List: int size()>();

        i46 = $i4 - 1;

        $r5 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i5 = interfaceinvoke $r5.<java.util.List: int size()>();

        i47 = $i5 - 1;

        r97 = null;

     label06:
        if i46 < 0 goto label53;

        if i47 < 0 goto label07;

        $r78 = r1.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r79 = interfaceinvoke $r78.<java.util.List: java.lang.Object get(int)>(i47);

        $r98 = (org.apache.lucene.index.FrozenBufferedDeletes) $r79;

        goto label08;

     label07:
        $r98 = null;

     label08:
        r15 = $r98;

        $r16 = interfaceinvoke $r109.<java.util.List: java.lang.Object get(int)>(i46);

        $r80 = (org.apache.lucene.index.SegmentInfoPerCommit) $r16;

        $l8 = virtualinvoke $r80.<org.apache.lucene.index.SegmentInfoPerCommit: long getBufferedDeletesGen()>();

        if $r98 == null goto label11;

        $l39 = virtualinvoke $r98.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $b40 = $l8 cmp $l39;

        $i50 = (int) $b40;

        if $i50 >= 0 goto label11;

        if r96 != null goto label09;

        $r110 = new org.apache.lucene.index.CoalescedDeletes;

        specialinvoke $r110.<org.apache.lucene.index.CoalescedDeletes: void <init>()>();

        r96 = $r110;

     label09:
        $z16 = r15.<org.apache.lucene.index.FrozenBufferedDeletes: boolean isSegmentPrivate>;

        if $z16 != 0 goto label10;

        virtualinvoke r96.<org.apache.lucene.index.CoalescedDeletes: void update(org.apache.lucene.index.FrozenBufferedDeletes)>(r15);

     label10:
        $i52 = (int) -1;

        i47 = i47 + $i52;

        goto label52;

     label11:
        if r15 == null goto label33;

        $l22 = virtualinvoke r15.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $b23 = $l8 cmp $l22;

        if $b23 != 0 goto label33;

        $z10 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z10 != 0 goto label12;

        $z15 = r15.<org.apache.lucene.index.FrozenBufferedDeletes: boolean isSegmentPrivate>;

        if $z15 != 0 goto label12;

        $r112 = new java.lang.AssertionError;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Packet and Segments deletegen can only match on a segment private del packet gen=");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r112.<java.lang.AssertionError: void <init>(java.lang.Object)>($r76);

        throw $r112;

     label12:
        $z11 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z11 != 0 goto label13;

        $z14 = virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: boolean infoIsLive(org.apache.lucene.index.SegmentInfoPerCommit)>($r80);

        if $z14 != 0 goto label13;

        $r113 = new java.lang.AssertionError;

        specialinvoke $r113.<java.lang.AssertionError: void <init>()>();

        throw $r113;

     label13:
        $r43 = virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: org.apache.lucene.index.ReadersAndLiveDocs get(org.apache.lucene.index.SegmentInfoPerCommit,boolean)>($r80, 1);

        $r44 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext READ>;

        $r45 = virtualinvoke $r43.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentReader getReader(org.apache.lucene.store.IOContext)>($r44);

        i48 = 0;

     label14:
        if r96 == null goto label15;

        $l31 = (long) 0;

        $r69 = virtualinvoke r96.<org.apache.lucene.index.CoalescedDeletes: java.lang.Iterable termsIterable()>();

        $l32 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: long applyTermDeletes(java.lang.Iterable,org.apache.lucene.index.ReadersAndLiveDocs,org.apache.lucene.index.SegmentReader)>($r69, $r43, $r45);

        $l33 = $l31 + $l32;

        i49 = (int) $l33;

        $l34 = (long) i49;

        $r70 = virtualinvoke r96.<org.apache.lucene.index.CoalescedDeletes: java.lang.Iterable queriesIterable()>();

        $l35 = staticinvoke <org.apache.lucene.index.BufferedDeletesStream: long applyQueryDeletes(java.lang.Iterable,org.apache.lucene.index.ReadersAndLiveDocs,org.apache.lucene.index.SegmentReader)>($r70, $r43, $r45);

        $l36 = $l34 + $l35;

        i48 = (int) $l36;

     label15:
        $l24 = (long) i48;

        $r46 = virtualinvoke r15.<org.apache.lucene.index.FrozenBufferedDeletes: java.lang.Iterable queriesIterable()>();

        $l25 = staticinvoke <org.apache.lucene.index.BufferedDeletesStream: long applyQueryDeletes(java.lang.Iterable,org.apache.lucene.index.ReadersAndLiveDocs,org.apache.lucene.index.SegmentReader)>($r46, $r43, $r45);

        $l26 = $l24 + $l25;

        $i37 = (int) $l26;

        $r47 = $r43.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $i27 = virtualinvoke $r47.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i28 = virtualinvoke $r43.<org.apache.lucene.index.ReadersAndLiveDocs: int getPendingDeleteCount()>();

        $i38 = $i27 + $i28;

        $z12 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z12 != 0 goto label16;

        $r66 = $r43.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $r67 = $r66.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i30 = virtualinvoke $r67.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i38 <= $i30 goto label16;

        $r114 = new java.lang.AssertionError;

        specialinvoke $r114.<java.lang.AssertionError: void <init>()>();

        throw $r114;

     label16:
        $r48 = $r43.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $r49 = $r48.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i29 = virtualinvoke $r49.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i38 != $i29 goto label17;

        $z20 = 1;

        goto label18;

     label17:
        $z20 = 0;

     label18:
        z21 = $z20;

     label19:
        virtualinvoke $r43.<org.apache.lucene.index.ReadersAndLiveDocs: void release(org.apache.lucene.index.SegmentReader)>($r45);

        virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: void release(org.apache.lucene.index.ReadersAndLiveDocs)>($r43);

        goto label22;

     label20:
        $r95 := @caughtexception;

     label21:
        virtualinvoke $r43.<org.apache.lucene.index.ReadersAndLiveDocs: void release(org.apache.lucene.index.SegmentReader)>($r45);

        virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: void release(org.apache.lucene.index.ReadersAndLiveDocs)>($r43);

        throw $r95;

     label22:
        $z13 = z19;

        if $i37 <= 0 goto label23;

        $z22 = 1;

        goto label24;

     label23:
        $z22 = 0;

     label24:
        z19 = $z13 | $z22;

        if z21 == 0 goto label26;

        if r97 != null goto label25;

        $r115 = new java.util.ArrayList;

        specialinvoke $r115.<java.util.ArrayList: void <init>()>();

        r97 = $r115;

     label25:
        interfaceinvoke r97.<java.util.List: boolean add(java.lang.Object)>($r80);

     label26:
        $r99 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z23 = virtualinvoke $r99.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z23 == 0 goto label31;

        $r52 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seg=");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" segGen=");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" segDeletes=[");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]; coalesced deletes=[");

        if r96 != null goto label27;

        $r100 = "null";

        goto label28;

     label27:
        $r100 = r96;

     label28:
        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r100);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] newDelCount=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        if z21 == 0 goto label29;

        $r101 = " 100% deleted";

        goto label30;

     label29:
        $r101 = "";

     label30:
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r64);

     label31:
        if r96 != null goto label32;

        $r117 = new org.apache.lucene.index.CoalescedDeletes;

        specialinvoke $r117.<org.apache.lucene.index.CoalescedDeletes: void <init>()>();

        r96 = $r117;

     label32:
        $i54 = (int) -1;

        i47 = i47 + $i54;

        $i56 = (int) -1;

        i46 = i46 + $i56;

        virtualinvoke $r80.<org.apache.lucene.index.SegmentInfoPerCommit: void setBufferedDeletesGen(long)>($l2);

        goto label52;

     label33:
        if r96 == null goto label51;

        $z6 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z6 != 0 goto label34;

        $z9 = virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: boolean infoIsLive(org.apache.lucene.index.SegmentInfoPerCommit)>($r80);

        if $z9 != 0 goto label34;

        $r118 = new java.lang.AssertionError;

        specialinvoke $r118.<java.lang.AssertionError: void <init>()>();

        throw $r118;

     label34:
        $r18 = virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: org.apache.lucene.index.ReadersAndLiveDocs get(org.apache.lucene.index.SegmentInfoPerCommit,boolean)>($r80, 1);

        $r19 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext READ>;

        $r20 = virtualinvoke $r18.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentReader getReader(org.apache.lucene.store.IOContext)>($r19);

     label35:
        $l9 = (long) 0;

        $r21 = virtualinvoke r96.<org.apache.lucene.index.CoalescedDeletes: java.lang.Iterable termsIterable()>();

        $l10 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: long applyTermDeletes(java.lang.Iterable,org.apache.lucene.index.ReadersAndLiveDocs,org.apache.lucene.index.SegmentReader)>($r21, $r18, $r20);

        $l11 = $l9 + $l10;

        $i19 = (int) $l11;

        $l12 = (long) $i19;

        $r22 = virtualinvoke r96.<org.apache.lucene.index.CoalescedDeletes: java.lang.Iterable queriesIterable()>();

        $l13 = staticinvoke <org.apache.lucene.index.BufferedDeletesStream: long applyQueryDeletes(java.lang.Iterable,org.apache.lucene.index.ReadersAndLiveDocs,org.apache.lucene.index.SegmentReader)>($r22, $r18, $r20);

        $l14 = $l12 + $l13;

        $i20 = (int) $l14;

        $r23 = $r18.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $i15 = virtualinvoke $r23.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i16 = virtualinvoke $r18.<org.apache.lucene.index.ReadersAndLiveDocs: int getPendingDeleteCount()>();

        $i21 = $i15 + $i16;

        $z7 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z7 != 0 goto label36;

        $r39 = $r18.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $r40 = $r39.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i18 = virtualinvoke $r40.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i21 <= $i18 goto label36;

        $r119 = new java.lang.AssertionError;

        specialinvoke $r119.<java.lang.AssertionError: void <init>()>();

        throw $r119;

     label36:
        $r24 = $r18.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.index.SegmentInfoPerCommit info>;

        $r25 = $r24.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i17 = virtualinvoke $r25.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i21 != $i17 goto label37;

        $z24 = 1;

        goto label38;

     label37:
        $z24 = 0;

     label38:
        z25 = $z24;

     label39:
        virtualinvoke $r18.<org.apache.lucene.index.ReadersAndLiveDocs: void release(org.apache.lucene.index.SegmentReader)>($r20);

        virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: void release(org.apache.lucene.index.ReadersAndLiveDocs)>($r18);

        goto label42;

     label40:
        $r94 := @caughtexception;

     label41:
        virtualinvoke $r18.<org.apache.lucene.index.ReadersAndLiveDocs: void release(org.apache.lucene.index.SegmentReader)>($r20);

        virtualinvoke r17.<org.apache.lucene.index.IndexWriter$ReaderPool: void release(org.apache.lucene.index.ReadersAndLiveDocs)>($r18);

        throw $r94;

     label42:
        $z8 = z19;

        if $i20 <= 0 goto label43;

        $z26 = 1;

        goto label44;

     label43:
        $z26 = 0;

     label44:
        z19 = $z8 | $z26;

        if z25 == 0 goto label46;

        if r97 != null goto label45;

        $r120 = new java.util.ArrayList;

        specialinvoke $r120.<java.util.ArrayList: void <init>()>();

        r97 = $r120;

     label45:
        interfaceinvoke r97.<java.util.List: boolean add(java.lang.Object)>($r80);

     label46:
        $r102 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z27 = virtualinvoke $r102.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z27 == 0 goto label51;

        $r27 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seg=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" segGen=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" coalesced deletes=[");

        if r96 != null goto label47;

        $r103 = "null";

        goto label48;

     label47:
        $r103 = r96;

     label48:
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r103);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] newDelCount=");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        if z25 == 0 goto label49;

        $r104 = " 100% deleted";

        goto label50;

     label49:
        $r104 = "";

     label50:
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r37);

     label51:
        virtualinvoke $r80.<org.apache.lucene.index.SegmentInfoPerCommit: void setBufferedDeletesGen(long)>($l2);

        $i58 = (int) -1;

        i46 = i46 + $i58;

     label52:
        goto label06;

     label53:
        $z3 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z3 != 0 goto label54;

        $z5 = specialinvoke r1.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z5 != 0 goto label54;

        $r122 = new java.lang.AssertionError;

        specialinvoke $r122.<java.lang.AssertionError: void <init>()>();

        throw $r122;

     label54:
        $r6 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z4 == 0 goto label55;

        $r9 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("applyDeletes took ");

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = $l6 - $l0;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r13);

     label55:
        $r124 = new org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult;

        specialinvoke $r124.<org.apache.lucene.index.BufferedDeletesStream$ApplyDeletesResult: void <init>(boolean,long,java.util.List)>(z19, $l2, r97);

        return $r124;

        catch java.lang.Throwable from label14 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label35 to label39 with label40;
        catch java.lang.Throwable from label40 to label41 with label40;
    }

    synchronized long getNextGen()
    {
        long $l0, $l1;
        org.apache.lucene.index.BufferedDeletesStream r0;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        $l0 = r0.<org.apache.lucene.index.BufferedDeletesStream: long nextGen>;

        $l1 = $l0 + 1L;

        r0.<org.apache.lucene.index.BufferedDeletesStream: long nextGen> = $l1;

        return $l0;
    }

    public synchronized void prune(org.apache.lucene.index.SegmentInfos)
    {
        org.apache.lucene.index.SegmentInfoPerCommit r23;
        byte $b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.lucene.index.SegmentInfos r0;
        java.util.List $r4, $r7, $r18;
        org.apache.lucene.util.InfoStream $r3, $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r19, $r25;
        long $l1, $l4, l5;
        java.lang.AssertionError $r24, $r26, $r27, $r28;
        org.apache.lucene.index.FrozenBufferedDeletes $r9;
        int $i0, $i3, i6, $i7;
        java.lang.String $r20;
        java.util.Iterator $r1;
        org.apache.lucene.index.BufferedDeletesStream r2;
        java.lang.Object $r8, $r21;

        r2 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r0 := @parameter0: org.apache.lucene.index.SegmentInfos;

        $z0 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z8 = specialinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z8 != 0 goto label01;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label01:
        l5 = 9223372036854775807L;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfos: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label03;

        $r21 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r23 = (org.apache.lucene.index.SegmentInfoPerCommit) $r21;

        $l4 = virtualinvoke r23.<org.apache.lucene.index.SegmentInfoPerCommit: long getBufferedDeletesGen()>();

        l5 = staticinvoke <java.lang.Math: long min(long,long)>($l4, l5);

        goto label02;

     label03:
        $r3 = r2.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z1 == 0 goto label04;

        $r12 = r2.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prune sis=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minGen=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packetCount=");

        $r18 = r2.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i3 = interfaceinvoke $r18.<java.util.List: int size()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r20);

     label04:
        $r4 = r2.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i6 = 0;

     label05:
        if i6 >= $i0 goto label08;

        $r7 = r2.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i6);

        $r9 = (org.apache.lucene.index.FrozenBufferedDeletes) $r8;

        $l1 = virtualinvoke $r9.<org.apache.lucene.index.FrozenBufferedDeletes: long delGen()>();

        $b2 = $l1 cmp l5;

        $i7 = (int) $b2;

        if $i7 < 0 goto label07;

        specialinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: void prune(int)>(i6);

        $z6 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z6 != 0 goto label06;

        $z7 = specialinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z7 != 0 goto label06;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label06:
        return;

     label07:
        i6 = i6 + 1;

        goto label05;

     label08:
        specialinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: void prune(int)>($i0);

        $z2 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        $z5 = virtualinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: boolean any()>();

        if $z5 == 0 goto label09;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label09:
        $z3 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $z4 = specialinvoke r2.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteStats()>();

        if $z4 != 0 goto label10;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label10:
        return;
    }

    private synchronized void prune(int)
    {
        byte $b7;
        java.util.concurrent.atomic.AtomicInteger $r7, $r11;
        boolean $z0, $z1, $z2;
        java.util.List $r2, $r3, $r4, $r18;
        org.apache.lucene.util.InfoStream $r1, $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r20, $r22;
        long $l5, $l6;
        java.lang.AssertionError $r23, $r24;
        org.apache.lucene.index.FrozenBufferedDeletes r6;
        int i0, $i1, $i2, $i3, $i4, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r21;
        java.util.concurrent.atomic.AtomicLong $r8, $r9;
        org.apache.lucene.index.BufferedDeletesStream r0;
        java.lang.Object $r5;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        i0 := @parameter0: int;

        if i0 <= 0 goto label6;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("BD");

        if $z0 == 0 goto label1;

        $r14 = r0.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.util.InfoStream infoStream>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pruneDeletes: prune ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packets; ");

        $r18 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $i9 = interfaceinvoke $r18.<java.util.List: int size()>();

        $i10 = $i9 - i0;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packets remain");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("BD", $r21);

     label1:
        i11 = 0;

     label2:
        if i11 >= i0 goto label5;

        $r4 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i11);

        r6 = (org.apache.lucene.index.FrozenBufferedDeletes) $r5;

        $r7 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i1 = r6.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes>;

        $i2 = neg $i1;

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>($i2);

        $z1 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r11 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i8 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i8 >= 0 goto label3;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label3:
        $r8 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $i3 = r6.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed>;

        $i4 = neg $i3;

        $l5 = (long) $i4;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l5);

        $z2 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r9 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l6 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $b7 = $l6 cmp 0L;

        $i12 = (int) $b7;

        if $i12 >= 0 goto label4;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label4:
        i11 = i11 + 1;

        goto label2;

     label5:
        $r2 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(0, i0);

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label6:
        return;
    }

    private synchronized long applyTermDeletes(java.lang.Iterable, org.apache.lucene.index.ReadersAndLiveDocs, org.apache.lucene.index.SegmentReader) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r1;
        org.apache.lucene.index.Term r5;
        org.apache.lucene.index.TermsEnum r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9;
        org.apache.lucene.index.Terms $r19;
        org.apache.lucene.util.BytesRef $r7;
        org.apache.lucene.index.ReadersAndLiveDocs r8;
        long l2;
        java.lang.AssertionError $r12, $r14, $r15;
        java.lang.Iterable r2;
        int $i0, $i1;
        org.apache.lucene.index.SegmentReader r0;
        java.lang.String $r6, $r13, r17, $r18;
        org.apache.lucene.util.Bits $r9;
        java.util.Iterator $r3;
        org.apache.lucene.index.DocsEnum $r10;
        org.apache.lucene.index.BufferedDeletesStream r11;
        java.lang.Object $r4;

        r11 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r2 := @parameter0: java.lang.Iterable;

        r8 := @parameter1: org.apache.lucene.index.ReadersAndLiveDocs;

        r0 := @parameter2: org.apache.lucene.index.SegmentReader;

        l2 = 0L;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.Fields fields()>();

        if $r1 != null goto label01;

        return 0L;

     label01:
        r16 = null;

        r17 = null;

        $z0 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z7 = specialinvoke r11.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteTerm(org.apache.lucene.index.Term)>(null);

        if $z7 != 0 goto label02;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label02:
        z8 = 0;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z9 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label14;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.index.Term) $r4;

        $r6 = virtualinvoke r5.<org.apache.lucene.index.Term: java.lang.String field()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 != 0 goto label06;

        $z6 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z6 != 0 goto label04;

        if r17 == null goto label04;

        $r13 = virtualinvoke r5.<org.apache.lucene.index.Term: java.lang.String field()>();

        $i1 = virtualinvoke r17.<java.lang.String: int compareTo(java.lang.String)>($r13);

        if $i1 < 0 goto label04;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label04:
        $r18 = virtualinvoke r5.<org.apache.lucene.index.Term: java.lang.String field()>();

        r17 = $r18;

        $r19 = virtualinvoke $r1.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r18);

        if $r19 == null goto label05;

        r16 = virtualinvoke $r19.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        goto label06;

     label05:
        r16 = null;

     label06:
        if r16 != null goto label07;

        goto label03;

     label07:
        $z2 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label08;

        $z5 = specialinvoke r11.<org.apache.lucene.index.BufferedDeletesStream: boolean checkDeleteTerm(org.apache.lucene.index.Term)>(r5);

        if $z5 != 0 goto label08;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label08:
        $r7 = virtualinvoke r5.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $z3 = virtualinvoke r16.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r7, 0);

        if $z3 == 0 goto label13;

        $r9 = virtualinvoke r8.<org.apache.lucene.index.ReadersAndLiveDocs: org.apache.lucene.util.Bits getLiveDocs()>();

        $r10 = virtualinvoke r16.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>($r9, null, 0);

        if $r10 == null goto label13;

     label09:
        $i0 = virtualinvoke $r10.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i0 != 2147483647 goto label10;

        goto label13;

     label10:
        if z8 != 0 goto label11;

        virtualinvoke r8.<org.apache.lucene.index.ReadersAndLiveDocs: void initWritableLiveDocs()>();

        z8 = 1;

     label11:
        $z4 = virtualinvoke r8.<org.apache.lucene.index.ReadersAndLiveDocs: boolean delete(int)>($i0);

        if $z4 == 0 goto label12;

        l2 = l2 + 1L;

     label12:
        goto label09;

     label13:
        goto label03;

     label14:
        return l2;
    }

    private static long applyQueryDeletes(java.lang.Iterable, org.apache.lucene.index.ReadersAndLiveDocs, org.apache.lucene.index.SegmentReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query r6;
        long l2;
        java.lang.Iterable r2;
        org.apache.lucene.search.DocIdSet $r9;
        int i0, $i1;
        org.apache.lucene.index.SegmentReader r0;
        org.apache.lucene.util.Bits $r8;
        boolean $z0, $z1, z2;
        org.apache.lucene.search.DocIdSetIterator $r10;
        java.util.Iterator $r3;
        org.apache.lucene.index.ReadersAndLiveDocs r11;
        org.apache.lucene.search.QueryWrapperFilter $r7;
        org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit r5;
        java.lang.Object $r4;
        org.apache.lucene.index.AtomicReaderContext $r1;

        r2 := @parameter0: java.lang.Iterable;

        r11 := @parameter1: org.apache.lucene.index.ReadersAndLiveDocs;

        r0 := @parameter2: org.apache.lucene.index.SegmentReader;

        l2 = 0L;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.AtomicReaderContext getContext()>();

        z2 = 0;

        $r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit) $r4;

        r6 = r5.<org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit: org.apache.lucene.search.Query query>;

        i0 = r5.<org.apache.lucene.index.BufferedDeletesStream$QueryAndLimit: int limit>;

        $r7 = new org.apache.lucene.search.QueryWrapperFilter;

        specialinvoke $r7.<org.apache.lucene.search.QueryWrapperFilter: void <init>(org.apache.lucene.search.Query)>(r6);

        $r8 = virtualinvoke r0.<org.apache.lucene.index.SegmentReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r9 = virtualinvoke $r7.<org.apache.lucene.search.QueryWrapperFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>($r1, $r8);

        if $r9 == null goto label6;

        $r10 = virtualinvoke $r9.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        if $r10 == null goto label6;

     label2:
        $i1 = virtualinvoke $r10.<org.apache.lucene.search.DocIdSetIterator: int nextDoc()>();

        if $i1 < i0 goto label3;

        goto label6;

     label3:
        if z2 != 0 goto label4;

        virtualinvoke r11.<org.apache.lucene.index.ReadersAndLiveDocs: void initWritableLiveDocs()>();

        z2 = 1;

     label4:
        $z1 = virtualinvoke r11.<org.apache.lucene.index.ReadersAndLiveDocs: boolean delete(int)>($i1);

        if $z1 == 0 goto label5;

        l2 = l2 + 1L;

     label5:
        goto label2;

     label6:
        goto label1;

     label7:
        return l2;
    }

    private boolean checkDeleteTerm(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.Term r0, $r5, $r6, $r10, $r15;
        java.lang.AssertionError $r7;
        int $i0;
        java.lang.String $r2, $r14;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r3, $r4;
        org.apache.lucene.index.BufferedDeletesStream r1;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13;

        r1 := @this: org.apache.lucene.index.BufferedDeletesStream;

        r0 := @parameter0: org.apache.lucene.index.Term;

        if r0 == null goto label1;

        $z0 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.index.Term lastDeleteTerm>;

        if $r5 == null goto label1;

        $r6 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.index.Term lastDeleteTerm>;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r6);

        if $i0 > 0 goto label1;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastTerm=");

        $r10 = r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.index.Term lastDeleteTerm>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs term=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r14);

        throw $r7;

     label1:
        if r0 != null goto label2;

        $r15 = null;

        goto label3;

     label2:
        $r15 = new org.apache.lucene.index.Term;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r3 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r4 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r3);

        specialinvoke $r15.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>($r2, $r4);

     label3:
        r1.<org.apache.lucene.index.BufferedDeletesStream: org.apache.lucene.index.Term lastDeleteTerm> = $r15;

        return 1;
    }

    private boolean checkDeleteStats()
    {
        byte $b1;
        java.util.concurrent.atomic.AtomicInteger $r12, $r18;
        boolean $z0, $z1, $z2;
        java.util.List $r1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r14, $r15, $r16, $r17, $r19;
        long $l0, $l6, l8;
        java.lang.AssertionError $r4, $r13;
        org.apache.lucene.index.FrozenBufferedDeletes r22;
        int $i2, $i3, $i4, $i5, i7;
        java.lang.String $r11, $r20;
        java.util.Iterator $r2;
        java.util.concurrent.atomic.AtomicLong $r3, $r9;
        org.apache.lucene.index.BufferedDeletesStream r0;
        java.lang.Object $r21;

        r0 := @this: org.apache.lucene.index.BufferedDeletesStream;

        i7 = 0;

        l8 = 0L;

        $r1 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.List deletes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r21 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.lucene.index.FrozenBufferedDeletes) $r21;

        $i4 = r22.<org.apache.lucene.index.FrozenBufferedDeletes: int numTermDeletes>;

        i7 = i7 + $i4;

        $i5 = r22.<org.apache.lucene.index.FrozenBufferedDeletes: int bytesUsed>;

        $l6 = (long) $i5;

        l8 = l8 + $l6;

        goto label1;

     label2:
        $z1 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r12 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i2 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i7 == $i2 goto label3;

        $r13 = new java.lang.AssertionError;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numTerms2=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r18 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicInteger numTerms>;

        $i3 = virtualinvoke $r18.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r20);

        throw $r13;

     label3:
        $z2 = <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r3 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $b1 = l8 cmp $l0;

        if $b1 == 0 goto label4;

        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytesUsed2=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r9 = r0.<org.apache.lucene.index.BufferedDeletesStream: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r4;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.lucene.index.BufferedDeletesStream$1 $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/BufferedDeletesStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.BufferedDeletesStream: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.index.BufferedDeletesStream$1;

        specialinvoke $r1.<org.apache.lucene.index.BufferedDeletesStream$1: void <init>()>();

        <org.apache.lucene.index.BufferedDeletesStream: java.util.Comparator sortSegInfoByDelGen> = $r1;

        return;
    }
}
