class org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableIntMap$ProcV
{
    static final boolean $assertionsDisabled;
    final int val$size;
    final org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter, int)
    {
        int i0;
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter r1;
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter;

        i0 := @parameter1: int;

        r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: int val$size> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(int, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1 r0;
        java.lang.AssertionError $r13;
        int i0, $i1, $i2, $i3;
        java.lang.String $r5, $r10;
        boolean $z0, $z1;
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter $r3, $r8;
        java.util.List $r11, $r12;
        java.lang.Object r1, $r6;
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo r2, r7;
        org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget $r4, $r9;

        r0 := @this: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $z0 = <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: int val$size>;

        if i0 <= $i3 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $i1 = r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: int val$size>;

        if i0 != $i1 goto label2;

        return;

     label2:
        $z1 = r1 instanceof org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo;

        if $z1 == 0 goto label4;

        r2 = (org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo) r1;

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget access$000(org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter)>($r3);

        $r5 = <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter: java.lang.String DIFF_DELETE_KEY>;

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget: java.lang.Object getAnnotation(int,java.lang.String)>(i0, $r5);

        r7 = (org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo) $r6;

        if r7 == null goto label3;

        $r11 = staticinvoke <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo: java.util.List access$100(org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo)>(r2);

        $r12 = staticinvoke <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo: java.util.List access$100(org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DeleteInfo)>(r7);

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>($r12);

     label3:
        $r8 = r0.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter this$0>;

        $r9 = staticinvoke <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter: org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget access$000(org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter)>($r8);

        $i2 = i0 + 1;

        $r10 = <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter: java.lang.String DIFF_DELETE_KEY>;

        interfaceinvoke $r9.<org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget: void setAnnotation(int,int,java.lang.String,java.lang.Object)>(i0, $i2, $r10, r2);

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/DiffHighlightingFilter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
