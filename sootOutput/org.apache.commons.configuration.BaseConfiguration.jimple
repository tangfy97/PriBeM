public class org.apache.commons.configuration.BaseConfiguration extends org.apache.commons.configuration.AbstractConfiguration implements java.lang.Cloneable
{
    private java.util.Map store;

    public void <init>()
    {
        org.apache.commons.collections.map.LinkedMap $r1;
        org.apache.commons.configuration.BaseConfiguration r0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        $r1 = new org.apache.commons.collections.map.LinkedMap;

        specialinvoke $r1.<org.apache.commons.collections.map.LinkedMap: void <init>()>();

        r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store> = $r1;

        return;
    }

    protected void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        java.util.ArrayList $r3;
        java.util.List $r6;
        java.util.Map $r5, $r7;
        java.lang.Object $r2, r4;
        java.lang.String r1;
        org.apache.commons.configuration.BaseConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.BaseConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r7 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        goto label3;

     label1:
        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label2;

        $r6 = (java.util.List) $r2;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label3;

     label2:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r5 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

     label3:
        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.commons.configuration.BaseConfiguration r0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.BaseConfiguration r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        $r1 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.apache.commons.configuration.BaseConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    protected void clearPropertyDirect(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.apache.commons.configuration.BaseConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.BaseConfiguration: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void clear()
    {
        org.apache.commons.configuration.BaseConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        virtualinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(4, null, null, 1);

        $r1 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        virtualinvoke r0.<org.apache.commons.configuration.BaseConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(4, null, null, 0);

        return;
    }

    public java.util.Iterator getKeys()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        org.apache.commons.configuration.BaseConfiguration r0;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

        $r1 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.Object clone()
    {
        java.lang.CloneNotSupportedException $r5;
        org.apache.commons.configuration.ConfigurationRuntimeException $r6;
        java.util.Map $r2, $r4;
        java.lang.Object $r1, $r3;
        org.apache.commons.configuration.BaseConfiguration r0, r7;

        r0 := @this: org.apache.commons.configuration.BaseConfiguration;

     label1:
        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: java.lang.Object clone()>();

        r7 = (org.apache.commons.configuration.BaseConfiguration) $r1;

        $r2 = r0.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store>;

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.lang.Object clone(java.lang.Object)>($r2);

        $r4 = (java.util.Map) $r3;

        r7.<org.apache.commons.configuration.BaseConfiguration: java.util.Map store> = $r4;

     label2:
        return r7;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
}
