final class com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl extends java.lang.Object implements com.sun.xml.bind.v2.runtime.Transducer
{
    private final com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc;
    private final java.lang.Class ownerClass;

    public void <init>(java.lang.Class, com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor)
    {
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor r1;
        java.lang.Class r2;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r2 := @parameter0: java.lang.Class;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc> = r1;

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: java.lang.Class ownerClass> = r2;

        return;
    }

    public boolean useNamespace()
    {
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $z0 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: boolean useNamespace()>();

        return $z0;
    }

    public boolean isDefault()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        return 0;
    }

    public void declareNamespace(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        org.xml.sax.SAXException $r4;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r3;
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;
        com.sun.xml.bind.api.AccessorException $r5;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void declareNamespace(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.sun.xml.bind.api.AccessorException;

        specialinvoke $r5.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public java.lang.CharSequence print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object[] $r5;
        java.lang.CharSequence $r3;
        com.sun.xml.bind.v2.model.impl.Messages $r6;
        org.xml.sax.SAXException $r8;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2;
        java.lang.Object r1;
        java.lang.String $r7;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;
        com.sun.xml.bind.api.AccessorException $r4, $r9;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: java.lang.CharSequence print(java.lang.Object)>(r1);

        if $r3 != null goto label2;

        $r4 = new com.sun.xml.bind.api.AccessorException;

        $r6 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r5);

        specialinvoke $r4.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label2:
        return $r3;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.sun.xml.bind.api.AccessorException;

        specialinvoke $r9.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public java.lang.Object parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext $r0;
        java.lang.CharSequence r3;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r4;
        java.lang.Class $r2, $r5;
        java.lang.Object r6;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r3 := @parameter0: java.lang.CharSequence;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext getInstance()>();

        if $r0 == null goto label1;

        $r5 = r1.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: java.lang.Class ownerClass>;

        r6 = virtualinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallingContext: java.lang.Object createInstance(java.lang.Class)>($r5);

        goto label2;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: java.lang.Class ownerClass>;

        r6 = staticinvoke <com.sun.xml.bind.v2.ClassFactory: java.lang.Object create(java.lang.Class)>($r2);

     label2:
        $r4 = r1.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void parse(java.lang.Object,java.lang.CharSequence)>(r6, r3);

        return r6;
    }

    public void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object[] $r7;
        com.sun.xml.bind.v2.runtime.XMLSerializer r3;
        com.sun.xml.bind.v2.model.impl.Messages $r8;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2, $r5;
        java.lang.Object r1;
        java.lang.String r4, $r9;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;
        com.sun.xml.bind.api.AccessorException $r6;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.String;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: boolean hasValue(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new com.sun.xml.bind.api.AccessorException;

        $r8 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        $r9 = virtualinvoke $r8.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r7);

        specialinvoke $r6.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label1:
        $r5 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object,java.lang.String)>(r3, r1, r4);

        return;
    }

    public void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer, com.sun.xml.bind.v2.runtime.Name, java.lang.Object, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.Name r4;
        java.lang.Object[] $r8;
        com.sun.xml.bind.v2.runtime.XMLSerializer r3;
        com.sun.xml.bind.v2.model.impl.Messages $r9;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r2, $r6;
        java.lang.Object r1;
        java.lang.String r5, $r10;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;
        com.sun.xml.bind.api.AccessorException $r7;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r3 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r4 := @parameter1: com.sun.xml.bind.v2.runtime.Name;

        r1 := @parameter2: java.lang.Object;

        r5 := @parameter3: java.lang.String;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        $z0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: boolean hasValue(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r7 = new com.sun.xml.bind.api.AccessorException;

        $r9 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages THERE_MUST_BE_VALUE_IN_XMLVALUE>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r8);

        specialinvoke $r7.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label1:
        $r6 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor xacc>;

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor: void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Object,java.lang.String)>(r3, r4, r1, r5);

        return;
    }

    public javax.xml.namespace.QName getTypeName(java.lang.Object)
    {
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl$TransducerImpl;

        r1 := @parameter0: java.lang.Object;

        return null;
    }
}
