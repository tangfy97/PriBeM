class org.apache.lucene.index.DocumentsWriterFlushControl$1 extends java.lang.Object implements java.util.Iterator
{
    int i;
    final int val$upto;
    final org.apache.lucene.index.DocumentsWriterFlushControl this$0;

    void <init>(org.apache.lucene.index.DocumentsWriterFlushControl, int)
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$1 r0;
        int i0;
        org.apache.lucene.index.DocumentsWriterFlushControl r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl$1;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterFlushControl;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: org.apache.lucene.index.DocumentsWriterFlushControl this$0> = r1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int val$upto> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int i> = 0;

        return;
    }

    public boolean hasNext()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$1 r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl$1;

        $i1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int i>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int val$upto>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState next()
    {
        org.apache.lucene.index.DocumentsWriterPerThreadPool $r2;
        org.apache.lucene.index.DocumentsWriterFlushControl$1 r0;
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r3;
        org.apache.lucene.index.DocumentsWriterFlushControl $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl$1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: org.apache.lucene.index.DocumentsWriterFlushControl this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.DocumentsWriterFlushControl: org.apache.lucene.index.DocumentsWriterPerThreadPool access$000(org.apache.lucene.index.DocumentsWriterFlushControl)>($r1);

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int i>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: int i> = $i1;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterPerThreadPool: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState getThreadState(int)>($i0);

        return $r3;
    }

    public void remove()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$1 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.lucene.index.DocumentsWriterFlushControl$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove() not supported.");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.index.DocumentsWriterFlushControl$1 r0;
        org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushControl$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushControl$1: org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState next()>();

        return $r1;
    }
}
