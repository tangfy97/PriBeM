class com.google.inject.spi.MembersInjectorLookup$1 extends java.lang.Object implements com.google.inject.MembersInjector
{
    final com.google.inject.spi.MembersInjectorLookup this$0;

    void <init>(com.google.inject.spi.MembersInjectorLookup)
    {
        com.google.inject.spi.MembersInjectorLookup$1 r0;
        com.google.inject.spi.MembersInjectorLookup r1;

        r0 := @this: com.google.inject.spi.MembersInjectorLookup$1;

        r1 := @parameter0: com.google.inject.spi.MembersInjectorLookup;

        r0.<com.google.inject.spi.MembersInjectorLookup$1: com.google.inject.spi.MembersInjectorLookup this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void injectMembers(java.lang.Object)
    {
        com.google.inject.spi.MembersInjectorLookup$1 r0;
        java.lang.Object r5;
        com.google.inject.MembersInjector $r2, $r4;
        com.google.inject.spi.MembersInjectorLookup $r1, $r3;
        boolean $z0;

        r0 := @this: com.google.inject.spi.MembersInjectorLookup$1;

        r5 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.inject.spi.MembersInjectorLookup$1: com.google.inject.spi.MembersInjectorLookup this$0>;

        $r2 = staticinvoke <com.google.inject.spi.MembersInjectorLookup: com.google.inject.MembersInjector access$000(com.google.inject.spi.MembersInjectorLookup)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>($z0, "This MembersInjector cannot be used until the Injector has been created.");

        $r3 = r0.<com.google.inject.spi.MembersInjectorLookup$1: com.google.inject.spi.MembersInjectorLookup this$0>;

        $r4 = staticinvoke <com.google.inject.spi.MembersInjectorLookup: com.google.inject.MembersInjector access$000(com.google.inject.spi.MembersInjectorLookup)>($r3);

        interfaceinvoke $r4.<com.google.inject.MembersInjector: void injectMembers(java.lang.Object)>(r5);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        com.google.inject.spi.MembersInjectorLookup$1 r2;
        java.lang.String $r7;
        com.google.inject.TypeLiteral $r4;
        com.google.inject.spi.MembersInjectorLookup $r3;

        r2 := @this: com.google.inject.spi.MembersInjectorLookup$1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MembersInjector<");

        $r3 = r2.<com.google.inject.spi.MembersInjectorLookup$1: com.google.inject.spi.MembersInjectorLookup this$0>;

        $r4 = staticinvoke <com.google.inject.spi.MembersInjectorLookup: com.google.inject.TypeLiteral access$100(com.google.inject.spi.MembersInjectorLookup)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
