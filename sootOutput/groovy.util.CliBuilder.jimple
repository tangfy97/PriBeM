public class groovy.util.CliBuilder extends java.lang.Object implements groovy.lang.GroovyObject
{
    private java.lang.String usage;
    private org.apache.commons.cli.CommandLineParser parser;
    private boolean posix;
    private org.apache.commons.cli.HelpFormatter formatter;
    private java.io.PrintWriter writer;
    private org.apache.commons.cli.Options options;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696743;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper;
    static java.lang.Class class$groovy$util$OptionAccessor;
    static java.lang.Class class$org$apache$commons$cli$CommandLineParser;
    static java.lang.Class class$org$apache$commons$cli$PosixParser;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$org$apache$commons$cli$Options;
    static java.lang.Class class$java$io$PrintWriter;
    static java.lang.Class class$org$apache$commons$cli$Option;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class array$class$java$lang$String;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$org$apache$commons$cli$GnuParser;
    static java.lang.Class class$org$apache$commons$cli$HelpFormatter;
    static java.lang.Class class$java$lang$System;

    public void <init>()
    {
        boolean $z0;
        java.io.PrintWriter $r24;
        groovy.util.CliBuilder r0;
        java.lang.Object[] $r31, $r46;
        org.apache.commons.cli.Options $r29;
        org.apache.commons.cli.HelpFormatter $r19;
        java.lang.Boolean $r14;
        java.lang.String $r7;
        groovy.lang.MetaClass $r34, $r36;
        org.apache.commons.cli.CommandLineParser $r10, $r13;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r8, $r11, $r15, $r17, $r20, $r21, $r25, $r27, $r30, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r50, $r51, $r52, $r53, $r54;
        java.lang.Object $r6, $r9, $r12, $r16, $r18, $r22, $r23, $r26, $r28, $r32, $r33, $r35, $r49;

        r0 := @this: groovy.util.CliBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r38 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r38;

        goto label02;

     label01:
        $r38 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label02:
        r2 = $r38;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r39 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r39;

        goto label04;

     label03:
        $r39 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        r4 = $r39;

        $r5 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label05;

        $r40 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$String> = $r40;

        goto label06;

     label05:
        $r40 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

     label06:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>("groovy", $r40);

        $r7 = (java.lang.String) $r6;

        r0.<groovy.util.CliBuilder: java.lang.String usage> = $r7;

        $r8 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r8 != null goto label07;

        $r41 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r41;

        goto label08;

     label07:
        $r41 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label08:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r41);

        $r10 = (org.apache.commons.cli.CommandLineParser) $r9;

        $r11 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r11 != null goto label09;

        $r42 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r42;

        goto label10;

     label09:
        $r42 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label10:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r10, $r42);

        $r13 = (org.apache.commons.cli.CommandLineParser) $r12;

        r0.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser> = $r13;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r14);

        r0.<groovy.util.CliBuilder: boolean posix> = $z0;

        $r15 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

        if $r15 != null goto label11;

        $r43 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.HelpFormatter");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter> = $r43;

        goto label12;

     label11:
        $r43 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

     label12:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r2, $r43);

        $r17 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

        if $r17 != null goto label13;

        $r44 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.HelpFormatter");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter> = $r44;

        goto label14;

     label13:
        $r44 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

     label14:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r16, $r44);

        $r19 = (org.apache.commons.cli.HelpFormatter) $r18;

        r0.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter> = $r19;

        $r20 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

        if $r20 != null goto label15;

        $r37 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        $r45 = $r37;

        <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter> = $r37;

        goto label16;

     label15:
        $r45 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

     label16:
        $r46 = newarray (java.lang.Object)[1];

        $r21 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$System>;

        if $r21 != null goto label17;

        $r47 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.System");

        $r48 = $r47;

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$System> = $r47;

        goto label18;

     label17:
        $r48 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$System>;

     label18:
        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r48, "out");

        $r46[0] = $r49;

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r2, $r45, $r46);

        $r50 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

        if $r50 != null goto label19;

        $r51 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter> = $r51;

        goto label20;

     label19:
        $r51 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

     label20:
        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r22, $r51);

        $r24 = (java.io.PrintWriter) $r23;

        r0.<groovy.util.CliBuilder: java.io.PrintWriter writer> = $r24;

        $r25 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

        if $r25 != null goto label21;

        $r52 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Options");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options> = $r52;

        goto label22;

     label21:
        $r52 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

     label22:
        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r2, $r52);

        $r27 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

        if $r27 != null goto label23;

        $r53 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Options");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options> = $r53;

        goto label24;

     label23:
        $r53 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

     label24:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r26, $r53);

        $r29 = (org.apache.commons.cli.Options) $r28;

        r0.<groovy.util.CliBuilder: org.apache.commons.cli.Options options> = $r29;

        $r30 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r30 != null goto label25;

        $r54 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r54;

        goto label26;

     label25:
        $r54 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label26:
        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = r0;

        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r54, "initMetaClass", $r31);

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r32, r4);

        $r34 = (groovy.lang.MetaClass) $r33;

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r34, r4);

        $r36 = (groovy.lang.MetaClass) $r35;

        r0.<groovy.util.CliBuilder: groovy.lang.MetaClass metaClass> = $r36;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r7, $r10, $r13, $r14, $r15, $r19;
        org.apache.commons.cli.Options $r17;
        java.lang.Integer $r3, $r16, $r20;
        java.lang.String r4;
        boolean $z0;
        groovy.util.CliBuilder r8;
        java.lang.Class $r0, r1, $r2, $r6, $r23, $r24, $r25;
        java.lang.Object $r5, $r9, r11, $r12, $r18, $r21, $r22;

        r8 := @this: groovy.util.CliBuilder;

        r4 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.Object;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r23 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r23;

        goto label2;

     label1:
        $r23 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r23;

        $r2 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r24 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r24;

        goto label4;

     label3:
        $r24 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(1);

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r4, "size");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 == 0 goto label5;

        $r17 = r8.<groovy.util.CliBuilder: org.apache.commons.cli.Options options>;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = r4;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(0);

        $r15[0] = $r16;

        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "getAt", $r15);

        $r14[1] = $r18;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>(1);

        $r19[0] = $r20;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r11, "getAt", $r19);

        $r14[2] = $r21;

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r8, "option", $r14);

        $r13[0] = $r22;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r17, "addOption", $r13);

        return null;

     label5:
        $r6 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

        if $r6 != null goto label6;

        $r25 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.InvokerHelper");

        <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper> = $r25;

        goto label7;

     label6:
        $r25 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$InvokerHelper>;

     label7:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r8;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r25, "getMetaClass", $r7);

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = r8;

        $r10[1] = r4;

        $r10[2] = r11;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r9, "invokeMethod", $r10);

        return $r12;
    }

    public groovy.util.OptionAccessor parse(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintWriter $r23;
        groovy.util.CliBuilder r3;
        java.lang.Throwable $r19, $r20;
        java.lang.Object[] $r21, $r22, $r41, $r43;
        org.apache.commons.cli.Options $r6;
        java.lang.String[] $r47;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r51;
        java.lang.Boolean $r52;
        org.apache.commons.cli.CommandLineParser $r4, $r15, $r17, $r42;
        groovy.util.OptionAccessor $r11, $r28;
        java.lang.Class $r0, r1, $r2, $r5, $r8, $r12, $r14, $r18, $r26, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r44, $r45, $r48, $r49, $r50, $r54, $r55, $r56;
        java.lang.Object r7, $r9, $r10, $r13, $r16, $r24, $r25, $r27, $r32, $r37, $r46, $r53;

        r3 := @this: groovy.util.CliBuilder;

        r7 := @parameter0: java.lang.Object;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r29 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r29;

        goto label02;

     label01:
        $r29 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label02:
        r1 = $r29;

        $r2 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r30 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r30;

        goto label04;

     label03:
        $r30 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r4);

        if $z0 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        if $z3 == 0 goto label17;

        $z1 = r3.<groovy.util.CliBuilder: boolean posix>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z1);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r13);

        if $z2 == 0 goto label09;

        $r18 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$PosixParser>;

        if $r18 != null goto label07;

        $r31 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.PosixParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$PosixParser> = $r31;

        goto label08;

     label07:
        $r31 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$PosixParser>;

     label08:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r31);

        goto label12;

     label09:
        $r14 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$GnuParser>;

        if $r14 != null goto label10;

        $r33 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.GnuParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$GnuParser> = $r33;

        goto label11;

     label10:
        $r33 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$GnuParser>;

     label11:
        $r32 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r33);

     label12:
        $r34 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r34 != null goto label13;

        $r35 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        $r36 = $r35;

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r35;

        goto label14;

     label13:
        $r36 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label14:
        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r32, $r36);

        $r15 = (org.apache.commons.cli.CommandLineParser) $r37;

        $r38 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r38 != null goto label15;

        $r39 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r39;

        goto label16;

     label15:
        $r39 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label16:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r39);

        $r17 = (org.apache.commons.cli.CommandLineParser) $r16;

        r3.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser> = $r17;

        goto label17;

     label17:
        $r5 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

        if $r5 != null goto label18;

        $r12 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.OptionAccessor");

        $r40 = $r12;

        <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor> = $r12;

        goto label19;

     label18:
        $r40 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

     label19:
        $r41 = newarray (java.lang.Object)[1];

        $r42 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser>;

        $r43 = newarray (java.lang.Object)[3];

        $r6 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.Options options>;

        $r43[0] = $r6;

        $r8 = <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String>;

        if $r8 != null goto label20;

        $r44 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        $r45 = $r44;

        <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String> = $r44;

        goto label21;

     label20:
        $r45 = <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String>;

     label21:
        $r46 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>(r7, $r45);

        $r47 = (java.lang.String[]) $r46;

        $r48 = <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String>;

        if $r48 != null goto label22;

        $r49 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        $r50 = $r49;

        <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String> = $r49;

        goto label23;

     label22:
        $r50 = <groovy.util.CliBuilder: java.lang.Class array$class$java$lang$String>;

     label23:
        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r47, $r50);

        $r43[1] = $r51;

        $r52 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r43[2] = $r52;

        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r42, "parse", $r43);

        $r41[0] = $r53;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r40, $r41);

        $r54 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

        if $r54 != null goto label24;

        $r55 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.OptionAccessor");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor> = $r55;

        goto label25;

     label24:
        $r55 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

     label25:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, $r55);

        $r11 = (groovy.util.OptionAccessor) $r10;

        return $r11;

     label26:
        $r20 := @caughtexception;

        $r23 = r3.<groovy.util.CliBuilder: java.io.PrintWriter writer>;

        $r21 = newarray (java.lang.Object)[1];

        $r22 = newarray (java.lang.Object)[1];

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r20, "getMessage");

        $r22[0] = $r24;

        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, "error: ", "plus", $r22);

        $r21[0] = $r25;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r23, "println", $r21);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrent0(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "usage");

        $r26 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

        if $r26 != null goto label27;

        $r56 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.OptionAccessor");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor> = $r56;

        goto label28;

     label27:
        $r56 = <groovy.util.CliBuilder: java.lang.Class class$groovy$util$OptionAccessor>;

     label28:
        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r56);

        $r28 = (groovy.util.OptionAccessor) $r27;

        return $r28;

     label29:
        $r19 := @caughtexception;

        throw $r19;

        catch org.apache.commons.cli.ParseException from label17 to label26 with label26;
        catch java.lang.Throwable from label17 to label29 with label29;
    }

    public void usage()
    {
        java.lang.Object[] $r4;
        org.apache.commons.cli.Options $r10;
        org.apache.commons.cli.HelpFormatter $r6, $r7, $r11, $r13;
        java.lang.String $r9;
        java.io.PrintWriter $r5, $r15;
        groovy.util.CliBuilder r3;
        java.lang.Class $r0, r1, $r2, $r16, $r17;
        java.lang.Object $r8, $r12, $r14;

        r3 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r7 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter>;

        $r4 = newarray (java.lang.Object)[8];

        $r5 = r3.<groovy.util.CliBuilder: java.io.PrintWriter writer>;

        $r4[0] = $r5;

        $r6 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter>;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "defaultWidth");

        $r4[1] = $r8;

        $r9 = r3.<groovy.util.CliBuilder: java.lang.String usage>;

        $r4[2] = $r9;

        $r4[3] = "";

        $r10 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.Options options>;

        $r4[4] = $r10;

        $r11 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter>;

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r11, "defaultLeftPad");

        $r4[5] = $r12;

        $r13 = r3.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter>;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r13, "defaultDescPad");

        $r4[6] = $r14;

        $r4[7] = "";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "printHelp", $r4);

        $r15 = r3.<groovy.util.CliBuilder: java.io.PrintWriter writer>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r15, "flush");

        return;
    }

    public org.apache.commons.cli.Option option(java.lang.Object, java.util.Map, java.lang.Object)
    {
        java.lang.Object[] $r4, $r10;
        java.util.Map r9;
        org.apache.commons.cli.Option $r16;
        groovy.util.CliBuilder$_option_closure1 $r11;
        groovy.lang.Reference $r8;
        groovy.util.CliBuilder r12;
        java.lang.Class $r0, r1, $r2, $r3, $r14, $r17, $r18, $r19, $r20;
        java.lang.Object r5, r6, $r7, $r13, $r15;

        r12 := @this: groovy.util.CliBuilder;

        r5 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.util.Map;

        r6 := @parameter2: java.lang.Object;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r17 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r17;

        goto label2;

     label1:
        $r17 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r17;

        $r2 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r18 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r18;

        goto label4;

     label3:
        $r18 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option>;

        if $r3 != null goto label5;

        $r19 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Option");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option> = $r19;

        goto label6;

     label5:
        $r19 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option>;

     label6:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r5;

        $r4[1] = r6;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r19, $r4);

        $r8 = new groovy.lang.Reference;

        specialinvoke $r8.<groovy.lang.Reference: void <init>(java.lang.Object)>($r7);

        $r10 = newarray (java.lang.Object)[1];

        $r11 = new groovy.util.CliBuilder$_option_closure1;

        specialinvoke $r11.<groovy.util.CliBuilder$_option_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>(r12, r12, $r8);

        $r10[0] = $r11;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r9, "each", $r10);

        $r13 = virtualinvoke $r8.<groovy.lang.Reference: java.lang.Object get()>();

        $r14 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option>;

        if $r14 != null goto label7;

        $r20 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Option");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option> = $r20;

        goto label8;

     label7:
        $r20 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Option>;

     label8:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r20);

        $r16 = (org.apache.commons.cli.Option) $r15;

        return $r16;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        groovy.util.CliBuilder r4;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.util.CliBuilder: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.util.CliBuilder: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.util.CliBuilder: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.util.CliBuilder: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: groovy.util.CliBuilder;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.util.CliBuilder: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: groovy.util.CliBuilder;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.util.CliBuilder: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: groovy.util.CliBuilder;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.util.CliBuilder: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696743L);

        $r3 = (java.lang.Long) $r2;

        <groovy.util.CliBuilder: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.util.CliBuilder: java.lang.Long __timeStamp__239_neverHappen1239119696743> = $r5;

        return;
    }

    public java.lang.String getUsage()
    {
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        java.lang.String $r4, $r6;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.util.CliBuilder: java.lang.String usage>;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$String> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public void setUsage(java.lang.String)
    {
        groovy.util.CliBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;
        java.lang.String r2, $r6;

        r5 := @this: groovy.util.CliBuilder;

        r2 := @parameter0: java.lang.String;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$String> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$String>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (java.lang.String) $r4;

        r5.<groovy.util.CliBuilder: java.lang.String usage> = $r6;

        return;
    }

    public org.apache.commons.cli.CommandLineParser getParser()
    {
        org.apache.commons.cli.CommandLineParser $r4, $r6;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser>;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.apache.commons.cli.CommandLineParser) $r5;

        return $r6;
    }

    public void setParser(org.apache.commons.cli.CommandLineParser)
    {
        org.apache.commons.cli.CommandLineParser r2, $r6;
        groovy.util.CliBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: groovy.util.CliBuilder;

        r2 := @parameter0: org.apache.commons.cli.CommandLineParser;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.CommandLineParser");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$CommandLineParser>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (org.apache.commons.cli.CommandLineParser) $r4;

        r5.<groovy.util.CliBuilder: org.apache.commons.cli.CommandLineParser parser> = $r6;

        return;
    }

    public boolean getPosix()
    {
        groovy.util.CliBuilder r2;
        java.lang.Boolean $r6;
        java.lang.Class $r0, $r1, $r4, $r7, $r8, $r9;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = r2.<groovy.util.CliBuilder: boolean posix>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $r4 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        return $z1;
    }

    public boolean isPosix()
    {
        groovy.util.CliBuilder r2;
        java.lang.Boolean $r6;
        java.lang.Class $r0, $r1, $r4, $r7, $r8, $r9;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = r2.<groovy.util.CliBuilder: boolean posix>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>($z0);

        $r4 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean>;

        if $r4 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$lang$Boolean>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r6 = (java.lang.Boolean) $r5;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r6);

        return $z1;
    }

    public void setPosix(boolean)
    {
        groovy.util.CliBuilder r3;
        java.lang.Class $r0, $r1, $r4, $r5;
        java.lang.Object $r2;
        boolean z0, $z1;

        r3 := @this: groovy.util.CliBuilder;

        z0 := @parameter0: boolean;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(boolean)>(z0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r2);

        r3.<groovy.util.CliBuilder: boolean posix> = $z1;

        return;
    }

    public org.apache.commons.cli.HelpFormatter getFormatter()
    {
        org.apache.commons.cli.HelpFormatter $r4, $r6;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter>;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.HelpFormatter");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.apache.commons.cli.HelpFormatter) $r5;

        return $r6;
    }

    public void setFormatter(org.apache.commons.cli.HelpFormatter)
    {
        org.apache.commons.cli.HelpFormatter r2, $r6;
        groovy.util.CliBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: groovy.util.CliBuilder;

        r2 := @parameter0: org.apache.commons.cli.HelpFormatter;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.HelpFormatter");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$HelpFormatter>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (org.apache.commons.cli.HelpFormatter) $r4;

        r5.<groovy.util.CliBuilder: org.apache.commons.cli.HelpFormatter formatter> = $r6;

        return;
    }

    public java.io.PrintWriter getWriter()
    {
        java.io.PrintWriter $r4, $r6;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.util.CliBuilder: java.io.PrintWriter writer>;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.io.PrintWriter) $r5;

        return $r6;
    }

    public void setWriter(java.io.PrintWriter)
    {
        java.io.PrintWriter r2, $r6;
        groovy.util.CliBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: groovy.util.CliBuilder;

        r2 := @parameter0: java.io.PrintWriter;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$java$io$PrintWriter>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (java.io.PrintWriter) $r4;

        r5.<groovy.util.CliBuilder: java.io.PrintWriter writer> = $r6;

        return;
    }

    public org.apache.commons.cli.Options getOptions()
    {
        org.apache.commons.cli.Options $r4, $r6;
        groovy.util.CliBuilder r2;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: groovy.util.CliBuilder;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.util.CliBuilder: org.apache.commons.cli.Options options>;

        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Options");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.apache.commons.cli.Options) $r5;

        return $r6;
    }

    public void setOptions(org.apache.commons.cli.Options)
    {
        org.apache.commons.cli.Options r2, $r6;
        groovy.util.CliBuilder r5;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r4;

        r5 := @this: groovy.util.CliBuilder;

        r2 := @parameter0: org.apache.commons.cli.Options;

        $r0 = <groovy.util.CliBuilder: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.util.CliBuilder");

        <groovy.util.CliBuilder: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.util.CliBuilder: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.util.CliBuilder: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.util.CliBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.cli.Options");

        <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.util.CliBuilder: java.lang.Class class$org$apache$commons$cli$Options>;

     label6:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r2, $r9);

        $r6 = (org.apache.commons.cli.Options) $r4;

        r5.<groovy.util.CliBuilder: org.apache.commons.cli.Options options> = $r6;

        return;
    }

    void super$1$wait()
    {
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.util.CliBuilder r0;
        boolean $z0;

        r0 := @this: groovy.util.CliBuilder;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    void super$1$finalize()
    {
        groovy.util.CliBuilder r0;

        r0 := @this: groovy.util.CliBuilder;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
