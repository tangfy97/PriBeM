public abstract class org.mortbay.component.AbstractLifeCycle extends java.lang.Object implements org.mortbay.component.LifeCycle
{
    private java.lang.Object _lock;
    private final int FAILED;
    private final int STOPPED;
    private final int STARTING;
    private final int STARTED;
    private final int STOPPING;
    private volatile int _state;
    protected org.mortbay.component.LifeCycle$Listener[] _listeners;
    static java.lang.Class class$org$mortbay$component$LifeCycle$Listener;

    public void <init>()
    {
        int $i1;
        java.lang.Object $r2;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.component.AbstractLifeCycle: int STOPPING> = 3;

        r0.<org.mortbay.component.AbstractLifeCycle: int STARTED> = 2;

        r0.<org.mortbay.component.AbstractLifeCycle: int STARTING> = 1;

        r0.<org.mortbay.component.AbstractLifeCycle: int STOPPED> = 0;

        r0.<org.mortbay.component.AbstractLifeCycle: int FAILED> = -1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<org.mortbay.component.AbstractLifeCycle: java.lang.Object _lock> = $r2;

        $i1 = (int) -1;

        r0.<org.mortbay.component.AbstractLifeCycle: int FAILED> = $i1;

        r0.<org.mortbay.component.AbstractLifeCycle: int STOPPED> = 0;

        r0.<org.mortbay.component.AbstractLifeCycle: int STARTING> = 1;

        r0.<org.mortbay.component.AbstractLifeCycle: int STARTED> = 2;

        r0.<org.mortbay.component.AbstractLifeCycle: int STOPPING> = 3;

        r0.<org.mortbay.component.AbstractLifeCycle: int _state> = 0;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        return;
    }

    public final void start() throws java.lang.Exception
    {
        java.lang.Throwable $r2;
        int $i0, $i1;
        java.lang.Error $r3;
        java.lang.Object $r1;
        org.mortbay.component.AbstractLifeCycle r0;
        java.lang.Exception $r4;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: java.lang.Object _lock>;

        entermonitor $r1;

     label01:
        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 == 2 goto label02;

        $i1 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i1 != 1 goto label04;

     label02:
        exitmonitor $r1;

     label03:
        return;

     label04:
        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setStarting()>();

        virtualinvoke r0.<org.mortbay.component.AbstractLifeCycle: void doStart()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object)>("started {}", r0);

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setStarted()>();

     label05:
        goto label08;

     label06:
        $r4 := @caughtexception;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r4);

        throw $r4;

     label07:
        $r3 := @caughtexception;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r3);

        throw $r3;

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r2;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Error from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final void stop() throws java.lang.Exception
    {
        java.lang.Throwable $r2;
        int $i0, $i1;
        java.lang.Error $r3;
        java.lang.Object $r1;
        org.mortbay.component.AbstractLifeCycle r0;
        java.lang.Exception $r4;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: java.lang.Object _lock>;

        entermonitor $r1;

     label01:
        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 == 3 goto label02;

        $i1 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i1 != 0 goto label04;

     label02:
        exitmonitor $r1;

     label03:
        return;

     label04:
        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setStopping()>();

        virtualinvoke r0.<org.mortbay.component.AbstractLifeCycle: void doStop()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object)>("stopped {}", r0);

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setStopped()>();

     label05:
        goto label08;

     label06:
        $r4 := @caughtexception;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r4);

        throw $r4;

     label07:
        $r3 := @caughtexception;

        specialinvoke r0.<org.mortbay.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r3);

        throw $r3;

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r2;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Error from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isRunning()
    {
        int $i0, $i1;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 == 2 goto label1;

        $i1 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i1 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isStarted()
    {
        int $i0;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStarting()
    {
        int $i0;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStopping()
    {
        int $i0;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStopped()
    {
        int $i0;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFailed()
    {
        int $i0, $i2;
        org.mortbay.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        $i0 = r0.<org.mortbay.component.AbstractLifeCycle: int _state>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void addLifeCycleListener(org.mortbay.component.LifeCycle$Listener)
    {
        org.mortbay.component.LifeCycle$Listener[] $r3, $r5, $r6;
        java.lang.Object[] $r4;
        org.mortbay.component.AbstractLifeCycle r0;
        org.mortbay.component.LifeCycle$Listener r1;
        java.lang.Class $r2, $r7;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r1 := @parameter0: org.mortbay.component.LifeCycle$Listener;

        $r3 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r2 = <org.mortbay.component.AbstractLifeCycle: java.lang.Class class$org$mortbay$component$LifeCycle$Listener>;

        if $r2 != null goto label1;

        $r7 = staticinvoke <org.mortbay.component.AbstractLifeCycle: java.lang.Class class$(java.lang.String)>("org.mortbay.component.LifeCycle$Listener");

        <org.mortbay.component.AbstractLifeCycle: java.lang.Class class$org$mortbay$component$LifeCycle$Listener> = $r7;

        goto label2;

     label1:
        $r7 = <org.mortbay.component.AbstractLifeCycle: java.lang.Class class$org$mortbay$component$LifeCycle$Listener>;

     label2:
        $r4 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r3, r1, $r7);

        $r5 = (org.mortbay.component.LifeCycle$Listener[]) $r4;

        $r6 = (org.mortbay.component.LifeCycle$Listener[]) $r5;

        r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners> = $r6;

        return;
    }

    public void removeLifeCycleListener(org.mortbay.component.LifeCycle$Listener)
    {
        org.mortbay.component.LifeCycle$Listener[] $r2, $r4, $r5;
        java.lang.Object[] $r3;
        org.mortbay.component.LifeCycle$Listener r1;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r1 := @parameter0: org.mortbay.component.LifeCycle$Listener;

        $r2 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r3 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] removeFromArray(java.lang.Object[],java.lang.Object)>($r2, r1);

        $r4 = (org.mortbay.component.LifeCycle$Listener[]) $r3;

        $r5 = (org.mortbay.component.LifeCycle$Listener[]) $r4;

        r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners> = $r5;

        return;
    }

    private void setStarted()
    {
        org.mortbay.component.LifeCycle$Listener[] $r1, $r2, $r3;
        org.mortbay.component.LifeCycle$Listener $r4;
        int $i0, i1;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r0.<org.mortbay.component.AbstractLifeCycle: int _state> = 2;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.mortbay.component.LifeCycle$Listener: void lifeCycleStarted(org.mortbay.component.LifeCycle)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void setStarting()
    {
        org.mortbay.component.LifeCycle$Listener[] $r1, $r2, $r3;
        org.mortbay.component.LifeCycle$Listener $r4;
        int $i0, i1;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r0.<org.mortbay.component.AbstractLifeCycle: int _state> = 1;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.mortbay.component.LifeCycle$Listener: void lifeCycleStarting(org.mortbay.component.LifeCycle)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void setStopping()
    {
        org.mortbay.component.LifeCycle$Listener[] $r1, $r2, $r3;
        org.mortbay.component.LifeCycle$Listener $r4;
        int $i0, i1;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r0.<org.mortbay.component.AbstractLifeCycle: int _state> = 3;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.mortbay.component.LifeCycle$Listener: void lifeCycleStopping(org.mortbay.component.LifeCycle)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void setStopped()
    {
        org.mortbay.component.LifeCycle$Listener[] $r1, $r2, $r3;
        org.mortbay.component.LifeCycle$Listener $r4;
        int $i0, i1;
        org.mortbay.component.AbstractLifeCycle r0;

        r0 := @this: org.mortbay.component.AbstractLifeCycle;

        r0.<org.mortbay.component.AbstractLifeCycle: int _state> = 0;

        $r1 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        if $r1 == null goto label2;

        i1 = 0;

     label1:
        $r2 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r4 = $r3[i1];

        interfaceinvoke $r4.<org.mortbay.component.LifeCycle$Listener: void lifeCycleStopped(org.mortbay.component.LifeCycle)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void setFailed(java.lang.Throwable)
    {
        java.lang.Throwable r5;
        org.mortbay.component.LifeCycle$Listener[] $r8, $r9, $r10;
        org.mortbay.component.AbstractLifeCycle r2;
        org.mortbay.component.LifeCycle$Listener $r11;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r12;
        int $i0, i1, $i3;
        java.lang.String $r7;

        r2 := @this: org.mortbay.component.AbstractLifeCycle;

        r5 := @parameter0: java.lang.Throwable;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("failed ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String)>($r7);

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.Throwable)>(r5);

        $i3 = (int) -1;

        r2.<org.mortbay.component.AbstractLifeCycle: int _state> = $i3;

        $r8 = r2.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        if $r8 == null goto label2;

        i1 = 0;

     label1:
        $r9 = r2.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $i0 = lengthof $r9;

        if i1 >= $i0 goto label2;

        $r10 = r2.<org.mortbay.component.AbstractLifeCycle: org.mortbay.component.LifeCycle$Listener[] _listeners>;

        $r11 = $r10[i1];

        interfaceinvoke $r11.<org.mortbay.component.LifeCycle$Listener: void lifeCycleFailure(org.mortbay.component.LifeCycle,java.lang.Throwable)>(r2, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
