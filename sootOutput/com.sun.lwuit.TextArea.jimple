public class com.sun.lwuit.TextArea extends com.sun.lwuit.Component
{
    private static int defaultMaxSize;
    private static boolean autoDegradeMaxSize;
    private static boolean hadSuccessfulEdit;
    private int linesToScroll;
    private static final char ENTER_KEY;
    private java.lang.String unsupportedChars;
    private static boolean useStringWidth;
    public static final int ANY;
    public static final int EMAILADDR;
    public static final int NUMERIC;
    public static final int PHONENUMBER;
    public static final int URL;
    public static final int DECIMAL;
    public static final int PASSWORD;
    public static final int UNEDITABLE;
    public static final int SENSITIVE;
    public static final int NON_PREDICTIVE;
    public static final int INITIAL_CAPS_WORD;
    public static final int INITIAL_CAPS_SENTENCE;
    private int constraint;
    private java.lang.String text;
    private boolean editable;
    private int maxSize;
    private int rows;
    private int columns;
    private java.util.Vector rowStrings;
    private int widthForRowCalculations;
    private int rowsGap;
    private boolean triggerClose;
    private java.util.Vector actionListeners;
    private boolean growByContent;
    private static char widestChar;
    private boolean singleLineTextArea;
    private int align;
    private int absAlign;
    private int currentRowWidth;
    private com.sun.lwuit.Label hintLabel;

    public void <init>(int, int)
    {
        int i0, i1, $i2;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>("", $i2, i0, i1, 0);

        return;
    }

    public void <init>(int, int, int)
    {
        int i0, i1, i2, $i3;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>("", $i3, i0, i1, i2);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        int i0, i1, $i2;
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>(r1, $i2, i0, i1, 0);

        return;
    }

    public void <init>(java.lang.String, int, int, int)
    {
        int i0, i1, i2, $i3;
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>(r1, $i3, i0, i1, i2);

        return;
    }

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>(r1, i0, 1, 3, 0);

        return;
    }

    public void <init>(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        $i0 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String,int,int,int,int)>(r1, $i2, 1, 3, 0);

        return;
    }

    public void <init>()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        specialinvoke r0.<com.sun.lwuit.TextArea: void <init>(java.lang.String)>("");

        return;
    }

    private void <init>(java.lang.String, int, int, int, int)
    {
        com.sun.lwuit.plaf.UIManager $r1, $r4;
        byte $b5;
        int $i0, i1, i2, i3, i4, $i7;
        java.lang.String $r2, r3;
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r8, $r9;
        com.sun.lwuit.plaf.LookAndFeel $r5;

        r0 := @this: com.sun.lwuit.TextArea;

        r3 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.sun.lwuit.Component: void <init>()>();

        r0.<com.sun.lwuit.TextArea: int linesToScroll> = 1;

        r0.<com.sun.lwuit.TextArea: java.lang.String unsupportedChars> = "\t\r";

        r0.<com.sun.lwuit.TextArea: int constraint> = 0;

        r0.<com.sun.lwuit.TextArea: java.lang.String text> = "";

        r0.<com.sun.lwuit.TextArea: boolean editable> = 1;

        $i0 = <com.sun.lwuit.TextArea: int defaultMaxSize>;

        r0.<com.sun.lwuit.TextArea: int maxSize> = $i0;

        r0.<com.sun.lwuit.TextArea: int rows> = 1;

        r0.<com.sun.lwuit.TextArea: int columns> = 3;

        $i7 = (int) -1;

        r0.<com.sun.lwuit.TextArea: int widthForRowCalculations> = $i7;

        r0.<com.sun.lwuit.TextArea: int rowsGap> = 2;

        r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners> = null;

        r0.<com.sun.lwuit.TextArea: boolean growByContent> = 1;

        r0.<com.sun.lwuit.TextArea: int align> = 1;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isRTL()>();

        if $z0 == 0 goto label1;

        $b5 = 3;

        goto label2;

     label1:
        $b5 = 1;

     label2:
        r0.<com.sun.lwuit.TextArea: int absAlign> = $b5;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setUIID(java.lang.String)>("TextArea");

        $r1 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.UIManager: java.lang.String localize(java.lang.String,java.lang.String)>("edit", "Edit");

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setSelectCommandText(java.lang.String)>($r2);

        r0.<com.sun.lwuit.TextArea: int maxSize> = i1;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setText(java.lang.String)>(r3);

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setConstraint(int)>(i2);

        if i3 > 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rows must be positive");

        throw $r8;

     label3:
        if i4 > 1 goto label4;

        if i3 == 1 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("columns must be larger than 1");

        throw $r9;

     label4:
        r0.<com.sun.lwuit.TextArea: int rows> = i3;

        r0.<com.sun.lwuit.TextArea: int columns> = i4;

        $r4 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r5 = virtualinvoke $r4.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $z1 = virtualinvoke $r5.<com.sun.lwuit.plaf.LookAndFeel: boolean isDefaultSmoothScrolling()>();

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setSmoothScrolling(boolean)>($z1);

        return;
    }

    public void setConstraint(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextArea: int constraint> = i0;

        return;
    }

    public int getConstraint()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int constraint>;

        return $i0;
    }

    public void setWidth(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        specialinvoke r0.<com.sun.lwuit.Component: void setWidth(int)>(i0);

        specialinvoke r0.<com.sun.lwuit.TextArea: java.util.Vector getRowStrings()>();

        return;
    }

    public void setText(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r2, $r3, $r4;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = "";

     label2:
        r0.<com.sun.lwuit.TextArea: java.lang.String text> = $r4;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setShouldCalcPreferredSize(boolean)>(1);

        $i0 = r0.<com.sun.lwuit.TextArea: int maxSize>;

        $r2 = r0.<com.sun.lwuit.TextArea: java.lang.String text>;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        $r3 = r0.<com.sun.lwuit.TextArea: java.lang.String text>;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i2 + 1;

        r0.<com.sun.lwuit.TextArea: int maxSize> = $i3;

     label3:
        r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings> = null;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void repaint()>();

        return;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = r0.<com.sun.lwuit.TextArea: java.lang.String text>;

        return $r1;
    }

    public boolean isEditable()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = r0.<com.sun.lwuit.TextArea: boolean editable>;

        return $z0;
    }

    public void setEditable(boolean)
    {
        com.sun.lwuit.TextArea r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextArea;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextArea: boolean editable> = z0;

        return;
    }

    public int getMaxSize()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int maxSize>;

        return $i0;
    }

    public void setMaxSize(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextArea: int maxSize> = i0;

        return;
    }

    public void keyPressed(int)
    {
        com.sun.lwuit.plaf.Style $r3, $r5;
        com.sun.lwuit.TextArea r0;
        boolean $z0;
        com.sun.lwuit.geom.Rectangle $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        com.sun.lwuit.Display $r1;
        com.sun.lwuit.Font $r4, $r6;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        specialinvoke r0.<com.sun.lwuit.Component: void keyPressed(int)>(i0);

        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        if $i1 != 8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.sun.lwuit.TextArea: boolean triggerClose> = $z0;

        $r2 = new com.sun.lwuit.geom.Rectangle;

        $i2 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getScrollX()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getScrollY()>();

        $i4 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i5 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getHeight()>();

        specialinvoke $r2.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i2, $i3, $i4, $i5);

        $r3 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        if $i1 != 6 goto label4;

        $i15 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getScrollY()>();

        $i16 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getHeight()>();

        $i17 = $i15 + $i16;

        $i18 = r0.<com.sun.lwuit.TextArea: int rowsGap>;

        $r5 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $r6 = virtualinvoke $r5.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $i19 = virtualinvoke $r6.<com.sun.lwuit.Font: int getHeight()>();

        $i20 = $i18 + $i19;

        $i21 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getLines()>();

        $i22 = $i20 * $i21;

        if $i17 >= $i22 goto label3;

        $i23 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i24 = virtualinvoke $r4.<com.sun.lwuit.Font: int getHeight()>();

        $i25 = r0.<com.sun.lwuit.TextArea: int rowsGap>;

        $i27 = $i24 + $i25;

        $i26 = r0.<com.sun.lwuit.TextArea: int linesToScroll>;

        $i28 = $i27 * $i26;

        $i29 = $i23 + $i28;

        virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i29);

        virtualinvoke r0.<com.sun.lwuit.TextArea: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component)>($r2, r0);

        goto label6;

     label3:
        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHandlesInput(boolean)>(0);

        goto label6;

     label4:
        if $i1 != 1 goto label6;

        $i6 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getScrollY()>();

        if $i6 <= 0 goto label5;

        $i7 = virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $i8 = virtualinvoke $r4.<com.sun.lwuit.Font: int getHeight()>();

        $i9 = r0.<com.sun.lwuit.TextArea: int rowsGap>;

        $i11 = $i8 + $i9;

        $i10 = r0.<com.sun.lwuit.TextArea: int linesToScroll>;

        $i12 = $i11 * $i10;

        $i13 = $i7 - $i12;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        virtualinvoke $r2.<com.sun.lwuit.geom.Rectangle: void setY(int)>($i14);

        virtualinvoke r0.<com.sun.lwuit.TextArea: void scrollRectToVisible(com.sun.lwuit.geom.Rectangle,com.sun.lwuit.Component)>($r2, r0);

        goto label6;

     label5:
        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHandlesInput(boolean)>(0);

     label6:
        if $i1 == 5 goto label7;

        if $i1 != 2 goto label8;

     label7:
        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHandlesInput(boolean)>(0);

     label8:
        return;
    }

    protected void fireClicked()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void onClick()>();

        return;
    }

    protected boolean isSelectableInteraction()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = r0.<com.sun.lwuit.TextArea: boolean editable>;

        return $z0;
    }

    public void keyReleased(int)
    {
        int i0, $i1;
        com.sun.lwuit.TextArea r1;
        com.sun.lwuit.Display $r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke $r0.<com.sun.lwuit.Display: int getGameAction(int)>(i0);

        $z0 = virtualinvoke r1.<com.sun.lwuit.TextArea: boolean isEditable()>();

        if $z0 == 0 goto label2;

        $z1 = r1.<com.sun.lwuit.TextArea: boolean triggerClose>;

        if $z1 == 0 goto label2;

        if $i1 == 8 goto label1;

        $z2 = virtualinvoke r1.<com.sun.lwuit.TextArea: boolean isEnterKey(int)>(i0);

        if $z2 == 0 goto label2;

     label1:
        r1.<com.sun.lwuit.TextArea: boolean triggerClose> = 0;

        virtualinvoke r1.<com.sun.lwuit.TextArea: void onClick()>();

        return;

     label2:
        return;
    }

    public boolean isScrollableY()
    {
        com.sun.lwuit.geom.Dimension $r1;
        int $i0, $i1;
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isFocusable()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getHeight()>();

        if $i0 <= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void onClick()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isEditable()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void editString()>();

     label1:
        return;
    }

    void editString()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r5;
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1;
        com.sun.lwuit.Display $r1, $r4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = <com.sun.lwuit.TextArea: boolean autoDegradeMaxSize>;

        if $z0 == 0 goto label4;

        $z1 = <com.sun.lwuit.TextArea: boolean hadSuccessfulEdit>;

        if $z1 != 0 goto label4;

        $i0 = r0.<com.sun.lwuit.TextArea: int maxSize>;

        if $i0 <= 1024 goto label4;

     label1:
        $r1 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getMaxSize()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getConstraint()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        virtualinvoke $r1.<com.sun.lwuit.Display: void editString(com.sun.lwuit.Component,int,int,java.lang.String)>(r0, $i1, $i2, $r2);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $i3 = r0.<com.sun.lwuit.TextArea: int maxSize>;

        $i4 = $i3 - 1024;

        r0.<com.sun.lwuit.TextArea: int maxSize> = $i4;

        $i5 = r0.<com.sun.lwuit.TextArea: int maxSize>;

        staticinvoke <com.sun.lwuit.TextArea: void setDefaultMaxSize(int)>($i5);

        virtualinvoke r0.<com.sun.lwuit.TextArea: void editString()>();

        goto label5;

     label4:
        $r4 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getMaxSize()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getConstraint()>();

        $r5 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        virtualinvoke $r4.<com.sun.lwuit.Display: void editString(com.sun.lwuit.Component,int,int,java.lang.String)>(r0, $i6, $i7, $r5);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void pointerHover(int[], int[])
    {
        com.sun.lwuit.TextArea r0;
        int[] r1, r2;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        virtualinvoke r0.<com.sun.lwuit.TextArea: void requestFocus()>();

        return;
    }

    public void pointerHoverReleased(int[], int[])
    {
        com.sun.lwuit.TextArea r0;
        int[] r1, r2;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        virtualinvoke r0.<com.sun.lwuit.TextArea: void requestFocus()>();

        return;
    }

    public void pointerReleased(int, int)
    {
        int i0, i1;
        com.sun.lwuit.TextArea r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isDragActivated()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.Component: void pointerReleased(int,int)>(i0, i1);

        goto label2;

     label1:
        specialinvoke r0.<com.sun.lwuit.Component: void pointerReleased(int,int)>(i0, i1);

        $z1 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isEditable()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void onClick()>();

     label2:
        return;
    }

    void focusGainedInternal()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        specialinvoke r0.<com.sun.lwuit.Component: void focusGainedInternal()>();

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isScrollableY()>();

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHandlesInput(boolean)>($z0);

        return;
    }

    void focusLostInternal()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        specialinvoke r0.<com.sun.lwuit.Component: void focusLostInternal()>();

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHandlesInput(boolean)>(0);

        return;
    }

    public int getColumns()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int columns>;

        return $i0;
    }

    public int getActualRows()
    {
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = r0.<com.sun.lwuit.TextArea: boolean growByContent>;

        if $z0 == 0 goto label1;

        $i1 = r0.<com.sun.lwuit.TextArea: int rows>;

        $i2 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getLines()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;

     label1:
        $i0 = r0.<com.sun.lwuit.TextArea: int rows>;

        return $i0;
    }

    public int getRows()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int rows>;

        return $i0;
    }

    public void setColumns(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setShouldCalcPreferredSize(boolean)>(1);

        r0.<com.sun.lwuit.TextArea: int columns> = i0;

        return;
    }

    public void setRows(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setShouldCalcPreferredSize(boolean)>(1);

        r0.<com.sun.lwuit.TextArea: int rows> = i0;

        return;
    }

    void initComponentImpl()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        specialinvoke r0.<com.sun.lwuit.TextArea: java.util.Vector getRowStrings()>();

        specialinvoke r0.<com.sun.lwuit.Component: void initComponentImpl()>();

        return;
    }

    private java.util.Vector getRowStrings()
    {
        com.sun.lwuit.plaf.Style $r2, $r3;
        java.util.Vector $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings>;

        if $r1 == null goto label1;

        $i0 = r0.<com.sun.lwuit.TextArea: int widthForRowCalculations>;

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i3 = $i1 - $i2;

        $r3 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $i4 = virtualinvoke $r3.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i5 = $i3 - $i4;

        if $i0 == $i5 goto label2;

     label1:
        specialinvoke r0.<com.sun.lwuit.TextArea: void initRowString()>();

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setShouldCalcPreferredSize(boolean)>(1);

     label2:
        $r4 = r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings>;

        return $r4;
    }

    public int getLines()
    {
        int $i0;
        java.util.Vector $r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = specialinvoke r0.<com.sun.lwuit.TextArea: java.util.Vector getRowStrings()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String getTextAt(int)
    {
        java.util.Vector $r1;
        int $i0, i1, $i2;
        java.lang.Object $r2, $r4;
        java.lang.String $r3, $r5;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i1 := @parameter0: int;

        $r1 = specialinvoke r0.<com.sun.lwuit.TextArea: java.util.Vector getRowStrings()>();

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        if i1 < $i0 goto label2;

        $i2 = $i0 - 1;

        $r4 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>($i2);

        $r5 = (java.lang.String) $r4;

        return $r5;

     label2:
        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private int indexOf(char[], char, int, int)
    {
        char c4, $c5;
        int i0, $i1, i2, $i3, i6, $i7, $i8, $i10;
        char[] r0;
        com.sun.lwuit.TextArea r1;

        r1 := @this: com.sun.lwuit.TextArea;

        r0 := @parameter0: char[];

        c4 := @parameter1: char;

        i0 := @parameter2: int;

        i2 := @parameter3: int;

        i6 = i0;

     label1:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label3;

        $i3 = i0 + i2;

        if i6 >= $i3 goto label3;

        $c5 = r0[i6];

        $i7 = (int) $c5;

        $i8 = (int) c4;

        if $i7 != $i8 goto label2;

        return i6;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $i10 = (int) -1;

        return $i10;
    }

    protected char[] preprocess(java.lang.String)
    {
        char[] $r1;
        java.lang.String r0;
        com.sun.lwuit.TextArea r2;

        r2 := @this: com.sun.lwuit.TextArea;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        return $r1;
    }

    private int updateRowWidth(char, com.sun.lwuit.Font)
    {
        int $i1, $i2, $i3, $i4;
        char c0;
        com.sun.lwuit.TextArea r0;
        com.sun.lwuit.Font r1;

        r0 := @this: com.sun.lwuit.TextArea;

        c0 := @parameter0: char;

        r1 := @parameter1: com.sun.lwuit.Font;

        $i1 = r0.<com.sun.lwuit.TextArea: int currentRowWidth>;

        $i2 = virtualinvoke r1.<com.sun.lwuit.Font: int charWidth(char)>(c0);

        $i3 = $i1 + $i2;

        r0.<com.sun.lwuit.TextArea: int currentRowWidth> = $i3;

        $i4 = r0.<com.sun.lwuit.TextArea: int currentRowWidth>;

        return $i4;
    }

    private boolean fastCharWidthCheck(char[], int, int, int, int, com.sun.lwuit.Font)
    {
        int i0, i1, $i2, $i3, $i4, i5, $i6, i7;
        char[] r0;
        com.sun.lwuit.TextArea r2;
        com.sun.lwuit.Font r1;
        boolean $z0;

        r2 := @this: com.sun.lwuit.TextArea;

        r0 := @parameter0: char[];

        i5 := @parameter1: int;

        i7 := @parameter2: int;

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: com.sun.lwuit.Font;

        $i2 = i7 * i0;

        if $i2 >= i1 goto label1;

        return 1;

     label1:
        $i3 = lengthof r0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i7);

        $i6 = virtualinvoke r1.<com.sun.lwuit.Font: int charsWidth(char[],int,int)>(r0, i5, $i4);

        if $i6 >= i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void initRowString()
    {
        com.sun.lwuit.plaf.Style $r1, $r10, $r19;
        java.util.Vector $r3, $r23, $r24;
        com.sun.lwuit.TextArea r0;
        java.lang.String $r4, $r5, $r6, $r7, $r13, r20, $r25, $r26, $r27;
        com.sun.lwuit.plaf.LookAndFeel $r16;
        char[] $r8;
        com.sun.lwuit.plaf.UIManager $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, i28, i29, $i30, $i31, $i32, $i33, $i34, i35, $i36, $i37, i38, $i39, $i40, $i41, $i42, i43, i44, i45, i46, i47, $i50, i51, $i53, $i54, $i55, $i57, $i59, $i61, $i62, $i63, $i65, $i67, $i69, $i70, $i71, $i72, $i74, $i76, $i78;
        char $c6, $c13, $c14, $c25, c48, c49, c52;
        com.sun.lwuit.Font $r9, $r11, $r12, $r17, r18;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        $r24 = new java.util.Vector;

        specialinvoke $r24.<java.util.Vector: void <init>()>();

        r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings> = $r24;

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i1 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i4 = $i2 - $i3;

        r0.<com.sun.lwuit.TextArea: int widthForRowCalculations> = $i4;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isSingleLineTextArea()>();

        if $z0 != 0 goto label01;

        $i5 = r0.<com.sun.lwuit.TextArea: int widthForRowCalculations>;

        if $i5 > 0 goto label02;

     label01:
        $r3 = r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings>;

        $r4 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return;

     label02:
        $r5 = r0.<com.sun.lwuit.TextArea: java.lang.String text>;

        if $r5 == null goto label03;

        $r6 = r0.<com.sun.lwuit.TextArea: java.lang.String text>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label04;

     label03:
        return;

     label04:
        $r7 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        $r8 = virtualinvoke r0.<com.sun.lwuit.TextArea: char[] preprocess(java.lang.String)>($r7);

        i28 = r0.<com.sun.lwuit.TextArea: int rows>;

        $z2 = r0.<com.sun.lwuit.TextArea: boolean growByContent>;

        if $z2 == 0 goto label05;

        $i27 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getLines()>();

        i28 = staticinvoke <java.lang.Math: int max(int,int)>(i28, $i27);

     label05:
        $r9 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        r18 = $r9;

        $c6 = <com.sun.lwuit.TextArea: char widestChar>;

        $i7 = virtualinvoke $r9.<com.sun.lwuit.Font: int charWidth(char)>($c6);

        i29 = $i7;

        $r10 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        $r11 = virtualinvoke $r10.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $r12 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        if $r11 == $r12 goto label06;

        $r17 = virtualinvoke $r10.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        $c25 = <com.sun.lwuit.TextArea: char widestChar>;

        $i26 = virtualinvoke $r17.<com.sun.lwuit.Font: int charWidth(char)>($c25);

        if $i26 <= $i7 goto label06;

        i29 = $i26;

        r18 = virtualinvoke $r10.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

     label06:
        $r19 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.plaf.Style getStyle()>();

        $i30 = virtualinvoke $r19.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 3);

        $i31 = virtualinvoke $r19.<com.sun.lwuit.plaf.Style: int getPadding(boolean,int)>(0, 1);

        $i32 = $i30 + $i31;

        $i33 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        $i34 = $i33 - $i32;

        i35 = $i34;

        $i36 = $i34 / i29;

        $i37 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i36);

        i38 = 0;

        $i39 = 0 + $i37;

        $i40 = lengthof $r8;

        $i41 = $i40 / $i37;

        $i42 = staticinvoke <java.lang.Math: int max(int,int)>(2, i28);

        if $i41 <= $i42 goto label07;

        $r15 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r16 = virtualinvoke $r15.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $i23 = virtualinvoke $r16.<com.sun.lwuit.plaf.LookAndFeel: int getVerticalScrollWidth()>();

        i43 = $i34 - $i23;

        $i24 = i29 / 2;

        i35 = i43 - $i24;

     label07:
        $r13 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getUnsupportedChars()>();

        $i8 = $i40 - 1;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i39);

        i44 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0);

     label08:
        if i44 >= $i40 goto label34;

        if i44 <= $i40 goto label09;

        i44 = $i40;

     label09:
        $i57 = (int) -1;

        i45 = $i57;

        r20 = "";

        i46 = i44;

        $z3 = <com.sun.lwuit.TextArea: boolean useStringWidth>;

        if $z3 == 0 goto label15;

        i47 = i44;

     label10:
        if i47 >= $i40 goto label22;

        $i19 = i47 - i38;

        $i20 = $i19 + 1;

        $z4 = specialinvoke r0.<com.sun.lwuit.TextArea: boolean fastCharWidthCheck(char[],int,int,int,int,com.sun.lwuit.Font)>($r8, i38, $i20, i35, i29, r18);

        if $z4 == 0 goto label22;

        c48 = $r8[i47];

        $i21 = specialinvoke r0.<com.sun.lwuit.TextArea: int updateRowWidth(char,com.sun.lwuit.Font)>(c48, r18);

        if $i21 < i35 goto label11;

        goto label22;

     label11:
        $i22 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(c48);

        $i59 = (int) -1;

        if $i22 <= $i59 goto label12;

        $r8[i47] = 32;

        c48 = 32;

     label12:
        if c48 == 32 goto label13;

        if c48 != 10 goto label14;

     label13:
        i45 = i47;

        if c48 != 10 goto label14;

        goto label22;

     label14:
        i46 = i46 + 1;

        i47 = i47 + 1;

        goto label10;

     label15:
        r0.<com.sun.lwuit.TextArea: int currentRowWidth> = 0;

        if i44 == i38 goto label16;

        $i17 = i44 - i38;

        $i18 = virtualinvoke r18.<com.sun.lwuit.Font: int charsWidth(char[],int,int)>($r8, i38, $i17);

        r0.<com.sun.lwuit.TextArea: int currentRowWidth> = $i18;

     label16:
        i47 = i44;

     label17:
        if i47 >= $i40 goto label22;

        c49 = $r8[i47];

        $i15 = specialinvoke r0.<com.sun.lwuit.TextArea: int updateRowWidth(char,com.sun.lwuit.Font)>(c49, r18);

        if $i15 < i35 goto label18;

        goto label22;

     label18:
        $i16 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(c49);

        $i61 = (int) -1;

        if $i16 <= $i61 goto label19;

        $r8[i47] = 32;

        c49 = 32;

     label19:
        if c49 == 32 goto label20;

        if c49 != 10 goto label21;

     label20:
        i45 = i47;

        if c49 != 10 goto label21;

        goto label22;

     label21:
        i46 = i46 + 1;

        i47 = i47 + 1;

        goto label17;

     label22:
        if i47 == $i40 goto label23;

        $c13 = $r8[i47];

        $i62 = (int) $c13;

        if $i62 == 32 goto label23;

        $c14 = $r8[i47];

        $i63 = (int) $c14;

        if $i63 != 10 goto label24;

     label23:
        i45 = i47;

     label24:
        $i65 = (int) -1;

        if i45 == $i65 goto label26;

        $i11 = i45 - i38;

        $i12 = specialinvoke r0.<com.sun.lwuit.TextArea: int indexOf(char[],char,int,int)>($r8, 10, i38, $i11);

        $i67 = (int) -1;

        if $i12 <= $i67 goto label25;

        if $i12 >= i45 goto label25;

        i45 = $i12;

     label25:
        $r25 = new java.lang.String;

        $i50 = i45 - i38;

        specialinvoke $r25.<java.lang.String: void <init>(char[],int,int)>($r8, i38, $i50);

        r20 = $r25;

        i38 = i45 + 1;

        goto label33;

     label26:
        i51 = i44;

     label27:
        $i69 = (int) -1;

        if i45 != $i69 goto label31;

        if i51 < i38 goto label31;

        c52 = $r8[i51];

        $i70 = (int) c52;

        if $i70 == 32 goto label28;

        $i71 = (int) c52;

        if $i71 == 10 goto label28;

        $i72 = (int) c52;

        if $i72 != 9 goto label30;

     label28:
        i45 = i51;

        $i53 = i51 - i38;

        $i54 = specialinvoke r0.<com.sun.lwuit.TextArea: int indexOf(char[],char,int,int)>($r8, 10, i38, $i53);

        $i74 = (int) -1;

        if $i54 <= $i74 goto label29;

        if $i54 >= i51 goto label29;

        i45 = $i54;

     label29:
        $r26 = new java.lang.String;

        $i55 = i45 - i38;

        specialinvoke $r26.<java.lang.String: void <init>(char[],int,int)>($r8, i38, $i55);

        r20 = $r26;

        i38 = i45 + 1;

     label30:
        $i76 = (int) -1;

        i51 = i51 + $i76;

        goto label27;

     label31:
        $i78 = (int) -1;

        if i45 != $i78 goto label33;

        if i46 > 0 goto label32;

        i46 = 1;

     label32:
        $r27 = new java.lang.String;

        $i10 = i46 - i38;

        specialinvoke $r27.<java.lang.String: void <init>(char[],int,int)>($r8, i38, $i10);

        r20 = $r27;

        i38 = i46;

     label33:
        $r23 = r0.<com.sun.lwuit.TextArea: java.util.Vector rowStrings>;

        virtualinvoke $r23.<java.util.Vector: void addElement(java.lang.Object)>(r20);

        i44 = i38;

        goto label08;

     label34:
        return;
    }

    public int getRowsGap()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int rowsGap>;

        return $i0;
    }

    public void setRowsGap(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.TextArea: int rowsGap> = i0;

        return;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.LookAndFeel $r1;
        com.sun.lwuit.Graphics r2;
        com.sun.lwuit.TextArea r3;
        com.sun.lwuit.plaf.UIManager $r0;

        r3 := @this: com.sun.lwuit.TextArea;

        r2 := @parameter0: com.sun.lwuit.Graphics;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: void drawTextArea(com.sun.lwuit.Graphics,com.sun.lwuit.TextArea)>(r2, r3);

        virtualinvoke r3.<com.sun.lwuit.TextArea: void paintHint(com.sun.lwuit.Graphics)>(r2);

        return;
    }

    void paintHint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.Label $r1, $r3, $r4, $r5, $r6, $r8;
        com.sun.lwuit.Graphics r7;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        r7 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextArea: java.lang.String getText()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r3 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        $i0 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getX()>();

        virtualinvoke $r3.<com.sun.lwuit.Label: void setX(int)>($i0);

        $r4 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        $i1 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getY()>();

        virtualinvoke $r4.<com.sun.lwuit.Label: void setY(int)>($i1);

        $r5 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        $i2 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getWidth()>();

        virtualinvoke $r5.<com.sun.lwuit.Label: void setWidth(int)>($i2);

        $r6 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        $i3 = virtualinvoke r0.<com.sun.lwuit.TextArea: int getHeight()>();

        virtualinvoke $r6.<com.sun.lwuit.Label: void setHeight(int)>($i3);

        $r8 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        virtualinvoke $r8.<com.sun.lwuit.Label: void paint(com.sun.lwuit.Graphics)>(r7);

     label1:
        return;
    }

    protected com.sun.lwuit.geom.Dimension calcPreferredSize()
    {
        com.sun.lwuit.geom.Dimension $r3;
        com.sun.lwuit.plaf.LookAndFeel $r1;
        com.sun.lwuit.TextArea r2;
        com.sun.lwuit.plaf.UIManager $r0;

        r2 := @this: com.sun.lwuit.TextArea;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $r3 = virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea,boolean)>(r2, 1);

        return $r3;
    }

    protected com.sun.lwuit.geom.Dimension calcScrollSize()
    {
        com.sun.lwuit.geom.Dimension $r3;
        com.sun.lwuit.plaf.LookAndFeel $r1;
        com.sun.lwuit.TextArea r2;
        com.sun.lwuit.plaf.UIManager $r0;

        r2 := @this: com.sun.lwuit.TextArea;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $r3 = virtualinvoke $r1.<com.sun.lwuit.plaf.LookAndFeel: com.sun.lwuit.geom.Dimension getTextAreaSize(com.sun.lwuit.TextArea,boolean)>(r2, 0);

        return $r3;
    }

    public void addActionListener(com.sun.lwuit.events.ActionListener)
    {
        java.util.Vector $r1, $r3, $r4, $r5;
        com.sun.lwuit.events.ActionListener r2;
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        r2 := @parameter0: com.sun.lwuit.events.ActionListener;

        $r1 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        if $r1 != null goto label1;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners> = $r5;

     label1:
        $r3 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        $z0 = virtualinvoke $r3.<java.util.Vector: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r4 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void removeActionListener(com.sun.lwuit.events.ActionListener)
    {
        java.util.Vector $r1, $r3, $r4;
        com.sun.lwuit.events.ActionListener r2;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r2 := @parameter0: com.sun.lwuit.events.ActionListener;

        $r1 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        if $r1 != null goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners> = $r4;

     label1:
        $r3 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>(r2);

        return;
    }

    void fireActionEvent()
    {
        com.sun.lwuit.events.ActionEvent $r2;
        com.sun.lwuit.events.ActionListener r6;
        java.util.Vector $r1, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        if $r1 == null goto label2;

        $r2 = new com.sun.lwuit.events.ActionEvent;

        specialinvoke $r2.<com.sun.lwuit.events.ActionEvent: void <init>(java.lang.Object)>(r0);

        i1 = 0;

     label1:
        $r3 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.sun.lwuit.TextArea: java.util.Vector actionListeners>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r6 = (com.sun.lwuit.events.ActionListener) $r5;

        interfaceinvoke r6.<com.sun.lwuit.events.ActionListener: void actionPerformed(com.sun.lwuit.events.ActionEvent)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void onEditComplete(java.lang.String)
    {
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;
        com.sun.lwuit.Container $r2;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setText(java.lang.String)>(r1);

        $r2 = virtualinvoke r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Container getParent()>();

        virtualinvoke $r2.<com.sun.lwuit.Container: void revalidate()>();

        return;
    }

    public static void setDefaultMaxSize(int)
    {
        int i0;

        i0 := @parameter0: int;

        <com.sun.lwuit.TextArea: int defaultMaxSize> = i0;

        return;
    }

    public boolean isGrowByContent()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = r0.<com.sun.lwuit.TextArea: boolean growByContent>;

        return $z0;
    }

    public void setGrowByContent(boolean)
    {
        com.sun.lwuit.TextArea r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextArea;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextArea: boolean growByContent> = z0;

        return;
    }

    public static void setAutoDegradeMaxSize(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.TextArea: boolean autoDegradeMaxSize> = z0;

        return;
    }

    public static boolean isAutoDegradeMaxSize()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.TextArea: boolean autoDegradeMaxSize>;

        return $z0;
    }

    public java.lang.String getUnsupportedChars()
    {
        java.lang.String $r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $r1 = r0.<com.sun.lwuit.TextArea: java.lang.String unsupportedChars>;

        return $r1;
    }

    public void setUnsupportedChars(java.lang.String)
    {
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        r0.<com.sun.lwuit.TextArea: java.lang.String unsupportedChars> = r1;

        return;
    }

    public int getLinesToScroll()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int linesToScroll>;

        return $i0;
    }

    public void setLinesToScroll(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lines to scroll has to be >= 1");

        throw $r1;

     label1:
        r0.<com.sun.lwuit.TextArea: int linesToScroll> = i0;

        return;
    }

    public static void setWidestChar(char)
    {
        char c0;

        c0 := @parameter0: char;

        <com.sun.lwuit.TextArea: char widestChar> = c0;

        return;
    }

    public static char getWidestChar()
    {
        char $c0;

        $c0 = <com.sun.lwuit.TextArea: char widestChar>;

        return $c0;
    }

    public void setSingleLineTextArea(boolean)
    {
        com.sun.lwuit.TextArea r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.TextArea;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.TextArea: boolean singleLineTextArea> = z0;

        return;
    }

    public boolean isSingleLineTextArea()
    {
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        $z0 = r0.<com.sun.lwuit.TextArea: boolean singleLineTextArea>;

        return $z0;
    }

    public void setAlignment(int)
    {
        java.lang.IllegalArgumentException $r1;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        if i0 == 4 goto label1;

        if i0 == 3 goto label1;

        if i0 == 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alignment can\'t be set to ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<com.sun.lwuit.TextArea: int align> = i0;

        r0.<com.sun.lwuit.TextArea: int absAlign> = i0;

        $z0 = virtualinvoke r0.<com.sun.lwuit.TextArea: boolean isRTL()>();

        if $z0 == 0 goto label4;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        r0.<com.sun.lwuit.TextArea: int absAlign> = 3;

        goto label4;

     label3:
        r0.<com.sun.lwuit.TextArea: int absAlign> = 1;

     label4:
        return;
    }

    public int getAlignment()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int align>;

        return $i0;
    }

    public int getAbsoluteAlignment()
    {
        int $i0;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i0 = r0.<com.sun.lwuit.TextArea: int absAlign>;

        return $i0;
    }

    public boolean isPendingCommit()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        return 0;
    }

    public int getCursorPosition()
    {
        int $i1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i1 = (int) -1;

        return $i1;
    }

    public int getCursorY()
    {
        int $i1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i1 = (int) -1;

        return $i1;
    }

    public int getCursorX()
    {
        int $i1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        $i1 = (int) -1;

        return $i1;
    }

    public boolean isQwertyInput()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        return 0;
    }

    public java.lang.String getInputMode()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        return null;
    }

    public java.lang.String[] getInputModeOrder()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        return null;
    }

    public boolean isEnableInputScroll()
    {
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        return 0;
    }

    protected boolean isEnterKey(int)
    {
        int i0;
        com.sun.lwuit.TextArea r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.TextArea;

        i0 := @parameter0: int;

        if i0 != 10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void autoDetectWidestChar(java.lang.String)
    {
        char $c1;
        com.sun.lwuit.plaf.UIManager $r0;
        com.sun.lwuit.plaf.Style $r1;
        int $i0, $i2, i3, i4;
        java.lang.String r3;
        com.sun.lwuit.Font $r2;

        r3 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r1 = virtualinvoke $r0.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.Style getComponentStyle(java.lang.String)>("TextArea");

        $r2 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: com.sun.lwuit.Font getFont()>();

        i3 = 0;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if i4 >= $i0 goto label3;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4);

        $i2 = virtualinvoke $r2.<com.sun.lwuit.Font: int charWidth(char)>($c1);

        if $i2 <= i3 goto label2;

        i3 = $i2;

        staticinvoke <com.sun.lwuit.TextArea: void setWidestChar(char)>($c1);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public static boolean isUseStringWidth()
    {
        boolean $z0;

        $z0 = <com.sun.lwuit.TextArea: boolean useStringWidth>;

        return $z0;
    }

    public static void setUseStringWidth(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.sun.lwuit.TextArea: boolean useStringWidth> = z0;

        return;
    }

    public void setHint(java.lang.String)
    {
        java.lang.String r1;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.sun.lwuit.TextArea: void setHint(java.lang.String,com.sun.lwuit.Image)>(r1, null);

        return;
    }

    public void setHint(java.lang.String, com.sun.lwuit.Image)
    {
        com.sun.lwuit.Label $r1, $r3, $r5, $r6, $r7;
        com.sun.lwuit.Image r4;
        java.lang.String r2;
        com.sun.lwuit.TextArea r0;

        r0 := @this: com.sun.lwuit.TextArea;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: com.sun.lwuit.Image;

        $r1 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        if $r1 != null goto label1;

        $r6 = new com.sun.lwuit.Label;

        specialinvoke $r6.<com.sun.lwuit.Label: void <init>(java.lang.String)>(r2);

        r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel> = $r6;

        $r7 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        virtualinvoke $r7.<com.sun.lwuit.Label: void setUIID(java.lang.String)>("TextHint");

        goto label2;

     label1:
        $r3 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        virtualinvoke $r3.<com.sun.lwuit.Label: void setText(java.lang.String)>(r2);

     label2:
        $r5 = r0.<com.sun.lwuit.TextArea: com.sun.lwuit.Label hintLabel>;

        virtualinvoke $r5.<com.sun.lwuit.Label: void setIcon(com.sun.lwuit.Image)>(r4);

        return;
    }

    static void <clinit>()
    {
        <com.sun.lwuit.TextArea: int INITIAL_CAPS_SENTENCE> = 2097152;

        <com.sun.lwuit.TextArea: int INITIAL_CAPS_WORD> = 1048576;

        <com.sun.lwuit.TextArea: int NON_PREDICTIVE> = 524288;

        <com.sun.lwuit.TextArea: int SENSITIVE> = 262144;

        <com.sun.lwuit.TextArea: int UNEDITABLE> = 131072;

        <com.sun.lwuit.TextArea: int PASSWORD> = 65536;

        <com.sun.lwuit.TextArea: int DECIMAL> = 5;

        <com.sun.lwuit.TextArea: int URL> = 4;

        <com.sun.lwuit.TextArea: int PHONENUMBER> = 3;

        <com.sun.lwuit.TextArea: int NUMERIC> = 2;

        <com.sun.lwuit.TextArea: int EMAILADDR> = 1;

        <com.sun.lwuit.TextArea: int ANY> = 0;

        <com.sun.lwuit.TextArea: char ENTER_KEY> = 10;

        <com.sun.lwuit.TextArea: int defaultMaxSize> = 124;

        <com.sun.lwuit.TextArea: boolean autoDegradeMaxSize> = 0;

        <com.sun.lwuit.TextArea: boolean hadSuccessfulEdit> = 0;

        <com.sun.lwuit.TextArea: char widestChar> = 87;

        return;
    }
}
