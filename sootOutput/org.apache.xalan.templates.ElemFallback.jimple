public class org.apache.xalan.templates.ElemFallback extends org.apache.xalan.templates.ElemTemplateElement
{

    public void <init>()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        return 57;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemFallback r0;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        return "fallback";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemFallback r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public void executeFallback(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.io.PrintStream $r5;
        org.apache.xalan.templates.ElemTemplateElement $r1;
        org.apache.xalan.trace.TraceManager $r3, $r4;
        org.apache.xalan.templates.ElemFallback r0;
        int $i0, $i2;
        boolean $z0, $z1;
        org.apache.xalan.transformer.TransformerImpl r2;

        r0 := @this: org.apache.xalan.templates.ElemFallback;

        r2 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_parentNode>;

        $i0 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 79 == $i0 goto label1;

        $i2 = (int) -1;

        if $i2 != $i0 goto label3;

     label1:
        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r4.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r0);

     label2:
        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, 1);

        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label4;

        $r3 = virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r3.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        goto label4;

     label3:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Error!  parent of xsl:fallback must be an extension or unknown element!");

     label4:
        return;
    }
}
