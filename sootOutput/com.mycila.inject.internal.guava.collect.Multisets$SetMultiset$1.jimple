class com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 extends com.mycila.inject.internal.guava.collect.Multisets$EntrySet
{
    final com.mycila.inject.internal.guava.collect.Multisets$SetMultiset this$0;

    void <init>(com.mycila.inject.internal.guava.collect.Multisets$SetMultiset)
    {
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset;

        r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Multisets$EntrySet: void <init>()>();

        return;
    }

    com.mycila.inject.internal.guava.collect.Multiset multiset()
    {
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset this$0>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1 $r4;
        java.util.Iterator $r3, $r5;
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset: java.util.Set delegate>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1$1: void <init>(com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1)>(r0);

        $r5 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.mycila.inject.internal.guava.base.Function)>($r3, $r4);

        return $r5;
    }

    public int size()
    {
        int $i0;
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1 r0;
        com.mycila.inject.internal.guava.collect.Multisets$SetMultiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset$1: com.mycila.inject.internal.guava.collect.Multisets$SetMultiset this$0>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.Multisets$SetMultiset: java.util.Set delegate>;

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        return $i0;
    }
}
