public class com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer extends com.mycila.inject.internal.cglib.transform.ClassEmitterTransformer
{
    private final java.lang.String[] names;
    private final com.mycila.inject.internal.asm.Type[] types;

    public void <init>(java.util.Map)
    {
        java.lang.Object[] $r4;
        java.util.Set $r2;
        com.mycila.inject.internal.asm.Type $r12;
        java.lang.String[] $r3, $r5, $r6, $r8;
        java.util.Map r1;
        int $i0, i1;
        java.lang.Object $r11;
        java.lang.String $r9;
        com.mycila.inject.internal.asm.Type[] $r7, $r10;
        com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.ClassEmitterTransformer: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = (java.lang.String[]) $r5;

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: java.lang.String[] names> = $r6;

        $r7 = newarray (com.mycila.inject.internal.asm.Type)[$i0];

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: com.mycila.inject.internal.asm.Type[] types> = $r7;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r10 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: com.mycila.inject.internal.asm.Type[] types>;

        $r8 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: java.lang.String[] names>;

        $r9 = $r8[i1];

        $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r12 = (com.mycila.inject.internal.asm.Type) $r11;

        $r10[i1] = $r12;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.lang.String[], com.mycila.inject.internal.asm.Type[])
    {
        java.lang.String[] r1;
        com.mycila.inject.internal.asm.Type[] r2;
        com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer r0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: com.mycila.inject.internal.asm.Type[];

        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.ClassEmitterTransformer: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: java.lang.String[] names> = r1;

        r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: com.mycila.inject.internal.asm.Type[] types> = r2;

        return;
    }

    public void end_class()
    {
        int $i0;
        java.lang.String[] $r2;
        com.mycila.inject.internal.asm.Type[] $r1;
        com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: int getAccess()>();

        $z0 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: boolean isAbstract(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: java.lang.String[] names>;

        $r1 = r0.<com.mycila.inject.internal.cglib.transform.impl.AddPropertyTransformer: com.mycila.inject.internal.asm.Type[] types>;

        staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: void add_properties(com.mycila.inject.internal.cglib.core.ClassEmitter,java.lang.String[],com.mycila.inject.internal.asm.Type[])>(r0, $r2, $r1);

     label1:
        specialinvoke r0.<com.mycila.inject.internal.cglib.transform.ClassEmitterTransformer: void end_class()>();

        return;
    }
}
