final enum class org.jsoup.parser.HtmlTreeBuilderState$10 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int i0;
        org.jsoup.parser.HtmlTreeBuilderState$10 r0;
        java.lang.String r1;

        r0 := @this: org.jsoup.parser.HtmlTreeBuilderState$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>(r1, i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        java.lang.String[] $r17;
        int[] $r2;
        org.jsoup.nodes.Element $r15;
        int $i0, $i1, $i2;
        org.jsoup.parser.HtmlTreeBuilderState$10 r8;
        java.lang.String $r4, $r5, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r12;
        org.jsoup.parser.Token r0;
        org.jsoup.parser.Token$Character $r3, r14;
        org.jsoup.parser.Token$TokenType $r1;
        java.util.List $r7, $r9, $r11;
        org.jsoup.parser.HtmlTreeBuilderState $r10, $r18, $r19;
        java.lang.Object $r13;
        org.jsoup.parser.HtmlTreeBuilder r6;

        r8 := @this: org.jsoup.parser.HtmlTreeBuilderState$10;

        r0 := @parameter0: org.jsoup.parser.Token;

        r6 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r2 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r1 = r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r1.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r2[$i0];

        lookupswitch($i1)
        {
            case 5: goto label01;
            default: goto label03;
        };

     label01:
        $r3 = virtualinvoke r0.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        $r4 = virtualinvoke $r3.<org.jsoup.parser.Token$Character: java.lang.String getData()>();

        $r5 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: java.lang.String access$400()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r8);

        return 0;

     label02:
        $r7 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label10;

     label03:
        $r9 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 <= 0 goto label09;

        $r11 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: java.util.List getPendingTableCharacters()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.jsoup.parser.Token$Character) $r13;

        $z3 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>(r14);

        if $z3 != 0 goto label06;

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>(r8);

        $r15 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r16 = virtualinvoke $r15.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $r17 = newarray (java.lang.String)[5];

        $r17[0] = "table";

        $r17[1] = "tbody";

        $r17[2] = "tfoot";

        $r17[3] = "thead";

        $r17[4] = "tr";

        $z4 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r16, $r17);

        if $z4 == 0 goto label05;

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(1);

        $r19 = <org.jsoup.parser.HtmlTreeBuilderState$10: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r14, $r19);

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(0);

        goto label07;

     label05:
        $r18 = <org.jsoup.parser.HtmlTreeBuilderState$10: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>(r14, $r18);

        goto label07;

     label06:
        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>(r14);

     label07:
        goto label04;

     label08:
        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void newPendingTableCharacters()>();

     label09:
        $r10 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.parser.HtmlTreeBuilderState originalState()>();

        virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        $z1 = virtualinvoke r6.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>(r0);

        return $z1;

     label10:
        return 1;
    }
}
