public final class org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil r0;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation, org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument $r2, $r3;
        java.lang.String $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r0, r1;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasAddParticipant()>();

        $z1 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasAddParticipant()>();

        if $z0 == $z1 goto label1;

        return 0;

     label1:
        $z2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasAddParticipant()>();

        if $z2 == 0 goto label2;

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getAddParticipant()>();

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getAddParticipant()>();

        $z16 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z16 != 0 goto label2;

        return 0;

     label2:
        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        $z4 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        if $z3 == $z4 goto label3;

        return 0;

     label3:
        $z5 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        if $z5 == 0 goto label4;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getRemoveParticipant()>();

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getRemoveParticipant()>();

        $z15 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z15 != 0 goto label4;

        return 0;

     label4:
        $z6 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasMutateDocument()>();

        $z7 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasMutateDocument()>();

        if $z6 == $z7 goto label5;

        return 0;

     label5:
        $z8 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasMutateDocument()>();

        if $z8 == 0 goto label6;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()>();

        $z14 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil$MutateDocumentUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument,org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>($r2, $r3);

        if $z14 != 0 goto label6;

        return 0;

     label6:
        $z9 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasNoOp()>();

        $z10 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasNoOp()>();

        if $z9 == $z10 goto label7;

        return 0;

     label7:
        $z11 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasNoOp()>();

        if $z11 == 0 goto label8;

        $z12 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean getNoOp()>();

        $z13 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean getNoOp()>();

        if $z12 == $z13 goto label8;

        return 0;

     label8:
        return 1;
    }

    public static boolean areAllEqual(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation $r5, $r7;
        java.util.List r0, r1;
        int $i0, $i1;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) $r4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) $r6;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation,org.waveprotocol.wave.federation.ProtocolWaveletOperation)>($r5, $r7);

        if $z1 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public static int getHashCode(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Boolean $r1;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r0;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasAddParticipant()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getAddParticipant()>();

        $i7 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i7 = 0;

     label2:
        $i6 = 31 + $i7;

        $i0 = 31 * $i6;

        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getRemoveParticipant()>();

        $i8 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        goto label4;

     label3:
        $i8 = 0;

     label4:
        $i5 = $i0 + $i8;

        $i1 = 31 * $i5;

        $z2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasMutateDocument()>();

        if $z2 == 0 goto label5;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()>();

        $i9 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $i9 = 0;

     label6:
        $i4 = $i1 + $i9;

        $i2 = 31 * $i4;

        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasNoOp()>();

        if $z3 == 0 goto label7;

        $z4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean getNoOp()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $i10 = virtualinvoke $r1.<java.lang.Boolean: int hashCode()>();

        goto label8;

     label7:
        $i10 = 0;

     label8:
        $i3 = $i2 + $i10;

        return $i3;
    }
}
