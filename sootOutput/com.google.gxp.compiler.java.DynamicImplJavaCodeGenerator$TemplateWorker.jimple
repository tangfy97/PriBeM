public class com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker extends com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker
{
    private final long compilationVersion;
    private java.util.regex.Pattern PARAM_PATTERN;

    void <init>(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template, long)
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        long l0;
        java.util.regex.Pattern $r4;
        com.google.gxp.compiler.base.Template r3;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Template;

        l0 := @parameter3: long;

        specialinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template,java.lang.String)>(r1, r2, r3, null);

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("%[1-9%]");

        r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: java.util.regex.Pattern PARAM_PATTERN> = $r4;

        r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: long compilationVersion> = l0;

        return;
    }

    public com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker createSubWorker(java.lang.Appendable)
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker $r0, r2;
        com.google.gxp.compiler.alerts.AlertSink $r4;
        java.lang.Appendable r1;
        long $l0;
        com.google.gxp.compiler.base.Template $r3;

        r2 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: java.lang.Appendable;

        $r0 = new com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r4 = r2.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r3 = r2.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.base.Template template>;

        $l0 = r2.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: long compilationVersion>;

        specialinvoke $r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Template,long)>(r1, $r4, $r3, $l0);

        return $r0;
    }

    protected java.lang.String getClassName(com.google.gxp.compiler.base.TemplateName)
    {
        com.google.gxp.compiler.base.TemplateName r2;
        long $l0;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r1 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        r2 := @parameter0: com.google.gxp.compiler.base.TemplateName;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String getClassName(com.google.gxp.compiler.base.TemplateName)>(r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$Impl");

        $l0 = r1.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: long compilationVersion>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected java.lang.String getBaseClassName()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        return "com.google.gxp.base.dynamic.ImplGxpTemplate";
    }

    protected com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor getStatementVisitor()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor $r0;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r1;

        r1 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r0 = new com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor;

        specialinvoke $r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor: void <init>(com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$1)>(r1, null);

        return $r0;
    }

    protected com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor getToEscapableExpressionVisitor()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r1;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor $r0;

        r1 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r0 = new com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor;

        specialinvoke $r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor: void <init>(com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$1)>(r1, null);

        return $r0;
    }

    protected void appendGetArgListMethod()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        return;
    }

    protected void appendGetGxpClosureMethod(boolean)
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        z0 := @parameter0: boolean;

        return;
    }

    protected void appendInterface()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        return;
    }

    protected void appendInstance()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        return;
    }

    protected volatile com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor getToEscapableExpressionVisitor()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor $r1;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$ToEscapableExpressionVisitor getToEscapableExpressionVisitor()>();

        return $r1;
    }

    protected volatile com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$StatementVisitor getStatementVisitor()
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor $r1;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r1 = virtualinvoke r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker$StatementVisitor getStatementVisitor()>();

        return $r1;
    }

    public volatile com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker createSubWorker(java.lang.Appendable)
    {
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0, $r2;
        java.lang.Appendable r1;

        r0 := @this: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        r1 := @parameter0: java.lang.Appendable;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker createSubWorker(java.lang.Appendable)>(r1);

        return $r2;
    }

    static void access$100(com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker, com.google.gxp.compiler.alerts.SourcePosition, java.lang.String, java.lang.Object[])
    {
        com.google.gxp.compiler.alerts.SourcePosition r1;
        java.lang.Object[] r3;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;
        java.lang.String r2;

        r0 := @parameter0: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        r1 := @parameter1: com.google.gxp.compiler.alerts.SourcePosition;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        virtualinvoke r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return;
    }

    static java.util.regex.Pattern access$200(com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker)
    {
        java.util.regex.Pattern $r1;
        com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker r0;

        r0 := @parameter0: com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker;

        $r1 = r0.<com.google.gxp.compiler.java.DynamicImplJavaCodeGenerator$TemplateWorker: java.util.regex.Pattern PARAM_PATTERN>;

        return $r1;
    }
}
