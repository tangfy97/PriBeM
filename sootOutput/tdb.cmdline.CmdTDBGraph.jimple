public abstract class tdb.cmdline.CmdTDBGraph extends tdb.cmdline.CmdTDB
{
    private static final arq.cmdline.ArgDecl argNamedGraph;
    protected java.lang.String graphName;

    protected void <init>(java.lang.String[])
    {
        tdb.cmdline.CmdTDBGraph r0;
        arq.cmdline.ArgDecl $r2;
        java.lang.String[] r1;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<tdb.cmdline.CmdTDB: void <init>(java.lang.String[])>(r1);

        r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName> = null;

        $r2 = <tdb.cmdline.CmdTDBGraph: arq.cmdline.ArgDecl argNamedGraph>;

        specialinvoke r0.<tdb.cmdline.CmdTDB: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r2, "--graph=IRI", "Act on a named graph");

        return;
    }

    protected void processModulesAndArgs()
    {
        tdb.cmdline.CmdTDBGraph r0;
        arq.cmdline.ArgDecl $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        specialinvoke r0.<tdb.cmdline.CmdTDB: void processModulesAndArgs()>();

        $r1 = <tdb.cmdline.CmdTDBGraph: arq.cmdline.ArgDecl argNamedGraph>;

        $z0 = virtualinvoke r0.<tdb.cmdline.CmdTDBGraph: boolean contains(arq.cmdline.ArgDecl)>($r1);

        if $z0 == 0 goto label1;

        $r2 = <tdb.cmdline.CmdTDBGraph: arq.cmdline.ArgDecl argNamedGraph>;

        $r3 = virtualinvoke r0.<tdb.cmdline.CmdTDBGraph: java.lang.String getValue(arq.cmdline.ArgDecl)>($r2);

        r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName> = $r3;

     label1:
        return;
    }

    protected com.hp.hpl.jena.rdf.model.Model getModel()
    {
        tdb.cmdline.ModTDBDataset $r1;
        tdb.cmdline.CmdTDBGraph r0;
        com.hp.hpl.jena.rdf.model.Model $r4, $r6;
        arq.cmd.CmdException $r7;
        com.hp.hpl.jena.query.Dataset $r2;
        java.lang.String $r3, $r5;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        $r1 = r0.<tdb.cmdline.CmdTDBGraph: tdb.cmdline.ModTDBDataset tdbDatasetAssembler>;

        $r2 = virtualinvoke $r1.<tdb.cmdline.ModTDBDataset: com.hp.hpl.jena.query.Dataset getDataset()>();

        $r3 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        if $r3 == null goto label2;

        $r5 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getNamedModel(java.lang.String)>($r5);

        if $r6 != null goto label1;

        $r7 = new arq.cmd.CmdException;

        specialinvoke $r7.<arq.cmd.CmdException: void <init>(java.lang.String)>("No such named graph (is this a TDB dataset?)");

        throw $r7;

     label1:
        return $r6;

     label2:
        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        return $r4;
    }

    public com.hp.hpl.jena.graph.Node getGraphName()
    {
        tdb.cmdline.CmdTDBGraph r0;
        java.lang.String $r1, $r2;
        com.hp.hpl.jena.graph.Node $r3;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        $r1 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r2);

     label2:
        return $r3;
    }

    protected com.hp.hpl.jena.tdb.store.GraphTDB getGraph()
    {
        tdb.cmdline.ModTDBDataset $r2, $r7;
        tdb.cmdline.CmdTDBGraph r0;
        com.hp.hpl.jena.rdf.model.Model $r4, $r10;
        com.hp.hpl.jena.query.Dataset $r3, $r8;
        java.lang.String $r1, $r9;
        com.hp.hpl.jena.graph.Graph $r5, $r11;
        com.hp.hpl.jena.tdb.store.GraphTDB $r6, $r12;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        $r1 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        if $r1 == null goto label1;

        $r7 = r0.<tdb.cmdline.CmdTDBGraph: tdb.cmdline.ModTDBDataset tdbDatasetAssembler>;

        $r8 = virtualinvoke $r7.<tdb.cmdline.ModTDBDataset: com.hp.hpl.jena.query.Dataset getDataset()>();

        $r9 = r0.<tdb.cmdline.CmdTDBGraph: java.lang.String graphName>;

        $r10 = interfaceinvoke $r8.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getNamedModel(java.lang.String)>($r9);

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r12 = (com.hp.hpl.jena.tdb.store.GraphTDB) $r11;

        return $r12;

     label1:
        $r2 = r0.<tdb.cmdline.CmdTDBGraph: tdb.cmdline.ModTDBDataset tdbDatasetAssembler>;

        $r3 = virtualinvoke $r2.<tdb.cmdline.ModTDBDataset: com.hp.hpl.jena.query.Dataset getDataset()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r6 = (com.hp.hpl.jena.tdb.store.GraphTDB) $r5;

        return $r6;
    }

    protected java.lang.String getCommandName()
    {
        tdb.cmdline.CmdTDBGraph r0;
        java.lang.String $r1;

        r0 := @this: tdb.cmdline.CmdTDBGraph;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        arq.cmdline.ArgDecl $r0;
        java.lang.String[] $r1;

        $r0 = new arq.cmdline.ArgDecl;

        $r1 = newarray (java.lang.String)[0];

        specialinvoke $r0.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "graph", $r1);

        <tdb.cmdline.CmdTDBGraph: arq.cmdline.ArgDecl argNamedGraph> = $r0;

        return;
    }
}
