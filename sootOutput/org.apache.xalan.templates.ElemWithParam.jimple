public class org.apache.xalan.templates.ElemWithParam extends org.apache.xalan.templates.ElemTemplateElement
{
    int m_index;
    private org.apache.xpath.XPath m_selectPattern;
    private org.apache.xml.utils.QName m_qname;
    int m_qnameID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = null;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname> = null;

        return;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xpath.XPath r1;
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = r1;

        return;
    }

    public org.apache.xpath.XPath getSelect()
    {
        org.apache.xpath.XPath $r1;
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        return $r1;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xml.utils.QName r1;
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname> = r1;

        return;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xml.utils.QName $r1;
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname>;

        return $r1;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        return 2;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        return "with-param";
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.QName $r7;
        org.apache.xpath.XPath $r1, $r3, $r5, $r10;
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.templates.StylesheetRoot r2;
        java.util.Vector $r9;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r4, $r6, $r8;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r2 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if null != $r1 goto label1;

        $z0 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath rewriteChildToExpression(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        if null == $r5 goto label1;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = $r5;

     label1:
        $r6 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r7 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname>;

        $i1 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getQNameID(org.apache.xml.utils.QName)>($r7);

        r0.<org.apache.xalan.templates.ElemWithParam: int m_qnameID> = $i1;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r2);

        $r8 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r9 = virtualinvoke $r8.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r10 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if null == $r10 goto label2;

        $r3 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        $r4 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r4.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r3.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>($r9, $i0);

     label2:
        return;
    }

    public void setParentElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        r1.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl> = 1;

        return;
    }

    public org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r10;
        org.apache.xpath.XPath $r3, $r6, $r9;
        org.apache.xalan.templates.ElemTemplateElement $r4;
        org.apache.xalan.templates.ElemWithParam r2;
        org.apache.xalan.trace.TraceManager $r8;
        org.apache.xpath.objects.XRTreeFrag $r5;
        org.apache.xpath.XPathContext $r1;
        int i0, $i1;
        org.apache.xpath.objects.XObject $r7, r11;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r2 := @this: org.apache.xalan.templates.ElemWithParam;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

     label01:
        $r3 = r2.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if null == $r3 goto label02;

        $r6 = r2.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        $r7 = virtualinvoke $r6.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r1, i0, r2);

        r11 = $r7;

        virtualinvoke $r7.<org.apache.xpath.objects.XObject: void allowDetachToRelease(boolean)>(0);

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label04;

        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r9 = r2.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        virtualinvoke $r8.<org.apache.xalan.trace.TraceManager: void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>(i0, r2, "select", $r9, $r7);

        goto label04;

     label02:
        $r4 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if null != $r4 goto label03;

        r11 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        goto label04;

     label03:
        $i1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        $r5 = new org.apache.xpath.objects.XRTreeFrag;

        specialinvoke $r5.<org.apache.xpath.objects.XRTreeFrag: void <init>(int,org.apache.xpath.XPathContext,org.apache.xpath.ExpressionNode)>($i1, $r1, r2);

        r11 = $r5;

     label04:
        goto label09;

     label05:
        goto label08;

     label06:
        $r10 := @caughtexception;

        goto label10;

     label07:
        throw $r10;

     label08:
        return r11;

     label09:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label05;

     label10:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        goto label07;

        catch java.lang.Throwable from label01 to label06 with label06;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xpath.Expression $r4;
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xpath.XPath $r2, $r3, $r5;
        org.apache.xalan.templates.ElemWithParam r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if null == $r2 goto label1;

        $r3 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r5 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        virtualinvoke $r4.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r5, r1);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        java.lang.Object[] $r4;
        org.apache.xpath.XPath $r1;
        org.apache.xalan.templates.ElemTemplateElement r2, $r3;
        org.apache.xalan.templates.ElemWithParam r0;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r2 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r1 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xsl:");

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.ElemWithParam: java.lang.String getNodeName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4[0] = $r9;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANT_HAVE_CONTENT_AND_SELECT", $r4);

        return null;

     label1:
        $r3 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        return $r3;
    }
}
