class org.wiztools.restclient.ui.FileOpenUtil extends java.lang.Object
{

    private void <init>()
    {
        org.wiztools.restclient.ui.FileOpenUtil r0;

        r0 := @this: org.wiztools.restclient.ui.FileOpenUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void openRequest(org.wiztools.restclient.ui.RESTViewImpl, java.io.File)
    {
        org.wiztools.restclient.ui.RESTViewImpl r2;
        java.io.IOException $r5;
        org.wiztools.restclient.bean.Request $r1;
        java.lang.String $r3;
        java.io.File r0;
        java.lang.Exception r6;
        org.wiztools.restclient.XMLException $r4;

        r2 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        r0 := @parameter1: java.io.File;

        r6 = null;

     label1:
        $r1 = staticinvoke <org.wiztools.restclient.util.XMLUtil: org.wiztools.restclient.bean.Request getRequestFromXMLFile(java.io.File)>(r0);

        virtualinvoke r2.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromRequest(org.wiztools.restclient.bean.Request)>($r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        goto label5;

     label4:
        $r4 := @caughtexception;

        r6 = $r4;

     label5:
        if r6 == null goto label6;

        $r3 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>(r6);

        virtualinvoke r2.<org.wiztools.restclient.ui.RESTViewImpl: void showError(java.lang.String)>($r3);

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.wiztools.restclient.XMLException from label1 to label2 with label4;
    }

    static void openResponse(org.wiztools.restclient.ui.RESTViewImpl, java.io.File)
    {
        org.wiztools.restclient.ui.RESTViewImpl r2;
        java.io.IOException $r5;
        org.wiztools.restclient.bean.Response $r1;
        java.lang.String $r3;
        java.io.File r0;
        java.lang.Exception r6;
        org.wiztools.restclient.XMLException $r4;

        r2 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        r0 := @parameter1: java.io.File;

        r6 = null;

     label1:
        $r1 = staticinvoke <org.wiztools.restclient.util.XMLUtil: org.wiztools.restclient.bean.Response getResponseFromXMLFile(java.io.File)>(r0);

        virtualinvoke r2.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromResponse(org.wiztools.restclient.bean.Response)>($r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        goto label5;

     label4:
        $r4 := @caughtexception;

        r6 = $r4;

     label5:
        if r6 == null goto label6;

        $r3 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>(r6);

        virtualinvoke r2.<org.wiztools.restclient.ui.RESTViewImpl: void showError(java.lang.String)>($r3);

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.wiztools.restclient.XMLException from label1 to label2 with label4;
    }

    static void openArchive(org.wiztools.restclient.ui.RESTViewImpl, java.io.File)
    {
        org.wiztools.restclient.ui.RESTViewImpl r4;
        java.io.IOException $r7;
        org.wiztools.restclient.bean.Request $r2;
        java.io.File r0;
        java.lang.Exception r8;
        org.wiztools.restclient.XMLException $r6;
        org.wiztools.restclient.bean.ReqResBean $r1;
        org.wiztools.restclient.bean.Response $r3;
        java.lang.String $r5;

        r4 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        r0 := @parameter1: java.io.File;

        r8 = null;

     label1:
        $r1 = staticinvoke <org.wiztools.restclient.util.Util: org.wiztools.restclient.bean.ReqResBean getReqResArchive(java.io.File)>(r0);

        $r2 = virtualinvoke $r1.<org.wiztools.restclient.bean.ReqResBean: org.wiztools.restclient.bean.Request getRequestBean()>();

        $r3 = virtualinvoke $r1.<org.wiztools.restclient.bean.ReqResBean: org.wiztools.restclient.bean.Response getResponseBean()>();

        if $r2 == null goto label2;

        if $r3 == null goto label2;

        virtualinvoke r4.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromRequest(org.wiztools.restclient.bean.Request)>($r2);

        virtualinvoke r4.<org.wiztools.restclient.ui.RESTViewImpl: void setUIFromResponse(org.wiztools.restclient.bean.Response)>($r3);

        goto label3;

     label2:
        virtualinvoke r4.<org.wiztools.restclient.ui.RESTViewImpl: void showError(java.lang.String)>("Unable to load archive! Check if valid archive!");

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r8 = $r7;

        goto label6;

     label5:
        $r6 := @caughtexception;

        r8 = $r6;

     label6:
        if r8 == null goto label7;

        $r5 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>(r8);

        virtualinvoke r4.<org.wiztools.restclient.ui.RESTViewImpl: void showError(java.lang.String)>($r5);

     label7:
        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch org.wiztools.restclient.XMLException from label1 to label3 with label5;
    }

    static void open(org.wiztools.restclient.ui.RESTViewImpl, java.io.File)
    {
        org.wiztools.restclient.ui.RESTViewImpl r3;
        java.io.File r0;
        java.lang.String $r1, $r2;
        java.awt.Container $r4;
        boolean $z0, $z1, $z2;

        r3 := @parameter0: org.wiztools.restclient.ui.RESTViewImpl;

        r0 := @parameter1: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcq");

        if $z0 == 0 goto label1;

        staticinvoke <org.wiztools.restclient.ui.FileOpenUtil: void openRequest(org.wiztools.restclient.ui.RESTViewImpl,java.io.File)>(r3, r0);

        goto label4;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcs");

        if $z1 == 0 goto label2;

        staticinvoke <org.wiztools.restclient.ui.FileOpenUtil: void openResponse(org.wiztools.restclient.ui.RESTViewImpl,java.io.File)>(r3, r0);

        goto label4;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".rcr");

        if $z2 == 0 goto label3;

        staticinvoke <org.wiztools.restclient.ui.FileOpenUtil: void openArchive(org.wiztools.restclient.ui.RESTViewImpl,java.io.File)>(r3, r0);

        goto label4;

     label3:
        $r4 = virtualinvoke r3.<org.wiztools.restclient.ui.RESTViewImpl: java.awt.Container getContainer()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r4, "File in unrecognized format!", "File in unrecognized format!", 0);

     label4:
        return;
    }
}
