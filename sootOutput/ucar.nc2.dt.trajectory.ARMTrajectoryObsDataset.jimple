public class ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset extends ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static java.lang.String timeDimName;
    private static java.lang.String timeVarName;
    private static java.lang.String latVarName;
    private static java.lang.String lonVarName;
    private static java.lang.String elevVarName;
    private static java.lang.String trajId;

    public static boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r1;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = staticinvoke <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.Group $r9, $r15, $r29, $r38, $r47;
        ucar.nc2.Attribute $r1, $r3, $r4, $r5, $r6, $r7, $r22, $r36, $r45, $r54;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r64;
        java.lang.StringBuilder $r25, $r26, $r65;
        java.lang.String $r2, $r8, $r12, $r13, $r16, $r20, $r21, $r23, $r27, $r30, $r34, $r35, $r37, $r39, $r43, $r44, $r46, $r48, $r52, $r53, $r55, $r57, $r58;
        ucar.nc2.dataset.VariableEnhanced $r56;
        ucar.nc2.Dimension r59, r60, r61, r62, r63;
        ucar.nc2.dataset.NetcdfDataset r0;
        java.util.Date $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.List $r10, $r18, $r32, $r41, $r50;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14, $i16;
        ucar.nc2.Variable $r17, $r31, $r40, $r49;
        java.lang.Object $r11, $r19, $r33, $r42, $r51;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("ingest_software");

        if $r1 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke $r1.<ucar.nc2.Attribute: boolean isString()>();

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("sonde_ingest.c");

        $i10 = (int) -1;

        if $i0 != $i10 goto label03;

        return null;

     label03:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("sounding_number");

        if $r3 != null goto label04;

        return null;

     label04:
        $z1 = virtualinvoke $r3.<ucar.nc2.Attribute: boolean isString()>();

        if $z1 != 0 goto label05;

        return null;

     label05:
        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("serial_number");

        if $r4 != null goto label06;

        return null;

     label06:
        $z2 = virtualinvoke $r4.<ucar.nc2.Attribute: boolean isString()>();

        if $z2 != 0 goto label07;

        return null;

     label07:
        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("launch_status");

        if $r5 != null goto label08;

        return null;

     label08:
        $z3 = virtualinvoke $r5.<ucar.nc2.Attribute: boolean isString()>();

        if $z3 != 0 goto label09;

        return null;

     label09:
        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("zeb_platform");

        if $r6 != null goto label10;

        return null;

     label10:
        $z4 = virtualinvoke $r6.<ucar.nc2.Attribute: boolean isString()>();

        if $z4 != 0 goto label11;

        return null;

     label11:
        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("history");

        if $r7 != null goto label12;

        return null;

     label12:
        $z5 = virtualinvoke $r7.<ucar.nc2.Attribute: boolean isString()>();

        if $z5 != 0 goto label13;

        return null;

     label13:
        $r8 = virtualinvoke $r7.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("Zebra DataStore library");

        $i12 = (int) -1;

        if $i1 != $i12 goto label14;

        $r58 = virtualinvoke $r7.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i8 = virtualinvoke $r58.<java.lang.String: int indexOf(java.lang.String)>("zebra-zeblib");

        $i14 = (int) -1;

        if $i8 != $i14 goto label14;

        return null;

     label14:
        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r10 = virtualinvoke $r9.<ucar.nc2.Group: java.util.List getDimensions()>();

        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i2 == 1 goto label15;

        return null;

     label15:
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r59 = (ucar.nc2.Dimension) $r11;

        $r12 = virtualinvoke r59.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r13 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName>;

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z6 != 0 goto label16;

        return null;

     label16:
        $r64 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config;

        specialinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void <init>()>();

        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeDim(ucar.nc2.Dimension)>(r59);

        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r16 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeVarName>;

        $r17 = virtualinvoke $r15.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r16);

        if $r17 != null goto label17;

        return null;

     label17:
        $r18 = virtualinvoke $r17.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i3 = interfaceinvoke $r18.<java.util.List: int size()>();

        if $i3 == 1 goto label18;

        return null;

     label18:
        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(0);

        r60 = (ucar.nc2.Dimension) $r19;

        $r20 = virtualinvoke r60.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r21 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName>;

        $z7 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z7 != 0 goto label19;

        return null;

     label19:
        $r22 = virtualinvoke $r17.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r23 = virtualinvoke $r22.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0 ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r27);

        if $r28 != null goto label20;

        return null;

     label20:
        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTimeVar(ucar.nc2.Variable)>($r17);

        $r29 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r30 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String latVarName>;

        $r31 = virtualinvoke $r29.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r30);

        if $r31 != null goto label21;

        return null;

     label21:
        $r32 = virtualinvoke $r31.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i4 = interfaceinvoke $r32.<java.util.List: int size()>();

        if $i4 == 1 goto label22;

        return null;

     label22:
        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        r61 = (ucar.nc2.Dimension) $r33;

        $r34 = virtualinvoke r61.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r35 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName>;

        $z8 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z8 != 0 goto label23;

        return null;

     label23:
        $r36 = virtualinvoke $r31.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r37 = virtualinvoke $r36.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z9 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r37, "degrees_north");

        if $z9 != 0 goto label24;

        return null;

     label24:
        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLatVar(ucar.nc2.Variable)>($r31);

        $r38 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r39 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String lonVarName>;

        $r40 = virtualinvoke $r38.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r39);

        if $r40 != null goto label25;

        return null;

     label25:
        $r41 = virtualinvoke $r40.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i5 = interfaceinvoke $r41.<java.util.List: int size()>();

        if $i5 == 1 goto label26;

        return null;

     label26:
        $r42 = interfaceinvoke $r41.<java.util.List: java.lang.Object get(int)>(0);

        r62 = (ucar.nc2.Dimension) $r42;

        $r43 = virtualinvoke r62.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r44 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName>;

        $z10 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z10 != 0 goto label27;

        return null;

     label27:
        $r45 = virtualinvoke $r40.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r46 = virtualinvoke $r45.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z11 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r46, "degrees_east");

        if $z11 != 0 goto label28;

        return null;

     label28:
        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setLonVar(ucar.nc2.Variable)>($r40);

        $r47 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r48 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String elevVarName>;

        $r49 = virtualinvoke $r47.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r48);

        if $r49 != null goto label29;

        return null;

     label29:
        $r50 = virtualinvoke $r49.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i6 = interfaceinvoke $r50.<java.util.List: int size()>();

        if $i6 == 1 goto label30;

        return null;

     label30:
        $r51 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(0);

        r63 = (ucar.nc2.Dimension) $r51;

        $r52 = virtualinvoke r63.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r53 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName>;

        $z12 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        if $z12 != 0 goto label31;

        return null;

     label31:
        $r54 = virtualinvoke $r49.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r55 = virtualinvoke $r54.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $i7 = virtualinvoke $r55.<java.lang.String: int indexOf(java.lang.String)>("meters");

        $i16 = (int) -1;

        if $i7 != $i16 goto label32;

        return null;

     label32:
        $r56 = (ucar.nc2.dataset.VariableEnhanced) $r49;

        interfaceinvoke $r56.<ucar.nc2.dataset.VariableEnhanced: void setUnitsString(java.lang.String)>("meters");

        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setElevVar(ucar.nc2.Variable)>($r49);

        $r57 = <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String trajId>;

        virtualinvoke $r64.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config: void setTrajectoryId(java.lang.String)>($r57);

        return $r64;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset r1;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset $r0, r2;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset r0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config $r2;

        r0 := @this: ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = staticinvoke <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r1);

        virtualinvoke r0.<ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$Config)>($r2);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeDimName> = "time";

        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String timeVarName> = "time_offset";

        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String latVarName> = "lat";

        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String lonVarName> = "lon";

        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String elevVarName> = "alt";

        <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: java.lang.String trajId> = "trajectory data";

        return;
    }
}
