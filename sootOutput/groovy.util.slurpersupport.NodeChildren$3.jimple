class groovy.util.slurpersupport.NodeChildren$3 extends groovy.util.slurpersupport.NodeIterator
{
    private final groovy.util.slurpersupport.NodeChildren this$0;

    void <init>(groovy.util.slurpersupport.NodeChildren, java.util.Iterator)
    {
        groovy.util.slurpersupport.NodeChildren$3 r0;
        java.util.Iterator r2;
        groovy.util.slurpersupport.NodeChildren r1;

        r0 := @this: groovy.util.slurpersupport.NodeChildren$3;

        r1 := @parameter0: groovy.util.slurpersupport.NodeChildren;

        r2 := @parameter1: java.util.Iterator;

        r0.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0> = r1;

        specialinvoke r0.<groovy.util.slurpersupport.NodeIterator: void <init>(java.util.Iterator)>(r2);

        return;
    }

    protected java.lang.Object getNextNode(java.util.Iterator)
    {
        groovy.util.slurpersupport.Node r2;
        groovy.util.slurpersupport.NodeChildren $r4, $r7, $r10, $r14, $r15;
        java.util.Map $r17;
        java.lang.String $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r16, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator r0;
        groovy.util.slurpersupport.NodeChildren$3 r3;
        java.lang.Object $r1, $r18;

        r3 := @this: groovy.util.slurpersupport.NodeChildren$3;

        r0 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r2 = (groovy.util.slurpersupport.Node) $r1;

        $r4 = r3.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0>;

        $r5 = $r4.<groovy.util.slurpersupport.NodeChildren: java.lang.String name>;

        $r6 = virtualinvoke r2.<groovy.util.slurpersupport.Node: java.lang.String name()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label4;

        $r9 = "*";

        $r7 = r3.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0>;

        $r8 = $r7.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label3;

        $r12 = "";

        $r10 = r3.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0>;

        $r11 = $r10.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label2;

        $r19 = "";

        $r20 = virtualinvoke r2.<groovy.util.slurpersupport.Node: java.lang.String namespaceURI()>();

        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z5 != 0 goto label3;

     label2:
        $r13 = virtualinvoke r2.<groovy.util.slurpersupport.Node: java.lang.String namespaceURI()>();

        $r14 = r3.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0>;

        $r17 = $r14.<groovy.util.slurpersupport.NodeChildren: java.util.Map namespaceMap>;

        $r15 = r3.<groovy.util.slurpersupport.NodeChildren$3: groovy.util.slurpersupport.NodeChildren this$0>;

        $r16 = $r15.<groovy.util.slurpersupport.NodeChildren: java.lang.String namespacePrefix>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z4 == 0 goto label4;

     label3:
        return r2;

     label4:
        goto label1;

     label5:
        return null;
    }
}
