public final class de.l3s.boilerpipe.extractors.ArticleSentencesExtractor extends de.l3s.boilerpipe.extractors.ExtractorBase
{
    public static final de.l3s.boilerpipe.extractors.ArticleSentencesExtractor INSTANCE;

    public void <init>()
    {
        de.l3s.boilerpipe.extractors.ArticleSentencesExtractor r0;

        r0 := @this: de.l3s.boilerpipe.extractors.ArticleSentencesExtractor;

        specialinvoke r0.<de.l3s.boilerpipe.extractors.ExtractorBase: void <init>()>();

        return;
    }

    public static de.l3s.boilerpipe.extractors.ArticleSentencesExtractor getInstance()
    {
        de.l3s.boilerpipe.extractors.ArticleSentencesExtractor $r0;

        $r0 = <de.l3s.boilerpipe.extractors.ArticleSentencesExtractor: de.l3s.boilerpipe.extractors.ArticleSentencesExtractor INSTANCE>;

        return $r0;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        de.l3s.boilerpipe.extractors.ArticleExtractor $r1;
        de.l3s.boilerpipe.filters.simple.MinClauseWordsFilter $r3;
        de.l3s.boilerpipe.extractors.ArticleSentencesExtractor r4;
        de.l3s.boilerpipe.filters.simple.SplitParagraphBlocksFilter $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r4 := @this: de.l3s.boilerpipe.extractors.ArticleSentencesExtractor;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        $r1 = <de.l3s.boilerpipe.extractors.ArticleExtractor: de.l3s.boilerpipe.extractors.ArticleExtractor INSTANCE>;

        $z0 = virtualinvoke $r1.<de.l3s.boilerpipe.extractors.ArticleExtractor: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $r2 = <de.l3s.boilerpipe.filters.simple.SplitParagraphBlocksFilter: de.l3s.boilerpipe.filters.simple.SplitParagraphBlocksFilter INSTANCE>;

        $z1 = virtualinvoke $r2.<de.l3s.boilerpipe.filters.simple.SplitParagraphBlocksFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z2 = $z0 | $z1;

        $r3 = <de.l3s.boilerpipe.filters.simple.MinClauseWordsFilter: de.l3s.boilerpipe.filters.simple.MinClauseWordsFilter INSTANCE>;

        $z3 = virtualinvoke $r3.<de.l3s.boilerpipe.filters.simple.MinClauseWordsFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z4 = $z2 | $z3;

        return $z4;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.extractors.ArticleSentencesExtractor $r0;

        $r0 = new de.l3s.boilerpipe.extractors.ArticleSentencesExtractor;

        specialinvoke $r0.<de.l3s.boilerpipe.extractors.ArticleSentencesExtractor: void <init>()>();

        <de.l3s.boilerpipe.extractors.ArticleSentencesExtractor: de.l3s.boilerpipe.extractors.ArticleSentencesExtractor INSTANCE> = $r0;

        return;
    }
}
