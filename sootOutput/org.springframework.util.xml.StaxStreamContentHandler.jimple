class org.springframework.util.xml.StaxStreamContentHandler extends org.springframework.util.xml.AbstractStaxContentHandler
{
    private final javax.xml.stream.XMLStreamWriter streamWriter;

    void <init>(javax.xml.stream.XMLStreamWriter)
    {
        javax.xml.stream.XMLStreamWriter r1;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<org.springframework.util.xml.AbstractStaxContentHandler: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "\'streamWriter\' must not be null");

        r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter> = r1;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        org.xml.sax.Locator r1;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    protected void charactersInternal(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r1;
        javax.xml.stream.XMLStreamWriter $r2;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeCharacters(char[],int,int)>(r1, i0, i1);

        return;
    }

    protected void endDocumentInternal() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamWriter $r1;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        $r1 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        return;
    }

    protected void endElementInternal(javax.xml.namespace.QName, org.springframework.util.xml.SimpleNamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        org.springframework.util.xml.SimpleNamespaceContext r3;
        javax.xml.stream.XMLStreamWriter $r1;
        javax.xml.namespace.QName r2;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r2 := @parameter0: javax.xml.namespace.QName;

        r3 := @parameter1: org.springframework.util.xml.SimpleNamespaceContext;

        $r1 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        return;
    }

    protected void ignorableWhitespaceInternal(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        int i0, i1;
        char[] r1;
        javax.xml.stream.XMLStreamWriter $r2;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeCharacters(char[],int,int)>(r1, i0, i1);

        return;
    }

    protected void processingInstructionInternal(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.String r1, r2;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r3.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    protected void skippedEntityInternal(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected void startDocumentInternal() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamWriter $r1;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        $r1 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();

        return;
    }

    protected void startElementInternal(javax.xml.namespace.QName, org.xml.sax.Attributes, org.springframework.util.xml.SimpleNamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamWriter $r2, $r15, $r24, $r26, $r28, $r29;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.namespace.QName r1, $r10;
        org.xml.sax.Attributes r7;
        int i0, $i1;
        org.springframework.util.xml.SimpleNamespaceContext r6;
        java.lang.String $r3, $r4, $r5, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, r23, $r25, $r27;
        java.util.Iterator $r21;
        java.lang.Object $r22;
        org.springframework.util.xml.StaxStreamContentHandler r0;

        r0 := @this: org.springframework.util.xml.StaxStreamContentHandler;

        r1 := @parameter0: javax.xml.namespace.QName;

        r7 := @parameter1: org.xml.sax.Attributes;

        r6 := @parameter2: org.springframework.util.xml.SimpleNamespaceContext;

        $r2 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r4 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        if r6 == null goto label4;

        $r20 = virtualinvoke r6.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>("");

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r20);

        if $z2 == 0 goto label1;

        $r28 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r28.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>("", $r20);

        $r29 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        interfaceinvoke $r29.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>($r20);

     label1:
        $r21 = virtualinvoke r6.<org.springframework.util.xml.SimpleNamespaceContext: java.util.Iterator getBoundPrefixes()>();

        goto label3;

     label2:
        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r22;

        $r24 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r25 = virtualinvoke r6.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r23);

        interfaceinvoke $r24.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r23, $r25);

        $r26 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r27 = virtualinvoke r6.<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String getNamespaceURI(java.lang.String)>(r23);

        interfaceinvoke $r26.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r23, $r27);

     label3:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

     label4:
        i0 = 0;

        goto label7;

     label5:
        $r8 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i0);

        $r9 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i0);

        $r10 = virtualinvoke r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.namespace.QName toQName(java.lang.String,java.lang.String)>($r8, $r9);

        $r11 = "xmlns";

        $r12 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label6;

        $r13 = "xmlns";

        $r14 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label6;

        $r15 = r0.<org.springframework.util.xml.StaxStreamContentHandler: javax.xml.stream.XMLStreamWriter streamWriter>;

        $r16 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r17 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r18 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r19 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i0);

        interfaceinvoke $r15.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, $r17, $r18, $r19);

     label6:
        i0 = i0 + 1;

     label7:
        $i1 = interfaceinvoke r7.<org.xml.sax.Attributes: int getLength()>();

        if i0 < $i1 goto label5;

        return;
    }
}
