abstract class org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base extends org.codehaus.jackson.map.deser.std.StdDeserializer
{

    protected void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdDeserializer: void <init>(java.lang.Class)>(r1);

        return;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.TypeDeserializer r0;
        java.lang.Object $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base r4;

        r4 := @this: org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r0 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
