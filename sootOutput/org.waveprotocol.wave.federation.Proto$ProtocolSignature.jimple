public final class org.waveprotocol.wave.federation.Proto$ProtocolSignature extends com.google.protobuf.GeneratedMessage
{
    private static final org.waveprotocol.wave.federation.Proto$ProtocolSignature defaultInstance;
    public static final int SIGNATURE_BYTES_FIELD_NUMBER;
    private boolean hasSignatureBytes;
    private com.google.protobuf.ByteString signatureBytes_;
    public static final int SIGNER_ID_FIELD_NUMBER;
    private boolean hasSignerId;
    private com.google.protobuf.ByteString signerId_;
    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER;
    private boolean hasSignatureAlgorithm;
    private org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm signatureAlgorithm_;
    private int memoizedSerializedSize;

    private void <init>()
    {
        com.google.protobuf.ByteString $r1, $r2;
        int $i1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage: void <init>()>();

        $r1 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signatureBytes_> = $r1;

        $r2 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signerId_> = $r2;

        $i1 = (int) -1;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: int memoizedSerializedSize> = $i1;

        specialinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: void initFields()>();

        return;
    }

    private void <init>(boolean)
    {
        com.google.protobuf.ByteString $r1, $r2;
        int $i1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage: void <init>()>();

        $r1 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signatureBytes_> = $r1;

        $r2 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signerId_> = $r2;

        $i1 = (int) -1;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: int memoizedSerializedSize> = $i1;

        return;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature getDefaultInstance()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r0;

        $r0 = <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature defaultInstance>;

        return $r0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolSignature getDefaultInstanceForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r0, r1;

        r1 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r0 = <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature defaultInstance>;

        return $r0;
    }

    public static final com.google.protobuf.Descriptors$Descriptor getDescriptor()
    {
        com.google.protobuf.Descriptors$Descriptor $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto: com.google.protobuf.Descriptors$Descriptor access$14800()>();

        return $r0;
    }

    protected com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r1;
        com.google.protobuf.GeneratedMessage$FieldAccessorTable $r0;

        r1 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto: com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14900()>();

        return $r0;
    }

    public boolean hasSignatureBytes()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $z0 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureBytes>;

        return $z0;
    }

    public com.google.protobuf.ByteString getSignatureBytes()
    {
        com.google.protobuf.ByteString $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signatureBytes_>;

        return $r1;
    }

    public boolean hasSignerId()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $z0 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignerId>;

        return $z0;
    }

    public com.google.protobuf.ByteString getSignerId()
    {
        com.google.protobuf.ByteString $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signerId_>;

        return $r1;
    }

    public boolean hasSignatureAlgorithm()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $z0 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureAlgorithm>;

        return $z0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm getSignatureAlgorithm()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm $r1;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm signatureAlgorithm_>;

        return $r1;
    }

    private void initFields()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm $r1;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = <org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm SHA1_RSA>;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm signatureAlgorithm_> = $r1;

        return;
    }

    public final boolean isInitialized()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $z0 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureBytes>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignerId>;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z2 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureAlgorithm>;

        if $z2 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream) throws java.io.IOException
    {
        com.google.protobuf.UnknownFieldSet $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        com.google.protobuf.ByteString $r4, $r5;
        int $i0;
        com.google.protobuf.CodedOutputStream r2;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm $r3;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r2 := @parameter0: com.google.protobuf.CodedOutputStream;

        virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: int getSerializedSize()>();

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureBytes()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString getSignatureBytes()>();

        virtualinvoke r2.<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>(1, $r5);

     label1:
        $z1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignerId()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString getSignerId()>();

        virtualinvoke r2.<com.google.protobuf.CodedOutputStream: void writeBytes(int,com.google.protobuf.ByteString)>(2, $r4);

     label2:
        $z2 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureAlgorithm()>();

        if $z2 == 0 goto label3;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm getSignatureAlgorithm()>();

        $i0 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: int getNumber()>();

        virtualinvoke r2.<com.google.protobuf.CodedOutputStream: void writeEnum(int,int)>(3, $i0);

     label3:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        virtualinvoke $r1.<com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>(r2);

        return;
    }

    public int getSerializedSize()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        boolean $z0, $z1, $z2;
        com.google.protobuf.UnknownFieldSet $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        com.google.protobuf.ByteString $r3, $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm $r2;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        i6 = r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: int memoizedSerializedSize>;

        $i9 = (int) -1;

        if i6 == $i9 goto label1;

        return i6;

     label1:
        i7 = 0;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureBytes()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString getSignatureBytes()>();

        $i5 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>(1, $r4);

        i7 = 0 + $i5;

     label2:
        $z1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignerId()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString getSignerId()>();

        $i4 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeBytesSize(int,com.google.protobuf.ByteString)>(2, $r3);

        i7 = i7 + $i4;

     label3:
        $z2 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureAlgorithm()>();

        if $z2 == 0 goto label4;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm getSignatureAlgorithm()>();

        $i1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: int getNumber()>();

        $i2 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeEnumSize(int,int)>(3, $i1);

        i7 = i7 + $i2;

     label4:
        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        $i0 = virtualinvoke $r1.<com.google.protobuf.UnknownFieldSet: int getSerializedSize()>();

        $i3 = i7 + $i0;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: int memoizedSerializedSize> = $i3;

        return $i3;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(com.google.protobuf.ByteString) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: com.google.protobuf.ByteString;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString)>(r1);

        $r3 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite) throws com.google.protobuf.InvalidProtocolBufferException
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r4;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r5;
        com.google.protobuf.AbstractMessage$Builder $r3;

        r1 := @parameter0: com.google.protobuf.ByteString;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(byte[]) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte[] r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: byte[];

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(byte[])>(r1);

        $r3 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite) throws com.google.protobuf.InvalidProtocolBufferException
    {
        byte[] r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r4;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r5;
        com.google.protobuf.AbstractMessage$Builder $r3;

        r1 := @parameter0: byte[];

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(java.io.InputStream) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        com.google.protobuf.AbstractMessage$Builder $r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(java.io.InputStream)>(r1);

        $r3 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r4;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r5;
        com.google.protobuf.AbstractMessage$Builder $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r3;

        $r5 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r4);

        return $r5;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseDelimitedFrom(java.io.InputStream) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r2;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $z0 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: boolean mergeDelimitedFrom(java.io.InputStream)>(r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r0);

        return $r2;

     label1:
        return null;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r3;
        java.io.InputStream r1;
        boolean $z0;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $z0 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: boolean mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r0);

        return $r3;

     label1:
        return null;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(com.google.protobuf.CodedInputStream) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r3;
        com.google.protobuf.CodedInputStream r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        com.google.protobuf.AbstractMessage$Builder $r2;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream)>(r1);

        $r3 = (org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder) $r2;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r3;
        com.google.protobuf.CodedInputStream r1;
        com.google.protobuf.ExtensionRegistryLite r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r3 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature access$15000(org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder)>($r3);

        return $r4;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder access$15100()>();

        return $r0;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilderForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r1;

        r1 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        return $r0;
    }

    public static org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolSignature)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r0, $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r1;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder()>();

        $r2 = virtualinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder mergeFrom(org.waveprotocol.wave.federation.Proto$ProtocolSignature)>(r1);

        return $r2;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder toBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolSignature)>(r0);

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder toBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder toBuilder()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message$Builder newBuilderForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilderForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.Message getDefaultInstanceForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0, $r1;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature getDefaultInstanceForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder toBuilder()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder toBuilder()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite$Builder newBuilderForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$Builder newBuilderForType()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getDefaultInstanceForType()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0, $r1;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature getDefaultInstanceForType()>();

        return $r1;
    }

    void <init>(org.waveprotocol.wave.federation.Proto$1)
    {
        org.waveprotocol.wave.federation.Proto$1 r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @this: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$1;

        specialinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: void <init>()>();

        return;
    }

    static boolean access$15302(org.waveprotocol.wave.federation.Proto$ProtocolSignature, boolean)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureBytes> = z0;

        return z0;
    }

    static com.google.protobuf.ByteString access$15402(org.waveprotocol.wave.federation.Proto$ProtocolSignature, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r1 := @parameter1: com.google.protobuf.ByteString;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signatureBytes_> = r1;

        return r1;
    }

    static boolean access$15502(org.waveprotocol.wave.federation.Proto$ProtocolSignature, boolean)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignerId> = z0;

        return z0;
    }

    static com.google.protobuf.ByteString access$15602(org.waveprotocol.wave.federation.Proto$ProtocolSignature, com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r1 := @parameter1: com.google.protobuf.ByteString;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: com.google.protobuf.ByteString signerId_> = r1;

        return r1;
    }

    static boolean access$15702(org.waveprotocol.wave.federation.Proto$ProtocolSignature, boolean)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        boolean z0;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        z0 := @parameter1: boolean;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: boolean hasSignatureAlgorithm> = z0;

        return z0;
    }

    static org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm access$15802(org.waveprotocol.wave.federation.Proto$ProtocolSignature, org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm r1;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r1 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm;

        r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm signatureAlgorithm_> = r1;

        return r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r0, $r1;

        <org.waveprotocol.wave.federation.Proto$ProtocolSignature: int SIGNATURE_ALGORITHM_FIELD_NUMBER> = 3;

        <org.waveprotocol.wave.federation.Proto$ProtocolSignature: int SIGNER_ID_FIELD_NUMBER> = 2;

        <org.waveprotocol.wave.federation.Proto$ProtocolSignature: int SIGNATURE_BYTES_FIELD_NUMBER> = 1;

        $r0 = new org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        specialinvoke $r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: void <init>(boolean)>(1);

        <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature defaultInstance> = $r0;

        staticinvoke <org.waveprotocol.wave.federation.Proto: void internalForceInit()>();

        $r1 = <org.waveprotocol.wave.federation.Proto$ProtocolSignature: org.waveprotocol.wave.federation.Proto$ProtocolSignature defaultInstance>;

        specialinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignature: void initFields()>();

        return;
    }
}
