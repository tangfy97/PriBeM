public class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase
{
    private final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        return;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r3;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator r0;
        org.apache.xml.dtm.DTMAxisIterator $r2;
        int $i0, i1, i2, $i4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator;

        i1 := @parameter0: int;

        if i1 != 0 goto label1;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i1 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()>();

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i0 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i1);

        i2 = $i0;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode> = $i0;

        $z1 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _includeSelf>;

        if $z1 == 0 goto label2;

        $i4 = (int) -1;

        i2 = $i0 + $i4;

     label2:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = i2;

        $r2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r2;

     label3:
        return r0;
    }

    protected final boolean isDescendant(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>(i0);

        $i2 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        if $i1 >= $i2 goto label1;

        $i3 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        if $i3 != i0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28;
        boolean $z0, $z1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator r0;
        org.apache.xml.dtm.ref.ExtendedType[] $r3;
        org.apache.xml.dtm.ref.ExtendedType $r4;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator;

        i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        $i14 = (int) -1;

        if i0 != $i14 goto label1;

        $i16 = (int) -1;

        return $i16;

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _includeSelf>;

        if $z0 == 0 goto label2;

        $i4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i5 = $i4 + 1;

        if $i5 != i0 goto label2;

        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i7 = $i6 + 1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i7;

        $i8 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i7);

        $i9 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i8);

        return $i9;

     label2:
        i10 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        if i0 != 0 goto label5;

     label3:
        i10 = i10 + 1;

        $r6 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i11 = virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i10);

        $i18 = (int) -1;

        if $i18 != $i11 goto label4;

        $i20 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i20;

        $i22 = (int) -1;

        return $i22;

     label4:
        if $i11 == 3 goto label3;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r3 = $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r4 = $r3[$i11];

        $i3 = virtualinvoke $r4.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        if $i3 == 2 goto label3;

        if $i3 == 13 goto label3;

        goto label8;

     label5:
        i10 = i10 + 1;

        $r7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i12 = virtualinvoke $r7.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _type2(int)>(i10);

        $i24 = (int) -1;

        if $i24 == $i12 goto label6;

        $z1 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: boolean isDescendant(int)>(i10);

        if $z1 != 0 goto label7;

     label6:
        $i26 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i26;

        $i28 = (int) -1;

        return $i28;

     label7:
        if 2 == $i12 goto label5;

        if 3 == $i12 goto label5;

        if 13 == $i12 goto label5;

     label8:
        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = i10;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i10);

        $i2 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i1);

        return $i2;
    }

    public org.apache.xml.dtm.DTMAxisIterator reset()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator;

        z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = 1;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>($i0);

        virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$DescendantIterator: org.apache.xml.dtm.DTMAxisIterator setStartNode(int)>($i1);

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable> = z0;

        return r0;
    }
}
