class com.google.inject.internal.cglib.proxy.$CallbackInfo extends java.lang.Object
{
    private java.lang.Class 'cls';
    private com.google.inject.internal.cglib.proxy.$CallbackGenerator generator;
    private com.google.inject.internal.asm.$Type type;
    private static final com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS;
    static java.lang.Class class$net$sf$cglib$proxy$NoOp;
    static java.lang.Class class$net$sf$cglib$proxy$MethodInterceptor;
    static java.lang.Class class$net$sf$cglib$proxy$InvocationHandler;
    static java.lang.Class class$net$sf$cglib$proxy$LazyLoader;
    static java.lang.Class class$net$sf$cglib$proxy$Dispatcher;
    static java.lang.Class class$net$sf$cglib$proxy$FixedValue;
    static java.lang.Class class$net$sf$cglib$proxy$ProxyRefDispatcher;

    public static com.google.inject.internal.asm.$Type[] determineTypes(java.lang.Class[])
    {
        com.google.inject.internal.asm.$Type[] r1;
        int $i0, $i1, i2;
        java.lang.Class[] r0;
        java.lang.Class $r2;
        com.google.inject.internal.asm.$Type $r3;

        r0 := @parameter0: java.lang.Class[];

        $i0 = lengthof r0;

        r1 = newarray (com.google.inject.internal.asm.$Type)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.asm.$Type determineType(java.lang.Class)>($r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static com.google.inject.internal.asm.$Type[] determineTypes(com.google.inject.internal.cglib.proxy.$Callback[])
    {
        com.google.inject.internal.asm.$Type[] r1;
        int $i0, $i1, i2;
        com.google.inject.internal.cglib.proxy.$Callback[] r0;
        com.google.inject.internal.asm.$Type $r3;
        com.google.inject.internal.cglib.proxy.$Callback $r2;

        r0 := @parameter0: com.google.inject.internal.cglib.proxy.$Callback[];

        $i0 = lengthof r0;

        r1 = newarray (com.google.inject.internal.asm.$Type)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.asm.$Type determineType(com.google.inject.internal.cglib.proxy.$Callback)>($r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static com.google.inject.internal.cglib.proxy.$CallbackGenerator[] getGenerators(com.google.inject.internal.asm.$Type[])
    {
        com.google.inject.internal.asm.$Type[] r0;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator[] r1;
        int $i0, $i1, i2;
        com.google.inject.internal.asm.$Type $r2;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator $r3;

        r0 := @parameter0: com.google.inject.internal.asm.$Type[];

        $i0 = lengthof r0;

        r1 = newarray (com.google.inject.internal.cglib.proxy.$CallbackGenerator)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackGenerator getGenerator(com.google.inject.internal.asm.$Type)>($r2);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void <init>(java.lang.Class, com.google.inject.internal.cglib.proxy.$CallbackGenerator)
    {
        java.lang.Class r1;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator r2;
        com.google.inject.internal.asm.$Type $r3;
        com.google.inject.internal.cglib.proxy.$CallbackInfo r0;

        r0 := @this: com.google.inject.internal.cglib.proxy.$CallbackInfo;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class 'cls'> = r1;

        r0.<com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackGenerator generator> = r2;

        $r3 = staticinvoke <com.google.inject.internal.asm.$Type: com.google.inject.internal.asm.$Type getType(java.lang.Class)>(r1);

        r0.<com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.asm.$Type type> = $r3;

        return;
    }

    private static com.google.inject.internal.asm.$Type determineType(com.google.inject.internal.cglib.proxy.$Callback)
    {
        java.lang.IllegalStateException $r3;
        java.lang.Class $r1;
        com.google.inject.internal.asm.$Type $r2;
        com.google.inject.internal.cglib.proxy.$Callback r0;

        r0 := @parameter0: com.google.inject.internal.cglib.proxy.$Callback;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Callback is null");

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.asm.$Type determineType(java.lang.Class)>($r1);

        return $r2;
    }

    private static com.google.inject.internal.asm.$Type determineType(java.lang.Class)
    {
        java.lang.IllegalStateException $r2, $r11;
        java.lang.StringBuffer $r3, $r4, $r6, $r12, $r13, $r14, $r15, $r17;
        int $i0, i1;
        com.google.inject.internal.asm.$Type $r1;
        java.lang.String $r7, $r18;
        boolean $z0;
        com.google.inject.internal.cglib.proxy.$CallbackInfo[] $r0, $r8;
        java.lang.Class r5, $r10, $r16, r19;
        com.google.inject.internal.cglib.proxy.$CallbackInfo r9;

        r5 := @parameter0: java.lang.Class;

        r19 = null;

        i1 = 0;

     label1:
        $r0 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS>;

        $i0 = lengthof $r0;

        if i1 >= $i0 goto label4;

        $r8 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS>;

        r9 = $r8[i1];

        $r10 = r9.<com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class 'cls'>;

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r5);

        if $z0 == 0 goto label3;

        if r19 == null goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Callback implements both ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r19);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and ");

        $r16 = r9.<com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class 'cls'>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r11;

     label2:
        r19 = r9.<com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class 'cls'>;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if r19 != null goto label5;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown callback type ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label5:
        $r1 = staticinvoke <com.google.inject.internal.asm.$Type: com.google.inject.internal.asm.$Type getType(java.lang.Class)>(r19);

        return $r1;
    }

    private static com.google.inject.internal.cglib.proxy.$CallbackGenerator getGenerator(com.google.inject.internal.asm.$Type)
    {
        java.lang.IllegalStateException $r1;
        com.google.inject.internal.cglib.proxy.$CallbackInfo[] $r0, $r7;
        java.lang.StringBuffer $r2, $r3, $r5;
        int $i0, i1;
        com.google.inject.internal.asm.$Type r4, $r9;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator $r10;
        java.lang.String $r6;
        com.google.inject.internal.cglib.proxy.$CallbackInfo r8;
        boolean $z0;

        r4 := @parameter0: com.google.inject.internal.asm.$Type;

        i1 = 0;

     label1:
        $r0 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS>;

        $i0 = lengthof $r0;

        if i1 >= $i0 goto label3;

        $r7 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS>;

        r8 = $r7[i1];

        $r9 = r8.<com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.asm.$Type type>;

        $z0 = virtualinvoke $r9.<com.google.inject.internal.asm.$Type: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r10 = r8.<com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackGenerator generator>;

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown callback type ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        com.google.inject.internal.cglib.proxy.$FixedValueGenerator $r18;
        com.google.inject.internal.cglib.proxy.$NoOpGenerator $r3;
        com.google.inject.internal.cglib.proxy.$MethodInterceptorGenerator $r6;
        com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator $r9;
        com.google.inject.internal.cglib.proxy.$DispatcherGenerator $r15, $r21;
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator $r12;
        com.google.inject.internal.cglib.proxy.$CallbackInfo[] $r0;
        java.lang.Class $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        com.google.inject.internal.cglib.proxy.$CallbackInfo $r1, $r4, $r7, $r10, $r13, $r16, $r19;

        $r0 = newarray (com.google.inject.internal.cglib.proxy.$CallbackInfo)[7];

        $r1 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r2 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$NoOp>;

        if $r2 != null goto label01;

        $r22 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$NoOp");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$NoOp> = $r22;

        goto label02;

     label01:
        $r22 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$NoOp>;

     label02:
        $r3 = <com.google.inject.internal.cglib.proxy.$NoOpGenerator: com.google.inject.internal.cglib.proxy.$NoOpGenerator INSTANCE>;

        specialinvoke $r1.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r22, $r3);

        $r0[0] = $r1;

        $r4 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r5 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$MethodInterceptor>;

        if $r5 != null goto label03;

        $r23 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$MethodInterceptor");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$MethodInterceptor> = $r23;

        goto label04;

     label03:
        $r23 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$MethodInterceptor>;

     label04:
        $r6 = <com.google.inject.internal.cglib.proxy.$MethodInterceptorGenerator: com.google.inject.internal.cglib.proxy.$MethodInterceptorGenerator INSTANCE>;

        specialinvoke $r4.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r23, $r6);

        $r0[1] = $r4;

        $r7 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r8 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

        if $r8 != null goto label05;

        $r24 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$InvocationHandler");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler> = $r24;

        goto label06;

     label05:
        $r24 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$InvocationHandler>;

     label06:
        $r9 = <com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator: com.google.inject.internal.cglib.proxy.$InvocationHandlerGenerator INSTANCE>;

        specialinvoke $r7.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r24, $r9);

        $r0[2] = $r7;

        $r10 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r11 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$LazyLoader>;

        if $r11 != null goto label07;

        $r25 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$LazyLoader");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$LazyLoader> = $r25;

        goto label08;

     label07:
        $r25 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$LazyLoader>;

     label08:
        $r12 = <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator INSTANCE>;

        specialinvoke $r10.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r25, $r12);

        $r0[3] = $r10;

        $r13 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r14 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$Dispatcher>;

        if $r14 != null goto label09;

        $r26 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$Dispatcher");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$Dispatcher> = $r26;

        goto label10;

     label09:
        $r26 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$Dispatcher>;

     label10:
        $r15 = <com.google.inject.internal.cglib.proxy.$DispatcherGenerator: com.google.inject.internal.cglib.proxy.$DispatcherGenerator INSTANCE>;

        specialinvoke $r13.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r26, $r15);

        $r0[4] = $r13;

        $r16 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r17 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$FixedValue>;

        if $r17 != null goto label11;

        $r27 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$FixedValue");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$FixedValue> = $r27;

        goto label12;

     label11:
        $r27 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$FixedValue>;

     label12:
        $r18 = <com.google.inject.internal.cglib.proxy.$FixedValueGenerator: com.google.inject.internal.cglib.proxy.$FixedValueGenerator INSTANCE>;

        specialinvoke $r16.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r27, $r18);

        $r0[5] = $r16;

        $r19 = new com.google.inject.internal.cglib.proxy.$CallbackInfo;

        $r20 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$ProxyRefDispatcher>;

        if $r20 != null goto label13;

        $r28 = staticinvoke <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$(java.lang.String)>("com.google.inject.internal.cglib.proxy.$ProxyRefDispatcher");

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$ProxyRefDispatcher> = $r28;

        goto label14;

     label13:
        $r28 = <com.google.inject.internal.cglib.proxy.$CallbackInfo: java.lang.Class class$net$sf$cglib$proxy$ProxyRefDispatcher>;

     label14:
        $r21 = <com.google.inject.internal.cglib.proxy.$DispatcherGenerator: com.google.inject.internal.cglib.proxy.$DispatcherGenerator PROXY_REF_INSTANCE>;

        specialinvoke $r19.<com.google.inject.internal.cglib.proxy.$CallbackInfo: void <init>(java.lang.Class,com.google.inject.internal.cglib.proxy.$CallbackGenerator)>($r28, $r21);

        $r0[6] = $r19;

        <com.google.inject.internal.cglib.proxy.$CallbackInfo: com.google.inject.internal.cglib.proxy.$CallbackInfo[] CALLBACKS> = $r0;

        return;
    }
}
