public final class org.apache.lucene.store.CompoundFileDirectory extends org.apache.lucene.store.Directory
{
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String fileName;
    protected final int readBufferSize;
    private final java.util.Map entries;
    private final boolean openForWrite;
    private static final java.util.Map SENTINEL;
    private final org.apache.lucene.store.CompoundFileWriter writer;
    private final org.apache.lucene.store.Directory$IndexInputSlicer handle;
    private static final byte CODEC_MAGIC_BYTE1;
    private static final byte CODEC_MAGIC_BYTE2;
    private static final byte CODEC_MAGIC_BYTE3;
    private static final byte CODEC_MAGIC_BYTE4;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.store.IOContext, boolean) throws java.io.IOException
    {
        java.lang.Throwable $r16;
        java.lang.AssertionError $r6;
        org.apache.lucene.store.CompoundFileDirectory r0;
        org.apache.lucene.store.Directory r1;
        java.util.Map $r4, $r13;
        int $i0;
        java.io.Closeable[] $r14, $r17;
        java.lang.String r2, $r10;
        org.apache.lucene.store.IOContext r3;
        boolean z0, $z1, $z2;
        org.apache.lucene.store.Directory$IndexInputSlicer $r11, $r12, $r15, $r18;
        org.apache.lucene.store.CompoundFileWriter $r5;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.store.IOContext;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.lucene.store.Directory: void <init>()>();

        r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory directory> = r1;

        r0.<org.apache.lucene.store.CompoundFileDirectory: java.lang.String fileName> = r2;

        $i0 = staticinvoke <org.apache.lucene.store.BufferedIndexInput: int bufferSize(org.apache.lucene.store.IOContext)>(r3);

        r0.<org.apache.lucene.store.CompoundFileDirectory: int readBufferSize> = $i0;

        r0.<org.apache.lucene.store.CompoundFileDirectory: boolean isOpen> = 0;

        r0.<org.apache.lucene.store.CompoundFileDirectory: boolean openForWrite> = z0;

        if z0 != 0 goto label7;

        $r11 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.Directory$IndexInputSlicer createSlicer(java.lang.String,org.apache.lucene.store.IOContext)>(r2, r3);

        r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle> = $r11;

     label1:
        $r12 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        $r13 = staticinvoke <org.apache.lucene.store.CompoundFileDirectory: java.util.Map readEntries(org.apache.lucene.store.Directory$IndexInputSlicer,org.apache.lucene.store.Directory,java.lang.String)>($r12, r1, r2);

        r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries> = $r13;

     label2:
        if 1 != 0 goto label6;

        $r14 = newarray (java.io.Closeable)[1];

        $r15 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        $r14[0] = $r15;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r14);

        goto label6;

     label3:
        $r16 := @caughtexception;

     label4:
        if 0 != 0 goto label5;

        $r17 = newarray (java.io.Closeable)[1];

        $r18 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        $r17[0] = $r18;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r17);

     label5:
        throw $r16;

     label6:
        r0.<org.apache.lucene.store.CompoundFileDirectory: boolean isOpen> = 1;

        r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer> = null;

        goto label9;

     label7:
        $z1 = <org.apache.lucene.store.CompoundFileDirectory: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        $z2 = r1 instanceof org.apache.lucene.store.CompoundFileDirectory;

        if $z2 == 0 goto label8;

        $r6 = new java.lang.AssertionError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compound file inside of compound file: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r6;

     label8:
        $r4 = <org.apache.lucene.store.CompoundFileDirectory: java.util.Map SENTINEL>;

        r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries> = $r4;

        r0.<org.apache.lucene.store.CompoundFileDirectory: boolean isOpen> = 1;

        $r5 = new org.apache.lucene.store.CompoundFileWriter;

        specialinvoke $r5.<org.apache.lucene.store.CompoundFileWriter: void <init>(org.apache.lucene.store.Directory,java.lang.String)>(r1, r2);

        r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer> = $r5;

        r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle> = null;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final java.util.Map readEntries(org.apache.lucene.store.Directory$IndexInputSlicer, org.apache.lucene.store.Directory, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r39, $r43;
        byte $b1, $b2, $b3;
        org.apache.lucene.store.Directory r6;
        java.util.Map r37;
        java.io.Closeable[] $r2, $r22, $r24;
        org.apache.lucene.store.IOContext $r7;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r42;
        java.lang.Throwable $r21;
        long $l5, $l6;
        java.util.HashMap $r40;
        java.lang.AssertionError $r44;
        int $i0, $i4, i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r3, $r4, $r5, $r11, $r20, $r36;
        org.apache.lucene.store.IndexInput $r1, $r8, r26, r27;
        java.io.IOException $r23;
        org.apache.lucene.store.Directory$IndexInputSlicer r0;
        org.apache.lucene.store.CompoundFileDirectory$FileEntry r13, $r41;
        java.lang.Object $r12;

        r0 := @parameter0: org.apache.lucene.store.Directory$IndexInputSlicer;

        r6 := @parameter1: org.apache.lucene.store.Directory;

        r3 := @parameter2: java.lang.String;

        r26 = null;

        r27 = null;

     label01:
        $r1 = virtualinvoke r0.<org.apache.lucene.store.Directory$IndexInputSlicer: org.apache.lucene.store.IndexInput openFullSlice()>();

        r26 = $r1;

        $i0 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        if $i0 != 63 goto label07;

        $b1 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $b2 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $b3 = virtualinvoke $r1.<org.apache.lucene.store.IndexInput: byte readByte()>();

        $i8 = (int) $b1;

        $i10 = (int) -41;

        if $i8 != $i10 goto label02;

        $i11 = (int) $b2;

        if $i11 != 108 goto label02;

        $i12 = (int) $b3;

        if $i12 == 23 goto label03;

     label02:
        $r39 = new org.apache.lucene.index.CorruptIndexException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal/impossible header for CFS file: ");

        $i13 = (int) $b1;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i14 = (int) $b2;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i15 = (int) $b3;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r36);

        throw $r39;

     label03:
        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeaderNoMagic(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r1, "CompoundFileWriterData", 0, 0);

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripExtension(java.lang.String)>(r3);

        $r5 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r4, "", "cfe");

        $r7 = <org.apache.lucene.store.IOContext: org.apache.lucene.store.IOContext READONCE>;

        $r8 = virtualinvoke r6.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexInput openInput(java.lang.String,org.apache.lucene.store.IOContext)>($r5, $r7);

        r27 = $r8;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: int checkHeader(org.apache.lucene.store.DataInput,java.lang.String,int,int)>($r8, "CompoundFileWriterEntries", 0, 0);

        $i4 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r40 = new java.util.HashMap;

        specialinvoke $r40.<java.util.HashMap: void <init>(int)>($i4);

        r37 = $r40;

        i7 = 0;

     label04:
        if i7 >= $i4 goto label06;

        $r41 = new org.apache.lucene.store.CompoundFileDirectory$FileEntry;

        specialinvoke $r41.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: void <init>()>();

        $r11 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: java.lang.String readString()>();

        $r12 = interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r41);

        r13 = (org.apache.lucene.store.CompoundFileDirectory$FileEntry) $r12;

        if r13 == null goto label05;

        $r43 = new org.apache.lucene.index.CorruptIndexException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate cfs entry id=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in CFS: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r20);

        throw $r43;

     label05:
        $l5 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r41.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long offset> = $l5;

        $l6 = virtualinvoke $r8.<org.apache.lucene.store.IndexInput: long readLong()>();

        $r41.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long length> = $l6;

        i7 = i7 + 1;

        goto label04;

     label06:
        goto label08;

     label07:
        r37 = staticinvoke <org.apache.lucene.store.CompoundFileDirectory: java.util.Map readLegacyEntries(org.apache.lucene.store.IndexInput,int)>($r1, $i0);

     label08:
        $r2 = newarray (java.io.Closeable)[2];

        $r2[0] = $r1;

        $r2[1] = r27;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>(null, $r2);

        return r37;

     label09:
        $r23 := @caughtexception;

     label10:
        $r24 = newarray (java.io.Closeable)[2];

        $r24[0] = r26;

        $r24[1] = r27;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>($r23, $r24);

        goto label13;

     label11:
        $r21 := @caughtexception;

     label12:
        $r22 = newarray (java.io.Closeable)[2];

        $r22[0] = r26;

        $r22[1] = r27;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.lang.Exception,java.io.Closeable[])>(null, $r22);

        throw $r21;

     label13:
        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>(java.lang.Object)>("impossible to get here");

        throw $r44;

        catch java.io.IOException from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static java.util.Map readLegacyEntries(org.apache.lucene.store.IndexInput, int) throws org.apache.lucene.index.CorruptIndexException, java.io.IOException
    {
        org.apache.lucene.index.CorruptIndexException $r35, $r37, $r40;
        byte $b5, $b6;
        boolean z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r34, $r36, $r39;
        long $l1, $l2, $l3, $l4, $l7, $l8;
        java.util.HashMap $r33;
        int i0, i9, i10, $i12, $i14, $i15, $i16;
        java.lang.String $r9, $r10, $r19, $r30, r32;
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.store.CompoundFileDirectory$FileEntry $r20, r31, $r38;
        java.lang.Object $r12;

        r1 := @parameter0: org.apache.lucene.store.IndexInput;

        i0 := @parameter1: int;

        $r33 = new java.util.HashMap;

        specialinvoke $r33.<java.util.HashMap: void <init>()>();

        if i0 >= 0 goto label02;

        $i12 = (int) -1;

        if i0 >= $i12 goto label01;

        $r35 = new org.apache.lucene.index.CorruptIndexException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible format version: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected >= ");

        $i14 = (int) -1;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r30);

        throw $r35;

     label01:
        i9 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        z0 = 0;

        goto label03;

     label02:
        i9 = i0;

        z0 = 1;

     label03:
        $l1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: long length()>();

        r31 = null;

        i10 = 0;

     label04:
        if i10 >= i9 goto label10;

        $l4 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: long readLong()>();

        $b5 = $l4 cmp 0L;

        $i15 = (int) $b5;

        if $i15 < 0 goto label05;

        $b6 = $l4 cmp $l1;

        $i16 = (int) $b6;

        if $i16 <= 0 goto label06;

     label05:
        $r37 = new org.apache.lucene.index.CorruptIndexException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CFS entry offset: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (resource: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r9);

        throw $r37;

     label06:
        $r10 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: java.lang.String readString()>();

        r32 = $r10;

        if z0 == 0 goto label07;

        r32 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripSegmentName(java.lang.String)>($r10);

     label07:
        if r31 == null goto label08;

        $l7 = r31.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long offset>;

        $l8 = $l4 - $l7;

        r31.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long length> = $l8;

     label08:
        $r38 = new org.apache.lucene.store.CompoundFileDirectory$FileEntry;

        specialinvoke $r38.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: void <init>()>();

        r31 = $r38;

        $r38.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long offset> = $l4;

        $r12 = interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, $r38);

        $r20 = (org.apache.lucene.store.CompoundFileDirectory$FileEntry) $r12;

        if $r20 == null goto label09;

        $r40 = new org.apache.lucene.index.CorruptIndexException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate cfs entry id=");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in CFS: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<org.apache.lucene.index.CorruptIndexException: void <init>(java.lang.String)>($r19);

        throw $r40;

     label09:
        i10 = i10 + 1;

        goto label04;

     label10:
        if r31 == null goto label11;

        $l2 = r31.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long offset>;

        $l3 = $l1 - $l2;

        r31.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long length> = $l3;

     label11:
        return $r33;
    }

    public org.apache.lucene.store.Directory getDirectory()
    {
        org.apache.lucene.store.CompoundFileDirectory r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory directory>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.lucene.store.CompoundFileDirectory r0;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.lang.String fileName>;

        return $r1;
    }

    public synchronized void close() throws java.io.IOException
    {
        java.lang.AssertionError $r5;
        org.apache.lucene.store.Directory$IndexInputSlicer $r3;
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.io.Closeable[] $r2;
        org.apache.lucene.store.CompoundFileWriter $r1, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        $z0 = r0.<org.apache.lucene.store.CompoundFileDirectory: boolean isOpen>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<org.apache.lucene.store.CompoundFileDirectory: boolean isOpen> = 0;

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        if $r1 == null goto label3;

        $z1 = <org.apache.lucene.store.CompoundFileDirectory: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.store.CompoundFileDirectory: boolean openForWrite>;

        if $z2 != 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r4 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        virtualinvoke $r4.<org.apache.lucene.store.CompoundFileWriter: void close()>();

        goto label4;

     label3:
        $r2 = newarray (java.io.Closeable)[1];

        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        $r2[0] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r2);

     label4:
        return;
    }

    public synchronized org.apache.lucene.store.IndexInput openInput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        long $l0, $l1;
        java.lang.AssertionError $r20;
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.util.Map $r3, $r14;
        java.lang.String r1, $r2, $r18;
        org.apache.lucene.store.IOContext r21;
        boolean $z0, $z1;
        org.apache.lucene.store.IndexInput $r6;
        java.util.Set $r15;
        java.io.FileNotFoundException $r7;
        org.apache.lucene.store.Directory$IndexInputSlicer $r5;
        org.apache.lucene.store.CompoundFileDirectory$FileEntry $r19;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r1 := @parameter0: java.lang.String;

        r21 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $z0 = <org.apache.lucene.store.CompoundFileDirectory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileDirectory: boolean openForWrite>;

        if $z1 == 0 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $r2 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripSegmentName(java.lang.String)>(r1);

        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r19 = (org.apache.lucene.store.CompoundFileDirectory$FileEntry) $r4;

        if $r19 != null goto label2;

        $r7 = new java.io.FileNotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No sub-file with id ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found (fileName=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files: ");

        $r14 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r18);

        throw $r7;

     label2:
        $r5 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        $l1 = $r19.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long offset>;

        $l0 = $r19.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long length>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.store.Directory$IndexInputSlicer: org.apache.lucene.store.IndexInput openSlice(java.lang.String,long,long)>(r1, $l1, $l0);

        return $r6;
    }

    public java.lang.String[] listAll()
    {
        java.lang.Object[] $r6;
        java.lang.String[] $r5, r15;
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.util.Map $r2, $r4;
        int $i0, $i1, i2;
        java.lang.String $r7, $r8, $r11, $r13;
        java.util.Set $r3;
        org.apache.lucene.store.CompoundFileWriter $r1, $r14;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        if $r1 == null goto label1;

        $r14 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        r15 = virtualinvoke $r14.<org.apache.lucene.store.CompoundFileWriter: java.lang.String[] listAll()>();

        goto label3;

     label1:
        $r2 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke $r3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r15 = (java.lang.String[]) $r6;

        $r7 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.lang.String fileName>;

        $r8 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String parseSegmentName(java.lang.String)>($r7);

        i2 = 0;

     label2:
        $i1 = lengthof r15;

        if i2 >= $i1 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = r15[i2];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r15[i2] = $r13;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r15;
    }

    public boolean fileExists(java.lang.String)
    {
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.util.Map $r3;
        org.apache.lucene.store.CompoundFileWriter $r1, $r5;
        java.lang.String r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        $z1 = virtualinvoke $r5.<org.apache.lucene.store.CompoundFileWriter: boolean fileExists(java.lang.String)>(r2);

        return $z1;

     label1:
        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripSegmentName(java.lang.String)>(r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        return $z0;
    }

    public void deleteFile(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.apache.lucene.store.CompoundFileDirectory r1;

        r1 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void renameFile(java.lang.String, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.store.CompoundFileDirectory r1;
        java.lang.String r2, r3;

        r1 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public long fileLength(java.lang.String) throws java.io.IOException
    {
        long $l0, $l1;
        java.io.FileNotFoundException $r7;
        org.apache.lucene.store.CompoundFileDirectory$FileEntry r6;
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.util.Map $r3;
        org.apache.lucene.store.CompoundFileWriter $r1, $r8;
        java.lang.Object $r5;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        $l1 = virtualinvoke $r8.<org.apache.lucene.store.CompoundFileWriter: long fileLength(java.lang.String)>(r2);

        return $l1;

     label1:
        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripSegmentName(java.lang.String)>(r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.lucene.store.CompoundFileDirectory$FileEntry) $r5;

        if r6 != null goto label2;

        $r7 = new java.io.FileNotFoundException;

        specialinvoke $r7.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r2);

        throw $r7;

     label2:
        $l0 = r6.<org.apache.lucene.store.CompoundFileDirectory$FileEntry: long length>;

        return $l0;
    }

    public org.apache.lucene.store.IndexOutput createOutput(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.store.CompoundFileDirectory r0;
        org.apache.lucene.store.CompoundFileWriter $r3;
        java.lang.String r1;
        org.apache.lucene.store.IOContext r2;
        org.apache.lucene.store.IndexOutput $r4;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.CompoundFileWriter writer>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.CompoundFileWriter: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>(r1, r2);

        return $r4;
    }

    public void sync(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.store.CompoundFileDirectory r1;
        java.util.Collection r2;

        r1 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.store.Lock makeLock(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.apache.lucene.store.CompoundFileDirectory r1;

        r1 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.store.Directory$IndexInputSlicer createSlicer(java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        java.lang.AssertionError $r19;
        org.apache.lucene.store.CompoundFileDirectory r0;
        java.util.Map $r3, $r13;
        java.lang.String r1, $r2, $r17;
        org.apache.lucene.store.IOContext r20;
        boolean $z0, $z1;
        java.util.Set $r14;
        java.io.FileNotFoundException $r6;
        org.apache.lucene.store.CompoundFileDirectory$FileEntry $r18;
        java.lang.Object $r4;
        org.apache.lucene.store.CompoundFileDirectory$1 $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16;

        r0 := @this: org.apache.lucene.store.CompoundFileDirectory;

        r1 := @parameter0: java.lang.String;

        r20 := @parameter1: org.apache.lucene.store.IOContext;

        virtualinvoke r0.<org.apache.lucene.store.CompoundFileDirectory: void ensureOpen()>();

        $z0 = <org.apache.lucene.store.CompoundFileDirectory: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.store.CompoundFileDirectory: boolean openForWrite>;

        if $z1 == 0 goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $r2 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String stripSegmentName(java.lang.String)>(r1);

        $r3 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r18 = (org.apache.lucene.store.CompoundFileDirectory$FileEntry) $r4;

        if $r18 != null goto label2;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No sub-file with id ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found (fileName=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files: ");

        $r13 = r0.<org.apache.lucene.store.CompoundFileDirectory: java.util.Map entries>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r17);

        throw $r6;

     label2:
        $r5 = new org.apache.lucene.store.CompoundFileDirectory$1;

        specialinvoke $r5.<org.apache.lucene.store.CompoundFileDirectory$1: void <init>(org.apache.lucene.store.CompoundFileDirectory,org.apache.lucene.store.CompoundFileDirectory$FileEntry)>(r0, $r18);

        return $r5;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.store.CompoundFileDirectory r2;
        org.apache.lucene.store.Directory $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r3, $r9;

        r2 := @this: org.apache.lucene.store.CompoundFileDirectory;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CompoundFileDirectory(file=\"");

        $r3 = r2.<org.apache.lucene.store.CompoundFileDirectory: java.lang.String fileName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" in dir=");

        $r6 = r2.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory directory>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static org.apache.lucene.store.Directory$IndexInputSlicer access$000(org.apache.lucene.store.CompoundFileDirectory)
    {
        org.apache.lucene.store.CompoundFileDirectory r0;
        org.apache.lucene.store.Directory$IndexInputSlicer $r1;

        r0 := @parameter0: org.apache.lucene.store.CompoundFileDirectory;

        $r1 = r0.<org.apache.lucene.store.CompoundFileDirectory: org.apache.lucene.store.Directory$IndexInputSlicer handle>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.Map $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.store.CompoundFileDirectory: byte CODEC_MAGIC_BYTE4> = 23;

        <org.apache.lucene.store.CompoundFileDirectory: byte CODEC_MAGIC_BYTE3> = 108;

        <org.apache.lucene.store.CompoundFileDirectory: byte CODEC_MAGIC_BYTE2> = -41;

        <org.apache.lucene.store.CompoundFileDirectory: byte CODEC_MAGIC_BYTE1> = 63;

        $r0 = class "Lorg/apache/lucene/store/CompoundFileDirectory;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.CompoundFileDirectory: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        <org.apache.lucene.store.CompoundFileDirectory: java.util.Map SENTINEL> = $r1;

        return;
    }
}
