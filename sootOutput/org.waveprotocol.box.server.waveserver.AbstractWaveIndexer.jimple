public abstract class org.waveprotocol.box.server.waveserver.AbstractWaveIndexer extends java.lang.Object implements org.waveprotocol.box.server.waveserver.WaveIndexer
{
    protected final org.waveprotocol.box.server.waveserver.WaveMap waveMap;
    protected final org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider;

    public void <init>(org.waveprotocol.box.server.waveserver.WaveMap, org.waveprotocol.box.server.waveserver.WaveletProvider)
    {
        org.waveprotocol.box.server.waveserver.WaveletProvider r1;
        org.waveprotocol.box.server.waveserver.AbstractWaveIndexer r0;
        org.waveprotocol.box.server.waveserver.WaveMap r2;

        r0 := @this: org.waveprotocol.box.server.waveserver.AbstractWaveIndexer;

        r2 := @parameter0: org.waveprotocol.box.server.waveserver.WaveMap;

        r1 := @parameter1: org.waveprotocol.box.server.waveserver.WaveletProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider> = r1;

        r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveMap waveMap> = r2;

        return;
    }

    public synchronized void remakeIndex() throws org.waveprotocol.box.server.waveserver.WaveletStateException, org.waveprotocol.box.server.waveserver.WaveServerException
    {
        org.waveprotocol.wave.model.id.WaveletName $r11;
        com.google.common.collect.ImmutableSet $r7;
        org.waveprotocol.wave.model.id.WaveId r5;
        java.util.Iterator $r8;
        org.waveprotocol.box.server.waveserver.WaveletProvider $r2, $r6, $r12;
        org.waveprotocol.wave.model.id.WaveletId r10;
        org.waveprotocol.box.common.ExceptionalIterator $r3;
        java.lang.Object $r4, $r9;
        org.waveprotocol.box.server.waveserver.AbstractWaveIndexer r0;
        org.waveprotocol.box.server.waveserver.WaveMap $r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.server.waveserver.AbstractWaveIndexer;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveMap waveMap>;

        virtualinvoke $r1.<org.waveprotocol.box.server.waveserver.WaveMap: void loadAllWavelets()>();

        $r2 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletProvider: org.waveprotocol.box.common.ExceptionalIterator getWaveIds()>();

     label1:
        $z0 = interfaceinvoke $r3.<org.waveprotocol.box.common.ExceptionalIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.box.common.ExceptionalIterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.model.id.WaveId) $r4;

        $r6 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.box.server.waveserver.WaveletProvider: com.google.common.collect.ImmutableSet getWaveletIds(org.waveprotocol.wave.model.id.WaveId)>(r5);

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.waveprotocol.wave.model.id.WaveletId) $r9;

        $r11 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>(r5, r10);

        $r12 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        interfaceinvoke $r12.<org.waveprotocol.box.server.waveserver.WaveletProvider: org.waveprotocol.box.server.frontend.CommittedWaveletSnapshot getSnapshot(org.waveprotocol.wave.model.id.WaveletName)>($r11);

        virtualinvoke r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: void processWavelet(org.waveprotocol.wave.model.id.WaveletName)>($r11);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    protected abstract void processWavelet(org.waveprotocol.wave.model.id.WaveletName);

    protected abstract void postIndexHook();

    protected org.waveprotocol.box.server.waveserver.WaveMap getWaveMap()
    {
        org.waveprotocol.box.server.waveserver.AbstractWaveIndexer r0;
        org.waveprotocol.box.server.waveserver.WaveMap $r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.AbstractWaveIndexer;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveMap waveMap>;

        return $r1;
    }

    protected org.waveprotocol.box.server.waveserver.WaveletProvider getWaveletProvider()
    {
        org.waveprotocol.box.server.waveserver.WaveletProvider $r1;
        org.waveprotocol.box.server.waveserver.AbstractWaveIndexer r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.AbstractWaveIndexer;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.AbstractWaveIndexer: org.waveprotocol.box.server.waveserver.WaveletProvider waveletProvider>;

        return $r1;
    }
}
