public class org.springframework.expression.spel.ast.StringLiteral extends org.springframework.expression.spel.ast.Literal
{
    private final org.springframework.expression.TypedValue value;

    public void <init>(java.lang.String, int, java.lang.String)
    {
        org.springframework.expression.spel.ast.StringLiteral r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r2, $r4, r5;
        org.springframework.expression.TypedValue $r3;

        r0 := @this: org.springframework.expression.spel.ast.StringLiteral;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<org.springframework.expression.spel.ast.Literal: void <init>(java.lang.String,int)>(r1, i0);

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $r2 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $r3 = new org.springframework.expression.TypedValue;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\'\'", "\'");

        specialinvoke $r3.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r4);

        r0.<org.springframework.expression.spel.ast.StringLiteral: org.springframework.expression.TypedValue value> = $r3;

        return;
    }

    public org.springframework.expression.TypedValue getLiteralValue()
    {
        org.springframework.expression.spel.ast.StringLiteral r0;
        org.springframework.expression.TypedValue $r1;

        r0 := @this: org.springframework.expression.spel.ast.StringLiteral;

        $r1 = r0.<org.springframework.expression.spel.ast.StringLiteral: org.springframework.expression.TypedValue value>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.springframework.expression.spel.ast.StringLiteral r1;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.Object $r3;
        java.lang.String $r6;
        org.springframework.expression.TypedValue $r2;

        r1 := @this: org.springframework.expression.spel.ast.StringLiteral;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("\'");

        $r2 = virtualinvoke r1.<org.springframework.expression.spel.ast.StringLiteral: org.springframework.expression.TypedValue getLiteralValue()>();

        $r3 = virtualinvoke $r2.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
