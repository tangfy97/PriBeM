public class com.jhlabs.image.TransitionFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private float transition;
    private java.awt.image.BufferedImage destination;
    protected java.awt.image.BufferedImageOp filter;
    private java.lang.String property;
    private java.lang.reflect.Method method;
    protected float minValue;
    protected float maxValue;

    private void <init>()
    {
        com.jhlabs.image.TransitionFilter r0;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.TransitionFilter: float transition> = 0.0F;

        return;
    }

    public void <init>(java.awt.image.BufferedImageOp, java.lang.String, float, float)
    {
        java.beans.PropertyDescriptor[] $r5;
        java.awt.image.BufferedImageOp r1;
        com.jhlabs.image.TransitionFilter r0;
        java.lang.StringBuffer $r8, $r9, $r10;
        java.beans.BeanInfo $r4;
        int $i0, i1;
        java.lang.String r2, $r11, $r13, $r17;
        java.lang.reflect.Method $r6, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r7, $r16;
        java.beans.IntrospectionException $r15;
        java.beans.PropertyDescriptor r12;
        float f0, f1;
        java.lang.Class $r3;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        r1 := @parameter0: java.awt.image.BufferedImageOp;

        r2 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.TransitionFilter: float transition> = 0.0F;

        r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImageOp filter> = r1;

        r0.<com.jhlabs.image.TransitionFilter: java.lang.String property> = r2;

        r0.<com.jhlabs.image.TransitionFilter: float minValue> = f0;

        r0.<com.jhlabs.image.TransitionFilter: float maxValue> = f1;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($r3);

        $r5 = interfaceinvoke $r4.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r5;

        if i1 >= $i0 goto label4;

        r12 = $r5[i1];

        $r13 = virtualinvoke r12.<java.beans.FeatureDescriptor: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r12.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>();

        r0.<com.jhlabs.image.TransitionFilter: java.lang.reflect.Method method> = $r14;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r6 = r0.<com.jhlabs.image.TransitionFilter: java.lang.reflect.Method method>;

        if $r6 != null goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No such property in object: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label7:
        return;

        catch java.beans.IntrospectionException from label1 to label5 with label6;
    }

    public void setTransition(float)
    {
        float f0;
        com.jhlabs.image.TransitionFilter r0;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.TransitionFilter: float transition> = f0;

        return;
    }

    public float getTransition()
    {
        float $f0;
        com.jhlabs.image.TransitionFilter r0;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        $f0 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        return $f0;
    }

    public void setDestination(java.awt.image.BufferedImage)
    {
        com.jhlabs.image.TransitionFilter r0;
        java.awt.image.BufferedImage r1;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImage destination> = r1;

        return;
    }

    public java.awt.image.BufferedImage getDestination()
    {
        com.jhlabs.image.TransitionFilter r0;
        java.awt.image.BufferedImage $r1;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        $r1 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImage destination>;

        return $r1;
    }

    public void prepareFilter(float)
    {
        java.lang.Float $r2;
        java.lang.Object[] $r1;
        java.awt.image.BufferedImageOp $r4;
        java.lang.IllegalArgumentException $r6;
        java.lang.Exception $r5;
        com.jhlabs.image.TransitionFilter r0;
        java.lang.StringBuffer $r7, $r8, $r10;
        float f0;
        java.lang.String $r9, $r11;
        java.lang.reflect.Method $r3;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        f0 := @parameter0: float;

     label1:
        $r3 = r0.<com.jhlabs.image.TransitionFilter: java.lang.reflect.Method method>;

        $r4 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImageOp filter>;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = new java.lang.Float;

        specialinvoke $r2.<java.lang.Float: void <init>(float)>(f0);

        $r1[0] = $r2;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error setting value for property: ");

        $r9 = r0.<com.jhlabs.image.TransitionFilter: java.lang.String property>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImageOp $r4, $r7;
        java.awt.AlphaComposite $r3;
        com.jhlabs.image.TransitionFilter r0;
        byte $b0, $b1;
        java.awt.Graphics2D $r2;
        java.awt.image.BufferedImage $r1, $r5, r6, r8;
        float $f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, f16, f17;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        r6 := @parameter0: java.awt.image.BufferedImage;

        r8 := @parameter1: java.awt.image.BufferedImage;

        if r8 != null goto label1;

        r8 = virtualinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r6, null);

     label1:
        $r1 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImage destination>;

        if $r1 != null goto label2;

        return r8;

     label2:
        $f0 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        f1 = 1.0F - $f0;

        $r2 = virtualinvoke r8.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $f2 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        $b0 = $f2 cmpl 1.0F;

        if $b0 == 0 goto label3;

        $f15 = r0.<com.jhlabs.image.TransitionFilter: float minValue>;

        $f13 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        $f11 = r0.<com.jhlabs.image.TransitionFilter: float maxValue>;

        $f10 = r0.<com.jhlabs.image.TransitionFilter: float minValue>;

        $f12 = $f11 - $f10;

        $f14 = $f13 * $f12;

        f16 = $f15 + $f14;

        virtualinvoke r0.<com.jhlabs.image.TransitionFilter: void prepareFilter(float)>(f16);

        $r7 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImageOp filter>;

        virtualinvoke $r2.<java.awt.Graphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>(r6, $r7, 0, 0);

     label3:
        $f3 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        $b1 = $f3 cmpl 0.0F;

        if $b1 == 0 goto label4;

        $f4 = r0.<com.jhlabs.image.TransitionFilter: float transition>;

        $r3 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $f4);

        virtualinvoke $r2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($r3);

        $f9 = r0.<com.jhlabs.image.TransitionFilter: float minValue>;

        $f6 = r0.<com.jhlabs.image.TransitionFilter: float maxValue>;

        $f5 = r0.<com.jhlabs.image.TransitionFilter: float minValue>;

        $f7 = $f6 - $f5;

        $f8 = f1 * $f7;

        f17 = $f9 + $f8;

        virtualinvoke r0.<com.jhlabs.image.TransitionFilter: void prepareFilter(float)>(f17);

        $r5 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImage destination>;

        $r4 = r0.<com.jhlabs.image.TransitionFilter: java.awt.image.BufferedImageOp filter>;

        virtualinvoke $r2.<java.awt.Graphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>($r5, $r4, 0, 0);

     label4:
        virtualinvoke $r2.<java.awt.Graphics: void dispose()>();

        return r8;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.TransitionFilter r0;

        r0 := @this: com.jhlabs.image.TransitionFilter;

        return "Transitions/Transition...";
    }
}
