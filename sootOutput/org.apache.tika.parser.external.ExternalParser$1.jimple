class org.apache.tika.parser.external.ExternalParser$1 extends java.lang.Thread
{
    final java.lang.Process val$process;
    final java.io.InputStream val$stream;
    final org.apache.tika.parser.external.ExternalParser this$0;

    void <init>(org.apache.tika.parser.external.ExternalParser, java.lang.Process, java.io.InputStream)
    {
        org.apache.tika.parser.external.ExternalParser$1 r0;
        org.apache.tika.parser.external.ExternalParser r1;
        java.lang.Process r2;
        java.io.InputStream r3;

        r0 := @this: org.apache.tika.parser.external.ExternalParser$1;

        r1 := @parameter0: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter1: java.lang.Process;

        r3 := @parameter2: java.io.InputStream;

        r0.<org.apache.tika.parser.external.ExternalParser$1: org.apache.tika.parser.external.ExternalParser this$0> = r1;

        r0.<org.apache.tika.parser.external.ExternalParser$1: java.lang.Process val$process> = r2;

        r0.<org.apache.tika.parser.external.ExternalParser$1: java.io.InputStream val$stream> = r3;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.tika.parser.external.ExternalParser$1 r0;
        java.io.OutputStream $r2;
        java.lang.Process $r1;
        java.io.IOException $r4;
        java.io.InputStream $r3;

        r0 := @this: org.apache.tika.parser.external.ExternalParser$1;

        $r1 = r0.<org.apache.tika.parser.external.ExternalParser$1: java.lang.Process val$process>;

        $r2 = virtualinvoke $r1.<java.lang.Process: java.io.OutputStream getOutputStream()>();

     label1:
        $r3 = r0.<org.apache.tika.parser.external.ExternalParser$1: java.io.InputStream val$stream>;

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r3, $r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
