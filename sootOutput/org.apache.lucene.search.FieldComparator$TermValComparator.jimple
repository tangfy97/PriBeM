public final class org.apache.lucene.search.FieldComparator$TermValComparator extends org.apache.lucene.search.FieldComparator
{
    private org.apache.lucene.util.BytesRef[] values;
    private org.apache.lucene.index.BinaryDocValues docTerms;
    private final java.lang.String field;
    private org.apache.lucene.util.BytesRef bottom;
    private final org.apache.lucene.util.BytesRef tempBR;

    void <init>(int, java.lang.String)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r1;
        int i0;
        org.apache.lucene.util.BytesRef[] $r2;
        java.lang.String r3;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.search.FieldComparator: void <init>()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR> = $r1;

        $r2 = newarray (org.apache.lucene.util.BytesRef)[i0];

        r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values> = $r2;

        r0.<org.apache.lucene.search.FieldComparator$TermValComparator: java.lang.String field> = r3;

        return;
    }

    public int compare(int, int)
    {
        org.apache.lucene.util.BytesRef r2, r4;
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        int i0, i1, $i2, $i4;
        org.apache.lucene.util.BytesRef[] $r1, $r3;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        r2 = $r1[i0];

        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        r4 = $r3[i1];

        if r2 != null goto label2;

        if r4 != null goto label1;

        return 0;

     label1:
        $i4 = (int) -1;

        return $i4;

     label2:
        if r4 != null goto label3;

        return 1;

     label3:
        $i2 = virtualinvoke r2.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r4);

        return $i2;
    }

    public int compareBottom(int)
    {
        byte[] $r4, $r5, $r7, $r8, $r12, $r13;
        int i0, $i1, $i3;
        org.apache.lucene.util.BytesRef $r1, $r3, $r6, $r9, $r10, $r11;
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.index.BinaryDocValues $r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.index.BinaryDocValues docTerms>;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef bottom>;

        $r5 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r4 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r5 != $r4 goto label2;

        $r11 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r13 = $r11.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r12 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r13 != $r12 goto label1;

        return 0;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        $r6 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        $r8 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r7 = <org.apache.lucene.index.BinaryDocValues: byte[] MISSING>;

        if $r8 != $r7 goto label3;

        return 1;

     label3:
        $r10 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef bottom>;

        $r9 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        $i1 = virtualinvoke $r10.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r9);

        return $i1;
    }

    public void copy(int, int)
    {
        org.apache.lucene.util.BytesRef $r2, $r4, $r6;
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        int i0, i1;
        org.apache.lucene.util.BytesRef[] $r1, $r3, $r7;
        org.apache.lucene.index.BinaryDocValues $r5;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        $r7 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r6 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r6.<org.apache.lucene.util.BytesRef: void <init>()>();

        $r7[i0] = $r6;

     label1:
        $r5 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.index.BinaryDocValues docTerms>;

        $r3 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r4 = $r3[i0];

        virtualinvoke $r5.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i1, $r4);

        return;
    }

    public org.apache.lucene.search.FieldComparator setNextReader(org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.search.FieldCache $r2;
        java.lang.String $r4;
        org.apache.lucene.index.BinaryDocValues $r5;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.index.AtomicReader $r3;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        $r2 = <org.apache.lucene.search.FieldCache: org.apache.lucene.search.FieldCache DEFAULT>;

        $r3 = virtualinvoke r1.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r4 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: java.lang.String field>;

        $r5 = interfaceinvoke $r2.<org.apache.lucene.search.FieldCache: org.apache.lucene.index.BinaryDocValues getTerms(org.apache.lucene.index.AtomicReader,java.lang.String)>($r3, $r4);

        r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.index.BinaryDocValues docTerms> = $r5;

        return r0;
    }

    public void setBottom(int)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r2;
        int i0;
        org.apache.lucene.util.BytesRef[] $r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r2 = $r1[i0];

        r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef bottom> = $r2;

        return;
    }

    public org.apache.lucene.util.BytesRef value(int)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r2;
        int i0;
        org.apache.lucene.util.BytesRef[] $r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int compareValues(org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r2;
        org.apache.lucene.util.BytesRef r0, r1;
        int $i0, $i2;

        r2 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 0;

     label1:
        $i2 = (int) -1;

        return $i2;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r1);

        return $i0;
    }

    public int compareDocToValue(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r1, r3, $r4;
        int i0, $i1;
        org.apache.lucene.index.BinaryDocValues $r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        r3 := @parameter1: org.apache.lucene.util.BytesRef;

        $r2 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.index.BinaryDocValues docTerms>;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r4 = r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef tempBR>;

        $i1 = virtualinvoke $r4.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r3);

        return $i1;
    }

    public volatile int compareDocToValue(int, java.lang.Object) throws java.io.IOException
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r2;
        int i0, $i1;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (org.apache.lucene.util.BytesRef) r1;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$TermValComparator: int compareDocToValue(int,org.apache.lucene.util.BytesRef)>(i0, $r2);

        return $i1;
    }

    public volatile int compareValues(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r3, $r4;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.util.BytesRef) r1;

        $r3 = (org.apache.lucene.util.BytesRef) r2;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$TermValComparator: int compareValues(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r4, $r3);

        return $i0;
    }

    public volatile java.lang.Object value(int)
    {
        int i0;
        org.apache.lucene.search.FieldComparator$TermValComparator r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$TermValComparator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$TermValComparator: org.apache.lucene.util.BytesRef value(int)>(i0);

        return $r1;
    }
}
