class org.waveprotocol.box.server.frontend.WaveletInfo$1$1 extends java.lang.Object implements com.google.common.base.Function
{
    final org.waveprotocol.wave.model.id.WaveId val$waveId;
    final org.waveprotocol.box.server.frontend.WaveletInfo$1 this$1;

    void <init>(org.waveprotocol.box.server.frontend.WaveletInfo$1, org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.box.server.frontend.WaveletInfo$1$1 r0;
        org.waveprotocol.wave.model.id.WaveId r2;
        org.waveprotocol.box.server.frontend.WaveletInfo$1 r1;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1$1;

        r1 := @parameter0: org.waveprotocol.box.server.frontend.WaveletInfo$1;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveId;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: org.waveprotocol.box.server.frontend.WaveletInfo$1 this$1> = r1;

        r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: org.waveprotocol.wave.model.id.WaveId val$waveId> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet apply(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveletName $r3;
        org.waveprotocol.wave.model.id.WaveId $r2;
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.version.HashedVersionFactory $r6;
        org.waveprotocol.box.server.frontend.WaveletInfo$1$1 r0;
        org.waveprotocol.wave.model.version.HashedVersion $r7;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet $r4;
        org.waveprotocol.box.server.frontend.WaveletInfo$1 $r5;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1$1;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: org.waveprotocol.wave.model.id.WaveId val$waveId>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r2, r1);

        $r4 = new org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet;

        $r5 = r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: org.waveprotocol.box.server.frontend.WaveletInfo$1 this$1>;

        $r6 = $r5.<org.waveprotocol.box.server.frontend.WaveletInfo$1: org.waveprotocol.wave.model.version.HashedVersionFactory val$hashedVersionFactory>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.version.HashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersion createVersionZero(org.waveprotocol.wave.model.id.WaveletName)>($r3);

        specialinvoke $r4.<org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet: void <init>(org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.version.HashedVersion)>($r3, $r7);

        return $r4;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.waveprotocol.box.server.frontend.WaveletInfo$1$1 r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.id.WaveletId $r2;
        org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet $r3;

        r0 := @this: org.waveprotocol.box.server.frontend.WaveletInfo$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.id.WaveletId) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.box.server.frontend.WaveletInfo$1$1: org.waveprotocol.box.server.frontend.WaveletInfo$PerWavelet apply(org.waveprotocol.wave.model.id.WaveletId)>($r2);

        return $r3;
    }
}
