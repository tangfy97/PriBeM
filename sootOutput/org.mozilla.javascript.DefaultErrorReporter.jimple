class org.mozilla.javascript.DefaultErrorReporter extends java.lang.Object implements org.mozilla.javascript.ErrorReporter
{
    static final org.mozilla.javascript.DefaultErrorReporter instance;
    private boolean forEval;
    private org.mozilla.javascript.ErrorReporter chainedReporter;

    private void <init>()
    {
        org.mozilla.javascript.DefaultErrorReporter r0;

        r0 := @this: org.mozilla.javascript.DefaultErrorReporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static org.mozilla.javascript.ErrorReporter forEval(org.mozilla.javascript.ErrorReporter)
    {
        org.mozilla.javascript.ErrorReporter r1;
        org.mozilla.javascript.DefaultErrorReporter $r0;

        r1 := @parameter0: org.mozilla.javascript.ErrorReporter;

        $r0 = new org.mozilla.javascript.DefaultErrorReporter;

        specialinvoke $r0.<org.mozilla.javascript.DefaultErrorReporter: void <init>()>();

        $r0.<org.mozilla.javascript.DefaultErrorReporter: boolean forEval> = 1;

        $r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter> = r1;

        return $r0;
    }

    public void warning(java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        org.mozilla.javascript.DefaultErrorReporter r0;
        org.mozilla.javascript.ErrorReporter $r1, $r5;
        int i0, i1;
        java.lang.String r2, r3, r4;

        r0 := @this: org.mozilla.javascript.DefaultErrorReporter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $r1 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        if $r1 == null goto label1;

        $r5 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        interfaceinvoke $r5.<org.mozilla.javascript.ErrorReporter: void warning(java.lang.String,java.lang.String,int,java.lang.String,int)>(r2, r3, i0, r4, i1);

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        org.mozilla.javascript.EcmaError $r7;
        org.mozilla.javascript.EvaluatorException $r5;
        org.mozilla.javascript.DefaultErrorReporter r0;
        org.mozilla.javascript.ErrorReporter $r1, $r6;
        int i0, i1;
        java.lang.String r2, r3, r4;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.DefaultErrorReporter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $z0 = r0.<org.mozilla.javascript.DefaultErrorReporter: boolean forEval>;

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>("SyntaxError", r2, r3, i0, r4, i1);

        throw $r7;

     label1:
        $r1 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        if $r1 == null goto label2;

        $r6 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        interfaceinvoke $r6.<org.mozilla.javascript.ErrorReporter: void error(java.lang.String,java.lang.String,int,java.lang.String,int)>(r2, r3, i0, r4, i1);

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int)>(r2, r3, i0, r4, i1);

        throw $r5;

     label3:
        return;
    }

    public org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        org.mozilla.javascript.EvaluatorException $r2, $r7;
        org.mozilla.javascript.DefaultErrorReporter r0;
        org.mozilla.javascript.ErrorReporter $r1, $r6;
        int i0, i1;
        java.lang.String r3, r4, r5;

        r0 := @this: org.mozilla.javascript.DefaultErrorReporter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r5 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        $r1 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        if $r1 == null goto label1;

        $r6 = r0.<org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter chainedReporter>;

        $r7 = interfaceinvoke $r6.<org.mozilla.javascript.ErrorReporter: org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int)>(r3, r4, i0, r5, i1);

        return $r7;

     label1:
        $r2 = new org.mozilla.javascript.EvaluatorException;

        specialinvoke $r2.<org.mozilla.javascript.EvaluatorException: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int)>(r3, r4, i0, r5, i1);

        return $r2;
    }

    static void <clinit>()
    {
        org.mozilla.javascript.DefaultErrorReporter $r0;

        $r0 = new org.mozilla.javascript.DefaultErrorReporter;

        specialinvoke $r0.<org.mozilla.javascript.DefaultErrorReporter: void <init>()>();

        <org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.DefaultErrorReporter instance> = $r0;

        return;
    }
}
