public abstract class ucar.nc2.dt.point.PointObsDatasetImpl extends ucar.nc2.dt.TypedDatasetImpl implements ucar.nc2.dt.PointObsDataset
{
    protected ucar.nc2.units.DateUnit timeUnit;
    protected ucar.nc2.units.DateFormatter formatter;

    protected static double getMetersConversionFactor(java.lang.String) throws java.lang.Exception
    {
        ucar.nc2.units.SimpleUnit $r1, $r2;
        java.lang.String r0;
        double $d0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>(r0);

        $r2 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit meterUnit>;

        $d0 = virtualinvoke $r1.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>(1.0, $r2);

        return $d0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        specialinvoke r0.<ucar.nc2.dt.TypedDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;
        java.lang.String r1, r2, r3;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<ucar.nc2.dt.TypedDatasetImpl: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.TypedDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return;
    }

    protected abstract void setTimeUnits();

    public java.lang.String getDetailInfo()
    {
        java.lang.StringBuffer $r0, $r1, $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        int $i0;
        java.lang.String $r4, $r14, $r15;
        ucar.nc2.units.DateUnit $r7;
        ucar.nc2.dt.point.PointObsDatasetImpl r2;
        java.lang.Class $r3, $r10;

        r2 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PointObsDataset\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  adapter   = ");

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  timeUnit  = ");

        $r7 = virtualinvoke r2.<ucar.nc2.dt.point.PointObsDatasetImpl: ucar.nc2.units.DateUnit getTimeUnits()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  dataClass = ");

        $r10 = virtualinvoke r2.<ucar.nc2.dt.point.PointObsDatasetImpl: java.lang.Class getDataClass()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  dataCount = ");

        $i0 = virtualinvoke r2.<ucar.nc2.dt.point.PointObsDatasetImpl: int getDataCount()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r14 = specialinvoke r2.<ucar.nc2.dt.TypedDatasetImpl: java.lang.String getDetailInfo()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r1;
        ucar.nc2.constants.FeatureType $r0;

        r1 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        return $r0;
    }

    public java.lang.Class getDataClass()
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        return class "Lucar/nc2/dt/PointObsDatatype;";
    }

    public ucar.nc2.units.DateUnit getTimeUnits()
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;
        ucar.nc2.units.DateUnit $r1;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        $r1 = r0.<ucar.nc2.dt.point.PointObsDatasetImpl: ucar.nc2.units.DateUnit timeUnit>;

        return $r1;
    }

    public java.util.List getData() throws java.io.IOException
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.point.PointObsDatasetImpl: java.util.List getData(ucar.nc2.util.CancelTask)>(null);

        return $r1;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.nc2.dt.point.PointObsDatasetImpl r0;
        ucar.unidata.geoloc.LatLonRect r1;
        java.util.List $r2;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r2 = virtualinvoke r0.<ucar.nc2.dt.point.PointObsDatasetImpl: java.util.List getData(ucar.unidata.geoloc.LatLonRect,ucar.nc2.util.CancelTask)>(r1, null);

        return $r2;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect, java.util.Date, java.util.Date) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r1;
        java.util.List $r4;
        java.util.Date r2, r3;
        ucar.nc2.dt.point.PointObsDatasetImpl r0;

        r0 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = virtualinvoke r0.<ucar.nc2.dt.point.PointObsDatasetImpl: java.util.List getData(ucar.unidata.geoloc.LatLonRect,java.util.Date,java.util.Date,ucar.nc2.util.CancelTask)>(r1, r2, r3, null);

        return $r4;
    }

    protected double getTime(ucar.nc2.Variable, ucar.ma2.StructureData) throws java.text.ParseException
    {
        java.util.Date $r9;
        long $l0;
        ucar.ma2.StructureData r3;
        ucar.nc2.Variable r0;
        java.lang.String $r4, $r5, $r13;
        double $d0, $d1, $d2;
        ucar.ma2.DataType $r1, $r2, $r11, $r12;
        ucar.nc2.dt.point.PointObsDatasetImpl r6;
        float $f0;
        ucar.nc2.units.DateFormatter $r7, $r8, $r10;

        r6 := @this: ucar.nc2.dt.point.PointObsDatasetImpl;

        r0 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.StructureData;

        if r0 != null goto label1;

        return 0.0;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 == $r2 goto label2;

        $r11 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r11 != $r12 goto label4;

     label2:
        $r4 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r5 = virtualinvoke r3.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r4);

        $r7 = r6.<ucar.nc2.dt.point.PointObsDatasetImpl: ucar.nc2.units.DateFormatter formatter>;

        if null != $r7 goto label3;

        $r10 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r10.<ucar.nc2.units.DateFormatter: void <init>()>();

        r6.<ucar.nc2.dt.point.PointObsDatasetImpl: ucar.nc2.units.DateFormatter formatter> = $r10;

     label3:
        $r8 = r6.<ucar.nc2.dt.point.PointObsDatasetImpl: ucar.nc2.units.DateFormatter formatter>;

        $r9 = virtualinvoke $r8.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>($r5);

        $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        $d1 = $d0 / 1000.0;

        return $d1;

     label4:
        $r13 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $f0 = virtualinvoke r3.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r13);

        $d2 = (double) $f0;

        return $d2;
    }
}
