public class groovy.lang.GroovyClassLoader extends java.net.URLClassLoader
{
    protected final java.util.Map classCache;
    protected final java.util.Map sourceCache;
    private final org.codehaus.groovy.control.CompilerConfiguration config;
    private java.lang.Boolean recompile;
    private static int scriptNameCounter;
    private groovy.lang.GroovyResourceLoader resourceLoader;
    static java.lang.Class class$groovy$lang$GroovyObject;

    public void <init>()
    {
        java.lang.ClassLoader $r2;
        groovy.lang.GroovyClassLoader r0;
        java.lang.Thread $r1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        specialinvoke r0.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader)>($r2);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration)>(r1, null);

        return;
    }

    public void <init>(groovy.lang.GroovyClassLoader)
    {
        org.codehaus.groovy.control.CompilerConfiguration $r2;
        groovy.lang.GroovyClassLoader r0, r1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: groovy.lang.GroovyClassLoader;

        $r2 = r1.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        specialinvoke r0.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration,boolean)>(r1, $r2, 0);

        return;
    }

    public void <init>(java.lang.ClassLoader, org.codehaus.groovy.control.CompilerConfiguration, boolean)
    {
        java.util.Iterator $r7;
        java.util.HashMap $r3, $r4;
        org.codehaus.groovy.control.CompilerConfiguration r10;
        java.net.URL[] $r2;
        java.util.List $r6;
        groovy.lang.GroovyClassLoader$1 $r5;
        java.lang.Object $r8;
        java.lang.ClassLoader r1;
        java.lang.String r9;
        groovy.lang.GroovyClassLoader r0;
        boolean z0, $z1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r10 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        z0 := @parameter2: boolean;

        $r2 = newarray (java.net.URL)[0];

        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r2, r1);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache> = $r4;

        $r5 = new groovy.lang.GroovyClassLoader$1;

        specialinvoke $r5.<groovy.lang.GroovyClassLoader$1: void <init>(groovy.lang.GroovyClassLoader)>(r0);

        r0.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyResourceLoader resourceLoader> = $r5;

        if r10 != null goto label1;

        r10 = <org.codehaus.groovy.control.CompilerConfiguration: org.codehaus.groovy.control.CompilerConfiguration DEFAULT>;

     label1:
        r0.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config> = r10;

        if z0 == 0 goto label3;

        $r6 = virtualinvoke r10.<org.codehaus.groovy.control.CompilerConfiguration: java.util.List getClasspath()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void addClasspath(java.lang.String)>(r9);

        goto label2;

     label3:
        return;
    }

    public void <init>(java.lang.ClassLoader, org.codehaus.groovy.control.CompilerConfiguration)
    {
        java.lang.ClassLoader r1;
        org.codehaus.groovy.control.CompilerConfiguration r2;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration,boolean)>(r1, r2, 1);

        return;
    }

    public void setResourceLoader(groovy.lang.GroovyResourceLoader)
    {
        java.lang.IllegalArgumentException $r2;
        groovy.lang.GroovyResourceLoader r0;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: groovy.lang.GroovyResourceLoader;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Resource loader must not be null!");

        throw $r2;

     label1:
        r1.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyResourceLoader resourceLoader> = r0;

        return;
    }

    public groovy.lang.GroovyResourceLoader getResourceLoader()
    {
        groovy.lang.GroovyClassLoader r0;
        groovy.lang.GroovyResourceLoader $r1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = r0.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyResourceLoader resourceLoader>;

        return $r1;
    }

    public java.lang.Class defineClass(org.codehaus.groovy.ast.ClassNode, java.lang.String)
    {
        org.codehaus.groovy.ast.ClassNode r2;
        groovy.lang.DeprecationException $r0;
        java.lang.String r3;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r3 := @parameter1: java.lang.String;

        $r0 = new groovy.lang.DeprecationException;

        specialinvoke $r0.<groovy.lang.DeprecationException: void <init>(java.lang.String)>("the method GroovyClassLoader#defineClass(ClassNode, String) is no longer used and removed");

        throw $r0;
    }

    public java.lang.Class defineClass(org.codehaus.groovy.ast.ClassNode, java.lang.String, java.lang.String)
    {
        java.net.URL $r1;
        groovy.lang.GroovyClassLoader$ClassCollector $r10;
        org.codehaus.groovy.ast.ModuleNode $r8;
        org.codehaus.groovy.control.CompilationUnit $r6;
        java.lang.String r2, r15;
        org.codehaus.groovy.control.SourceUnit $r9;
        java.net.MalformedURLException $r14;
        org.codehaus.groovy.ast.ClassNode r7;
        java.lang.RuntimeException $r13;
        org.codehaus.groovy.control.CompilerConfiguration $r5;
        org.codehaus.groovy.control.CompilationFailedException $r12;
        java.security.cert.Certificate[] $r3;
        java.lang.Class $r11;
        java.security.CodeSource $r0, r16;
        groovy.lang.GroovyClassLoader r4;

        r4 := @this: groovy.lang.GroovyClassLoader;

        r7 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r15 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r16 = null;

     label1:
        $r0 = new java.security.CodeSource;

        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", r2);

        $r3 = (java.security.cert.Certificate[]) null;

        specialinvoke $r0.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r1, $r3);

        r16 = $r0;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        $r5 = r4.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r6 = virtualinvoke r4.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilationUnit createCompilationUnit(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource)>($r5, r16);

        $r8 = virtualinvoke r7.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ModuleNode getModule()>();

        $r9 = virtualinvoke $r8.<org.codehaus.groovy.ast.ModuleNode: org.codehaus.groovy.control.SourceUnit getContext()>();

        $r10 = virtualinvoke r4.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyClassLoader$ClassCollector createCollector(org.codehaus.groovy.control.CompilationUnit,org.codehaus.groovy.control.SourceUnit)>($r6, $r9);

     label5:
        virtualinvoke $r6.<org.codehaus.groovy.control.CompilationUnit: void addClassNode(org.codehaus.groovy.ast.ClassNode)>(r7);

        virtualinvoke $r6.<org.codehaus.groovy.control.CompilationUnit: void setClassgenCallback(org.codehaus.groovy.control.CompilationUnit$ClassgenCallback)>($r10);

        virtualinvoke $r6.<org.codehaus.groovy.control.CompilationUnit: void compile(int)>(7);

        $r11 = staticinvoke <groovy.lang.GroovyClassLoader$ClassCollector: java.lang.Class access$200(groovy.lang.GroovyClassLoader$ClassCollector)>($r10);

     label6:
        return $r11;

     label7:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch org.codehaus.groovy.control.CompilationFailedException from label5 to label6 with label7;
    }

    public java.lang.Class parseClass(java.io.File) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        groovy.lang.GroovyCodeSource $r1;
        java.lang.Class $r3;
        groovy.lang.GroovyClassLoader r0;
        java.io.File r2;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.io.File;

        $r1 = new groovy.lang.GroovyCodeSource;

        specialinvoke $r1.<groovy.lang.GroovyCodeSource: void <init>(java.io.File)>(r2);

        $r3 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(groovy.lang.GroovyCodeSource)>($r1);

        return $r3;
    }

    public java.lang.Class parseClass(java.lang.String, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r4;
        org.codehaus.groovy.control.CompilerConfiguration $r2;
        java.io.ByteArrayInputStream $r5;
        org.codehaus.groovy.control.CompilationFailedException $r9;
        java.lang.Class $r7;
        java.lang.String r0, $r3, r6;
        groovy.lang.GroovyClassLoader r1;
        java.io.UnsupportedEncodingException $r8;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r2 = r1.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r4 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(1, null, $r8);

        throw $r9;

     label4:
        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        $r7 = virtualinvoke r1.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.InputStream,java.lang.String)>($r5, r6);

        return $r7;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Class parseClass(java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        long $l0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        java.lang.Class $r7;
        java.lang.String r1, $r6;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("script");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.lang.String,java.lang.String)>(r1, $r6);

        return $r7;
    }

    public java.lang.Class parseClass(java.io.InputStream) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Class $r3;
        java.lang.String $r2;
        groovy.lang.GroovyClassLoader r0;
        java.io.InputStream r1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.String generateScriptName()>();

        $r3 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.InputStream,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public synchronized java.lang.String generateScriptName()
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        groovy.lang.GroovyClassLoader r5;

        r5 := @this: groovy.lang.GroovyClassLoader;

        $i0 = <groovy.lang.GroovyClassLoader: int scriptNameCounter>;

        $i1 = $i0 + 1;

        <groovy.lang.GroovyClassLoader: int scriptNameCounter> = $i1;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("script");

        $i2 = <groovy.lang.GroovyClassLoader: int scriptNameCounter>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.Class parseClass(java.io.InputStream, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyClassLoader$2 $r0;
        java.lang.Object $r4;
        groovy.lang.GroovyCodeSource r5;
        java.lang.Class $r6;
        java.lang.String r3;
        groovy.lang.GroovyClassLoader r1;
        java.io.InputStream r2;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        $r0 = new groovy.lang.GroovyClassLoader$2;

        specialinvoke $r0.<groovy.lang.GroovyClassLoader$2: void <init>(groovy.lang.GroovyClassLoader,java.io.InputStream,java.lang.String)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r5 = (groovy.lang.GroovyCodeSource) $r4;

        $r6 = virtualinvoke r1.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(groovy.lang.GroovyCodeSource)>(r5);

        return $r6;
    }

    public java.lang.Class parseClass(groovy.lang.GroovyCodeSource) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyCodeSource r1;
        java.lang.Class $r2;
        groovy.lang.GroovyClassLoader r0;
        boolean $z0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: groovy.lang.GroovyCodeSource;

        $z0 = virtualinvoke r1.<groovy.lang.GroovyCodeSource: boolean isCachable()>();

        $r2 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(groovy.lang.GroovyCodeSource,boolean)>(r1, $z0);

        return $r2;
    }

    public java.lang.Class parseClass(groovy.lang.GroovyCodeSource, boolean) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Throwable $r21;
        groovy.lang.GroovyCodeSource r2;
        groovy.lang.GroovyClassLoader$ClassCollector $r11;
        byte b0;
        org.codehaus.groovy.control.CompilationUnit $r8;
        java.util.Map $r1, $r3, $r13;
        java.lang.String $r4, $r14, $r19;
        boolean z0, $z1;
        java.util.Iterator $r26;
        org.codehaus.groovy.control.SourceUnit r23;
        java.util.Collection $r25;
        org.codehaus.groovy.control.CompilerConfiguration $r6, $r12, $r17;
        java.io.File $r9, $r10, $r18;
        java.lang.Object $r5, $r15;
        java.lang.Class r16, r22, $r24;
        java.security.CodeSource $r7;
        groovy.lang.GroovyClassLoader r0;
        java.io.InputStream $r20;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: groovy.lang.GroovyCodeSource;

        z0 := @parameter1: boolean;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        entermonitor $r1;

     label01:
        $r3 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        $r4 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.lang.String getName()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r22 = (java.lang.Class) $r5;

        if r22 == null goto label03;

        exitmonitor $r1;

     label02:
        return r22;

     label03:
        $r6 = r0.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r7 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.security.CodeSource getCodeSource()>();

        $r8 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilationUnit createCompilationUnit(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource)>($r6, $r7);

        $r9 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.io.File getFile()>();

        if $r9 != null goto label04;

        $r19 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.lang.String getName()>();

        $r20 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.io.InputStream getInputStream()>();

        r23 = virtualinvoke $r8.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.lang.String,java.io.InputStream)>($r19, $r20);

        goto label05;

     label04:
        $r10 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.io.File getFile()>();

        r23 = virtualinvoke $r8.<org.codehaus.groovy.control.CompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>($r10);

     label05:
        $r11 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyClassLoader$ClassCollector createCollector(org.codehaus.groovy.control.CompilationUnit,org.codehaus.groovy.control.SourceUnit)>($r8, r23);

        virtualinvoke $r8.<org.codehaus.groovy.control.CompilationUnit: void setClassgenCallback(org.codehaus.groovy.control.CompilationUnit$ClassgenCallback)>($r11);

        b0 = 7;

        $r12 = r0.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        if $r12 == null goto label06;

        $r17 = r0.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r18 = virtualinvoke $r17.<org.codehaus.groovy.control.CompilerConfiguration: java.io.File getTargetDirectory()>();

        if $r18 == null goto label06;

        b0 = 8;

     label06:
        virtualinvoke $r8.<org.codehaus.groovy.control.CompilationUnit: void compile(int)>(b0);

        $r24 = staticinvoke <groovy.lang.GroovyClassLoader$ClassCollector: java.lang.Class access$200(groovy.lang.GroovyClassLoader$ClassCollector)>($r11);

        $r25 = virtualinvoke $r11.<groovy.lang.GroovyClassLoader$ClassCollector: java.util.Collection getLoadedClasses()>();

        $r26 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r15 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.Class) $r15;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void setClassCacheEntry(java.lang.Class)>(r16);

        goto label07;

     label08:
        if z0 == 0 goto label09;

        $r13 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        $r14 = virtualinvoke r2.<groovy.lang.GroovyCodeSource: java.lang.String getName()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r24);

     label09:
        exitmonitor $r1;

     label10:
        return $r24;

     label11:
        $r21 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected java.lang.String[] getClassPath()
    {
        java.net.URL $r3;
        java.lang.String[] r2;
        java.net.URL[] $r1;
        int $i0, $i1, i2;
        java.lang.String $r4;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.net.URL[] getURLs()>();

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r3 = $r1[i2];

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getFile()>();

        r2[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    protected void expandClassPath(java.util.List, java.lang.String, java.lang.String, boolean)
    {
        java.util.List r2;
        groovy.lang.DeprecationException $r0;
        java.lang.String r3, r4;
        groovy.lang.GroovyClassLoader r1;
        boolean z0;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r0 = new groovy.lang.DeprecationException;

        specialinvoke $r0.<groovy.lang.DeprecationException: void <init>(java.lang.String)>("the method groovy.lang.GroovyClassLoader#expandClassPath(List,String,String,boolean) is no longer used internally and removed");

        throw $r0;
    }

    protected java.lang.Class defineClass(java.lang.String, byte[], java.security.ProtectionDomain)
    {
        byte[] r3;
        java.security.ProtectionDomain r4;
        groovy.lang.DeprecationException $r0;
        java.lang.String r2;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: byte[];

        r4 := @parameter2: java.security.ProtectionDomain;

        $r0 = new groovy.lang.DeprecationException;

        specialinvoke $r0.<groovy.lang.DeprecationException: void <init>(java.lang.String)>("the method groovy.lang.GroovyClassLoader#defineClass(String,byte[],ProtectionDomain) is no longer used internally and removed");

        throw $r0;
    }

    protected org.codehaus.groovy.control.CompilationUnit createCompilationUnit(org.codehaus.groovy.control.CompilerConfiguration, java.security.CodeSource)
    {
        org.codehaus.groovy.control.CompilationUnit $r0;
        java.security.CodeSource r2;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        groovy.lang.GroovyClassLoader r3;

        r3 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        r2 := @parameter1: java.security.CodeSource;

        $r0 = new org.codehaus.groovy.control.CompilationUnit;

        specialinvoke $r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(r1, r2, r3);

        return $r0;
    }

    protected groovy.lang.GroovyClassLoader$ClassCollector createCollector(org.codehaus.groovy.control.CompilationUnit, org.codehaus.groovy.control.SourceUnit)
    {
        groovy.lang.GroovyClassLoader$3 $r0;
        org.codehaus.groovy.control.CompilationUnit r5;
        org.codehaus.groovy.control.SourceUnit r6;
        groovy.lang.GroovyClassLoader$InnerLoader r3;
        java.lang.Object $r2;
        groovy.lang.GroovyClassLoader r1;
        groovy.lang.GroovyClassLoader$ClassCollector $r4;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r5 := @parameter0: org.codehaus.groovy.control.CompilationUnit;

        r6 := @parameter1: org.codehaus.groovy.control.SourceUnit;

        $r0 = new groovy.lang.GroovyClassLoader$3;

        specialinvoke $r0.<groovy.lang.GroovyClassLoader$3: void <init>(groovy.lang.GroovyClassLoader)>(r1);

        $r2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r3 = (groovy.lang.GroovyClassLoader$InnerLoader) $r2;

        $r4 = new groovy.lang.GroovyClassLoader$ClassCollector;

        specialinvoke $r4.<groovy.lang.GroovyClassLoader$ClassCollector: void <init>(groovy.lang.GroovyClassLoader$InnerLoader,org.codehaus.groovy.control.CompilationUnit,org.codehaus.groovy.control.SourceUnit)>(r3, r5, r6);

        return $r4;
    }

    public java.lang.Class defineClass(java.lang.String, byte[])
    {
        byte[] r2;
        int $i0;
        java.lang.Class $r3;
        java.lang.String r1;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $i0 = lengthof r2;

        $r3 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>(r1, r2, 0, $i0);

        return $r3;
    }

    public java.lang.Class loadClass(java.lang.String, boolean, boolean) throws java.lang.ClassNotFoundException, org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Class $r2;
        java.lang.String r1;
        groovy.lang.GroovyClassLoader r0;
        boolean z0, z1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String,boolean,boolean,boolean)>(r1, z0, z1, 0);

        return $r2;
    }

    protected java.lang.Class getClassCacheEntry(java.lang.String)
    {
        java.lang.Throwable $r6;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.String r0;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        entermonitor $r2;

     label2:
        $r3 = r1.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (java.lang.Class) $r4;

        exitmonitor $r2;

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void setClassCacheEntry(java.lang.Class)
    {
        java.lang.Throwable $r5;
        java.util.Map $r1, $r3;
        java.lang.Class r2;
        java.lang.String $r4;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void removeClassCacheEntry(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.Map $r1, $r3;
        java.lang.String r2;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        entermonitor $r1;

     label1:
        $r3 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addURL(java.net.URL)
    {
        groovy.lang.GroovyClassLoader r0;
        java.net.URL r1;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.net.URLClassLoader: void addURL(java.net.URL)>(r1);

        return;
    }

    protected boolean isRecompilable(java.lang.Class)
    {
        long $l0;
        org.codehaus.groovy.control.CompilerConfiguration $r7;
        byte $b1;
        java.lang.Boolean $r3, $r4, $r6;
        java.lang.Class r0, $r5, $r8;
        java.lang.ClassLoader $r1;
        groovy.lang.GroovyClassLoader r2;
        boolean $z0, $z1, $z2;

        r2 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r1 != r2 goto label2;

        return 0;

     label2:
        $r3 = r2.<groovy.lang.GroovyClassLoader: java.lang.Boolean recompile>;

        if $r3 != null goto label3;

        $r7 = r2.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $z2 = virtualinvoke $r7.<org.codehaus.groovy.control.CompilerConfiguration: boolean getRecompileGroovySource()>();

        if $z2 != 0 goto label3;

        return 0;

     label3:
        $r4 = r2.<groovy.lang.GroovyClassLoader: java.lang.Boolean recompile>;

        if $r4 == null goto label4;

        $r6 = r2.<groovy.lang.GroovyClassLoader: java.lang.Boolean recompile>;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r5 = <groovy.lang.GroovyClassLoader: java.lang.Class class$groovy$lang$GroovyObject>;

        if $r5 != null goto label5;

        $r8 = staticinvoke <groovy.lang.GroovyClassLoader: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyObject");

        <groovy.lang.GroovyClassLoader: java.lang.Class class$groovy$lang$GroovyObject> = $r8;

        goto label6;

     label5:
        $r8 = <groovy.lang.GroovyClassLoader: java.lang.Class class$groovy$lang$GroovyObject>;

     label6:
        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        $l0 = virtualinvoke r2.<groovy.lang.GroovyClassLoader: long getTimeStamp(java.lang.Class)>(r0);

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public void setShouldRecompile(java.lang.Boolean)
    {
        java.lang.Boolean r1;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.Boolean;

        r0.<groovy.lang.GroovyClassLoader: java.lang.Boolean recompile> = r1;

        return;
    }

    public java.lang.Boolean isShouldRecompile()
    {
        java.lang.Boolean $r1;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.lang.Boolean recompile>;

        return $r1;
    }

    public java.lang.Class loadClass(java.lang.String, boolean, boolean, boolean) throws java.lang.ClassNotFoundException, org.codehaus.groovy.control.CompilationFailedException
    {
        java.net.URL $r8;
        java.util.Map $r5;
        boolean $z0, z1, z2, z3;
        groovy.lang.GroovyResourceLoader $r7;
        groovy.lang.GroovyClassLoader r0;
        java.lang.Throwable $r12, $r13;
        java.lang.AssertionError $r30;
        java.lang.StringBuffer $r17, $r18, $r28;
        int $i0, $i1, $i3;
        java.lang.String r1, $r10, $r11, $r19, $r21;
        java.lang.NoClassDefFoundError $r20;
        java.io.IOException $r14;
        java.lang.SecurityManager $r3;
        java.lang.Class $r2, $r6, $r9, r24, $r26;
        java.lang.ClassNotFoundException $r23, r25, $r27, $r29;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class getClassCacheEntry(java.lang.String)>(r1);

        r24 = $r2;

        $z0 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: boolean isRecompilable(java.lang.Class)>($r2);

        if $z0 != 0 goto label01;

        return $r2;

     label01:
        $r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r3 == null goto label02;

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $i0 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = (int) -1;

        if $i0 == $i3 goto label02;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>($r11);

     label02:
        r25 = null;

     label03:
        $r26 = specialinvoke r0.<java.net.URLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r1, z1);

        if $r2 == $r26 goto label05;

     label04:
        return $r26;

     label05:
        goto label09;

     label06:
        $r23 := @caughtexception;

        r25 = $r23;

        goto label09;

     label07:
        $r20 := @caughtexception;

        $r21 = virtualinvoke $r20.<java.lang.NoClassDefFoundError: java.lang.String getMessage()>();

        $i1 = virtualinvoke $r21.<java.lang.String: int indexOf(java.lang.String)>("wrong name");

        if $i1 <= 0 goto label08;

        $r27 = new java.lang.ClassNotFoundException;

        specialinvoke $r27.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);

        r25 = $r27;

        goto label09;

     label08:
        throw $r20;

     label09:
        if $r2 == null goto label10;

        if z3 == 0 goto label10;

        return $r2;

     label10:
        if z2 == 0 goto label30;

        $r5 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        entermonitor $r5;

     label11:
        $r6 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class getClassCacheEntry(java.lang.String)>(r1);

        if $r6 == $r2 goto label16;

     label12:
        if $r2 != null goto label13;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void removeClassCacheEntry(java.lang.String)>(r1);

        goto label14;

     label13:
        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void setClassCacheEntry(java.lang.Class)>($r2);

     label14:
        exitmonitor $r5;

     label15:
        return $r6;

     label16:
        $r7 = r0.<groovy.lang.GroovyClassLoader: groovy.lang.GroovyResourceLoader resourceLoader>;

        $r8 = interfaceinvoke $r7.<groovy.lang.GroovyResourceLoader: java.net.URL loadGroovySource(java.lang.String)>(r1);

        $r9 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class recompile(java.net.URL,java.lang.String,java.lang.Class)>($r8, r1, $r2);

        r24 = $r9;

     label17:
        if $r9 != null goto label18;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void removeClassCacheEntry(java.lang.String)>(r1);

        goto label26;

     label18:
        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void setClassCacheEntry(java.lang.Class)>($r9);

        goto label26;

     label19:
        $r14 := @caughtexception;

        $r29 = new java.lang.ClassNotFoundException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException while opening groovy source: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r14);

        r25 = $r29;

     label20:
        if $r2 != null goto label21;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void removeClassCacheEntry(java.lang.String)>(r1);

        goto label26;

     label21:
        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void setClassCacheEntry(java.lang.Class)>($r2);

        goto label26;

     label22:
        $r13 := @caughtexception;

     label23:
        if $r2 != null goto label24;

        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void removeClassCacheEntry(java.lang.String)>(r1);

        goto label25;

     label24:
        virtualinvoke r0.<groovy.lang.GroovyClassLoader: void setClassCacheEntry(java.lang.Class)>($r2);

     label25:
        throw $r13;

     label26:
        exitmonitor $r5;

     label27:
        goto label30;

     label28:
        $r12 := @caughtexception;

        exitmonitor $r5;

     label29:
        throw $r12;

     label30:
        if r24 != null goto label32;

        if r25 != null goto label31;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>(boolean)>(1);

        throw $r30;

     label31:
        throw r25;

     label32:
        return r24;

        catch java.lang.ClassNotFoundException from label03 to label04 with label06;
        catch java.lang.NoClassDefFoundError from label03 to label04 with label07;
        catch java.io.IOException from label11 to label12 with label19;
        catch java.io.IOException from label16 to label17 with label19;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label11 to label15 with label28;
        catch java.lang.Throwable from label16 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    protected java.lang.Class recompile(java.net.URL, java.lang.String, java.lang.Class) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        java.net.URL r0;
        java.util.Map $r4;
        java.lang.Class r1, $r6;
        java.lang.String r3;
        groovy.lang.GroovyClassLoader r2;
        java.io.InputStream $r5;
        boolean $z0;

        r2 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.net.URL;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Class;

        if r0 == null goto label3;

        if r1 == null goto label1;

        $z0 = virtualinvoke r2.<groovy.lang.GroovyClassLoader: boolean isSourceNewer(java.net.URL,java.lang.Class)>(r0, r1);

        if $z0 != 0 goto label2;

     label1:
        if r1 != null goto label3;

     label2:
        $r4 = r2.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        $r5 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        $r6 = virtualinvoke r2.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.InputStream,java.lang.String)>($r5, r3);

        return $r6;

     label3:
        return r1;
    }

    protected java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r2;
        java.lang.String r1;
        groovy.lang.GroovyClassLoader r0;
        boolean z0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String,boolean,boolean,boolean)>(r1, 1, 1, z0);

        return $r2;
    }

    protected long getTimeStamp(java.lang.Class)
    {
        java.lang.Class r0;
        long $l0;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.lang.Class;

        $l0 = staticinvoke <org.codehaus.groovy.classgen.Verifier: long getTimestamp(java.lang.Class)>(r0);

        return $l0;
    }

    private java.lang.String decodeFileName(java.lang.String)
    {
        java.io.PrintStream $r2, $r3;
        java.lang.String r0, r5;
        java.io.UnsupportedEncodingException $r1;
        groovy.lang.GroovyClassLoader r4;

        r4 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.lang.String;

        r5 = r0;

     label1:
        r5 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r0, "UTF-8");

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Encounted an invalid encoding scheme when trying to use URLDecoder.decode() inside of the GroovyClassLoader.decodeFileName() method.  Returning the unencoded URL.");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Please note that if you encounter this error and you have spaces in your directory you will run into issues.  Refer to GROOVY-1787 for description of this bug.");

     label4:
        return r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private java.net.URL getSourceFile(java.lang.String)
    {
        java.net.URL $r9;
        java.lang.String[] $r17;
        java.lang.StringBuffer $r3, $r7, $r20;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.String r1, $r2, $r6, $r8, $r10, $r12, $r13, $r18, r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.control.CompilerConfiguration $r5;
        java.io.File $r14, $r16, $r21, $r22;
        groovy.lang.GroovyClassLoader r4;

        r4 := @this: groovy.lang.GroovyClassLoader;

        r1 := @parameter0: java.lang.String;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r3 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = r4.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getDefaultScriptExtension()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = virtualinvoke r4.<groovy.lang.GroovyClassLoader: java.net.URL getResource(java.lang.String)>($r8);

        if $r9 == null goto label5;

        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label5;

        r19 = $r8;

        $i0 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(47);

        $i6 = (int) -1;

        if $i0 == $i6 goto label1;

        $i2 = virtualinvoke $r8.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = $i2 + 1;

        r19 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        $r21 = new java.io.File;

        $r12 = virtualinvoke $r9.<java.net.URL: java.lang.String getFile()>();

        $r13 = specialinvoke r4.<groovy.lang.GroovyClassLoader: java.lang.String decodeFileName(java.lang.String)>($r12);

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r21.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke $r14.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label4;

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, r19);

        $z3 = virtualinvoke $r22.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label4;

        $r16 = virtualinvoke $r22.<java.io.File: java.io.File getParentFile()>();

        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String[] list()>();

        i4 = 0;

     label2:
        $i1 = lengthof $r17;

        if i4 >= $i1 goto label4;

        $r18 = $r17[i4];

        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z4 == 0 goto label3;

        return $r9;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return null;

     label5:
        return $r9;
    }

    protected boolean isSourceNewer(java.net.URL, java.lang.Class) throws java.io.IOException
    {
        java.net.URL r0;
        long $l0, $l2, $l3, l6;
        byte $b4;
        java.net.URLConnection $r2;
        int $i1, $i7;
        java.lang.String $r1, $r7, $r8, $r9;
        boolean $z0, $z1;
        char $c5;
        org.codehaus.groovy.control.CompilerConfiguration $r6;
        java.io.File $r11;
        java.lang.Class r5;
        groovy.lang.GroovyClassLoader r4;
        java.io.InputStream $r3;

        r4 := @this: groovy.lang.GroovyClassLoader;

        r0 := @parameter0: java.net.URL;

        r5 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<java.net.URL: java.lang.String getPath()>();

        $c5 = <java.io.File: char separatorChar>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(char,char)>(47, $c5);

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(char,char)>(124, 58);

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r9);

        l6 = virtualinvoke $r11.<java.io.File: long lastModified()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();

        l6 = virtualinvoke $r2.<java.net.URLConnection: long getLastModified()>();

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label2:
        $l0 = virtualinvoke r4.<groovy.lang.GroovyClassLoader: long getTimeStamp(java.lang.Class)>(r5);

        $r6 = r4.<groovy.lang.GroovyClassLoader: org.codehaus.groovy.control.CompilerConfiguration config>;

        $i1 = virtualinvoke $r6.<org.codehaus.groovy.control.CompilerConfiguration: int getMinimumRecompilationInterval()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        $b4 = $l3 cmp l6;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public void addClasspath(java.lang.String)
    {
        java.lang.String r2;
        groovy.lang.GroovyClassLoader$4 $r0;
        groovy.lang.GroovyClassLoader r1;

        r1 := @this: groovy.lang.GroovyClassLoader;

        r2 := @parameter0: java.lang.String;

        $r0 = new groovy.lang.GroovyClassLoader$4;

        specialinvoke $r0.<groovy.lang.GroovyClassLoader$4: void <init>(groovy.lang.GroovyClassLoader,java.lang.String)>(r1, r2);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        return;
    }

    public java.lang.Class[] getLoadedClasses()
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r5;
        java.util.Collection $r3;
        java.lang.Class[] $r4, $r6, $r7;
        java.util.Map $r1, $r2;
        int $i0;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        entermonitor $r1;

     label1:
        $r2 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $r4 = newarray (java.lang.Class)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.Class[]) $r5;

        $r7 = (java.lang.Class[]) $r6;

        exitmonitor $r1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearCache()
    {
        java.lang.Throwable $r5, $r6;
        java.util.Map $r1, $r2, $r3, $r4;
        groovy.lang.GroovyClassLoader r0;

        r0 := @this: groovy.lang.GroovyClassLoader;

        $r1 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        entermonitor $r1;

     label01:
        $r2 = r0.<groovy.lang.GroovyClassLoader: java.util.Map classCache>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label02:
        goto label05;

     label03:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label04:
        throw $r6;

     label05:
        $r3 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        entermonitor $r3;

     label06:
        $r4 = r0.<groovy.lang.GroovyClassLoader: java.util.Map sourceCache>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        exitmonitor $r3;

     label07:
        goto label10;

     label08:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label09:
        throw $r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    static java.net.URL access$100(groovy.lang.GroovyClassLoader, java.lang.String)
    {
        java.lang.String r1;
        groovy.lang.GroovyClassLoader r0;
        java.net.URL $r2;

        r0 := @parameter0: groovy.lang.GroovyClassLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<groovy.lang.GroovyClassLoader: java.net.URL getSourceFile(java.lang.String)>(r1);

        return $r2;
    }

    static java.lang.Class access$300(groovy.lang.GroovyClassLoader, java.lang.String, byte[], int, int, java.security.CodeSource)
    {
        byte[] r2;
        int i0, i1;
        java.lang.Class $r4;
        java.lang.String r1;
        java.security.CodeSource r3;
        groovy.lang.GroovyClassLoader r0;

        r0 := @parameter0: groovy.lang.GroovyClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: java.security.CodeSource;

        $r4 = virtualinvoke r0.<groovy.lang.GroovyClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, r2, i0, i1, r3);

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <groovy.lang.GroovyClassLoader: int scriptNameCounter> = 1000000;

        return;
    }
}
