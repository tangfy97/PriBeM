public class org.apache.poi.util.POILogFactory extends java.lang.Object
{
    private static java.util.Map _loggers;
    private static org.apache.poi.util.POILogger _nullLogger;
    private static java.lang.String _loggerClassName;

    private void <init>()
    {
        org.apache.poi.util.POILogFactory r0;

        r0 := @this: org.apache.poi.util.POILogFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.poi.util.POILogger getLogger(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.poi.util.POILogger $r2;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.String)>($r1);

        return $r2;
    }

    public static org.apache.poi.util.POILogger getLogger(java.lang.String)
    {
        java.util.Map $r2, $r6, $r7;
        java.lang.String $r0, r1, $r3, $r10, $r11, $r14, $r17, $r20;
        boolean $z0, $z1;
        org.apache.poi.util.POILogger $r9, $r12, $r18, r21;
        java.lang.Exception $r15, $r16;
        java.lang.Class $r4, $r13, $r19;
        java.lang.Object $r5, $r8;

        r1 := @parameter0: java.lang.String;

        $r0 = <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName>;

        if $r0 != null goto label05;

     label01:
        $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.apache.poi.util.POILogger");

        <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName> = $r10;

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

     label04:
        $r11 = <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName>;

        if $r11 != null goto label05;

        $r12 = <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger _nullLogger>;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName> = $r14;

     label05:
        $r17 = <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName>;

        $r18 = <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger _nullLogger>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 == 0 goto label06;

        $r9 = <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger _nullLogger>;

        return $r9;

     label06:
        $r2 = <org.apache.poi.util.POILogFactory: java.util.Map _loggers>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label07;

        $r7 = <org.apache.poi.util.POILogFactory: java.util.Map _loggers>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r21 = (org.apache.poi.util.POILogger) $r8;

        goto label11;

     label07:
        $r3 = <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName>;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        r21 = (org.apache.poi.util.POILogger) $r5;

        virtualinvoke r21.<org.apache.poi.util.POILogger: void initialize(java.lang.String)>(r1);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        r21 = <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger _nullLogger>;

     label10:
        $r6 = <org.apache.poi.util.POILogFactory: java.util.Map _loggers>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r21);

     label11:
        return r21;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        org.apache.poi.util.NullLogger $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.poi.util.POILogFactory: java.util.Map _loggers> = $r0;

        $r1 = new org.apache.poi.util.NullLogger;

        specialinvoke $r1.<org.apache.poi.util.NullLogger: void <init>()>();

        <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger _nullLogger> = $r1;

        <org.apache.poi.util.POILogFactory: java.lang.String _loggerClassName> = null;

        return;
    }
}
