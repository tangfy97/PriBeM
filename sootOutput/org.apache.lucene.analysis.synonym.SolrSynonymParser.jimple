public class org.apache.lucene.analysis.synonym.SolrSynonymParser extends org.apache.lucene.analysis.synonym.SynonymMap$Builder
{
    private final boolean expand;
    private final org.apache.lucene.analysis.Analyzer analyzer;

    public void <init>(boolean, boolean, org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.analysis.Analyzer r1;
        org.apache.lucene.analysis.synonym.SolrSynonymParser r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.analysis.synonym.SolrSynonymParser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.analysis.synonym.SynonymMap$Builder: void <init>(boolean)>(z0);

        r0.<org.apache.lucene.analysis.synonym.SolrSynonymParser: boolean expand> = z1;

        r0.<org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        return;
    }

    public void add(java.io.Reader) throws java.io.IOException, java.text.ParseException
    {
        java.lang.Throwable $r3;
        java.io.LineNumberReader $r0;
        java.io.Reader r1;
        java.lang.IllegalArgumentException $r4;
        int $i0;
        org.apache.lucene.analysis.synonym.SolrSynonymParser r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        java.text.ParseException $r5;

        r2 := @this: org.apache.lucene.analysis.synonym.SolrSynonymParser;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.LineNumberReader;

        specialinvoke $r0.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r1);

     label1:
        specialinvoke r2.<org.apache.lucene.analysis.synonym.SolrSynonymParser: void addInternal(java.io.BufferedReader)>($r0);

     label2:
        virtualinvoke $r0.<java.io.LineNumberReader: void close()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.text.ParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid synonym rule at line ");

        $i0 = virtualinvoke $r0.<java.io.LineNumberReader: int getLineNumber()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r9, 0);

        virtualinvoke $r5.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke $r0.<java.io.LineNumberReader: void close()>();

        throw $r3;

     label6:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    private void addInternal(java.io.BufferedReader) throws java.io.IOException
    {
        boolean $z0;
        java.lang.String[] $r1, $r2, $r14, $r16;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, i16, $i17;
        org.apache.lucene.analysis.synonym.SolrSynonymParser r3;
        java.lang.String $r7, $r9, $r10, $r13, $r15, $r17, $r19, $r20, $r23, $r25, $r26, $r30;
        org.apache.lucene.util.CharsRef[] r31, r32;
        org.apache.lucene.analysis.Analyzer $r8, $r18, $r24;
        char $c1;
        java.lang.IllegalArgumentException $r33;
        org.apache.lucene.util.CharsRef $r4, $r5, $r6, $r12, $r22, $r28, $r34, $r35, $r36;
        java.io.BufferedReader r0;

        r3 := @this: org.apache.lucene.analysis.synonym.SolrSynonymParser;

        r0 := @parameter0: java.io.BufferedReader;

     label01:
        $r30 = virtualinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r30 == null goto label17;

        $i0 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i0 == 0 goto label01;

        $c1 = virtualinvoke $r30.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c1;

        if $i17 != 35 goto label02;

        goto label01;

     label02:
        $r1 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String[] split(java.lang.String,java.lang.String)>($r30, "=>");

        $i2 = lengthof $r1;

        if $i2 <= 1 goto label08;

        $i6 = lengthof $r1;

        if $i6 == 2 goto label03;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("more than one explicit mapping specified on the same line");

        throw $r33;

     label03:
        $r13 = $r1[0];

        $r14 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String[] split(java.lang.String,java.lang.String)>($r13, ",");

        $i7 = lengthof $r14;

        r31 = newarray (org.apache.lucene.util.CharsRef)[$i7];

        i11 = 0;

     label04:
        $i8 = lengthof r31;

        if i11 >= $i8 goto label05;

        $r24 = r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.analysis.Analyzer analyzer>;

        $r23 = $r14[i11];

        $r25 = specialinvoke r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String unescape(java.lang.String)>($r23);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();

        $r34 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r34.<org.apache.lucene.util.CharsRef: void <init>()>();

        $r28 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.util.CharsRef analyze(org.apache.lucene.analysis.Analyzer,java.lang.String,org.apache.lucene.util.CharsRef)>($r24, $r26, $r34);

        r31[i11] = $r28;

        i11 = i11 + 1;

        goto label04;

     label05:
        $r15 = $r1[1];

        $r16 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String[] split(java.lang.String,java.lang.String)>($r15, ",");

        $i9 = lengthof $r16;

        r32 = newarray (org.apache.lucene.util.CharsRef)[$i9];

        i12 = 0;

     label06:
        $i10 = lengthof r32;

        if i12 >= $i10 goto label07;

        $r18 = r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.analysis.Analyzer analyzer>;

        $r17 = $r16[i12];

        $r19 = specialinvoke r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String unescape(java.lang.String)>($r17);

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $r35 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r35.<org.apache.lucene.util.CharsRef: void <init>()>();

        $r22 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.util.CharsRef analyze(org.apache.lucene.analysis.Analyzer,java.lang.String,org.apache.lucene.util.CharsRef)>($r18, $r20, $r35);

        r32[i12] = $r22;

        i12 = i12 + 1;

        goto label06;

     label07:
        goto label12;

     label08:
        $r2 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String[] split(java.lang.String,java.lang.String)>($r30, ",");

        $i3 = lengthof $r2;

        r31 = newarray (org.apache.lucene.util.CharsRef)[$i3];

        i13 = 0;

     label09:
        $i4 = lengthof r31;

        if i13 >= $i4 goto label10;

        $r8 = r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.analysis.Analyzer analyzer>;

        $r7 = $r2[i13];

        $r9 = specialinvoke r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: java.lang.String unescape(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r36 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r36.<org.apache.lucene.util.CharsRef: void <init>()>();

        $r12 = staticinvoke <org.apache.lucene.analysis.synonym.SolrSynonymParser: org.apache.lucene.util.CharsRef analyze(org.apache.lucene.analysis.Analyzer,java.lang.String,org.apache.lucene.util.CharsRef)>($r8, $r10, $r36);

        r31[i13] = $r12;

        i13 = i13 + 1;

        goto label09;

     label10:
        $z0 = r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: boolean expand>;

        if $z0 == 0 goto label11;

        r32 = r31;

        goto label12;

     label11:
        r32 = newarray (org.apache.lucene.util.CharsRef)[1];

        $r4 = r31[0];

        r32[0] = $r4;

     label12:
        i14 = 0;

     label13:
        $i15 = lengthof r31;

        if i14 >= $i15 goto label16;

        i16 = 0;

     label14:
        $i5 = lengthof r32;

        if i16 >= $i5 goto label15;

        $r6 = r31[i14];

        $r5 = r32[i16];

        virtualinvoke r3.<org.apache.lucene.analysis.synonym.SolrSynonymParser: void add(org.apache.lucene.util.CharsRef,org.apache.lucene.util.CharsRef,boolean)>($r6, $r5, 0);

        i16 = i16 + 1;

        goto label14;

     label15:
        i14 = i14 + 1;

        goto label13;

     label16:
        goto label01;

     label17:
        return;
    }

    private static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.String[] $r3, $r5;
        java.util.ArrayList $r11;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, i8, $i10;
        java.lang.String r2, $r6, r7, $r8;
        boolean $z0;
        char $c4, c9;
        java.lang.StringBuilder r10, $r12, $r13;

        r2 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(2);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r10 = $r12;

        i8 = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

     label1:
        if i8 >= $i0 goto label6;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String,int)>(r7, i8);

        if $z0 == 0 goto label3;

        $i6 = virtualinvoke r10.<java.lang.StringBuilder: int length()>();

        if $i6 <= 0 goto label2;

        $r8 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r10 = $r13;

     label2:
        $i7 = virtualinvoke r7.<java.lang.String: int length()>();

        i8 = i8 + $i7;

        goto label1;

     label3:
        $i3 = i8;

        i8 = i8 + 1;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i3);

        c9 = $c4;

        $i10 = (int) $c4;

        if $i10 != 92 goto label5;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        if i8 < $i0 goto label4;

        goto label6;

     label4:
        $i5 = i8;

        i8 = i8 + 1;

        c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i5);

     label5:
        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c9);

        goto label1;

     label6:
        $i1 = virtualinvoke r10.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label7;

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label7:
        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.lang.String)[$i2];

        $r4 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private java.lang.String unescape(java.lang.String)
    {
        char $c2, $c5;
        int $i0, $i1, $i3, $i4, i6, $i7;
        org.apache.lucene.analysis.synonym.SolrSynonymParser r3;
        java.lang.StringBuilder $r4;
        java.lang.String r0, $r2;

        r3 := @this: org.apache.lucene.analysis.synonym.SolrSynonymParser;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\\");

        if $i0 < 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c2;

        if $i7 != 92 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if i6 >= $i4 goto label2;

        i6 = i6 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label3;

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label5:
        return r0;
    }
}
