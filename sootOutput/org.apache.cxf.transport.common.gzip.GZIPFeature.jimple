public class org.apache.cxf.transport.common.gzip.GZIPFeature extends org.apache.cxf.feature.AbstractFeature
{
    private static final org.apache.cxf.transport.common.gzip.GZIPInInterceptor IN;
    private static final org.apache.cxf.transport.common.gzip.GZIPOutInterceptor OUT;
    int threshold;
    boolean force;

    public void <init>()
    {
        int $i1;
        org.apache.cxf.transport.common.gzip.GZIPFeature r0;

        r0 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.cxf.transport.common.gzip.GZIPFeature: int threshold> = $i1;

        return;
    }

    protected void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r13;
        int $i0, $i1, $i3;
        org.apache.cxf.transport.common.gzip.GZIPOutInterceptor $r10, $r12, $r14;
        org.apache.cxf.transport.common.gzip.GZIPFeature r3;
        boolean $z0, $z1;
        java.util.List $r1, $r5, $r6, $r7, $r8, $r9, $r11;
        org.apache.cxf.interceptor.InterceptorProvider r0;
        org.apache.cxf.transport.common.gzip.GZIPInInterceptor $r2;

        r3 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        r0 := @parameter0: org.apache.cxf.interceptor.InterceptorProvider;

        r13 := @parameter1: org.apache.cxf.Bus;

        $r1 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInInterceptors()>();

        $r2 = <org.apache.cxf.transport.common.gzip.GZIPFeature: org.apache.cxf.transport.common.gzip.GZIPInInterceptor IN>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: int threshold>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $z1 = r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: boolean force>;

        if $z1 != 0 goto label1;

        $r9 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        $r10 = <org.apache.cxf.transport.common.gzip.GZIPFeature: org.apache.cxf.transport.common.gzip.GZIPOutInterceptor OUT>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        $r12 = <org.apache.cxf.transport.common.gzip.GZIPFeature: org.apache.cxf.transport.common.gzip.GZIPOutInterceptor OUT>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label2;

     label1:
        $r14 = new org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;

        specialinvoke $r14.<org.apache.cxf.transport.common.gzip.GZIPOutInterceptor: void <init>()>();

        $i1 = r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: int threshold>;

        virtualinvoke $r14.<org.apache.cxf.transport.common.gzip.GZIPOutInterceptor: void setThreshold(int)>($i1);

        $z0 = r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: boolean force>;

        virtualinvoke $r14.<org.apache.cxf.transport.common.gzip.GZIPOutInterceptor: void setForce(boolean)>($z0);

        $r5 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        specialinvoke r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: void remove(java.util.List)>($r5);

        $r6 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        specialinvoke r3.<org.apache.cxf.transport.common.gzip.GZIPFeature: void remove(java.util.List)>($r6);

        $r7 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutInterceptors()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r8 = interfaceinvoke r0.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getOutFaultInterceptors()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r14);

     label2:
        return;
    }

    private void remove(java.util.List)
    {
        java.util.List r0;
        int i0, $i2;
        java.lang.Object $r1;
        org.apache.cxf.transport.common.gzip.GZIPFeature r2;
        boolean $z0;

        r2 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        r0 := @parameter0: java.util.List;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i0 <= 0 goto label2;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = $r1 instanceof org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>(i0);

        goto label1;

     label2:
        return;
    }

    public void setThreshold(int)
    {
        int i0;
        org.apache.cxf.transport.common.gzip.GZIPFeature r0;

        r0 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.transport.common.gzip.GZIPFeature: int threshold> = i0;

        return;
    }

    public int getThreshold()
    {
        int $i0;
        org.apache.cxf.transport.common.gzip.GZIPFeature r0;

        r0 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        $i0 = r0.<org.apache.cxf.transport.common.gzip.GZIPFeature: int threshold>;

        return $i0;
    }

    public void setForce(boolean)
    {
        org.apache.cxf.transport.common.gzip.GZIPFeature r0;
        boolean z0;

        r0 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.transport.common.gzip.GZIPFeature: boolean force> = z0;

        return;
    }

    public boolean getForce()
    {
        org.apache.cxf.transport.common.gzip.GZIPFeature r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.common.gzip.GZIPFeature;

        $z0 = r0.<org.apache.cxf.transport.common.gzip.GZIPFeature: boolean force>;

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.cxf.transport.common.gzip.GZIPInInterceptor $r0;
        org.apache.cxf.transport.common.gzip.GZIPOutInterceptor $r1;

        $r0 = new org.apache.cxf.transport.common.gzip.GZIPInInterceptor;

        specialinvoke $r0.<org.apache.cxf.transport.common.gzip.GZIPInInterceptor: void <init>()>();

        <org.apache.cxf.transport.common.gzip.GZIPFeature: org.apache.cxf.transport.common.gzip.GZIPInInterceptor IN> = $r0;

        $r1 = new org.apache.cxf.transport.common.gzip.GZIPOutInterceptor;

        specialinvoke $r1.<org.apache.cxf.transport.common.gzip.GZIPOutInterceptor: void <init>()>();

        <org.apache.cxf.transport.common.gzip.GZIPFeature: org.apache.cxf.transport.common.gzip.GZIPOutInterceptor OUT> = $r1;

        return;
    }
}
