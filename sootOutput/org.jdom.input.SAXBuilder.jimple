public class org.jdom.input.SAXBuilder extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private static final java.lang.String DEFAULT_SAX_DRIVER;
    private boolean validate;
    private boolean expand;
    private java.lang.String saxDriverClass;
    private org.xml.sax.ErrorHandler saxErrorHandler;
    private org.xml.sax.EntityResolver saxEntityResolver;
    private org.xml.sax.DTDHandler saxDTDHandler;
    private org.xml.sax.XMLFilter saxXMLFilter;
    private org.jdom.JDOMFactory factory;
    private boolean ignoringWhite;
    private java.util.HashMap features;
    private java.util.HashMap properties;
    private boolean reuseParser;
    private org.xml.sax.XMLReader saxParser;
    static java.lang.Class class$java$util$Map;

    public void <init>()
    {
        org.jdom.input.SAXBuilder r0;

        r0 := @this: org.jdom.input.SAXBuilder;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>(0);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jdom.input.SAXBuilder r0;
        java.lang.String r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        org.jdom.input.SAXBuilder r0;
        org.jdom.DefaultJDOMFactory $r1;
        java.util.HashMap $r2, $r3;
        java.lang.String r4;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        r4 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.input.SAXBuilder: boolean expand> = 1;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter> = null;

        $r1 = new org.jdom.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom.input.SAXBuilder: org.jdom.JDOMFactory factory> = $r1;

        r0.<org.jdom.input.SAXBuilder: boolean ignoringWhite> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom.input.SAXBuilder: java.util.HashMap features> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties> = $r3;

        r0.<org.jdom.input.SAXBuilder: boolean reuseParser> = 1;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader saxParser> = null;

        r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass> = r4;

        r0.<org.jdom.input.SAXBuilder: boolean validate> = z0;

        return;
    }

    public void <init>(boolean)
    {
        org.jdom.input.SAXBuilder r0;
        org.jdom.DefaultJDOMFactory $r1;
        java.util.HashMap $r2, $r3;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdom.input.SAXBuilder: boolean expand> = 1;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler> = null;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter> = null;

        $r1 = new org.jdom.DefaultJDOMFactory;

        specialinvoke $r1.<org.jdom.DefaultJDOMFactory: void <init>()>();

        r0.<org.jdom.input.SAXBuilder: org.jdom.JDOMFactory factory> = $r1;

        r0.<org.jdom.input.SAXBuilder: boolean ignoringWhite> = 0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom.input.SAXBuilder: java.util.HashMap features> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(5);

        r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties> = $r3;

        r0.<org.jdom.input.SAXBuilder: boolean reuseParser> = 1;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader saxParser> = null;

        r0.<org.jdom.input.SAXBuilder: boolean validate> = z0;

        return;
    }

    public org.jdom.Document build(java.io.File) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.input.SAXBuilder r2;
        org.jdom.Document $r3;
        org.jdom.JDOMException $r5;
        java.net.MalformedURLException $r4;
        java.net.URL $r1;
        java.io.File r0;

        r2 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: java.io.File;

     label1:
        $r1 = staticinvoke <org.jdom.input.SAXBuilder: java.net.URL fileToURL(java.io.File)>(r0);

        $r3 = virtualinvoke r2.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.net.URL)>($r1);

        return $r3;

     label2:
        $r4 := @caughtexception;

        $r5 = new org.jdom.JDOMException;

        specialinvoke $r5.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Error in building", $r4);

        throw $r5;

        catch java.net.MalformedURLException from label1 to label2 with label2;
    }

    public org.jdom.Document build(java.io.InputStream) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.InputSource $r1;
        org.jdom.Document $r3;
        java.io.InputStream r2;

        r0 := @this: org.jdom.input.SAXBuilder;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r2);

        $r3 = virtualinvoke r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public org.jdom.Document build(java.io.InputStream, java.lang.String) throws org.jdom.JDOMException, java.io.IOException
    {
        org.xml.sax.InputSource $r0;
        org.jdom.input.SAXBuilder r3;
        org.jdom.Document $r4;
        java.lang.String r2;
        java.io.InputStream r1;

        r3 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r0);

        return $r4;
    }

    public org.jdom.Document build(java.io.Reader) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.InputSource $r1;
        org.jdom.Document $r3;
        java.io.Reader r2;

        r0 := @this: org.jdom.input.SAXBuilder;

        r2 := @parameter0: java.io.Reader;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r2);

        $r3 = virtualinvoke r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public org.jdom.Document build(java.io.Reader, java.lang.String) throws org.jdom.JDOMException, java.io.IOException
    {
        org.xml.sax.InputSource $r0;
        org.jdom.input.SAXBuilder r3;
        org.jdom.Document $r4;
        java.io.Reader r1;
        java.lang.String r2;

        r3 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r1);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r2);

        $r4 = virtualinvoke r3.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r0);

        return $r4;
    }

    public org.jdom.Document build(java.lang.String) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.InputSource $r1;
        org.jdom.Document $r3;
        java.lang.String r2;

        r0 := @this: org.jdom.input.SAXBuilder;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public org.jdom.Document build(java.net.URL) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.input.SAXBuilder r2;
        org.xml.sax.InputSource $r3;
        org.jdom.Document $r4;
        java.net.URL r0;
        java.lang.String $r1;

        r2 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String toExternalForm()>();

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke r2.<org.jdom.input.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>($r3);

        return $r4;
    }

    public org.jdom.Document build(org.xml.sax.InputSource) throws org.jdom.JDOMException, java.io.IOException
    {
        org.jdom.Document $r14, $r16, $r31, r32;
        boolean $z0, $z1, $z2;
        org.xml.sax.SAXException $r8;
        org.jdom.input.JDOMParseException $r9, $r18, $r22;
        org.jdom.input.SAXHandler $r1, r28;
        java.lang.Throwable $r7;
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.XMLFilter $r4, r30;
        org.xml.sax.XMLReader $r3, $r5, $r6, r29;
        java.lang.StringBuffer $r10, $r12, $r19, $r20, $r23, $r24, $r25, $r26;
        int $i0, $i1;
        java.lang.String $r11, $r13, $r17, $r21, $r27;
        org.xml.sax.InputSource r2;
        org.xml.sax.SAXParseException $r15;

        r0 := @this: org.jdom.input.SAXBuilder;

        r2 := @parameter0: org.xml.sax.InputSource;

        r28 = null;

     label01:
        $r1 = virtualinvoke r0.<org.jdom.input.SAXBuilder: org.jdom.input.SAXHandler createContentHandler()>();

        r28 = $r1;

        virtualinvoke r0.<org.jdom.input.SAXBuilder: void configureContentHandler(org.jdom.input.SAXHandler)>($r1);

        r29 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader saxParser>;

        if r29 != null goto label05;

        $r3 = virtualinvoke r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader createParser()>();

        r29 = $r3;

        $r4 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        if $r4 == null goto label04;

        r30 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        goto label03;

     label02:
        $r6 = interfaceinvoke r30.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        r30 = (org.xml.sax.XMLFilter) $r6;

     label03:
        $r5 = interfaceinvoke r30.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $z1 = $r5 instanceof org.xml.sax.XMLFilter;

        if $z1 != 0 goto label02;

        interfaceinvoke r30.<org.xml.sax.XMLFilter: void setParent(org.xml.sax.XMLReader)>($r3);

        r29 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

     label04:
        virtualinvoke r0.<org.jdom.input.SAXBuilder: void configureParser(org.xml.sax.XMLReader,org.jdom.input.SAXHandler)>(r29, $r1);

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean reuseParser>;

        if $z0 != 1 goto label06;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader saxParser> = r29;

        goto label06;

     label05:
        virtualinvoke r0.<org.jdom.input.SAXBuilder: void configureParser(org.xml.sax.XMLReader,org.jdom.input.SAXHandler)>(r29, $r1);

     label06:
        interfaceinvoke r29.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r2);

        $r31 = virtualinvoke $r1.<org.jdom.input.SAXHandler: org.jdom.Document getDocument()>();

        goto label14;

     label07:
        return $r31;

     label08:
        $r15 := @caughtexception;

        $r16 = virtualinvoke r28.<org.jdom.input.SAXHandler: org.jdom.Document getDocument()>();

        r32 = $r16;

        $z2 = virtualinvoke $r16.<org.jdom.Document: boolean hasRootElement()>();

        if $z2 != 0 goto label09;

        r32 = null;

     label09:
        $r17 = virtualinvoke $r15.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        if $r17 == null goto label10;

        $r22 = new org.jdom.input.JDOMParseException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>(java.lang.String)>("Error on line ");

        $i1 = virtualinvoke $r15.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of document ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<org.jdom.input.JDOMParseException: void <init>(java.lang.String,java.lang.Throwable,org.jdom.Document)>($r27, $r15, r32);

        throw $r22;

     label10:
        $r18 = new org.jdom.input.JDOMParseException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(java.lang.String)>("Error on line ");

        $i0 = virtualinvoke $r15.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<org.jdom.input.JDOMParseException: void <init>(java.lang.String,java.lang.Throwable,org.jdom.Document)>($r21, $r15, r32);

        throw $r18;

     label11:
        $r8 := @caughtexception;

        $r9 = new org.jdom.input.JDOMParseException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>("Error in building: ");

        $r11 = virtualinvoke $r8.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke r28.<org.jdom.input.SAXHandler: org.jdom.Document getDocument()>();

        specialinvoke $r9.<org.jdom.input.JDOMParseException: void <init>(java.lang.String,java.lang.Throwable,org.jdom.Document)>($r13, $r8, $r14);

        throw $r9;

     label12:
        $r7 := @caughtexception;

        goto label15;

     label13:
        throw $r7;

     label14:
        goto label07;

     label15:
        goto label13;

        catch org.xml.sax.SAXParseException from label01 to label08 with label08;
        catch org.xml.sax.SAXException from label01 to label08 with label11;
        catch java.lang.Throwable from label01 to label12 with label12;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    protected void configureContentHandler(org.jdom.input.SAXHandler)
    {
        org.jdom.input.SAXBuilder r1;
        org.jdom.input.SAXHandler r0;
        boolean $z0, $z1;

        r1 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: org.jdom.input.SAXHandler;

        $z0 = r1.<org.jdom.input.SAXBuilder: boolean expand>;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void setExpandEntities(boolean)>($z0);

        $z1 = r1.<org.jdom.input.SAXBuilder: boolean ignoringWhite>;

        virtualinvoke r0.<org.jdom.input.SAXHandler: void setIgnoringElementContentWhitespace(boolean)>($z1);

        return;
    }

    protected void configureParser(org.xml.sax.XMLReader, org.jdom.input.SAXHandler) throws org.jdom.JDOMException
    {
        org.jdom.input.SAXBuilder r2;
        org.xml.sax.SAXNotSupportedException $r11, $r13, $r15;
        org.xml.sax.SAXNotRecognizedException $r10, $r12, $r14;
        org.xml.sax.XMLReader r0;
        org.xml.sax.ErrorHandler $r5, $r7;
        org.xml.sax.DTDHandler $r4, $r8;
        org.xml.sax.EntityResolver $r3, $r9;
        boolean z0, $z1;
        org.jdom.input.BuilderErrorHandler $r6;
        org.jdom.input.SAXHandler r1;

        r2 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: org.xml.sax.XMLReader;

        r1 := @parameter1: org.jdom.input.SAXHandler;

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        $r3 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        if $r3 == null goto label01;

        $r9 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>($r9);

     label01:
        $r4 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        if $r4 == null goto label02;

        $r8 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r8);

        goto label03;

     label02:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r1);

     label03:
        $r5 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        if $r5 == null goto label04;

        $r7 = r2.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r7);

        goto label05;

     label04:
        $r6 = new org.jdom.input.BuilderErrorHandler;

        specialinvoke $r6.<org.jdom.input.BuilderErrorHandler: void <init>()>();

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r6);

     label05:
        z0 = 0;

     label06:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/handlers/LexicalHandler", r1);

        z0 = 1;

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        goto label10;

     label09:
        $r14 := @caughtexception;

     label10:
        if z0 != 0 goto label15;

     label11:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r1);

     label12:
        goto label15;

     label13:
        $r13 := @caughtexception;

        goto label15;

     label14:
        $r12 := @caughtexception;

        goto label15;

     label15:
        $z1 = r2.<org.jdom.input.SAXBuilder: boolean expand>;

        if $z1 != 0 goto label20;

     label16:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/declaration-handler", r1);

     label17:
        goto label20;

     label18:
        $r11 := @caughtexception;

        goto label20;

     label19:
        $r10 := @caughtexception;

        goto label20;

     label20:
        return;

        catch org.xml.sax.SAXNotSupportedException from label06 to label07 with label08;
        catch org.xml.sax.SAXNotRecognizedException from label06 to label07 with label09;
        catch org.xml.sax.SAXNotSupportedException from label11 to label12 with label13;
        catch org.xml.sax.SAXNotRecognizedException from label11 to label12 with label14;
        catch org.xml.sax.SAXNotSupportedException from label16 to label17 with label18;
        catch org.xml.sax.SAXNotRecognizedException from label16 to label17 with label19;
    }

    protected org.jdom.input.SAXHandler createContentHandler()
    {
        org.jdom.input.SAXHandler $r0;
        org.jdom.input.SAXBuilder r1;
        org.jdom.JDOMFactory $r2;

        r1 := @this: org.jdom.input.SAXBuilder;

        $r0 = new org.jdom.input.SAXHandler;

        $r2 = r1.<org.jdom.input.SAXBuilder: org.jdom.JDOMFactory factory>;

        specialinvoke $r0.<org.jdom.input.SAXHandler: void <init>(org.jdom.JDOMFactory)>($r2);

        return $r0;
    }

    protected org.xml.sax.XMLReader createParser() throws org.jdom.JDOMException
    {
        org.jdom.JDOMException $r20, $r23, $r25;
        java.lang.reflect.Method $r7;
        boolean $z0;
        java.lang.Exception $r21;
        org.xml.sax.SAXException $r19, $r24;
        org.jdom.input.SAXBuilder r0;
        java.lang.Object[] $r8;
        java.util.HashMap $r10, $r11;
        org.xml.sax.XMLReader $r13, $r16, $r18, r30;
        java.lang.StringBuffer $r26, $r28;
        java.lang.Boolean $r9;
        java.lang.String $r1, $r15, $r17, $r27, $r29;
        java.lang.NoClassDefFoundError $r22;
        java.lang.Class[] $r3;
        java.lang.Class $r2, $r4, $r5, $r6, $r14, $r31, $r32;
        java.lang.Object $r12;

        r0 := @this: org.jdom.input.SAXBuilder;

        r30 = null;

        $r1 = r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass>;

        if $r1 == null goto label04;

     label01:
        $r17 = r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass>;

        $r18 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>($r17);

        r30 = $r18;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void setFeaturesAndProperties(org.xml.sax.XMLReader,boolean)>($r18, 1);

     label02:
        goto label13;

     label03:
        $r24 := @caughtexception;

        $r25 = new org.jdom.JDOMException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>(java.lang.String)>("Could not load ");

        $r27 = r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r24);

        throw $r25;

     label04:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.jdom.input.JAXPParserFactory");

        $r3 = newarray (java.lang.Class)[3];

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r5 = <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map>;

        if $r5 == null goto label05;

        $r31 = <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map>;

        goto label06;

     label05:
        $r31 = staticinvoke <org.jdom.input.SAXBuilder: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map> = $r31;

     label06:
        $r3[1] = $r31;

        $r6 = <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map>;

        if $r6 == null goto label07;

        $r32 = <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map>;

        goto label08;

     label07:
        $r32 = staticinvoke <org.jdom.input.SAXBuilder: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <org.jdom.input.SAXBuilder: java.lang.Class class$java$util$Map> = $r32;

     label08:
        $r3[2] = $r32;

        $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createParser", $r3);

        $r8 = newarray (java.lang.Object)[3];

        $r9 = new java.lang.Boolean;

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean validate>;

        specialinvoke $r9.<java.lang.Boolean: void <init>(boolean)>($z0);

        $r8[0] = $r9;

        $r10 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap features>;

        $r8[1] = $r10;

        $r11 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties>;

        $r8[2] = $r11;

        $r12 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r8);

        $r16 = (org.xml.sax.XMLReader) $r12;

        r30 = $r16;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void setFeaturesAndProperties(org.xml.sax.XMLReader,boolean)>($r16, 0);

     label09:
        goto label13;

     label10:
        $r23 := @caughtexception;

        throw $r23;

     label11:
        $r22 := @caughtexception;

        goto label13;

     label12:
        $r21 := @caughtexception;

        goto label13;

     label13:
        if r30 != null goto label17;

     label14:
        $r13 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>("org.apache.xerces.parsers.SAXParser");

        r30 = $r13;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass> = $r15;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void setFeaturesAndProperties(org.xml.sax.XMLReader,boolean)>($r13, 1);

     label15:
        goto label17;

     label16:
        $r19 := @caughtexception;

        $r20 = new org.jdom.JDOMException;

        specialinvoke $r20.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Could not load default SAX parser: org.apache.xerces.parsers.SAXParser", $r19);

        throw $r20;

     label17:
        return r30;

        catch org.xml.sax.SAXException from label01 to label02 with label03;
        catch org.jdom.JDOMException from label04 to label09 with label10;
        catch java.lang.NoClassDefFoundError from label04 to label09 with label11;
        catch java.lang.Exception from label04 to label09 with label12;
        catch org.xml.sax.SAXException from label14 to label15 with label16;
    }

    private static java.net.URL fileToURL(java.io.File) throws java.net.MalformedURLException
    {
        java.net.URL $r7;
        java.lang.StringBuffer $r6;
        int $i1, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r2, r3, $r5;
        boolean $z0, $z1, $z2;
        char $c0, $c2, $c3;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        r3 = $r2;

        $c0 = <java.io.File: char separatorChar>;

        $i5 = (int) $c0;

        if $i5 == 47 goto label01;

        $c3 = <java.io.File: char separatorChar>;

        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>($c3, 47);

     label01:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label02;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

     label02:
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        i4 = 0;

        goto label15;

     label03:
        $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c2;

        if $i6 != 32 goto label04;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%20");

        goto label14;

     label04:
        $i7 = (int) $c2;

        if $i7 != 35 goto label05;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%23");

        goto label14;

     label05:
        $i8 = (int) $c2;

        if $i8 != 37 goto label06;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%25");

        goto label14;

     label06:
        $i9 = (int) $c2;

        if $i9 != 38 goto label07;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%26");

        goto label14;

     label07:
        $i10 = (int) $c2;

        if $i10 != 59 goto label08;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3B");

        goto label14;

     label08:
        $i11 = (int) $c2;

        if $i11 != 60 goto label09;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3C");

        goto label14;

     label09:
        $i12 = (int) $c2;

        if $i12 != 61 goto label10;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3D");

        goto label14;

     label10:
        $i13 = (int) $c2;

        if $i13 != 62 goto label11;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3E");

        goto label14;

     label11:
        $i14 = (int) $c2;

        if $i14 != 63 goto label12;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3F");

        goto label14;

     label12:
        $i15 = (int) $c2;

        if $i15 != 126 goto label13;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%7E");

        goto label14;

     label13:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label14:
        i4 = i4 + 1;

     label15:
        if i4 < $i1 goto label03;

        $z1 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label16;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label16;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

     label16:
        $r7 = new java.net.URL;

        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", $r5);

        return $r7;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.DTDHandler $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler>;

        return $r1;
    }

    public java.lang.String getDriverClass()
    {
        org.jdom.input.SAXBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: java.lang.String saxDriverClass>;

        return $r1;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver>;

        return $r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler>;

        return $r1;
    }

    public boolean getExpandEntities()
    {
        org.jdom.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean expand>;

        return $z0;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        org.jdom.input.SAXBuilder r0;
        org.jdom.JDOMFactory $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: org.jdom.JDOMFactory factory>;

        return $r1;
    }

    public boolean getIgnoringElementContentWhitespace()
    {
        org.jdom.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean ignoringWhite>;

        return $z0;
    }

    public boolean getReuseParser()
    {
        org.jdom.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean reuseParser>;

        return $z0;
    }

    public boolean getValidation()
    {
        org.jdom.input.SAXBuilder r0;
        boolean $z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        $z0 = r0.<org.jdom.input.SAXBuilder: boolean validate>;

        return $z0;
    }

    public org.xml.sax.XMLFilter getXMLFilter()
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.XMLFilter $r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        $r1 = r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter>;

        return $r1;
    }

    private void internalSetFeature(org.xml.sax.XMLReader, java.lang.String, boolean, java.lang.String) throws org.jdom.JDOMException
    {
        org.jdom.input.SAXBuilder r21;
        org.xml.sax.SAXNotSupportedException $r12;
        org.xml.sax.SAXNotRecognizedException $r2;
        org.xml.sax.XMLReader r0;
        org.jdom.JDOMException $r3, $r13;
        java.lang.StringBuffer $r4, $r7, $r10, $r14, $r16, $r19;
        java.lang.String r1, r5, $r6, $r9, $r11, $r15, $r18, $r20;
        boolean z0;
        java.lang.Class $r8, $r17;

        r21 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: org.xml.sax.XMLReader;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r5 := @parameter3: java.lang.String;

     label1:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>(r1, z0);

     label2:
        goto label5;

     label3:
        $r12 := @caughtexception;

        $r13 = new org.jdom.JDOMException;

        $r14 = new java.lang.StringBuffer;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" feature not supported for SAX driver ");

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.jdom.JDOMException: void <init>(java.lang.String)>($r20);

        throw $r13;

     label4:
        $r2 := @caughtexception;

        $r3 = new org.jdom.JDOMException;

        $r4 = new java.lang.StringBuffer;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" feature not recognized for SAX driver ");

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.jdom.JDOMException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label5:
        return;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label4;
    }

    private void internalSetProperty(org.xml.sax.XMLReader, java.lang.String, java.lang.Object, java.lang.String) throws org.jdom.JDOMException
    {
        org.jdom.input.SAXBuilder r22;
        org.xml.sax.SAXNotSupportedException $r13;
        org.xml.sax.SAXNotRecognizedException $r3;
        org.xml.sax.XMLReader r0;
        org.jdom.JDOMException $r4, $r14;
        java.lang.StringBuffer $r5, $r8, $r11, $r15, $r17, $r20;
        java.lang.String r1, r6, $r7, $r10, $r12, $r16, $r19, $r21;
        java.lang.Object r2;
        java.lang.Class $r9, $r18;

        r22 := @this: org.jdom.input.SAXBuilder;

        r0 := @parameter0: org.xml.sax.XMLReader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r6 := @parameter3: java.lang.String;

     label1:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        $r14 = new org.jdom.JDOMException;

        $r15 = new java.lang.StringBuffer;

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" property not supported for SAX driver ");

        $r18 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.jdom.JDOMException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label4:
        $r3 := @caughtexception;

        $r4 = new org.jdom.JDOMException;

        $r5 = new java.lang.StringBuffer;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" property not recognized for SAX driver ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.jdom.JDOMException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label5:
        return;

        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label4;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.DTDHandler saxDTDHandler> = r1;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.EntityResolver saxEntityResolver> = r1;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.ErrorHandler saxErrorHandler> = r1;

        return;
    }

    public void setExpandEntities(boolean)
    {
        org.jdom.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXBuilder: boolean expand> = z0;

        return;
    }

    public void setFactory(org.jdom.JDOMFactory)
    {
        org.jdom.input.SAXBuilder r0;
        org.jdom.JDOMFactory r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: org.jdom.JDOMFactory;

        r0.<org.jdom.input.SAXBuilder: org.jdom.JDOMFactory factory> = r1;

        return;
    }

    public void setFeature(java.lang.String, boolean)
    {
        org.jdom.input.SAXBuilder r0;
        java.lang.Boolean $r2;
        java.util.HashMap $r3;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap features>;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>(z0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    private void setFeaturesAndProperties(org.xml.sax.XMLReader, boolean) throws org.jdom.JDOMException
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.SAXNotSupportedException $r15;
        java.util.HashMap $r1, $r5, $r9, $r13;
        org.xml.sax.SAXNotRecognizedException $r16;
        org.xml.sax.XMLReader r8;
        org.jdom.JDOMException $r17;
        java.lang.Boolean r7;
        java.lang.String r18, r19;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Iterator $r3, $r11;
        java.util.Set $r2, $r10;
        java.lang.Object $r4, $r6, $r12, $r14;

        r0 := @this: org.jdom.input.SAXBuilder;

        r8 := @parameter0: org.xml.sax.XMLReader;

        z3 := @parameter1: boolean;

        $r1 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap features>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label02;

     label01:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r4;

        $r5 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap features>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r18);

        r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke r7.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke r0.<org.jdom.input.SAXBuilder: void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String)>(r8, r18, $z1, r18);

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r9 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r12;

        $r13 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r19);

        specialinvoke r0.<org.jdom.input.SAXBuilder: void internalSetProperty(org.xml.sax.XMLReader,java.lang.String,java.lang.Object,java.lang.String)>(r8, r19, $r14, r19);

     label04:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label03;

        if z3 == 0 goto label09;

     label05:
        $z5 = r0.<org.jdom.input.SAXBuilder: boolean validate>;

        specialinvoke r0.<org.jdom.input.SAXBuilder: void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String)>(r8, "http://xml.org/sax/features/validation", $z5, "Validation");

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        $z6 = r0.<org.jdom.input.SAXBuilder: boolean validate>;

        if $z6 == 0 goto label08;

        throw $r17;

     label08:
        specialinvoke r0.<org.jdom.input.SAXBuilder: void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String)>(r8, "http://xml.org/sax/features/namespaces", 1, "Namespaces");

        specialinvoke r0.<org.jdom.input.SAXBuilder: void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String)>(r8, "http://xml.org/sax/features/namespace-prefixes", 1, "Namespace prefixes");

     label09:
        $z7 = interfaceinvoke r8.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/external-general-entities");

        $z8 = r0.<org.jdom.input.SAXBuilder: boolean expand>;

        if $z7 == $z8 goto label13;

        $z4 = r0.<org.jdom.input.SAXBuilder: boolean expand>;

        interfaceinvoke r8.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", $z4);

     label10:
        goto label13;

     label11:
        $r16 := @caughtexception;

        goto label13;

     label12:
        $r15 := @caughtexception;

     label13:
        return;

        catch org.jdom.JDOMException from label05 to label06 with label07;
        catch org.xml.sax.SAXNotRecognizedException from label09 to label10 with label11;
        catch org.xml.sax.SAXNotSupportedException from label09 to label10 with label12;
    }

    public void setIgnoringElementContentWhitespace(boolean)
    {
        org.jdom.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXBuilder: boolean ignoringWhite> = z0;

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.jdom.input.SAXBuilder r0;
        java.lang.Object r2;
        java.util.HashMap $r3;
        java.lang.String r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.jdom.input.SAXBuilder: java.util.HashMap properties>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void setReuseParser(boolean)
    {
        org.jdom.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXBuilder: boolean reuseParser> = z0;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLReader saxParser> = null;

        return;
    }

    public void setValidation(boolean)
    {
        org.jdom.input.SAXBuilder r0;
        boolean z0;

        r0 := @this: org.jdom.input.SAXBuilder;

        z0 := @parameter0: boolean;

        r0.<org.jdom.input.SAXBuilder: boolean validate> = z0;

        return;
    }

    public void setXMLFilter(org.xml.sax.XMLFilter)
    {
        org.jdom.input.SAXBuilder r0;
        org.xml.sax.XMLFilter r1;

        r0 := @this: org.jdom.input.SAXBuilder;

        r1 := @parameter0: org.xml.sax.XMLFilter;

        r0.<org.jdom.input.SAXBuilder: org.xml.sax.XMLFilter saxXMLFilter> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.jdom.input.SAXBuilder: java.lang.String DEFAULT_SAX_DRIVER> = "org.apache.xerces.parsers.SAXParser";

        <org.jdom.input.SAXBuilder: java.lang.String CVS_ID> = "@(#) $RCSfile: SAXBuilder.java,v $ $Revision: 1.89 $ $Date: 2004/09/03 18:24:28 $ $Name: jdom_1_0 $";

        return;
    }
}
