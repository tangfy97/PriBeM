public class org.apache.batik.util.io.StringNormalizingReader extends org.apache.batik.util.io.NormalizingReader
{
    protected java.lang.String string;
    protected int length;
    protected int next;
    protected int line;
    protected int column;

    public void <init>(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.apache.batik.util.io.StringNormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.StringNormalizingReader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.util.io.NormalizingReader: void <init>()>();

        r0.<org.apache.batik.util.io.StringNormalizingReader: int line> = 1;

        r0.<org.apache.batik.util.io.StringNormalizingReader: java.lang.String string> = r1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.apache.batik.util.io.StringNormalizingReader: int length> = $i0;

        return;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r1, $r2;
        org.apache.batik.util.io.StringNormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.StringNormalizingReader;

        $i1 = r0.<org.apache.batik.util.io.StringNormalizingReader: int length>;

        $i0 = r0.<org.apache.batik.util.io.StringNormalizingReader: int next>;

        if $i1 != $i0 goto label1;

        $i14 = -1;

        goto label2;

     label1:
        $r1 = r0.<org.apache.batik.util.io.StringNormalizingReader: java.lang.String string>;

        $i2 = r0.<org.apache.batik.util.io.StringNormalizingReader: int next>;

        $i3 = $i2 + 1;

        r0.<org.apache.batik.util.io.StringNormalizingReader: int next> = $i3;

        $i14 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

     label2:
        i4 = $i14;

        if $i14 > 13 goto label8;

        lookupswitch($i14)
        {
            case 10: goto label7;
            case 13: goto label3;
            default: goto label8;
        };

     label3:
        r0.<org.apache.batik.util.io.StringNormalizingReader: int column> = 0;

        $i5 = r0.<org.apache.batik.util.io.StringNormalizingReader: int line>;

        $i6 = $i5 + 1;

        r0.<org.apache.batik.util.io.StringNormalizingReader: int line> = $i6;

        $i8 = r0.<org.apache.batik.util.io.StringNormalizingReader: int length>;

        $i7 = r0.<org.apache.batik.util.io.StringNormalizingReader: int next>;

        if $i8 != $i7 goto label4;

        $i15 = -1;

        goto label5;

     label4:
        $r2 = r0.<org.apache.batik.util.io.StringNormalizingReader: java.lang.String string>;

        $i9 = r0.<org.apache.batik.util.io.StringNormalizingReader: int next>;

        $i15 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i9);

     label5:
        if $i15 != 10 goto label6;

        $i10 = r0.<org.apache.batik.util.io.StringNormalizingReader: int next>;

        $i11 = $i10 + 1;

        r0.<org.apache.batik.util.io.StringNormalizingReader: int next> = $i11;

     label6:
        return 10;

     label7:
        r0.<org.apache.batik.util.io.StringNormalizingReader: int column> = 0;

        $i12 = r0.<org.apache.batik.util.io.StringNormalizingReader: int line>;

        $i13 = $i12 + 1;

        r0.<org.apache.batik.util.io.StringNormalizingReader: int line> = $i13;

     label8:
        return i4;
    }

    public int getLine()
    {
        int $i0;
        org.apache.batik.util.io.StringNormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.StringNormalizingReader;

        $i0 = r0.<org.apache.batik.util.io.StringNormalizingReader: int line>;

        return $i0;
    }

    public int getColumn()
    {
        int $i0;
        org.apache.batik.util.io.StringNormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.StringNormalizingReader;

        $i0 = r0.<org.apache.batik.util.io.StringNormalizingReader: int column>;

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.batik.util.io.StringNormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.StringNormalizingReader;

        r0.<org.apache.batik.util.io.StringNormalizingReader: java.lang.String string> = null;

        return;
    }
}
