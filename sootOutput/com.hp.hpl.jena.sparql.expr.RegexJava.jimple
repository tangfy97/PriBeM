public class com.hp.hpl.jena.sparql.expr.RegexJava extends java.lang.Object implements com.hp.hpl.jena.sparql.expr.RegexEngine
{
    java.util.regex.Pattern regexPattern;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.expr.RegexJava r0;
        java.lang.String r1, r2;
        java.util.regex.Pattern $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.RegexJava;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = specialinvoke r0.<com.hp.hpl.jena.sparql.expr.RegexJava: java.util.regex.Pattern makePattern(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.hp.hpl.jena.sparql.expr.RegexJava: java.util.regex.Pattern regexPattern> = $r3;

        return;
    }

    public boolean match(java.lang.String)
    {
        com.hp.hpl.jena.sparql.expr.RegexJava r0;
        java.util.regex.Matcher $r3;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.RegexJava;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.expr.RegexJava: java.util.regex.Pattern regexPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    private java.util.regex.Pattern makePattern(java.lang.String, java.lang.String)
    {
        java.util.regex.PatternSyntaxException $r3;
        com.hp.hpl.jena.sparql.expr.RegexJava r9;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r0, r1, $r8;
        java.util.regex.Pattern $r2;
        com.hp.hpl.jena.sparql.expr.ExprException $r4;

        r9 := @this: com.hp.hpl.jena.sparql.expr.RegexJava;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

     label1:
        i0 = 0;

        if r0 == null goto label2;

        i0 = staticinvoke <com.hp.hpl.jena.sparql.expr.RegexJava: int makeMask(java.lang.String)>(r0);

     label2:
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r1, i0);

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        $r4 = new com.hp.hpl.jena.sparql.expr.ExprException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Regex: Pattern exception: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.expr.ExprException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch java.util.regex.PatternSyntaxException from label1 to label3 with label4;
    }

    public static int makeMask(java.lang.String)
    {
        char $c1, $c2;
        byte b3, b5;
        int $i0, i4, $i6, $i8, $i10;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String r0, $r5;
        com.hp.hpl.jena.query.QueryParseException $r7;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        b3 = 0;

        i4 = 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        lookupswitch($i6)
        {
            case 105: goto label3;
            case 109: goto label4;
            case 115: goto label5;
            default: goto label6;
        };

     label3:
        b5 = b3 | 64;

        b3 = b5 | 2;

        goto label7;

     label4:
        b3 = b3 | 8;

        goto label7;

     label5:
        b3 = b3 | 32;

        goto label7;

     label6:
        $r7 = new com.hp.hpl.jena.query.QueryParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal flag in regex modifiers: ");

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i8 = (int) -1;

        $i10 = (int) -1;

        specialinvoke $r7.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,int,int)>($r5, $i8, $i10);

        throw $r7;

     label7:
        i4 = i4 + 1;

        goto label2;

     label8:
        return b3;
    }
}
