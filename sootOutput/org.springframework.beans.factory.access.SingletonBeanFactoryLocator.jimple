public class org.springframework.beans.factory.access.SingletonBeanFactoryLocator extends java.lang.Object implements org.springframework.beans.factory.access.BeanFactoryLocator
{
    private static final java.lang.String DEFAULT_RESOURCE_LOCATION;
    protected static final org.apache.commons.logging.Log logger;
    private static final java.util.Map instances;
    private final java.util.Map bfgInstancesByKey;
    private final java.util.Map bfgInstancesByObj;
    private final java.lang.String resourceLocation;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;
        java.util.HashMap $r1;

        <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String DEFAULT_RESOURCE_LOCATION> = "classpath*:beanRefFactory.xml";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/beans/factory/access/SingletonBeanFactoryLocator;");

        <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances> = $r1;

        return;
    }

    public static org.springframework.beans.factory.access.BeanFactoryLocator getInstance() throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.access.BeanFactoryLocator $r0;

        $r0 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance(java.lang.String)>(null);

        return $r0;
    }

    public static org.springframework.beans.factory.access.BeanFactoryLocator getInstance(java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.Throwable $r18;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator $r5;
        java.util.Map $r1, $r3, $r6, $r9, $r12;
        int $i0;
        java.lang.String r0, $r14, r19;
        org.springframework.beans.factory.access.BeanFactoryLocator $r15, r20;
        boolean $z0, $z1;
        org.apache.commons.logging.Log $r2, $r8;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r10, $r11, $r13, $r16, $r17;

        r0 := @parameter0: java.lang.String;

        r19 = r0;

        if r0 != null goto label1;

        r19 = "classpath*:beanRefFactory.xml";

     label1:
        $z0 = staticinvoke <org.springframework.core.io.support.ResourcePatternUtils: boolean isUrl(java.lang.String)>(r19);

        if $z0 != 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("classpath*:");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r1 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances>;

        entermonitor $r1;

     label3:
        $r2 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z1 == 0 goto label4;

        $r8 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("SingletonBeanFactoryLocator.getInstance(): instances.hashCode=");

        $r9 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances>;

        $i0 = interfaceinvoke $r9.<java.util.Map: int hashCode()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", instances=");

        $r12 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r14);

     label4:
        $r3 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19);

        $r15 = (org.springframework.beans.factory.access.BeanFactoryLocator) $r4;

        r20 = $r15;

        if $r15 != null goto label5;

        $r5 = new org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        specialinvoke $r5.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: void <init>(java.lang.String)>(r19);

        r20 = $r5;

        $r6 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map instances>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, $r5);

     label5:
        exitmonitor $r1;

     label6:
        return r20;

     label7:
        $r18 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r18;

        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void <init>(java.lang.String)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r0;
        java.util.HashMap $r1, $r2;
        java.lang.String r3;

        r0 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByObj> = $r2;

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation> = r3;

        return;
    }

    public org.springframework.beans.factory.access.BeanFactoryReference useBeanFactory(java.lang.String) throws org.springframework.beans.BeansException
    {
        java.lang.IllegalStateException $r14;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r0;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference $r22;
        java.util.Map $r1, $r3, $r11, $r12, $r44, $r45;
        boolean $z0, $z1;
        java.lang.StringBuilder $r15, $r17, $r26, $r29, $r30, $r35, $r36, $r37, $r39, $r40, $r47, $r49, $r50, $r51, $r52;
        org.springframework.beans.factory.ListableBeanFactory $r20;
        java.lang.Throwable $r32;
        int $i0, $i1;
        java.lang.String $r2, r6, $r7, $r10, $r18, $r28, $r31, $r38, $r41, $r43, $r48, $r53;
        org.springframework.beans.factory.access.BootstrapException $r34, $r46;
        org.springframework.beans.BeansException $r33, $r42;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup $r9, r54;
        org.springframework.beans.factory.BeanFactory $r8, $r13, $r16, $r19, $r23, $r24, r55;
        java.lang.Object $r4, $r21, $r25;
        org.apache.commons.logging.Log $r5, $r27;

        r0 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey>;

        $r2 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r54 = (org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup) $r4;

        if r54 == null goto label02;

        $i0 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: int access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        $i1 = $i0 + 1;

        staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: void access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup,int)>(r54, $i1);

        goto label07;

     label02:
        $r5 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z0 == 0 goto label03;

        $r27 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Factory group with resource name [");

        $r28 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] requested. Creating new instance.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r31);

     label03:
        $r7 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r8 = virtualinvoke r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.springframework.beans.factory.BeanFactory createDefinition(java.lang.String,java.lang.String)>($r7, r6);

        $r9 = new org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup;

        specialinvoke $r9.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: void <init>(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(null);

        r54 = $r9;

        staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: void access$3(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup,org.springframework.beans.factory.BeanFactory)>($r9, $r8);

        staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: void access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup,int)>($r9, 1);

        $r11 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey>;

        $r10 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        $r12 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByObj>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

     label04:
        virtualinvoke r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: void initializeDefinition(org.springframework.beans.factory.BeanFactory)>($r8);

     label05:
        goto label07;

     label06:
        $r42 := @caughtexception;

        $r44 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey>;

        $r43 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r43);

        $r45 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByObj>;

        interfaceinvoke $r45.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

        $r46 = new org.springframework.beans.factory.access.BootstrapException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to initialize group definition. Group resource name [");

        $r48 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], factory key [");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<org.springframework.beans.factory.access.BootstrapException: void <init>(java.lang.String,java.lang.Throwable)>($r53, $r42);

        throw $r46;

     label07:
        if r6 == null goto label08;

        $r24 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: org.springframework.beans.factory.BeanFactory access$4(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        $r25 = interfaceinvoke $r24.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r6, class "Lorg/springframework/beans/factory/BeanFactory;");

        r55 = (org.springframework.beans.factory.BeanFactory) $r25;

        goto label10;

     label08:
        $r13 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: org.springframework.beans.factory.BeanFactory access$4(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        $z1 = $r13 instanceof org.springframework.beans.factory.ListableBeanFactory;

        if $z1 == 0 goto label09;

        $r19 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: org.springframework.beans.factory.BeanFactory access$4(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        $r20 = (org.springframework.beans.factory.ListableBeanFactory) $r19;

        $r21 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.Object beanOfType(org.springframework.beans.factory.ListableBeanFactory,java.lang.Class)>($r20, class "Lorg/springframework/beans/factory/BeanFactory;");

        r55 = (org.springframework.beans.factory.BeanFactory) $r21;

        goto label10;

     label09:
        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Factory key is null, and underlying factory is not a ListableBeanFactory: ");

        $r16 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: org.springframework.beans.factory.BeanFactory access$4(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label10:
        $r22 = new org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference;

        $r23 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: org.springframework.beans.factory.BeanFactory access$4(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r54);

        specialinvoke $r22.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: void <init>(org.springframework.beans.factory.access.SingletonBeanFactoryLocator,org.springframework.beans.factory.BeanFactory,org.springframework.beans.factory.BeanFactory)>(r0, r55, $r23);

     label11:
        exitmonitor $r1;

     label12:
        return $r22;

     label13:
        $r33 := @caughtexception;

        $r34 = new org.springframework.beans.factory.access.BootstrapException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to return specified BeanFactory instance: factory key [");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], from group with resource name [");

        $r38 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<org.springframework.beans.factory.access.BootstrapException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r33);

        throw $r34;

     label14:
        $r32 := @caughtexception;

        exitmonitor $r1;

     label15:
        throw $r32;

        catch org.springframework.beans.BeansException from label04 to label05 with label06;
        catch org.springframework.beans.BeansException from label07 to label11 with label13;
        catch java.lang.Throwable from label01 to label12 with label14;
        catch java.lang.Throwable from label13 to label15 with label14;
    }

    protected org.springframework.beans.factory.BeanFactory createDefinition(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r7;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver $r2;
        org.springframework.core.io.Resource[] $r4;
        java.lang.StringBuilder $r6, $r9, $r10, $r12, $r13, $r17, $r19, $r20, $r21, $r22, $r26, $r28, $r29;
        int $i0;
        java.lang.String r3, $r8, r11, $r14, $r18, $r23, $r27, $r30;
        org.springframework.beans.factory.xml.XmlBeanDefinitionReader $r1;
        org.springframework.beans.FatalBeanException $r5, $r16;
        java.io.IOException $r24;
        org.springframework.beans.factory.BeanDefinitionStoreException $r15, $r25;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r0;

        r7 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.DefaultListableBeanFactory;

        specialinvoke $r0.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void <init>()>();

        $r1 = new org.springframework.beans.factory.xml.XmlBeanDefinitionReader;

        specialinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>($r0);

        $r2 = new org.springframework.core.io.support.PathMatchingResourcePatternResolver;

        specialinvoke $r2.<org.springframework.core.io.support.PathMatchingResourcePatternResolver: void <init>()>();

     label1:
        $r4 = interfaceinvoke $r2.<org.springframework.core.io.support.ResourcePatternResolver: org.springframework.core.io.Resource[] getResources(java.lang.String)>(r3);

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

        $r5 = new org.springframework.beans.FatalBeanException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to find resource for specified definition. Group resource name [");

        $r8 = r7.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], factory key [");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.springframework.beans.FatalBeanException: void <init>(java.lang.String)>($r14);

        throw $r5;

     label2:
        virtualinvoke $r1.<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource[])>($r4);

     label3:
        goto label6;

     label4:
        $r24 := @caughtexception;

        $r25 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error accessing bean definition resource [");

        $r27 = r7.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r24);

        throw $r25;

     label5:
        $r15 := @caughtexception;

        $r16 = new org.springframework.beans.FatalBeanException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to load group definition: group resource name [");

        $r18 = r7.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], factory key [");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.springframework.beans.FatalBeanException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r15);

        throw $r16;

     label6:
        return $r0;

        catch java.io.IOException from label1 to label3 with label4;
        catch org.springframework.beans.factory.BeanDefinitionStoreException from label1 to label3 with label5;
    }

    protected void initializeDefinition(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r2;
        org.springframework.beans.factory.BeanFactory r0;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r1;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        if $z0 == 0 goto label1;

        $r1 = (org.springframework.beans.factory.config.ConfigurableListableBeanFactory) r0;

        interfaceinvoke $r1.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void preInstantiateSingletons()>();

     label1:
        return;
    }

    protected void destroyDefinition(org.springframework.beans.factory.BeanFactory, java.lang.String)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r9;
        org.springframework.beans.factory.BeanFactory r0;
        org.apache.commons.logging.Log $r1, $r4;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.String r5, $r8;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r2;
        boolean $z0, $z1;

        r9 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r5 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableBeanFactory;

        if $z0 == 0 goto label2;

        $r1 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z1 == 0 goto label1;

        $r4 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Factory group with selector \'");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' being released, as there are no more references to it");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r8);

     label1:
        $r2 = (org.springframework.beans.factory.config.ConfigurableBeanFactory) r0;

        interfaceinvoke $r2.<org.springframework.beans.factory.config.ConfigurableBeanFactory: void destroySingletons()>();

     label2:
        return;
    }

    static java.util.Map access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByKey>;

        return $r1;
    }

    static java.util.Map access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map bfgInstancesByObj>;

        return $r1;
    }

    static java.lang.String access$2(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r0;
        java.lang.String $r1;

        r0 := @parameter0: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String resourceLocation>;

        return $r1;
    }
}
