public class org.junit.experimental.theories.internal.ParameterizedAssertionError extends java.lang.RuntimeException
{
    private static final long serialVersionUID;

    public transient void <init>(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable r6;
        java.lang.Object[] $r1, r3;
        java.lang.String r2, $r4, $r5;
        org.junit.experimental.theories.internal.ParameterizedAssertionError r0;

        r0 := @this: org.junit.experimental.theories.internal.ParameterizedAssertionError;

        r6 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = staticinvoke <org.junit.experimental.theories.internal.ParameterizedAssertionError: java.lang.String join(java.lang.String,java.lang.Object[])>(", ", r3);

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s(%s)", $r1);

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, r6);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String $r1, $r3;
        org.junit.experimental.theories.internal.ParameterizedAssertionError r0;
        boolean $z0;

        r0 := @this: org.junit.experimental.theories.internal.ParameterizedAssertionError;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.junit.experimental.theories.internal.ParameterizedAssertionError: java.lang.String toString()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static transient java.lang.String join(java.lang.String, java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r3 = staticinvoke <org.junit.experimental.theories.internal.ParameterizedAssertionError: java.lang.String join(java.lang.String,java.util.Collection)>(r0, $r2);

        return $r3;
    }

    public static java.lang.String join(java.lang.String, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        java.lang.StringBuffer $r0;
        java.lang.Object $r4;
        java.lang.String $r3, $r5, r6;
        boolean $z0, $z1;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Collection;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = staticinvoke <org.junit.experimental.theories.internal.ParameterizedAssertionError: java.lang.String stringValueOf(java.lang.Object)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String stringValueOf(java.lang.Object)
    {
        java.lang.Throwable $r2;
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return "[toString failed]";

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.junit.experimental.theories.internal.ParameterizedAssertionError: long serialVersionUID> = 1L;

        return;
    }
}
