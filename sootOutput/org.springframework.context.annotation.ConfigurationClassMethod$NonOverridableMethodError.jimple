class org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError extends org.springframework.beans.factory.parsing.Problem
{
    final org.springframework.context.'annotation'.ConfigurationClassMethod this$0;

    public void <init>(org.springframework.context.'annotation'.ConfigurationClassMethod)
    {
        org.springframework.context.'annotation'.ConfigurationClassMethod r1;
        java.lang.Object[] $r2;
        org.springframework.core.type.MethodMetadata $r3;
        org.springframework.beans.factory.parsing.Location $r6;
        org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError r0;
        java.lang.String $r4, $r5;

        r0 := @this: org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError;

        r1 := @parameter0: org.springframework.context.'annotation'.ConfigurationClassMethod;

        r0.<org.springframework.context.'annotation'.ConfigurationClassMethod$NonOverridableMethodError: org.springframework.context.'annotation'.ConfigurationClassMethod this$0> = r1;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.core.type.MethodMetadata getMetadata()>();

        $r4 = interfaceinvoke $r3.<org.springframework.core.type.MethodMetadata: java.lang.String getMethodName()>();

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Method \'%s\' must not be private, final or static; change the method\'s modifiers to continue", $r2);

        $r6 = virtualinvoke r1.<org.springframework.context.'annotation'.ConfigurationClassMethod: org.springframework.beans.factory.parsing.Location getResourceLocation()>();

        specialinvoke r0.<org.springframework.beans.factory.parsing.Problem: void <init>(java.lang.String,org.springframework.beans.factory.parsing.Location)>($r5, $r6);

        return;
    }
}
