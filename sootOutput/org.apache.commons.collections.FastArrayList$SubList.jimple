class org.apache.commons.collections.FastArrayList$SubList extends java.lang.Object implements java.util.List
{
    private int first;
    private int last;
    private java.util.List expected;
    private final org.apache.commons.collections.FastArrayList this$0;

    public void <init>(org.apache.commons.collections.FastArrayList, int, int)
    {
        int i0, i1;
        org.apache.commons.collections.FastArrayList r1;
        org.apache.commons.collections.FastArrayList$SubList r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r1 := @parameter0: org.apache.commons.collections.FastArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0> = r1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int first> = i0;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = i1;

        $r2 = r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = $r2;

        return;
    }

    private java.util.List get(java.util.List)
    {
        java.util.ArrayList $r3;
        java.util.List $r2, r4, $r5;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList $r1;
        org.apache.commons.collections.FastArrayList$SubList r0;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r4 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        if $r3 == $r2 goto label1;

        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label1:
        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList: int first>;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.List subList(int,int)>($i1, $i0);

        return $r5;
    }

    public void clear()
    {
        java.lang.Throwable $r13, $r14;
        java.util.ArrayList $r3, $r8, r10;
        int $i0;
        boolean $z0;
        java.util.List $r4, $r5, $r11;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r6, $r7, $r12;
        java.lang.Object $r9;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r6 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r6;

     label01:
        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r8 = $r7.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object clone()>();

        r10 = (java.util.ArrayList) $r9;

        $r11 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r10);

        interfaceinvoke $r11.<java.util.List: void clear()>();

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int first>;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i0;

        $r12 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r12.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r10;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r10;

        exitmonitor $r6;

     label02:
        goto label05;

     label03:
        $r14 := @caughtexception;

        exitmonitor $r6;

     label04:
        throw $r14;

     label05:
        goto label11;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        interfaceinvoke $r5.<java.util.List: void clear()>();

        exitmonitor $r3;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r13;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object r6, $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean remove(java.lang.Object)>(r6);

        if $z2 == 0 goto label02;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i1;

     label02:
        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.util.Collection r6;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean removeAll(java.util.Collection)>(r6);

        if $z2 == 0 goto label02;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int first>;

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i2 = $i0 + $i1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i2;

     label02:
        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean removeAll(java.util.Collection)>(r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.util.Collection r6;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean retainAll(java.util.Collection)>(r6);

        if $z2 == 0 goto label02;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int first>;

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i2 = $i0 + $i1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i2;

     label02:
        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean retainAll(java.util.Collection)>(r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public int size()
    {
        java.lang.Throwable $r8;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r6, $r7;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r7 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r6);

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r8;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r6, $r7;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r7 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r6);

        $z2 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        java.lang.Object r6;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $z2 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>(r6);

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r6);

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r9;
        java.util.Collection r6;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $z2 = interfaceinvoke $r8.<java.util.List: boolean containsAll(java.util.Collection)>(r6);

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean containsAll(java.util.Collection)>(r6);

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r11;
        java.lang.Object[] r6, $r7, $r10;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r8, $r9;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object[];

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r9 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r8);

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r6);

        return $r10;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r6);

        exitmonitor $r3;

     label3:
        return $r7;

     label4:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r6, $r9;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray()>();

        return $r9;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray()>();

        exitmonitor $r3;

     label3:
        return $r6;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.util.ArrayList $r4;
        java.util.List $r5, $r6, $r7, $r8;
        org.apache.commons.collections.FastArrayList $r2, $r3;
        java.lang.Object r0;
        org.apache.commons.collections.FastArrayList$SubList r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = r1.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r2.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label2;

        $r7 = r1.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r1.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z2;

     label2:
        $r3 = r1.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r4 = $r3.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r4;

     label3:
        $r5 = r1.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r6 = specialinvoke r1.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r5);

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        exitmonitor $r4;

     label4:
        return $z1;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int hashCode()
    {
        java.lang.Throwable $r8;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r6, $r7;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r7 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r6);

        $i1 = virtualinvoke $r7.<java.lang.Object: int hashCode()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object r6, $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r6);

        if $z2 == 0 goto label02;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i1;

     label02:
        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.util.Collection r6;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r6);

        if $z2 == 0 goto label02;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i1 = interfaceinvoke r6.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i2;

     label02:
        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>(r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int i0, $i1, $i2;
        boolean $z0;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object r6, $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        interfaceinvoke $r12.<java.util.List: void add(int,java.lang.Object)>(i0, r6);

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i2;

        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label02:
        goto label05;

     label03:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label04:
        throw $r15;

     label05:
        goto label11;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r6);

        exitmonitor $r3;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.lang.Throwable $r14, $r15;
        java.util.ArrayList $r3, $r9, r11;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.util.Collection r6;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r13;
        java.lang.Object $r10;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        r6 := @parameter1: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label01:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $z2 = interfaceinvoke $r12.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r6);

        $r13 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r13.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        if $z2 == 0 goto label02;

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i2 = interfaceinvoke r6.<java.util.Collection: int size()>();

        $i3 = $i1 + $i2;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i3;

     label02:
        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label03:
        return $z2;

     label04:
        $r15 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r15;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r6);

        exitmonitor $r3;

     label08:
        return $z1;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r14;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.Object remove(int)
    {
        java.lang.Throwable $r15, $r16;
        java.util.ArrayList $r3, $r9, r11;
        int i0, $i1, $i2;
        boolean $z0;
        java.util.List $r4, $r5, $r12;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r7, $r8, $r14;
        java.lang.Object $r6, $r10, $r13;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r7;

     label1:
        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object clone()>();

        r11 = (java.util.ArrayList) $r10;

        $r12 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r11);

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object remove(int)>(i0);

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i2 = $i1 - 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i2;

        $r14 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r14.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r11;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r11;

        exitmonitor $r7;

     label2:
        return $r13;

     label3:
        $r16 := @caughtexception;

        exitmonitor $r7;

     label4:
        throw $r16;

     label5:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label6:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i0);

        exitmonitor $r3;

     label7:
        return $r6;

     label8:
        $r15 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.lang.Throwable $r16, $r17;
        java.util.ArrayList $r3, $r10, r12;
        int i0;
        boolean $z0;
        java.util.List $r4, $r5, $r13;
        org.apache.commons.collections.FastArrayList $r1, $r2, $r8, $r9, $r15;
        java.lang.Object r6, $r7, $r11, $r14;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label5;

        $r8 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r10 = $r9.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object clone()>();

        r12 = (java.util.ArrayList) $r11;

        $r13 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r12);

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r6);

        $r15 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r15.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list> = r12;

        r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected> = r12;

        exitmonitor $r8;

     label2:
        return $r14;

     label3:
        $r17 := @caughtexception;

        exitmonitor $r8;

     label4:
        throw $r17;

     label5:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label6:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r6);

        exitmonitor $r3;

     label7:
        return $r7;

     label8:
        $r16 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter $r0;
        org.apache.commons.collections.FastArrayList$SubList r1;

        r1 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r0 = new org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke $r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void <init>(org.apache.commons.collections.FastArrayList$SubList,int)>(r1, 0);

        return $r0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter $r0;
        org.apache.commons.collections.FastArrayList$SubList r1;

        r1 := @this: org.apache.commons.collections.FastArrayList$SubList;

        $r0 = new org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke $r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void <init>(org.apache.commons.collections.FastArrayList$SubList,int)>(r1, 0);

        return $r0;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections.FastArrayList$SubList$SubListIter $r0;
        int i0;
        org.apache.commons.collections.FastArrayList$SubList r1;

        r1 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        $r0 = new org.apache.commons.collections.FastArrayList$SubList$SubListIter;

        specialinvoke $r0.<org.apache.commons.collections.FastArrayList$SubList$SubListIter: void <init>(org.apache.commons.collections.FastArrayList$SubList,int)>(r1, i0);

        return $r0;
    }

    public java.lang.Object get(int)
    {
        java.lang.Throwable $r10;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        int i0;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        java.lang.Object $r6, $r9;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        return $r9;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        exitmonitor $r3;

     label3:
        return $r6;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int indexOf(java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        java.lang.Object r6;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $i1 = interfaceinvoke $r8.<java.util.List: int indexOf(java.lang.Object)>(r6);

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $i0 = interfaceinvoke $r5.<java.util.List: int indexOf(java.lang.Object)>(r6);

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.lang.Throwable $r9;
        java.util.ArrayList $r3;
        java.util.List $r4, $r5, $r7, $r8;
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList $r1, $r2;
        java.lang.Object r6;
        org.apache.commons.collections.FastArrayList$SubList r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastArrayList: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r8 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r7);

        $i1 = interfaceinvoke $r8.<java.util.List: int lastIndexOf(java.lang.Object)>(r6);

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        $r5 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>($r4);

        $i0 = interfaceinvoke $r5.<java.util.List: int lastIndexOf(java.lang.Object)>(r6);

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.util.List subList(int, int)
    {
        java.util.ArrayList $r3;
        java.util.List $r2;
        int i0, $i1, i2, $i3, $i4;
        org.apache.commons.collections.FastArrayList $r1, $r5;
        org.apache.commons.collections.FastArrayList$SubList r0, $r4;
        java.util.ConcurrentModificationException $r6;

        r0 := @this: org.apache.commons.collections.FastArrayList$SubList;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $r3 = $r1.<org.apache.commons.collections.FastArrayList: java.util.ArrayList list>;

        $r2 = r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List expected>;

        if $r3 == $r2 goto label1;

        $r6 = new java.util.ConcurrentModificationException;

        specialinvoke $r6.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r6;

     label1:
        $r4 = new org.apache.commons.collections.FastArrayList$SubList;

        $r5 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        $i1 = r0.<org.apache.commons.collections.FastArrayList$SubList: int first>;

        $i4 = $i1 + i0;

        $i3 = i0 + i2;

        specialinvoke $r4.<org.apache.commons.collections.FastArrayList$SubList: void <init>(org.apache.commons.collections.FastArrayList,int,int)>($r5, $i4, $i3);

        return $r4;
    }

    static org.apache.commons.collections.FastArrayList access$000(org.apache.commons.collections.FastArrayList$SubList)
    {
        org.apache.commons.collections.FastArrayList $r1;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @parameter0: org.apache.commons.collections.FastArrayList$SubList;

        $r1 = r0.<org.apache.commons.collections.FastArrayList$SubList: org.apache.commons.collections.FastArrayList this$0>;

        return $r1;
    }

    static java.util.List access$100(org.apache.commons.collections.FastArrayList$SubList, java.util.List)
    {
        java.util.List r1, $r2;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @parameter0: org.apache.commons.collections.FastArrayList$SubList;

        r1 := @parameter1: java.util.List;

        $r2 = specialinvoke r0.<org.apache.commons.collections.FastArrayList$SubList: java.util.List get(java.util.List)>(r1);

        return $r2;
    }

    static int access$210(org.apache.commons.collections.FastArrayList$SubList)
    {
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @parameter0: org.apache.commons.collections.FastArrayList$SubList;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i1 = $i0 - 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i1;

        return $i0;
    }

    static int access$208(org.apache.commons.collections.FastArrayList$SubList)
    {
        int $i0, $i1;
        org.apache.commons.collections.FastArrayList$SubList r0;

        r0 := @parameter0: org.apache.commons.collections.FastArrayList$SubList;

        $i0 = r0.<org.apache.commons.collections.FastArrayList$SubList: int last>;

        $i1 = $i0 + 1;

        r0.<org.apache.commons.collections.FastArrayList$SubList: int last> = $i1;

        return $i0;
    }
}
