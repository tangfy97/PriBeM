public abstract class org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler extends java.lang.Object implements org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler
{
    private final org.apache.batik.css.dom.CSSOMSVGColor this$0;

    public void <init>(org.apache.batik.css.dom.CSSOMSVGColor)
    {
        org.apache.batik.css.dom.CSSOMSVGColor r1;
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMSVGColor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0> = r1;

        return;
    }

    protected abstract org.apache.batik.css.engine.value.Value getValue();

    public void redTextChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0;
        java.lang.StringBuffer $r19;
        org.w3c.dom.DOMException $r20;
        int $i1;
        java.lang.String r4, $r7, $r10, $r12, $r13, $r15, $r17;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r5, $r6, $r8, $r9, $r11, $r14, $r16;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r4 := @parameter0: java.lang.String;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r15 = interfaceinvoke $r14.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r16 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r17 = interfaceinvoke $r16.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r5 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r8 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r20 = new org.w3c.dom.DOMException;

        specialinvoke $r20.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r20;

     label4:
        $r13 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void redFloatValueChanged(short, float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0, s1;
        java.lang.StringBuffer $r20;
        org.w3c.dom.DOMException $r21;
        int $i2;
        java.lang.String $r4, $r7, $r10, $r12, $r13, $r14, $r16, $r18;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r5, $r6, $r8, $r9, $r11, $r15, $r17;
        float f0;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        s1 := @parameter0: short;

        f0 := @parameter1: float;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i2 = (int) $s0;

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r14 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r15 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r16 = interfaceinvoke $r15.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r17 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r18 = interfaceinvoke $r17.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r4 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r5 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r7 = interfaceinvoke $r6.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r8 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r21 = new org.w3c.dom.DOMException;

        specialinvoke $r21.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r21;

     label4:
        $r13 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void greenTextChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0;
        java.lang.StringBuffer $r19;
        org.w3c.dom.DOMException $r20;
        int $i1;
        java.lang.String $r6, r7, $r10, $r12, $r13, $r15, $r17;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r4, $r5, $r8, $r9, $r11, $r14, $r16;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r7 := @parameter0: java.lang.String;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r15 = interfaceinvoke $r14.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r16 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r17 = interfaceinvoke $r16.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r8 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r20 = new org.w3c.dom.DOMException;

        specialinvoke $r20.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r20;

     label4:
        $r13 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void greenFloatValueChanged(short, float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0, s1;
        java.lang.StringBuffer $r20;
        org.w3c.dom.DOMException $r21;
        int $i2;
        java.lang.String $r6, $r7, $r10, $r12, $r13, $r15, $r16, $r18;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r4, $r5, $r8, $r9, $r11, $r14, $r17;
        float f0;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        s1 := @parameter0: short;

        f0 := @parameter1: float;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i2 = (int) $s0;

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r15 = interfaceinvoke $r14.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r16 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r17 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r18 = interfaceinvoke $r17.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r8 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getBlue()>();

        $r10 = interfaceinvoke $r9.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r21 = new org.w3c.dom.DOMException;

        specialinvoke $r21.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r21;

     label4:
        $r13 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void blueTextChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0;
        java.lang.StringBuffer $r19;
        org.w3c.dom.DOMException $r20;
        int $i1;
        java.lang.String $r6, $r9, r10, $r12, $r13, $r15, $r17;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r4, $r5, $r7, $r8, $r11, $r14, $r16;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r10 := @parameter0: java.lang.String;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r15 = interfaceinvoke $r14.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r16 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r17 = interfaceinvoke $r16.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r8 = interfaceinvoke $r7.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r20 = new org.w3c.dom.DOMException;

        specialinvoke $r20.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r20;

     label4:
        $r13 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void blueFloatValueChanged(short, float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r1;
        short $s0, s1;
        java.lang.StringBuffer $r20;
        org.w3c.dom.DOMException $r21;
        int $i2;
        java.lang.String $r6, $r9, $r10, $r12, $r13, $r15, $r17, $r18;
        org.apache.batik.css.dom.CSSOMSVGColor $r3;
        org.apache.batik.css.engine.value.Value $r2, $r4, $r5, $r7, $r8, $r11, $r14, $r16;
        float f0;

        r1 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        s1 := @parameter0: short;

        f0 := @parameter1: float;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r3 = r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r3.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i2 = (int) $s0;

        lookupswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r14 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r15 = interfaceinvoke $r14.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r16 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r17 = interfaceinvoke $r16.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r18 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label4;

     label2:
        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rgb(");

        $r4 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getRed()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r8 = interfaceinvoke $r7.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value getGreen()>();

        $r9 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r10 = staticinvoke <org.apache.batik.css.engine.value.FloatValue: java.lang.String getCssText(short,float)>(s1, f0);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r11 = interfaceinvoke $r2.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r12 = interfaceinvoke $r11.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        goto label4;

     label3:
        $r21 = new org.w3c.dom.DOMException;

        specialinvoke $r21.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r21;

     label4:
        $r13 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r13);

        return;
    }

    public void rgbColorChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        org.apache.batik.css.dom.CSSOMSVGColor $r1;
        org.apache.batik.css.engine.value.Value $r4, $r5;
        short $s0;
        java.lang.StringBuffer $r3, $r7, $r10;
        org.w3c.dom.DOMException $r11;
        int $i1;
        java.lang.String $r6, r9;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r9 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        goto label4;

     label2:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r4 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label3:
        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r11;

     label4:
        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>(r9);

        return;
    }

    public void rgbColorICCColorChanged(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        org.apache.batik.css.dom.CSSOMSVGColor $r1;
        short $s0;
        java.lang.StringBuffer $r4, $r5, $r7, $r10;
        org.w3c.dom.DOMException $r11;
        int $i1;
        java.lang.String r3, r6, $r8;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r8);

        goto label3;

     label2:
        $r11 = new org.w3c.dom.DOMException;

        specialinvoke $r11.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r11;

     label3:
        return;
    }

    public void colorChanged(short, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short s0;
        java.lang.StringBuffer $r3, $r4, $r6, $r9;
        org.w3c.dom.DOMException $r10;
        int $i1;
        java.lang.String r2, r5, $r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $i1 = (int) s0;

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>("currentcolor");

        goto label5;

     label2:
        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>(r2);

        goto label5;

     label3:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r7);

        goto label5;

     label4:
        $r10 = new org.w3c.dom.DOMException;

        specialinvoke $r10.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "");

        throw $r10;

     label5:
        return;
    }

    public void colorProfileChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int $i1, i2, $i3;
        java.lang.String $r5, r6, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r7;
        float $f0;
        org.apache.batik.css.engine.value.svg.ICCColor r8;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        r6 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i3 = (int) $s0;

        lookupswitch($i3)
        {
            case 2: goto label1;
            default: goto label4;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r7 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r8 = (org.apache.batik.css.engine.value.svg.ICCColor) $r7;

        i2 = 0;

        goto label3;

     label2:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f0 = virtualinvoke r8.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i2);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        i2 = i2 + 1;

     label3:
        $i1 = virtualinvoke r8.<org.apache.batik.css.engine.value.AbstractValue: int getLength()>();

        if i2 < $i1 goto label2;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label5;

     label4:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label5:
        return;
    }

    public void colorsCleared() throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int $i1;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label3;

     label2:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label3:
        return;
    }

    public void colorsInitialized(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int $i1;
        float f0;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label3;

     label2:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label3:
        return;
    }

    public void colorInsertedBefore(float, int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int i1, $i2, i3, i4, $i5;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        float $f0, f1, $f2;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        f1 := @parameter0: float;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i5 = (int) $s0;

        lookupswitch($i5)
        {
            case 2: goto label1;
            default: goto label6;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i3 = 0;

        goto label3;

     label2:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f0 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i3);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label2;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f1);

        i4 = i1;

        goto label5;

     label4:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f2 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i4);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f2);

        i4 = i4 + 1;

     label5:
        $i2 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValue: int getLength()>();

        if i4 < $i2 goto label4;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label7;

     label6:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label7:
        return;
    }

    public void colorReplaced(float, int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int i1, $i2, i3, i4, $i5;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        float $f0, f1, $f2;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        f1 := @parameter0: float;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i5 = (int) $s0;

        lookupswitch($i5)
        {
            case 2: goto label1;
            default: goto label6;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i3 = 0;

        goto label3;

     label2:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f0 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i3);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label2;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f1);

        i4 = i1 + 1;

        goto label5;

     label4:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f2 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i4);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f2);

        i4 = i4 + 1;

     label5:
        $i2 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValue: int getLength()>();

        if i4 < $i2 goto label4;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label7;

     label6:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label7:
        return;
    }

    public void colorRemoved(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int i1, $i2, i3, i4, $i5;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        float $f0, $f1;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i5 = (int) $s0;

        lookupswitch($i5)
        {
            case 2: goto label1;
            default: goto label6;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i3 = 0;

        goto label3;

     label2:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f0 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i3);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        i3 = i3 + 1;

     label3:
        if i3 < i1 goto label2;

        i4 = i1 + 1;

        goto label5;

     label4:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f1 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i4);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        i4 = i4 + 1;

     label5:
        $i2 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValue: int getLength()>();

        if i4 < $i2 goto label4;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label7;

     label6:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label7:
        return;
    }

    public void colorAppend(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler r0;
        short $s0;
        java.lang.StringBuffer $r11;
        org.w3c.dom.DOMException $r12;
        int $i1, i2, $i3;
        java.lang.String $r5, $r8, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor $r2;
        org.apache.batik.css.engine.value.Value $r1, $r4, $r6;
        float $f0, f1;
        org.apache.batik.css.engine.value.svg.ICCColor r7;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler;

        f1 := @parameter0: float;

        $r1 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.engine.value.Value getValue()>();

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: org.apache.batik.css.dom.CSSOMSVGColor this$0>;

        $s0 = virtualinvoke $r2.<org.apache.batik.css.dom.CSSOMSVGColor: short getColorType()>();

        $i3 = (int) $s0;

        lookupswitch($i3)
        {
            case 2: goto label1;
            default: goto label4;
        };

     label1:
        $r11 = new java.lang.StringBuffer;

        $r4 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(0);

        $r5 = interfaceinvoke $r4.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" icc-color(");

        $r6 = interfaceinvoke $r1.<org.apache.batik.css.engine.value.Value: org.apache.batik.css.engine.value.Value item(int)>(1);

        r7 = (org.apache.batik.css.engine.value.svg.ICCColor) $r6;

        $r8 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: java.lang.String getColorProfile()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i2 = 0;

        goto label3;

     label2:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $f0 = virtualinvoke r7.<org.apache.batik.css.engine.value.svg.ICCColor: float getColor(int)>(i2);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        i2 = i2 + 1;

     label3:
        $i1 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValue: int getLength()>();

        if i2 < $i1 goto label2;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f1);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r9 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void textChanged(java.lang.String)>($r9);

        goto label5;

     label4:
        $r12 = new org.w3c.dom.DOMException;

        specialinvoke $r12.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r12;

     label5:
        return;
    }

    public abstract void textChanged(java.lang.String) throws org.w3c.dom.DOMException;
}
