public final class org.waveprotocol.wave.model.supplement.ThreadStateSerializer extends java.lang.Object implements org.waveprotocol.wave.model.util.Serializer
{
    private static final org.waveprotocol.wave.model.util.Serializer$EnumSerializer TYPE_SERIALIZER;

    public void <init>()
    {
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.supplement.PrimitiveThreadState fromString(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState $r2;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.supplement.PrimitiveThreadState fromString(java.lang.String,org.waveprotocol.wave.model.supplement.PrimitiveThreadState)>(r1, null);

        return $r2;
    }

    public org.waveprotocol.wave.model.supplement.PrimitiveThreadState fromString(java.lang.String, org.waveprotocol.wave.model.supplement.PrimitiveThreadState)
    {
        java.lang.Integer $r2;
        org.waveprotocol.wave.model.util.Serializer$EnumSerializer $r3;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r5;
        java.lang.Enum $r4;
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState r1, $r7;
        java.lang.String r0;
        org.waveprotocol.wave.model.supplement.ThreadState $r6;

        r5 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.waveprotocol.wave.model.supplement.PrimitiveThreadState;

        if r0 == null goto label1;

        $r3 = <org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.util.Serializer$EnumSerializer TYPE_SERIALIZER>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.util.Serializer$EnumSerializer: java.lang.Enum fromString(java.lang.String)>(r0);

        $r6 = (org.waveprotocol.wave.model.supplement.ThreadState) $r4;

        goto label2;

     label1:
        $r6 = null;

     label2:
        if $r6 == null goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r7 = staticinvoke <org.waveprotocol.wave.model.supplement.PrimitiveThreadState: org.waveprotocol.wave.model.supplement.PrimitiveThreadState of(org.waveprotocol.wave.model.supplement.ThreadState,java.lang.Integer)>($r6, $r2);

        goto label4;

     label3:
        $r7 = r1;

     label4:
        return $r7;
    }

    public java.lang.String toString(org.waveprotocol.wave.model.supplement.PrimitiveThreadState)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState r0;
        java.lang.String $r4;
        org.waveprotocol.wave.model.supplement.ThreadState $r2;
        org.waveprotocol.wave.model.util.Serializer$EnumSerializer $r1;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r3;

        r3 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.PrimitiveThreadState;

        if r0 == null goto label1;

        $r1 = <org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.util.Serializer$EnumSerializer TYPE_SERIALIZER>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.PrimitiveThreadState: org.waveprotocol.wave.model.supplement.ThreadState getState()>();

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.Serializer$EnumSerializer: java.lang.String toString(java.lang.Enum)>($r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public volatile java.lang.Object fromString(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState $r3, $r4;
        java.lang.Object r2;
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.waveprotocol.wave.model.supplement.PrimitiveThreadState) r2;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.supplement.PrimitiveThreadState fromString(java.lang.String,org.waveprotocol.wave.model.supplement.PrimitiveThreadState)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object fromString(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState $r2;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.supplement.PrimitiveThreadState fromString(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.String toString(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveThreadState $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.waveprotocol.wave.model.supplement.ThreadStateSerializer r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.ThreadStateSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.supplement.PrimitiveThreadState) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.supplement.ThreadStateSerializer: java.lang.String toString(org.waveprotocol.wave.model.supplement.PrimitiveThreadState)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.util.Serializer$EnumSerializer $r0;

        $r0 = new org.waveprotocol.wave.model.util.Serializer$EnumSerializer;

        specialinvoke $r0.<org.waveprotocol.wave.model.util.Serializer$EnumSerializer: void <init>(java.lang.Class)>(class "Lorg/waveprotocol/wave/model/supplement/ThreadState;");

        <org.waveprotocol.wave.model.supplement.ThreadStateSerializer: org.waveprotocol.wave.model.util.Serializer$EnumSerializer TYPE_SERIALIZER> = $r0;

        return;
    }
}
