final class com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1 extends java.lang.Object implements com.google.gxp.com.google.common.base.Function
{
    final com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0;

    void <init>(com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1 r0;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker r1;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1;

        r1 := @parameter0: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker;

        r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String apply(com.google.gxp.compiler.base.Parameter)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker $r5, $r12;
        com.google.gxp.compiler.alerts.AlertSink $r13;
        com.google.gxp.compiler.base.Parameter r1;
        java.lang.String $r7, $r8, $r9, $r14;
        boolean $z0;
        java.util.Iterator $r3;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1 r4;
        com.google.gxp.compiler.base.Type $r6;
        com.google.gxp.compiler.base.JavaAnnotation r11;
        java.util.List $r2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r10;

        r4 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1;

        r1 := @parameter0: com.google.gxp.compiler.base.Parameter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("final ");

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.Parameter: java.util.List getJavaAnnotations()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.google.gxp.compiler.base.JavaAnnotation) $r10;

        $r12 = r4.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0>;

        $r13 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker: com.google.gxp.compiler.alerts.AlertSink access$700(com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker)>($r12);

        $r14 = staticinvoke <com.google.gxp.compiler.java.JavaUtil: java.lang.String validateAnnotation(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.JavaAnnotation)>($r13, r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label1;

     label2:
        $r5 = r4.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker this$0>;

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r7 = virtualinvoke $r5.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker: java.lang.String toJavaType(com.google.gxp.compiler.base.Type)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke r1.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.gxp.compiler.base.Parameter $r2;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1 r0;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.Parameter) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$TemplateWorker$1: java.lang.String apply(com.google.gxp.compiler.base.Parameter)>($r2);

        return $r3;
    }
}
