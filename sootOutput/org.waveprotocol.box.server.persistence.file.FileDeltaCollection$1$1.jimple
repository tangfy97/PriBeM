class org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 extends java.lang.Object implements java.util.Iterator
{
    org.waveprotocol.wave.model.util.Pair nextRecord;
    long nextPosition;
    final org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1;

    void <init>(org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1)
    {
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 r0;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1;

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition> = 8L;

        return;
    }

    public void remove()
    {
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.waveprotocol.wave.model.util.Pair next()
    {
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 r0;
        org.waveprotocol.wave.model.util.Pair r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1;

        r1 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.wave.model.util.Pair nextRecord>;

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.wave.model.util.Pair nextRecord> = null;

        return r1;
    }

    public boolean hasNext()
    {
        java.io.RandomAccessFile $r3, $r7, $r18;
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r10;
        java.lang.Integer $r12;
        byte $b2;
        java.lang.Long $r11, $r14;
        org.waveprotocol.wave.util.logging.Log $r20;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 $r1, $r5, $r8, $r16, $r23;
        org.waveprotocol.wave.model.id.WaveletName $r25;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection $r2, $r6, $r9, $r17, $r24;
        java.lang.StringBuilder $r22, $r26, $r27, $r28, $r33;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l8;
        int $i5, $i9;
        java.lang.String $r29;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 r0;
        java.io.IOException $r19, $r30;
        java.lang.RuntimeException $r32;
        org.waveprotocol.wave.model.util.Pair $r4, $r13, $r15;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1>;

        $r2 = $r1.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection this$0>;

        $r3 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: java.io.RandomAccessFile access$000(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>($r2);

        $l0 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>();

        $l1 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition>;

        $b2 = $l0 cmp $l1;

        $i9 = (int) $b2;

        if $i9 > 0 goto label3;

     label2:
        return 0;

     label3:
        goto label5;

     label4:
        $r30 := @caughtexception;

        $r32 = new java.lang.RuntimeException;

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get file position", $r30);

        throw $r32;

     label5:
        $r4 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.wave.model.util.Pair nextRecord>;

        if $r4 != null goto label9;

     label6:
        $r5 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1>;

        $r6 = $r5.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection this$0>;

        $r7 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: java.io.RandomAccessFile access$000(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>($r6);

        $l3 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition>;

        virtualinvoke $r7.<java.io.RandomAccessFile: void seek(long)>($l3);

        $r8 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1>;

        $r9 = $r8.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection this$0>;

        $r10 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta access$100(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>($r9);

        $l4 = virtualinvoke $r10.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: long getAppliedAtVersion()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $i5 = virtualinvoke $r10.<org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta: int size()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r13 = staticinvoke <org.waveprotocol.wave.model.util.Pair: org.waveprotocol.wave.model.util.Pair of(java.lang.Object,java.lang.Object)>($r11, $r12);

        $l6 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r15 = staticinvoke <org.waveprotocol.wave.model.util.Pair: org.waveprotocol.wave.model.util.Pair of(java.lang.Object,java.lang.Object)>($r13, $r14);

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.wave.model.util.Pair nextRecord> = $r15;

        $r16 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1>;

        $r17 = $r16.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection this$0>;

        $r18 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: java.io.RandomAccessFile access$000(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>($r17);

        $l7 = virtualinvoke $r18.<java.io.RandomAccessFile: long getFilePointer()>();

        r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition> = $l7;

     label7:
        goto label9;

     label8:
        $r19 := @caughtexception;

        $r20 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: org.waveprotocol.wave.util.logging.Log access$300()>();

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading delta file for ");

        $r23 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1 this$1>;

        $r24 = $r23.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1: org.waveprotocol.box.server.persistence.file.FileDeltaCollection this$0>;

        $r25 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileDeltaCollection: org.waveprotocol.wave.model.id.WaveletName access$200(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>($r24);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starting at ");

        $l8 = r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: long nextPosition>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r29, $r19);

        return 0;

     label9:
        return 1;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1 r0;
        org.waveprotocol.wave.model.util.Pair $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection$1$1: org.waveprotocol.wave.model.util.Pair next()>();

        return $r1;
    }
}
