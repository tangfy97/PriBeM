public final class org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream extends org.apache.lucene.analysis.TokenStream
{
    private final java.util.List cachedStates;
    private org.apache.lucene.util.AttributeSource$State finalState;
    private java.util.Iterator it;
    private org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter filter;

    private void <init>(org.apache.lucene.util.AttributeSource, org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter r3;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        r3 := @parameter1: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter;

        specialinvoke r0.<org.apache.lucene.analysis.TokenStream: void <init>(org.apache.lucene.util.AttributeSource)>(r1);

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.List cachedStates> = $r2;

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it> = null;

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter filter> = r3;

        return;
    }

    private boolean accept(org.apache.lucene.util.AttributeSource)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter $r2;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        $r2 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter filter>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter: boolean accept(org.apache.lucene.util.AttributeSource)>(r1);

        return $z0;
    }

    private void addState(org.apache.lucene.util.AttributeSource$State)
    {
        java.lang.IllegalStateException $r4;
        java.util.List $r3;
        java.util.Iterator $r1;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State r2;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r2 := @parameter0: org.apache.lucene.util.AttributeSource$State;

        $r1 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it>;

        if $r1 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The tee must be consumed before sinks are consumed.");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.List cachedStates>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    private void setFinalState(org.apache.lucene.util.AttributeSource$State)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State r1;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$State;

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: org.apache.lucene.util.AttributeSource$State finalState> = r1;

        return;
    }

    public final boolean incrementToken()
    {
        java.util.Iterator $r1, $r2, $r3, $r7;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State r5;
        java.util.List $r6;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        $r1 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it>;

        if $r1 != null goto label1;

        $r6 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.List cachedStates>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it> = $r7;

     label1:
        $r2 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.util.AttributeSource$State) $r4;

        virtualinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: void restoreState(org.apache.lucene.util.AttributeSource$State)>(r5);

        return 1;
    }

    public final void end()
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State $r1, $r2;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        $r1 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: org.apache.lucene.util.AttributeSource$State finalState>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: org.apache.lucene.util.AttributeSource$State finalState>;

        virtualinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: void restoreState(org.apache.lucene.util.AttributeSource$State)>($r2);

     label1:
        return;
    }

    public final void reset()
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        $r1 = r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.List cachedStates>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: java.util.Iterator it> = $r2;

        return;
    }

    void <init>(org.apache.lucene.util.AttributeSource, org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter, org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$1)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter r2;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$1 r3;
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource r1;

        r0 := @this: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        r2 := @parameter1: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter;

        r3 := @parameter2: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$1;

        specialinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: void <init>(org.apache.lucene.util.AttributeSource,org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkFilter)>(r1, r2);

        return;
    }

    static boolean access$100(org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream, org.apache.lucene.util.AttributeSource)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource r1;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: boolean accept(org.apache.lucene.util.AttributeSource)>(r1);

        return $z0;
    }

    static void access$200(org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream, org.apache.lucene.util.AttributeSource$State)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State r1;

        r0 := @parameter0: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource$State;

        specialinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: void addState(org.apache.lucene.util.AttributeSource$State)>(r1);

        return;
    }

    static void access$300(org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream, org.apache.lucene.util.AttributeSource$State)
    {
        org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream r0;
        org.apache.lucene.util.AttributeSource$State r1;

        r0 := @parameter0: org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream;

        r1 := @parameter1: org.apache.lucene.util.AttributeSource$State;

        specialinvoke r0.<org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream: void setFinalState(org.apache.lucene.util.AttributeSource$State)>(r1);

        return;
    }
}
