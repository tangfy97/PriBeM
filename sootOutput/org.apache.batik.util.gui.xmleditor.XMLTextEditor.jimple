public class org.apache.batik.util.gui.xmleditor.XMLTextEditor extends javax.swing.JEditorPane
{
    protected javax.swing.undo.UndoManager undoManager;

    public void <init>()
    {
        java.awt.Color $r2;
        org.apache.batik.util.gui.xmleditor.XMLTextEditor$1 $r4;
        org.apache.batik.util.gui.xmleditor.XMLTextEditor r0;
        javax.swing.text.Document $r5;
        org.apache.batik.util.gui.xmleditor.XMLEditorKit $r1;
        javax.swing.undo.UndoManager $r3;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLTextEditor;

        specialinvoke r0.<javax.swing.JEditorPane: void <init>()>();

        $r1 = new org.apache.batik.util.gui.xmleditor.XMLEditorKit;

        specialinvoke $r1.<org.apache.batik.util.gui.xmleditor.XMLEditorKit: void <init>()>();

        virtualinvoke r0.<javax.swing.JEditorPane: void setEditorKitForContentType(java.lang.String,javax.swing.text.EditorKit)>("text/xml", $r1);

        virtualinvoke r0.<javax.swing.JEditorPane: void setContentType(java.lang.String)>("text/xml");

        $r2 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke r0.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r2);

        $r3 = new javax.swing.undo.UndoManager;

        specialinvoke $r3.<javax.swing.undo.UndoManager: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLTextEditor: javax.swing.undo.UndoManager undoManager> = $r3;

        $r4 = new org.apache.batik.util.gui.xmleditor.XMLTextEditor$1;

        specialinvoke $r4.<org.apache.batik.util.gui.xmleditor.XMLTextEditor$1: void <init>(org.apache.batik.util.gui.xmleditor.XMLTextEditor)>(r0);

        $r5 = virtualinvoke r0.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        interfaceinvoke $r5.<javax.swing.text.Document: void addUndoableEditListener(javax.swing.event.UndoableEditListener)>($r4);

        return;
    }

    public void setText(java.lang.String)
    {
        java.lang.String r1;
        javax.swing.undo.UndoManager $r2;
        org.apache.batik.util.gui.xmleditor.XMLTextEditor r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLTextEditor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.swing.JEditorPane: void setText(java.lang.String)>(r1);

        $r2 = r0.<org.apache.batik.util.gui.xmleditor.XMLTextEditor: javax.swing.undo.UndoManager undoManager>;

        virtualinvoke $r2.<javax.swing.undo.UndoManager: void discardAllEdits()>();

        return;
    }

    public void undo()
    {
        javax.swing.undo.UndoManager $r1;
        org.apache.batik.util.gui.xmleditor.XMLTextEditor r0;
        javax.swing.undo.CannotUndoException $r2;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLTextEditor;

     label1:
        $r1 = r0.<org.apache.batik.util.gui.xmleditor.XMLTextEditor: javax.swing.undo.UndoManager undoManager>;

        virtualinvoke $r1.<javax.swing.undo.UndoManager: void undo()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch javax.swing.undo.CannotUndoException from label1 to label2 with label3;
    }

    public void redo()
    {
        javax.swing.undo.UndoManager $r1;
        javax.swing.undo.CannotRedoException $r2;
        org.apache.batik.util.gui.xmleditor.XMLTextEditor r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLTextEditor;

     label1:
        $r1 = r0.<org.apache.batik.util.gui.xmleditor.XMLTextEditor: javax.swing.undo.UndoManager undoManager>;

        virtualinvoke $r1.<javax.swing.undo.UndoManager: void redo()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch javax.swing.undo.CannotRedoException from label1 to label2 with label3;
    }

    public void gotoLine(int)
    {
        org.apache.batik.util.gui.xmleditor.XMLTextEditor r0;
        int i0, $i1;
        javax.swing.text.Document $r1;
        javax.swing.text.Element $r2, $r3;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLTextEditor;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $r2 = interfaceinvoke $r1.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i0);

        if $r3 != null goto label1;

        return;

     label1:
        $i1 = interfaceinvoke $r3.<javax.swing.text.Element: int getStartOffset()>();

        virtualinvoke r0.<javax.swing.text.JTextComponent: void setCaretPosition(int)>($i1);

        return;
    }
}
