public class org.mozilla.javascript.EcmaError extends org.mozilla.javascript.RhinoException
{
    static final long serialVersionUID;
    private java.lang.String errorName;
    private java.lang.String errorMessage;

    void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        org.mozilla.javascript.EcmaError r0;
        int i0, i1;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.mozilla.javascript.EcmaError;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        specialinvoke r0.<org.mozilla.javascript.RhinoException: void <init>()>();

        virtualinvoke r0.<org.mozilla.javascript.EcmaError: void recordErrorOrigin(java.lang.String,int,java.lang.String,int)>(r1, i0, r2, i1);

        r0.<org.mozilla.javascript.EcmaError: java.lang.String errorName> = r3;

        r0.<org.mozilla.javascript.EcmaError: java.lang.String errorMessage> = r4;

        return;
    }

    public void <init>(org.mozilla.javascript.Scriptable, java.lang.String, int, int, java.lang.String)
    {
        org.mozilla.javascript.EcmaError r0;
        org.mozilla.javascript.Scriptable r1;
        int i0, i1;
        java.lang.String $r2, r3, r4;

        r0 := @this: org.mozilla.javascript.EcmaError;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        specialinvoke r0.<org.mozilla.javascript.EcmaError: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>("InternalError", $r2, r3, i0, r4, i1);

        return;
    }

    public java.lang.String details()
    {
        org.mozilla.javascript.EcmaError r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.mozilla.javascript.EcmaError;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.mozilla.javascript.EcmaError: java.lang.String errorName>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r5 = r1.<org.mozilla.javascript.EcmaError: java.lang.String errorMessage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getName()
    {
        org.mozilla.javascript.EcmaError r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $r1 = r0.<org.mozilla.javascript.EcmaError: java.lang.String errorName>;

        return $r1;
    }

    public java.lang.String getErrorMessage()
    {
        org.mozilla.javascript.EcmaError r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $r1 = r0.<org.mozilla.javascript.EcmaError: java.lang.String errorMessage>;

        return $r1;
    }

    public java.lang.String getSourceName()
    {
        org.mozilla.javascript.EcmaError r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.EcmaError: java.lang.String sourceName()>();

        return $r1;
    }

    public int getLineNumber()
    {
        org.mozilla.javascript.EcmaError r0;
        int $i0;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.EcmaError: int lineNumber()>();

        return $i0;
    }

    public int getColumnNumber()
    {
        org.mozilla.javascript.EcmaError r0;
        int $i0;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.EcmaError: int columnNumber()>();

        return $i0;
    }

    public java.lang.String getLineSource()
    {
        org.mozilla.javascript.EcmaError r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.EcmaError;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.EcmaError: java.lang.String lineSource()>();

        return $r1;
    }

    public org.mozilla.javascript.Scriptable getErrorObject()
    {
        org.mozilla.javascript.EcmaError r0;

        r0 := @this: org.mozilla.javascript.EcmaError;

        return null;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.EcmaError: long serialVersionUID> = -6261226256957286699L;

        return;
    }
}
