public class org.apache.xpath.functions.FuncSystemProperty extends org.apache.xpath.functions.FunctionOneArg
{
    static java.lang.String XSLT_PROPERTIES;

    public void <init>()
    {
        org.apache.xpath.functions.FuncSystemProperty r0;

        r0 := @this: org.apache.xpath.functions.FuncSystemProperty;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        java.lang.SecurityException $r21, $r24;
        boolean $z0, $z1, $z2;
        org.apache.xpath.Expression $r2;
        org.apache.xpath.objects.XNumber $r9;
        java.lang.Exception $r19;
        org.apache.xpath.objects.XObject $r3;
        java.lang.Object[] $r14, $r16, $r22, $r25;
        org.apache.xpath.XPathContext r1;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r6, $r7, $r12, $r13, $r17, r27, $r28, $r29, r30;
        org.apache.xpath.functions.FuncSystemProperty r0;
        java.util.Properties $r5;
        org.apache.xpath.objects.XString $r8, $r10, $r15, $r18, $r20, $r23, $r26;
        org.apache.xml.utils.PrefixResolver $r11;

        r0 := @this: org.apache.xpath.functions.FuncSystemProperty;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r4 = virtualinvoke $r3.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(58);

        r27 = "";

        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

        $r6 = <org.apache.xpath.functions.FuncSystemProperty: java.lang.String XSLT_PROPERTIES>;

        virtualinvoke r0.<org.apache.xpath.functions.FuncSystemProperty: void loadPropertyFile(java.lang.String,java.util.Properties)>($r6, $r5);

        if $i0 <= 0 goto label11;

        if $i0 < 0 goto label01;

        $r28 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label02;

     label01:
        $r28 = "";

     label02:
        $r11 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        $r12 = interfaceinvoke $r11.<org.apache.xml.utils.PrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)>($r28);

        if $i0 >= 0 goto label03;

        $r29 = $r4;

        goto label04;

     label03:
        $i2 = $i0 + 1;

        $r29 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i2);

     label04:
        r27 = $r29;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("http://www.w3.org/XSL/Transform");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/XSL/Transform");

        if $z2 == 0 goto label06;

     label05:
        $r13 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r27);

        r30 = $r13;

        if null != $r13 goto label10;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = $r4;

        virtualinvoke r0.<org.apache.xpath.Expression: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_PROPERTY_NOT_SUPPORTED", $r14);

        $r15 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r15;

     label06:
        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = $r12;

        $r16[1] = $r4;

        virtualinvoke r0.<org.apache.xpath.Expression: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_DONT_DO_ANYTHING_WITH_NS", $r16);

     label07:
        $r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r29);

        r30 = $r17;

        if null != $r17 goto label08;

        $r18 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r18;

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = $r4;

        virtualinvoke r0.<org.apache.xpath.Expression: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_SECURITY_EXCEPTION", $r25);

        $r26 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r26;

     label10:
        goto label14;

     label11:
        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r4);

        r30 = $r7;

        if null != $r7 goto label12;

        $r10 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r10;

     label12:
        goto label14;

     label13:
        $r21 := @caughtexception;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = $r4;

        virtualinvoke r0.<org.apache.xpath.Expression: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "WG_SECURITY_EXCEPTION", $r22);

        $r23 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

        return $r23;

     label14:
        $z0 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("version");

        if $z0 == 0 goto label17;

        $i1 = virtualinvoke r30.<java.lang.String: int length()>();

        if $i1 <= 0 goto label17;

     label15:
        $r9 = new org.apache.xpath.objects.XNumber;

        specialinvoke $r9.<org.apache.xpath.objects.XNumber: void <init>(double)>(1.0);

        return $r9;

     label16:
        $r19 := @caughtexception;

        $r20 = new org.apache.xpath.objects.XString;

        specialinvoke $r20.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>(r30);

        return $r20;

     label17:
        $r8 = new org.apache.xpath.objects.XString;

        specialinvoke $r8.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>(r30);

        return $r8;

        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.SecurityException from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label16;
    }

    public void loadPropertyFile(java.lang.String, java.util.Properties)
    {
        org.apache.xml.utils.WrappedRuntimeException $r7;
        org.apache.xpath.functions.FuncSystemProperty r8;
        java.io.BufferedInputStream $r4;
        java.util.Properties r5;
        org.apache.xpath.functions.SecuritySupport $r0;
        java.lang.Exception $r6;
        java.lang.ClassLoader $r1;
        java.lang.String r2;
        java.io.InputStream $r3;

        r8 := @this: org.apache.xpath.functions.FuncSystemProperty;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.util.Properties;

     label1:
        $r0 = staticinvoke <org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()>();

        $r1 = staticinvoke <org.apache.xpath.functions.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r3 = virtualinvoke $r0.<org.apache.xpath.functions.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r1, r2);

        $r4 = new java.io.BufferedInputStream;

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        virtualinvoke r5.<java.util.Properties: void load(java.io.InputStream)>($r4);

        virtualinvoke $r4.<java.io.BufferedInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r7.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.apache.xpath.functions.FuncSystemProperty: java.lang.String XSLT_PROPERTIES> = "org/apache/xalan/res/XSLTInfo.properties";

        return;
    }
}
