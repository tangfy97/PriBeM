class com.mycila.inject.schedule.SchedulingModule$1 extends com.google.inject.matcher.AbstractMatcher
{
    final com.mycila.inject.schedule.SchedulingModule this$0;

    void <init>(com.mycila.inject.schedule.SchedulingModule)
    {
        com.mycila.inject.schedule.SchedulingModule r1;
        com.mycila.inject.schedule.SchedulingModule$1 r0;

        r0 := @this: com.mycila.inject.schedule.SchedulingModule$1;

        r1 := @parameter0: com.mycila.inject.schedule.SchedulingModule;

        r0.<com.mycila.inject.schedule.SchedulingModule$1: com.mycila.inject.schedule.SchedulingModule this$0> = r1;

        specialinvoke r0.<com.google.inject.matcher.AbstractMatcher: void <init>()>();

        return;
    }

    public boolean matches(com.google.inject.TypeLiteral)
    {
        com.mycila.inject.schedule.SchedulingModule$1 r4;
        java.lang.Class $r1, $r2, $r3;
        com.google.inject.TypeLiteral r0;
        boolean $z0, $z1, $z2;

        r4 := @this: com.mycila.inject.schedule.SchedulingModule$1;

        r0 := @parameter0: com.google.inject.TypeLiteral;

        $r1 = virtualinvoke r0.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/mycila/inject/schedule/Cron;");

        if $z0 == 0 goto label1;

        $r2 = class "Ljava/lang/Runnable;";

        $r3 = virtualinvoke r0.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean matches(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.schedule.SchedulingModule$1 r0;
        com.google.inject.TypeLiteral $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.schedule.SchedulingModule$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.inject.TypeLiteral) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.schedule.SchedulingModule$1: boolean matches(com.google.inject.TypeLiteral)>($r2);

        return $z0;
    }
}
