public class org.apache.lucene.search.FieldCache$StringIndex extends java.lang.Object
{
    public final java.lang.String[] lookup;
    public final int[] order;

    public int binarySearchLookup(java.lang.String)
    {
        org.apache.lucene.search.FieldCache$StringIndex r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7;
        java.lang.String r0, $r4;

        r1 := @this: org.apache.lucene.search.FieldCache$StringIndex;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        i6 = 1;

        $r2 = r1.<org.apache.lucene.search.FieldCache$StringIndex: java.lang.String[] lookup>;

        $i0 = lengthof $r2;

        i7 = $i0 - 1;

     label2:
        if i6 > i7 goto label6;

        $i3 = i6 + i7;

        i4 = $i3 >>> 1;

        $r3 = r1.<org.apache.lucene.search.FieldCache$StringIndex: java.lang.String[] lookup>;

        $r4 = $r3[i4];

        $i5 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>(r0);

        if $i5 >= 0 goto label3;

        i6 = i4 + 1;

        goto label5;

     label3:
        if $i5 <= 0 goto label4;

        i7 = i4 - 1;

        goto label5;

     label4:
        return i4;

     label5:
        goto label2;

     label6:
        $i1 = i6 + 1;

        $i2 = neg $i1;

        return $i2;
    }

    public void <init>(int[], java.lang.String[])
    {
        java.lang.String[] r2;
        org.apache.lucene.search.FieldCache$StringIndex r0;
        int[] r1;

        r0 := @this: org.apache.lucene.search.FieldCache$StringIndex;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.search.FieldCache$StringIndex: int[] order> = r1;

        r0.<org.apache.lucene.search.FieldCache$StringIndex: java.lang.String[] lookup> = r2;

        return;
    }
}
