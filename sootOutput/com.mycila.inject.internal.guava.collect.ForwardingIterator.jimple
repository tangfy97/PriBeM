public abstract class com.mycila.inject.internal.guava.collect.ForwardingIterator extends com.mycila.inject.internal.guava.collect.ForwardingObject implements java.util.Iterator
{

    protected void <init>()
    {
        com.mycila.inject.internal.guava.collect.ForwardingIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingIterator;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingObject: void <init>()>();

        return;
    }

    protected abstract java.util.Iterator delegate();

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.ForwardingIterator r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: java.util.Iterator delegate()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object $r2;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.ForwardingIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: java.util.Iterator delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.ForwardingIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: java.util.Iterator delegate()>();

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.ForwardingIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ForwardingIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingIterator: java.util.Iterator delegate()>();

        return $r1;
    }
}
