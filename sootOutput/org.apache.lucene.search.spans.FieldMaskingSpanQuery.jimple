public class org.apache.lucene.search.spans.FieldMaskingSpanQuery extends org.apache.lucene.search.spans.SpanQuery
{
    private org.apache.lucene.search.spans.SpanQuery maskedQuery;
    private java.lang.String field;

    public void <init>(org.apache.lucene.search.spans.SpanQuery, java.lang.String)
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        java.lang.String r2;
        org.apache.lucene.search.spans.SpanQuery r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanQuery;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.search.spans.SpanQuery: void <init>()>();

        r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery> = r1;

        r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String field> = r2;

        return;
    }

    public java.lang.String getField()
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        $r1 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String field>;

        return $r1;
    }

    public org.apache.lucene.search.spans.SpanQuery getMaskedQuery()
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        org.apache.lucene.search.spans.SpanQuery $r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        $r1 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        return $r1;
    }

    public org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits, java.util.Map) throws java.io.IOException
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        java.util.Map r3;
        org.apache.lucene.search.spans.SpanQuery $r4;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.search.spans.Spans $r5;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        r3 := @parameter2: java.util.Map;

        $r4 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits,java.util.Map)>(r1, r2, r3);

        return $r5;
    }

    public void extractTerms(java.util.Set)
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        java.util.Set r1;
        org.apache.lucene.search.spans.SpanQuery $r2;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: void extractTerms(java.util.Set)>(r1);

        return;
    }

    public org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        org.apache.lucene.search.Weight $r3;
        org.apache.lucene.search.spans.SpanQuery $r2;
        org.apache.lucene.search.IndexSearcher r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r1 := @parameter0: org.apache.lucene.search.IndexSearcher;

        $r2 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher)>(r1);

        return $r3;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0, r7;
        org.apache.lucene.search.Query $r3, $r6;
        org.apache.lucene.search.spans.SpanQuery $r2, r4, $r5;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r7 = null;

        $r2 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r1);

        r4 = (org.apache.lucene.search.spans.SpanQuery) $r3;

        $r5 = r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        if r4 == $r5 goto label1;

        $r6 = virtualinvoke r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.Query clone()>();

        r7 = (org.apache.lucene.search.spans.FieldMaskingSpanQuery) $r6;

        r7.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery> = r4;

     label1:
        if r7 == null goto label2;

        return r7;

     label2:
        return r0;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r1;
        float $f0;
        java.lang.StringBuilder $r0;
        java.lang.String r2, $r4, $r5, $r6, $r7;
        org.apache.lucene.search.spans.SpanQuery $r3;

        r1 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mask(");

        $r3 = r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery maskedQuery>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.spans.SpanQuery: java.lang.String toString(java.lang.String)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $f0 = virtualinvoke r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: float getBoost()>();

        $r5 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as ");

        $r6 = r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String field>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r1, r2;
        byte $b0;
        float $f0, $f1;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        org.apache.lucene.search.spans.SpanQuery $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.lucene.search.spans.FieldMaskingSpanQuery) r0;

        $r3 = virtualinvoke r2.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String getField()>();

        $r4 = virtualinvoke r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String getField()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $f0 = virtualinvoke r2.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: float getBoost()>();

        $f1 = virtualinvoke r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: float getBoost()>();

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label2;

        $r5 = virtualinvoke r2.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery getMaskedQuery()>();

        $r6 = virtualinvoke r1.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery getMaskedQuery()>();

        $z2 = virtualinvoke $r5.<org.apache.lucene.search.spans.SpanQuery: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.lucene.search.spans.FieldMaskingSpanQuery r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0;
        java.lang.String $r2;
        org.apache.lucene.search.spans.SpanQuery $r1;

        r0 := @this: org.apache.lucene.search.spans.FieldMaskingSpanQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: org.apache.lucene.search.spans.SpanQuery getMaskedQuery()>();

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.SpanQuery: int hashCode()>();

        $r2 = virtualinvoke r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: java.lang.String getField()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 ^ $i1;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.spans.FieldMaskingSpanQuery: float getBoost()>();

        $i3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        $i4 = $i2 ^ $i3;

        return $i4;
    }
}
