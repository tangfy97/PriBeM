public final class org.apache.poi.hmef.attribute.TNEFStringAttribute extends org.apache.poi.hmef.attribute.TNEFAttribute
{
    private static org.apache.poi.util.POILogger logger;
    private java.lang.String data;

    protected void <init>(int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.poi.hmef.attribute.TNEFStringAttribute r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r3;
        java.io.InputStream r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFStringAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.io.InputStream;

        specialinvoke r0.<org.apache.poi.hmef.attribute.TNEFAttribute: void <init>(int,int,java.io.InputStream)>(i0, i1, r1);

        $r2 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFStringAttribute: byte[] getData()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFStringAttribute: int getType()>();

        if $i2 != 2 goto label1;

        r3 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String getFromUnicodeLE(byte[])>($r2);

        goto label2;

     label1:
        $i3 = lengthof $r2;

        r3 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String getFromCompressedUnicode(byte[],int,int)>($r2, 0, $i3);

     label2:
        $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("\u0000");

        if $z0 == 0 goto label3;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

     label3:
        r0.<org.apache.poi.hmef.attribute.TNEFStringAttribute: java.lang.String data> = r3;

        return;
    }

    public java.lang.String getString()
    {
        org.apache.poi.hmef.attribute.TNEFStringAttribute r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFStringAttribute;

        $r1 = r0.<org.apache.poi.hmef.attribute.TNEFStringAttribute: java.lang.String data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hmef.attribute.TNEFStringAttribute r2;
        org.apache.poi.hmef.attribute.TNEFProperty $r3;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r4, $r9, $r11;

        r2 := @this: org.apache.poi.hmef.attribute.TNEFStringAttribute;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute ");

        $r3 = virtualinvoke r2.<org.apache.poi.hmef.attribute.TNEFStringAttribute: org.apache.poi.hmef.attribute.TNEFProperty getProperty()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hmef.attribute.TNEFProperty: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i0 = virtualinvoke r2.<org.apache.poi.hmef.attribute.TNEFStringAttribute: int getType()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r9 = virtualinvoke r2.<org.apache.poi.hmef.attribute.TNEFStringAttribute: java.lang.String getString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static java.lang.String getAsString(org.apache.poi.hmef.attribute.TNEFAttribute)
    {
        org.apache.poi.hmef.attribute.TNEFAttribute r0;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hmef.attribute.TNEFStringAttribute $r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r4, $r6, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hmef.attribute.TNEFAttribute;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.poi.hmef.attribute.TNEFStringAttribute;

        if $z0 == 0 goto label2;

        $r7 = (org.apache.poi.hmef.attribute.TNEFStringAttribute) r0;

        $r8 = virtualinvoke $r7.<org.apache.poi.hmef.attribute.TNEFStringAttribute: java.lang.String getString()>();

        return $r8;

     label2:
        $r2 = <org.apache.poi.hmef.attribute.TNEFStringAttribute: org.apache.poi.util.POILogger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning, non string property found: ");

        $r4 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFAttribute: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r6);

        return null;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hmef/attribute/TNEFStringAttribute;");

        <org.apache.poi.hmef.attribute.TNEFStringAttribute: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
