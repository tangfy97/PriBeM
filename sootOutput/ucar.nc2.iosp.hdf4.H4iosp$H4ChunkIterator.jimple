class ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator extends java.lang.Object implements ucar.nc2.iosp.LayoutTiled$DataChunkIterator
{
    java.util.List chunks;
    int chunkNo;
    byte[] buffer;
    int segPos;
    int segSize;
    final ucar.nc2.iosp.hdf4.H4iosp this$0;

    void <init>(ucar.nc2.iosp.hdf4.H4iosp, ucar.nc2.iosp.hdf4.H4header$Vinfo)
    {
        ucar.nc2.iosp.hdf4.H4header$Vinfo r2;
        java.util.List $r3;
        ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator r0;
        ucar.nc2.iosp.hdf4.H4iosp r1;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator;

        r1 := @parameter0: ucar.nc2.iosp.hdf4.H4iosp;

        r2 := @parameter1: ucar.nc2.iosp.hdf4.H4header$Vinfo;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: ucar.nc2.iosp.hdf4.H4iosp this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r2.<ucar.nc2.iosp.hdf4.H4header$Vinfo: java.util.List chunks>;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: java.util.List chunks> = $r3;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: int chunkNo> = 0;

        return;
    }

    public boolean hasNext()
    {
        java.util.List $r1;
        ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator;

        $i0 = r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: int chunkNo>;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: java.util.List chunks>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public ucar.nc2.iosp.LayoutTiled$DataChunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator r0;
        ucar.nc2.iosp.hdf4.H4header$DataChunk r3;
        long $l4;
        java.util.List $r1;
        int[] $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        ucar.nc2.iosp.LayoutTiled$DataChunk $r5;
        ucar.nc2.iosp.hdf4.H4header$TagData r4;

        r0 := @this: ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator;

        $r1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: java.util.List chunks>;

        $i0 = r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: int chunkNo>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (ucar.nc2.iosp.hdf4.H4header$DataChunk) $r2;

        r4 = r3.<ucar.nc2.iosp.hdf4.H4header$DataChunk: ucar.nc2.iosp.hdf4.H4header$TagData data>;

        $i1 = r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: int chunkNo>;

        $i2 = $i1 + 1;

        r0.<ucar.nc2.iosp.hdf4.H4iosp$H4ChunkIterator: int chunkNo> = $i2;

        $r5 = new ucar.nc2.iosp.LayoutTiled$DataChunk;

        $r6 = r3.<ucar.nc2.iosp.hdf4.H4header$DataChunk: int[] origin>;

        $i3 = r4.<ucar.nc2.iosp.hdf4.H4header$TagData: int offset>;

        $l4 = (long) $i3;

        specialinvoke $r5.<ucar.nc2.iosp.LayoutTiled$DataChunk: void <init>(int[],long)>($r6, $l4);

        return $r5;
    }
}
