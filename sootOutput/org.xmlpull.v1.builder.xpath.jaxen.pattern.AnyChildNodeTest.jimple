public class org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest extends org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest
{
    private static org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest instance;

    public static org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest getInstance()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest $r0;

        $r0 = <org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest instance>;

        return $r0;
    }

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest: void <init>()>();

        return;
    }

    public boolean matches(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Context)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest r3;
        org.xmlpull.v1.builder.xpath.jaxen.Context r0;
        short $s0;
        int $i1, $i2, $i3;
        java.lang.Object r2;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r1;
        boolean $z0;

        r3 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $s0 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: short getNodeType(java.lang.Object)>(r2);

        if $s0 == 1 goto label1;

        $i1 = (int) $s0;

        if $i1 == 3 goto label1;

        $i2 = (int) $s0;

        if $i2 == 8 goto label1;

        $i3 = (int) $s0;

        if $i3 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public double getPriority()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        return -0.5;
    }

    public short getMatchType()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        return 0;
    }

    public java.lang.String getText()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        return "*";
    }

    static void <clinit>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest $r0;

        $r0 = new org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest: void <init>()>();

        <org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest: org.xmlpull.v1.builder.xpath.jaxen.pattern.AnyChildNodeTest instance> = $r0;

        return;
    }
}
