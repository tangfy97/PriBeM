public abstract class org.apache.lucene.search.LiveFieldValues extends java.lang.Object implements org.apache.lucene.search.ReferenceManager$RefreshListener, java.io.Closeable
{
    private volatile java.util.Map current;
    private volatile java.util.Map old;
    private final org.apache.lucene.search.ReferenceManager mgr;
    private final java.lang.Object missingValue;

    public void <init>(org.apache.lucene.search.ReferenceManager, java.lang.Object)
    {
        org.apache.lucene.search.LiveFieldValues r0;
        java.util.concurrent.ConcurrentHashMap $r1, $r2;
        java.lang.Object r3;
        org.apache.lucene.search.ReferenceManager r4;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        r4 := @parameter0: org.apache.lucene.search.ReferenceManager;

        r3 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map old> = $r2;

        r0.<org.apache.lucene.search.LiveFieldValues: java.lang.Object missingValue> = r3;

        r0.<org.apache.lucene.search.LiveFieldValues: org.apache.lucene.search.ReferenceManager mgr> = r4;

        virtualinvoke r4.<org.apache.lucene.search.ReferenceManager: void addListener(org.apache.lucene.search.ReferenceManager$RefreshListener)>(r0);

        return;
    }

    public void close()
    {
        org.apache.lucene.search.LiveFieldValues r0;
        org.apache.lucene.search.ReferenceManager $r1;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        $r1 = r0.<org.apache.lucene.search.LiveFieldValues: org.apache.lucene.search.ReferenceManager mgr>;

        virtualinvoke $r1.<org.apache.lucene.search.ReferenceManager: void removeListener(org.apache.lucene.search.ReferenceManager$RefreshListener)>(r0);

        return;
    }

    public void beforeRefresh() throws java.io.IOException
    {
        org.apache.lucene.search.LiveFieldValues r0;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        $r1 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current>;

        r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map old> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current> = $r2;

        return;
    }

    public void afterRefresh(boolean) throws java.io.IOException
    {
        org.apache.lucene.search.LiveFieldValues r0;
        java.util.concurrent.ConcurrentHashMap $r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        z0 := @parameter0: boolean;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map old> = $r1;

        return;
    }

    public void add(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        org.apache.lucene.search.LiveFieldValues r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void delete(java.lang.String)
    {
        java.util.Map $r3;
        org.apache.lucene.search.LiveFieldValues r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current>;

        $r2 = r0.<org.apache.lucene.search.LiveFieldValues: java.lang.Object missingValue>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public int size()
    {
        java.util.Map $r1, $r2;
        org.apache.lucene.search.LiveFieldValues r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        $r1 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r2 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map old>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public java.lang.Object get(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r13;
        org.apache.lucene.search.ReferenceManager $r8, $r12, $r14;
        java.util.Map $r2, $r5;
        org.apache.lucene.search.LiveFieldValues r0;
        java.lang.Object $r3, $r4, $r6, $r7, $r9, $r11;
        java.lang.String r1;
        org.apache.lucene.search.IndexSearcher r10;

        r0 := @this: org.apache.lucene.search.LiveFieldValues;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map current>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.lucene.search.LiveFieldValues: java.lang.Object missingValue>;

        if $r3 != $r4 goto label1;

        return null;

     label1:
        if $r3 == null goto label2;

        return $r3;

     label2:
        $r5 = r0.<org.apache.lucene.search.LiveFieldValues: java.util.Map old>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = r0.<org.apache.lucene.search.LiveFieldValues: java.lang.Object missingValue>;

        if $r6 != $r7 goto label3;

        return null;

     label3:
        if $r6 == null goto label4;

        return $r6;

     label4:
        $r8 = r0.<org.apache.lucene.search.LiveFieldValues: org.apache.lucene.search.ReferenceManager mgr>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.search.ReferenceManager: java.lang.Object acquire()>();

        r10 = (org.apache.lucene.search.IndexSearcher) $r9;

     label5:
        $r11 = virtualinvoke r0.<org.apache.lucene.search.LiveFieldValues: java.lang.Object lookupFromSearcher(org.apache.lucene.search.IndexSearcher,java.lang.String)>(r10, r1);

     label6:
        $r12 = r0.<org.apache.lucene.search.LiveFieldValues: org.apache.lucene.search.ReferenceManager mgr>;

        virtualinvoke $r12.<org.apache.lucene.search.ReferenceManager: void release(java.lang.Object)>(r10);

        return $r11;

     label7:
        $r13 := @caughtexception;

     label8:
        $r14 = r0.<org.apache.lucene.search.LiveFieldValues: org.apache.lucene.search.ReferenceManager mgr>;

        virtualinvoke $r14.<org.apache.lucene.search.ReferenceManager: void release(java.lang.Object)>(r10);

        throw $r13;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected abstract java.lang.Object lookupFromSearcher(org.apache.lucene.search.IndexSearcher, java.lang.String) throws java.io.IOException;
}
