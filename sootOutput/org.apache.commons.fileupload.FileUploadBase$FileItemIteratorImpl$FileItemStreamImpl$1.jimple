class org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1 extends org.apache.commons.fileupload.util.LimitedInputStream
{
    private final org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl val$this$1;
    private final org.apache.commons.fileupload.MultipartStream$ItemInputStream val$itemStream;
    private final org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl this$2;

    void <init>(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl, java.io.InputStream, long, org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl, org.apache.commons.fileupload.MultipartStream$ItemInputStream)
    {
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl r3;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1 r0;
        org.apache.commons.fileupload.MultipartStream$ItemInputStream r4;
        long l0;
        java.io.InputStream r1;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl r2;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1;

        r2 := @parameter0: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;

        r1 := @parameter1: java.io.InputStream;

        l0 := @parameter2: long;

        r3 := @parameter3: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl;

        r4 := @parameter4: org.apache.commons.fileupload.MultipartStream$ItemInputStream;

        specialinvoke r0.<org.apache.commons.fileupload.util.LimitedInputStream: void <init>(java.io.InputStream,long)>(r1, l0);

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl this$2> = r2;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl val$this$1> = r3;

        r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.MultipartStream$ItemInputStream val$itemStream> = r4;

        return;
    }

    protected void raiseError(long, long) throws java.io.IOException
    {
        org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException $r2;
        long l0, l1;
        org.apache.commons.fileupload.FileUploadBase$FileUploadIOException $r17;
        org.apache.commons.fileupload.MultipartStream$ItemInputStream $r1;
        java.lang.StringBuffer $r3, $r4, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r6, $r12, $r14, $r16;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl $r5, $r13, $r15;
        org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1 r0;

        r0 := @this: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.MultipartStream$ItemInputStream val$itemStream>;

        virtualinvoke $r1.<org.apache.commons.fileupload.MultipartStream$ItemInputStream: void close(boolean)>(1);

        $r2 = new org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The field ");

        $r5 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl this$2>;

        $r6 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String access$400(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" exceeds its maximum permitted ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" size of ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" bytes.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void <init>(java.lang.String,long,long)>($r12, l1, l0);

        $r13 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl this$2>;

        $r14 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String access$400(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)>($r13);

        virtualinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFieldName(java.lang.String)>($r14);

        $r15 = r0.<org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1: org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl this$2>;

        $r16 = staticinvoke <org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl: java.lang.String access$000(org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl)>($r15);

        virtualinvoke $r2.<org.apache.commons.fileupload.FileUploadBase$FileSizeLimitExceededException: void setFileName(java.lang.String)>($r16);

        $r17 = new org.apache.commons.fileupload.FileUploadBase$FileUploadIOException;

        specialinvoke $r17.<org.apache.commons.fileupload.FileUploadBase$FileUploadIOException: void <init>(org.apache.commons.fileupload.FileUploadException)>($r2);

        throw $r17;
    }
}
