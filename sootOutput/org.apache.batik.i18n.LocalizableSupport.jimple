public class org.apache.batik.i18n.LocalizableSupport extends java.lang.Object implements org.apache.batik.i18n.Localizable
{
    protected org.apache.batik.i18n.LocaleGroup localeGroup;
    protected java.lang.String bundleName;
    protected java.lang.ClassLoader classLoader;
    protected java.util.Locale locale;
    protected java.util.Locale usedLocale;
    java.util.List resourceBundles;
    java.lang.Class lastResourceClass;
    java.lang.Class 'cls';
    static java.lang.Class class$java$lang$Object;

    public void <init>(java.lang.String, java.lang.Class)
    {
        java.lang.Class r2;
        java.lang.String r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.Class, java.lang.ClassLoader)
    {
        org.apache.batik.i18n.LocaleGroup $r1;
        java.lang.Class r4;
        java.lang.String r3;
        java.lang.ClassLoader r5;
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        r5 := @parameter2: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.batik.i18n.LocaleGroup: org.apache.batik.i18n.LocaleGroup DEFAULT>;

        r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles> = $r2;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName> = r3;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class 'cls'> = r4;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.ClassLoader classLoader> = r5;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.i18n.LocalizableSupport: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        org.apache.batik.i18n.LocaleGroup $r1;
        java.lang.String r3;
        java.lang.ClassLoader r4;
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.batik.i18n.LocaleGroup: org.apache.batik.i18n.LocaleGroup DEFAULT>;

        r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles> = $r2;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName> = r3;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.ClassLoader classLoader> = r4;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        java.util.List $r3;
        java.util.Locale r1, $r2;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale locale>;

        if $r2 == r1 goto label1;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale locale> = r1;

        $r3 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass> = null;

     label1:
        return;
    }

    public java.util.Locale getLocale()
    {
        java.util.Locale $r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale locale>;

        return $r1;
    }

    public void setLocaleGroup(org.apache.batik.i18n.LocaleGroup)
    {
        org.apache.batik.i18n.LocaleGroup r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: org.apache.batik.i18n.LocaleGroup;

        r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup> = r1;

        return;
    }

    public org.apache.batik.i18n.LocaleGroup getLocaleGroup()
    {
        org.apache.batik.i18n.LocaleGroup $r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup>;

        return $r1;
    }

    public void setDefaultLocale(java.util.Locale)
    {
        org.apache.batik.i18n.LocaleGroup $r2;
        java.util.Locale r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup>;

        virtualinvoke $r2.<org.apache.batik.i18n.LocaleGroup: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public java.util.Locale getDefaultLocale()
    {
        org.apache.batik.i18n.LocaleGroup $r1;
        java.util.Locale $r2;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup>;

        $r2 = virtualinvoke $r1.<org.apache.batik.i18n.LocaleGroup: java.util.Locale getLocale()>();

        return $r2;
    }

    public java.lang.String formatMessage(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.lang.String r1, $r2, $r4;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r2 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String getString(java.lang.String)>(r1);

        $r4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, r3);

        return $r4;
    }

    protected java.util.Locale getCurrentLocale()
    {
        org.apache.batik.i18n.LocaleGroup $r2;
        java.util.Locale $r1, $r3, $r4, $r5;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale locale>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale locale>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.batik.i18n.LocalizableSupport: org.apache.batik.i18n.LocaleGroup localeGroup>;

        $r3 = virtualinvoke $r2.<org.apache.batik.i18n.LocaleGroup: java.util.Locale getLocale()>();

        if $r3 == null goto label2;

        return $r3;

     label2:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r4;
    }

    protected boolean setUsedLocale()
    {
        java.util.List $r3;
        java.util.Locale $r1, $r2;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale getCurrentLocale()>();

        $r2 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale usedLocale>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale usedLocale> = $r1;

        $r3 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass> = null;

        return 1;
    }

    public java.util.ResourceBundle getResourceBundle()
    {
        java.util.ResourceBundle $r1;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        $r1 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.util.ResourceBundle getResourceBundle(int)>(0);

        return $r1;
    }

    protected boolean hasNextResourceBundle(int)
    {
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.List $r1;
        int i0, $i1;
        java.lang.Class $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        return 1;

     label2:
        $r2 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        if $r2 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        $r3 = <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object>;

        if $r3 != null goto label4;

        $r5 = staticinvoke <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object> = $r5;

        goto label5;

     label4:
        $r5 = <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object>;

     label5:
        if $r4 != $r5 goto label6;

        return 0;

     label6:
        return 1;
    }

    protected java.util.ResourceBundle lookupResourceBundle(java.lang.String, java.lang.Class)
    {
        java.util.MissingResourceException $r6, $r8;
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.ResourceBundle r10;
        java.util.Locale $r3, $r5;
        java.lang.Class r1, $r4;
        java.lang.SecurityException $r7;
        java.lang.String r2;
        java.lang.ClassLoader r9;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r9 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.ClassLoader classLoader>;

        r10 = null;

        if r9 == null goto label05;

     label01:
        $r5 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale usedLocale>;

        r10 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>(r2, $r5, r9);

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

     label04:
        if r10 == null goto label05;

        return r10;

     label05:
        if r1 == null goto label09;

     label06:
        r9 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label07:
        goto label09;

     label08:
        $r7 := @caughtexception;

     label09:
        if r9 != null goto label10;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r9 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label10:
        $r3 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.Locale usedLocale>;

        r10 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>(r2, $r3, r9);

     label11:
        goto label13;

     label12:
        $r6 := @caughtexception;

     label13:
        return r10;

        catch java.util.MissingResourceException from label01 to label02 with label03;
        catch java.lang.SecurityException from label06 to label07 with label08;
        catch java.util.MissingResourceException from label10 to label11 with label12;
    }

    protected java.util.ResourceBundle getResourceBundle(int)
    {
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.List $r15, $r19, $r22, $r23, $r28, $r30;
        java.util.ResourceBundle $r16, $r21, $r25, $r27;
        java.lang.StringBuffer $r7, $r10, $r11, $r13;
        int i0, $i1, $i2;
        java.lang.String $r9, $r12, $r14, $r26;
        java.lang.Package $r8;
        java.lang.Class $r1, $r2, $r3, $r4, $r5, $r6, $r17, $r18, $r29;
        java.lang.Object $r20, $r24;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: boolean setUsedLocale()>();

        $r1 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class 'cls'>;

        if $r1 != null goto label8;

        $r22 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $i1 = interfaceinvoke $r22.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        $r26 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName>;

        $r27 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.util.ResourceBundle lookupResourceBundle(java.lang.String,java.lang.Class)>($r26, null);

        $r28 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r27);

     label1:
        $r23 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(0);

        $r25 = (java.util.ResourceBundle) $r24;

        return $r25;

     label2:
        $r3 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        $r2 = <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object>;

        if $r2 != null goto label3;

        $r29 = staticinvoke <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object> = $r29;

        goto label4;

     label3:
        $r29 = <org.apache.batik.i18n.LocalizableSupport: java.lang.Class class$java$lang$Object>;

     label4:
        if $r3 != $r29 goto label5;

        return null;

     label5:
        $r4 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        if $r4 != null goto label6;

        $r17 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class 'cls'>;

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass> = $r17;

        goto label7;

     label6:
        $r5 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getSuperclass()>();

        r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass> = $r6;

     label7:
        $r18 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class lastResourceClass>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r18.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke $r8.<java.lang.Package: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $r16 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.util.ResourceBundle lookupResourceBundle(java.lang.String,java.lang.Class)>($r14, $r18);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

     label8:
        $r30 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $i2 = interfaceinvoke $r30.<java.util.List: int size()>();

        if i0 >= $i2 goto label2;

        $r19 = r0.<org.apache.batik.i18n.LocalizableSupport: java.util.List resourceBundles>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i0);

        $r21 = (java.util.ResourceBundle) $r20;

        return $r21;
    }

    public java.lang.String getString(java.lang.String) throws java.util.MissingResourceException
    {
        java.util.MissingResourceException $r5, $r11;
        org.apache.batik.i18n.LocalizableSupport r0;
        java.util.ResourceBundle $r1;
        java.lang.StringBuffer $r6, $r7, $r8;
        int i0;
        java.lang.Class $r4, $r10;
        java.lang.String r2, $r3, $r9, $r12;
        boolean $z0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: boolean setUsedLocale()>();

        i0 = 0;

        goto label6;

     label1:
        $r1 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.util.ResourceBundle getResourceBundle(int)>(i0);

        if $r1 != null goto label2;

        goto label5;

     label2:
        $r3 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r2);

        if $r3 == null goto label3;

        return $r3;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        i0 = i0 + 1;

     label6:
        $z0 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: boolean hasNextResourceBundle(int)>(i0);

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class 'cls'>;

        if $r4 == null goto label7;

        $r10 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.Class 'cls'>;

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.String toString()>();

        goto label8;

     label7:
        $r12 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName>;

     label8:
        $r5 = new java.util.MissingResourceException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find resource: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, $r12, r2);

        throw $r5;

        catch java.util.MissingResourceException from label2 to label3 with label4;
    }

    public int getInteger(java.lang.String) throws java.util.MissingResourceException
    {
        int $i0;
        java.util.MissingResourceException $r4;
        java.lang.NumberFormatException $r3;
        java.lang.String r1, $r2, $r5;
        org.apache.batik.i18n.LocalizableSupport r0;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String getString(java.lang.String)>(r1);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i0;

     label2:
        $r3 := @caughtexception;

        $r4 = new java.util.MissingResourceException;

        $r5 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName>;

        specialinvoke $r4.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Malformed integer", $r5, r1);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    public int getCharacter(java.lang.String) throws java.util.MissingResourceException
    {
        java.util.MissingResourceException $r5;
        char $c1;
        org.apache.batik.i18n.LocalizableSupport r0;
        int $i0, $i2;
        java.lang.String r1, $r2, $r4;

        r0 := @this: org.apache.batik.i18n.LocalizableSupport;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String getString(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r5 = new java.util.MissingResourceException;

        $r4 = r0.<org.apache.batik.i18n.LocalizableSupport: java.lang.String bundleName>;

        specialinvoke $r5.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Malformed character", $r4, r1);

        throw $r5;

     label2:
        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        return $i2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
