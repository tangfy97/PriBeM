public class org.apache.pdfbox.io.RandomAccessBuffer extends java.lang.Object implements org.apache.pdfbox.io.RandomAccess, java.io.Closeable
{
    private static final int BUFFER_SIZE;
    private java.util.ArrayList bufferList;
    private byte[] currentBuffer;
    private long pointer;
    private long currentBufferPointer;
    private long size;
    private int bufferListIndex;
    private int bufferListMaxIndex;

    public void <init>()
    {
        byte[] $r2, $r3;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.util.ArrayList $r1, $r4;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList> = $r1;

        $r2 = newarray (byte)[16384];

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r2;

        $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = 0;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = 0;

        return;
    }

    public org.apache.pdfbox.io.RandomAccessBuffer clone()
    {
        byte[] $r6, $r10, r12, r13;
        long $l1, $l2, $l3;
        java.util.ArrayList $r1, $r3, $r4, $r7, $r8, $r14;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        org.apache.pdfbox.io.RandomAccessBuffer $r0, r2;
        java.util.Iterator $r5;
        java.lang.Object $r9, $r11;

        r2 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        $r0 = new org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke $r0.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>()>();

        $r1 = new java.util.ArrayList;

        $r3 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList> = $r1;

        $r4 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r12 = (byte[]) $r11;

        $i8 = lengthof r12;

        r13 = newarray (byte)[$i8];

        $i9 = lengthof r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r13, 0, $i9);

        $r14 = $r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        goto label1;

     label2:
        $r6 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        if $r6 == null goto label3;

        $r8 = $r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $r7 = $r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $i6 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i7 = $i6 - 1;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        $r10 = (byte[]) $r9;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r10;

        goto label4;

     label3:
        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null;

     label4:
        $l1 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l1;

        $l2 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l2;

        $l3 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l3;

        $i4 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i4;

        $i5 = r2.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>;

        $r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i5;

        return $r0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = null;

        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = 0L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = 0;

        return;
    }

    public void seek(long) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        long l0, $l1, $l3;
        java.util.ArrayList $r1;
        int $i2, $i4;
        java.lang.Object $r2;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = l0;

        $l1 = l0 / 16384L;

        $i2 = (int) $l1;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i2;

        $l3 = l0 % 16384L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l3;

        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $i4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r3 = (byte[]) $r2;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3;

        return;
    }

    public long getPosition() throws java.io.IOException
    {
        long $l0;
        org.apache.pdfbox.io.RandomAccessBuffer r0;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        return $l0;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1, $r4;
        long $l0, $l1, $l3, $l5, $l6, $l7, $l8;
        java.util.ArrayList $r2;
        short $s11, $s22;
        byte $b2, $b4, $b10;
        int $i9, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i23;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $b2 = $l1 cmp $l0;

        $i16 = (int) $b2;

        if $i16 < 0 goto label1;

        $i18 = (int) -1;

        return $i18;

     label1:
        $l3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $b4 = $l3 cmp 16384L;

        $i19 = (int) $b4;

        if $i19 < 0 goto label3;

        $i13 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $i12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>;

        if $i13 < $i12 goto label2;

        $i21 = (int) -1;

        return $i21;

     label2:
        $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $i14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $i15 = $i14 + 1;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i15;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i15);

        $r4 = (byte[]) $r3;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r4;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = 0L;

     label3:
        $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l6 = $l5 + 1L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l6;

        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $l8 = $l7 + 1L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l8;

        $i9 = (int) $l7;

        $b10 = $r1[$i9];

        $s22 = (short) $b10;

        $s11 = $s22 & 255;

        $i23 = (int) $s11;

        return $i23;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2, $r3, $r4, $r5;
        byte $b2, $b13, $b30;
        long $l0, $l1, $l4, $l5, $l6, $l7, $l8, $l10, l11, $l12, $l14, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l27, $l32, $l33, l35, l37;
        int i3, i9, i15, $i16, $i24, $i25, $i26, $i28, i29, $i31, i34, i36, $i38, $i39, $i40;
        org.apache.pdfbox.io.RandomAccessBuffer r0;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        r1 := @parameter0: byte[];

        i15 := @parameter1: int;

        i3 := @parameter2: int;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $b2 = $l1 cmp $l0;

        $i38 = (int) $b2;

        if $i38 < 0 goto label1;

        return 0;

     label1:
        $l7 = (long) i3;

        $l5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l6 = $l5 - $l4;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>($l7, $l6);

        i9 = (int) $l8;

        $l10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        l11 = 16384L - $l10;

        $l12 = (long) i9;

        $b13 = $l12 cmp l11;

        $i39 = (int) $b13;

        if $i39 < 0 goto label5;

        $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l23 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i25 = (int) $l23;

        $i24 = (int) l11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i25, r1, i15, $i24);

        $i26 = (int) l11;

        i34 = i15 + $i26;

        $l27 = (long) i3;

        l35 = $l27 - l11;

        $i28 = (int) l35;

        i29 = $i28 / 16384;

        i36 = 0;

     label2:
        if i36 >= i29 goto label3;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>();

        $r5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, i34, 16384);

        i34 = i34 + 16384;

        i36 = i36 + 1;

        goto label2;

     label3:
        l37 = l35 % 16384L;

        $b30 = l37 cmp 0L;

        $i40 = (int) $b30;

        if $i40 <= 0 goto label4;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>();

        $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $i31 = (int) l37;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, i34, $i31);

        $l32 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $l33 = $l32 + l37;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l33;

     label4:
        goto label6;

     label5:
        $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i16 = (int) $l14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i16, r1, i15, i9);

        $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $l17 = (long) i9;

        $l19 = $l18 + $l17;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l19;

     label6:
        $l21 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l20 = (long) i9;

        $l22 = $l21 + $l20;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l22;

        return i9;
    }

    public long length() throws java.io.IOException
    {
        long $l0;
        org.apache.pdfbox.io.RandomAccessBuffer r0;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        return $l0;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1;
        long $l0, $l2, $l3, $l7, $l8, $l9, $l10, $l12, $l14, $l15, $l17, $l18, $l19;
        byte $b1, $b5, $b11, $b13, $b16, $b20;
        int i4, $i6, $i21, $i22, $i23, $i24, $i25;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.io.IOException $r4, $r5;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        i4 := @parameter0: int;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $b1 = $l0 cmp 16384L;

        $i21 = (int) $b1;

        if $i21 < 0 goto label2;

        $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l19 = $l18 + 16384L;

        $b20 = $l19 cmp 2147483647L;

        $i22 = (int) $b20;

        if $i22 < 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("RandomAccessBuffer overflow");

        throw $r4;

     label1:
        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>();

     label2:
        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $l3 = $l2 + 1L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l3;

        $i6 = (int) $l2;

        $b5 = (byte) i4;

        $r1[$i6] = $b5;

        $l7 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l8 = $l7 + 1L;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l8;

        $l10 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $b11 = $l10 cmp $l9;

        $i23 = (int) $b11;

        if $i23 <= 0 goto label3;

        $l17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l17;

     label3:
        $l12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $b13 = $l12 cmp 16384L;

        $i24 = (int) $b13;

        if $i24 < 0 goto label5;

        $l14 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l15 = $l14 + 16384L;

        $b16 = $l15 cmp 2147483647L;

        $i25 = (int) $b16;

        if $i25 < 0 goto label4;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("RandomAccessBuffer overflow");

        throw $r5;

     label4:
        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>();

     label5:
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1, $r2, $r3, $r4, $r5;
        byte $b7, $b19, $b21, $b31, $b32;
        long $l1, $l2, l3, $l4, l5, $l6, $l9, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l20, $l22, $l26, $l30, $l33, $l36, l39, l41;
        int i0, i8, $i10, $i23, $i24, $i25, $i27, i28, $i29, $i34, $i35, $i37, i38, i40, $i42, $i43, $i44, $i45, $i46;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.io.IOException $r7;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void checkClosed()>();

        $l2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l1 = (long) i0;

        l3 = $l2 + $l1;

        $l4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        l5 = 16384L - $l4;

        $l6 = (long) i0;

        $b7 = $l6 cmp l5;

        $i42 = (int) $b7;

        if $i42 < 0 goto label6;

        $b21 = l3 cmp 2147483647L;

        $i43 = (int) $b21;

        if $i43 <= 0 goto label1;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("RandomAccessBuffer overflow");

        throw $r7;

     label1:
        $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l22 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i24 = (int) $l22;

        $i23 = (int) l5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r3, $i24, $i23);

        $i25 = (int) l5;

        i38 = i8 + $i25;

        $l26 = (long) i0;

        l39 = $l26 - l5;

        $i27 = (int) l39;

        i28 = $i27 / 16384;

        i40 = 0;

     label2:
        if i40 >= i28 goto label3;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>();

        $r5 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l36 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i37 = (int) $l36;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i38, $r5, $i37, 16384);

        i38 = i38 + 16384;

        i40 = i40 + 1;

        goto label2;

     label3:
        $i29 = i28 * 16384;

        $l30 = (long) $i29;

        l41 = l39 - $l30;

        $b31 = l41 cmp 0L;

        $i44 = (int) $b31;

        if $i44 < 0 goto label5;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void expandBuffer()>();

        $b32 = l41 cmp 0L;

        $i45 = (int) $b32;

        if $i45 <= 0 goto label4;

        $r4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l33 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i35 = (int) $l33;

        $i34 = (int) l41;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i38, $r4, $i35, $i34);

     label4:
        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = l41;

     label5:
        goto label7;

     label6:
        $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        $l9 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $i10 = (int) $l9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i8, $r2, $i10, i0);

        $l12 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer>;

        $l11 = (long) i0;

        $l13 = $l12 + $l11;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = $l13;

     label7:
        $l15 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l14 = (long) i0;

        $l16 = $l15 + $l14;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer> = $l16;

        $l18 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        $l17 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size>;

        $b19 = $l18 cmp $l17;

        $i46 = (int) $b19;

        if $i46 <= 0 goto label8;

        $l20 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: long pointer>;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long size> = $l20;

     label8:
        return;
    }

    private void expandBuffer()
    {
        byte[] $r1, $r2;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        $i1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>;

        $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        if $i1 <= $i0 goto label1;

        specialinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: void nextBuffer()>();

        goto label2;

     label1:
        $r1 = newarray (byte)[16384];

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r1;

        $r3 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $r2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = 0L;

        $i2 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex>;

        $i3 = $i2 + 1;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListMaxIndex> = $i3;

        $i4 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $i5 = $i4 + 1;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i5;

     label2:
        return;
    }

    private void nextBuffer()
    {
        byte[] $r3;
        org.apache.pdfbox.io.RandomAccessBuffer r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: long currentBufferPointer> = 0L;

        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: java.util.ArrayList bufferList>;

        $i0 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: int bufferListIndex> = $i1;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (byte[]) $r2;

        r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer> = $r3;

        return;
    }

    private void checkClosed() throws java.io.IOException
    {
        byte[] $r1;
        java.io.IOException $r2;
        org.apache.pdfbox.io.RandomAccessBuffer r0;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        $r1 = r0.<org.apache.pdfbox.io.RandomAccessBuffer: byte[] currentBuffer>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("RandomAccessBuffer already closed");

        throw $r2;

     label1:
        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.pdfbox.io.RandomAccessBuffer r0, $r1;

        r0 := @this: org.apache.pdfbox.io.RandomAccessBuffer;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.io.RandomAccessBuffer: org.apache.pdfbox.io.RandomAccessBuffer clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.io.RandomAccessBuffer: int BUFFER_SIZE> = 16384;

        return;
    }
}
