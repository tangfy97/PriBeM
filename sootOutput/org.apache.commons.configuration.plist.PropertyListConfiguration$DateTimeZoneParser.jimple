class org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser extends org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser
{

    private void <init>()
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser: void <init>(org.apache.commons.configuration.plist.PropertyListConfiguration$1)>(null);

        return;
    }

    public void formatComponent(java.lang.StringBuffer, java.util.Calendar)
    {
        java.util.TimeZone $r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser r3;
        java.util.Calendar r0;
        java.lang.StringBuffer r2;
        int $i0, $i1, $i2, i3, $i5;

        r3 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser;

        r2 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $i0 = virtualinvoke $r1.<java.util.TimeZone: int getRawOffset()>();

        $i5 = (int) 60000;

        i3 = $i0 / $i5;

        if i3 >= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        i3 = neg i3;

        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

     label2:
        $i1 = i3 / 60;

        $i2 = i3 % 60;

        virtualinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser: void padNum(java.lang.StringBuffer,int,int)>(r2, $i1, 2);

        virtualinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser: void padNum(java.lang.StringBuffer,int,int)>(r2, $i2, 2);

        return;
    }

    public int parseComponent(java.lang.String, int, java.util.Calendar) throws org.apache.commons.configuration.plist.ParseException
    {
        java.util.TimeZone $r7;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser r0;
        java.util.Calendar r8;
        java.lang.StringBuffer $r2, $r3, $r5;
        int i0, $i1;
        java.lang.String r1, $r4, $r6;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 := @parameter2: java.util.Calendar;

        virtualinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser: void checkLength(java.lang.String,int,int)>(r1, i0, 5);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GMT");

        $i1 = i0 + 5;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r6);

        virtualinvoke r8.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r7);

        return 5;
    }

    void <init>(org.apache.commons.configuration.plist.PropertyListConfiguration$1)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$1 r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser;

        r1 := @parameter0: org.apache.commons.configuration.plist.PropertyListConfiguration$1;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser: void <init>()>();

        return;
    }
}
