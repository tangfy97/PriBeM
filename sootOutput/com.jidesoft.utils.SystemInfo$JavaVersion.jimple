public class com.jidesoft.utils.SystemInfo$JavaVersion extends java.lang.Object
{
    private static java.util.regex.Pattern SUN_JAVA_VERSION;
    private static java.util.regex.Pattern SUN_JAVA_VERSION_SIMPLE;
    private double _majorVersion;
    private int _minorVersion;
    private int _buildNumber;
    private java.lang.String _patch;

    public void <init>(java.lang.String)
    {
        java.util.regex.Matcher $r3, $r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13, $r15, $r16, $r17;
        java.util.regex.Pattern $r2, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r18, $r22, $r23, $r24, $r26;
        double $d0, $d1;
        java.io.PrintStream $r14;
        java.lang.NumberFormatException $r12, $r19, $r25;
        com.jidesoft.utils.SystemInfo$JavaVersion r0;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion> = 1.4;

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion> = 0;

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _buildNumber> = 0;

     label01:
        $r2 = <com.jidesoft.utils.SystemInfo$JavaVersion: java.util.regex.Pattern SUN_JAVA_VERSION>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label07;

        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int groupCount()>();

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion> = $d0;

        if $i0 < 3 goto label02;

        $r10 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if $r10 == null goto label02;

        $r11 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion> = $i3;

     label02:
        if $i0 < 5 goto label06;

        $r8 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        if $r8 == null goto label06;

     label03:
        $r9 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _buildNumber> = $i2;

     label04:
        goto label06;

     label05:
        $r25 := @caughtexception;

        $r26 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: java.lang.String _patch> = $r26;

     label06:
        if $i0 < 6 goto label07;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        if $r5 == null goto label07;

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        if $r6 == null goto label07;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label07;

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: java.lang.String _patch> = $r6;

     label07:
        goto label12;

     label08:
        $r19 := @caughtexception;

     label09:
        $r20 = <com.jidesoft.utils.SystemInfo$JavaVersion: java.util.regex.Pattern SUN_JAVA_VERSION_SIMPLE>;

        $r21 = virtualinvoke $r20.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke $r21.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label10;

        $i4 = virtualinvoke $r21.<java.util.regex.Matcher: int groupCount()>();

        $r22 = virtualinvoke $r21.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion> = $d1;

        if $i4 < 3 goto label10;

        $r23 = virtualinvoke $r21.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if $r23 == null goto label10;

        $r24 = virtualinvoke $r21.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion> = $i5;

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Please check the installation of your JDK. The version number ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not right.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label12:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label01 to label07 with label08;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public void <init>(double, int, int)
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        int i0, i1;
        double d0;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion> = d0;

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion> = i0;

        r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _buildNumber> = i1;

        return;
    }

    public int compareVersion(double, int, int)
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        byte $b0, $b7, $b8;
        int i1, $i2, i3, i4, $i5, $i6, $i9;
        double d0, $d1, d2;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        d0 := @parameter0: double;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $d1 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion>;

        d2 = $d1 - d0;

        $b0 = d2 cmpl 0.0;

        if $b0 == 0 goto label3;

        $b7 = d2 cmpg 0.0;

        $i9 = (int) $b7;

        if $i9 >= 0 goto label1;

        $b8 = -1;

        goto label2;

     label1:
        $b8 = 1;

     label2:
        return $b8;

     label3:
        $i2 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion>;

        i3 = $i2 - i1;

        if i3 == 0 goto label4;

        return i3;

     label4:
        $i5 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _buildNumber>;

        $i6 = $i5 - i4;

        return $i6;
    }

    public double getMajorVersion()
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        double $d0;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        $d0 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: double _majorVersion>;

        return $d0;
    }

    public int getMinorVersion()
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        int $i0;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        $i0 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _minorVersion>;

        return $i0;
    }

    public int getBuildNumber()
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        int $i0;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        $i0 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: int _buildNumber>;

        return $i0;
    }

    public java.lang.String getPatch()
    {
        com.jidesoft.utils.SystemInfo$JavaVersion r0;
        java.lang.String $r1;

        r0 := @this: com.jidesoft.utils.SystemInfo$JavaVersion;

        $r1 = r0.<com.jidesoft.utils.SystemInfo$JavaVersion: java.lang.String _patch>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+\\.\\d+)(\\.(\\d+))?(_([^-]+))?(.*)");

        <com.jidesoft.utils.SystemInfo$JavaVersion: java.util.regex.Pattern SUN_JAVA_VERSION> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+\\.\\d+)(\\.(\\d+))?(.*)");

        <com.jidesoft.utils.SystemInfo$JavaVersion: java.util.regex.Pattern SUN_JAVA_VERSION_SIMPLE> = $r1;

        return;
    }
}
