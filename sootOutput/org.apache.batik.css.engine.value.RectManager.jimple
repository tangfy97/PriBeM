public abstract class org.apache.batik.css.engine.value.RectManager extends org.apache.batik.css.engine.value.LengthManager
{
    protected int orientation;

    public void <init>()
    {
        org.apache.batik.css.engine.value.RectManager r0;

        r0 := @this: org.apache.batik.css.engine.value.RectManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.LengthManager: void <init>()>();

        return;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.CSSEngine r18;
        short $s0, $s1, $s2, $s3;
        org.w3c.dom.DOMException $r5, $r9, $r13, $r17;
        org.w3c.css.sac.LexicalUnit $r1, $r4, $r6, $r8, $r10, $r12, $r14, r19;
        int $i4;
        java.lang.String $r0;
        boolean $z0;
        org.apache.batik.css.engine.value.RectManager r2;
        org.apache.batik.css.engine.value.RectValue $r20;
        org.apache.batik.css.engine.value.Value $r3, $r7, $r11, $r15;

        r2 := @this: org.apache.batik.css.engine.value.RectManager;

        r19 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r18 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r19.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i4 = (int) $s0;

        lookupswitch($i4)
        {
            case 38: goto label2;
            case 41: goto label1;
            default: goto label9;
        };

     label1:
        $r0 = interfaceinvoke r19.<org.w3c.css.sac.LexicalUnit: java.lang.String getFunctionName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("rect");

        if $z0 != 0 goto label2;

        goto label9;

     label2:
        $r1 = interfaceinvoke r19.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getParameters()>();

        $r3 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.apache.batik.css.engine.value.Value createRectComponent(org.w3c.css.sac.LexicalUnit)>($r1);

        $r4 = interfaceinvoke $r1.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        if $r4 == null goto label3;

        $s1 = interfaceinvoke $r4.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        if $s1 == 0 goto label4;

     label3:
        $r5 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.w3c.dom.DOMException createMalformedRectDOMException()>();

        throw $r5;

     label4:
        $r6 = interfaceinvoke $r4.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        $r7 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.apache.batik.css.engine.value.Value createRectComponent(org.w3c.css.sac.LexicalUnit)>($r6);

        $r8 = interfaceinvoke $r6.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        if $r8 == null goto label5;

        $s2 = interfaceinvoke $r8.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        if $s2 == 0 goto label6;

     label5:
        $r9 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.w3c.dom.DOMException createMalformedRectDOMException()>();

        throw $r9;

     label6:
        $r10 = interfaceinvoke $r8.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        $r11 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.apache.batik.css.engine.value.Value createRectComponent(org.w3c.css.sac.LexicalUnit)>($r10);

        $r12 = interfaceinvoke $r10.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        if $r12 == null goto label7;

        $s3 = interfaceinvoke $r12.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        if $s3 == 0 goto label8;

     label7:
        $r13 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.w3c.dom.DOMException createMalformedRectDOMException()>();

        throw $r13;

     label8:
        $r14 = interfaceinvoke $r12.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        $r15 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.apache.batik.css.engine.value.Value createRectComponent(org.w3c.css.sac.LexicalUnit)>($r14);

        $r20 = new org.apache.batik.css.engine.value.RectValue;

        specialinvoke $r20.<org.apache.batik.css.engine.value.RectValue: void <init>(org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value)>($r3, $r7, $r11, $r15);

        return $r20;

     label9:
        $r17 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.w3c.dom.DOMException createMalformedRectDOMException()>();

        throw $r17;
    }

    private org.apache.batik.css.engine.value.Value createRectComponent(org.w3c.css.sac.LexicalUnit) throws org.w3c.dom.DOMException
    {
        short $s0;
        org.w3c.dom.DOMException $r3;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1, $i2;
        java.lang.String $r1;
        boolean $z0;
        org.apache.batik.css.engine.value.RectManager r2;
        org.apache.batik.css.engine.value.FloatValue $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        org.apache.batik.css.engine.value.Value $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r2 := @this: org.apache.batik.css.engine.value.RectManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i2 = (int) $s0;

        tableswitch($i2)
        {
            case 13: goto label10;
            case 14: goto label11;
            case 15: goto label02;
            case 16: goto label03;
            case 17: goto label04;
            case 18: goto label07;
            case 19: goto label05;
            case 20: goto label06;
            case 21: goto label08;
            case 22: goto label09;
            case 23: goto label12;
            case 24: goto label13;
            case 25: goto label13;
            case 26: goto label13;
            case 27: goto label13;
            case 28: goto label13;
            case 29: goto label13;
            case 30: goto label13;
            case 31: goto label13;
            case 32: goto label13;
            case 33: goto label13;
            case 34: goto label13;
            case 35: goto label01;
            default: goto label13;
        };

     label01:
        $r1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("auto");

        if $z0 == 0 goto label13;

        $r4 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value AUTO_VALUE>;

        return $r4;

     label02:
        $r16 = new org.apache.batik.css.engine.value.FloatValue;

        $f8 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r16.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(3, $f8);

        return $r16;

     label03:
        $r17 = new org.apache.batik.css.engine.value.FloatValue;

        $f7 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r17.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(4, $f7);

        return $r17;

     label04:
        $r18 = new org.apache.batik.css.engine.value.FloatValue;

        $f6 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r18.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(5, $f6);

        return $r18;

     label05:
        $r19 = new org.apache.batik.css.engine.value.FloatValue;

        $f4 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r19.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(6, $f4);

        return $r19;

     label06:
        $r20 = new org.apache.batik.css.engine.value.FloatValue;

        $f3 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r20.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(7, $f3);

        return $r20;

     label07:
        $r21 = new org.apache.batik.css.engine.value.FloatValue;

        $f5 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r21.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(8, $f5);

        return $r21;

     label08:
        $r22 = new org.apache.batik.css.engine.value.FloatValue;

        $f2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r22.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(9, $f2);

        return $r22;

     label09:
        $r23 = new org.apache.batik.css.engine.value.FloatValue;

        $f1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r23.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(10, $f1);

        return $r23;

     label10:
        $r24 = new org.apache.batik.css.engine.value.FloatValue;

        $i1 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: int getIntegerValue()>();

        $f10 = (float) $i1;

        specialinvoke $r24.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f10);

        return $r24;

     label11:
        $r25 = new org.apache.batik.css.engine.value.FloatValue;

        $f9 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r25.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f9);

        return $r25;

     label12:
        $r26 = new org.apache.batik.css.engine.value.FloatValue;

        $f0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: float getFloatValue()>();

        specialinvoke $r26.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(2, $f0);

        return $r26;

     label13:
        $r3 = specialinvoke r2.<org.apache.batik.css.engine.value.RectManager: org.w3c.dom.DOMException createMalformedRectDOMException()>();

        throw $r3;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r3;
        org.apache.batik.css.engine.CSSEngine r5;
        short $s0, $s1;
        org.apache.batik.css.engine.StyleMap r6;
        int i2, $i3;
        java.lang.String r4;
        org.apache.batik.css.engine.value.RectManager r2;
        org.apache.batik.css.engine.value.RectValue r1, $r20;
        org.apache.batik.css.engine.value.Value r0, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r2 := @this: org.apache.batik.css.engine.value.RectManager;

        r3 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i2 := @parameter3: int;

        r6 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getCssValueType()>();

        if $s0 == 1 goto label1;

        return r0;

     label1:
        $s1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i3 = (int) $s1;

        if $i3 == 24 goto label2;

        return r0;

     label2:
        r1 = (org.apache.batik.css.engine.value.RectValue) r0;

        r2.<org.apache.batik.css.engine.value.RectManager: int orientation> = 1;

        $r7 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getTop()>();

        $r8 = specialinvoke r2.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i2, r6, $r7);

        $r9 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getBottom()>();

        $r10 = specialinvoke r2.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i2, r6, $r9);

        r2.<org.apache.batik.css.engine.value.RectManager: int orientation> = 0;

        $r11 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getLeft()>();

        $r12 = specialinvoke r2.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i2, r6, $r11);

        $r13 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getRight()>();

        $r14 = specialinvoke r2.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r3, r4, r5, i2, r6, $r13);

        $r15 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getTop()>();

        if $r8 != $r15 goto label3;

        $r16 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getRight()>();

        if $r14 != $r16 goto label3;

        $r17 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getBottom()>();

        if $r10 != $r17 goto label3;

        $r18 = virtualinvoke r1.<org.apache.batik.css.engine.value.RectValue: org.apache.batik.css.engine.value.Value getLeft()>();

        if $r12 == $r18 goto label4;

     label3:
        $r20 = new org.apache.batik.css.engine.value.RectValue;

        specialinvoke $r20.<org.apache.batik.css.engine.value.RectValue: void <init>(org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value,org.apache.batik.css.engine.value.Value)>($r8, $r14, $r10, $r12);

        return $r20;

     label4:
        return r0;
    }

    protected int getOrientation()
    {
        int $i0;
        org.apache.batik.css.engine.value.RectManager r0;

        r0 := @this: org.apache.batik.css.engine.value.RectManager;

        $i0 = r0.<org.apache.batik.css.engine.value.RectManager: int orientation>;

        return $i0;
    }

    private org.w3c.dom.DOMException createMalformedRectDOMException()
    {
        java.lang.Object[] $r0;
        org.w3c.dom.DOMException $r4;
        java.lang.String $r2, $r3;
        org.apache.batik.css.engine.value.RectManager r1;

        r1 := @this: org.apache.batik.css.engine.value.RectManager;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String getPropertyName()>();

        $r0[0] = $r2;

        $r3 = staticinvoke <org.apache.batik.css.engine.value.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("malformed.rect", $r0);

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(12, $r3);

        return $r4;
    }
}
