public class thredds.inventory.filter.RegExpMatchOnName extends java.lang.Object implements thredds.inventory.MFileFilter
{
    private java.lang.String regExpString;
    private java.util.regex.Pattern pattern;

    public void <init>(java.lang.String)
    {
        thredds.inventory.filter.RegExpMatchOnName r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;

        r0 := @this: thredds.inventory.filter.RegExpMatchOnName;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.inventory.filter.RegExpMatchOnName: java.lang.String regExpString> = r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        r0.<thredds.inventory.filter.RegExpMatchOnName: java.util.regex.Pattern pattern> = $r2;

        return;
    }

    public boolean accept(thredds.inventory.MFile)
    {
        thredds.inventory.MFile r1;
        java.util.regex.Matcher $r4;
        thredds.inventory.filter.RegExpMatchOnName r0;
        java.util.regex.Pattern $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: thredds.inventory.filter.RegExpMatchOnName;

        r1 := @parameter0: thredds.inventory.MFile;

        $r2 = r0.<thredds.inventory.filter.RegExpMatchOnName: java.util.regex.Pattern pattern>;

        $r3 = interfaceinvoke r1.<thredds.inventory.MFile: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }
}
