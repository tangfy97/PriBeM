public class com.jidesoft.swing.JideBorderLayout extends java.lang.Object implements java.awt.LayoutManager2, java.io.Serializable
{
    int hgap;
    int vgap;
    java.awt.Component north;
    java.awt.Component west;
    java.awt.Component east;
    java.awt.Component south;
    java.awt.Component center;
    java.awt.Component firstLine;
    java.awt.Component lastLine;
    java.awt.Component firstItem;
    java.awt.Component lastItem;
    public static final java.lang.String NORTH;
    public static final java.lang.String SOUTH;
    public static final java.lang.String EAST;
    public static final java.lang.String WEST;
    public static final java.lang.String CENTER;
    public static final java.lang.String BEFORE_FIRST_LINE;
    public static final java.lang.String AFTER_LAST_LINE;
    public static final java.lang.String BEFORE_LINE_BEGINS;
    public static final java.lang.String AFTER_LINE_ENDS;
    public static final java.lang.String PAGE_START;
    public static final java.lang.String PAGE_END;
    public static final java.lang.String LINE_START;
    public static final java.lang.String LINE_END;
    private static final long serialVersionUID;

    public void <init>()
    {
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        specialinvoke r0.<com.jidesoft.swing.JideBorderLayout: void <init>(int,int)>(0, 0);

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.swing.JideBorderLayout: int hgap> = i0;

        r0.<com.jidesoft.swing.JideBorderLayout: int vgap> = i1;

        return;
    }

    public int getHgap()
    {
        int $i0;
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        $i0 = r0.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        return $i0;
    }

    public void setHgap(int)
    {
        int i0;
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.JideBorderLayout: int hgap> = i0;

        return;
    }

    public int getVgap()
    {
        int $i0;
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        $i0 = r0.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        return $i0;
    }

    public void setVgap(int)
    {
        int i0;
        com.jidesoft.swing.JideBorderLayout r0;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        i0 := @parameter0: int;

        r0.<com.jidesoft.swing.JideBorderLayout: int vgap> = i0;

        return;
    }

    public void addLayoutComponent(java.awt.Component, java.lang.Object)
    {
        java.lang.Throwable $r6;
        com.jidesoft.swing.JideBorderLayout r3;
        java.lang.IllegalArgumentException $r5;
        java.awt.Component r0;
        java.lang.Object $r1, r2;
        java.lang.String $r4;
        boolean $z0;

        r3 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Component;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label1:
        if r2 == null goto label2;

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label3;

     label2:
        $r4 = (java.lang.String) r2;

        virtualinvoke r3.<com.jidesoft.swing.JideBorderLayout: void addLayoutComponent(java.lang.String,java.awt.Component)>($r4, r0);

        goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cannot add to layout: constraint must be a string (or null)");

        throw $r5;

     label4:
        exitmonitor $r1;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void addLayoutComponent(java.lang.String, java.awt.Component)
    {
        java.lang.Throwable $r17;
        com.jidesoft.swing.JideBorderLayout r16;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r15, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.IllegalArgumentException $r11;
        java.awt.Component r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r12, $r13, $r14;

        r16 := @this: com.jidesoft.swing.JideBorderLayout;

        r18 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Component;

        $r1 = virtualinvoke r0.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label01:
        if r18 != null goto label02;

        r18 = "Center";

     label02:
        $r2 = "Center";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z0 == 0 goto label03;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center> = r0;

        goto label12;

     label03:
        $r3 = "North";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z1 == 0 goto label04;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north> = r0;

        goto label12;

     label04:
        $r4 = "South";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z2 == 0 goto label05;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south> = r0;

        goto label12;

     label05:
        $r5 = "East";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z3 == 0 goto label06;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east> = r0;

        goto label12;

     label06:
        $r6 = "West";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z4 == 0 goto label07;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west> = r0;

        goto label12;

     label07:
        $r7 = "First";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z5 == 0 goto label08;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine> = r0;

        goto label12;

     label08:
        $r8 = "Last";

        $z6 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z6 == 0 goto label09;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine> = r0;

        goto label12;

     label09:
        $r9 = "Before";

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z7 == 0 goto label10;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem> = r0;

        goto label12;

     label10:
        $r10 = "After";

        $z8 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z8 == 0 goto label11;

        r16.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem> = r0;

        goto label12;

     label11:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot add to layout: unknown constraint: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label12:
        exitmonitor $r1;

     label13:
        goto label16;

     label14:
        $r17 := @caughtexception;

        exitmonitor $r1;

     label15:
        throw $r17;

     label16:
        return;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void removeLayoutComponent(java.awt.Component)
    {
        java.lang.Throwable $r11;
        com.jidesoft.swing.JideBorderLayout r2;
        java.awt.Component r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        java.lang.Object $r1;

        r2 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Component;

        $r1 = virtualinvoke r0.<java.awt.Component: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label01:
        $r3 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center>;

        if r0 != $r3 goto label02;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center> = null;

        goto label06;

     label02:
        $r4 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north>;

        if r0 != $r4 goto label03;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north> = null;

        goto label06;

     label03:
        $r5 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south>;

        if r0 != $r5 goto label04;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south> = null;

        goto label06;

     label04:
        $r6 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east>;

        if r0 != $r6 goto label05;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east> = null;

        goto label06;

     label05:
        $r7 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west>;

        if r0 != $r7 goto label06;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west> = null;

     label06:
        $r12 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        if r0 != $r12 goto label07;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine> = null;

        goto label10;

     label07:
        $r8 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        if r0 != $r8 goto label08;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine> = null;

        goto label10;

     label08:
        $r9 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

        if r0 != $r9 goto label09;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem> = null;

        goto label10;

     label09:
        $r10 = r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

        if r0 != $r10 goto label10;

        r2.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem> = null;

     label10:
        exitmonitor $r1;

     label11:
        goto label14;

     label12:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r11;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public java.awt.Component getLayoutComponent(java.lang.Object)
    {
        com.jidesoft.swing.JideBorderLayout r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.awt.Component $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14;
        java.lang.IllegalArgumentException $r10;
        java.lang.Object r0;

        r15 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.lang.Object;

        $r1 = "Center";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r24 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center>;

        return $r24;

     label1:
        $r2 = "North";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r23 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north>;

        return $r23;

     label2:
        $r3 = "South";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r22 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south>;

        return $r22;

     label3:
        $r4 = "West";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label4;

        $r21 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west>;

        return $r21;

     label4:
        $r5 = "East";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label5;

        $r20 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east>;

        return $r20;

     label5:
        $r6 = "First";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

        $r19 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        return $r19;

     label6:
        $r7 = "Last";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z6 == 0 goto label7;

        $r18 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        return $r18;

     label7:
        $r8 = "Before";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z7 == 0 goto label8;

        $r17 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

        return $r17;

     label8:
        $r9 = "After";

        $z8 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z8 == 0 goto label9;

        $r16 = r15.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

        return $r16;

     label9:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot get component: unknown constraint: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;
    }

    public java.awt.Component getLayoutComponent(java.awt.Container, java.lang.Object)
    {
        com.jidesoft.swing.JideBorderLayout r13;
        java.awt.Container r0;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r8;
        java.awt.Component $r14, $r15, $r16, r17, $r18, $r19, $r20;
        java.awt.ComponentOrientation $r1;
        java.lang.Object r2;
        java.lang.StringBuilder $r9, $r10, $r11;

        r13 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Container;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r1.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $r3 = "North";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label03;

        $r15 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        if $r15 == null goto label01;

        $r16 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        goto label02;

     label01:
        $r16 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north>;

     label02:
        r17 = $r16;

        goto label14;

     label03:
        $r4 = "South";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label06;

        $r14 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        if $r14 == null goto label04;

        $r18 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        goto label05;

     label04:
        $r18 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south>;

     label05:
        r17 = $r18;

        goto label14;

     label06:
        $r5 = "West";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label09;

        if $z0 == 0 goto label07;

        $r19 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

        goto label08;

     label07:
        $r19 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

     label08:
        r17 = $r19;

        if $r19 != null goto label14;

        r17 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west>;

        goto label14;

     label09:
        $r6 = "East";

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label12;

        if $z0 == 0 goto label10;

        $r20 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

        goto label11;

     label10:
        $r20 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

     label11:
        r17 = $r20;

        if $r20 != null goto label14;

        r17 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east>;

        goto label14;

     label12:
        $r7 = "Center";

        $z5 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label13;

        r17 = r13.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center>;

        goto label14;

     label13:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot get component: invalid constraint: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label14:
        return r17;
    }

    public java.lang.Object getConstraints(java.awt.Component)
    {
        com.jidesoft.swing.JideBorderLayout r1;
        java.awt.Component r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r1 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Component;

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center>;

        if r0 != $r2 goto label02;

        return "Center";

     label02:
        $r3 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north>;

        if r0 != $r3 goto label03;

        return "North";

     label03:
        $r4 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south>;

        if r0 != $r4 goto label04;

        return "South";

     label04:
        $r5 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west>;

        if r0 != $r5 goto label05;

        return "West";

     label05:
        $r6 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east>;

        if r0 != $r6 goto label06;

        return "East";

     label06:
        $r7 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        if r0 != $r7 goto label07;

        return "First";

     label07:
        $r8 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        if r0 != $r8 goto label08;

        return "Last";

     label08:
        $r9 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

        if r0 != $r9 goto label09;

        return "Before";

     label09:
        $r10 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

        if r0 != $r10 goto label10;

        return "After";

     label10:
        return null;
    }

    public java.awt.Dimension minimumLayoutSize(java.awt.Container)
    {
        java.awt.Component $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r16;
        java.awt.Container r0;
        java.awt.ComponentOrientation $r3;
        com.jidesoft.swing.JideBorderLayout r4;
        boolean $z0;
        java.awt.Dimension $r2, $r11, $r12, $r13, $r14, $r15;
        java.awt.Insets $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47;
        java.lang.Object $r1;

        r4 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Container;

        $r1 = virtualinvoke r0.<java.awt.Container: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label1:
        $r2 = new java.awt.Dimension;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        $r3 = virtualinvoke r0.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r3.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $r5 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("Center", $z0);

        if $r5 == null goto label2;

        $r15 = virtualinvoke $r5.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $i43 = $r2.<java.awt.Dimension: int width>;

        $i42 = $r15.<java.awt.Dimension: int width>;

        $i44 = $i43 + $i42;

        $r2.<java.awt.Dimension: int width> = $i44;

        $i46 = $r15.<java.awt.Dimension: int height>;

        $i45 = $r2.<java.awt.Dimension: int height>;

        $i47 = staticinvoke <java.lang.Math: int max(int,int)>($i46, $i45);

        $r2.<java.awt.Dimension: int height> = $i47;

     label2:
        $r6 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("North", $z0);

        if $r6 == null goto label3;

        $r14 = virtualinvoke $r6.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $i35 = $r14.<java.awt.Dimension: int width>;

        $i34 = $r2.<java.awt.Dimension: int width>;

        $i36 = staticinvoke <java.lang.Math: int max(int,int)>($i35, $i34);

        $r2.<java.awt.Dimension: int width> = $i36;

        $i40 = $r2.<java.awt.Dimension: int height>;

        $i38 = $r14.<java.awt.Dimension: int height>;

        $i37 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i39 = $i38 + $i37;

        $i41 = $i40 + $i39;

        $r2.<java.awt.Dimension: int height> = $i41;

     label3:
        $r7 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("South", $z0);

        if $r7 == null goto label4;

        $r13 = virtualinvoke $r7.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $i27 = $r13.<java.awt.Dimension: int width>;

        $i26 = $r2.<java.awt.Dimension: int width>;

        $i28 = staticinvoke <java.lang.Math: int max(int,int)>($i27, $i26);

        $r2.<java.awt.Dimension: int width> = $i28;

        $i32 = $r2.<java.awt.Dimension: int height>;

        $i30 = $r13.<java.awt.Dimension: int height>;

        $i29 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i31 = $i30 + $i29;

        $i33 = $i32 + $i31;

        $r2.<java.awt.Dimension: int height> = $i33;

     label4:
        $r8 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("East", $z0);

        if $r8 == null goto label5;

        $r12 = virtualinvoke $r8.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $i21 = $r2.<java.awt.Dimension: int width>;

        $i19 = $r12.<java.awt.Dimension: int width>;

        $i18 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i20 = $i19 + $i18;

        $i22 = $i21 + $i20;

        $r2.<java.awt.Dimension: int width> = $i22;

        $i24 = $r12.<java.awt.Dimension: int height>;

        $i23 = $r2.<java.awt.Dimension: int height>;

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i24, $i23);

        $r2.<java.awt.Dimension: int height> = $i25;

     label5:
        $r9 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("West", $z0);

        if $r9 == null goto label6;

        $r11 = virtualinvoke $r9.<java.awt.Component: java.awt.Dimension getMinimumSize()>();

        $i13 = $r2.<java.awt.Dimension: int width>;

        $i11 = $r11.<java.awt.Dimension: int width>;

        $i10 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i12 = $i11 + $i10;

        $i14 = $i13 + $i12;

        $r2.<java.awt.Dimension: int width> = $i14;

        $i16 = $r11.<java.awt.Dimension: int height>;

        $i15 = $r2.<java.awt.Dimension: int height>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);

        $r2.<java.awt.Dimension: int height> = $i17;

     label6:
        $r10 = virtualinvoke r0.<java.awt.Container: java.awt.Insets getInsets()>();

        $i3 = $r2.<java.awt.Dimension: int width>;

        $i1 = $r10.<java.awt.Insets: int left>;

        $i0 = $r10.<java.awt.Insets: int right>;

        $i2 = $i1 + $i0;

        $i4 = $i3 + $i2;

        $r2.<java.awt.Dimension: int width> = $i4;

        $i8 = $r2.<java.awt.Dimension: int height>;

        $i6 = $r10.<java.awt.Insets: int top>;

        $i5 = $r10.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        $i9 = $i8 + $i7;

        $r2.<java.awt.Dimension: int height> = $i9;

        exitmonitor $r1;

     label7:
        return $r2;

     label8:
        $r16 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r16;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.awt.Dimension preferredLayoutSize(java.awt.Container)
    {
        java.awt.Component $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r16;
        java.awt.Container r0;
        java.awt.ComponentOrientation $r3;
        com.jidesoft.swing.JideBorderLayout r4;
        boolean $z0;
        java.awt.Dimension $r2, $r11, $r12, $r13, $r14, $r15;
        java.awt.Insets $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47;
        java.lang.Object $r1;

        r4 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Container;

        $r1 = virtualinvoke r0.<java.awt.Container: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label1:
        $r2 = new java.awt.Dimension;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        $r3 = virtualinvoke r0.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r3.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $r5 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("Center", $z0);

        if $r5 == null goto label2;

        $r15 = virtualinvoke $r5.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i43 = $r2.<java.awt.Dimension: int width>;

        $i42 = $r15.<java.awt.Dimension: int width>;

        $i44 = $i43 + $i42;

        $r2.<java.awt.Dimension: int width> = $i44;

        $i46 = $r15.<java.awt.Dimension: int height>;

        $i45 = $r2.<java.awt.Dimension: int height>;

        $i47 = staticinvoke <java.lang.Math: int max(int,int)>($i46, $i45);

        $r2.<java.awt.Dimension: int height> = $i47;

     label2:
        $r6 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("North", $z0);

        if $r6 == null goto label3;

        $r14 = virtualinvoke $r6.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i35 = $r14.<java.awt.Dimension: int width>;

        $i34 = $r2.<java.awt.Dimension: int width>;

        $i36 = staticinvoke <java.lang.Math: int max(int,int)>($i35, $i34);

        $r2.<java.awt.Dimension: int width> = $i36;

        $i40 = $r2.<java.awt.Dimension: int height>;

        $i38 = $r14.<java.awt.Dimension: int height>;

        $i37 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i39 = $i38 + $i37;

        $i41 = $i40 + $i39;

        $r2.<java.awt.Dimension: int height> = $i41;

     label3:
        $r7 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("South", $z0);

        if $r7 == null goto label4;

        $r13 = virtualinvoke $r7.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i27 = $r13.<java.awt.Dimension: int width>;

        $i26 = $r2.<java.awt.Dimension: int width>;

        $i28 = staticinvoke <java.lang.Math: int max(int,int)>($i27, $i26);

        $r2.<java.awt.Dimension: int width> = $i28;

        $i32 = $r2.<java.awt.Dimension: int height>;

        $i30 = $r13.<java.awt.Dimension: int height>;

        $i29 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i31 = $i30 + $i29;

        $i33 = $i32 + $i31;

        $r2.<java.awt.Dimension: int height> = $i33;

     label4:
        $r8 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("East", $z0);

        if $r8 == null goto label5;

        $r12 = virtualinvoke $r8.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i21 = $r2.<java.awt.Dimension: int width>;

        $i19 = $r12.<java.awt.Dimension: int width>;

        $i18 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i20 = $i19 + $i18;

        $i22 = $i21 + $i20;

        $r2.<java.awt.Dimension: int width> = $i22;

        $i24 = $r12.<java.awt.Dimension: int height>;

        $i23 = $r2.<java.awt.Dimension: int height>;

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i24, $i23);

        $r2.<java.awt.Dimension: int height> = $i25;

     label5:
        $r9 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("West", $z0);

        if $r9 == null goto label6;

        $r11 = virtualinvoke $r9.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i13 = $r2.<java.awt.Dimension: int width>;

        $i11 = $r11.<java.awt.Dimension: int width>;

        $i10 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i12 = $i11 + $i10;

        $i14 = $i13 + $i12;

        $r2.<java.awt.Dimension: int width> = $i14;

        $i16 = $r11.<java.awt.Dimension: int height>;

        $i15 = $r2.<java.awt.Dimension: int height>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);

        $r2.<java.awt.Dimension: int height> = $i17;

     label6:
        $r10 = virtualinvoke r0.<java.awt.Container: java.awt.Insets getInsets()>();

        $i3 = $r2.<java.awt.Dimension: int width>;

        $i1 = $r10.<java.awt.Insets: int left>;

        $i0 = $r10.<java.awt.Insets: int right>;

        $i2 = $i1 + $i0;

        $i4 = $i3 + $i2;

        $r2.<java.awt.Dimension: int width> = $i4;

        $i8 = $r2.<java.awt.Dimension: int height>;

        $i6 = $r10.<java.awt.Insets: int top>;

        $i5 = $r10.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        $i9 = $i8 + $i7;

        $r2.<java.awt.Dimension: int height> = $i9;

        exitmonitor $r1;

     label7:
        return $r2;

     label8:
        $r16 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r16;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public java.awt.Dimension maximumLayoutSize(java.awt.Container)
    {
        java.awt.Dimension $r0;
        com.jidesoft.swing.JideBorderLayout r1;
        java.awt.Container r2;

        r1 := @this: com.jidesoft.swing.JideBorderLayout;

        r2 := @parameter0: java.awt.Container;

        $r0 = new java.awt.Dimension;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>(2147483647, 2147483647);

        return $r0;
    }

    public float getLayoutAlignmentX(java.awt.Container)
    {
        com.jidesoft.swing.JideBorderLayout r0;
        java.awt.Container r1;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        r1 := @parameter0: java.awt.Container;

        return 0.5F;
    }

    public float getLayoutAlignmentY(java.awt.Container)
    {
        com.jidesoft.swing.JideBorderLayout r0;
        java.awt.Container r1;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        r1 := @parameter0: java.awt.Container;

        return 0.5F;
    }

    public void invalidateLayout(java.awt.Container)
    {
        com.jidesoft.swing.JideBorderLayout r0;
        java.awt.Container r1;

        r0 := @this: com.jidesoft.swing.JideBorderLayout;

        r1 := @parameter0: java.awt.Container;

        return;
    }

    public void layoutContainer(java.awt.Container)
    {
        java.awt.Component $r5, $r6, $r7, $r8, $r9;
        java.lang.Throwable $r16;
        java.awt.Container r0;
        java.awt.ComponentOrientation $r3;
        com.jidesoft.swing.JideBorderLayout r4;
        boolean $z0;
        java.awt.Dimension $r10, $r11, $r12, $r13, $r14, $r15;
        java.awt.Insets $r2;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, $i50, $i51;
        java.lang.Object $r1;

        r4 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.awt.Container;

        $r1 = virtualinvoke r0.<java.awt.Container: java.lang.Object getTreeLock()>();

        entermonitor $r1;

     label01:
        $r2 = virtualinvoke r0.<java.awt.Container: java.awt.Insets getInsets()>();

        i46 = $r2.<java.awt.Insets: int top>;

        $i0 = virtualinvoke r0.<java.awt.Container: int getHeight()>();

        $i1 = $r2.<java.awt.Insets: int bottom>;

        i47 = $i0 - $i1;

        i48 = $r2.<java.awt.Insets: int left>;

        $i2 = virtualinvoke r0.<java.awt.Container: int getWidth()>();

        $i3 = $r2.<java.awt.Insets: int right>;

        i49 = $i2 - $i3;

        $r3 = virtualinvoke r0.<java.awt.Container: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r3.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        $r5 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("North", $z0);

        $r6 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("South", $z0);

        $r7 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("East", $z0);

        $r8 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("West", $z0);

        $r9 = specialinvoke r4.<com.jidesoft.swing.JideBorderLayout: java.awt.Component getChild(java.lang.String,boolean)>("Center", $z0);

        if $r8 == null goto label02;

        $r15 = virtualinvoke $r8.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i45 = $r15.<java.awt.Dimension: int width>;

        $i44 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i50 = $i45 + $i44;

        goto label03;

     label02:
        $i50 = 0;

     label03:
        i4 = $i50;

        if $r7 == null goto label04;

        $r14 = virtualinvoke $r7.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i43 = $r14.<java.awt.Dimension: int width>;

        $i42 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i51 = $i43 + $i42;

        goto label05;

     label04:
        $i51 = 0;

     label05:
        i5 = $i51;

        if $r5 == null goto label06;

        $r13 = virtualinvoke $r5.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i38 = i48 + i4;

        $i34 = i49 - i48;

        $i35 = $i34 - i4;

        $i37 = $i35 - $i51;

        $i36 = $r13.<java.awt.Dimension: int height>;

        virtualinvoke $r5.<java.awt.Component: void setBounds(int,int,int,int)>($i38, i46, $i37, $i36);

        $i40 = $r13.<java.awt.Dimension: int height>;

        $i39 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i41 = $i40 + $i39;

        i46 = i46 + $i41;

     label06:
        if $r6 == null goto label07;

        $r12 = virtualinvoke $r6.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i30 = i48 + i4;

        $i24 = $r12.<java.awt.Dimension: int height>;

        $i29 = i47 - $i24;

        $i25 = i49 - i48;

        $i26 = $i25 - i4;

        $i28 = $i26 - i5;

        $i27 = $r12.<java.awt.Dimension: int height>;

        virtualinvoke $r6.<java.awt.Component: void setBounds(int,int,int,int)>($i30, $i29, $i28, $i27);

        $i32 = $r12.<java.awt.Dimension: int height>;

        $i31 = r4.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $i33 = $i32 + $i31;

        i47 = i47 - $i33;

     label07:
        if $r7 == null goto label08;

        $i15 = virtualinvoke $r7.<java.awt.Component: int getWidth()>();

        $i16 = i47 - i46;

        virtualinvoke $r7.<java.awt.Component: void setSize(int,int)>($i15, $i16);

        $r11 = virtualinvoke $r7.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i17 = $r11.<java.awt.Dimension: int width>;

        $i20 = i49 - $i17;

        $i19 = $r11.<java.awt.Dimension: int width>;

        $i18 = i47 - i46;

        virtualinvoke $r7.<java.awt.Component: void setBounds(int,int,int,int)>($i20, i46, $i19, $i18);

        $i22 = $r11.<java.awt.Dimension: int width>;

        $i21 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i23 = $i22 + $i21;

        i49 = i49 - $i23;

     label08:
        if $r8 == null goto label09;

        $i8 = virtualinvoke $r8.<java.awt.Component: int getWidth()>();

        $i9 = i47 - i46;

        virtualinvoke $r8.<java.awt.Component: void setSize(int,int)>($i8, $i9);

        $r10 = virtualinvoke $r8.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i11 = $r10.<java.awt.Dimension: int width>;

        $i10 = i47 - i46;

        virtualinvoke $r8.<java.awt.Component: void setBounds(int,int,int,int)>(i48, i46, $i11, $i10);

        $i13 = $r10.<java.awt.Dimension: int width>;

        $i12 = r4.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $i14 = $i13 + $i12;

        i48 = i48 + $i14;

     label09:
        if $r9 == null goto label10;

        $i7 = i49 - i48;

        $i6 = i47 - i46;

        virtualinvoke $r9.<java.awt.Component: void setBounds(int,int,int,int)>(i48, i46, $i7, $i6);

     label10:
        exitmonitor $r1;

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        exitmonitor $r1;

     label13:
        throw $r16;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private java.awt.Component getChild(java.lang.String, boolean)
    {
        com.jidesoft.swing.JideBorderLayout r1;
        java.awt.Component $r2, $r3, r4, $r5, $r6, $r7, $r8;
        java.lang.String r0;
        boolean $z0, z1;

        r1 := @this: com.jidesoft.swing.JideBorderLayout;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        r4 = null;

        if r0 != "North" goto label03;

        $r3 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        if $r3 == null goto label01;

        $r5 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstLine>;

        goto label02;

     label01:
        $r5 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component north>;

     label02:
        r4 = $r5;

        goto label13;

     label03:
        if r0 != "South" goto label06;

        $r2 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        if $r2 == null goto label04;

        $r6 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastLine>;

        goto label05;

     label04:
        $r6 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component south>;

     label05:
        r4 = $r6;

        goto label13;

     label06:
        if r0 != "West" goto label09;

        if z1 == 0 goto label07;

        $r7 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

        goto label08;

     label07:
        $r7 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

     label08:
        r4 = $r7;

        if $r7 != null goto label13;

        r4 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component west>;

        goto label13;

     label09:
        if r0 != "East" goto label12;

        if z1 == 0 goto label10;

        $r8 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component lastItem>;

        goto label11;

     label10:
        $r8 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component firstItem>;

     label11:
        r4 = $r8;

        if $r8 != null goto label13;

        r4 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component east>;

        goto label13;

     label12:
        if r0 != "Center" goto label13;

        r4 = r1.<com.jidesoft.swing.JideBorderLayout: java.awt.Component center>;

     label13:
        if r4 == null goto label14;

        $z0 = virtualinvoke r4.<java.awt.Component: boolean isVisible()>();

        if $z0 != 0 goto label14;

        r4 = null;

     label14:
        return r4;
    }

    public java.lang.String toString()
    {
        com.jidesoft.swing.JideBorderLayout r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Class $r2;
        java.lang.String $r3, $r10;

        r1 := @this: com.jidesoft.swing.JideBorderLayout;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[hgap=");

        $i0 = r1.<com.jidesoft.swing.JideBorderLayout: int hgap>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",vgap=");

        $i1 = r1.<com.jidesoft.swing.JideBorderLayout: int vgap>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.JideBorderLayout: long serialVersionUID> = -8658291919501921765L;

        <com.jidesoft.swing.JideBorderLayout: java.lang.String LINE_END> = "After";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String LINE_START> = "Before";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String PAGE_END> = "Last";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String PAGE_START> = "First";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String AFTER_LINE_ENDS> = "After";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String BEFORE_LINE_BEGINS> = "Before";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String AFTER_LAST_LINE> = "Last";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String BEFORE_FIRST_LINE> = "First";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String CENTER> = "Center";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String WEST> = "West";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String EAST> = "East";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String SOUTH> = "South";

        <com.jidesoft.swing.JideBorderLayout: java.lang.String NORTH> = "North";

        return;
    }
}
