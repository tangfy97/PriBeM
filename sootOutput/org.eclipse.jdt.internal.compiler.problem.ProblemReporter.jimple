public class org.eclipse.jdt.internal.compiler.problem.ProblemReporter extends org.eclipse.jdt.internal.compiler.problem.ProblemHandler
{
    public org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext;
    private org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner;
    private static final byte FIELD_ACCESS;
    private static final byte CONSTRUCTOR_ACCESS;
    private static final byte METHOD_ACCESS;

    private static int getElaborationId(int, byte)
    {
        byte b1;
        int i0, $i2, $i3, $i4;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $i2 = i0 << 8;

        $i4 = (int) b1;

        $i3 = $i2 | $i4;

        return $i3;
    }

    public static long getIrritant(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -1610612274: goto label47;
            case -1610612273: goto label47;
            case -1610612272: goto label47;
            case -1610612271: goto label47;
            case -1610612270: goto label47;
            case -1610612269: goto label47;
            case -1610612268: goto label47;
            case -1610612267: goto label47;
            case -1610612266: goto label47;
            case -1610612265: goto label48;
            case -1610612264: goto label47;
            case -1610612263: goto label47;
            case -1610612262: goto label47;
            case -1610612261: goto label48;
            case -1610612260: goto label47;
            case -1610612259: goto label48;
            case -1610612258: goto label47;
            case -1610612257: goto label47;
            case -1610612256: goto label47;
            case -1610612255: goto label47;
            case -1610612254: goto label47;
            case -1610612253: goto label47;
            case -1610612252: goto label47;
            case -1610612251: goto label47;
            case -1610612250: goto label49;
            case -1610612249: goto label47;
            case -1610612248: goto label47;
            case -1610612247: goto label47;
            case -1610612246: goto label47;
            case -1610612245: goto label47;
            case -1610612244: goto label47;
            case -1610612243: goto label47;
            case -1610612242: goto label47;
            case -1610612241: goto label47;
            case -1610612240: goto label47;
            case -1610612239: goto label47;
            case -1610612238: goto label47;
            case -1610612237: goto label47;
            case -1610612236: goto label47;
            case -1610612235: goto label47;
            case -1610612234: goto label47;
            case -1610612233: goto label47;
            case -1610612232: goto label47;
            case -1610612231: goto label47;
            case -1610612230: goto label47;
            case -1610612229: goto label47;
            case -1610612228: goto label47;
            case -1610612227: goto label47;
            case -1610612226: goto label47;
            case -1610612225: goto label47;
            case -1610612224: goto label47;
            case -1610612223: goto label47;
            case -1610612221: goto label47;
            case -1610612220: goto label47;
            case -1610612219: goto label47;
            case -1610612218: goto label47;
            case -1610612217: goto label47;
            case -1610611886: goto label47;
            case -1610611885: goto label47;
            case -1610611884: goto label47;
            case -1610611883: goto label47;
            case -1610611882: goto label47;
            case -1610611881: goto label47;
            case -1610611880: goto label47;
            case -1610611879: goto label47;
            case -1610611878: goto label47;
            case -1610611877: goto label47;
            case 16777221: goto label06;
            case 16777249: goto label20;
            case 16777381: goto label01;
            case 16777496: goto label36;
            case 16777523: goto label35;
            case 16777547: goto label54;
            case 16777746: goto label29;
            case 16777747: goto label29;
            case 16777748: goto label29;
            case 16777752: goto label29;
            case 16777753: goto label33;
            case 16777761: goto label29;
            case 16777785: goto label29;
            case 16777786: goto label29;
            case 16777787: goto label20;
            case 16777788: goto label30;
            case 16777792: goto label20;
            case 16777793: goto label20;
            case 16777842: goto label43;
            case 33554505: goto label06;
            case 33554622: goto label10;
            case 33554623: goto label10;
            case 33555193: goto label42;
            case 67108967: goto label06;
            case 67108974: goto label03;
            case 67109056: goto label10;
            case 67109057: goto label10;
            case 67109274: goto label04;
            case 67109276: goto label06;
            case 67109277: goto label05;
            case 67109278: goto label05;
            case 67109280: goto label52;
            case 67109423: goto label29;
            case 67109438: goto label29;
            case 67109443: goto label53;
            case 67109491: goto label31;
            case 67109524: goto label53;
            case 67109665: goto label37;
            case 134217861: goto label06;
            case 134218530: goto label37;
            case 268435844: goto label02;
            case 536870971: goto label50;
            case 536870973: goto label07;
            case 536870974: goto label08;
            case 536871002: goto label18;
            case 536871006: goto label18;
            case 536871007: goto label18;
            case 536871008: goto label34;
            case 536871063: goto label09;
            case 536871090: goto label16;
            case 536871091: goto label21;
            case 536871092: goto label22;
            case 536871096: goto label25;
            case 536871097: goto label26;
            case 536871098: goto label26;
            case 536871101: goto label28;
            case 536871106: goto label51;
            case 536871111: goto label46;
            case 536871173: goto label11;
            case 536871177: goto label11;
            case 536871352: goto label12;
            case 536871353: goto label13;
            case 536871363: goto label38;
            case 536871364: goto label39;
            case 536871365: goto label40;
            case 536871366: goto label40;
            case 536871367: goto label40;
            case 536871368: goto label40;
            case 536871369: goto label40;
            case 536871370: goto label40;
            case 536871372: goto label23;
            case 536871540: goto label32;
            case 536871541: goto label32;
            case 536871542: goto label32;
            case 536871543: goto label44;
            case 536871547: goto label45;
            case 536871632: goto label41;
            case 536871633: goto label41;
            case 553648135: goto label17;
            case 553648146: goto label15;
            case 553648309: goto label24;
            case 553648311: goto label24;
            case 553648316: goto label22;
            case 570425420: goto label14;
            case 570425421: goto label17;
            case 570425422: goto label15;
            case 570425423: goto label27;
            case 570425435: goto label18;
            case 570425436: goto label19;
            case 570425437: goto label19;
            case 603979893: goto label14;
            case 603979894: goto label17;
            case 603979895: goto label15;
            case 603979910: goto label17;
            default: goto label55;
        };

     label01:
        return 8L;

     label02:
        return 1024L;

     label03:
        return 1L;

     label04:
        return 2L;

     label05:
        return 16384L;

     label06:
        return 4L;

     label07:
        return 16L;

     label08:
        return 32L;

     label09:
        return 64L;

     label10:
        return 128L;

     label11:
        return 256L;

     label12:
        return 512L;

     label13:
        return 8589934592L;

     label14:
        return 2048L;

     label15:
        return 268435456L;

     label16:
        return 8192L;

     label17:
        return 32768L;

     label18:
        return 65536L;

     label19:
        return 131072L;

     label20:
        return 549755813888L;

     label21:
        return 262144L;

     label22:
        return 524288L;

     label23:
        return 134217728L;

     label24:
        return 67108864L;

     label25:
        return 16777216L;

     label26:
        return 8388608L;

     label27:
        return 4194304L;

     label28:
        return 536870912L;

     label29:
        return 1073741824L;

     label30:
        return 35184372088832L;

     label31:
        return 1099511627776L;

     label32:
        return 4398046511104L;

     label33:
        return 2147483648L;

     label34:
        return 4294967296L;

     label35:
        return 17179869184L;

     label36:
        return 8796093022208L;

     label37:
        return 34359738368L;

     label38:
        return 68719476736L;

     label39:
        return 1125899906842624L;

     label40:
        return 2251799813685248L;

     label41:
        return 137438953472L;

     label42:
        return 2199023255552L;

     label43:
        return 274877906944L;

     label44:
        return 17592186044416L;

     label45:
        return 18014398509481984L;

     label46:
        return 70368744177664L;

     label47:
        return 33554432L;

     label48:
        return 2097152L;

     label49:
        return 1048576L;

     label50:
        return 140737488355328L;

     label51:
        return 281474976710656L;

     label52:
        return 562949953421312L;

     label53:
        return 9007199254740992L;

     label54:
        return 36028797018963968L;

     label55:
        return 0L;
    }

    public static int getProblemCategory(int, int)
    {
        long $l3, $l4, $l6;
        byte $b5;
        int i0, $i1, i2, $i7, $i8, $i9, $i10, i11, i12;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label01;

        goto label19;

     label01:
        $l3 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: long getIrritant(int)>(i2);

        i11 = (int) $l3;

        $l4 = (long) i11;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label12;

        lookupswitch(i11)
        {
            case 1: goto label02;
            case 2: goto label04;
            case 4: goto label06;
            case 8: goto label03;
            case 16: goto label05;
            case 32: goto label05;
            case 64: goto label03;
            case 128: goto label02;
            case 256: goto label07;
            case 512: goto label02;
            case 1024: goto label05;
            case 2048: goto label02;
            case 4096: goto label08;
            case 8192: goto label03;
            case 16384: goto label04;
            case 32768: goto label05;
            case 65536: goto label04;
            case 131072: goto label04;
            case 262144: goto label03;
            case 524288: goto label03;
            case 1048576: goto label09;
            case 2097152: goto label09;
            case 4194304: goto label02;
            case 8388608: goto label05;
            case 16777216: goto label03;
            case 33554432: goto label09;
            case 33554436: goto label09;
            case 67108864: goto label05;
            case 134217728: goto label02;
            case 268435456: goto label02;
            case 536870912: goto label05;
            case 1073741824: goto label10;
            default: goto label11;
        };

     label02:
        return 80;

     label03:
        return 90;

     label04:
        return 100;

     label05:
        return 120;

     label06:
        return 110;

     label07:
        return 140;

     label08:
        return 0;

     label09:
        return 70;

     label10:
        return 130;

     label11:
        goto label19;

     label12:
        $l6 = $l3 >>> 32;

        i12 = (int) $l6;

        lookupswitch(i12)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label13;
            case 4: goto label17;
            case 8: goto label14;
            case 16: goto label14;
            case 32: goto label13;
            case 64: goto label13;
            case 128: goto label15;
            case 256: goto label13;
            case 512: goto label14;
            case 1024: goto label13;
            case 2048: goto label17;
            case 4096: goto label16;
            case 8192: goto label18;
            case 16384: goto label16;
            case 32768: goto label13;
            case 65536: goto label14;
            case 131072: goto label14;
            case 262144: goto label14;
            case 524288: goto label14;
            case 4194304: goto label16;
            case 8388608: goto label16;
            default: goto label19;
        };

     label13:
        return 80;

     label14:
        return 90;

     label15:
        return 100;

     label16:
        return 120;

     label17:
        return 150;

     label18:
        return 130;

     label19:
        lookupswitch(i2)
        {
            case 16777540: goto label20;
            case 536871612: goto label20;
            default: goto label21;
        };

     label20:
        return 10;

     label21:
        $i7 = i2 & 1073741824;

        if $i7 == 0 goto label22;

        return 20;

     label22:
        $i8 = i2 & 268435456;

        if $i8 == 0 goto label23;

        return 30;

     label23:
        $i9 = i2 & 16777216;

        if $i9 == 0 goto label24;

        return 40;

     label24:
        $i10 = i2 & 234881024;

        if $i10 == 0 goto label25;

        return 50;

     label25:
        return 60;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy, org.eclipse.jdt.internal.compiler.impl.CompilerOptions, org.eclipse.jdt.internal.compiler.IProblemFactory)
    {
        org.eclipse.jdt.internal.compiler.IProblemFactory r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.impl.CompilerOptions;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.IProblemFactory;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemHandler: void <init>(org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy,org.eclipse.jdt.internal.compiler.impl.CompilerOptions,org.eclipse.jdt.internal.compiler.IProblemFactory)>(r1, r2, r3);

        return;
    }

    public void abortDueToInternalError(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abortDueToInternalError(java.lang.String,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r1, null);

        return;
    }

    public void abortDueToInternalError(java.lang.String, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int $i0, $i1;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r3;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        if r3 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

     label2:
        if r3 != null goto label3;

        $i1 = 0;

        goto label4;

     label3:
        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

     label4:
        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(0, $r0, $r0, 159, $i0, $i1);

        return;
    }

    public void abstractMethodCannotBeOverridden(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r11;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r12, $r14;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r15;
        char[] $r4, $r8, $r9, $r10, $r13, $r16, $r17, $r18;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r9 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r10 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r8, $r9, 46);

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r10);

        $r1[1] = $r5;

        $r11 = newarray (java.lang.String)[2];

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r14 = new java.lang.String;

        $r15 = r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r17 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r18 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r16, $r17, 46);

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r18);

        $r11[1] = $r14;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109275, $r1, $r11, $i0, $i1);

        return;
    }

    public void abstractMethodInAbstractClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r5;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109227, $r0, $r0, $i1, $i0);

        return;
    }

    public void abstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r25;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r24;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r4;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r0;
        java.lang.String[] $r2, $r13, $r27, $r34;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r23;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r7, $r8, $r11, $r14, $r17, $r18, $r21, $r28, $r31, $r32, $r35, $r38, $r39;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r19;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r16, $r30, $r37;
        char[] $r5, $r10, $r12, $r15, $r20, $r22, $r29, $r33, $r36, $r40;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isEnum()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isLocalType()>();

        if $z3 == 0 goto label1;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope enclosingMethodScope()>();

        r25 = $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.FieldBinding initializedField>;

        $r26 = virtualinvoke r25.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration sourceField()>();

        $r27 = newarray (java.lang.String)[3];

        $r28 = new java.lang.String;

        $r29 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r29);

        $r27[0] = $r28;

        $z4 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r30, 0);

        $r27[1] = $r31;

        $r32 = new java.lang.String;

        $r33 = $r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r33);

        $r27[2] = $r32;

        $r34 = newarray (java.lang.String)[3];

        $r35 = new java.lang.String;

        $r36 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r36);

        $r34[0] = $r35;

        $z5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r37 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r38 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r37, 1);

        $r34[1] = $r38;

        $r39 = new java.lang.String;

        $r40 = $r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r39.<java.lang.String: void <init>(char[])>($r40);

        $r34[2] = $r39;

        $i2 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart()>();

        $i3 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109627, $r27, $r34, $i2, $i3);

        goto label2;

     label1:
        $r2 = newarray (java.lang.String)[4];

        $r3 = new java.lang.String;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r6, 0);

        $r2[1] = $r7;

        $r8 = new java.lang.String;

        $r9 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r2[2] = $r8;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r2[3] = $r11;

        $r13 = newarray (java.lang.String)[4];

        $r14 = new java.lang.String;

        $r15 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r14;

        $z2 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r16, 1);

        $r13[1] = $r17;

        $r18 = new java.lang.String;

        $r19 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r13[2] = $r18;

        $r21 = new java.lang.String;

        $r22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r22);

        $r13[3] = $r21;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109264, $r2, $r13, $i0, $i1);

     label2:
        return;
    }

    public void abstractMethodNeedingNoBody(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(603979889, $r2, $r3, $i0, $i1, r1, $r4);

        return;
    }

    public void alreadyDefinedLabel(char[], org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        int $i0, $i1;
        char[] r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r4;
        java.lang.String $r1;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: char[];

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        $r0[0] = $r1;

        $i1 = r4.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r4.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871083, $r0, $r0, $i1, $i0);

        return;
    }

    public void annotationCannotOverrideMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r15;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r11, $r14, $r16, $r19, $r22, $r25;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r8;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r9, $r17, $r20;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r13, $r24;
        char[] $r6, $r10, $r12, $r18, $r21, $r23;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration sourceMethod()>();

        $r3 = newarray (java.lang.String)[4];

        $r4 = new java.lang.String;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r7 = new java.lang.String;

        $r9 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r10);

        $r3[1] = $r7;

        $r11 = new java.lang.String;

        $r12 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r3[2] = $r11;

        $z0 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r13, 0);

        $r3[3] = $r14;

        $r15 = newarray (java.lang.String)[4];

        $r16 = new java.lang.String;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r16;

        $r19 = new java.lang.String;

        $r20 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r21);

        $r15[1] = $r19;

        $r22 = new java.lang.String;

        $r23 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r15[2] = $r22;

        $z1 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r24, 1);

        $r15[3] = $r25;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109480, $r3, $r15, $i1, $i0);

        return;
    }

    public void annotationCircularity(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r8, $r14, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r6, $r9, $r11, $r15, $r18;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        char[] $r5, $r7, $r10, $r12, $r16, $r19;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r13 := @parameter2: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        if r0 != r1 goto label1;

        $r14 = newarray (java.lang.String)[1];

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r14[0] = $r15;

        $r17 = newarray (java.lang.String)[1];

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r17[0] = $r18;

        $i3 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i2 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777822, $r14, $r17, $i3, $i2);

        goto label2;

     label1:
        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r3[1] = $r6;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777823, $r3, $r8, $i1, $i0);

     label2:
        return;
    }

    public void annotationMembersCannotHaveParameters(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613353, $r3, $r2, $i1, $i0);

        return;
    }

    public void annotationMembersCannotHaveTypeParameters(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613354, $r3, $r2, $i1, $i0);

        return;
    }

    public void annotationTypeDeclarationCannotHaveConstructor(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613360, $r3, $r2, $i1, $i0);

        return;
    }

    public void annotationTypeDeclarationCannotHaveSuperclass(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613355, $r3, $r2, $i1, $i0);

        return;
    }

    public void annotationTypeDeclarationCannotHaveSuperinterfaces(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613356, $r3, $r2, $i1, $i0);

        return;
    }

    public void annotationTypeUsedAsSuperinterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r6;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r13 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777842, $r1, $r8, $i1, $i0);

        return;
    }

    public void annotationValueMustBeAnnotation(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, char[], org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r10;
        org.eclipse.jdt.internal.compiler.ast.Expression r15;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5, r8;
        int $i0, $i1;
        java.lang.String $r0, $r4, $r7, $r11, $r13;
        char[] r1, $r6, $r9, $r12, $r14;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: char[];

        r15 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        r8 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r1);

        $r3 = newarray (java.lang.String)[3];

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r7 = new java.lang.String;

        $r9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r3[2] = $r7;

        $r10 = newarray (java.lang.String)[3];

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r10[0] = $r11;

        $r10[1] = $r0;

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r10[2] = $r13;

        $i1 = r15.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r15.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871537, $r3, $r10, $i1, $i0);

        return;
    }

    public void annotationValueMustBeArrayInitializer(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, char[], org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5;
        int $i0, $i1;
        char[] r1, $r6, $r9;
        java.lang.String $r0, $r4, $r8;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: char[];

        r10 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r1);

        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r7 = newarray (java.lang.String)[2];

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r7[0] = $r8;

        $r7[1] = $r0;

        $i1 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871544, $r3, $r7, $i1, $i0);

        return;
    }

    public void annotationValueMustBeClassLiteral(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, char[], org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5;
        int $i0, $i1;
        char[] r1, $r6, $r9;
        java.lang.String $r0, $r4, $r8;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: char[];

        r10 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r1);

        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r7 = newarray (java.lang.String)[2];

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r7[0] = $r8;

        $r7[1] = $r0;

        $i1 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871524, $r3, $r7, $i1, $i0);

        return;
    }

    public void annotationValueMustBeConstant(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, char[], org.eclipse.jdt.internal.compiler.ast.Expression, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r7, $r11, $r14;
        org.eclipse.jdt.internal.compiler.ast.Expression r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r4, $r8, $r12, $r15;
        boolean z0;
        char[] r1, $r6, $r9, $r13, $r16;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: char[];

        r10 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        z0 := @parameter3: boolean;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r1);

        if z0 == 0 goto label1;

        $r11 = newarray (java.lang.String)[2];

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r11[1] = $r0;

        $r14 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r14[0] = $r15;

        $r14[1] = $r0;

        $i3 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i2 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871545, $r11, $r14, $i3, $i2);

        goto label2;

     label1:
        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r7 = newarray (java.lang.String)[2];

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r7[0] = $r8;

        $r7[1] = $r0;

        $i1 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871525, $r3, $r7, $i1, $i0);

     label2:
        return;
    }

    public void anonymousClassCannotExtendFinalClass(org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777245, $r1, $r5, $i1, $i0);

        return;
    }

    public void argumentTypeCannotBeVoid(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, org.eclipse.jdt.internal.compiler.ast.Argument)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r8;
        org.eclipse.jdt.internal.compiler.ast.Argument r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r2;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109228, $r0, $r0, $i1, $i0);

        return;
    }

    public void argumentTypeCannotBeVoidArray(org.eclipse.jdt.internal.compiler.ast.Argument)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        java.lang.String[] $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i1 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870966, $r5, $r4, $i1, $i0);

        return;
    }

    public void arrayConstantsOnlyInArrayInitializers(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612944, $r2, $r1, i0, i1);

        return;
    }

    public void assignmentHasNoEffect(org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration, char[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration r4;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5, $r6;
        int $i0, i1, i2, $i4;
        char[] r3;
        java.lang.String $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration;

        r3 := @parameter1: char[];

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871090);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r3);

        $r1[0] = $r7;

        i1 = r4.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: int sourceStart>;

        i2 = r4.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: int sourceEnd>;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        if $r5 == null goto label2;

        $r6 = r4.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        i2 = $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

     label2:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871090, $r1, $r1, $i0, i1, i2);

        return;
    }

    public void assignmentHasNoEffect(org.eclipse.jdt.internal.compiler.ast.Assignment, char[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i4;
        char[] r3;
        java.lang.String $r5;
        org.eclipse.jdt.internal.compiler.ast.Assignment r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Assignment;

        r3 := @parameter1: char[];

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871090);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r3);

        $r1[0] = $r5;

        $i2 = r4.<org.eclipse.jdt.internal.compiler.ast.Assignment: int sourceStart>;

        $i1 = r4.<org.eclipse.jdt.internal.compiler.ast.Assignment: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871090, $r1, $r1, $i0, $i2, $i1);

        return;
    }

    public void attemptToReturnNonVoidExpression(org.eclipse.jdt.internal.compiler.ast.ReturnStatement, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r8;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108969, $r1, $r5, $i1, $i0);

        return;
    }

    public void attemptToReturnVoidValue(org.eclipse.jdt.internal.compiler.ast.ReturnStatement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.ReturnStatement r1;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ReturnStatement;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108970, $r3, $r2, $i1, $i0);

        return;
    }

    public void autoboxing(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r9;
        org.eclipse.jdt.internal.compiler.ast.Expression r14;
        int $i0, $i1, $i2, $i3, $i5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2, r7;
        java.lang.String $r15, $r16, $r17, $r18;
        boolean $z0;
        char[] $r5, $r8, $r11, $r13;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(137438953472L);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label2;

        $i3 = 536871632;

        goto label3;

     label2:
        $i3 = 536871633;

     label3:
        $r3 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r15;

        $r16 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r16;

        $r9 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r13);

        $r9[1] = $r18;

        $i2 = r14.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i1 = r14.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i3, $r3, $r9, $i2, $i1);

        return;
    }

    public void boundCannotBeArray(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777784, $r1, $r5, $i1, $i0);

        return;
    }

    public void boundMustBeAnInterface(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777745, $r1, $r5, $i1, $i0);

        return;
    }

    public void bytecodeExceeds64KLimit(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        java.lang.String[] $r3, $r8, $r13, $r18;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r7, $r9, $r12, $r14, $r17, $r19, $r22;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r11, $r16, $r21;
        char[] $r5, $r10, $r15, $r20;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $r13 = newarray (java.lang.String)[2];

        $r14 = new java.lang.String;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r14;

        $z3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r16, 0);

        $r13[1] = $r17;

        $r18 = newarray (java.lang.String)[2];

        $r19 = new java.lang.String;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        $r18[0] = $r19;

        $z4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r21 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r22 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r21, 1);

        $r18[1] = $r22;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870981, $r13, $r18, 159, $i3, $i2);

        goto label2;

     label1:
        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r6, 0);

        $r3[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r11, 1);

        $r8[1] = $r12;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870975, $r3, $r8, 159, $i1, $i0);

     label2:
        return;
    }

    public void bytecodeExceeds64KLimit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870976, $r3, $r2, 159, $i1, $i0);

        return;
    }

    public void cannotAllocateVoidArray(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870966, $r3, $r2, $i1, $i0);

        return;
    }

    public void cannotAssignToFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1;
        java.lang.String $r6, $r12, $r15, $r16;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r4, $r9, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r14 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[2];

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r3 != null goto label1;

        $r15 = "array";

        goto label2;

     label1:
        $r15 = new java.lang.String;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

     label2:
        $r1[0] = $r15;

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $r8 = newarray (java.lang.String)[2];

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r9 != null goto label3;

        $r16 = "array";

        goto label4;

     label3:
        $r16 = new java.lang.String;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r11);

     label4:
        $r8[0] = $r16;

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r12;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554512, $r1, $r8, $i0, $i1);

        return;
    }

    public void cannotAssignToFinalLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870970, $r0, $r0, $i0, $i1);

        return;
    }

    public void cannotAssignToFinalOuterLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870972, $r0, $r0, $i0, $i1);

        return;
    }

    public void cannotDefineDimensionsAndInitializer(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871070, $r3, $r2, $i1, $i0);

        return;
    }

    public void cannotDireclyInvokeAbstractMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r10;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r11, $r14, $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r18;
        char[] $r5, $r7, $r13, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r18 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r8, 0);

        $r1[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r11 = new java.lang.String;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r11;

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r14;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r16, 1);

        $r10[2] = $r17;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceStart>;

        $i0 = r18.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108968, $r1, $r10, $i1, $i0);

        return;
    }

    public void cannotExtendEnum(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r8;
        java.lang.String[] $r9, $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, r12;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r11;
        char[] $r2, $r5, $r7;

        r8 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r11 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r12 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r12 = $r3;

     label1:
        $r9 = newarray (java.lang.String)[2];

        $r9[0] = $r3;

        $r9[1] = $r0;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = r12;

        $r10[1] = $r0;

        $i1 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777972, $r9, $r10, $i1, $i0);

        return;
    }

    public void cannotImportPackage(org.eclipse.jdt.internal.compiler.ast.ImportReference)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;
        char[][] $r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r2);

        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(268435843, $r0, $r0, $i1, $i0);

        return;
    }

    public void cannotInstantiate(org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777373, $r1, $r5, $i1, $i0);

        return;
    }

    public void cannotInvokeSuperConstructorInEnum(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r7, $r9, $r13;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r12;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall r14;
        char[] $r5, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r6, 0);

        $r1[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r9;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r12, 1);

        $r8[1] = $r13;

        $i1 = r14.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        $i0 = r14.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109621, $r1, $r8, $i1, $i0);

        return;
    }

    public void cannotReadSource(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit, boolean)
    {
        java.lang.Throwable $r5, $r8, $r11, $r16;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r15;
        java.lang.String[] $r14, $r17;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit r4;
        java.lang.String $r0, $r10, $r12, $r13, r18;
        boolean $z0, z1;
        java.io.PrintWriter $r7;
        java.io.StringWriter $r6;
        org.eclipse.jdt.internal.compiler.CompilationResult $r2;
        char[] $r3;
        java.lang.Class $r9;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r15 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit;

        z1 := @parameter2: boolean;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.CompilationResult: char[] fileName>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r3);

        $r5 = r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: java.lang.Throwable exception>;

        $z0 = $r5 instanceof java.io.CharConversionException;

        if $z0 == 0 goto label2;

        r18 = r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: java.lang.String encoding>;

        if r18 != null goto label1;

        r18 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

     label1:
        $r17 = newarray (java.lang.String)[2];

        $r17[0] = $r0;

        $r17[1] = r18;

        specialinvoke r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871613, $r17, $r17, 0, 0);

        return;

     label2:
        $r6 = new java.io.StringWriter;

        specialinvoke $r6.<java.io.StringWriter: void <init>()>();

        $r7 = new java.io.PrintWriter;

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.Writer)>($r6);

        if z1 == 0 goto label3;

        $r16 = r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: java.lang.Throwable exception>;

        virtualinvoke $r16.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r7);

        goto label4;

     label3:
        $r8 = r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: java.lang.Throwable exception>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r10);

        virtualinvoke $r7.<java.io.PrintWriter: void print(char)>(58);

        $r11 = r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: java.lang.Throwable exception>;

        $r12 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.io.PrintWriter: void print(java.lang.String)>($r12);

     label4:
        $r13 = virtualinvoke $r6.<java.io.StringWriter: java.lang.String toString()>();

        $r14 = newarray (java.lang.String)[2];

        $r14[0] = $r0;

        $r14[1] = $r13;

        specialinvoke r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871614, $r14, $r14, 0, 0);

        return;
    }

    public void cannotReferToNonFinalOuterLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870937, $r0, $r0, $i0, $i1);

        return;
    }

    public void cannotReturnInInitializer(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871074, $r3, $r2, $i1, $i0);

        return;
    }

    public void cannotThrowNull(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871089, $r3, $r2, $i1, $i0);

        return;
    }

    public void cannotThrowType(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777536, $r1, $r5, $i1, $i0);

        return;
    }

    public void cannotUseQualifiedEnumConstantInCaseLabel(org.eclipse.jdt.internal.compiler.ast.Reference, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1;
        java.lang.String $r5, $r7, $r11, $r13;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r9;
        org.eclipse.jdt.internal.compiler.ast.Reference r14;
        char[] $r4, $r6, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Reference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r1 = newarray (java.lang.String)[2];

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r4);

        $r1[0] = $r5;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        $r1[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r10);

        $r8[0] = $r11;

        $r12 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12);

        $r8[1] = $r13;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33555187, $r1, $r8, $i0, $i1);

        return;
    }

    public void cannotUseSuperInCodeSnippet(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871334, $r2, $r1, 159, i0, i1);

        return;
    }

    public void cannotUseSuperInJavaLangObject(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777217, $r3, $r2, $i1, $i0);

        return;
    }

    public void caseExpressionMustBeConstant(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871065, $r3, $r2, $i1, $i0);

        return;
    }

    public void classExtendFinalClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r8;
        java.lang.String[] $r9, $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, r12;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r11;
        char[] $r2, $r5, $r7;

        r8 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r11 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r12 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r12 = $r3;

     label1:
        $r9 = newarray (java.lang.String)[2];

        $r9[0] = $r3;

        $r9[1] = $r0;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = r12;

        $r10[1] = $r0;

        $i1 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777529, $r9, $r10, $i1, $i0);

        return;
    }

    public void codeSnippetMissingClass(java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871332, $r0, $r0, 159, i0, i1);

        return;
    }

    public void codeSnippetMissingMethod(java.lang.String, java.lang.String, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1, r2, r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871333, $r0, $r0, 159, i0, i1);

        return;
    }

    public int computeSeverity(int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        byte $b4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        long $l3;
        int i0, $i1, $i2, $i6, $i8, $i10, $i12, $i14, $i16;
        java.lang.String $r2, $r3, $r12, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -1610612273: goto label10;
            case -1610612271: goto label07;
            case -1610612270: goto label04;
            case -1610612268: goto label04;
            case -1610612264: goto label04;
            case -1610612263: goto label04;
            case -1610612262: goto label04;
            case -1610612258: goto label04;
            case -1610612256: goto label04;
            case -1610612255: goto label04;
            case -1610612254: goto label04;
            case -1610612248: goto label04;
            case -1610612247: goto label07;
            case -1610612246: goto label04;
            case -1610612245: goto label05;
            case -1610612244: goto label04;
            case -1610612243: goto label07;
            case -1610612242: goto label04;
            case -1610612241: goto label05;
            case -1610612240: goto label04;
            case -1610612239: goto label07;
            case -1610612238: goto label04;
            case -1610612237: goto label05;
            case -1610612236: goto label04;
            case -1610612235: goto label04;
            case -1610612234: goto label04;
            case -1610612233: goto label04;
            case -1610612232: goto label07;
            case -1610612231: goto label04;
            case -1610612230: goto label05;
            case -1610612229: goto label04;
            case -1610612228: goto label04;
            case -1610612227: goto label04;
            case -1610612226: goto label04;
            case -1610612225: goto label04;
            case -1610612220: goto label09;
            case -1610612219: goto label04;
            case -1610611886: goto label04;
            case -1610611885: goto label04;
            case -1610611884: goto label04;
            case -1610611883: goto label04;
            case -1610611882: goto label04;
            case -1610611881: goto label04;
            case -1610611880: goto label04;
            case -1610611879: goto label04;
            case -1610611878: goto label04;
            case -1610611877: goto label04;
            case 16777538: goto label03;
            case 67109667: goto label02;
            case 536871362: goto label01;
            default: goto label11;
        };

     label01:
        return 0;

     label02:
        return 0;

     label03:
        return 0;

     label04:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z4 = $r8.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportInvalidJavadocTags>;

        if $z4 != 0 goto label11;

        $i6 = (int) -1;

        return $i6;

     label05:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z2 = $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportInvalidJavadocTags>;

        if $z2 == 0 goto label06;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z3 = $r7.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportInvalidJavadocTagsDeprecatedRef>;

        if $z3 != 0 goto label11;

     label06:
        $i8 = (int) -1;

        return $i8;

     label07:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z5 = $r9.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportInvalidJavadocTags>;

        if $z5 == 0 goto label08;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z6 = $r10.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportInvalidJavadocTagsNotVisibleRef>;

        if $z6 != 0 goto label11;

     label08:
        $i10 = (int) -1;

        return $i10;

     label09:
        $r3 = "no_tag";

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: java.lang.String reportMissingJavadocTagDescription>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label11;

        $i12 = (int) -1;

        return $i12;

     label10:
        $r13 = "all_standard_tags";

        $r11 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: java.lang.String reportMissingJavadocTagDescription>;

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z7 != 0 goto label11;

        $i14 = (int) -1;

        return $i14;

     label11:
        $l3 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: long getIrritant(int)>(i0);

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label13;

        $i1 = i0 & -2147483648;

        if $i1 == 0 goto label12;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z1 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean docCommentSupport>;

        if $z1 != 0 goto label12;

        $i16 = (int) -1;

        return $i16;

     label12:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>($l3);

        return $i2;

     label13:
        return 129;
    }

    public void conditionalArgumentsIncompatibleTypes(org.eclipse.jdt.internal.compiler.ast.ConditionalExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.ConditionalExpression r13;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r6;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConditionalExpression;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.ConditionalExpression: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.ConditionalExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777232, $r1, $r8, $i1, $i0);

        return;
    }

    public void conflictingImport(org.eclipse.jdt.internal.compiler.ast.ImportReference)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;
        char[][] $r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r2);

        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(268435841, $r0, $r0, $i1, $i0);

        return;
    }

    public void constantOutOfFormat(org.eclipse.jdt.internal.compiler.ast.NumberLiteral)
    {
        java.lang.IndexOutOfBoundsException $r18;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r17;
        byte b8, $b10, b12, b13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r19;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.NumberLiteral r0;
        java.lang.String[] $r2;
        java.lang.StringBuffer $r8, $r10, $r11, $r14, $r15, $r22;
        int $i1, $i3, $i5, $i6, i9, i11, $i14, $i15, $i17, $i19;
        java.lang.String $r7, $r16, r20, $r21, $r23, $r24;
        char $c0, $c2, $c4, $c7;
        char[] $r1, $r5, $r13;

        r17 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NumberLiteral;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.LongLiteral;

        if $z0 != 0 goto label01;

        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        if $z1 == 0 goto label14;

     label01:
        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: char[] source()>();

     label02:
        $c0 = $r1[1];

        $i14 = (int) $c0;

        if $i14 == 120 goto label03;

        $c7 = $r1[1];

        $i15 = (int) $c7;

        if $i15 != 88 goto label04;

     label03:
        b8 = 16;

        b13 = 16;

        b12 = 16;

        r20 = "Hex";

        goto label05;

     label04:
        b8 = 8;

        b13 = 8;

        b12 = 8;

        r20 = "Octal";

     label05:
        $i17 = (int) -1;

        i9 = $i17;

        if b12 != 8 goto label06;

        $b10 = 1;

        goto label07;

     label06:
        $b10 = 2;

     label07:
        i11 = $b10;

        goto label10;

     label08:
        $c2 = $r1[i11];

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c2, b13);

        $i19 = (int) -1;

        if $i3 != $i19 goto label09;

        i9 = i11;

        goto label11;

     label09:
        i11 = i11 + 1;

     label10:
        $i1 = lengthof $r1;

        if i11 < $i1 goto label08;

     label11:
        $r2 = newarray (java.lang.String)[2];

        $r21 = new java.lang.String;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding literalType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(null);

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r21;

        $r22 = new java.lang.StringBuffer;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r20);

        specialinvoke $r22.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (digit ");

        $r24 = new java.lang.String;

        $r13 = newarray (char)[1];

        $c4 = $r1[i9];

        $r13[0] = $c4;

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r13);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2[1] = $r16;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: int sourceStart>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: int sourceEnd>;

        specialinvoke r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871066, $r2, $r2, $i6, $i5);

     label12:
        return;

     label13:
        $r18 := @caughtexception;

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding literalType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(null);

        virtualinvoke r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void constantOutOfRange(org.eclipse.jdt.internal.compiler.ast.Literal,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r19);

     label14:
        return;

        catch java.lang.IndexOutOfBoundsException from label02 to label12 with label13;
    }

    public void constantOutOfRange(org.eclipse.jdt.internal.compiler.ast.Literal, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        int $i0, $i1;
        char[] $r3, $r6;
        java.lang.String $r1, $r4;
        org.eclipse.jdt.internal.compiler.ast.Literal r5;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Literal;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Literal: char[] source()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.Literal: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.Literal: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871066, $r0, $r0, $i1, $i0);

        return;
    }

    public void corruptedSignature(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, char[], int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int i0;
        char[] $r4, r6, $r10;
        java.lang.String $r2, $r5, $r7, $r9, $r11, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter1: char[];

        i0 := @parameter2: int;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r6);

        $r1[1] = $r5;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r1[2] = $r7;

        $r8 = newarray (java.lang.String)[3];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>(r6);

        $r8[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r8[2] = $r12;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871612, $r1, $r8, 159, 0, 0);

        return;
    }

    public void deprecatedField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r15, $r16, $r17, $r18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r14 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(33554505);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r15;

        $r16 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r16;

        $r8 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r18;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(33554505, $r1, $r8, $i0, $i1, $i2);

        return;
    }

    public void deprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        java.lang.String[] $r2, $r10, $r19, $r25;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r9, $r17, $r24, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12, $r21, $r27;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16, $r23, $r29;
        char[] $r5, $r7, $r13, $r15, $r22, $r28;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r18 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $i5 = 134217861;

        goto label2;

     label1:
        $i5 = 67108967;

     label2:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i5);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        return;

     label3:
        if $z0 == 0 goto label4;

        $r19 = newarray (java.lang.String)[2];

        $r31 = new java.lang.String;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r31.<java.lang.String: void <init>(char[])>($r22);

        $r19[0] = $r31;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r23 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r24 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r23, 0);

        $r19[1] = $r24;

        $r25 = newarray (java.lang.String)[2];

        $r32 = new java.lang.String;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r28);

        $r25[0] = $r32;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r29 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r30 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r29, 1);

        $r25[1] = $r30;

        $i4 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(134217861, $r19, $r25, $i0, $i4, $i3);

        goto label5;

     label4:
        $r2 = newarray (java.lang.String)[3];

        $r33 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r33;

        $r34 = new java.lang.String;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r34;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r8, 0);

        $r2[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r35 = new java.lang.String;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r35;

        $r36 = new java.lang.String;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r36;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r16, 1);

        $r10[2] = $r17;

        $i2 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67108967, $r2, $r10, $i0, $i2, $i1);

     label5:
        return;
    }

    public void deprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r3, $r6;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, r9;
        char[] $r5, $r8;
        java.lang.String $r10, $r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777221);

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        return;

     label2:
        $r2 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r3 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r5 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r10;

        $r6 = newarray (java.lang.String)[1];

        $r11 = new java.lang.String;

        $r8 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r8);

        $r6[0] = $r11;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i2 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(null, r0);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777221, $r3, $r6, $i0, $i1, $i2);

        return;
    }

    public void disallowedTargetForAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r8;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation r3;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777838, $r1, $r6, $i1, $i0);

        return;
    }

    public void duplicateAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r8;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation r3;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777824, $r1, $r6, $i1, $i0);

        return;
    }

    public void duplicateAnnotationValue(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.MemberValuePair)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        java.lang.String[] $r4, $r8;
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r6;
        int $i0, $i1;
        char[] $r2, $r7, $r10;
        java.lang.String $r0, $r5, $r9;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ast.MemberValuePair;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: char[] name>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = $r0;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r4[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = $r0;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[1] = $r9;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: int sourceEnd>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871522, $r4, $r8, $i1, $i0);

        return;
    }

    public void duplicateBounds(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777783, $r1, $r5, $i1, $i0);

        return;
    }

    public void duplicateCase(org.eclipse.jdt.internal.compiler.ast.CaseStatement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.CaseStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CaseStatement;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CaseStatement: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.CaseStatement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554602, $r3, $r2, $i1, $i0);

        return;
    }

    public void duplicateDefaultCase(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871078, $r3, $r2, $i1, $i0);

        return;
    }

    public void duplicateEnumSpecialMethod(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r19;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r11;
        int $i0, $i1;
        java.lang.String $r4, $r6, $r10, $r12, $r14, $r18;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r15;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r17;
        char[] $r5, $r8, $r13, $r16;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r19 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[3];

        $r4 = new java.lang.String;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $r6 = new java.lang.String;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r6;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r9 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r10 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r9, 0);

        $r3[2] = $r10;

        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r14 = new java.lang.String;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16);

        $r11[1] = $r14;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r18 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r17, 1);

        $r11[2] = $r18;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109618, $r3, $r11, $i1, $i0);

        return;
    }

    public void duplicateFieldInType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        char[] $r4, $r7, $r10, $r12;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554772, $r1, $r8, $i1, $i0);

        return;
    }

    public void duplicateImport(org.eclipse.jdt.internal.compiler.ast.ImportReference)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;
        char[][] $r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r2);

        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(268435842, $r0, $r0, $i1, $i0);

        return;
    }

    public void duplicateInheritedMethods(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r8, r11, $r12, $r21, $r24;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r27;
        java.lang.String[] $r1, $r15;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r10, $r14, $r16, $r18, $r23, $r26;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, $r19;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r13, $r22, $r25;
        char[] $r4, $r7, $r17, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r27 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r11 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[4];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r9, 0);

        $r1[2] = $r10;

        $z1 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r12 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r13, 0);

        $r1[3] = $r14;

        $r15 = newarray (java.lang.String)[4];

        $r16 = new java.lang.String;

        $r17 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r16;

        $r18 = new java.lang.String;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r15[1] = $r18;

        $z2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r21 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r22, 1);

        $r15[2] = $r23;

        $z3 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r25 = $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r26 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r25, 1);

        $r15[3] = $r26;

        $i0 = virtualinvoke r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109429, $r1, $r15, $i0, $i1);

        return;
    }

    public void duplicateInitializationOfBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.Reference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        org.eclipse.jdt.internal.compiler.ast.Reference r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Reference;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554514, $r0, $r0, $i0, $i1);

        return;
    }

    public void duplicateInitializationOfFinalLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870969, $r0, $r0, $i0, $i1);

        return;
    }

    public void duplicateMethodInType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r42;
        java.lang.String[] $r8, $r17, $r26, $r34;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r9, $r11, $r15, $r16, $r18, $r20, $r24, $r25, $r27, $r29, $r33, $r35, $r37, $r41;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r12, $r21, $r30, $r38;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r2, r3, $r4, $r14, $r23, $r32, $r40;
        char[] $r10, $r13, $r19, $r22, $r28, $r31, $r36, $r39;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r42 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        z0 := @parameter2: boolean;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if z0 == 0 goto label1;

        $r26 = newarray (java.lang.String)[3];

        $r27 = new java.lang.String;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r28);

        $r26[0] = $r27;

        $r29 = new java.lang.String;

        $r30 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r31);

        $r26[1] = $r29;

        $z5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r32 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r33 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r32, 0);

        $r26[2] = $r33;

        $r34 = newarray (java.lang.String)[3];

        $r35 = new java.lang.String;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r36);

        $r34[0] = $r35;

        $r37 = new java.lang.String;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r39 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r39);

        $r34[1] = $r37;

        $z6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r40 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r41 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r40, 1);

        $r34[2] = $r41;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109219, $r26, $r34, $i4, $i3);

        goto label4;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof $r2;

        r3 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i0];

        i5 = 0;

        goto label3;

     label2:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r5 = $r4[i5];

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r3[i5] = $r6;

        i5 = i5 + 1;

     label3:
        if i5 < i0 goto label2;

        $r8 = newarray (java.lang.String)[4];

        $r9 = new java.lang.String;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r11;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 0);

        $r8[2] = $r15;

        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, r3, 0);

        $r8[3] = $r16;

        $r17 = newarray (java.lang.String)[4];

        $r18 = new java.lang.String;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r17[0] = $r18;

        $r20 = new java.lang.String;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r22);

        $r17[1] = $r20;

        $z3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r23 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r24 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r23, 1);

        $r17[2] = $r24;

        $z4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r25 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, r3, 1);

        $r17[3] = $r25;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777743, $r8, $r17, $i2, $i1);

     label4:
        return;
    }

    public void duplicateModifierForField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554773, $r0, $r0, $i1, $i0);

        return;
    }

    public void duplicateModifierForMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        char[] $r4, $r7, $r10, $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r6;
        java.lang.String $r2, $r5, $r9, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109221, $r1, $r8, $i1, $i0);

        return;
    }

    public void duplicateModifierForType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777517, $r0, $r0, $i0, $i1);

        return;
    }

    public void duplicateModifierForVariable(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r2;
        int $i0, $i1, $i2;
        char[] $r3;
        java.lang.String $r1;
        boolean z0;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        z0 := @parameter1: boolean;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        if z0 == 0 goto label1;

        $i2 = 67109232;

        goto label2;

     label1:
        $i2 = 67109259;

     label2:
        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i2, $r0, $r0, $i1, $i0);

        return;
    }

    public void duplicateNestedType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777535, $r0, $r0, $i1, $i0);

        return;
    }

    public void duplicateSuperinterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r6;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r13 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777530, $r1, $r8, $i1, $i0);

        return;
    }

    public void duplicateTargetInTargetAnnotation(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.NameReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r5, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r1;
        org.eclipse.jdt.internal.compiler.ast.NameReference r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r7;
        int $i0, $i1;
        char[] $r3, $r8, $r11;
        java.lang.String $r2, $r6, $r10;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.NameReference;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding fieldBinding()>();

        $r2 = new java.lang.String;

        $r3 = $r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = $r2;

        $r6 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r5[1] = $r6;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = $r2;

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[1] = $r10;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r1, r0);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r1, r0);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871533, $r5, $r9, $i0, $i1);

        return;
    }

    public void duplicateTypeParameterInType(org.eclipse.jdt.internal.compiler.ast.TypeParameter)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871432, $r1, $r5, $i1, $i0);

        return;
    }

    public void duplicateTypes(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        org.eclipse.jdt.internal.compiler.CompilationResult $r8;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        java.lang.String $r1, $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r5;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r2;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: char[] getFileName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = r5;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.CompilationResult)>(16777539, $r0, $r0, $i1, $i0, $r8);

        return;
    }

    public void emptyControlFlowStatement(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(553648316, $r2, $r1, i0, i1);

        return;
    }

    public void enumAbstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r11;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r8, $r12, $r15, $r16;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r14;
        char[] $r5, $r10, $r13, $r18;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[3];

        $r4 = new java.lang.String;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r6, 0);

        $r3[1] = $r7;

        $r8 = new java.lang.String;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r3[2] = $r8;

        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 1);

        $r11[1] = $r15;

        $r16 = new java.lang.String;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r11[2] = $r16;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd()>();

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109622, $r3, $r11, $i0, $i1);

        return;
    }

    public void enumConstantMustImplementAbstractMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r11;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r8, $r12, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r9;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r14;
        char[] $r5, $r10, $r13, $r17;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[3];

        $r4 = new java.lang.String;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r6, 0);

        $r3[1] = $r7;

        $r8 = new java.lang.String;

        $r10 = r9.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r3[2] = $r8;

        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 1);

        $r11[1] = $r15;

        $r16 = new java.lang.String;

        $r17 = r9.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r11[2] = $r16;

        $i0 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart()>();

        $i1 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd()>();

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109627, $r3, $r11, $i0, $i1);

        return;
    }

    public void enumConstantsCannotBeSurroundedByParenthesis(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613178, $r3, $r2, $i1, $i0);

        return;
    }

    public void enumStaticFieldUsedDuringInitialization(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r12;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r14 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r9;

        $r12 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r12;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33555194, $r1, $r8, $i0, $i1);

        return;
    }

    public void enumSwitchCannotTargetField(org.eclipse.jdt.internal.compiler.ast.Reference, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1;
        java.lang.String $r5, $r7, $r11, $r13;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r9;
        org.eclipse.jdt.internal.compiler.ast.Reference r14;
        char[] $r4, $r6, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Reference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r1 = newarray (java.lang.String)[2];

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r4);

        $r1[0] = $r5;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        $r1[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r10);

        $r8[0] = $r11;

        $r12 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r12);

        $r8[1] = $r13;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33555191, $r1, $r8, $i0, $i1);

        return;
    }

    public void errorNoMethodFor(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r18;
        java.lang.StringBuffer $r0, $r1;
        int i0, $i1, $i2, i3, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r7, r9;
        java.lang.String $r3, $r6, $r12, $r14, $r17, $r19, $r21, $r23;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r2;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r15;
        char[] $r5, $r8, $r13, $r16, $r20, $r22;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r15 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

        i0 = lengthof r2;

        goto label3;

     label1:
        if i3 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r3 = new java.lang.String;

        $r4 = r2[i3];

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = new java.lang.String;

        $r7 = r2[i3];

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        $z0 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z0 == 0 goto label4;

        $i4 = 67108980;

        goto label5;

     label4:
        $i4 = 67108978;

     label5:
        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r14 = new java.lang.String;

        $r16 = r15.<org.eclipse.jdt.internal.compiler.ast.MessageSend: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16);

        $r11[1] = $r14;

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11[2] = $r17;

        $r18 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r20 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        $r18[0] = $r19;

        $r21 = new java.lang.String;

        $r22 = r15.<org.eclipse.jdt.internal.compiler.ast.MessageSend: char[] selector>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r22);

        $r18[1] = $r21;

        $r23 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18[2] = $r23;

        $i2 = r15.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceStart>;

        $i1 = r15.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i4, $r11, $r18, $i2, $i1);

        return;
    }

    public void errorThisSuperInStatic(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int $i0, $i1;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String $r3;
        boolean $z0;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: boolean isSuper()>();

        if $z0 == 0 goto label1;

        $r3 = "super";

        goto label2;

     label1:
        $r3 = "this";

     label2:
        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871112, $r0, $r0, $i1, $i0);

        return;
    }

    public void expressionShouldBeAVariable(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612959, $r3, $r2, $i1, $i0);

        return;
    }

    public void fieldHiding(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.lookup.Binding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r5;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1, r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r37, $r38, $r40, $r42;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r7, $r16, $r25, $r31;
        org.eclipse.jdt.internal.compiler.lookup.Binding r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.String $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r14, $r18, $r23, $r27, $r33;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r43;
        char[] $r2, $r3, $r10, $r12, $r15, $r19, $r21, $r24, $r28, $r30, $r34, $r36, $r39, $r41, $r44, $r45;

        r5 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALVERSIONUID>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r2);

        if $z0 == 0 goto label1;

        $z5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z5 == 0 goto label1;

        $z6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z6 == 0 goto label1;

        $r43 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        $r42 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        if $r43 != $r42 goto label1;

        return;

     label1:
        $r44 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALPERSISTENTFIELDS>;

        $r45 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $z7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r44, $r45);

        if $z7 == 0 goto label2;

        $z2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z3 == 0 goto label2;

        $r37 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i5 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int dimensions()>();

        if $i5 != 1 goto label2;

        $r39 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTSTREAMFIELD>;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r40 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r41 = virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r39, $r41);

        if $z4 == 0 goto label2;

        return;

     label2:
        $z8 = r4 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z8 == 0 goto label3;

        $i6 = 570425436;

        goto label4;

     label3:
        $i6 = 570425437;

     label4:
        $i0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i6);

        $i8 = (int) -1;

        if $i0 != $i8 goto label5;

        return;

     label5:
        if $z8 == 0 goto label6;

        $r25 = newarray (java.lang.String)[2];

        $r46 = new java.lang.String;

        $r27 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r46.<java.lang.String: void <init>(char[])>($r28);

        $r25[0] = $r46;

        $r47 = new java.lang.String;

        $r30 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r30);

        $r25[1] = $r47;

        $r31 = newarray (java.lang.String)[2];

        $r48 = new java.lang.String;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r48.<java.lang.String: void <init>(char[])>($r34);

        $r31[0] = $r48;

        $r49 = new java.lang.String;

        $r36 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r36);

        $r31[1] = $r49;

        $i3 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r0);

        $i4 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r0);

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(570425436, $r25, $r31, $i0, $i3, $i4);

        goto label7;

     label6:
        $z1 = r4 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z1 == 0 goto label7;

        r6 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) r4;

        $r7 = newarray (java.lang.String)[3];

        $r50 = new java.lang.String;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r50.<java.lang.String: void <init>(char[])>($r10);

        $r7[0] = $r50;

        $r51 = new java.lang.String;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r12);

        $r7[1] = $r51;

        $r52 = new java.lang.String;

        $r14 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r15);

        $r7[2] = $r52;

        $r16 = newarray (java.lang.String)[3];

        $r53 = new java.lang.String;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r19);

        $r16[0] = $r53;

        $r54 = new java.lang.String;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r54.<java.lang.String: void <init>(char[])>($r21);

        $r16[1] = $r54;

        $r55 = new java.lang.String;

        $r23 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r24);

        $r16[2] = $r55;

        $i1 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r6, r0);

        $i2 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r6, r0);

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(570425437, $r7, $r16, $i0, $i1, $i2);

     label7:
        return;
    }

    public void fieldsOrThisBeforeConstructorInvocation(org.eclipse.jdt.internal.compiler.ast.ThisReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.ThisReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ThisReference;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ThisReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ThisReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(134217866, $r3, $r2, $i1, $i0);

        return;
    }

    public void finallyMustCompleteNormally(org.eclipse.jdt.internal.compiler.ast.Block)
    {
        org.eclipse.jdt.internal.compiler.ast.Block r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Block;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Block: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871096, $r3, $r2, $i1, $i0);

        return;
    }

    public void finalMethodCannotBeOverridden(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, r10;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r10 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i0 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109265, $r1, $r6, $i0, $i1);

        return;
    }

    public void finalVariableBound(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r9;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r13;
        java.lang.String $r15, $r16, $r17, $r18;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r6;
        char[] $r4, $r8, $r11, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777753);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r15;

        $r16 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r8);

        $r1[1] = $r16;

        $r9 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r11 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r18;

        $i2 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i1 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777753, $r1, $r9, $i0, $i2, $i1);

        return;
    }

    public void forbiddenReference(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, byte, java.lang.String, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r12;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        byte b2, $b3, $b4;
        int i0, $i1, $i5, $i6, $i7, $i9;
        java.lang.String r6, $r13, $r14, $r15;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10;
        char[] $r4, $r8, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r12 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        b2 := @parameter2: byte;

        r6 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i0);

        $i9 = (int) -1;

        if $i1 != $i9 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r13 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r13;

        $b3 = 4 | b2;

        $b4 = (byte) $b3;

        $i5 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int getElaborationId(int,byte)>(16777523, $b4);

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = r6;

        $r14 = new java.lang.String;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r8);

        $r5[1] = $r14;

        $r15 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r11);

        $r5[2] = $r15;

        $i6 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r12);

        $i7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r12);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int)>(i0, $r1, $i5, $r5, $i1, $i6, $i7);

        return;
    }

    public void forbiddenReference(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, byte, java.lang.String, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        byte b2, $b3, $b4, $b8, $b9;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        java.lang.String[] $r2, $r5, $r13, $r16;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r12;
        int i0, $i1, $i5, $i6, $i7, $i10, $i11, $i12, $i14;
        java.lang.String r6, $r19, $r20, $r21, $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10;
        char[] $r4, $r8, $r11, $r15, $r18;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r12 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        b2 := @parameter2: byte;

        r6 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i0);

        $i14 = (int) -1;

        if $i1 != $i14 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label2;

        $r13 = newarray (java.lang.String)[1];

        $r19 = new java.lang.String;

        $r15 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r19;

        $b8 = 8 | b2;

        $b9 = (byte) $b8;

        $i10 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int getElaborationId(int,byte)>(16777523, $b9);

        $r16 = newarray (java.lang.String)[2];

        $r16[0] = r6;

        $r20 = new java.lang.String;

        $r18 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r18);

        $r16[1] = $r20;

        $i12 = r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i11 = r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int)>(i0, $r13, $i10, $r16, $i1, $i12, $i11);

        goto label3;

     label2:
        $r2 = newarray (java.lang.String)[1];

        $r21 = new java.lang.String;

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r21;

        $b3 = 12 | b2;

        $b4 = (byte) $b3;

        $i5 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int getElaborationId(int,byte)>(16777523, $b4);

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = r6;

        $r22 = new java.lang.String;

        $r8 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r8);

        $r5[1] = $r22;

        $r23 = new java.lang.String;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r11);

        $r5[2] = $r23;

        $i7 = r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i6 = r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int)>(i0, $r2, $i5, $r5, $i1, $i7, $i6);

     label3:
        return;
    }

    public void forbiddenReference(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, byte, java.lang.String, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r6;
        byte b2;
        int i0, $i1, $i3, $i4, $i5, $i7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        java.lang.String r7, $r10, $r11;
        char[] $r5, $r9;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        b2 := @parameter2: byte;

        r7 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        if r0 != null goto label1;

        return;

     label1:
        $i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i0);

        $i7 = (int) -1;

        if $i1 != $i7 goto label2;

        return;

     label2:
        $r2 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r10;

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int getElaborationId(int,byte)>(16777523, b2);

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = r7;

        $r11 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r9);

        $r6[1] = $r11;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int)>(i0, $r2, $i3, $r6, $i1, $i5, $i4);

        return;
    }

    public void forwardReference(org.eclipse.jdt.internal.compiler.ast.Reference, int, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.Reference r1;
        int $i0, $i1, i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Reference;

        i2 := @parameter1: int;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Reference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Reference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(570425419, $r3, $r2, $i1, $i0);

        return;
    }

    public void forwardTypeVariableReference(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777744, $r1, $r5, $i1, $i0);

        return;
    }

    public void genericTypeCannotExtendThrowable(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r5, $r9;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r7;
        int $i0, $i1;
        java.lang.String $r4, $r8;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r12;
        char[] $r6, $r10;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r11;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAnonymousType()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        goto label2;

     label1:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

     label2:
        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.String;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r7 = newarray (java.lang.String)[1];

        $r8 = new java.lang.String;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r7[0] = $r8;

        $i1 = $r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = $r12.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777773, $r3, $r7, $i1, $i0);

        return;
    }

    private void handle(int, java.lang.String[], int, java.lang.String[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r6;
        java.lang.String[] r1, r2;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r3, $r4, $r5;
        int i0, i1, i2, i3, i4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String[];

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        if $r3 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r6 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(i0, r1, i1, r2, i2, i3, i4, $r5, $r6);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = null;

        return;
    }

    private void handle(int, java.lang.String[], java.lang.String[], int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r6;
        java.lang.String[] r1, r2;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r3, $r4, $r5;
        int i0, i1, i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        if $r3 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r6 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(i0, r1, r2, i1, i2, $r5, $r6);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = null;

        return;
    }

    private void handle(int, java.lang.String[], java.lang.String[], int, int, org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.CompilationResult r3;
        java.lang.String[] r1, r2;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r4;
        int i0, i1, i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(i0, r1, r2, i1, i2, $r4, r3);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = null;

        return;
    }

    private void handle(int, java.lang.String[], java.lang.String[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2, i3;
        java.lang.String[] r1, r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],int,java.lang.String[],int,int,int)>(i0, r1, 0, r2, i1, i2, i3);

        return;
    }

    public void hiddenCatchBlock(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777381, $r1, $r5, $i1, $i0);

        return;
    }

    public void hierarchyCircularity(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        java.lang.String[] $r4, $r9, $r14, $r17;
        int i0, i1;
        java.lang.String $r5, $r7, $r10, $r12, $r15, $r18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;
        char[] $r6, $r8, $r11, $r13, $r16, $r19;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        if r0 != null goto label1;

        i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        goto label2;

     label1:
        i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        i1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

     label2:
        if r1 != r2 goto label3;

        $r14 = newarray (java.lang.String)[1];

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r14[0] = $r15;

        $r17 = newarray (java.lang.String)[1];

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r17[0] = $r18;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777532, $r14, $r17, i0, i1);

        goto label4;

     label3:
        $r4 = newarray (java.lang.String)[2];

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $r4[0] = $r5;

        $r7 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r4[1] = $r7;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r10;

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r9[1] = $r12;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777533, $r4, $r9, i0, i1);

     label4:
        return;
    }

    public void hierarchyHasProblems(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777543, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalAbstractModifierCombinationForMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r5;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109226, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalAccessFromTypeVariable(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r4;
        java.lang.String $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r3;

        r5 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int bits>;

        $i7 = (int) 32768;

        $i1 = $i0 & $i7;

        if $i1 == 0 goto label1;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidReference(int,int)>($i5, $i4);

        goto label2;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777791, $r1, $r1, $i3, $i2);

     label2:
        return;
    }

    public void illegalClassLiteralForTypeVariable(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777774, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalExtendedDimensions(org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109465, $r3, $r2, $i1, $i0);

        return;
    }

    public void illegalExtendedDimensions(org.eclipse.jdt.internal.compiler.ast.Argument)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613536, $r3, $r2, $i1, $i0);

        return;
    }

    public void illegalGenericArray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777751, $r1, $r5, $i1, $i0);

        return;
    }

    public void illegalInstanceOfGenericType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, $r6, $r12, $r19, $r25;
        boolean $z0;
        java.lang.String[] $r2, $r8, $r15, $r21;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r5, $r9, $r11, $r16, $r18, $r22, $r24;
        char[] $r4, $r7, $r10, $r13, $r17, $r20, $r23, $r26;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r14 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isTypeVariable()>();

        if $z0 == 0 goto label1;

        $r15 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r16;

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r15[1] = $r18;

        $r21 = newarray (java.lang.String)[2];

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r21[0] = $r22;

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r26);

        $r21[1] = $r24;

        $i3 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i2 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871459, $r15, $r21, $i3, $i2);

        return;

     label1:
        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r3;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r11;

        $i1 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871458, $r2, $r8, $i1, $i0);

        return;
    }

    public void illegalLocalTypeDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.String $r4;
        boolean $z0;
        char[] $r2, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        i8 = 0;

        i10 = 0;

        i9 = 0;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label2;

        i8 = 536870943;

        i10 = 536870943;

        i9 = 536870943;

        goto label4;

     label2:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i3 = $i2 & 8192;

        if $i3 == 0 goto label3;

        i8 = 536870942;

        i10 = 536870942;

        i9 = 536870942;

        goto label4;

     label3:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i5 = $i4 & 512;

        if $i5 == 0 goto label4;

        i8 = 536870938;

        i10 = 536870938;

        i9 = 536870938;

     label4:
        if i9 == 0 goto label5;

        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.String;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i10, $r3, $r3, $i7, $i6);

     label5:
        return;
    }

    public void illegalModifierCombinationFinalAbstractForClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777524, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierCombinationFinalVolatileForField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554777, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalModifierForAnnotationField(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        java.lang.String[] $r4, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r6, $r11;
        int $i0, $i1;
        java.lang.String $r0, $r5, $r10;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r12;
        char[] $r2, $r8, $r13;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r4 = newarray (java.lang.String)[2];

        $r5 = new java.lang.String;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r8);

        $r4[0] = $r5;

        $r4[1] = $r0;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r13);

        $r9[0] = $r10;

        $r9[1] = $r0;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871527, $r4, $r9, $i1, $i0);

        return;
    }

    public void illegalModifierForAnnotationMember(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r9;
        int $i0, $i1;
        java.lang.String $r2, $r7, $r10, $r14;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r12;
        char[] $r6, $r8, $r13, $r15;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r6);

        $r1[0] = $r2;

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r1[1] = $r7;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r13);

        $r9[0] = $r10;

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r9[1] = $r14;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109464, $r1, $r9, $i1, $i0);

        return;
    }

    public void illegalModifierForAnnotationMemberType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777820, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForAnnotationType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777819, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777518, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForEnum(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777966, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForEnumConstant(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33555183, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalModifierForEnumConstructor(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109624, $r3, $r2, $i1, $i0);

        return;
    }

    public void illegalModifierForField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554774, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalModifierForInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777519, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForInterfaceField(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        java.lang.String[] $r4, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r6, $r11;
        int $i0, $i1;
        java.lang.String $r0, $r5, $r10;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r12;
        char[] $r2, $r8, $r13;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r4 = newarray (java.lang.String)[2];

        $r5 = new java.lang.String;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r8);

        $r4[0] = $r5;

        $r4[1] = $r0;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r13);

        $r9[0] = $r10;

        $r9[1] = $r0;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554775, $r4, $r9, $i1, $i0);

        return;
    }

    public void illegalModifierForInterfaceMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r13;
        int $i0, $i1;
        java.lang.String $r2, $r7, $r12, $r14, $r18, $r23;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r9, $r10, $r15, $r20, $r21;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r16;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r11, $r22;
        char[] $r6, $r8, $r17, $r19;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r6);

        $r1[0] = $r2;

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r1[1] = $r7;

        $r9 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r11, 0);

        $r1[2] = $r12;

        $r13 = newarray (java.lang.String)[3];

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r17);

        $r13[0] = $r14;

        $r18 = new java.lang.String;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r13[1] = $r18;

        $r20 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r21 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r22, 1);

        $r13[2] = $r23;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109223, $r1, $r13, $i1, $i0);

        return;
    }

    public void illegalModifierForLocalClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777522, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForLocalEnum(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777968, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForMemberClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777520, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForMemberEnum(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777969, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForMemberInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777521, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalModifierForMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r13;
        int $i0, $i1;
        java.lang.String $r2, $r8, $r9, $r14, $r19, $r20;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r5, $r6, $r10, $r16, $r17, $r21;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r11, $r22;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r18;
        char[] $r4, $r12, $r15, $r23;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r7, 0);

        $r1[1] = $r8;

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r12);

        $r1[2] = $r9;

        $r13 = newarray (java.lang.String)[3];

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r14;

        $r16 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r19 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r18, 1);

        $r13[1] = $r19;

        $r20 = new java.lang.String;

        $r21 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r23);

        $r13[2] = $r20;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109222, $r1, $r13, $i1, $i0);

        return;
    }

    public void illegalModifierForVariable(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r2;
        int $i0, $i1, $i2;
        char[] $r3;
        java.lang.String $r1;
        boolean z0;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        z0 := @parameter1: boolean;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        if z0 == 0 goto label1;

        $i2 = 67109220;

        goto label2;

     label1:
        $i2 = 67109260;

     label2:
        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i2, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalPrimitiveOrArrayTypeForEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777243, $r1, $r5, $i1, $i0);

        return;
    }

    public void illegalQualifiedParameterizedTypeAllocation(org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r14;
        char[] $r4, $r7, $r10, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r11;

        $i1 = r14.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r14.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777782, $r1, $r8, $i1, $i0);

        return;
    }

    public void illegalStaticModifierForMemberType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777527, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalUsageOfQualifiedTypeReference(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r6;
        java.lang.String[] $r4;
        char[][] r2;
        java.lang.StringBuffer $r0;
        int $i0, $i1, i2, $i3;
        char[] $r3;
        java.lang.String $r5;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r1;

        r6 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: char[][] tokens>;

        i2 = 0;

        goto label3;

     label1:
        if i2 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

     label2:
        $r3 = r2[i2];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        i2 = i2 + 1;

     label3:
        $i3 = lengthof r2;

        if i2 < $i3 goto label1;

        $r4 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r4[0] = $r5;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: int sourceEnd>;

        specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612934, $r4, $r4, $i1, $i0);

        return;
    }

    public void illegalUsageOfWildcard(org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613314, $r3, $r2, $i1, $i0);

        return;
    }

    public void illegalVararg(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r8;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2;
        char[][] $r3;
        int $i0, $i1;
        char[] $r7;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r6;
        java.lang.String $r4, $r5;

        r8 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r3);

        $r0[0] = $r4;

        $r5 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r0[1] = $r5;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        specialinvoke r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109279, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalVisibilityModifierCombinationForField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554776, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalVisibilityModifierCombinationForMemberType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777526, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalVisibilityModifierCombinationForMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r5;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109224, $r0, $r0, $i1, $i0);

        return;
    }

    public void illegalVisibilityModifierForInterfaceMemberType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777525, $r0, $r0, $i0, $i1);

        return;
    }

    public void illegalVoidExpression(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871076, $r3, $r2, $i1, $i0);

        return;
    }

    public void importProblem(org.eclipse.jdt.internal.compiler.ast.ImportReference, org.eclipse.jdt.internal.compiler.lookup.Binding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r39;
        char[][] $r28, $r34, $r42, r43;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r14, $r19;
        boolean $z0, $z1;
        java.lang.String[] $r4, $r7, $r11, $r16, $r21, $r24, $r27, $r33, r40, r41;
        long $l4, $l9;
        org.eclipse.jdt.internal.compiler.lookup.Binding r0;
        long[] $r6, $r9;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, i13, $i14, $i15;
        java.lang.String $r5, $r8, $r12, $r17, $r22, $r25, $r29, $r30, $r35, $r36;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r13, $r18, $r31, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r10;
        char[] $r15, $r20, $r23, $r26, $r32, $r38;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z0 == 0 goto label5;

        i13 = 33554502;

        r39 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) r0;

        r40 = (java.lang.String[]) null;

        r41 = (java.lang.String[]) null;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: int problemId()>();

        tableswitch($i12)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        i13 = 33554503;

        $r27 = newarray (java.lang.String)[2];

        $r28 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r29 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r28);

        $r27[0] = $r29;

        $r30 = new java.lang.String;

        $r31 = r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r32);

        $r27[1] = $r30;

        r40 = $r27;

        $r33 = newarray (java.lang.String)[2];

        $r34 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r35 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r34);

        $r33[0] = $r35;

        $r36 = new java.lang.String;

        $r37 = r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r38 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r38);

        $r33[1] = $r36;

        r41 = $r33;

        goto label4;

     label2:
        i13 = 33554504;

        $r21 = newarray (java.lang.String)[1];

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r21[0] = $r22;

        r40 = $r21;

        $r24 = newarray (java.lang.String)[1];

        $r25 = new java.lang.String;

        $r26 = virtualinvoke r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26);

        $r24[0] = $r25;

        r41 = $r24;

        goto label4;

     label3:
        i13 = 16777219;

        $r11 = newarray (java.lang.String)[1];

        $r12 = new java.lang.String;

        $r13 = r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r15);

        $r11[0] = $r12;

        r40 = $r11;

        $r16 = newarray (java.lang.String)[1];

        $r17 = new java.lang.String;

        $r18 = r39.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r20);

        $r16[0] = $r17;

        r41 = $r16;

     label4:
        $i14 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r39, r2);

        $i15 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r39, r2);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i13, r40, r41, $i14, $i15);

        return;

     label5:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: int problemId()>();

        if $i0 != 1 goto label8;

        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        if $z1 == 0 goto label6;

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding) r0;

        $r42 = $r10.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: char[][] compoundName>;

        goto label7;

     label6:
        $r42 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

     label7:
        $r7 = newarray (java.lang.String)[1];

        $r8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r42);

        $r7[0] = $r8;

        $i11 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: long[] sourcePositions>;

        $i7 = lengthof $r42;

        $i8 = $i7 - 1;

        $l9 = $r9[$i8];

        $i10 = (int) $l9;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(268435846, $r7, $r7, $i11, $i10);

        return;

     label8:
        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: int problemId()>();

        if $i1 != 14 goto label9;

        r43 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r4 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>(r43);

        $r4[0] = $r5;

        $i6 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: long[] sourcePositions>;

        $i2 = lengthof r43;

        $i3 = $i2 - 1;

        $l4 = $r6[$i3];

        $i5 = (int) $l4;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(268435847, $r4, $r4, $i6, $i5);

        return;

     label9:
        $r3 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) r0;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r3);

        return;
    }

    public void incompatibleExceptionInThrowsClause(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r14;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r0;
        java.lang.String[] $r4, $r19, $r33, $r41;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r5, $r8, $r13, $r20, $r22, $r27, $r34, $r36, $r42, $r44;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, r6, $r9, $r15, $r23, $r28, $r32, $r37, $r45;
        char[] $r7, $r10, $r11, $r12, $r16, $r17, $r18, $r21, $r24, $r25, $r26, $r29, $r30, $r31, $r35, $r38, $r39, $r40, $r43, $r46, $r47, $r48;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r14 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if r0 != $r2 goto label3;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z1 != 0 goto label1;

        i2 = 67109278;

        goto label2;

     label1:
        i2 = 67109266;

     label2:
        $r33 = newarray (java.lang.String)[2];

        $r34 = new java.lang.String;

        $r35 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r35);

        $r33[0] = $r34;

        $r36 = new java.lang.String;

        $r37 = r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r38 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r39 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r40 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r38, $r39, 46);

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r40);

        $r33[1] = $r36;

        $r41 = newarray (java.lang.String)[2];

        $r42 = new java.lang.String;

        $r43 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r42.<java.lang.String: void <init>(char[])>($r43);

        $r41[0] = $r42;

        $r44 = new java.lang.String;

        $r45 = r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r46 = virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r47 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r48 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r46, $r47, 46);

        specialinvoke $r44.<java.lang.String: void <init>(char[])>($r48);

        $r41[1] = $r44;

        $i3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i2, $r33, $r41, $i3, $i4);

        goto label4;

     label3:
        $r4 = newarray (java.lang.String)[3];

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r5;

        $r8 = new java.lang.String;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        $r11 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r12 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r10, $r11, 46);

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r12);

        $r4[1] = $r8;

        $r13 = new java.lang.String;

        $r15 = r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r17 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r18 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r16, $r17, 46);

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r18);

        $r4[2] = $r13;

        $r19 = newarray (java.lang.String)[3];

        $r20 = new java.lang.String;

        $r21 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r21);

        $r19[0] = $r20;

        $r22 = new java.lang.String;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        $r25 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r26 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r24, $r25, 46);

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r26);

        $r19[1] = $r22;

        $r27 = new java.lang.String;

        $r28 = r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r30 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r31 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r29, $r30, 46);

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r31);

        $r19[2] = $r27;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109267, $r4, $r19, $i0, $i1);

     label4:
        return;
    }

    public void incompatibleReturnType(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r17;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, r13;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r18, r21;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference r22;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r20;
        java.lang.String[] $r24, $r26;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r10, $r11;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r15;
        java.lang.String $r25, $r27;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r8, r14;
        char[] $r3, $r6, $r9, $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r19;

        r16 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r12 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        r14 = r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z0 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $z5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPublic()>();

        if $z5 != 0 goto label1;

        i6 = 67109277;

        goto label2;

     label1:
        i6 = 67109268;

     label2:
        $r19 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration sourceMethod()>();

        i7 = 0;

        i8 = 0;

        if $r19 != null goto label3;

        $z4 = r14 instanceof org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        if $z4 == 0 goto label8;

        r20 = (org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding) r14;

        i7 = virtualinvoke r20.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        i8 = virtualinvoke r20.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        goto label8;

     label3:
        $z1 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z1 == 0 goto label4;

        i7 = $r19.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        i8 = $r19.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        goto label8;

     label4:
        $r15 = (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration) $r19;

        r21 = $r15.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        i7 = r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $z2 = r21 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;

        if $z2 == 0 goto label6;

        r22 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference) r21;

        r17 = r22.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $i1 = lengthof r17;

        $i2 = $i1 - 1;

        $r18 = r17[$i2];

        $i4 = $r18.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        $i3 = r22.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int sourceEnd>;

        if $i4 <= $i3 goto label5;

        $i5 = r22.<org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference: int sourceEnd>;

        i8 = specialinvoke r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int retrieveClosingAngleBracketPosition(int)>($i5);

        goto label8;

     label5:
        i8 = r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        goto label8;

     label6:
        $z3 = r21 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z3 == 0 goto label7;

        r23 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) r21;

        $i0 = r23.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: int sourceEnd>;

        i8 = specialinvoke r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int retrieveClosingAngleBracketPosition(int)>($i0);

        goto label8;

     label7:
        i8 = r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

     label8:
        $r24 = newarray (java.lang.String)[1];

        $r25 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24[0] = $r25;

        $r26 = newarray (java.lang.String)[1];

        $r27 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26[0] = $r27;

        specialinvoke r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i6, $r24, $r26, i7, i8);

        return;
    }

    public void incorrectArityForParameterizedType(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r8, $r12, $r16;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, $i1;
        java.lang.String $r3, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r6;
        char[] $r5, $r10, $r14, $r18;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        if r0 != null goto label1;

        $r12 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r13;

        $r15 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r12[1] = $r15;

        $r16 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r18 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r18);

        $r16[0] = $r17;

        $r19 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r16[1] = $r19;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777741, $r12, $r16, 131, 0, 0);

        return;

     label1:
        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r2[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r8[1] = $r11;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777741, $r2, $r8, $i1, $i0);

        return;
    }

    public void incorrectLocationForNonEmptyDimension(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r2, $r4;
        java.lang.String[] $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r5;
        int i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        i0 := @parameter1: int;

        $r7 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r6 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] dimensions>;

        $r3 = $r2[i0];

        $i2 = $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] dimensions>;

        $r5 = $r4[i0];

        $i1 = $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871114, $r7, $r6, $i2, $i1);

        return;
    }

    public void incorrectSwitchType(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777385, $r1, $r5, $i1, $i0);

        return;
    }

    public void indirectAccessToStaticField(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r15, $r16, $r17, $r18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(570425422);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r15;

        $r16 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r16;

        $r8 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r18;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(570425422, $r1, $r8, $i0, $i1, $i2);

        return;
    }

    public void indirectAccessToStaticMethod(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r10;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r18;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r9, $r17, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16;
        char[] $r5, $r7, $r13, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r18 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(603979895);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r19;

        $r20 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r20;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r8, 0);

        $r1[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r21 = new java.lang.String;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r21;

        $r22 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r22;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r16, 1);

        $r10[2] = $r17;

        $i2 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(603979895, $r1, $r10, $i0, $i2, $i1);

        return;
    }

    public void inheritedMethodReducesVisibility(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r28;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r13;
        java.lang.String[] $r14, $r21;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r17;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r15, $r16, $r22, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1, $r18, $r25;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r8, $r19, $r26;
        char[] $r3, $r6, $r9, $r12, $r20, $r27;

        r13 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r28 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r17 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r12 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        $r14 = newarray (java.lang.String)[2];

        $r15 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14[0] = $r15;

        $r16 = new java.lang.String;

        $r18 = r17[0];

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r20);

        $r14[1] = $r16;

        $r21 = newarray (java.lang.String)[2];

        $r22 = new java.lang.String;

        $r23 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.String: void <init>(java.lang.String)>($r23);

        $r21[0] = $r22;

        $r24 = new java.lang.String;

        $r25 = r17[0];

        $r26 = $r25.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r27);

        $r21[1] = $r24;

        $i0 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r28.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109269, $r14, $r21, $i0, $i1);

        return;
    }

    public void inheritedMethodsHaveIncompatibleReturnTypes(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r17;
        java.lang.String[] $r18, $r20;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r2;
        java.lang.StringBuffer $r6, $r7, $r13, $r14, $r23, $r24;
        int i0, $i1, $i2, i3, $i5;
        java.lang.String $r19, $r21;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r3, $r8, $r10, $r15;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r11;
        char[] $r5, $r9, $r12, $r16;

        r17 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r22 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter2: int;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        i3 = i0;

        goto label2;

     label1:
        $r3 = r2[i3];

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r6 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r8 = r2[i3];

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        $r10 = r2[i3];

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r13 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r15 = r2[i3];

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r16);

        if i3 == 0 goto label2;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 >= 0 goto label1;

        $r18 = newarray (java.lang.String)[1];

        $r19 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18[0] = $r19;

        $r20 = newarray (java.lang.String)[1];

        $r21 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20[0] = $r21;

        $i2 = r22.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r22.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109268, $r18, $r20, $i2, $i1);

        return;
    }

    public void inheritedMethodsHaveIncompatibleReturnTypes(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r22;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r17;
        java.lang.String[] $r18, $r20;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r2;
        java.lang.StringBuffer $r6, $r7, $r13, $r14, $r23, $r24;
        int i0, $i1, $i2, i3, $i5;
        java.lang.String $r19, $r21;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r3, $r8, $r10, $r15;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r11;
        char[] $r5, $r9, $r12, $r16;

        r17 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r22 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        i0 := @parameter2: int;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        i3 = i0;

        goto label2;

     label1:
        $r3 = r2[i3];

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r6 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r8 = r2[i3];

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        $r10 = r2[i3];

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r13 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r15 = r2[i3];

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r16);

        if i3 == 0 goto label2;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 >= 0 goto label1;

        $r18 = newarray (java.lang.String)[1];

        $r19 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18[0] = $r19;

        $r20 = newarray (java.lang.String)[1];

        $r21 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r20[0] = $r21;

        $i1 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i2 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r17.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109268, $r18, $r20, $i1, $i2);

        return;
    }

    public void inheritedMethodsHaveNameClash(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r5, $r6, r12, $r13, $r14, $r23, $r24, $r30, $r31;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r37;
        java.lang.String[] $r1, $r20;
        int $i0, $i1;
        java.lang.String $r2, $r8, $r9, $r16, $r17, $r21, $r26, $r27, $r33, $r34;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10, $r18, $r28, $r35;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r15, $r25, $r32;
        char[] $r4, $r11, $r19, $r22, $r29, $r36;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r37 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r12 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[5];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r7, 0);

        $r1[1] = $r8;

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r1[2] = $r9;

        $r13 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z1 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r16 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r15, 0);

        $r1[3] = $r16;

        $r17 = new java.lang.String;

        $r18 = r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r19);

        $r1[4] = $r17;

        $r20 = newarray (java.lang.String)[5];

        $r21 = new java.lang.String;

        $r22 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r22);

        $r20[0] = $r21;

        $r23 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z2 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r25 = $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r26 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r25, 1);

        $r20[1] = $r26;

        $r27 = new java.lang.String;

        $r28 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r29);

        $r20[2] = $r27;

        $r30 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z3 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r31 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r32 = $r31.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r33 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r32, 1);

        $r20[3] = $r33;

        $r34 = new java.lang.String;

        $r35 = r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r36 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r36);

        $r20[4] = $r34;

        $i0 = virtualinvoke r37.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r37.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109424, $r1, $r20, $i0, $i1);

        return;
    }

    public void initializerMustCompleteNormally(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871075, $r3, $r2, $i1, $i0);

        return;
    }

    public void innerTypesCannotDeclareStaticInitializers(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.Initializer)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;
        org.eclipse.jdt.internal.compiler.ast.Initializer r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Initializer;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870936, $r1, $r5, $i1, $i0);

        return;
    }

    public void interfaceCannotHaveConstructors(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd>;

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(1610612943, $r2, $r3, $i0, $i1, r1, $r4);

        return;
    }

    public void interfaceCannotHaveInitializers(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r5;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777516, $r0, $r0, $i1, $i0);

        return;
    }

    public void invalidAnnotationMemberType(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r16;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r3;
        java.lang.String $r2, $r7, $r9, $r14, $r18, $r20;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r10, $r15, $r21;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r11, $r22;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r24, $r25;
        char[] $r6, $r8, $r12, $r17, $r19, $r23;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r6);

        $r1[0] = $r2;

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r1[1] = $r7;

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r12);

        $r1[2] = $r9;

        $r13 = newarray (java.lang.String)[3];

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r17);

        $r13[0] = $r14;

        $r18 = new java.lang.String;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r13[1] = $r18;

        $r20 = new java.lang.String;

        $r21 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r23);

        $r13[2] = $r20;

        $r24 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i1 = $r24.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $r25 = r3.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i0 = $r25.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777821, $r1, $r13, $i1, $i0);

        return;
    }

    public void invalidBreak(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871084, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidConstructor(org.eclipse.jdt.internal.compiler.ast.Statement, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        byte $b7;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r104, $r106, $r145, $r146, $r147, $r148, r156, $r159, r162, r164, r166;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r154;
        long $l5, $l6;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding r157, $r158, r160, r161, r163, r165;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r54, $r55, $r65, $r78;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding $r35, $r49, r105;
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r153;
        int i0, $i1, $i2, $i3, $i4, $i8, i9, i10, i11, $i12;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r112;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r13, $r19, $r24, $r30, $r36, $r38, $r44, $r50, $r52, $r60, $r67, $r73, $r80, $r86, $r91, $r97, $r102, $r107, $r108, $r110, r113, $r114, $r119, $r134, $r171, $r177;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r109, $r111;
        java.lang.String $r5, $r9, $r10, $r14, $r16, $r20, $r21, $r25, $r27, $r31, $r32, $r37, $r39, $r41, $r45, $r46, $r51, $r53, $r57, $r61, $r62, $r66, $r68, $r70, $r74, $r75, $r79, $r81, $r83, $r87, $r88, $r92, $r94, $r98, $r99, $r103, $r116, $r120, $r121, $r124, $r125, $r127, $r129, $r131, $r135, $r136, $r139, $r140, $r142, $r144, $r168, $r172, $r174, $r178;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r155;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r152;
        char[] $r7, $r12, $r18, $r23, $r29, $r34, $r43, $r48, $r59, $r64, $r72, $r77, $r85, $r90, $r96, $r101, $r118, $r123, $r126, $r128, $r133, $r138, $r141, $r143, $r170, $r176;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r149, $r150, $r151;
        boolean $z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        java.lang.String[] $r4, $r15, $r26, $r40, $r56, $r69, $r82, $r93, $r115, $r130, $r167, $r173;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, $r11, $r17, $r22, $r28, $r33, $r42, $r47, $r58, $r63, $r71, $r76, $r84, $r89, $r95, $r100, $r117, $r122, $r132, $r137, $r169, $r175;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z0 = $r1 instanceof org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        if $z0 == 0 goto label01;

        $r153 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r154 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r153;

        $z21 = virtualinvoke $r154.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean isDefaultConstructor()>();

        if $z21 == 0 goto label01;

        $z22 = 1;

        goto label02;

     label01:
        $z22 = 0;

     label02:
        z1 = $z22;

        $z23 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z23 == 0 goto label03;

        $r152 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) r2;

        $i8 = $r152.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i8 != 1 goto label03;

        $z24 = 1;

        goto label04;

     label03:
        $z24 = 0;

     label04:
        z2 = $z24;

        i9 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        i10 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        $z25 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z25 == 0 goto label05;

        r155 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) r2;

        $r149 = r155.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        if $r149 == null goto label05;

        $r150 = r155.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        i9 = $r150.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $r151 = r155.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        i10 = $r151.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

     label05:
        i11 = 134217858;

        r156 = r3;

        $i12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int problemId()>();

        tableswitch($i12)
        {
            case 0: goto label23;
            case 1: goto label06;
            case 2: goto label10;
            case 3: goto label14;
            case 4: goto label23;
            case 5: goto label23;
            case 6: goto label23;
            case 7: goto label23;
            case 8: goto label23;
            case 9: goto label23;
            case 10: goto label17;
            case 11: goto label18;
            case 12: goto label21;
            case 13: goto label22;
            default: goto label23;
        };

     label06:
        r157 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r146 = r157.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if $r146 == null goto label07;

        $r147 = r157.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $l5 = $r147.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l6 = $l5 & 128L;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label07;

        $r148 = r157.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingTypeInConstructor(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2, $r148);

        return;

     label07:
        if z1 == 0 goto label08;

        i11 = 134217868;

        goto label24;

     label08:
        if z2 == 0 goto label09;

        i11 = 134217871;

        goto label24;

     label09:
        i11 = 134217858;

        goto label24;

     label10:
        if z1 == 0 goto label11;

        i11 = 134217869;

        goto label13;

     label11:
        if z2 == 0 goto label12;

        i11 = 134217872;

        goto label13;

     label12:
        i11 = 134217859;

     label13:
        $r158 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r159 = $r158.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if $r159 == null goto label24;

        $r145 = $r158.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r156 = virtualinvoke $r145.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        goto label24;

     label14:
        if z1 == 0 goto label15;

        i11 = 134217870;

        goto label24;

     label15:
        if z2 == 0 goto label16;

        i11 = 134217873;

        goto label24;

     label16:
        i11 = 134217860;

        goto label24;

     label17:
        r160 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r104 = r160.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r105 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) $r104;

        $r106 = virtualinvoke r105.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r107 = r160.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof $r107;

        $r108 = r160.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i1 = i0 - 2;

        r109 = $r108[$i1];

        $r110 = r160.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i2 = i0 - 1;

        $r111 = $r110[$i2];

        r112 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) $r111;

        $i3 = i0 - 2;

        r113 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i3];

        $r114 = r160.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i4 = i0 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r114, 0, r113, 0, $i4);

        $r115 = newarray (java.lang.String)[7];

        $r116 = new java.lang.String;

        $r117 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r118 = virtualinvoke $r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r116.<java.lang.String: void <init>(char[])>($r118);

        $r115[0] = $r116;

        $z19 = virtualinvoke $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r119 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r120 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z19, $r119, 0);

        $r115[1] = $r120;

        $r121 = new java.lang.String;

        $r122 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r123 = virtualinvoke $r122.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r121.<java.lang.String: void <init>(char[])>($r123);

        $r115[2] = $r121;

        $r124 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r113, 0);

        $r115[3] = $r124;

        $r125 = new java.lang.String;

        $r126 = virtualinvoke r109.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r125.<java.lang.String: void <init>(char[])>($r126);

        $r115[4] = $r125;

        $r127 = new java.lang.String;

        $r128 = r112.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r127.<java.lang.String: void <init>(char[])>($r128);

        $r115[5] = $r127;

        $r129 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r112, 0);

        $r115[6] = $r129;

        $r130 = newarray (java.lang.String)[7];

        $r131 = new java.lang.String;

        $r132 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r133 = virtualinvoke $r132.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r131.<java.lang.String: void <init>(char[])>($r133);

        $r130[0] = $r131;

        $z20 = virtualinvoke $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r134 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r135 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z20, $r134, 1);

        $r130[1] = $r135;

        $r136 = new java.lang.String;

        $r137 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r138 = virtualinvoke $r137.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r136.<java.lang.String: void <init>(char[])>($r138);

        $r130[2] = $r136;

        $r139 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r113, 1);

        $r130[3] = $r139;

        $r140 = new java.lang.String;

        $r141 = virtualinvoke r109.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r140.<java.lang.String: void <init>(char[])>($r141);

        $r130[4] = $r140;

        $r142 = new java.lang.String;

        $r143 = r112.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r142.<java.lang.String: void <init>(char[])>($r143);

        $r130[5] = $r142;

        $r144 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r112, 1);

        $r130[6] = $r144;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777760, $r115, $r130, i9, i10);

        return;

     label18:
        r161 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r162 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r55 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r54 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r55 != $r54 goto label19;

        $r82 = newarray (java.lang.String)[4];

        $r83 = new java.lang.String;

        $r84 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r85 = virtualinvoke $r84.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r83.<java.lang.String: void <init>(char[])>($r85);

        $r82[0] = $r83;

        $z15 = virtualinvoke r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r86 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r87 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z15, $r86, 0);

        $r82[1] = $r87;

        $r88 = new java.lang.String;

        $r89 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r90 = virtualinvoke $r89.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r88.<java.lang.String: void <init>(char[])>($r90);

        $r82[2] = $r88;

        $z16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r91 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r92 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z16, $r91, 0);

        $r82[3] = $r92;

        $r93 = newarray (java.lang.String)[4];

        $r94 = new java.lang.String;

        $r95 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r96 = virtualinvoke $r95.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r94.<java.lang.String: void <init>(char[])>($r96);

        $r93[0] = $r94;

        $z17 = virtualinvoke r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r97 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r98 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z17, $r97, 1);

        $r93[1] = $r98;

        $r99 = new java.lang.String;

        $r100 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r101 = virtualinvoke $r100.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r99.<java.lang.String: void <init>(char[])>($r101);

        $r93[2] = $r99;

        $z18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r102 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r103 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z18, $r102, 1);

        $r93[3] = $r103;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777767, $r82, $r93, i9, i10);

        goto label20;

     label19:
        $r56 = newarray (java.lang.String)[5];

        $r57 = new java.lang.String;

        $r58 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r59 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r59);

        $r56[0] = $r57;

        $z11 = virtualinvoke r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r60 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z11, $r60, 0);

        $r56[1] = $r61;

        $r62 = new java.lang.String;

        $r63 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r64 = virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r62.<java.lang.String: void <init>(char[])>($r64);

        $r56[2] = $r62;

        $r65 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r66 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r65, 0);

        $r56[3] = $r66;

        $z12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r67 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r68 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z12, $r67, 0);

        $r56[4] = $r68;

        $r69 = newarray (java.lang.String)[5];

        $r70 = new java.lang.String;

        $r71 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r72 = virtualinvoke $r71.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r70.<java.lang.String: void <init>(char[])>($r72);

        $r69[0] = $r70;

        $z13 = virtualinvoke r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r73 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r74 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z13, $r73, 1);

        $r69[1] = $r74;

        $r75 = new java.lang.String;

        $r76 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r77 = virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r75.<java.lang.String: void <init>(char[])>($r77);

        $r69[2] = $r75;

        $r78 = r162.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r79 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r78, 1);

        $r69[3] = $r79;

        $z14 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r80 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r81 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z14, $r80, 1);

        $r69[4] = $r81;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777768, $r56, $r69, i9, i10);

     label20:
        return;

     label21:
        r163 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r164 = r163.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r26 = newarray (java.lang.String)[5];

        $r27 = new java.lang.String;

        $r28 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r29);

        $r26[0] = $r27;

        $z7 = virtualinvoke r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z7, $r30, 0);

        $r26[1] = $r31;

        $r32 = new java.lang.String;

        $r33 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r34);

        $r26[2] = $r32;

        $r35 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r164;

        $r36 = $r35.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r37 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r36, 0);

        $r26[3] = $r37;

        $z8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r38 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r39 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z8, $r38, 0);

        $r26[4] = $r39;

        $r40 = newarray (java.lang.String)[5];

        $r41 = new java.lang.String;

        $r42 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r43 = virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r43);

        $r40[0] = $r41;

        $z9 = virtualinvoke r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r44 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r45 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z9, $r44, 1);

        $r40[1] = $r45;

        $r46 = new java.lang.String;

        $r47 = r164.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r48 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r46.<java.lang.String: void <init>(char[])>($r48);

        $r40[2] = $r46;

        $r49 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r164;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r51 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r50, 1);

        $r40[3] = $r51;

        $z10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r52 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r53 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z10, $r52, 1);

        $r40[4] = $r53;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777769, $r26, $r40, i9, i10);

        return;

     label22:
        r165 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r166 = r165.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r4 = newarray (java.lang.String)[4];

        $r5 = new java.lang.String;

        $r6 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r5;

        $z3 = virtualinvoke r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r8, 0);

        $r4[1] = $r9;

        $r10 = new java.lang.String;

        $r11 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r12);

        $r4[2] = $r10;

        $z4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r13, 0);

        $r4[3] = $r14;

        $r15 = newarray (java.lang.String)[4];

        $r16 = new java.lang.String;

        $r17 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r16;

        $z5 = virtualinvoke r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r19 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r20 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r19, 1);

        $r15[1] = $r20;

        $r21 = new java.lang.String;

        $r22 = r166.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r23);

        $r15[2] = $r21;

        $z6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r24, 1);

        $r15[3] = $r25;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777771, $r4, $r15, i9, i10);

        return;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2);

     label24:
        $r167 = newarray (java.lang.String)[2];

        $r168 = new java.lang.String;

        $r169 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r170 = virtualinvoke $r169.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r168.<java.lang.String: void <init>(char[])>($r170);

        $r167[0] = $r168;

        $z26 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r171 = r156.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r172 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z26, $r171, 0);

        $r167[1] = $r172;

        $r173 = newarray (java.lang.String)[2];

        $r174 = new java.lang.String;

        $r175 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r176 = virtualinvoke $r175.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r174.<java.lang.String: void <init>(char[])>($r176);

        $r173[0] = $r174;

        $z27 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r177 = r156.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r178 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z27, $r177, 1);

        $r173[1] = $r178;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i11, $r167, $r173, i9, i10);

        return;
    }

    public void invalidContinue(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871085, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidEnclosingType(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;
        boolean $z0;
        java.lang.String[] $r6, $r16;
        java.lang.StringBuffer $r7, $r11, $r14, $r17, $r21, $r24;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String $r8, $r10, $r12, $r15, $r18, $r20, $r22, $r25;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        char[] $r0, $r4, $r9, $r13, $r19, $r23;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $z0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAnonymousType()>();

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

     label1:
        $r0 = r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName>;

        if $r0 == null goto label2;

        $r4 = r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName>;

        $i1 = lengthof $r4;

        if $i1 != 0 goto label2;

        return;

     label2:
        i2 = 16777218;

        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label7;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label3:
        i2 = 16777218;

        goto label8;

     label4:
        i2 = 16777219;

        goto label8;

     label5:
        i2 = 16777220;

        goto label8;

     label6:
        i2 = 16777222;

        goto label8;

     label7:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3);

     label8:
        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.StringBuffer;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6[0] = $r15;

        $r16 = newarray (java.lang.String)[1];

        $r17 = new java.lang.StringBuffer;

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r18);

        specialinvoke $r17.<java.lang.StringBuffer: void <init>(java.lang.String)>($r20);

        $r21 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16[0] = $r25;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i2, $r6, $r16, $i3, $i4);

        return;
    }

    public void invalidExplicitConstructorCall(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1207959691, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidExpressionAsStatement(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612958, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidField(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        org.eclipse.jdt.internal.compiler.ast.Expression $r13, $r14, $r35, $r36;
        byte $b7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r6, $r7, $r11, $r29, $r33;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r1;
        java.lang.String[] $r4, $r9, $r15, $r21, $r27, $r31, $r37;
        long $l5, $l6;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, i10, $i11, $i12;
        java.lang.String $r5, $r10, $r16, $r18, $r22, $r24, $r28, $r32, $r38;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r19, $r25;
        char[] $r2, $r8, $r12, $r17, $r20, $r23, $r26, $r30, $r34, $r39;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: char[] token>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        i10 = 33554502;

        r3 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label10;
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label10;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label09;
            default: goto label10;
        };

     label02:
        $l5 = r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l6 = $l5 & 128L;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label03;

        $r27 = newarray (java.lang.String)[1];

        $r28 = new java.lang.String;

        $r29 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r30 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r30);

        $r27[0] = $r28;

        $r31 = newarray (java.lang.String)[1];

        $r32 = new java.lang.String;

        $r33 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r34);

        $r31[0] = $r32;

        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i9 = $r35.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r36 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i8 = $r36.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r27, $r31, $i9, $i8);

        return;

     label03:
        i10 = 33554502;

        goto label11;

     label04:
        $r15 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: char[] token>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r16;

        $r18 = new java.lang.String;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r15[1] = $r18;

        $r21 = newarray (java.lang.String)[2];

        $r22 = new java.lang.String;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: char[] token>;

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r21[0] = $r22;

        $r24 = new java.lang.String;

        $r25 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r26);

        $r21[1] = $r24;

        $i3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r1);

        $i4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554503, $r15, $r21, $i3, $i4);

        return;

     label05:
        i10 = 33554504;

        goto label11;

     label06:
        i10 = 33554506;

        goto label11;

     label07:
        i10 = 134217863;

        goto label11;

     label08:
        i10 = 33554628;

        goto label11;

     label09:
        $r4 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r8);

        $r4[0] = $r5;

        $r9 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r10;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i2 = $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldReference: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i1 = $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777219, $r4, $r9, $i2, $i1);

        return;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r1);

     label11:
        $r37 = newarray (java.lang.String)[1];

        $r38 = new java.lang.String;

        $r39 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r39);

        $r37[0] = $r38;

        $i11 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r1);

        $i12 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i10, $r37, $r37, $i11, $i12);

        return;
    }

    public void invalidField(org.eclipse.jdt.internal.compiler.ast.NameReference, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r33;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        char[][] $r32;
        byte $b7;
        org.eclipse.jdt.internal.compiler.ast.NameReference r0;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r34;
        java.lang.String[] $r4, $r8, $r14, $r19, $r24, $r28, $r36;
        long $l5, $l6;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, i10, $i11, $i12;
        java.lang.String $r5, $r9, $r15, $r16, $r20, $r21, $r25, $r29, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, $r10, $r17, $r22, $r26, $r30, r35;
        char[] $r2, $r7, $r11, $r12, $r13, $r18, $r23, $r27, $r31, $r38;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NameReference;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        if $z0 == 0 goto label01;

        r33 = (org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) r0;

        $r32 = r33.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $z2 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r32);

        if $z2 == 0 goto label02;

        return;

     label01:
        r34 = (org.eclipse.jdt.internal.compiler.ast.SingleNameReference) r0;

        $r2 = r34.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        $z1 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z1 == 0 goto label02;

        return;

     label02:
        i10 = 33554502;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label11;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label11;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label10;
            default: goto label11;
        };

     label03:
        r35 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if r35 == null goto label04;

        $l5 = r35.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l6 = $l5 & 128L;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label04;

        $r24 = newarray (java.lang.String)[1];

        $r25 = new java.lang.String;

        $r26 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r27);

        $r24[0] = $r25;

        $r28 = newarray (java.lang.String)[1];

        $r29 = new java.lang.String;

        $r30 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r31);

        $r28[0] = $r29;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceStart>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r24, $r28, $i9, $i8);

        return;

     label04:
        i10 = 33554502;

        goto label12;

     label05:
        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        $r13 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] lastSegment(char[],char)>($r12, 46);

        $r14 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r13);

        $r14[0] = $r15;

        $r16 = new java.lang.String;

        $r17 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r14[1] = $r16;

        $r19 = newarray (java.lang.String)[2];

        $r20 = new java.lang.String;

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r13);

        $r19[0] = $r20;

        $r21 = new java.lang.String;

        $r22 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r23);

        $r19[1] = $r21;

        $i3 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r0);

        $i4 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r0);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554503, $r14, $r19, $i3, $i4);

        return;

     label06:
        i10 = 33554504;

        goto label12;

     label07:
        i10 = 33554506;

        goto label12;

     label08:
        i10 = 134217863;

        goto label12;

     label09:
        i10 = 33554628;

        goto label12;

     label10:
        $r4 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r5;

        $r8 = newarray (java.lang.String)[1];

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r9;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceStart>;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777219, $r4, $r8, $i2, $i1);

        return;

     label11:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0);

     label12:
        $r36 = newarray (java.lang.String)[1];

        $r37 = new java.lang.String;

        $r38 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r38);

        $r36[0] = $r37;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceStart>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i10, $r36, $r36, $i11, $i12);

        return;
    }

    public void invalidField(org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference, org.eclipse.jdt.internal.compiler.lookup.FieldBinding, int, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r4;
        char[][] $r2, $r15, $r37, $r38, $r41, $r46, $r47, $r50, $r54, $r55;
        byte $b10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, $r7, $r11, $r27, $r31;
        long $l3, $l8, $l9, $l12, $l15, $l21;
        java.lang.String $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r35, $r39, $r40, $r44, $r48, $r49, $r56;
        char[] $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36, $r42, $r45, $r51;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1;
        java.lang.String[] $r5, $r9, $r17, $r21, $r25, $r29, $r34, $r43, $r53;
        long[] $r13, $r33, $r52, $r57;
        int $i0, i1, $i2, $i4, $i5, $i6, $i7, $i11, $i13, $i14, $i16, $i17, i18, $i19, $i20, $i22;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r19, $r23;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        i1 := @parameter2: int;

        r3 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label02;

        $r34 = newarray (java.lang.String)[3];

        $r35 = new java.lang.String;

        $r36 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r36);

        $r34[0] = $r35;

        $r37 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $r38 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] subarray(char[][],int,int)>($r37, 0, i1);

        $r39 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r38);

        $r34[1] = $r39;

        $r40 = new java.lang.String;

        $r41 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $r42 = $r41[i1];

        specialinvoke $r40.<java.lang.String: void <init>(char[])>($r42);

        $r34[2] = $r40;

        $r43 = newarray (java.lang.String)[3];

        $r44 = new java.lang.String;

        $r45 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r44.<java.lang.String: void <init>(char[])>($r45);

        $r43[0] = $r44;

        $r46 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $r47 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] subarray(char[][],int,int)>($r46, 0, i1);

        $r48 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r47);

        $r43[1] = $r48;

        $r49 = new java.lang.String;

        $r50 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $r51 = $r50[i1];

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r51);

        $r43[2] = $r49;

        $i17 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int sourceStart>;

        $r52 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $l15 = $r52[i1];

        $i16 = (int) $l15;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554653, $r34, $r43, $i17, $i16);

        return;

     label02:
        i18 = 33554502;

        $i0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label11;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label11;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label10;
            default: goto label11;
        };

     label03:
        $l8 = r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l9 = $l8 & 128L;

        $b10 = $l9 cmp 0L;

        if $b10 == 0 goto label04;

        $r25 = newarray (java.lang.String)[1];

        $r26 = new java.lang.String;

        $r27 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r28);

        $r25[0] = $r26;

        $r29 = newarray (java.lang.String)[1];

        $r30 = new java.lang.String;

        $r31 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r32);

        $r29[0] = $r30;

        $i14 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int sourceStart>;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i11 = i1 - 1;

        $l12 = $r33[$i11];

        $i13 = (int) $l12;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r25, $r29, $i14, $i13);

        return;

     label04:
        i18 = 33554502;

        goto label12;

     label05:
        $r14 = new java.lang.String;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $r16 = $r15[i1];

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16);

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = $r14;

        $r18 = new java.lang.String;

        $r19 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r17[1] = $r18;

        $r21 = newarray (java.lang.String)[2];

        $r21[0] = $r14;

        $r22 = new java.lang.String;

        $r23 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r24);

        $r21[1] = $r22;

        $i6 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r1);

        $i7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554503, $r17, $r21, $i6, $i7);

        return;

     label06:
        i18 = 33554504;

        goto label12;

     label07:
        i18 = 33554506;

        goto label12;

     label08:
        i18 = 134217863;

        goto label12;

     label09:
        i18 = 33554628;

        goto label12;

     label10:
        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r5[0] = $r6;

        $r9 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r10;

        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int sourceStart>;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i2 = i1 - 1;

        $l3 = $r13[$i2];

        $i4 = (int) $l3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777219, $r5, $r9, $i5, $i4);

        return;

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r1);

     label12:
        $r53 = newarray (java.lang.String)[1];

        $r54 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $i19 = i1 + 1;

        $r55 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] subarray(char[][],int,int)>($r54, 0, $i19);

        $r56 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r55);

        $r53[0] = $r56;

        $i20 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int sourceStart>;

        $r57 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $l21 = $r57[i1];

        $i22 = (int) $l21;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i18, $r53, $r53, $i20, $i22);

        return;
    }

    public void invalidFileNameForPackageAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613338, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r96, $r97, $r142, $r143, $r145, r176, r178, r185, r187, r189;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding r177, r179, r180, r184, r186, r188;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding $r32, $r45, r181;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r1;
        int $i0, $i4, $i5, $i9, $i10, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i28, $i29, $i30, $i31, $i41, $i42, $i43, $i44, i45, i46, $i49, $i51;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r12, $r17, $r22, $r27, $r33, $r35, $r40, $r46, $r48, $r55, $r62, $r67, $r74, $r79, $r84, $r89, $r94, $r98, $r99, $r100, r102, $r103, $r107, $r121, $r146, $r148, $r150, $r152, $r196, $r204;
        java.lang.String $r5, $r8, $r9, $r13, $r15, $r18, $r19, $r23, $r25, $r28, $r29, $r34, $r36, $r38, $r41, $r42, $r47, $r49, $r53, $r56, $r57, $r61, $r63, $r65, $r68, $r69, $r73, $r75, $r77, $r80, $r81, $r85, $r87, $r90, $r91, $r95, $r105, $r108, $r109, $r112, $r113, $r115, $r117, $r119, $r122, $r123, $r126, $r127, $r129, $r131, $r133, $r137, $r147, $r149, $r151, $r153, $r155, $r158, $r161, $r164, $r167, $r171, $r191, $r194, $r197, $r199, $r202, $r205;
        char[] $r2, $r6, $r11, $r16, $r21, $r26, $r31, $r39, $r44, $r54, $r59, $r66, $r71, $r78, $r83, $r88, $r93, $r106, $r111, $r114, $r116, $r120, $r125, $r128, $r130, $r135, $r139, $r157, $r159, $r163, $r165, $r169, $r173, $r193, $r195, $r201, $r203;
        org.eclipse.jdt.internal.compiler.ast.Expression $r140, $r141, $r174, $r175;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10, $r20, $r30, $r43, $r58, $r70, $r82, $r92, $r110, $r124, $r134, $r138, $r144, $r156, $r162, $r168, $r172, $r192, $r200;
        byte $b34, $b37;
        long $l1, $l2, $l3, $l6, $l7, $l8, $l11, $l12, $l13, $l16, $l17, $l18, $l25, $l26, $l27, $l32, $l33, $l35, $l36, $l38, $l39, $l40, $l47, $l48, $l50;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r50, $r51, $r60, $r72;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r183;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r101, r182;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4, $r14, $r24, $r37, $r52, $r64, $r76, $r86, $r104, $r118, $r132, $r136, $r154, $r160, $r166, $r170, $r190, $r198;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: char[] selector>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        i45 = 67108964;

        r176 = r3;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label17;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label17;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label17;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label15;
            case 13: goto label16;
            default: goto label17;
        };

     label02:
        $r144 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $l32 = $r144.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l33 = $l32 & 128L;

        $b34 = $l33 cmp 0L;

        if $b34 == 0 goto label03;

        $r166 = newarray (java.lang.String)[1];

        $r167 = new java.lang.String;

        $r168 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r169 = virtualinvoke $r168.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r167.<java.lang.String: void <init>(char[])>($r169);

        $r166[0] = $r167;

        $r170 = newarray (java.lang.String)[1];

        $r171 = new java.lang.String;

        $r172 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r173 = virtualinvoke $r172.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r171.<java.lang.String: void <init>(char[])>($r173);

        $r170[0] = $r171;

        $r174 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i44 = $r174.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r175 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i43 = $r175.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r166, $r170, $i44, $i43);

        return;

     label03:
        i45 = 67108964;

        r177 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r145 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if $r145 == null goto label18;

        r178 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $l35 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l36 = $l35 & 128L;

        $b37 = $l36 cmp 0L;

        if $b37 == 0 goto label04;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingTypeInMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1, r178);

        return;

     label04:
        $z19 = virtualinvoke r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r146 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r147 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z19, $r146, 0);

        $r148 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r149 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r148, 0);

        $z20 = virtualinvoke r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r150 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r151 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z20, $r150, 1);

        $r152 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r153 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r152, 1);

        $r154 = newarray (java.lang.String)[4];

        $r155 = new java.lang.String;

        $r156 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r157 = virtualinvoke $r156.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r155.<java.lang.String: void <init>(char[])>($r157);

        $r154[0] = $r155;

        $r158 = new java.lang.String;

        $r159 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r158.<java.lang.String: void <init>(char[])>($r159);

        $r154[1] = $r158;

        $r154[2] = $r147;

        $r154[3] = $r149;

        $r160 = newarray (java.lang.String)[4];

        $r161 = new java.lang.String;

        $r162 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r163 = virtualinvoke $r162.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r161.<java.lang.String: void <init>(char[])>($r163);

        $r160[0] = $r161;

        $r164 = new java.lang.String;

        $r165 = r178.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r164.<java.lang.String: void <init>(char[])>($r165);

        $r160[1] = $r164;

        $r160[2] = $r151;

        $r160[3] = $r153;

        $l38 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l39 = $l38 >>> 32;

        $i42 = (int) $l39;

        $l40 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i41 = (int) $l40;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108979, $r154, $r160, $i42, $i41);

        return;

     label05:
        i45 = 67108965;

        r179 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r142 = r179.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if $r142 == null goto label18;

        $r143 = r179.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r176 = virtualinvoke $r143.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        goto label18;

     label06:
        i45 = 67108966;

        goto label18;

     label07:
        i45 = 67109059;

        goto label18;

     label08:
        i45 = 134217864;

        goto label18;

     label09:
        i45 = 603979977;

        goto label18;

     label10:
        $r132 = newarray (java.lang.String)[1];

        $r133 = new java.lang.String;

        $r134 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r135 = virtualinvoke $r134.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r133.<java.lang.String: void <init>(char[])>($r135);

        $r132[0] = $r133;

        $r136 = newarray (java.lang.String)[1];

        $r137 = new java.lang.String;

        $r138 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r139 = virtualinvoke $r138.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r137.<java.lang.String: void <init>(char[])>($r139);

        $r136[0] = $r137;

        $r140 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i31 = $r140.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r141 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: org.eclipse.jdt.internal.compiler.ast.Expression receiver>;

        $i30 = $r141.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777219, $r132, $r136, $i31, $i30);

        return;

     label11:
        r180 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r96 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r181 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) $r96;

        $r97 = virtualinvoke r181.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r98 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i46 = lengthof $r98;

        $r99 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i21 = i46 - 2;

        r182 = $r99[$i21];

        $r100 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i22 = i46 - 1;

        $r101 = $r100[$i22];

        r183 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) $r101;

        $i23 = i46 - 2;

        r102 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i23];

        $r103 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i24 = i46 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r103, 0, r102, 0, $i24);

        $r104 = newarray (java.lang.String)[7];

        $r105 = new java.lang.String;

        $r106 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r105.<java.lang.String: void <init>(char[])>($r106);

        $r104[0] = $r105;

        $z17 = virtualinvoke $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r107 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r108 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z17, $r107, 0);

        $r104[1] = $r108;

        $r109 = new java.lang.String;

        $r110 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r111 = virtualinvoke $r110.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r109.<java.lang.String: void <init>(char[])>($r111);

        $r104[2] = $r109;

        $r112 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r102, 0);

        $r104[3] = $r112;

        $r113 = new java.lang.String;

        $r114 = virtualinvoke r182.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r113.<java.lang.String: void <init>(char[])>($r114);

        $r104[4] = $r113;

        $r115 = new java.lang.String;

        $r116 = r183.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r115.<java.lang.String: void <init>(char[])>($r116);

        $r104[5] = $r115;

        $r117 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r183, 0);

        $r104[6] = $r117;

        $r118 = newarray (java.lang.String)[7];

        $r119 = new java.lang.String;

        $r120 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r119.<java.lang.String: void <init>(char[])>($r120);

        $r118[0] = $r119;

        $z18 = virtualinvoke $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r121 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r122 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z18, $r121, 1);

        $r118[1] = $r122;

        $r123 = new java.lang.String;

        $r124 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r125 = virtualinvoke $r124.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r123.<java.lang.String: void <init>(char[])>($r125);

        $r118[2] = $r123;

        $r126 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r102, 1);

        $r118[3] = $r126;

        $r127 = new java.lang.String;

        $r128 = virtualinvoke r182.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r127.<java.lang.String: void <init>(char[])>($r128);

        $r118[4] = $r127;

        $r129 = new java.lang.String;

        $r130 = r183.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r129.<java.lang.String: void <init>(char[])>($r130);

        $r118[5] = $r129;

        $r131 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r183, 1);

        $r118[6] = $r131;

        $l25 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l26 = $l25 >>> 32;

        $i29 = (int) $l26;

        $l27 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i28 = (int) $l27;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777759, $r104, $r118, $i29, $i28);

        return;

     label12:
        r184 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r185 = r184.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r51 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r50 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r51 != $r50 goto label13;

        $r76 = newarray (java.lang.String)[4];

        $r77 = new java.lang.String;

        $r78 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r77.<java.lang.String: void <init>(char[])>($r78);

        $r76[0] = $r77;

        $z13 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r79 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r80 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z13, $r79, 0);

        $r76[1] = $r80;

        $r81 = new java.lang.String;

        $r82 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r83 = virtualinvoke $r82.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r81.<java.lang.String: void <init>(char[])>($r83);

        $r76[2] = $r81;

        $z14 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r84 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r85 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z14, $r84, 0);

        $r76[3] = $r85;

        $r86 = newarray (java.lang.String)[4];

        $r87 = new java.lang.String;

        $r88 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r87.<java.lang.String: void <init>(char[])>($r88);

        $r86[0] = $r87;

        $z15 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r89 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r90 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z15, $r89, 1);

        $r86[1] = $r90;

        $r91 = new java.lang.String;

        $r92 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r93 = virtualinvoke $r92.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r91.<java.lang.String: void <init>(char[])>($r93);

        $r86[2] = $r91;

        $z16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r94 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r95 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z16, $r94, 1);

        $r86[3] = $r95;

        $l16 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l17 = $l16 >>> 32;

        $i20 = (int) $l17;

        $l18 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i19 = (int) $l18;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777764, $r76, $r86, $i20, $i19);

        goto label14;

     label13:
        $r52 = newarray (java.lang.String)[5];

        $r53 = new java.lang.String;

        $r54 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r54);

        $r52[0] = $r53;

        $z9 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r55 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r56 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z9, $r55, 0);

        $r52[1] = $r56;

        $r57 = new java.lang.String;

        $r58 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r59 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r59);

        $r52[2] = $r57;

        $r60 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r60, 0);

        $r52[3] = $r61;

        $z10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r62 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r63 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z10, $r62, 0);

        $r52[4] = $r63;

        $r64 = newarray (java.lang.String)[5];

        $r65 = new java.lang.String;

        $r66 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r65.<java.lang.String: void <init>(char[])>($r66);

        $r64[0] = $r65;

        $z11 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r67 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r68 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z11, $r67, 1);

        $r64[1] = $r68;

        $r69 = new java.lang.String;

        $r70 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r71 = virtualinvoke $r70.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r69.<java.lang.String: void <init>(char[])>($r71);

        $r64[2] = $r69;

        $r72 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r73 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r72, 1);

        $r64[3] = $r73;

        $z12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r74 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r75 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z12, $r74, 1);

        $r64[4] = $r75;

        $l11 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l12 = $l11 >>> 32;

        $i15 = (int) $l12;

        $l13 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i14 = (int) $l13;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777765, $r52, $r64, $i15, $i14);

     label14:
        return;

     label15:
        r186 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r187 = r186.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r24 = newarray (java.lang.String)[5];

        $r25 = new java.lang.String;

        $r26 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26);

        $r24[0] = $r25;

        $z5 = virtualinvoke r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r27 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r28 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r27, 0);

        $r24[1] = $r28;

        $r29 = new java.lang.String;

        $r30 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r31);

        $r24[2] = $r29;

        $r32 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r187;

        $r33 = $r32.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r34 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r33, 0);

        $r24[3] = $r34;

        $z6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r35 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r36 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r35, 0);

        $r24[4] = $r36;

        $r37 = newarray (java.lang.String)[5];

        $r38 = new java.lang.String;

        $r39 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r39);

        $r37[0] = $r38;

        $z7 = virtualinvoke r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r40 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r41 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z7, $r40, 1);

        $r37[1] = $r41;

        $r42 = new java.lang.String;

        $r43 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r42.<java.lang.String: void <init>(char[])>($r44);

        $r37[2] = $r42;

        $r45 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r187;

        $r46 = $r45.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r47 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r46, 1);

        $r37[3] = $r47;

        $z8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r48 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r49 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z8, $r48, 1);

        $r37[4] = $r49;

        $l6 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l7 = $l6 >>> 32;

        $i10 = (int) $l7;

        $l8 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i9 = (int) $l8;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777766, $r24, $r37, $i10, $i9);

        return;

     label16:
        r188 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r189 = r188.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r4 = newarray (java.lang.String)[4];

        $r5 = new java.lang.String;

        $r6 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $r4[0] = $r5;

        $z1 = virtualinvoke r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r7 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r7, 0);

        $r4[1] = $r8;

        $r9 = new java.lang.String;

        $r10 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r4[2] = $r9;

        $z2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r12, 0);

        $r4[3] = $r13;

        $r14 = newarray (java.lang.String)[4];

        $r15 = new java.lang.String;

        $r16 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r14[0] = $r15;

        $z3 = virtualinvoke r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r18 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r17, 1);

        $r14[1] = $r18;

        $r19 = new java.lang.String;

        $r20 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r21);

        $r14[2] = $r19;

        $z4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r22 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r22, 1);

        $r14[3] = $r23;

        $l1 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l2 = $l1 >>> 32;

        $i5 = (int) $l2;

        $l3 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i4 = (int) $l3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777770, $r4, $r14, $i5, $i4);

        return;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r1);

     label18:
        $r190 = newarray (java.lang.String)[3];

        $r191 = new java.lang.String;

        $r192 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r193 = virtualinvoke $r192.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r191.<java.lang.String: void <init>(char[])>($r193);

        $r190[0] = $r191;

        $r194 = new java.lang.String;

        $r195 = r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r194.<java.lang.String: void <init>(char[])>($r195);

        $r190[1] = $r194;

        $z21 = virtualinvoke r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r196 = r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r197 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z21, $r196, 0);

        $r190[2] = $r197;

        $r198 = newarray (java.lang.String)[3];

        $r199 = new java.lang.String;

        $r200 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r201 = virtualinvoke $r200.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r199.<java.lang.String: void <init>(char[])>($r201);

        $r198[0] = $r199;

        $r202 = new java.lang.String;

        $r203 = r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r202.<java.lang.String: void <init>(char[])>($r203);

        $r198[1] = $r202;

        $z22 = virtualinvoke r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r204 = r176.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r205 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z22, $r204, 1);

        $r198[2] = $r205;

        $l47 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l48 = $l47 >>> 32;

        $i49 = (int) $l48;

        $l50 = r1.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i51 = (int) $l50;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i45, $r190, $r198, $i49, $i51);

        return;
    }

    public void invalidNullToSynchronize(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871088, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidOperator(org.eclipse.jdt.internal.compiler.ast.BinaryExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r19;
        java.lang.StringBuffer $r14, $r16, $r17, $r21, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, $r13, $r15, $r18, $r20, $r22, $r25, r26, r27;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;
        org.eclipse.jdt.internal.compiler.ast.BinaryExpression r12;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r12 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BinaryExpression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r26 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r27 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r26 = $r0;

        r27 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r13 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: java.lang.String operatorToString()>();

        $r11[0] = $r13;

        $r14 = new java.lang.StringBuffer;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11[1] = $r18;

        $r19 = newarray (java.lang.String)[2];

        $r20 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: java.lang.String operatorToString()>();

        $r19[0] = $r20;

        $r21 = new java.lang.StringBuffer;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r21.<java.lang.StringBuffer: void <init>(java.lang.String)>($r22);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19[1] = $r25;

        $i1 = r12.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: int sourceStart>;

        $i0 = r12.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871072, $r11, $r19, $i1, $i0);

        return;
    }

    public void invalidOperator(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r19;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r12;
        java.lang.StringBuffer $r14, $r16, $r17, $r21, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, $r13, $r15, $r18, $r20, $r22, $r25, r26, r27;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r12 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r26 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r27 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r26 = $r0;

        r27 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r13 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: java.lang.String operatorToString()>();

        $r11[0] = $r13;

        $r14 = new java.lang.StringBuffer;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11[1] = $r18;

        $r19 = newarray (java.lang.String)[2];

        $r20 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: java.lang.String operatorToString()>();

        $r19[0] = $r20;

        $r21 = new java.lang.StringBuffer;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26);

        specialinvoke $r21.<java.lang.StringBuffer: void <init>(java.lang.String)>($r22);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19[1] = $r25;

        $i1 = r12.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int sourceStart>;

        $i0 = r12.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871072, $r11, $r19, $i1, $i0);

        return;
    }

    public void invalidOperator(org.eclipse.jdt.internal.compiler.ast.UnaryExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.UnaryExpression r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5;
        int $i0, $i1;
        char[] $r6, $r10;
        java.lang.String $r3, $r4, $r8, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.UnaryExpression;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[2];

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.UnaryExpression: java.lang.String operatorToString()>();

        $r1[0] = $r3;

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r1[1] = $r4;

        $r7 = newarray (java.lang.String)[2];

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.UnaryExpression: java.lang.String operatorToString()>();

        $r7[0] = $r8;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r7[1] = $r9;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.UnaryExpression: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.UnaryExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871072, $r1, $r7, $i1, $i0);

        return;
    }

    public void invalidParameterizedExceptionType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777750, $r1, $r5, $i1, $i0);

        return;
    }

    public void invalidParenthesizedExpression(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612961, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        char[][] $r4, $r7, $r11, $r15, $r18, $r22, $r24, r28, r30, r33, r35;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, $r12, r25, $r39, $r43;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r20;
        long $l2, $l7, $l10, $l13, $l16, $l20;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r29;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference r36;
        java.lang.String $r38, $r42;
        char[] $r3, $r40, $r44;
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r26;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference r32;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r37, $r41;
        long[] $r6, $r9, $r10, $r14, $r17, $r19, r31;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r27;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i19, i21, $i22, i23, $i24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r8, $r13, $r16, $r21, $r23;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r34;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z0 == 0 goto label01;

        $r23 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $z19 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r24);

        if $z19 == 0 goto label02;

        return;

     label01:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;

        if $z1 == 0 goto label02;

        $r20 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r0;

        r25 = $r20.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $z17 = r25 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z17 == 0 goto label02;

        $r21 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r25;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $z18 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r22);

        if $z18 == 0 goto label02;

        return;

     label02:
        i21 = 16777218;

        $i22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i22)
        {
            case 0: goto label10;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label10;
            case 7: goto label08;
            case 8: goto label10;
            case 9: goto label09;
            default: goto label10;
        };

     label03:
        i21 = 16777218;

        goto label11;

     label04:
        i21 = 16777219;

        goto label11;

     label05:
        i21 = 16777220;

        goto label11;

     label06:
        i21 = 16777222;

        goto label11;

     label07:
        i21 = 16777413;

        goto label11;

     label08:
        i21 = 536871434;

        goto label11;

     label09:
        i21 = 536871433;

        goto label11;

     label10:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r1);

     label11:
        i23 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        $z20 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        if $z20 == 0 goto label13;

        r26 = (org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) r1;

        $r18 = r26.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $z16 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r18);

        if $z16 == 0 goto label12;

        return;

     label12:
        $i17 = r26.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        if $i17 < 1 goto label24;

        $r19 = r26.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i18 = r26.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        $i19 = $i18 - 1;

        $l20 = $r19[$i19];

        i23 = (int) $l20;

        goto label24;

     label13:
        $z2 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z2 == 0 goto label15;

        r27 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) r1;

        $r15 = r27.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: char[][] tokens>;

        $z14 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r15);

        if $z14 == 0 goto label14;

        return;

     label14:
        $z15 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z15 == 0 goto label24;

        $r16 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        r28 = $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $r17 = r27.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: long[] sourcePositions>;

        $i14 = lengthof r28;

        $i15 = $i14 - 1;

        $l16 = $r17[$i15];

        i23 = (int) $l16;

        goto label24;

     label15:
        $z3 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        if $z3 == 0 goto label18;

        r29 = (org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference) r1;

        $r11 = r29.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: char[][] tokens>;

        $z12 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r11);

        if $z12 == 0 goto label16;

        return;

     label16:
        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $z13 = $r12 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z13 == 0 goto label17;

        $r13 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r12;

        r30 = $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $r14 = r29.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: long[] sourcePositions>;

        $i11 = lengthof r30;

        $i12 = $i11 - 1;

        $l13 = $r14[$i12];

        i23 = (int) $l13;

        goto label24;

     label17:
        r31 = r29.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: long[] sourcePositions>;

        $i8 = lengthof r31;

        $i9 = $i8 - 1;

        $l10 = r31[$i9];

        i23 = (int) $l10;

        goto label24;

     label18:
        $z4 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        if $z4 == 0 goto label20;

        r32 = (org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference) r1;

        $r7 = r32.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: char[][] tokens>;

        $z10 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r7);

        if $z10 == 0 goto label19;

        return;

     label19:
        $z11 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z11 == 0 goto label24;

        $r8 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        r33 = $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $i4 = lengthof r33;

        $r9 = r32.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: long[] sourcePositions>;

        $i3 = lengthof $r9;

        if $i4 > $i3 goto label24;

        $r10 = r32.<org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference: long[] sourcePositions>;

        $i5 = lengthof r33;

        $i6 = $i5 - 1;

        $l7 = $r10[$i6];

        i23 = (int) $l7;

        goto label24;

     label20:
        $z5 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.ImportReference;

        if $z5 == 0 goto label22;

        r34 = (org.eclipse.jdt.internal.compiler.ast.ImportReference) r1;

        $r4 = r34.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $z8 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r4);

        if $z8 == 0 goto label21;

        return;

     label21:
        $z9 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z9 == 0 goto label24;

        $r5 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r0;

        r35 = $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $r6 = r34.<org.eclipse.jdt.internal.compiler.ast.ImportReference: long[] sourcePositions>;

        $i0 = lengthof r35;

        $i1 = $i0 - 1;

        $l2 = $r6[$i1];

        i23 = (int) $l2;

        goto label24;

     label22:
        $z6 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        if $z6 == 0 goto label24;

        r36 = (org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference) r1;

        $r3 = r36.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: char[] token>;

        $z7 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r3);

        if $z7 == 0 goto label23;

        return;

     label23:
        i23 = r36.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: int originalSourceEnd>;

     label24:
        $r37 = newarray (java.lang.String)[1];

        $r38 = new java.lang.String;

        $r39 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r40 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r40);

        $r37[0] = $r38;

        $r41 = newarray (java.lang.String)[1];

        $r42 = new java.lang.String;

        $r43 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r42.<java.lang.String: void <init>(char[])>($r44);

        $r41[0] = $r42;

        $i24 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i21, $r37, $r41, $i24, i23);

        return;
    }

    public void invalidTypeForCollection(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871493, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871115, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidTypeToSynchronize(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871087, $r1, $r5, $i1, $i0);

        return;
    }

    public void invalidTypeVariableAsException(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777749, $r1, $r5, $i1, $i0);

        return;
    }

    public void invalidUnaryExpression(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612942, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidUsageOfAnnotation(org.eclipse.jdt.internal.compiler.ast.Annotation)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613332, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidUsageOfAnnotationDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613333, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidUsageOfEnumDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613330, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidUsageOfForeachStatements(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613328, $r4, $r3, $i1, $i0);

        return;
    }

    public void invalidUsageOfStaticImports(org.eclipse.jdt.internal.compiler.ast.ImportReference)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int declarationSourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613327, $r3, $r2, $i1, $i0);

        return;
    }

    public void invalidUsageOfTypeArguments(org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1, r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613329, $r4, $r3, $i1, $i0);

        return;
    }

    public void invalidUsageOfTypeParameters(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.ast.TypeParameter)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r1, r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613326, $r4, $r3, $i1, $i0);

        return;
    }

    public void invalidUsageOfTypeParametersForAnnotationDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r3, $r4;
        int i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i0 = lengthof r1;

        $r6 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = r1[0];

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceStart>;

        $i1 = i0 - 1;

        $r4 = r1[$i1];

        $i2 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613334, $r6, $r5, $i3, $i2);

        return;
    }

    public void invalidUsageOfTypeParametersForEnumDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r3, $r4;
        int i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i0 = lengthof r1;

        $r6 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = r1[0];

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceStart>;

        $i1 = i0 - 1;

        $r4 = r1[$i1];

        $i2 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int declarationSourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613335, $r6, $r5, $i3, $i2);

        return;
    }

    public void invalidUsageOfVarargs(org.eclipse.jdt.internal.compiler.ast.Argument)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        int $i0, $i1;
        java.lang.String[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i1 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610613331, $r4, $r3, $i1, $i0);

        return;
    }

    public void isClassPathCorrect(char[][], org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, java.lang.Object)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.InvocationSite r6;
        java.lang.String[] $r2;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r7;
        char[][] r3;
        int i0, i1;
        java.lang.Object r5;
        java.lang.String $r4;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: char[][];

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r5 := @parameter2: java.lang.Object;

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = r1;

        $r2 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>(r3);

        $r2[0] = $r4;

        i0 = 0;

        i1 = 0;

        if r5 == null goto label2;

        $z0 = r5 instanceof org.eclipse.jdt.internal.compiler.lookup.InvocationSite;

        if $z0 == 0 goto label1;

        r6 = (org.eclipse.jdt.internal.compiler.lookup.InvocationSite) r5;

        i0 = interfaceinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceStart()>();

        i1 = interfaceinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceEnd()>();

        goto label2;

     label1:
        $z1 = r5 instanceof org.eclipse.jdt.internal.compiler.ast.ASTNode;

        if $z1 == 0 goto label2;

        r7 = (org.eclipse.jdt.internal.compiler.ast.ASTNode) r5;

        i0 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart()>();

        i1 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd()>();

     label2:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777540, $r2, $r2, i0, i1);

        return;
    }

    private boolean isIdentifier(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        if i0 != 26 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isKeyword(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 12: goto label1;
            case 13: goto label2;
            case 14: goto label2;
            case 15: goto label2;
            case 16: goto label2;
            case 17: goto label2;
            case 18: goto label2;
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label2;
            case 24: goto label2;
            case 25: goto label2;
            case 26: goto label2;
            case 27: goto label2;
            case 28: goto label2;
            case 29: goto label2;
            case 30: goto label2;
            case 31: goto label2;
            case 32: goto label1;
            case 33: goto label1;
            case 34: goto label1;
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label1;
            case 38: goto label1;
            case 39: goto label1;
            case 40: goto label1;
            case 41: goto label1;
            case 42: goto label1;
            case 43: goto label1;
            case 44: goto label1;
            case 45: goto label1;
            case 46: goto label1;
            case 47: goto label2;
            case 48: goto label2;
            case 49: goto label2;
            case 50: goto label2;
            case 51: goto label2;
            case 52: goto label2;
            case 53: goto label2;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            case 58: goto label1;
            case 59: goto label1;
            case 60: goto label1;
            case 61: goto label1;
            case 62: goto label1;
            case 63: goto label1;
            case 64: goto label1;
            case 65: goto label2;
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label2;
            case 69: goto label2;
            case 70: goto label2;
            case 71: goto label2;
            case 72: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 75: goto label1;
            case 76: goto label1;
            case 77: goto label1;
            case 78: goto label1;
            case 79: goto label1;
            case 80: goto label1;
            case 81: goto label1;
            case 82: goto label1;
            case 83: goto label1;
            case 84: goto label2;
            case 85: goto label2;
            case 86: goto label2;
            case 87: goto label2;
            case 88: goto label2;
            case 89: goto label2;
            case 90: goto label2;
            case 91: goto label2;
            case 92: goto label2;
            case 93: goto label2;
            case 94: goto label2;
            case 95: goto label1;
            case 96: goto label1;
            case 97: goto label1;
            case 98: goto label2;
            case 99: goto label1;
            case 100: goto label1;
            case 101: goto label1;
            case 102: goto label1;
            case 103: goto label1;
            case 104: goto label1;
            case 105: goto label1;
            case 106: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isLiteral(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 47: goto label1;
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isRecoveredName(char[])
    {
        char[] r0, $r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: char[];

        $r1 = <org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: char[] FAKE_IDENTIFIER>;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isRecoveredName(char[][])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        int $i0, i1;
        char[] $r1, $r2;
        char[][] r0;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: char[][];

        if r0 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        goto label4;

     label2:
        $r2 = r0[i1];

        $r1 = <org.eclipse.jdt.internal.compiler.parser.RecoveryScanner: char[] FAKE_IDENTIFIER>;

        if $r2 != $r1 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

     label4:
        $i0 = lengthof r0;

        if i1 < $i0 goto label2;

        return 0;
    }

    public void javadocAmbiguousMethodReference(int, int, org.eclipse.jdt.internal.compiler.lookup.Binding, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        org.eclipse.jdt.internal.compiler.lookup.Binding r4;
        int $i0, i1, $i2, i3, i4, $i6;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.Binding;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612225);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.Binding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r6;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612225, $r2, $r2, $i0, i3, i4);

     label2:
        return;
    }

    public void javadocDeprecatedField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r9;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r15;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r4;
        int $i0, i1, $i2, $i3, $i4, $i6;
        java.lang.String $r16, $r17, $r18, $r19;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r11;
        char[] $r6, $r8, $r12, $r14;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r15 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612245);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r6);

        $r2[0] = $r16;

        $r17 = new java.lang.String;

        $r8 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r8);

        $r2[1] = $r17;

        $r9 = newarray (java.lang.String)[2];

        $r18 = new java.lang.String;

        $r11 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r18;

        $r19 = new java.lang.String;

        $r14 = r4.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r19;

        $i3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r15);

        $i4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r4, r15);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612245, $r2, $r9, $i0, $i3, $i4);

     label2:
        return;
    }

    public void javadocDeprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r2;
        java.lang.String[] $r3, $r11, $r20, $r26;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r19;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.String $r10, $r18, $r25, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r13, $r22, $r28;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r17, $r24, $r30;
        char[] $r6, $r8, $r14, $r16, $r23, $r29;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r19 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $i7 = -1610612241;

        goto label2;

     label1:
        $i7 = -1610612237;

     label2:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i7);

        $i9 = (int) -1;

        if $i0 != $i9 goto label3;

        return;

     label3:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z1 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z1 == 0 goto label5;

        if $z0 == 0 goto label4;

        $r20 = newarray (java.lang.String)[2];

        $r32 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r23);

        $r20[0] = $r32;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r24, 0);

        $r20[1] = $r25;

        $r26 = newarray (java.lang.String)[2];

        $r33 = new java.lang.String;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r29);

        $r26[0] = $r33;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r30, 1);

        $r26[1] = $r31;

        $i6 = r19.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i5 = r19.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612241, $r20, $r26, $i0, $i6, $i5);

        goto label5;

     label4:
        $r3 = newarray (java.lang.String)[3];

        $r34 = new java.lang.String;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r34;

        $r35 = new java.lang.String;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r35;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r9 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r10 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r9, 0);

        $r3[2] = $r10;

        $r11 = newarray (java.lang.String)[3];

        $r36 = new java.lang.String;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r14);

        $r11[0] = $r36;

        $r37 = new java.lang.String;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r16);

        $r11[1] = $r37;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r18 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r17, 1);

        $r11[2] = $r18;

        $i4 = r19.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r19.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612237, $r3, $r11, $i0, $i4, $i3);

     label5:
        return;
    }

    public void javadocDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r6, $r7, $r8, $r11;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        java.lang.String $r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5;
        char[] $r10, $r13;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r2, $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612230);

        $i10 = (int) -1;

        if $i0 != $i10 goto label2;

        return;

     label2:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isMemberType()>();

        if $z1 == 0 goto label3;

        $z2 = r3 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z2 == 0 goto label3;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i4 = $r4.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $r5 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r3;

        $i3 = $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        $z3 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i4, $i3);

        if $z3 != 0 goto label3;

        $r7 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r6 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612271, $r7, $r6, $i6, $i5);

        goto label4;

     label3:
        $r8 = newarray (java.lang.String)[1];

        $r14 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r14;

        $r11 = newarray (java.lang.String)[1];

        $r15 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r15;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612230, $r8, $r11, $i0, $i7, $i8);

     label4:
        return;
    }

    public void javadocDuplicatedParamTag(char[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        int $i0, i1, $i2, i3, i4, $i6;
        char[] r3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612263);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r3);

        $r2[0] = $r4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612263, $r2, $r2, $i0, i3, i4);

     label2:
        return;
    }

    public void javadocDuplicatedReturnTag(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612260, $r2, $r1, i0, i1);

        return;
    }

    public void javadocDuplicatedTag(char[], int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        int i0, i1;
        char[] r2;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        $r0[0] = $r1;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612272, $r0, $r0, i0, i1);

        return;
    }

    public void javadocDuplicatedThrowsClassName(org.eclipse.jdt.internal.compiler.ast.TypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r3;
        int $i0, i1, $i2, $i3, $i4, $i6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612256);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r5);

        $r2[0] = $r6;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612256, $r2, $r2, $i0, $i4, $i3);

     label2:
        return;
    }

    public void javadocEmptyReturnTag(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        int $i0, i1, $i2, i3, i4, $i6;
        char[] $r4;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612220);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r4 = <org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants: char[] TAG_RETURN>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612220, $r2, $r2, i3, i4);

     label2:
        return;
    }

    public void javadocErrorNoMethodFor(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, $r6, $r9;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r16;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r11;
        java.lang.String[] $r12, $r19;
        java.lang.StringBuffer $r25, $r26;
        int i0, $i1, i2, i3, $i4, $i5, $i6, i8, $i9, $i10, $i12;
        java.lang.String $r18, $r24, $r27, $r28, $r29, $r30, $r31, $r32;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r4;
        char[] $r7, $r10, $r14, $r17, $r21, $r23;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r16 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        i3 := @parameter3: int;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z0 == 0 goto label1;

        $i10 = -1610612234;

        $i9 = -1610612234;

        goto label2;

     label1:
        $i10 = -1610612236;

        $i9 = -1610612236;

     label2:
        i0 = $i10;

        $i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i9);

        $i12 = (int) -1;

        if $i1 != $i12 goto label3;

        return;

     label3:
        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        i8 = 0;

        i2 = lengthof r4;

        goto label6;

     label4:
        if i8 == 0 goto label5;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label5:
        $r27 = new java.lang.String;

        $r6 = r4[i8];

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r7);

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r28 = new java.lang.String;

        $r9 = r4[i8];

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r10);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        i8 = i8 + 1;

     label6:
        if i8 < i2 goto label4;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i4 = $r11.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z1 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i4, i3);

        if $z1 == 0 goto label7;

        $r12 = newarray (java.lang.String)[3];

        $r29 = new java.lang.String;

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r29;

        $r30 = new java.lang.String;

        $r17 = r16.<org.eclipse.jdt.internal.compiler.ast.MessageSend: char[] selector>;

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r17);

        $r12[1] = $r30;

        $r18 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12[2] = $r18;

        $r19 = newarray (java.lang.String)[3];

        $r31 = new java.lang.String;

        $r21 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r31.<java.lang.String: void <init>(char[])>($r21);

        $r19[0] = $r31;

        $r32 = new java.lang.String;

        $r23 = r16.<org.eclipse.jdt.internal.compiler.ast.MessageSend: char[] selector>;

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r23);

        $r19[1] = $r32;

        $r24 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19[2] = $r24;

        $i6 = r16.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceStart>;

        $i5 = r16.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(i0, $r12, $r19, $i1, $i6, $i5);

     label7:
        return;
    }

    public void javadocHiddenReference(int, int, org.eclipse.jdt.internal.compiler.lookup.Scope, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r4;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r7, $r9;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.Scope r0, $r1, r10;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r3, $r5, $r6, $r8;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i4 := @parameter3: int;

        r10 = r0;

        goto label3;

     label1:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $i2 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

        $z0 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, $i2);

        if $z0 != 0 goto label2;

        return;

     label2:
        r10 = r10.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

     label3:
        $r1 = r10.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.Scope parent>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.Scope: int kind>;

        if $i0 != 4 goto label1;

        $r4 = newarray (java.lang.String)[2];

        $r6 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i3 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: java.lang.String getVisibilityString(int)>($i3);

        $r4[0] = $r7;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: java.lang.String getVisibilityString(int)>(i4);

        $r4[1] = $r9;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612271, $r4, $r4, i5, i6);

        return;
    }

    public void javadocInvalidConstructor(org.eclipse.jdt.internal.compiler.ast.Statement, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r104, $r106, r163, r165, r167;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding r161, r162, r164, r166;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r54, $r55, $r65, $r78;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding $r35, $r49, r105;
        org.eclipse.jdt.internal.compiler.ast.Statement r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, $i17, $i18, i19, i20, $i22, $i24, $i26, $i28, $i30;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r112;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r13, $r19, $r24, $r30, $r36, $r38, $r44, $r50, $r52, $r60, $r67, $r73, $r80, $r86, $r91, $r97, $r102, $r107, $r108, $r110, r113, $r114, $r119, $r134, $r149, $r155;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r109, $r111;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r9, $r14, $r20, $r25, $r31, $r37, $r39, $r45, $r51, $r53, $r61, $r66, $r68, $r74, $r79, $r81, $r87, $r92, $r98, $r103, $r120, $r124, $r129, $r135, $r139, $r144, $r150, $r156, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression r160;
        char[] $r7, $r12, $r18, $r23, $r29, $r34, $r43, $r48, $r59, $r64, $r72, $r77, $r85, $r90, $r96, $r101, $r118, $r123, $r126, $r128, $r133, $r138, $r141, $r143, $r148, $r154;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r157, $r158, $r159;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z24, $z25;
        java.lang.String[] $r4, $r15, $r26, $r40, $r56, $r69, $r82, $r93, $r115, $r130, $r145, $r151;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, $r11, $r17, $r22, $r28, $r33, $r42, $r47, $r58, $r63, $r71, $r76, $r84, $r89, $r95, $r100, $r117, $r122, $r132, $r137, $r147, $r153;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 != 0 goto label01;

        return;

     label01:
        i13 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        i14 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        $z1 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z1 == 0 goto label02;

        r160 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) r2;

        $r157 = r160.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        if $r157 == null goto label02;

        $r158 = r160.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        i13 = $r158.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $r159 = r160.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        i14 = $r159.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

     label02:
        i15 = -1610612244;

        i20 = -1610612244;

        i19 = -1610612244;

        $i16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int problemId()>();

        tableswitch($i16)
        {
            case 0: goto label20;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label20;
            case 5: goto label20;
            case 6: goto label20;
            case 7: goto label20;
            case 8: goto label20;
            case 9: goto label20;
            case 10: goto label06;
            case 11: goto label08;
            case 12: goto label16;
            case 13: goto label18;
            default: goto label20;
        };

     label03:
        i15 = -1610612244;

        i20 = -1610612244;

        i19 = -1610612244;

        goto label21;

     label04:
        i15 = -1610612243;

        i20 = -1610612243;

        i19 = -1610612243;

        goto label21;

     label05:
        i15 = -1610612242;

        i20 = -1610612242;

        i19 = -1610612242;

        goto label21;

     label06:
        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611881);

        $i22 = (int) -1;

        if $i5 != $i22 goto label07;

        return;

     label07:
        r161 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        $r104 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r105 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) $r104;

        $r106 = virtualinvoke r105.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r107 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i6 = lengthof $r107;

        $r108 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i7 = i6 - 2;

        r109 = $r108[$i7];

        $r110 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i8 = i6 - 1;

        $r111 = $r110[$i8];

        r112 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) $r111;

        $i9 = i6 - 2;

        r113 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i9];

        $r114 = r161.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i10 = i6 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r114, 0, r113, 0, $i10);

        $r115 = newarray (java.lang.String)[7];

        $r168 = new java.lang.String;

        $r117 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r118 = virtualinvoke $r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r168.<java.lang.String: void <init>(char[])>($r118);

        $r115[0] = $r168;

        $z19 = virtualinvoke $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r119 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r120 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z19, $r119, 0);

        $r115[1] = $r120;

        $r169 = new java.lang.String;

        $r122 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r123 = virtualinvoke $r122.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r169.<java.lang.String: void <init>(char[])>($r123);

        $r115[2] = $r169;

        $r124 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r113, 0);

        $r115[3] = $r124;

        $r170 = new java.lang.String;

        $r126 = virtualinvoke r109.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r170.<java.lang.String: void <init>(char[])>($r126);

        $r115[4] = $r170;

        $r171 = new java.lang.String;

        $r128 = r112.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r171.<java.lang.String: void <init>(char[])>($r128);

        $r115[5] = $r171;

        $r129 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r112, 0);

        $r115[6] = $r129;

        $r130 = newarray (java.lang.String)[7];

        $r172 = new java.lang.String;

        $r132 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r133 = virtualinvoke $r132.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r172.<java.lang.String: void <init>(char[])>($r133);

        $r130[0] = $r172;

        $z20 = virtualinvoke $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r134 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r135 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z20, $r134, 1);

        $r130[1] = $r135;

        $r173 = new java.lang.String;

        $r137 = $r106.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r138 = virtualinvoke $r137.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r173.<java.lang.String: void <init>(char[])>($r138);

        $r130[2] = $r173;

        $r139 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r113, 1);

        $r130[3] = $r139;

        $r174 = new java.lang.String;

        $r141 = virtualinvoke r109.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r174.<java.lang.String: void <init>(char[])>($r141);

        $r130[4] = $r174;

        $r175 = new java.lang.String;

        $r143 = r112.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r175.<java.lang.String: void <init>(char[])>($r143);

        $r130[5] = $r175;

        $r144 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r112, 1);

        $r130[6] = $r144;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611881, $r115, $r130, $i5, i13, i14);

        return;

     label08:
        r162 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r163 = r162.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r55 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r54 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r55 != $r54 goto label09;

        $z25 = 1;

        $z24 = 1;

        goto label10;

     label09:
        $z25 = 0;

        $z24 = 0;

     label10:
        z10 = $z25;

        if $z24 == 0 goto label11;

        $i17 = -1610611880;

        goto label12;

     label11:
        $i17 = -1610611879;

     label12:
        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i17);

        $i24 = (int) -1;

        if $i4 != $i24 goto label13;

        return;

     label13:
        if z10 == 0 goto label14;

        $r82 = newarray (java.lang.String)[4];

        $r176 = new java.lang.String;

        $r84 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r85 = virtualinvoke $r84.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r176.<java.lang.String: void <init>(char[])>($r85);

        $r82[0] = $r176;

        $z15 = virtualinvoke r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r86 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r87 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z15, $r86, 0);

        $r82[1] = $r87;

        $r177 = new java.lang.String;

        $r89 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r90 = virtualinvoke $r89.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r177.<java.lang.String: void <init>(char[])>($r90);

        $r82[2] = $r177;

        $z16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r91 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r92 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z16, $r91, 0);

        $r82[3] = $r92;

        $r93 = newarray (java.lang.String)[4];

        $r178 = new java.lang.String;

        $r95 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r96 = virtualinvoke $r95.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r178.<java.lang.String: void <init>(char[])>($r96);

        $r93[0] = $r178;

        $z17 = virtualinvoke r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r97 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r98 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z17, $r97, 1);

        $r93[1] = $r98;

        $r179 = new java.lang.String;

        $r100 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r101 = virtualinvoke $r100.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r179.<java.lang.String: void <init>(char[])>($r101);

        $r93[2] = $r179;

        $z18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r102 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r103 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z18, $r102, 1);

        $r93[3] = $r103;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611880, $r82, $r93, $i4, i13, i14);

        goto label15;

     label14:
        $r56 = newarray (java.lang.String)[5];

        $r180 = new java.lang.String;

        $r58 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r59 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r180.<java.lang.String: void <init>(char[])>($r59);

        $r56[0] = $r180;

        $z11 = virtualinvoke r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r60 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z11, $r60, 0);

        $r56[1] = $r61;

        $r181 = new java.lang.String;

        $r63 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r64 = virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r181.<java.lang.String: void <init>(char[])>($r64);

        $r56[2] = $r181;

        $r65 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r66 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r65, 0);

        $r56[3] = $r66;

        $z12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r67 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r68 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z12, $r67, 0);

        $r56[4] = $r68;

        $r69 = newarray (java.lang.String)[5];

        $r182 = new java.lang.String;

        $r71 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r72 = virtualinvoke $r71.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r182.<java.lang.String: void <init>(char[])>($r72);

        $r69[0] = $r182;

        $z13 = virtualinvoke r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r73 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r74 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z13, $r73, 1);

        $r69[1] = $r74;

        $r183 = new java.lang.String;

        $r76 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r77 = virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r183.<java.lang.String: void <init>(char[])>($r77);

        $r69[2] = $r183;

        $r78 = r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r79 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r78, 1);

        $r69[3] = $r79;

        $z14 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r80 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r81 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z14, $r80, 1);

        $r69[4] = $r81;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611879, $r56, $r69, $i4, i13, i14);

     label15:
        return;

     label16:
        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611878);

        $i26 = (int) -1;

        if $i3 != $i26 goto label17;

        return;

     label17:
        r164 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r165 = r164.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r26 = newarray (java.lang.String)[5];

        $r184 = new java.lang.String;

        $r28 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r184.<java.lang.String: void <init>(char[])>($r29);

        $r26[0] = $r184;

        $z6 = virtualinvoke r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r30, 0);

        $r26[1] = $r31;

        $r185 = new java.lang.String;

        $r33 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r185.<java.lang.String: void <init>(char[])>($r34);

        $r26[2] = $r185;

        $r35 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r165;

        $r36 = $r35.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r37 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r36, 0);

        $r26[3] = $r37;

        $z7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r38 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r39 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z7, $r38, 0);

        $r26[4] = $r39;

        $r40 = newarray (java.lang.String)[5];

        $r186 = new java.lang.String;

        $r42 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r43 = virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r186.<java.lang.String: void <init>(char[])>($r43);

        $r40[0] = $r186;

        $z8 = virtualinvoke r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r44 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r45 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z8, $r44, 1);

        $r40[1] = $r45;

        $r187 = new java.lang.String;

        $r47 = r165.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r48 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r187.<java.lang.String: void <init>(char[])>($r48);

        $r40[2] = $r187;

        $r49 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r165;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r51 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r50, 1);

        $r40[3] = $r51;

        $z9 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r52 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r53 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z9, $r52, 1);

        $r40[4] = $r53;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611878, $r26, $r40, $i3, i13, i14);

        return;

     label18:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611877);

        $i28 = (int) -1;

        if $i2 != $i28 goto label19;

        return;

     label19:
        r166 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r3;

        r167 = r166.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r4 = newarray (java.lang.String)[4];

        $r188 = new java.lang.String;

        $r6 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r188.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r188;

        $z2 = virtualinvoke r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r8, 0);

        $r4[1] = $r9;

        $r189 = new java.lang.String;

        $r11 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r189.<java.lang.String: void <init>(char[])>($r12);

        $r4[2] = $r189;

        $z3 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r13, 0);

        $r4[3] = $r14;

        $r15 = newarray (java.lang.String)[4];

        $r190 = new java.lang.String;

        $r17 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r190.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r190;

        $z4 = virtualinvoke r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r19 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r20 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r19, 1);

        $r15[1] = $r20;

        $r191 = new java.lang.String;

        $r22 = r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r191.<java.lang.String: void <init>(char[])>($r23);

        $r15[2] = $r191;

        $z5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r24, 1);

        $r15[3] = $r25;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611877, $r4, $r15, $i2, i13, i14);

        return;

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2);

     label21:
        $i18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i19);

        $i30 = (int) -1;

        if $i18 != $i30 goto label22;

        return;

     label22:
        $r145 = newarray (java.lang.String)[2];

        $r192 = new java.lang.String;

        $r147 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r148 = virtualinvoke $r147.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r192.<java.lang.String: void <init>(char[])>($r148);

        $r145[0] = $r192;

        $z21 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r149 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r150 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z21, $r149, 0);

        $r145[1] = $r150;

        $r151 = newarray (java.lang.String)[2];

        $r193 = new java.lang.String;

        $r153 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r154 = virtualinvoke $r153.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r193.<java.lang.String: void <init>(char[])>($r154);

        $r151[0] = $r193;

        $z22 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r155 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r156 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z22, $r155, 1);

        $r151[1] = $r156;

        $i12 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        $i11 = r2.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(i20, $r145, $r151, $i18, $i12, $i11);

        return;
    }

    public void javadocInvalidField(org.eclipse.jdt.internal.compiler.ast.FieldReference, org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        java.lang.String[] $r3;
        org.eclipse.jdt.internal.compiler.lookup.Binding r0;
        int $i0, i1, $i2, $i3, $i4, i5, $i6, i7, i8, $i10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r7;
        java.lang.String $r8;
        boolean $z0;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldReference;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        i1 := @parameter3: int;

        i5 = -1610612248;

        i8 = -1610612248;

        i7 = -1610612248;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: int problemId()>();

        tableswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        i5 = -1610612248;

        i8 = -1610612248;

        i7 = -1610612248;

        goto label5;

     label2:
        i5 = -1610612247;

        i8 = -1610612247;

        i7 = -1610612247;

        goto label5;

     label3:
        i5 = -1610612246;

        i8 = -1610612246;

        i7 = -1610612246;

        goto label5;

     label4:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r6);

     label5:
        $i6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i8);

        $i10 = (int) -1;

        if $i6 != $i10 goto label6;

        return;

     label6:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label7;

        $r3 = newarray (java.lang.String)[1];

        $r8 = new java.lang.String;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r8;

        $i4 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldReference: int sourceStart>;

        $i3 = r6.<org.eclipse.jdt.internal.compiler.ast.FieldReference: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(i7, $r3, $r3, $i6, $i4, $i3);

     label7:
        return;
    }

    public void javadocInvalidMemberTypeQualification(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612270, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocInvalidMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2, $r96, $r97, $r148, $r149, $r150, $r155, $r156, $r163, $r167, $r171, $r175, r185, r187, r189;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding r177, r180, r184, r186, r188;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding $r32, $r45, r181;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r23;
        int i0, $i1, $i2, $i3, $i7, $i8, $i9, $i13, $i14, $i15, $i19, $i20, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i34, $i35, $i39, $i40, $i41, $i45, $i46, i47, i48, $i49, $i50, i51, i52, $i54, $i56, $i58, $i60, $i62, $i64;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r11, $r16, $r21, $r27, $r33, $r35, $r40, $r46, $r48, $r55, $r62, $r67, $r74, $r79, $r84, $r89, $r94, $r98, $r99, $r100, r102, $r103, $r107, $r121, $r138, $r146, $r151, $r153, $r157, $r159;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r7, $r12, $r17, $r22, $r28, $r34, $r36, $r41, $r47, $r49, $r56, $r61, $r63, $r68, $r73, $r75, $r80, $r85, $r90, $r95, $r108, $r112, $r117, $r122, $r126, $r131, $r139, $r147, $r152, $r154, $r158, $r160, r178, r179, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221;
        char[] $r5, $r10, $r15, $r20, $r26, $r31, $r39, $r44, $r54, $r59, $r66, $r71, $r78, $r83, $r88, $r93, $r106, $r111, $r114, $r116, $r120, $r125, $r128, $r130, $r135, $r137, $r143, $r145, $r165, $r168, $r173, $r176;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z28, $z29;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r19, $r30, $r43, $r58, $r70, $r82, $r92, $r110, $r124, $r134, $r142, $r164, $r172;
        long $l4, $l5, $l6, $l10, $l11, $l12, $l16, $l17, $l18, $l21, $l22, $l23, $l31, $l32, $l33, $l36, $l37, $l38, $l42, $l43, $l44;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r50, $r51, $r60, $r72;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r183;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r101, r182;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r13, $r24, $r37, $r52, $r64, $r76, $r86, $r104, $r118, $r132, $r140, $r161, $r169;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r23 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 != 0 goto label01;

        return;

     label01:
        i47 = -1610612240;

        i52 = -1610612240;

        i51 = -1610612240;

        $i2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int problemId()>();

        tableswitch($i2)
        {
            case 0: goto label21;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label21;
            case 5: goto label21;
            case 6: goto label21;
            case 7: goto label21;
            case 8: goto label21;
            case 9: goto label21;
            case 10: goto label07;
            case 11: goto label09;
            case 12: goto label17;
            case 13: goto label19;
            default: goto label21;
        };

     label02:
        i47 = -1610612240;

        i52 = -1610612240;

        i51 = -1610612240;

        r177 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r2;

        $r148 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if $r148 == null goto label22;

        $i41 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612235);

        $i54 = (int) -1;

        if $i41 != $i54 goto label03;

        return;

     label03:
        $r149 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $z22 = virtualinvoke $r149.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r150 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r151 = $r150.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r152 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z22, $r151, 0);

        $z23 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r153 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r154 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z23, $r153, 0);

        $r155 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $z24 = virtualinvoke $r155.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r156 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r157 = $r156.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r158 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z24, $r157, 1);

        r178 = $r158;

        $z25 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r159 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r160 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z25, $r159, 1);

        r179 = $r160;

        $z26 = virtualinvoke $r158.<java.lang.String: boolean equals(java.lang.Object)>($r160);

        if $z26 == 0 goto label04;

        r178 = $r152;

        r179 = $r154;

     label04:
        $r161 = newarray (java.lang.String)[4];

        $r190 = new java.lang.String;

        $r163 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r164 = $r163.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r165 = virtualinvoke $r164.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r190.<java.lang.String: void <init>(char[])>($r165);

        $r161[0] = $r190;

        $r191 = new java.lang.String;

        $r167 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r168 = $r167.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r191.<java.lang.String: void <init>(char[])>($r168);

        $r161[1] = $r191;

        $r161[2] = $r152;

        $r161[3] = $r154;

        $r169 = newarray (java.lang.String)[4];

        $r192 = new java.lang.String;

        $r171 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r172 = $r171.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r173 = virtualinvoke $r172.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r192.<java.lang.String: void <init>(char[])>($r173);

        $r169[0] = $r192;

        $r193 = new java.lang.String;

        $r175 = r177.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r176 = $r175.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r193.<java.lang.String: void <init>(char[])>($r176);

        $r169[1] = $r193;

        $r169[2] = r178;

        $r169[3] = r179;

        $l42 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l43 = $l42 >>> 32;

        $i46 = (int) $l43;

        $l44 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i45 = (int) $l44;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612235, $r161, $r169, $i41, $i46, $i45);

        return;

     label05:
        i47 = -1610612239;

        i52 = -1610612239;

        i51 = -1610612239;

        goto label22;

     label06:
        i47 = -1610612238;

        i52 = -1610612238;

        i51 = -1610612238;

        goto label22;

     label07:
        $i26 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611886);

        $i56 = (int) -1;

        if $i26 != $i56 goto label08;

        return;

     label08:
        r180 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r2;

        $r96 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        r181 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) $r96;

        $r97 = virtualinvoke r181.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r98 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i48 = lengthof $r98;

        $r99 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i27 = i48 - 2;

        r182 = $r99[$i27];

        $r100 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i28 = i48 - 1;

        $r101 = $r100[$i28];

        r183 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) $r101;

        $i29 = i48 - 2;

        r102 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i29];

        $r103 = r180.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i30 = i48 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r103, 0, r102, 0, $i30);

        $r104 = newarray (java.lang.String)[7];

        $r194 = new java.lang.String;

        $r106 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r194.<java.lang.String: void <init>(char[])>($r106);

        $r104[0] = $r194;

        $z18 = virtualinvoke $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r107 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r108 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z18, $r107, 0);

        $r104[1] = $r108;

        $r195 = new java.lang.String;

        $r110 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r111 = virtualinvoke $r110.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r195.<java.lang.String: void <init>(char[])>($r111);

        $r104[2] = $r195;

        $r112 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r102, 0);

        $r104[3] = $r112;

        $r196 = new java.lang.String;

        $r114 = virtualinvoke r182.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r196.<java.lang.String: void <init>(char[])>($r114);

        $r104[4] = $r196;

        $r197 = new java.lang.String;

        $r116 = r183.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r197.<java.lang.String: void <init>(char[])>($r116);

        $r104[5] = $r197;

        $r117 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r183, 0);

        $r104[6] = $r117;

        $r118 = newarray (java.lang.String)[7];

        $r198 = new java.lang.String;

        $r120 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r198.<java.lang.String: void <init>(char[])>($r120);

        $r118[0] = $r198;

        $z19 = virtualinvoke $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r121 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r122 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z19, $r121, 1);

        $r118[1] = $r122;

        $r199 = new java.lang.String;

        $r124 = $r97.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r125 = virtualinvoke $r124.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r199.<java.lang.String: void <init>(char[])>($r125);

        $r118[2] = $r199;

        $r126 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r102, 1);

        $r118[3] = $r126;

        $r200 = new java.lang.String;

        $r128 = virtualinvoke r182.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r200.<java.lang.String: void <init>(char[])>($r128);

        $r118[4] = $r200;

        $r201 = new java.lang.String;

        $r130 = r183.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r201.<java.lang.String: void <init>(char[])>($r130);

        $r118[5] = $r201;

        $r131 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r183, 1);

        $r118[6] = $r131;

        $l31 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l32 = $l31 >>> 32;

        $i35 = (int) $l32;

        $l33 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i34 = (int) $l33;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611886, $r104, $r118, $i26, $i35, $i34);

        return;

     label09:
        r184 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r2;

        r185 = r184.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r51 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r50 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r51 != $r50 goto label10;

        $z29 = 1;

        $z28 = 1;

        goto label11;

     label10:
        $z29 = 0;

        $z28 = 0;

     label11:
        z9 = $z28;

        if $z29 == 0 goto label12;

        $i49 = -1610611885;

        goto label13;

     label12:
        $i49 = -1610611884;

     label13:
        $i15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i49);

        $i58 = (int) -1;

        if $i15 != $i58 goto label14;

        return;

     label14:
        if z9 == 0 goto label15;

        $r76 = newarray (java.lang.String)[4];

        $r202 = new java.lang.String;

        $r78 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r202.<java.lang.String: void <init>(char[])>($r78);

        $r76[0] = $r202;

        $z14 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r79 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r80 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z14, $r79, 0);

        $r76[1] = $r80;

        $r203 = new java.lang.String;

        $r82 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r83 = virtualinvoke $r82.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r203.<java.lang.String: void <init>(char[])>($r83);

        $r76[2] = $r203;

        $z15 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r84 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r85 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z15, $r84, 0);

        $r76[3] = $r85;

        $r86 = newarray (java.lang.String)[4];

        $r204 = new java.lang.String;

        $r88 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r204.<java.lang.String: void <init>(char[])>($r88);

        $r86[0] = $r204;

        $z16 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r89 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r90 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z16, $r89, 1);

        $r86[1] = $r90;

        $r205 = new java.lang.String;

        $r92 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r93 = virtualinvoke $r92.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r205.<java.lang.String: void <init>(char[])>($r93);

        $r86[2] = $r205;

        $z17 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r94 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r95 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z17, $r94, 1);

        $r86[3] = $r95;

        $l21 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l22 = $l21 >>> 32;

        $i25 = (int) $l22;

        $l23 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i24 = (int) $l23;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611885, $r76, $r86, $i15, $i25, $i24);

        goto label16;

     label15:
        $r52 = newarray (java.lang.String)[5];

        $r206 = new java.lang.String;

        $r54 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r206.<java.lang.String: void <init>(char[])>($r54);

        $r52[0] = $r206;

        $z10 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r55 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r56 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z10, $r55, 0);

        $r52[1] = $r56;

        $r207 = new java.lang.String;

        $r58 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r59 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r207.<java.lang.String: void <init>(char[])>($r59);

        $r52[2] = $r207;

        $r60 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r60, 0);

        $r52[3] = $r61;

        $z11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r62 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r63 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z11, $r62, 0);

        $r52[4] = $r63;

        $r64 = newarray (java.lang.String)[5];

        $r208 = new java.lang.String;

        $r66 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r208.<java.lang.String: void <init>(char[])>($r66);

        $r64[0] = $r208;

        $z12 = virtualinvoke r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r67 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r68 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z12, $r67, 1);

        $r64[1] = $r68;

        $r209 = new java.lang.String;

        $r70 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r71 = virtualinvoke $r70.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r209.<java.lang.String: void <init>(char[])>($r71);

        $r64[2] = $r209;

        $r72 = r185.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r73 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r72, 1);

        $r64[3] = $r73;

        $z13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r74 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r75 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z13, $r74, 1);

        $r64[4] = $r75;

        $l16 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l17 = $l16 >>> 32;

        $i20 = (int) $l17;

        $l18 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i19 = (int) $l18;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611884, $r52, $r64, $i15, $i20, $i19);

     label16:
        return;

     label17:
        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611883);

        $i60 = (int) -1;

        if $i9 != $i60 goto label18;

        return;

     label18:
        r186 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r2;

        r187 = r186.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r24 = newarray (java.lang.String)[5];

        $r210 = new java.lang.String;

        $r26 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r210.<java.lang.String: void <init>(char[])>($r26);

        $r24[0] = $r210;

        $z5 = virtualinvoke r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r27 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r28 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r27, 0);

        $r24[1] = $r28;

        $r211 = new java.lang.String;

        $r30 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r211.<java.lang.String: void <init>(char[])>($r31);

        $r24[2] = $r211;

        $r32 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r187;

        $r33 = $r32.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r34 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r33, 0);

        $r24[3] = $r34;

        $z6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r35 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r36 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r35, 0);

        $r24[4] = $r36;

        $r37 = newarray (java.lang.String)[5];

        $r212 = new java.lang.String;

        $r39 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r212.<java.lang.String: void <init>(char[])>($r39);

        $r37[0] = $r212;

        $z7 = virtualinvoke r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r40 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r41 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z7, $r40, 1);

        $r37[1] = $r41;

        $r213 = new java.lang.String;

        $r43 = r187.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r213.<java.lang.String: void <init>(char[])>($r44);

        $r37[2] = $r213;

        $r45 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r187;

        $r46 = $r45.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] typeArguments>;

        $r47 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, $r46, 1);

        $r37[3] = $r47;

        $z8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r48 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r49 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z8, $r48, 1);

        $r37[4] = $r49;

        $l10 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l11 = $l10 >>> 32;

        $i14 = (int) $l11;

        $l12 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i13 = (int) $l12;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611883, $r24, $r37, $i9, $i14, $i13);

        return;

     label19:
        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610611882);

        $i62 = (int) -1;

        if $i3 != $i62 goto label20;

        return;

     label20:
        r188 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) r2;

        r189 = r188.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        $r3 = newarray (java.lang.String)[4];

        $r214 = new java.lang.String;

        $r5 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r214.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r214;

        $z1 = virtualinvoke r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r6, 0);

        $r3[1] = $r7;

        $r215 = new java.lang.String;

        $r9 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r215.<java.lang.String: void <init>(char[])>($r10);

        $r3[2] = $r215;

        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r11, 0);

        $r3[3] = $r12;

        $r13 = newarray (java.lang.String)[4];

        $r216 = new java.lang.String;

        $r15 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r216.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r216;

        $z3 = virtualinvoke r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r16, 1);

        $r13[1] = $r17;

        $r217 = new java.lang.String;

        $r19 = r189.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r217.<java.lang.String: void <init>(char[])>($r20);

        $r13[2] = $r217;

        $z4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r21 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r22 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r21, 1);

        $r13[3] = $r22;

        $l4 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l5 = $l4 >>> 32;

        $i8 = (int) $l5;

        $l6 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i7 = (int) $l6;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610611882, $r3, $r13, $i3, $i8, $i7);

        return;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r23);

     label22:
        $i50 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i52);

        $i64 = (int) -1;

        if $i50 != $i64 goto label23;

        return;

     label23:
        $r132 = newarray (java.lang.String)[3];

        $r218 = new java.lang.String;

        $r134 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r135 = virtualinvoke $r134.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r218.<java.lang.String: void <init>(char[])>($r135);

        $r132[0] = $r218;

        $r219 = new java.lang.String;

        $r137 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r219.<java.lang.String: void <init>(char[])>($r137);

        $r132[1] = $r219;

        $z20 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r138 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r139 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z20, $r138, 0);

        $r132[2] = $r139;

        $r140 = newarray (java.lang.String)[3];

        $r220 = new java.lang.String;

        $r142 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r143 = virtualinvoke $r142.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r220.<java.lang.String: void <init>(char[])>($r143);

        $r140[0] = $r220;

        $r221 = new java.lang.String;

        $r145 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r221.<java.lang.String: void <init>(char[])>($r145);

        $r140[1] = $r221;

        $z21 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r146 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r147 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z21, $r146, 1);

        $r140[2] = $r147;

        $l36 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l37 = $l36 >>> 32;

        $i40 = (int) $l37;

        $l38 = r23.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i39 = (int) $l38;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(i51, $r132, $r140, $i50, $i40, $i39);

        return;
    }

    public void javadocInvalidParamTagName(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612217, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidParamTypeParameter(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612267, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidReference(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612253, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidSeeHref(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612252, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidSeeReferenceArgs(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612251, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidSeeUrlReference(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612274, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidTag(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612249, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidThrowsClass(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612257, $r2, $r1, i0, i1);

        return;
    }

    public void javadocInvalidThrowsClassName(org.eclipse.jdt.internal.compiler.ast.TypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r3;
        int $i0, i1, $i2, $i3, $i4, $i6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612255);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r5);

        $r2[0] = $r6;

        $i4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612255, $r2, $r2, $i0, $i4, $i3);

     label2:
        return;
    }

    public void javadocInvalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r9;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, i7, i8, $i10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        java.lang.String $r10, $r11;
        boolean $z0;
        char[] $r5, $r8;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label10;

        i5 = -1610612233;

        i8 = -1610612233;

        i7 = -1610612233;

        $i2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i2)
        {
            case 0: goto label07;
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label07;
            case 7: goto label06;
            default: goto label07;
        };

     label01:
        i5 = -1610612233;

        i8 = -1610612233;

        i7 = -1610612233;

        goto label08;

     label02:
        i5 = -1610612232;

        i8 = -1610612232;

        i7 = -1610612232;

        goto label08;

     label03:
        i5 = -1610612231;

        i8 = -1610612231;

        i7 = -1610612231;

        goto label08;

     label04:
        i5 = -1610612229;

        i8 = -1610612229;

        i7 = -1610612229;

        goto label08;

     label05:
        i5 = -1610612226;

        i8 = -1610612226;

        i7 = -1610612226;

        goto label08;

     label06:
        i5 = -1610612268;

        i8 = -1610612268;

        i7 = -1610612268;

        goto label08;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r9);

     label08:
        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(i7);

        $i10 = (int) -1;

        if $i6 != $i10 goto label09;

        return;

     label09:
        $r3 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r10;

        $r6 = newarray (java.lang.String)[1];

        $r11 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r8);

        $r6[0] = $r11;

        $i4 = r9.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r9.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(i8, $r3, $r6, $i6, $i4, $i3);

     label10:
        return;
    }

    public void javadocInvalidValueReference(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612219, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocMalformedSeeReference(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612223, $r2, $r1, i0, i1);

        return;
    }

    public void javadocMissing(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, i1, i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612250);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissing(int,int,int,int)>(i1, i2, $i0, i3);

        return;
    }

    public void javadocMissing(int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1, $r2, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i8 = (int) -1;

        if i0 != $i8 goto label1;

        return;

     label1:
        $i2 = i1 & 805306368;

        if $i2 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i3 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(1048576L);

        $i10 = (int) -1;

        if $i3 == $i10 goto label5;

        if $z1 == 0 goto label4;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z0 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportMissingJavadocCommentsOverriding>;

        if $z0 == 0 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        if $z2 == 0 goto label7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i4 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportMissingJavadocCommentsVisibility>;

        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String javadocVisibilityArgument(int,int)>($i4, i1);

        if $r3 == null goto label7;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612250, $r4, $r4, i0, i5, i6);

     label7:
        return;
    }

    public void javadocMissingHashCharacter(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, i1, i2, $i4;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612221);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r1[0] = r2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612221, $r1, $r1, $i0, i1, i2);

        return;
    }

    public void javadocMissingIdentifier(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612269, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocMissingParamName(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612264, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocMissingParamTag(char[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3;
        int $i0, i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3;
        char[] r4;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1, $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: char[];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612265);

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        return;

     label1:
        $i2 = i1 & 805306368;

        if $i2 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i3 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(2097152L);

        $i10 = (int) -1;

        if $i3 == $i10 goto label5;

        if $z2 == 0 goto label4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z1 = $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportMissingJavadocTagsOverriding>;

        if $z1 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 == 0 goto label7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i4 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportMissingJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i4, i1);

        if $z0 == 0 goto label7;

        $r3 = newarray (java.lang.String)[1];

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r4);

        $r3[0] = $r5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612265, $r3, $r3, $i0, i5, i6);

     label7:
        return;
    }

    public void javadocMissingReference(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612254, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocMissingReturnTag(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r4;
        int i0, $i1, $i2, $i3, i4, i5, $i7;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1, $r2, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 & 805306368;

        if $i1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(2097152L);

        $i7 = (int) -1;

        if $i2 == $i7 goto label4;

        if $z2 == 0 goto label3;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z1 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportMissingJavadocTagsOverriding>;

        if $z1 == 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        if $z3 == 0 goto label6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i3 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportMissingJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i3, i0);

        if $z0 == 0 goto label6;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612261, $r4, $r3, i4, i5);

     label6:
        return;
    }

    public void javadocMissingTagDescription(char[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        int $i0, i1, $i2, i3, i4, $i6;
        char[] r4;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612273);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r4);

        $r2[0] = $r5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612220, $r2, $r2, i3, i4);

     label2:
        return;
    }

    public void javadocMissingTagDescriptionAfterReference(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int $i0, i1, $i2, i3, i4, $i6;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612273);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612273, $r3, $r2, $i0, i3, i4);

     label2:
        return;
    }

    public void javadocMissingThrowsClassName(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int i0, $i1, i2, i3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i1, i0);

        if $z0 == 0 goto label1;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612258, $r3, $r2, i2, i3);

     label1:
        return;
    }

    public void javadocMissingThrowsTag(org.eclipse.jdt.internal.compiler.ast.TypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r4;
        char[] $r6;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1, $r2, $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612259);

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        return;

     label1:
        $i2 = i1 & 805306368;

        if $i2 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i3 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(2097152L);

        $i10 = (int) -1;

        if $i3 == $i10 goto label5;

        if $z2 == 0 goto label4;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z1 = $r8.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportMissingJavadocTagsOverriding>;

        if $z1 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 == 0 goto label7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i4 = $r2.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportMissingJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i4, i1);

        if $z0 == 0 goto label7;

        $r3 = newarray (java.lang.String)[1];

        $r5 = r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        $r3[0] = $r7;

        $i6 = r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i5 = r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612259, $r3, $r3, $i0, $i6, $i5);

     label7:
        return;
    }

    public void javadocUndeclaredParamTagName(char[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2;
        int $i0, i1, $i2, i3, i4, $i6;
        char[] r3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: char[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612262);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i2 = $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int reportInvalidJavadocTagsVisibility>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean javadocVisibility(int,int)>($i2, i1);

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r3);

        $r2[0] = $r4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(-1610612262, $r2, $r2, $i0, i3, i4);

     label2:
        return;
    }

    public void javadocUnexpectedTag(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612266, $r2, $r1, i0, i1);

        return;
    }

    public void javadocUnexpectedText(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612218, $r2, $r1, i0, i1);

        return;
    }

    public void javadocUnterminatedInlineTag(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(-1610612224, $r2, $r1, i0, i1);

        return;
    }

    private boolean javadocVisibility(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, $i1, i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        return 1;

     label1:
        $i1 = i0 & 7;

        tableswitch($i1)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label7;
            case 3: goto label9;
            case 4: goto label3;
            default: goto label9;
        };

     label2:
        return 1;

     label3:
        if i2 == 1 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        if i2 == 0 goto label6;

        if i2 == 2 goto label6;

        return 0;

     label6:
        return 1;

     label7:
        if i2 != 2 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        return 1;
    }

    private java.lang.String javadocVisibilityArgument(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, $i1, i2;
        java.lang.String r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = null;

        $i1 = i0 & 7;

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label2;
            default: goto label6;
        };

     label1:
        r1 = "public";

        goto label6;

     label2:
        if i2 == 1 goto label6;

        r1 = "protected";

        goto label6;

     label3:
        if i2 == 0 goto label4;

        if i2 != 2 goto label6;

     label4:
        r1 = "default";

        goto label6;

     label5:
        if i2 != 2 goto label6;

        r1 = "private";

     label6:
        return r1;
    }

    public void localVariableHiding(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration, org.eclipse.jdt.internal.compiler.lookup.Binding, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r19;
        boolean $z0, $z1, z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r15;
        java.lang.String[] $r3, $r9, $r16;
        org.eclipse.jdt.internal.compiler.lookup.Binding r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i13, $i15;
        java.lang.String $r20, $r21, $r22, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r13;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r1;
        char[] $r5, $r8, $r11, $r14, $r18;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        z2 := @parameter2: boolean;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z0 == 0 goto label4;

        $z5 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.Argument;

        if $z5 == 0 goto label1;

        $i9 = 536871006;

        $i8 = 536871006;

        goto label2;

     label1:
        $i9 = 536871002;

        $i8 = 536871002;

     label2:
        $i3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i8);

        $i13 = (int) -1;

        if $i3 != $i13 goto label3;

        return;

     label3:
        $r16 = newarray (java.lang.String)[1];

        $r20 = new java.lang.String;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r18);

        $r16[0] = $r20;

        $i4 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0, r1);

        $i5 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r0, r1);

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>($i9, $r16, $r16, $i3, $i4, $i5);

        goto label9;

     label4:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z1 == 0 goto label9;

        if z2 == 0 goto label5;

        $r15 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $z4 = $r15.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean reportSpecialParameterHidingField>;

        if $z4 != 0 goto label5;

        return;

     label5:
        $z3 = r1 instanceof org.eclipse.jdt.internal.compiler.ast.Argument;

        if $z3 == 0 goto label6;

        $i11 = 536871007;

        $i10 = 536871007;

        goto label7;

     label6:
        $i11 = 570425435;

        $i10 = 570425435;

     label7:
        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i10);

        $i15 = (int) -1;

        if $i0 != $i15 goto label8;

        return;

     label8:
        r19 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) r0;

        $r3 = newarray (java.lang.String)[2];

        $r21 = new java.lang.String;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r21;

        $r22 = new java.lang.String;

        $r7 = r19.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r22;

        $r9 = newarray (java.lang.String)[2];

        $r23 = new java.lang.String;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r23;

        $r24 = new java.lang.String;

        $r13 = r19.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r24;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>($i11, $r3, $r9, $i0, $i2, $i1);

     label9:
        return;
    }

    public void localVariableNonNullComparedToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871370);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871370, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableNullComparedToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871366);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871366, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableNullInstanceof(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871368);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871368, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableNullReference(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871363);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871363, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariablePotentialNullReference(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871364);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871364, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableRedundantCheckOnNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871369);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871369, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableRedundantCheckOnNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871365);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871365, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void localVariableRedundantNullAssignment(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871367);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871367, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    public void methodMustOverride(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        long $l0;
        java.lang.String[] $r4, $r12;
        byte $b1;
        int $i2, $i3, $i4;
        java.lang.String $r5, $r8, $r9, $r13, $r16, $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10, $r18;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r15;
        char[] $r6, $r11, $r14, $r19;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r3;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l0 = $r3.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b1 = $l0 cmp 3211264L;

        if $b1 != 0 goto label1;

        $i4 = 67109487;

        goto label2;

     label1:
        $i4 = 67109498;

     label2:
        $r4 = newarray (java.lang.String)[3];

        $r5 = new java.lang.String;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $r4[0] = $r5;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r7 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r7, 0);

        $r4[1] = $r8;

        $r9 = new java.lang.String;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r4[2] = $r9;

        $r12 = newarray (java.lang.String)[3];

        $r13 = new java.lang.String;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r13;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r15 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r16 = specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r15, 1);

        $r12[1] = $r16;

        $r17 = new java.lang.String;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r19);

        $r12[2] = $r17;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i4, $r4, $r12, $i3, $i2);

        return;
    }

    public void methodNameClash(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, r10;
        java.lang.String[] $r1, $r16;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r7, $r12, $r13, $r17, $r20, $r21, $r25, $r26;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r8, $r14, $r22, $r27;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r5, $r11, $r19, $r24;
        char[] $r4, $r9, $r15, $r18, $r23, $r28;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r10 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[5];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r5 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r6 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r5, 0);

        $r1[1] = $r6;

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r1[2] = $r7;

        $z1 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r11, 0);

        $r1[3] = $r12;

        $r13 = new java.lang.String;

        $r14 = r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r15);

        $r1[4] = $r13;

        $r16 = newarray (java.lang.String)[5];

        $r17 = new java.lang.String;

        $r18 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r18);

        $r16[0] = $r17;

        $z2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r19 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r20 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r19, 1);

        $r16[1] = $r20;

        $r21 = new java.lang.String;

        $r22 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r23);

        $r16[2] = $r21;

        $z3 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r24, 1);

        $r16[3] = $r25;

        $r26 = new java.lang.String;

        $r27 = r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r28);

        $r16[4] = $r26;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109424, $r1, $r16, $i0, $i1);

        return;
    }

    public void methodNeedBody(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(603979883, $r3, $r2, $i1, $i0);

        return;
    }

    public void methodNeedingNoBody(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        $i4 = 603979888;

        goto label2;

     label1:
        $i4 = 603979889;

     label2:
        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceStart>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i4, $r3, $r2, $i3, $i2);

        return;
    }

    public void methodWithConstructorName(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108974, $r3, $r2, $i1, $i0);

        return;
    }

    public void missingDeprecatedAnnotationForField(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r15, $r16, $r17, $r18;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r11;
        char[] $r6, $r8, $r12, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871540);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r3 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r15;

        $r16 = new java.lang.String;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r16;

        $r9 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r17;

        $r18 = new java.lang.String;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r18;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r1);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871540, $r3, $r9, $i0, $i1, $i2);

        return;
    }

    public void missingDeprecatedAnnotationForMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r11;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r7, $r15, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r14;
        char[] $r5, $r10, $r13, $r18;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871541);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r19;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r6, 0);

        $r3[1] = $r7;

        $r20 = new java.lang.String;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r10);

        $r3[2] = $r20;

        $r11 = newarray (java.lang.String)[3];

        $r21 = new java.lang.String;

        $r13 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r21;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 1);

        $r11[1] = $r15;

        $r22 = new java.lang.String;

        $r17 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r18);

        $r11[2] = $r22;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871541, $r3, $r11, $i0, $i2, $i1);

        return;
    }

    public void missingDeprecatedAnnotationForType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        java.lang.String $r9, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871542);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r3 = newarray (java.lang.String)[1];

        $r9 = new java.lang.String;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r9;

        $r6 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r8);

        $r6[0] = $r10;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871542, $r3, $r6, $i0, $i2, $i1);

        return;
    }

    public void missingEnumConstantCase(org.eclipse.jdt.internal.compiler.ast.SwitchStatement, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        org.eclipse.jdt.internal.compiler.ast.Expression $r15, $r16;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.SwitchStatement r14;
        java.lang.String $r2, $r6, $r9, $r12;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.SwitchStatement;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r9;

        $r12 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r12;

        $r15 = r14.<org.eclipse.jdt.internal.compiler.ast.SwitchStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i1 = $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $r16 = r14.<org.eclipse.jdt.internal.compiler.ast.SwitchStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i0 = $r16.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33555193, $r1, $r8, $i1, $i0);

        return;
    }

    public void missingOverrideAnnotation(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r11;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r7, $r15, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r14;
        char[] $r5, $r10, $r13, $r18;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(67109491);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r19;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r6, 0);

        $r3[1] = $r7;

        $r20 = new java.lang.String;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r10);

        $r3[2] = $r20;

        $r11 = newarray (java.lang.String)[3];

        $r21 = new java.lang.String;

        $r13 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r21;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 1);

        $r11[1] = $r15;

        $r22 = new java.lang.String;

        $r17 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r18);

        $r11[2] = $r22;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109491, $r3, $r11, $i0, $i2, $i1);

        return;
    }

    public void missingReturnType(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777327, $r3, $r2, $i1, $i0);

        return;
    }

    public void missingSemiColon(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612960, $r3, $r2, $i1, $i0);

        return;
    }

    public void missingSerialVersion(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871008, $r0, $r0, $i1, $i0);

        return;
    }

    public void missingTypeInConstructor(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r4;
        java.lang.String[] $r10, $r18;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int i0, i1;
        java.lang.String $r11, $r15, $r16, $r19, $r23, $r24;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r12, $r20;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r14, $r22;
        java.util.List $r1;
        char[] $r13, $r17, $r21, $r25;
        java.lang.Object $r2;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r7, $r8, $r9;

        r5 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: java.util.List collectMissingTypes(java.util.List)>(null);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) $r2;

        i0 = r4.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        i1 = r4.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        $z0 = r4 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        if $z0 == 0 goto label1;

        r6 = (org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression) r4;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r7 == null goto label1;

        $r8 = r6.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        i0 = $r8.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r9 = r6.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        i1 = $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

     label1:
        $r10 = newarray (java.lang.String)[3];

        $r11 = new java.lang.String;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r11;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r14 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r14, 0);

        $r10[1] = $r15;

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r10[2] = $r16;

        $r18 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r21);

        $r18[0] = $r19;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r23 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r22, 1);

        $r18[1] = $r23;

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r25);

        $r18[2] = $r24;

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(134217857, $r10, $r18, i0, i1);

        return;
    }

    public void missingTypeInMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        java.util.List $r1;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r25;
        java.lang.String[] $r5, $r15;
        long $l0, $l1, $l2;
        int $i3, $i4;
        java.lang.String $r6, $r9, $r12, $r13, $r16, $r19, $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r11, $r21;
        char[] $r8, $r10, $r14, $r18, $r20, $r24;
        java.lang.Object $r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r25 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: java.util.List collectMissingTypes(java.util.List)>(null);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) $r2;

        $r5 = newarray (java.lang.String)[4];

        $r6 = new java.lang.String;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r5[0] = $r6;

        $r9 = new java.lang.String;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r5[1] = $r9;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r11, 0);

        $r5[2] = $r12;

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r5[3] = $r13;

        $r15 = newarray (java.lang.String)[4];

        $r16 = new java.lang.String;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r16;

        $r19 = new java.lang.String;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        $r15[1] = $r19;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r21 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r22 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r21, 1);

        $r15[2] = $r22;

        $r23 = new java.lang.String;

        $r24 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r24);

        $r15[3] = $r23;

        $l0 = r25.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $l1 = $l0 >>> 32;

        $i4 = (int) $l1;

        $l2 = r25.<org.eclipse.jdt.internal.compiler.ast.MessageSend: long nameSourcePosition>;

        $i3 = (int) $l2;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67108984, $r5, $r15, $i4, $i3);

        return;
    }

    public void missingValueForAnnotationMember(org.eclipse.jdt.internal.compiler.ast.Annotation, char[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        java.lang.String[] $r3, $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r6, $r10;
        int $i0, $i1;
        char[] r1, $r7, $r11;
        org.eclipse.jdt.internal.compiler.ast.Annotation r5;
        java.lang.String $r0, $r4, $r9;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Annotation;

        r1 := @parameter1: char[];

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>(r1);

        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r7);

        $r3[0] = $r4;

        $r3[1] = $r0;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = r5.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r9;

        $r8[1] = $r0;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.Annotation: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777825, $r3, $r8, $i1, $i0);

        return;
    }

    public void mustDefineDimensionsOrInitializer(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871071, $r3, $r2, $i1, $i0);

        return;
    }

    public void mustSpecifyPackage(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1, $i2;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: char[] getFileName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceStart>;

        $i1 = $i0 + 1;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871238, $r0, $r0, $i2, $i1);

        return;
    }

    public void mustUseAStaticMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r10;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r11, $r14, $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16;
        org.eclipse.jdt.internal.compiler.ast.MessageSend r18;
        char[] $r5, $r7, $r13, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r18 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MessageSend;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r8, 0);

        $r1[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r11 = new java.lang.String;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r11;

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r14;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r16, 1);

        $r10[2] = $r17;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceStart>;

        $i0 = r18.<org.eclipse.jdt.internal.compiler.ast.MessageSend: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(603979977, $r1, $r10, $i1, $i0);

        return;
    }

    public void nativeMethodsCannotBeStrictfp(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r5;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109231, $r0, $r0, $i1, $i0);

        return;
    }

    public void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String $r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r2 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String abort_missingCode>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void abortDueToInternalError(java.lang.String,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r2, r1);

        return;
    }

    public void needToEmulateFieldAccess(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        int $i0, $i1, $i2, $i4, $i5, $i7;
        java.lang.String $r15, $r16, $r17, $r18;
        boolean z0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r14 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $i5 = 33554622;

        $i4 = 33554622;

        goto label2;

     label1:
        $i5 = 33554623;

        $i4 = 33554623;

     label2:
        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i4);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        return;

     label3:
        $r1 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r15;

        $r16 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r16;

        $r8 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r18;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r14);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>($i5, $r1, $r8, $i0, $i1, $i2);

        return;
    }

    public void needToEmulateMethodAccess(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        java.lang.String[] $r2, $r10, $r20, $r26;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.String $r9, $r17, $r25, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12, $r19, $r22, $r28;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16, $r24, $r30;
        char[] $r5, $r7, $r13, $r15, $r23, $r29;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r18 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label3;

        $i3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(67109057);

        $i7 = (int) -1;

        if $i3 != $i7 goto label1;

        return;

     label1:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z3 == 0 goto label2;

        return;

     label2:
        $r20 = newarray (java.lang.String)[2];

        $r32 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r23);

        $r20[0] = $r32;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r24, 0);

        $r20[1] = $r25;

        $r26 = newarray (java.lang.String)[2];

        $r33 = new java.lang.String;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r29);

        $r26[0] = $r33;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r30, 1);

        $r26[1] = $r31;

        $i5 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i4 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109057, $r20, $r26, $i3, $i5, $i4);

        return;

     label3:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(67109056);

        $i9 = (int) -1;

        if $i0 != $i9 goto label4;

        return;

     label4:
        $r2 = newarray (java.lang.String)[3];

        $r34 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r34;

        $r35 = new java.lang.String;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r35;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r8, 0);

        $r2[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r36 = new java.lang.String;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r36.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r36;

        $r37 = new java.lang.String;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r37.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r37;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r16, 1);

        $r10[2] = $r17;

        $i2 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109056, $r2, $r10, $i0, $i2, $i1);

        return;
    }

    public void noAdditionalBoundAfterTypeVariable(org.eclipse.jdt.internal.compiler.ast.TypeReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r8;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777789, $r1, $r6, $i1, $i0);

        return;
    }

    private int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.Binding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(r1, r2, 0);

        return $i0;
    }

    private int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.ast.ASTNode, int)
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r15;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r7, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] r16;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        long $l1, $l5, $l9, $l13, $l15, $l19;
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference $r13;
        org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference r18;
        org.eclipse.jdt.internal.compiler.lookup.Binding r5, $r6;
        long[] $r1, $r2, $r3, $r4, $r8, $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r17;
        int $i0, $i2, i3, $i4, $i6, i7, $i8, $i10, $i11, $i12, $i14, $i16, $i17, $i18, $i20, $i21, i22, i23, i24, i25, i26, $i27;

        r14 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        i3 := @parameter2: int;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        if $z0 == 0 goto label01;

        $r13 = (org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference) r0;

        $i21 = $r13.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: int originalSourceEnd>;

        return $i21;

     label01:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        if $z1 == 0 goto label11;

        r15 = (org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) r0;

        $r6 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r6 != r5 goto label03;

        if i3 != 0 goto label02;

        $r12 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i17 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        $i18 = $i17 - 1;

        $l19 = $r12[$i18];

        $i20 = (int) $l19;

        return $i20;

     label02:
        $r11 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $l15 = $r11[i3];

        $i16 = (int) $l15;

        return $i16;

     label03:
        r16 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] otherBindings>;

        if r16 == null goto label13;

        i7 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        if i3 == 0 goto label07;

        i22 = 0;

        i23 = lengthof r16;

        goto label06;

     label04:
        $r9 = r16[i22];

        if $r9 != r5 goto label05;

        $i11 = i22 + i7;

        if $i11 != i3 goto label05;

        $r10 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i12 = i22 + i7;

        $l13 = $r10[$i12];

        $i14 = (int) $l13;

        return $i14;

     label05:
        i22 = i22 + 1;

     label06:
        if i22 < i23 goto label04;

        goto label13;

     label07:
        i24 = 0;

        i25 = lengthof r16;

        goto label10;

     label08:
        $r7 = r16[i24];

        if $r7 != r5 goto label09;

        $r8 = r15.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i8 = i24 + i7;

        $l9 = $r8[$i8];

        $i10 = (int) $l9;

        return $i10;

     label09:
        i24 = i24 + 1;

     label10:
        if i24 < i25 goto label08;

        goto label13;

     label11:
        $z2 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z2 == 0 goto label12;

        r17 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) r0;

        $r3 = r17.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: long[] sourcePositions>;

        $i4 = lengthof $r3;

        if i3 >= $i4 goto label13;

        $r4 = r17.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: long[] sourcePositions>;

        $l5 = $r4[i3];

        $i6 = (int) $l5;

        return $i6;

     label12:
        $z3 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;

        if $z3 == 0 goto label13;

        r18 = (org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference) r0;

        $r1 = r18.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: long[] sourcePositions>;

        i26 = lengthof $r1;

        $r2 = r18.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: long[] sourcePositions>;

        $i0 = i26 - 1;

        $l1 = $r2[$i0];

        $i2 = (int) $l1;

        return $i2;

     label13:
        $i27 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        return $i27;
    }

    private int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.Binding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(r1, r2, 0);

        return $i0;
    }

    private int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.ast.ASTNode, int)
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r13;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r11;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r5, $r7;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] r4;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.FieldReference r12;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        long $l0, $l1, $l6, $l7, $l11, $l12, $l14, $l15, $l19, $l20, $l22, $l23;
        org.eclipse.jdt.internal.compiler.lookup.Binding r2, $r3;
        long[] $r1, $r6, $r8, $r9, $r10;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r14;
        int $i2, i3, i4, $i5, $i8, $i9, $i10, $i13, $i16, $i17, $i18, $i21, $i24, i25, i26, i27, i28, $i29;

        r11 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        i4 := @parameter2: int;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.FieldReference;

        if $z0 == 0 goto label01;

        r12 = (org.eclipse.jdt.internal.compiler.ast.FieldReference) r0;

        $l22 = r12.<org.eclipse.jdt.internal.compiler.ast.FieldReference: long nameSourcePosition>;

        $l23 = $l22 >> 32;

        $i24 = (int) $l23;

        return $i24;

     label01:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        if $z1 == 0 goto label11;

        r13 = (org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) r0;

        $r3 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r3 != r2 goto label03;

        if i4 != 0 goto label02;

        $r10 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i17 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        $i18 = $i17 - 1;

        $l19 = $r10[$i18];

        $l20 = $l19 >> 32;

        $i21 = (int) $l20;

        return $i21;

     label02:
        $r9 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $l14 = $r9[i4];

        $l15 = $l14 >> 32;

        $i16 = (int) $l15;

        return $i16;

     label03:
        r4 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] otherBindings>;

        if r4 == null goto label12;

        i3 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        if i4 == 0 goto label07;

        i25 = 0;

        i26 = lengthof r4;

        goto label06;

     label04:
        $r7 = r4[i25];

        if $r7 != r2 goto label05;

        $i9 = i25 + i3;

        if $i9 != i4 goto label05;

        $r8 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i10 = i25 + i3;

        $l11 = $r8[$i10];

        $l12 = $l11 >> 32;

        $i13 = (int) $l12;

        return $i13;

     label05:
        i25 = i25 + 1;

     label06:
        if i25 < i26 goto label04;

        goto label12;

     label07:
        i27 = 0;

        i28 = lengthof r4;

        goto label10;

     label08:
        $r5 = r4[i27];

        if $r5 != r2 goto label09;

        $r6 = r13.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i5 = i27 + i3;

        $l6 = $r6[$i5];

        $l7 = $l6 >> 32;

        $i8 = (int) $l7;

        return $i8;

     label09:
        i27 = i27 + 1;

     label10:
        if i27 < i28 goto label08;

        goto label12;

     label11:
        $z2 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z2 == 0 goto label12;

        r14 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) r0;

        $r1 = r14.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: long[] sourcePositions>;

        $l0 = $r1[0];

        $l1 = $l0 >>> 32;

        $i2 = (int) $l1;

        return $i2;

     label12:
        $i29 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        return $i29;
    }

    public void noMoreAvailableSpaceForArgument(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2;
        char[] $r3;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding;

        if $z0 == 0 goto label1;

        $i2 = 536870979;

        goto label2;

     label1:
        $i2 = 536870977;

     label2:
        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>($i2, $r0, $r0, 159, $i0, $i1);

        return;
    }

    public void noMoreAvailableSpaceForConstant(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871343, $r1, $r6, 159, $i1, $i0);

        return;
    }

    public void noMoreAvailableSpaceForLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870978, $r0, $r0, 159, $i0, $i1);

        return;
    }

    public void noMoreAvailableSpaceInConstantPool(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871342, $r1, $r6, 159, $i1, $i0);

        return;
    }

    public void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871173, $r3, $r2, $i1, $i0);

        return;
    }

    public void nonGenericTypeCannotBeParameterized(int, org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r8, $r12, $r16;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, i1, $i2;
        java.lang.String $r3, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r6;
        char[] $r5, $r10, $r14, $r18;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        if r0 != null goto label1;

        $r12 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r13;

        $r15 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r12[1] = $r15;

        $r16 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r18 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r18);

        $r16[0] = $r17;

        $r19 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r16[1] = $r19;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777740, $r12, $r16, 131, 0, 0);

        return;

     label1:
        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r2[1] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r8[1] = $r11;

        $i0 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(null, r0);

        $i2 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(null, r0, i1);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777740, $r2, $r8, $i0, $i2);

        return;
    }

    public void nonStaticAccessToStaticField(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $i1 = (int) -1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonStaticAccessToStaticField(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.FieldBinding,int)>(r1, r2, $i1);

        return;
    }

    public void nonStaticAccessToStaticField(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.FieldBinding, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        int $i0, i1, $i2, $i3, $i5;
        java.lang.String $r15, $r16, $r17, $r18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r7, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        i1 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(570425420);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r15;

        $r16 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r16;

        $r8 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r11);

        $r8[0] = $r17;

        $r18 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r18;

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(r3, r14, i1);

        $i3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(r3, r14, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(570425420, $r1, $r8, $i0, $i2, $i3);

        return;
    }

    public void nonStaticAccessToStaticMethod(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r10;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r18;
        int $i0, $i1;
        java.lang.String $r2, $r6, $r9, $r11, $r14, $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r16;
        char[] $r5, $r7, $r13, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r18 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = new java.lang.String;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r6;

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r9 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r8, 0);

        $r1[2] = $r9;

        $r10 = newarray (java.lang.String)[3];

        $r11 = new java.lang.String;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r10[0] = $r11;

        $r14 = new java.lang.String;

        $r15 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r10[1] = $r14;

        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r16 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r16, 1);

        $r10[2] = $r17;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(603979893, $r1, $r10, $i1, $i0);

        return;
    }

    public void nonStaticContextForEnumMemberType(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870944, $r0, $r0, $i0, $i1);

        return;
    }

    public void noSuchEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r14, $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        int $i0, i1, $i2, $i3;
        java.lang.String $r15, $r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r7, $r10;
        org.eclipse.jdt.internal.compiler.ast.AllocationExpression $r3, $r6, $r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r8, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r13;
        char[] $r16, $r19;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        i1 = 536870940;

        goto label5;

     label1:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z1 == 0 goto label2;

        $r13 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) r0;

        $i0 = $r13.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i0 != 1 goto label2;

        i1 = 16777236;

        goto label5;

     label2:
        $z2 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z2 == 0 goto label4;

        $r3 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) r0;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isMemberType()>();

        if $z3 != 0 goto label3;

        $r6 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) r0;

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z4 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAnonymousType()>();

        if $z4 == 0 goto label4;

        $r9 = (org.eclipse.jdt.internal.compiler.ast.AllocationExpression) r0;

        $r10 = $r9.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        $z5 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isMemberType()>();

        if $z5 == 0 goto label4;

     label3:
        i1 = 16777237;

        goto label5;

     label4:
        i1 = 16777238;

     label5:
        $r14 = newarray (java.lang.String)[1];

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r14[0] = $r15;

        $r17 = newarray (java.lang.String)[1];

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r17[0] = $r18;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i1, $r14, $r17, $i2, $i3);

        return;
    }

    public void notCompatibleTypesError(org.eclipse.jdt.internal.compiler.ast.EqualExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, r14, r15;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r13;
        char[] $r2, $r5, $r7, $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r14 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r15 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r14 = $r0;

        r15 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = $r0;

        $r11[1] = $r3;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r14;

        $r12[1] = r15;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777231, $r11, $r12, $i1, $i0);

        return;
    }

    public void notCompatibleTypesError(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression r13;
        java.lang.String[] $r11, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, r14, r15;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r14 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r15 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r14 = $r0;

        r15 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = $r0;

        $r11[1] = $r3;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r14;

        $r12[1] = r15;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777232, $r11, $r12, $i1, $i0);

        return;
    }

    public void notCompatibleTypesErrorInForeach(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.Expression r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, r14, r15;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r14 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r15 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r14 = $r0;

        r15 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = $r0;

        $r11[1] = $r3;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r14;

        $r12[1] = r15;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777796, $r11, $r12, $i1, $i0);

        return;
    }

    public void objectCannotBeGeneric(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r7, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r3, $r6;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r2, $r4, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r8 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r7 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r3 = $r2[0];

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $i0 = lengthof $r4;

        $i1 = $i0 - 1;

        $r6 = $r5[$i1];

        $i2 = $r6.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871435, $r8, $r7, $i3, $i2);

        return;
    }

    public void objectCannotHaveSuperTypes(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871241, $r2, $r3, $i0, $i1);

        return;
    }

    public void objectMustBeClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871242, $r2, $r3, $i0, $i1);

        return;
    }

    public void operatorOnlyValidOnNumericType(org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, r14, r15;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r14 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r15 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r14 = $r0;

        r15 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = $r0;

        $r11[1] = $r3;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r14;

        $r12[1] = r15;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777233, $r11, $r12, $i1, $i0);

        return;
    }

    public void overridesDeprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r12;
        int $i0, $i1;
        java.lang.String $r2, $r8, $r13, $r18;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10, $r14, $r19;
        char[] $r5, $r6, $r7, $r11, $r15, $r16, $r17, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r5, $r6, 46);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r7);

        $r1[0] = $r2;

        $r8 = new java.lang.String;

        $r10 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r11);

        $r1[1] = $r8;

        $r12 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r17 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r15, $r16, 46);

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r17);

        $r12[0] = $r13;

        $r18 = new java.lang.String;

        $r19 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r12[1] = $r18;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109276, $r1, $r12, $i0, $i1);

        return;
    }

    public void overridesMethodWithoutSuperInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r9;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10;
        char[] $r5, $r6, $r7, $r11, $r12, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r5, $r6, 46);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r7);

        $r1[0] = $r2;

        $r8 = newarray (java.lang.String)[1];

        $r9 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r13 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r11, $r12, 46);

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r13);

        $r8[0] = $r9;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109280, $r1, $r8, $i0, $i1);

        return;
    }

    public void overridesPackageDefaultMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r12;
        int $i0, $i1;
        java.lang.String $r2, $r8, $r13, $r18;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r10, $r14, $r19;
        char[] $r5, $r6, $r7, $r11, $r15, $r16, $r17, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r5, $r6, 46);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r7);

        $r1[0] = $r2;

        $r8 = new java.lang.String;

        $r10 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r11);

        $r1[1] = $r8;

        $r12 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] shortReadableName()>();

        $r17 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>($r15, $r16, 46);

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r17);

        $r12[0] = $r13;

        $r18 = new java.lang.String;

        $r19 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r12[1] = $r18;

        $i0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109274, $r1, $r12, $i0, $i1);

        return;
    }

    public void packageCollidesWithType(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r2, $r6, $r7;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r5;
        java.lang.String[] $r0;
        char[][] $r3;
        int $i0, $i1;
        java.lang.String $r4;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r5 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r3);

        $r0[0] = $r4;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $i1 = $r6.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $i0 = $r7.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777537, $r0, $r0, $i1, $i0);

        return;
    }

    public void packageIsNotExpectedPackage(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r9;
        java.lang.String[] $r0;
        char[][] $r4, $r8;
        int $i0, $i1;
        java.lang.String $r5, $r14;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r6, $r7, $r10, $r11, $r12, $r13;
        org.eclipse.jdt.internal.compiler.CompilationResult $r2;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r3;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r9 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[][] getPackageName()>();

        $r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r4);

        $r0[0] = $r5;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r6 != null goto label1;

        $r14 = "";

        goto label2;

     label1:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r14 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r8);

     label2:
        $r0[1] = $r14;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r10 != null goto label3;

        $i0 = 0;

        goto label4;

     label3:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $i0 = $r11.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

     label4:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r12 != null goto label5;

        $i1 = 0;

        goto label6;

     label5:
        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $i1 = $r13.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

     label6:
        specialinvoke r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871240, $r0, $r0, $i0, $i1);

        return;
    }

    public void parameterAssignment(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536870971);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r6;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r3, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870971, $r1, $r1, $i0, $i1, $i2);

        return;
    }

    private java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r13;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r5, $r7, $r15;
        java.lang.StringBuffer $r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r10;
        int $i0, i1;
        java.lang.String $r4;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r1;
        boolean z0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r6, $r8, $r9, $r11, $r12;
        char[] $r14, $r16;

        r13 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        z0 := @parameter1: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(10);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding firstBound>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        if $r3 != $r2 goto label03;

        if z0 == 0 goto label01;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        $r14 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        goto label02;

     label01:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        $r14 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

     label02:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r14);

     label03:
        $r15 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces>;

        $i0 = lengthof $r15;

        if $i0 <= 0 goto label10;

        i1 = 0;

        goto label09;

     label04:
        if i1 > 0 goto label05;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding firstBound>;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        if $r10 != $r9 goto label06;

     label05:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" & ");

     label06:
        if z0 == 0 goto label07;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces>;

        $r8 = $r7[i1];

        $r16 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        goto label08;

     label07:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] superInterfaces>;

        $r6 = $r5[i1];

        $r16 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

     label08:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r16);

        i1 = i1 + 1;

     label09:
        if i1 < $i0 goto label04;

     label10:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public void parameterizedMemberTypeMissingArguments(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r6, $r9, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, $i1;
        java.lang.String $r3, $r7, $r10, $r13;
        char[] $r5, $r8, $r11, $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        if r0 != null goto label1;

        $r9 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r10;

        $r12 = newarray (java.lang.String)[1];

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r13;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777778, $r9, $r12, 131, 0, 0);

        return;

     label1:
        $r2 = newarray (java.lang.String)[1];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r6[0] = $r7;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777778, $r2, $r6, $i1, $i0);

        return;
    }

    public void parseError(int, int, int, char[], java.lang.String, java.lang.String[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        java.lang.String[] r0, $r6, $r9, $r10, $r13;
        java.lang.StringBuffer $r1;
        int $i0, i1, i2, i3, i4, i5;
        java.lang.String $r2, $r4, $r7, $r8, $r11, r12, $r14;
        boolean $z0, $z1, $z2, $z3;
        char[] r5;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        i2 := @parameter2: int;

        r5 := @parameter3: char[];

        r12 := @parameter4: java.lang.String;

        r0 := @parameter5: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

        $z3 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isKeyword(int)>(i2);

        if $z3 == 0 goto label1;

        $r10 = newarray (java.lang.String)[1];

        $r11 = new java.lang.String;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>(r5);

        $r10[0] = $r11;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612946, $r10, $r10, i3, i4);

        return;

     label1:
        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r12;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612941, $r9, $r9, i3, i4);

        return;

     label2:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(20);

        i5 = 0;

        i1 = lengthof r0;

        goto label5;

     label3:
        if i5 <= 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r2 = r0[i5];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i5 = i5 + 1;

     label5:
        if i5 < i1 goto label3;

        $z0 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isKeyword(int)>(i2);

        if $z0 == 0 goto label6;

        $r6 = newarray (java.lang.String)[2];

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>(r5);

        $r6[0] = $r7;

        $r8 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6[1] = $r8;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612945, $r6, $r6, i3, i4);

        return;

     label6:
        $z1 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isLiteral(int)>(i2);

        if $z1 != 0 goto label7;

        $z2 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isIdentifier(int)>(i2);

        if $z2 == 0 goto label8;

     label7:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r5);

        r12 = $r4;

     label8:
        $r13 = newarray (java.lang.String)[2];

        $r13[0] = r12;

        $r14 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13[1] = $r14;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612940, $r13, $r13, i3, i4);

        return;
    }

    public void parseErrorDeleteToken(int, int, int, char[], java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612968, i0, i1, i2, r1, r2, null);

        return;
    }

    public void parseErrorDeleteTokens(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612969, $r2, $r1, i0, i1);

        return;
    }

    public void parseErrorInsertAfterToken(int, int, int, char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612967, i0, i1, i2, r1, r2, r3);

        return;
    }

    public void parseErrorInsertBeforeToken(int, int, int, char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612966, i0, i1, i2, r1, r2, r3);

        return;
    }

    public void parseErrorInsertToComplete(int, int, java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1, r2;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612976, $r0, $r0, i0, i1);

        return;
    }

    public void parseErrorInsertToCompletePhrase(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612978, $r0, $r0, i0, i1);

        return;
    }

    public void parseErrorInsertToCompleteScope(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612977, $r0, $r0, i0, i1);

        return;
    }

    public void parseErrorInvalidToken(int, int, int, char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612971, i0, i1, i2, r1, r2, r3);

        return;
    }

    public void parseErrorMergeTokens(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612970, $r0, $r0, i0, i1);

        return;
    }

    public void parseErrorMisplacedConstruct(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612972, $r2, $r1, i0, i1);

        return;
    }

    public void parseErrorNoSuggestion(int, int, int, char[], java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612941, i0, i1, i2, r1, r2, null);

        return;
    }

    public void parseErrorNoSuggestionForTokens(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612974, $r2, $r1, i0, i1);

        return;
    }

    public void parseErrorReplaceToken(int, int, int, char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: char[];

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void syntaxError(int,int,int,int,char[],java.lang.String,java.lang.String)>(1610612940, i0, i1, i2, r1, r2, r3);

        return;
    }

    public void parseErrorReplaceTokens(int, int, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        int i0, i1;
        java.lang.String[] $r0;
        java.lang.String r1;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = r1;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612973, $r0, $r0, i0, i1);

        return;
    }

    public void parseErrorUnexpectedEnd(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4, $r6, $r8, $r10, r12;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r2, $r3;
        int i0, i1;
        java.lang.String $r5, $r7, $r9, $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z0 = $r1 instanceof org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        if $z0 == 0 goto label1;

        $r10 = newarray (java.lang.String)[1];

        $r11 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String parser_endOfConstructor>;

        $r10[0] = $r11;

        r12 = $r10;

        goto label4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z1 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        if $z1 == 0 goto label2;

        $r8 = newarray (java.lang.String)[1];

        $r9 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String parser_endOfMethod>;

        $r8[0] = $r9;

        r12 = $r8;

        goto label4;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z2 = $r3 instanceof org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        if $z2 == 0 goto label3;

        $r6 = newarray (java.lang.String)[1];

        $r7 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String parser_endOfInitializer>;

        $r6[0] = $r7;

        r12 = $r6;

        goto label4;

     label3:
        $r4 = newarray (java.lang.String)[1];

        $r5 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String parser_endOfFile>;

        $r4[0] = $r5;

        r12 = $r4;

     label4:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(1610612975, r12, r12, i0, i1);

        return;
    }

    public void possibleAccidentalBooleanAssignment(org.eclipse.jdt.internal.compiler.ast.Assignment)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.Assignment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Assignment;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Assignment: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Assignment: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871091, $r3, $r2, $i1, $i0);

        return;
    }

    public void possibleFallThroughCase(org.eclipse.jdt.internal.compiler.ast.CaseStatement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.CaseStatement r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CaseStatement;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CaseStatement: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.CaseStatement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871106, $r3, $r2, $i1, $i0);

        return;
    }

    public void publicClassMustMatchFileName(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r8;
        java.lang.String[] $r2;
        int $i0, $i1;
        char[] $r5, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        java.lang.String $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = r1;

        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: char[] getFileName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r6 = new java.lang.String;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r6;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r8 = r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.CompilationResult)>(16777541, $r2, $r2, $i1, $i0, $r8);

        return;
    }

    public void rawMemberTypeCannotBeParameterized(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r11, $r18, $r25;
        int $i0, $i1;
        java.lang.String $r3, $r7, $r8, $r12, $r14, $r15, $r19, $r21, $r22, $r26, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r4, $r9, $r16, $r23, $r30;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r6;
        char[] $r5, $r10, $r13, $r17, $r20, $r24, $r27, $r31;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        if r0 != null goto label1;

        $r18 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r20 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r20);

        $r18[0] = $r19;

        $r21 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r18[1] = $r21;

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r24);

        $r18[2] = $r22;

        $r25 = newarray (java.lang.String)[3];

        $r26 = new java.lang.String;

        $r27 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r27);

        $r25[0] = $r26;

        $r28 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r25[1] = $r28;

        $r29 = new java.lang.String;

        $r30 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r31);

        $r25[2] = $r29;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777777, $r18, $r25, 131, 0, 0);

        return;

     label1:
        $r2 = newarray (java.lang.String)[3];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 0);

        $r2[1] = $r7;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r2[2] = $r8;

        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r14 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r6, 1);

        $r11[1] = $r14;

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r17);

        $r11[2] = $r15;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777777, $r2, $r11, $i1, $i0);

        return;
    }

    public void rawTypeReference(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        java.lang.String[] $r2, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r14;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r0, $r6, $r12, r15;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r9, $r11;
        char[] $r4, $r7, $r10, $r13;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r15 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = virtualinvoke r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r3;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r13);

        $r8[1] = $r11;

        $i0 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(null, r14);

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777788, $r2, $r8, $i0, $i1);

        return;
    }

    public void recursiveConstructorInvocation(org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r11;
        int $i0, $i1;
        java.lang.String $r2, $r10, $r12, $r19;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r7, $r8, $r13, $r16, $r17;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r14;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r18;
        char[] $r6, $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r6);

        $r1[0] = $r2;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r10 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r9, 0);

        $r1[1] = $r10;

        $r11 = newarray (java.lang.String)[2];

        $r12 = new java.lang.String;

        $r13 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r15);

        $r11[0] = $r12;

        $r16 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r19 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r18, 1);

        $r11[1] = $r19;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(134217865, $r1, $r11, $i1, $i0);

        return;
    }

    public void redefineArgument(org.eclipse.jdt.internal.compiler.ast.Argument)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Argument: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870968, $r0, $r0, $i1, $i0);

        return;
    }

    public void redefineLocal(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870967, $r0, $r0, $i1, $i0);

        return;
    }

    public void redundantSuperInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r6;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r11;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r19, $r20, $r21, $r22, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3, r9;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r18;
        char[] $r4, $r7, $r10, $r13, $r15, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r18 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r9 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777547);

        $i4 = (int) -1;

        if $i0 == $i4 goto label1;

        $r1 = newarray (java.lang.String)[3];

        $r19 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r19;

        $r20 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r20;

        $r21 = new java.lang.String;

        $r10 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r10);

        $r1[2] = $r21;

        $r11 = newarray (java.lang.String)[3];

        $r22 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r22;

        $r23 = new java.lang.String;

        $r15 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r15);

        $r11[1] = $r23;

        $r24 = new java.lang.String;

        $r17 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r17);

        $r11[2] = $r24;

        $i2 = r18.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777547, $r1, $r11, $i0, $i2, $i1);

     label1:
        return;
    }

    public void referenceMustBeArrayTypeAt(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ArrayReference)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;
        org.eclipse.jdt.internal.compiler.ast.ArrayReference r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ArrayReference;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ArrayReference: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ArrayReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871062, $r1, $r5, $i1, $i0);

        return;
    }

    public void reset()
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner> = null;

        return;
    }

    private int retrieveClosingAngleBracketPosition(int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        long $l4, $l5;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r2;
        int $i0, i1, $i2, $i3, i6, i7, $i8, $i10;
        org.eclipse.jdt.internal.compiler.parser.Scanner $r6, $r7, $r8, $r9, $r13, $r15, $r16;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3;
        org.eclipse.jdt.core.compiler.InvalidInputException $r14;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r11, $r12;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        if $r1 != null goto label01;

        return i1;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        if $r3 != null goto label02;

        return i1;

     label02:
        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit getCompilationUnit()>();

        if $r4 != null goto label03;

        return i1;

     label03:
        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getContents()>();

        $i0 = lengthof $r5;

        if $i0 != 0 goto label04;

        return i1;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        if $r6 != null goto label05;

        $r16 = new org.eclipse.jdt.internal.compiler.parser.Scanner;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l5 = $r11.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l4 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        specialinvoke $r16.<org.eclipse.jdt.internal.compiler.parser.Scanner: void <init>(boolean,boolean,boolean,long,long,char[][],char[][],boolean)>(0, 0, 0, $l5, $l4, null, null, 0);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner> = $r16;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $r13.<org.eclipse.jdt.internal.compiler.parser.Scanner: boolean returnOnlyGreater> = 1;

     label05:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.Scanner: void setSource(char[])>($r5);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i2 = lengthof $r5;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.Scanner: void resetTo(int,int)>(i1, $i2);

        i6 = i1;

        i7 = 0;

     label06:
        goto label11;

     label07:
        lookupswitch($i8)
        {
            case 7: goto label08;
            case 13: goto label09;
            case 69: goto label10;
            default: goto label11;
        };

     label08:
        i7 = i7 + 1;

        goto label11;

     label09:
        $i10 = (int) -1;

        i7 = i7 + $i10;

        if i7 != 0 goto label11;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i3 = $r9.<org.eclipse.jdt.internal.compiler.parser.Scanner: int currentPosition>;

        i6 = $i3 - 1;

        goto label14;

     label10:
        goto label14;

     label11:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i8 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.parser.Scanner: int getNextToken()>();

        if $i8 != 68 goto label07;

     label12:
        goto label14;

     label13:
        $r14 := @caughtexception;

     label14:
        return i6;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label06 to label12 with label13;
    }

    private int retrieveEndingPositionAfterOpeningParenthesis(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        long $l5, $l6;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r2;
        int $i0, i1, i2, $i3, $i4, i7, i8;
        org.eclipse.jdt.internal.compiler.parser.Scanner $r6, $r7, $r8, $r9, $r10, $r11;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3;
        org.eclipse.jdt.core.compiler.InvalidInputException $r14;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r12, $r13;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i7 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        if $r1 != null goto label01;

        return i2;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        if $r3 != null goto label02;

        return i2;

     label02:
        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit getCompilationUnit()>();

        if $r4 != null goto label03;

        return i2;

     label03:
        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getContents()>();

        $i0 = lengthof $r5;

        if $i0 != 0 goto label04;

        return i2;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        if $r6 != null goto label05;

        $r11 = new org.eclipse.jdt.internal.compiler.parser.Scanner;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l6 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l5 = $r13.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.parser.Scanner: void <init>(boolean,boolean,boolean,long,long,char[][],char[][],boolean)>(0, 0, 0, $l6, $l5, null, null, 0);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner> = $r11;

     label05:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.Scanner: void setSource(char[])>($r5);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.Scanner: void resetTo(int,int)>(i1, i2);

     label06:
        i8 = i2;

        goto label10;

     label07:
        tableswitch($i3)
        {
            case 29: goto label08;
            default: goto label09;
        };

     label08:
        return i8;

     label09:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i4 = $r10.<org.eclipse.jdt.internal.compiler.parser.Scanner: int currentPosition>;

        i8 = $i4 - 1;

     label10:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i3 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.Scanner: int getNextToken()>();

        if $i3 != 68 goto label07;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

     label13:
        return i2;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label06 to label08 with label12;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label09 to label11 with label12;
    }

    private int retrieveStartingPositionAfterOpeningParenthesis(int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        long $l5, $l6;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r2;
        int $i0, i1, i2, i3, $i4, i7, $i8;
        org.eclipse.jdt.internal.compiler.parser.Scanner $r6, $r7, $r8, $r9, $r10, $r11, $r15;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3;
        org.eclipse.jdt.core.compiler.InvalidInputException $r14;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r12, $r13;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        if $r1 != null goto label01;

        return i1;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.ReferenceContext: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()>();

        if $r3 != null goto label02;

        return i1;

     label02:
        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit getCompilationUnit()>();

        if $r4 != null goto label03;

        return i1;

     label03:
        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getContents()>();

        $i0 = lengthof $r5;

        if $i0 != 0 goto label04;

        return i1;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        if $r6 != null goto label05;

        $r11 = new org.eclipse.jdt.internal.compiler.parser.Scanner;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l6 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $l5 = $r13.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.parser.Scanner: void <init>(boolean,boolean,boolean,long,long,char[][],char[][],boolean)>(0, 0, 0, $l6, $l5, null, null, 0);

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner> = $r11;

     label05:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.parser.Scanner: void setSource(char[])>($r5);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.parser.Scanner: void resetTo(int,int)>(i1, i2);

        i7 = 0;

     label06:
        goto label10;

     label07:
        tableswitch($i8)
        {
            case 28: goto label08;
            default: goto label10;
        };

     label08:
        i7 = i7 + 1;

        if i7 != i3 goto label10;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.parser.Scanner: int getNextToken()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i4 = $r10.<org.eclipse.jdt.internal.compiler.parser.Scanner: int startPosition>;

     label09:
        return $i4;

     label10:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.parser.Scanner positionScanner>;

        $i8 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.parser.Scanner: int getNextToken()>();

        if $i8 != 68 goto label07;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

     label13:
        return i1;

        catch org.eclipse.jdt.core.compiler.InvalidInputException from label06 to label09 with label12;
        catch org.eclipse.jdt.core.compiler.InvalidInputException from label10 to label11 with label12;
    }

    public void returnTypeCannotBeVoidArray(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r3;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i1 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870966, $r5, $r4, $i1, $i0);

        return;
    }

    public void scannerError(org.eclipse.jdt.internal.compiler.parser.Parser, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.eclipse.jdt.internal.compiler.CompilationResult $r5;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r4;
        java.lang.String[] $r8;
        int $i0, $i1, $i3, $i4, $i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i16, $i17;
        org.eclipse.jdt.internal.compiler.parser.Parser r0;
        java.lang.String r2;
        org.eclipse.jdt.internal.compiler.parser.Scanner r1;
        char $c2, $c5;
        char[] r6, r7;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        r2 := @parameter1: java.lang.String;

        r1 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.parser.Scanner scanner>;

        i7 = 1610612941;

        i13 = 1610612941;

        i12 = 1610612941;

        i8 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: int startPosition>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: int currentPosition>;

        i9 = $i0 - 1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("End_Of_Source");

        if $z0 == 0 goto label01;

        i7 = 1610612986;

        i13 = 1610612986;

        i12 = 1610612986;

        goto label21;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Hexa_Literal");

        if $z1 == 0 goto label02;

        i7 = 1610612987;

        i13 = 1610612987;

        i12 = 1610612987;

        goto label21;

     label02:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Octal_Literal");

        if $z2 == 0 goto label03;

        i7 = 1610612988;

        i13 = 1610612988;

        i12 = 1610612988;

        goto label21;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Character_Constant");

        if $z3 == 0 goto label04;

        i7 = 1610612989;

        i13 = 1610612989;

        i12 = 1610612989;

        goto label21;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Escape");

        if $z4 == 0 goto label05;

        i7 = 1610612990;

        i13 = 1610612990;

        i12 = 1610612990;

        goto label21;

     label05:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Unicode_Escape");

        if $z5 == 0 goto label10;

        i7 = 1610612992;

        i13 = 1610612992;

        i12 = 1610612992;

        r6 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: char[] source>;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: int currentPosition>;

        i10 = $i3 - 1;

        $i4 = lengthof r6;

        if i10 < $i4 goto label08;

        $i6 = lengthof r6;

        i10 = $i6 - 1;

        goto label08;

     label06:
        $c5 = r6[i10];

        $i14 = (int) $c5;

        if $i14 != 92 goto label07;

        goto label09;

     label07:
        $i16 = (int) -1;

        i10 = i10 + $i16;

     label08:
        if i10 >= i8 goto label06;

     label09:
        i8 = i10;

        goto label21;

     label10:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Low_Surrogate");

        if $z6 == 0 goto label11;

        i7 = 1610612999;

        i13 = 1610612999;

        i12 = 1610612999;

        goto label21;

     label11:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_High_Surrogate");

        if $z7 == 0 goto label16;

        i7 = 1610613000;

        i13 = 1610613000;

        i12 = 1610613000;

        r7 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: char[] source>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.parser.Scanner: int startPosition>;

        i11 = $i1 + 1;

        goto label14;

     label12:
        $c2 = r7[i11];

        $i17 = (int) $c2;

        if $i17 != 92 goto label13;

        goto label15;

     label13:
        i11 = i11 + 1;

     label14:
        if i11 <= i9 goto label12;

     label15:
        i9 = i11 - 1;

        goto label21;

     label16:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Float_Literal");

        if $z8 == 0 goto label17;

        i7 = 1610612993;

        i13 = 1610612993;

        i12 = 1610612993;

        goto label21;

     label17:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Unterminated_String");

        if $z9 == 0 goto label18;

        i7 = 1610612995;

        i13 = 1610612995;

        i12 = 1610612995;

        goto label21;

     label18:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Unterminated_Comment");

        if $z10 == 0 goto label19;

        i7 = 1610612996;

        i13 = 1610612996;

        i12 = 1610612996;

        goto label21;

     label19:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Char_In_String");

        if $z11 == 0 goto label20;

        i7 = 1610612995;

        i13 = 1610612995;

        i12 = 1610612995;

        goto label21;

     label20:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("Invalid_Digit");

        if $z12 == 0 goto label21;

        i7 = 1610612998;

        i13 = 1610612998;

        i12 = 1610612998;

     label21:
        if i12 != 1610612941 goto label22;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = r2;

        goto label23;

     label22:
        $r8 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

     label23:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnit>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.CompilationResult)>(i13, $r8, $r8, i8, i9, $r5);

        return;
    }

    public void shouldReturn(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(603979884, $r1, $r5, $i1, $i0);

        return;
    }

    public void signalNoImplicitStringConversionForCharArrayExpression(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871063, $r3, $r2, $i1, $i0);

        return;
    }

    public void staticAndInstanceConflict(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        java.lang.String[] $r2, $r7, $r11, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r8, $r12, $r16;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, r4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r9, $r13, $r17;
        char[] $r6, $r10, $r14, $r18;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z0 == 0 goto label1;

        $r11 = newarray (java.lang.String)[1];

        $r12 = new java.lang.String;

        $r13 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r14);

        $r11[0] = $r12;

        $r15 = newarray (java.lang.String)[1];

        $r16 = new java.lang.String;

        $r17 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r16;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109271, $r11, $r15, $i2, $i3);

        goto label2;

     label1:
        $r2 = newarray (java.lang.String)[1];

        $r3 = new java.lang.String;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r6);

        $r2[0] = $r3;

        $r7 = newarray (java.lang.String)[1];

        $r8 = new java.lang.String;

        $r9 = r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r7[0] = $r8;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109270, $r2, $r7, $i0, $i1);

     label2:
        return;
    }

    public void staticFieldAccessToNonStaticVariable(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554506, $r0, $r0, $i0, $i1);

        return;
    }

    public void staticInheritedMethodConflicts(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r17;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r10;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] r6;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r11, $r13;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, $r7, $r14;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r8, $r15;
        char[] $r4, $r9, $r12, $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r17 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[];

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = r6[0];

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r9);

        $r1[1] = $r5;

        $r10 = newarray (java.lang.String)[2];

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] readableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r10[0] = $r11;

        $r13 = new java.lang.String;

        $r14 = r6[0];

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r16);

        $r10[1] = $r13;

        $i0 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        $i1 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109272, $r1, $r10, $i0, $i1);

        return;
    }

    public void staticMemberOfParameterizedType(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r9, $r15, $r21;
        int i0, $i1;
        java.lang.String $r3, $r6, $r10, $r12, $r16, $r18, $r22, $r24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r4, $r7, $r13, $r19, $r25;
        char[] $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if r0 != null goto label1;

        $r15 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r16;

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r20);

        $r15[1] = $r18;

        $r21 = newarray (java.lang.String)[2];

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r21[0] = $r22;

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r26);

        $r21[1] = $r24;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777779, $r15, $r21, 131, 0, 0);

        return;

     label1:
        i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r2[1] = $r6;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r10;

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r12;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777779, $r2, $r9, $i1, i0);

        return;
    }

    public void stringConstantIsExceedingUtf8Limit(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871064, $r3, $r2, $i1, $i0);

        return;
    }

    public void superclassMustBeAClass(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r6;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r13 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777528, $r1, $r8, $i1, $i0);

        return;
    }

    public void superfluousSemicolon(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871092, $r2, $r1, i0, i1);

        return;
    }

    public void superinterfaceMustBeAnInterface(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r6;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r13;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r13 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777531, $r1, $r8, $i1, $i0);

        return;
    }

    public void superinterfacesCollide(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r11;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r18;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r6, r9;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r8, $r12, $r14, $r16;
        char[] $r4, $r7, $r10, $r13, $r15, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r18 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = newarray (java.lang.String)[3];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = new java.lang.String;

        $r10 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r10);

        $r1[2] = $r8;

        $r11 = newarray (java.lang.String)[3];

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r12;

        $r14 = new java.lang.String;

        $r15 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r11[1] = $r14;

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r11[2] = $r16;

        $i1 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r18.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777755, $r1, $r11, $i1, $i0);

        return;
    }

    public void superTypeCannotUseWildcard(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.TypeReference, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r8;
        java.lang.String[] $r9, $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, r12;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r11;
        char[] $r2, $r5, $r7;

        r8 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r11 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] sourceName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r12 = $r6;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        r12 = $r3;

     label1:
        $r9 = newarray (java.lang.String)[2];

        $r9[0] = $r3;

        $r9[1] = $r0;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = r12;

        $r10[1] = $r0;

        $i1 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = r11.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777772, $r9, $r10, $i1, $i0);

        return;
    }

    private void syntaxError(int, int, int, int, char[], java.lang.String, java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r4, r8;
        int i0, i1, i2, i3;
        java.lang.String r2, r5, $r6, r7;
        boolean $z0, $z1, $z2;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: char[];

        r5 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isKeyword(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isLiteral(int)>(i0);

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isIdentifier(int)>(i0);

        if $z2 == 0 goto label2;

     label1:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r1);

        r7 = $r6;

        goto label3;

     label2:
        r7 = r5;

     label3:
        if r2 == null goto label4;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = r7;

        $r4[1] = r2;

        r8 = $r4;

        goto label5;

     label4:
        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r7;

        r8 = $r3;

     label5:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(i1, r8, r8, i2, i3);

        return;
    }

    public void task(java.lang.String, java.lang.String, java.lang.String, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        int i0, i1;
        java.lang.String r2, r3, r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = r2;

        $r5[1] = r3;

        $r5[2] = r4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871362, $r1, $r5, i0, i1);

        return;
    }

    public void tooManyDimensions(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870980, $r3, $r2, $i1, $i0);

        return;
    }

    public void tooManyFields(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871344, $r1, $r6, 159, $i1, $i0);

        return;
    }

    public void tooManyMethods(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871345, $r1, $r6, 159, $i1, $i0);

        return;
    }

    public void typeCastError(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r10;
        java.lang.String[] $r11, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, r4;
        int $i0, $i1;
        java.lang.String $r0, $r3, $r6, $r8, r14, r15;
        boolean $z0;
        char[] $r2, $r5, $r7, $r9;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r13;

        r10 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r13 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r14 = $r6;

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        r15 = $r8;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        r14 = $r0;

        r15 = $r3;

     label1:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = $r3;

        $r11[1] = $r0;

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r15;

        $r12[1] = r14;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceEnd>;

        specialinvoke r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777372, $r11, $r12, $i1, $i0);

        return;
    }

    public void typeCollidesWithEnclosingType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777534, $r0, $r0, $i1, $i0);

        return;
    }

    public void typeCollidesWithPackage(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r8;
        java.lang.String[] $r2;
        int $i0, $i1;
        char[] $r5, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        java.lang.String $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext> = r1;

        $r2 = newarray (java.lang.String)[2];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: char[] getFileName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r6 = new java.lang.String;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r2[1] = $r6;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r8 = r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.CompilationResult)>(16777538, $r2, $r2, $i1, $i0, $r8);

        return;
    }

    public void typeHiding(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r6;
        java.lang.String $r13, $r14, $r15, $r16;
        char[] $r4, $r7, $r10, $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777249);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r13;

        $r14 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r14;

        $r8 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r15;

        $r16 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r16;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777249, $r1, $r8, $i0, $i2, $i1);

        return;
    }

    public void typeHiding(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r44;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r45;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r6;
        java.lang.String[] $r4, $r17, $r30, $r37;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r2, $r3, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r13, $r25, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r15, $r27;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r12, $r24;
        char[] $r7, $r9, $r11, $r16, $r19, $r21, $r23, $r28, $r32, $r34, $r36, $r39, $r41, $r43;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777792);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.Binding declaringElement>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        if $z0 == 0 goto label2;

        $r29 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.Binding declaringElement>;

        r44 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) $r29;

        $r30 = newarray (java.lang.String)[3];

        $r46 = new java.lang.String;

        $r32 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r46.<java.lang.String: void <init>(char[])>($r32);

        $r30[0] = $r46;

        $r47 = new java.lang.String;

        $r34 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] readableName()>();

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r34);

        $r30[1] = $r47;

        $r48 = new java.lang.String;

        $r36 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r48.<java.lang.String: void <init>(char[])>($r36);

        $r30[2] = $r48;

        $r37 = newarray (java.lang.String)[3];

        $r49 = new java.lang.String;

        $r39 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r39);

        $r37[0] = $r49;

        $r50 = new java.lang.String;

        $r41 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] shortReadableName()>();

        specialinvoke $r50.<java.lang.String: void <init>(char[])>($r41);

        $r37[1] = $r50;

        $r51 = new java.lang.String;

        $r43 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r43);

        $r37[2] = $r51;

        $i4 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i3 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777792, $r30, $r37, $i0, $i4, $i3);

        goto label3;

     label2:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: org.eclipse.jdt.internal.compiler.lookup.Binding declaringElement>;

        r45 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding) $r3;

        $r4 = newarray (java.lang.String)[5];

        $r52 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r52;

        $r53 = new java.lang.String;

        $r9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] readableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r9);

        $r4[1] = $r53;

        $r54 = new java.lang.String;

        $r11 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r54.<java.lang.String: void <init>(char[])>($r11);

        $r4[2] = $r54;

        $z1 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r12 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r12, 0);

        $r4[3] = $r13;

        $r55 = new java.lang.String;

        $r15 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r16);

        $r4[4] = $r55;

        $r17 = newarray (java.lang.String)[5];

        $r56 = new java.lang.String;

        $r19 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        specialinvoke $r56.<java.lang.String: void <init>(char[])>($r19);

        $r17[0] = $r56;

        $r57 = new java.lang.String;

        $r21 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] shortReadableName()>();

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r21);

        $r17[1] = $r57;

        $r58 = new java.lang.String;

        $r23 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r58.<java.lang.String: void <init>(char[])>($r23);

        $r17[2] = $r58;

        $z2 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r24, 1);

        $r17[3] = $r25;

        $r59 = new java.lang.String;

        $r27 = r45.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r59.<java.lang.String: void <init>(char[])>($r28);

        $r17[4] = $r59;

        $i2 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i1 = r6.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777793, $r4, $r17, $i0, $i2, $i1);

     label3:
        return;
    }

    public void typeHiding(org.eclipse.jdt.internal.compiler.ast.TypeParameter, org.eclipse.jdt.internal.compiler.lookup.Binding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r9;
        org.eclipse.jdt.internal.compiler.lookup.Binding r1;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        java.lang.String $r14, $r15, $r16, $r17;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter r5;
        char[] $r6, $r8, $r11, $r13;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeParameter;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777787);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) r1;

        $r3 = newarray (java.lang.String)[2];

        $r14 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r14;

        $r15 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r15;

        $r9 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r11 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: char[] name>;

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r16;

        $r17 = new java.lang.String;

        $r13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r13);

        $r9[1] = $r17;

        $i2 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceStart>;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777787, $r3, $r9, $i0, $i2, $i1);

        return;
    }

    public void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r2;
        byte $b4, $b9;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r7, $r17, $r21, $r25, $r29;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1, r14;
        java.lang.String[] $r3, $r9, $r15, $r19, $r23, $r27;
        long $l2, $l3, $l7, $l8;
        int $i0, $i1, $i5, $i6, $i10, $i11;
        java.lang.String $r4, $r6, $r10, $r12, $r16, $r20, $r24, $r28;
        char[] $r5, $r8, $r11, $r13, $r18, $r22, $r26, $r30;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r14 := @parameter2: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r1 := @parameter3: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        if r0 == null goto label1;

        $l7 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l8 = $l7 & 128L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label1;

        $r23 = newarray (java.lang.String)[1];

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r26);

        $r23[0] = $r24;

        $r27 = newarray (java.lang.String)[1];

        $r28 = new java.lang.String;

        $r29 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r30 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r30);

        $r27[0] = $r28;

        $i11 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i10 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r23, $r27, $i11, $i10);

        return;

     label1:
        if r1 == null goto label2;

        $l2 = r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l3 = $l2 & 128L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r15 = newarray (java.lang.String)[1];

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r18);

        $r15[0] = $r16;

        $r19 = newarray (java.lang.String)[1];

        $r20 = new java.lang.String;

        $r21 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r22);

        $r19[0] = $r20;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777218, $r15, $r19, $i6, $i5);

        return;

     label2:
        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $r6 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r6;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[0] = $r10;

        $r12 = new java.lang.String;

        $r13 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13);

        $r9[1] = $r12;

        $i1 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r14.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777233, $r3, $r9, $i1, $i0);

        return;
    }

    public void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r0;
        java.lang.String[] $r2, $r13, $r21, $r29;
        int $i0, $i1;
        java.lang.String $r3, $r6, $r9, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding r10;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r7;
        char[] $r5, $r8, $r11, $r15, $r17, $r19, $r23, $r25, $r27, $r31, $r33, $r35;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r10 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r0 := @parameter3: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        if r0 != null goto label1;

        $r21 = newarray (java.lang.String)[4];

        $r22 = new java.lang.String;

        $r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r23);

        $r21[0] = $r22;

        $r24 = new java.lang.String;

        $r25 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r25);

        $r21[1] = $r24;

        $r26 = new java.lang.String;

        $r27 = r10.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r27);

        $r21[2] = $r26;

        $r28 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r10, 0);

        $r21[3] = $r28;

        $r29 = newarray (java.lang.String)[4];

        $r30 = new java.lang.String;

        $r31 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r31);

        $r29[0] = $r30;

        $r32 = new java.lang.String;

        $r33 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r33);

        $r29[1] = $r32;

        $r34 = new java.lang.String;

        $r35 = r10.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r35);

        $r29[2] = $r34;

        $r36 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r10, 1);

        $r29[3] = $r36;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777742, $r21, $r29, 131, 0, 0);

        return;

     label1:
        $r2 = newarray (java.lang.String)[4];

        $r3 = new java.lang.String;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r5);

        $r2[0] = $r3;

        $r6 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r2[1] = $r6;

        $r9 = new java.lang.String;

        $r11 = r10.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r2[2] = $r9;

        $r12 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r10, 0);

        $r2[3] = $r12;

        $r13 = newarray (java.lang.String)[4];

        $r14 = new java.lang.String;

        $r15 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r15);

        $r13[0] = $r14;

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r13[1] = $r16;

        $r18 = new java.lang.String;

        $r19 = r10.<org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding: char[] sourceName>;

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r13[2] = $r18;

        $r20 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String parameterBoundAsString(org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding,boolean)>(r10, 1);

        $r13[3] = $r20;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777742, $r2, $r13, $i1, $i0);

        return;
    }

    private java.lang.String typesAsString(boolean, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r6;
        java.lang.StringBuffer $r0;
        int i0, $i1, i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, r7;
        java.lang.String $r2, $r5;
        boolean z0, z1, z2, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r1;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r3;
        char[] $r8;

        r6 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        z2 := @parameter2: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(10);

        i2 = 0;

        i0 = lengthof r1;

        goto label9;

     label1:
        if i2 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r4 = r1[i2];

        r7 = $r4;

        if z0 == 0 goto label3;

        $i1 = i0 - 1;

        if i2 != $i1 goto label3;

        $z5 = 1;

        $z4 = 1;

        goto label4;

     label3:
        $z5 = 0;

        $z4 = 0;

     label4:
        z1 = $z5;

        if $z4 == 0 goto label5;

        $r3 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) $r4;

        r7 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

     label5:
        $r2 = new java.lang.String;

        if z2 == 0 goto label6;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        goto label7;

     label6:
        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

     label7:
        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        if z1 == 0 goto label8;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label8:
        i2 = i2 + 1;

     label9:
        if i2 < i0 goto label1;

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public void undefinedAnnotationValue(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.MemberValuePair)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r5, $r9;
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r7;
        int $i0, $i1;
        char[] $r2, $r4, $r8, $r11;
        java.lang.String $r3, $r6, $r10;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ast.MemberValuePair;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: char[] name>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.String;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: char[] name>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = $r3;

        $r6 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r5[1] = $r6;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = $r3;

        $r10 = new java.lang.String;

        $r11 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r11);

        $r9[1] = $r10;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109475, $r5, $r9, $i1, $i0);

        return;
    }

    public void undefinedLabel(org.eclipse.jdt.internal.compiler.ast.BranchStatement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3;
        org.eclipse.jdt.internal.compiler.ast.BranchStatement r1;
        int $i0, $i1;
        char[] $r2, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.BranchStatement;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.BranchStatement: char[] label>;

        $z0 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.String;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.BranchStatement: char[] label>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r4;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.BranchStatement: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.BranchStatement: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871086, $r3, $r3, $i1, $i0);

        return;
    }

    public void undefinedTypeVariableSignature(char[], org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r7;
        char[] r3, $r6, $r10;
        java.lang.String $r2, $r4, $r8, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: char[];

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r3);

        $r1[0] = $r2;

        $r4 = new java.lang.String;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r1[1] = $r4;

        $r7 = newarray (java.lang.String)[2];

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>(r3);

        $r7[0] = $r8;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r7[1] = $r9;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871450, $r1, $r7, 131, 0, 0);

        return;
    }

    public void undocumentedEmptyBlock(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871372, $r2, $r1, i0, i1);

        return;
    }

    public void unexpectedStaticModifierForField(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r2;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554778, $r0, $r0, $i1, $i0);

        return;
    }

    public void unexpectedStaticModifierForMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r7;
        java.lang.String[] $r0;
        int $i0, $i1;
        char[] $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r5;
        java.lang.String $r1, $r4;

        r7 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $r4 = new java.lang.String;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r0[1] = $r4;

        $i1 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i0 = r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109225, $r0, $r0, $i1, $i0);

        return;
    }

    public void unhandledException(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r2;
        java.lang.String[] $r7, $r10;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r1, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r8, $r11;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r6;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r4;
        char[] $r9, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z0 = $r1 instanceof org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r6 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r5;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: boolean isDefaultConstructor()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        $z4 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z4 == 0 goto label3;

        $r4 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) r2;

        $i0 = $r4.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int accessMode>;

        if $i0 != 1 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        if z1 == 0 goto label5;

        $i1 = 16777362;

        goto label7;

     label5:
        if $z5 == 0 goto label6;

        $i1 = 134217871;

        goto label7;

     label6:
        $i1 = 16777384;

     label7:
        $r7 = newarray (java.lang.String)[1];

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r7[0] = $r8;

        $r10 = newarray (java.lang.String)[1];

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r10[0] = $r11;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r2.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i1, $r7, $r10, $i2, $i3);

        return;
    }

    public void unhandledWarningToken(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871543, $r0, $r0, $i1, $i0);

        return;
    }

    public void uninitializedBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(33554513, $r0, $r0, $i0, $i1);

        return;
    }

    public void uninitializedLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        java.lang.String[] $r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r5;
        int $i0, $i1;
        char[] $r3;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i0 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        $i1 = specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r5);

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870963, $r0, $r0, $i0, $i1);

        return;
    }

    public void unmatchedBracket(int, org.eclipse.jdt.internal.compiler.impl.ReferenceContext, org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext r1;
        int i0;
        org.eclipse.jdt.internal.compiler.CompilationResult r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.impl.ReferenceContext;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,org.eclipse.jdt.internal.compiler.CompilationResult)>(1610612956, $r4, $r3, i0, i0, r1, r2);

        return;
    }

    public void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4, $r11;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r8, $r15;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, $r9, $r16;
        java.lang.String $r18, $r19, $r20, $r21;
        char[] $r6, $r10, $r13, $r17;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(553648309);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r4 = newarray (java.lang.String)[2];

        $r18 = new java.lang.String;

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r6);

        $r4[0] = $r18;

        $r19 = new java.lang.String;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r10);

        $r4[1] = $r19;

        $r11 = newarray (java.lang.String)[2];

        $r20 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r20;

        $r21 = new java.lang.String;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r17);

        $r11[1] = $r21;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(553648309, $r4, $r11, $i0, $i2, $i1);

        return;
    }

    public void unnecessaryElse(org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r3 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871101, $r3, $r2, $i1, $i0);

        return;
    }

    public void unnecessaryEnclosingInstanceSpecification(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r8;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777239, $r1, $r5, $i1, $i0);

        return;
    }

    public void unnecessaryInstanceof(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression r1;
        java.lang.String[] $r4, $r10;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r8;
        java.lang.String $r15, $r16, $r17, $r18;
        char[] $r6, $r9, $r12, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(553648311);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r4 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r6);

        $r4[0] = $r15;

        $r16 = new java.lang.String;

        $r9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r9);

        $r4[1] = $r16;

        $r10 = newarray (java.lang.String)[2];

        $r17 = new java.lang.String;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r12);

        $r10[0] = $r17;

        $r18 = new java.lang.String;

        $r14 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r14);

        $r10[1] = $r18;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(553648311, $r4, $r10, $i0, $i2, $i1);

        return;
    }

    public void unnecessaryNLSTags(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871177, $r2, $r1, i0, i1);

        return;
    }

    public void unnecessaryTypeArgumentsForMethodInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.ast.TypeReference[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] r19;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r20, $r21;
        java.lang.String[] $r4, $r12;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r6, $r7, $r11, $r14, $r15, $r18, $r24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r8, $r16, $r22;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r5, r10, $r13;
        char[] $r1, $r9, $r17, $r23;

        r3 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r10 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        r19 := @parameter2: org.eclipse.jdt.internal.compiler.ast.TypeReference[];

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $r24 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r23);

        goto label2;

     label1:
        $r24 = new java.lang.String;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r1);

     label2:
        r2 = $r24;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z1 == 0 goto label3;

        $i4 = 67109524;

        goto label4;

     label3:
        $i4 = 67109443;

     label4:
        $r4 = newarray (java.lang.String)[4];

        $r4[0] = r2;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r6 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r5, 0);

        $r4[1] = $r6;

        $r7 = new java.lang.String;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r4[2] = $r7;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, r10, 0);

        $r4[3] = $r11;

        $r12 = newarray (java.lang.String)[4];

        $r12[0] = r2;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r13, 1);

        $r12[1] = $r14;

        $r15 = new java.lang.String;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r17);

        $r12[2] = $r15;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r18 = specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, r10, 1);

        $r12[3] = $r18;

        $r20 = r19[0];

        $i3 = $r20.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i0 = lengthof r19;

        $i1 = $i0 - 1;

        $r21 = r19[$i1];

        $i2 = $r21.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>($i4, $r4, $r12, $i3, $i2);

        return;
    }

    public void unqualifiedFieldAccess(org.eclipse.jdt.internal.compiler.ast.NameReference, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        java.lang.String[] $r3, $r9;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        org.eclipse.jdt.internal.compiler.ast.NameReference r0;
        int $i0, $i1, i2, $i3, i4, i5, i6, i7;
        java.lang.String $r4, $r7, $r10, $r13;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r11;
        char[] $r6, $r8, $r12, $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        i4 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceStart>;

        i5 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceEnd>;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        if $z0 == 0 goto label2;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: int bits>;

        $i1 = $i0 & 534773760;

        i2 = $i1 >> 21;

        if i2 == 0 goto label1;

        $i3 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int retrieveStartingPositionAfterOpeningParenthesis(int,int,int)>(i4, i5, i2);

        i6 = $i3;

        i7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int retrieveEndingPositionAfterOpeningParenthesis(int,int,int)>($i3, i5, i2);

        goto label3;

     label1:
        i6 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

        i7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

        goto label3;

     label2:
        i6 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

        i7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

     label3:
        $r3 = newarray (java.lang.String)[2];

        $r4 = new java.lang.String;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r4;

        $r7 = new java.lang.String;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r3[1] = $r7;

        $r9 = newarray (java.lang.String)[2];

        $r10 = new java.lang.String;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r10;

        $r13 = new java.lang.String;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r9[1] = $r13;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(570425423, $r3, $r9, i6, i7);

        return;
    }

    public void unreachableCatchBlock(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        int $i0, $i1;
        char[] $r4, $r7;
        java.lang.String $r2, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = newarray (java.lang.String)[1];

        $r6 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r6;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(83886247, $r1, $r5, $i1, $i0);

        return;
    }

    public void unreachableCode(org.eclipse.jdt.internal.compiler.ast.Statement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        java.lang.String[] $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r3;
        org.eclipse.jdt.internal.compiler.ast.Statement r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        int i0, i1, i2, $i4;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Statement;

        i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceStart>;

        i1 = r0.<org.eclipse.jdt.internal.compiler.ast.Statement: int sourceEnd>;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        if $z0 == 0 goto label1;

        r3 = (org.eclipse.jdt.internal.compiler.ast.LocalDeclaration) r0;

        i0 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceStart>;

        i1 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int declarationSourceEnd>;

        goto label2;

     label1:
        $z1 = r0 instanceof org.eclipse.jdt.internal.compiler.ast.Expression;

        if $z1 == 0 goto label2;

        $r2 = (org.eclipse.jdt.internal.compiler.ast.Expression) r0;

        i2 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int statementEnd>;

        $i4 = (int) -1;

        if i2 == $i4 goto label2;

        i1 = i2;

     label2:
        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871073, $r4, $r5, i0, i1);

        return;
    }

    public void unresolvableReference(org.eclipse.jdt.internal.compiler.ast.NameReference, org.eclipse.jdt.internal.compiler.lookup.Binding)
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference r9;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r5;
        java.lang.String[] $r0;
        long $l3;
        char[][] $r7;
        org.eclipse.jdt.internal.compiler.lookup.Binding r2;
        long[] $r8;
        org.eclipse.jdt.internal.compiler.ast.NameReference r4;
        int $i0, $i1, $i2, i4, $i5;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r10;
        char[] $r3, $r6;

        r5 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.ast.NameReference;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Binding;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Binding: char[] readableName()>();

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        i4 = r4.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceEnd>;

        $z0 = r4 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;

        if $z0 == 0 goto label2;

        r9 = (org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference) r4;

        $r7 = r9.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: char[][] tokens>;

        $z2 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[][])>($r7);

        if $z2 == 0 goto label1;

        return;

     label1:
        $i0 = r9.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        if $i0 < 1 goto label3;

        $r8 = r9.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: long[] sourcePositions>;

        $i1 = r9.<org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference: int indexOfFirstFieldBinding>;

        $i2 = $i1 - 1;

        $l3 = $r8[$i2];

        i4 = (int) $l3;

        goto label3;

     label2:
        r10 = (org.eclipse.jdt.internal.compiler.ast.SingleNameReference) r4;

        $r6 = r10.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        $z1 = specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: boolean isRecoveredName(char[])>($r6);

        if $z1 == 0 goto label3;

        return;

     label3:
        $i5 = r4.<org.eclipse.jdt.internal.compiler.ast.NameReference: int sourceStart>;

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(570425394, $r0, $r0, $i5, i4);

        return;
    }

    public void unsafeCast(org.eclipse.jdt.internal.compiler.ast.CastExpression, org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r5, $r10;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r4;
        java.lang.String $r16, $r17, $r18, $r19;
        org.eclipse.jdt.internal.compiler.lookup.Scope r15;
        char[] $r7, $r9, $r12, $r14;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r15 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777761);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        r4 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r5 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r16;

        $r17 = new java.lang.String;

        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r9);

        $r5[1] = $r17;

        $r10 = newarray (java.lang.String)[2];

        $r18 = new java.lang.String;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r12);

        $r10[0] = $r18;

        $r19 = new java.lang.String;

        $r14 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r14);

        $r10[1] = $r19;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777761, $r5, $r10, $i0, $i2, $i1);

        return;
    }

    public void unsafeGenericArrayForVarargs(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r8;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        char[] $r4, $r7;
        java.lang.String $r9, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(67109438);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r9 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r9;

        $r5 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r7);

        $r5[0] = $r10;

        $i2 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109438, $r1, $r5, $i0, $i2, $i1);

        return;
    }

    public void unsafeRawFieldAssignment(org.eclipse.jdt.internal.compiler.lookup.FieldBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, $r13, $r25;
        java.lang.String[] $r1, $r15;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r27;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r12, $r21, $r24;
        char[] $r4, $r7, $r10, $r14, $r17, $r19, $r22, $r26;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r27 := @parameter2: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777752);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[4];

        $r28 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r28;

        $r29 = new java.lang.String;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r29;

        $r30 = new java.lang.String;

        $r9 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r10);

        $r1[2] = $r30;

        $r31 = new java.lang.String;

        $r12 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r31.<java.lang.String: void <init>(char[])>($r14);

        $r1[3] = $r31;

        $r15 = newarray (java.lang.String)[4];

        $r32 = new java.lang.String;

        $r17 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r32.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r32;

        $r33 = new java.lang.String;

        $r19 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r33.<java.lang.String: void <init>(char[])>($r19);

        $r15[1] = $r33;

        $r34 = new java.lang.String;

        $r21 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r22);

        $r15[2] = $r34;

        $r35 = new java.lang.String;

        $r24 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r35.<java.lang.String: void <init>(char[])>($r26);

        $r15[3] = $r35;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r6, r27);

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r6, r27);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777752, $r1, $r15, $i0, $i1, $i2);

        return;
    }

    public void unsafeRawGenericMethodInvocation(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r5, $r6, $r12, $r18, $r19, $r25, $r33, $r34, $r40, $r47, $r48, $r54;
        java.lang.String $r8, $r14, $r21, $r27, $r36, $r42, $r50, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64;
        char[] $r4, $r11, $r17, $r24, $r32, $r39, $r46, $r53;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String[] $r2, $r15, $r29, $r43;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10, $r23, $r31, $r38, $r45, $r52;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r13, $r20, $r26, $r35, $r41, $r49, $r55;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r28 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $i5 = 16777785;

        goto label2;

     label1:
        $i5 = 16777786;

     label2:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i5);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        return;

     label3:
        if $z0 == 0 goto label4;

        $r29 = newarray (java.lang.String)[4];

        $r57 = new java.lang.String;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r32);

        $r29[0] = $r57;

        $r33 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z5 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r34 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r35 = $r34.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r36 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r35, 0);

        $r29[1] = $r36;

        $r58 = new java.lang.String;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r39 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r58.<java.lang.String: void <init>(char[])>($r39);

        $r29[2] = $r58;

        $r40 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z6 = virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r41 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r42 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z6, $r41, 0);

        $r29[3] = $r42;

        $r43 = newarray (java.lang.String)[4];

        $r59 = new java.lang.String;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r46 = virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        specialinvoke $r59.<java.lang.String: void <init>(char[])>($r46);

        $r43[0] = $r59;

        $r47 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z7 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r48 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r49 = $r48.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r50 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z7, $r49, 1);

        $r43[1] = $r50;

        $r60 = new java.lang.String;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r53 = virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r60.<java.lang.String: void <init>(char[])>($r53);

        $r43[2] = $r60;

        $r54 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z8 = virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r55 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r56 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z8, $r55, 1);

        $r43[3] = $r56;

        $i4 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777785, $r29, $r43, $i0, $i4, $i3);

        goto label5;

     label4:
        $r2 = newarray (java.lang.String)[4];

        $r61 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r61.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r61;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r7 = $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r7, 0);

        $r2[1] = $r8;

        $r62 = new java.lang.String;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r62.<java.lang.String: void <init>(char[])>($r11);

        $r2[2] = $r62;

        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z2 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r13, 0);

        $r2[3] = $r14;

        $r15 = newarray (java.lang.String)[4];

        $r63 = new java.lang.String;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r63.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r63;

        $r18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z3 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r21 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r20, 1);

        $r15[1] = $r21;

        $r64 = new java.lang.String;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r64.<java.lang.String: void <init>(char[])>($r24);

        $r15[2] = $r64;

        $r25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z4 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r26 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r27 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r26, 1);

        $r15[3] = $r27;

        $i2 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777786, $r2, $r15, $i0, $i2, $i1);

     label5:
        return;
    }

    public void unsafeRawInvocation(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r13, $r26, $r38, $r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r5, $r18, $r33, $r44;
        java.lang.String[] $r2, $r15, $r29, $r40;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String $r7, $r20, $r35, $r46, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, $r12, $r22, $r25, $r31, $r37, $r42, $r48;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r19, $r34, $r45;
        char[] $r4, $r10, $r14, $r17, $r23, $r27, $r32, $r39, $r43, $r50;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r28 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $i5 = 16777746;

        goto label2;

     label1:
        $i5 = 16777747;

     label2:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i5);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        return;

     label3:
        if $z0 == 0 goto label4;

        $r29 = newarray (java.lang.String)[3];

        $r51 = new java.lang.String;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r32);

        $r29[0] = $r51;

        $r33 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z3 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r34 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r35 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r34, 0);

        $r29[1] = $r35;

        $r52 = new java.lang.String;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r38 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r39 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r39);

        $r29[2] = $r52;

        $r40 = newarray (java.lang.String)[3];

        $r53 = new java.lang.String;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r43 = virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r43);

        $r40[0] = $r53;

        $r44 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z4 = virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r45 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r46 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r45, 1);

        $r40[1] = $r46;

        $r54 = new java.lang.String;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r49 = virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r50 = virtualinvoke $r49.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r54.<java.lang.String: void <init>(char[])>($r50);

        $r40[2] = $r54;

        $i4 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777746, $r29, $r40, $i0, $i4, $i3);

        goto label5;

     label4:
        $r2 = newarray (java.lang.String)[4];

        $r55 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r4);

        $r2[0] = $r55;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r7 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r6, 0);

        $r2[1] = $r7;

        $r56 = new java.lang.String;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r56.<java.lang.String: void <init>(char[])>($r10);

        $r2[2] = $r56;

        $r57 = new java.lang.String;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r14);

        $r2[3] = $r57;

        $r15 = newarray (java.lang.String)[4];

        $r58 = new java.lang.String;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r58.<java.lang.String: void <init>(char[])>($r17);

        $r15[0] = $r58;

        $r18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z2 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r19 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r20 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r19, 1);

        $r15[1] = $r20;

        $r59 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r59.<java.lang.String: void <init>(char[])>($r23);

        $r15[2] = $r59;

        $r60 = new java.lang.String;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r60.<java.lang.String: void <init>(char[])>($r27);

        $r15[3] = $r60;

        $i2 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r28.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777747, $r2, $r15, $i0, $i2, $i1);

     label5:
        return;
    }

    public void unsafeReturnTypeOverride(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r6, $r19, $r26, $r38;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2, $r10, $r11, r18, $r30, $r31;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r45;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1;
        java.lang.String[] $r4, $r24;
        int $i0, i1, i2, $i4;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r44;
        java.lang.String $r13, $r33, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, $r15, $r22, $r35, $r41;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r12, $r32;
        char[] $r7, $r9, $r16, $r20, $r23, $r27, $r29, $r36, $r39, $r42;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r43;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r18 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(67109423);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        i1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

        i2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r3 != r1 goto label2;

        $r43 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration sourceMethod()>();

        $r44 = (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration) $r43;

        r45 = $r44.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType>;

        i1 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart()>();

        i2 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd()>();

     label2:
        $r4 = newarray (java.lang.String)[6];

        $r46 = new java.lang.String;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r46.<java.lang.String: void <init>(char[])>($r7);

        $r4[0] = $r46;

        $r47 = new java.lang.String;

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r9);

        $r4[1] = $r47;

        $r10 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z0 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r13 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r12, 0);

        $r4[2] = $r13;

        $r48 = new java.lang.String;

        $r15 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r48.<java.lang.String: void <init>(char[])>($r16);

        $r4[3] = $r48;

        $r49 = new java.lang.String;

        $r19 = r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r20);

        $r4[4] = $r49;

        $r50 = new java.lang.String;

        $r22 = r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r50.<java.lang.String: void <init>(char[])>($r23);

        $r4[5] = $r50;

        $r24 = newarray (java.lang.String)[6];

        $r51 = new java.lang.String;

        $r26 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r27);

        $r24[0] = $r51;

        $r52 = new java.lang.String;

        $r29 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r29);

        $r24[1] = $r52;

        $r30 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z1 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r31 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r32 = $r31.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r33 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r32, 1);

        $r24[2] = $r33;

        $r53 = new java.lang.String;

        $r35 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r36 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r36);

        $r24[3] = $r53;

        $r54 = new java.lang.String;

        $r38 = r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r39 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r54.<java.lang.String: void <init>(char[])>($r39);

        $r24[4] = $r54;

        $r55 = new java.lang.String;

        $r41 = r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r42 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r42);

        $r24[5] = $r55;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109423, $r4, $r24, $i0, i1, i2);

        return;
    }

    public void unsafeTypeConversion(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r11;
        org.eclipse.jdt.internal.compiler.ast.Expression r19;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r6, $r9, $r17;
        java.lang.String $r20, $r21, $r22, $r23, $r24, $r25;
        char[] $r4, $r7, $r10, $r13, $r15, $r18;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r19 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(16777748);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[3];

        $r20 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r20.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r20;

        $r21 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r21;

        $r22 = new java.lang.String;

        $r9 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r22.<java.lang.String: void <init>(char[])>($r10);

        $r1[2] = $r22;

        $r11 = newarray (java.lang.String)[3];

        $r23 = new java.lang.String;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r23.<java.lang.String: void <init>(char[])>($r13);

        $r11[0] = $r23;

        $r24 = new java.lang.String;

        $r15 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r15);

        $r11[1] = $r24;

        $r25 = new java.lang.String;

        $r17 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r18);

        $r11[2] = $r25;

        $i2 = r19.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i1 = r19.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(16777748, $r1, $r11, $i0, $i2, $i1);

        return;
    }

    public void unusedArgument(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r3;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536870974);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r5;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870974, $r1, $r1, $i0, $i2, $i1);

        return;
    }

    public void unusedDeclaredThrownException(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r4, $r9, $r10, $r18, $r23, $r24, $r32, $r35, $r36, $r43, $r46, $r47;
        java.lang.String $r12, $r26, $r38, $r49, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61;
        char[] $r6, $r8, $r15, $r20, $r22, $r28, $r34, $r40, $r45, $r51;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r2, $r16, $r30, $r41;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, r14, $r19, $r33, $r44;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r11, $r25, $r37, $r48;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r14 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r29 := @parameter2: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z0 == 0 goto label1;

        $i5 = 536871098;

        goto label2;

     label1:
        $i5 = 536871097;

     label2:
        $i0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>($i5);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        return;

     label3:
        if $z0 == 0 goto label4;

        $r30 = newarray (java.lang.String)[3];

        $r52 = new java.lang.String;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r33 = $r32.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r34);

        $r30[0] = $r52;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z3 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r38 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r37, 0);

        $r30[1] = $r38;

        $r53 = new java.lang.String;

        $r40 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r40);

        $r30[2] = $r53;

        $r41 = newarray (java.lang.String)[3];

        $r54 = new java.lang.String;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r44 = $r43.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r45 = virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r54.<java.lang.String: void <init>(char[])>($r45);

        $r41[0] = $r54;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z4 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r47 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r48 = $r47.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r49 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r48, 1);

        $r41[1] = $r49;

        $r55 = new java.lang.String;

        $r51 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r51);

        $r41[2] = $r55;

        $i4 = r29.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i3 = r29.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871098, $r30, $r41, $i0, $i4, $i3);

        goto label5;

     label4:
        $r2 = newarray (java.lang.String)[4];

        $r56 = new java.lang.String;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r56.<java.lang.String: void <init>(char[])>($r6);

        $r2[0] = $r56;

        $r57 = new java.lang.String;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r57.<java.lang.String: void <init>(char[])>($r8);

        $r2[1] = $r57;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z1 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r12 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r11, 0);

        $r2[2] = $r12;

        $r58 = new java.lang.String;

        $r15 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r58.<java.lang.String: void <init>(char[])>($r15);

        $r2[3] = $r58;

        $r16 = newarray (java.lang.String)[4];

        $r59 = new java.lang.String;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r59.<java.lang.String: void <init>(char[])>($r20);

        $r16[0] = $r59;

        $r60 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        specialinvoke $r60.<java.lang.String: void <init>(char[])>($r22);

        $r16[1] = $r60;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z2 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r25 = $r24.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r26 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r25, 1);

        $r16[2] = $r26;

        $r61 = new java.lang.String;

        $r28 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r61.<java.lang.String: void <init>(char[])>($r28);

        $r16[3] = $r61;

        $i2 = r29.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i1 = r29.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871097, $r2, $r16, $i0, $i2, $i1);

     label5:
        return;
    }

    public void unusedImport(org.eclipse.jdt.internal.compiler.ast.ImportReference)
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        char[][] $r3;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ImportReference;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(268435844);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: char[][] tokens>;

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r3);

        $r1[0] = $r4;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceStart>;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(268435844, $r1, $r1, $i0, $i2, $i1);

        return;
    }

    public void unusedLabel(org.eclipse.jdt.internal.compiler.ast.LabeledStatement)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r5;
        org.eclipse.jdt.internal.compiler.ast.LabeledStatement r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LabeledStatement;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536871111);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.LabeledStatement: char[] label>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r5;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.LabeledStatement: int sourceStart>;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.LabeledStatement: int labelEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536871111, $r1, $r1, $i0, $i2, $i1);

        return;
    }

    public void unusedLocalVariable(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1;
        org.eclipse.jdt.internal.compiler.ast.LocalDeclaration r3;
        int $i0, $i1, $i2, $i4;
        char[] $r4;
        java.lang.String $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(536870973);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r1 = newarray (java.lang.String)[1];

        $r5 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: char[] name>;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r5;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceStart>;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(536870973, $r1, $r1, $i0, $i2, $i1);

        return;
    }

    public void unusedPrivateConstructor(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r9;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r8, $r14, $r15, $r16;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r11;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r7, $r13;
        char[] $r6, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(603979910);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = newarray (java.lang.String)[2];

        $r15 = new java.lang.String;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r6);

        $r3[0] = $r15;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r7 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r8 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r7, 0);

        $r3[1] = $r8;

        $r9 = newarray (java.lang.String)[2];

        $r16 = new java.lang.String;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r12);

        $r9[0] = $r16;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r13 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r14 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r13, 1);

        $r9[1] = $r14;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(603979910, $r3, $r9, $i0, $i2, $i1);

        return;
    }

    public void unusedPrivateField(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r6, $r8, $r10;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String[] $r14, $r20;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r26, $r27, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r16, $r22;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r11;
        char[] $r3, $r4, $r7, $r9, $r12, $r13, $r17, $r19, $r23, $r25;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(570425421);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALVERSIONUID>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r3);

        if $z0 == 0 goto label2;

        $z4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z4 == 0 goto label2;

        $z5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z5 == 0 goto label2;

        $r11 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        if $r11 != $r10 goto label2;

        return;

     label2:
        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALPERSISTENTFIELDS>;

        $r13 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r12, $r13);

        if $z6 == 0 goto label3;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z2 == 0 goto label3;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int dimensions()>();

        if $i1 != 1 goto label3;

        $r7 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTSTREAMFIELD>;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r8 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r7, $r9);

        if $z3 == 0 goto label3;

        return;

     label3:
        $r14 = newarray (java.lang.String)[2];

        $r26 = new java.lang.String;

        $r16 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r17 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r26.<java.lang.String: void <init>(char[])>($r17);

        $r14[0] = $r26;

        $r27 = new java.lang.String;

        $r19 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r27.<java.lang.String: void <init>(char[])>($r19);

        $r14[1] = $r27;

        $r20 = newarray (java.lang.String)[2];

        $r28 = new java.lang.String;

        $r22 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r23);

        $r20[0] = $r28;

        $r29 = new java.lang.String;

        $r25 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        specialinvoke $r29.<java.lang.String: void <init>(char[])>($r25);

        $r20[1] = $r29;

        $i2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceStart(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r1);

        $i3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int nodeSourceEnd(org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(570425421, $r14, $r20, $i0, $i2, $i3);

        return;
    }

    public void unusedPrivateMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r7, $r11, $r15, $r19, $r22, $r26, $r30;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        java.lang.String $r40, $r48, $r49, $r50, $r51, $r52;
        char[] $r5, $r6, $r9, $r10, $r16, $r17, $r20, $r21, $r27, $r28, $r31, $r32, $r36, $r38, $r44, $r46;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String[] $r33, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r35, $r43;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r12, $r23;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r4, $r8, $r13, $r14, $r18, $r24, $r25, $r29, $r39, $r47;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(603979894);

        $i12 = (int) -1;

        if $i0 != $i12 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z0 != 0 goto label2;

        $r23 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r22 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        if $r23 != $r22 goto label2;

        $r24 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i7 = lengthof $r24;

        if $i7 != 1 goto label2;

        $r25 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r26 = $r25[0];

        $i8 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int dimensions()>();

        if $i8 != 0 goto label2;

        $r28 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r27 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] READOBJECT>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r28, $r27);

        if $z5 == 0 goto label2;

        $r31 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTINPUTSTREAM>;

        $r29 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r30 = $r29[0];

        $r32 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r31, $r32);

        if $z6 == 0 goto label2;

        return;

     label2:
        $z7 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z7 != 0 goto label3;

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        if $r12 != $r11 goto label3;

        $r13 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i5 = lengthof $r13;

        if $i5 != 1 goto label3;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r15 = $r14[0];

        $i6 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int dimensions()>();

        if $i6 != 0 goto label3;

        $r17 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r16 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEOBJECT>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r17, $r16);

        if $z3 == 0 goto label3;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTOUTPUTSTREAM>;

        $r18 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r19 = $r18[0];

        $r21 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r20, $r21);

        if $z4 == 0 goto label3;

        return;

     label3:
        $z8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z8 != 0 goto label4;

        $r7 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i3 = $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if 1 != $i3 goto label4;

        $r8 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i4 = lengthof $r8;

        if $i4 != 0 goto label4;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] READRESOLVE>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r10, $r9);

        if $z2 == 0 goto label4;

        return;

     label4:
        $z9 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z9 != 0 goto label5;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if 1 != $i1 goto label5;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i2 = lengthof $r4;

        if $i2 != 0 goto label5;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEREPLACE>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r5);

        if $z1 == 0 goto label5;

        return;

     label5:
        $r33 = newarray (java.lang.String)[3];

        $r49 = new java.lang.String;

        $r35 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r36 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r49.<java.lang.String: void <init>(char[])>($r36);

        $r33[0] = $r49;

        $r50 = new java.lang.String;

        $r38 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r50.<java.lang.String: void <init>(char[])>($r38);

        $r33[1] = $r50;

        $z10 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r39 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r40 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z10, $r39, 0);

        $r33[2] = $r40;

        $r41 = newarray (java.lang.String)[3];

        $r51 = new java.lang.String;

        $r43 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r51.<java.lang.String: void <init>(char[])>($r44);

        $r41[0] = $r51;

        $r52 = new java.lang.String;

        $r46 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r46);

        $r41[1] = $r52;

        $z11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r47 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r48 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z11, $r47, 1);

        $r41[2] = $r48;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart>;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(603979894, $r33, $r41, $i0, $i9, $i10);

        return;
    }

    public void unusedPrivateType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r3, $r6;
        int $i0, $i1, $i2, $i4;
        char[] $r5, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        java.lang.String $r9, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(553648135);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r3 = newarray (java.lang.String)[1];

        $r9 = new java.lang.String;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r5);

        $r3[0] = $r9;

        $r6 = newarray (java.lang.String)[1];

        $r10 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r8);

        $r6[0] = $r10;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(553648135, $r3, $r6, $i0, $i2, $i1);

        return;
    }

    public void unusedWarningToken(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r3;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $r0[0] = $r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871547, $r0, $r0, $i1, $i0);

        return;
    }

    public void useAssertAsAnIdentifier(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871352, $r2, $r1, i0, i1);

        return;
    }

    public void useEnumAsAnIdentifier(int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        int i0, i1;
        java.lang.String[] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r1 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536871353, $r2, $r1, i0, i1);

        return;
    }

    public void varargsArgumentNeedCast(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.InvocationSite)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, r9, $r21, $r36, $r50, $r63;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding r6;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        java.lang.String $r16, $r31, $r48, $r61, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82;
        char[] $r10, $r12, $r14, $r19, $r22, $r25, $r27, $r29, $r34, $r37, $r41, $r43, $r46, $r51, $r54, $r56, $r59, $r64;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        org.eclipse.jdt.internal.compiler.lookup.InvocationSite r38;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r7, $r23, $r39, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r18, $r33, $r45, $r58;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r3, $r4, $r15, $r30, $r47, $r60;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r38 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.InvocationSite;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: org.eclipse.jdt.internal.compiler.impl.CompilerOptions options>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(34359738368L);

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        return;

     label1:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        $r5 = $r4[$i2];

        r6 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) $r5;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label2;

        $r39 = newarray (java.lang.String)[5];

        $r65 = new java.lang.String;

        $r41 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r65.<java.lang.String: void <init>(char[])>($r41);

        $r39[0] = $r65;

        $r66 = new java.lang.String;

        $r43 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: char[] readableName()>();

        specialinvoke $r66.<java.lang.String: void <init>(char[])>($r43);

        $r39[1] = $r66;

        $r67 = new java.lang.String;

        $r45 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r46 = virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r67.<java.lang.String: void <init>(char[])>($r46);

        $r39[2] = $r67;

        $z3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r47 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r48 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r47, 0);

        $r39[3] = $r48;

        $r68 = new java.lang.String;

        $r50 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $r51 = virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r68.<java.lang.String: void <init>(char[])>($r51);

        $r39[4] = $r68;

        $r52 = newarray (java.lang.String)[5];

        $r69 = new java.lang.String;

        $r54 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r69.<java.lang.String: void <init>(char[])>($r54);

        $r52[0] = $r69;

        $r70 = new java.lang.String;

        $r56 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: char[] shortReadableName()>();

        specialinvoke $r70.<java.lang.String: void <init>(char[])>($r56);

        $r52[1] = $r70;

        $r71 = new java.lang.String;

        $r58 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r59 = virtualinvoke $r58.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r71.<java.lang.String: void <init>(char[])>($r59);

        $r52[2] = $r71;

        $z4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r60 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r61 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r60, 1);

        $r52[3] = $r61;

        $r72 = new java.lang.String;

        $r63 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $r64 = virtualinvoke $r63.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r72.<java.lang.String: void <init>(char[])>($r64);

        $r52[4] = $r72;

        $i5 = interfaceinvoke r38.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceStart()>();

        $i6 = interfaceinvoke r38.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(134218530, $r39, $r52, $i0, $i5, $i6);

        goto label3;

     label2:
        $r7 = newarray (java.lang.String)[6];

        $r73 = new java.lang.String;

        $r10 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r73.<java.lang.String: void <init>(char[])>($r10);

        $r7[0] = $r73;

        $r74 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: char[] readableName()>();

        specialinvoke $r74.<java.lang.String: void <init>(char[])>($r12);

        $r7[1] = $r74;

        $r75 = new java.lang.String;

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r75.<java.lang.String: void <init>(char[])>($r14);

        $r7[2] = $r75;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r15 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r16 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r15, 0);

        $r7[3] = $r16;

        $r76 = new java.lang.String;

        $r18 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r76.<java.lang.String: void <init>(char[])>($r19);

        $r7[4] = $r76;

        $r77 = new java.lang.String;

        $r21 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r77.<java.lang.String: void <init>(char[])>($r22);

        $r7[5] = $r77;

        $r23 = newarray (java.lang.String)[6];

        $r78 = new java.lang.String;

        $r25 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r78.<java.lang.String: void <init>(char[])>($r25);

        $r23[0] = $r78;

        $r79 = new java.lang.String;

        $r27 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: char[] shortReadableName()>();

        specialinvoke $r79.<java.lang.String: void <init>(char[])>($r27);

        $r23[1] = $r79;

        $r80 = new java.lang.String;

        $r29 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r80.<java.lang.String: void <init>(char[])>($r29);

        $r23[2] = $r80;

        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r30 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r31 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r30, 1);

        $r23[3] = $r31;

        $r81 = new java.lang.String;

        $r33 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r81.<java.lang.String: void <init>(char[])>($r34);

        $r23[4] = $r81;

        $r82 = new java.lang.String;

        $r36 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $r37 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r82.<java.lang.String: void <init>(char[])>($r37);

        $r23[5] = $r82;

        $i3 = interfaceinvoke r38.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceStart()>();

        $i4 = interfaceinvoke r38.<org.eclipse.jdt.internal.compiler.lookup.InvocationSite: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int,int)>(67109665, $r7, $r23, $i0, $i3, $i4);

     label3:
        return;
    }

    public void varargsConflict(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2, r9;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r27;
        java.lang.String[] $r30, $r31;
        int $i0, $i1;
        java.lang.String $r1, $r5, $r6, $r11, $r12, $r15, $r18, $r19, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7, $r13, $r20, $r25, $r28, $r29;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r4, $r10, $r17, $r22;
        char[] $r3, $r8, $r14, $r16, $r21, $r26;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r9 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r27 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;

        $r30 = newarray (java.lang.String)[5];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r30[0] = $r1;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r5 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z0, $r4, 0);

        $r30[1] = $r5;

        $r6 = new java.lang.String;

        $r7 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r30[2] = $r6;

        $z1 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r10 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r11 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z1, $r10, 0);

        $r30[3] = $r11;

        $r12 = new java.lang.String;

        $r13 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r14);

        $r30[4] = $r12;

        $r31 = newarray (java.lang.String)[5];

        $r15 = new java.lang.String;

        $r16 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r31[0] = $r15;

        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r17 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r18 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r17, 1);

        $r31[1] = $r18;

        $r19 = new java.lang.String;

        $r20 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r21);

        $r31[2] = $r19;

        $z3 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r22 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r22, 1);

        $r31[3] = $r23;

        $r24 = new java.lang.String;

        $r25 = r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r24.<java.lang.String: void <init>(char[])>($r26);

        $r31[4] = $r24;

        $r28 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r28 != r27 goto label1;

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceStart()>();

     label2:
        $r29 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r29 != r27 goto label3;

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        goto label4;

     label3:
        $i1 = virtualinvoke r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int sourceEnd()>();

     label4:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109667, $r30, $r31, $i0, $i1);

        return;
    }

    public void variableTypeCannotBeVoid(org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration r2;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        int $i0, $i1;
        char[] $r3;
        java.lang.String[] $r0;
        java.lang.String $r1;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration;

        $r0 = newarray (java.lang.String)[1];

        $r1 = new java.lang.String;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: char[] name>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        $r0[0] = $r1;

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: int sourceStart>;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870964, $r0, $r0, $i1, $i0);

        return;
    }

    public void variableTypeCannotBeVoidArray(org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration r1;
        int $i0, $i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r4 = <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String[] NoArgument>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i1 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(536870966, $r5, $r4, $i1, $i0);

        return;
    }

    public void visibilityConflict(org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3, r10;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r6;
        int $i0, $i1;
        char[] $r5, $r9;
        java.lang.String $r2, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r10 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.String;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r5);

        $r1[0] = $r2;

        $r6 = newarray (java.lang.String)[1];

        $r7 = new java.lang.String;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r9);

        $r6[0] = $r7;

        $i0 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceStart()>();

        $i1 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int sourceEnd()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(67109273, $r1, $r6, $i0, $i1);

        return;
    }

    public void wildcardAssignment(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r0;
        java.lang.String[] $r1, $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r6;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r9, $r11;
        char[] $r4, $r7, $r10, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r13 := @parameter2: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = newarray (java.lang.String)[2];

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r1[0] = $r2;

        $r5 = new java.lang.String;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r7);

        $r1[1] = $r5;

        $r8 = newarray (java.lang.String)[2];

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $r8[0] = $r9;

        $r11 = new java.lang.String;

        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r8[1] = $r11;

        $i1 = r13.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i0 = r13.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777758, $r1, $r8, $i1, $i0);

        return;
    }

    public void wildcardInvocation(org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding[])
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3, r13, r57, r58;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.WildcardBinding $r4;
        java.lang.String $r8, $r11, $r12, $r15, $r16, $r18, $r21, $r24, $r25, $r27, $r28, $r30, $r34, $r37, $r38, $r40, $r41, $r43, $r46, $r49, $r50, $r52, $r53, $r55;
        char[] $r9, $r14, $r17, $r19, $r22, $r26, $r29, $r31, $r35, $r39, $r42, $r44, $r47, $r51, $r54, $r56;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String[] $r7, $r20, $r33, $r45;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r32;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r1, $r2, r5, $r10, $r23, $r36, $r48;

        r6 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r32 := @parameter0: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r13 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r5 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        r57 = null;

        r58 = null;

        i6 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        r3 = $r2[i6];

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isWildcard()>();

        if $z0 == 0 goto label2;

        $r4 = (org.eclipse.jdt.internal.compiler.lookup.WildcardBinding) r3;

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.lookup.WildcardBinding: int boundKind>;

        if $i1 == 2 goto label2;

        r58 = r3;

        r57 = r5[i6];

        goto label4;

     label2:
        i6 = i6 + 1;

     label3:
        if i6 < i0 goto label1;

     label4:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z1 == 0 goto label5;

        $r33 = newarray (java.lang.String)[6];

        $r34 = new java.lang.String;

        $r35 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r34.<java.lang.String: void <init>(char[])>($r35);

        $r33[0] = $r34;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r36 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r37 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z4, $r36, 0);

        $r33[1] = $r37;

        $r38 = new java.lang.String;

        $r39 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r38.<java.lang.String: void <init>(char[])>($r39);

        $r33[2] = $r38;

        $r40 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r5, 0);

        $r33[3] = $r40;

        $r41 = new java.lang.String;

        $r42 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r41.<java.lang.String: void <init>(char[])>($r42);

        $r33[4] = $r41;

        $r43 = new java.lang.String;

        $r44 = virtualinvoke r58.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r43.<java.lang.String: void <init>(char[])>($r44);

        $r33[5] = $r43;

        $r45 = newarray (java.lang.String)[6];

        $r46 = new java.lang.String;

        $r47 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        specialinvoke $r46.<java.lang.String: void <init>(char[])>($r47);

        $r45[0] = $r46;

        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r48 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r49 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z5, $r48, 1);

        $r45[1] = $r49;

        $r50 = new java.lang.String;

        $r51 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r50.<java.lang.String: void <init>(char[])>($r51);

        $r45[2] = $r50;

        $r52 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r5, 1);

        $r45[3] = $r52;

        $r53 = new java.lang.String;

        $r54 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r54);

        $r45[4] = $r53;

        $r55 = new java.lang.String;

        $r56 = virtualinvoke r58.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r55.<java.lang.String: void <init>(char[])>($r56);

        $r45[5] = $r55;

        $i5 = r32.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i4 = r32.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777756, $r33, $r45, $i5, $i4);

        goto label6;

     label5:
        $r7 = newarray (java.lang.String)[6];

        $r8 = new java.lang.String;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r7[0] = $r8;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r11 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z2, $r10, 0);

        $r7[1] = $r11;

        $r12 = new java.lang.String;

        $r14 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r12.<java.lang.String: void <init>(char[])>($r14);

        $r7[2] = $r12;

        $r15 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r5, 0);

        $r7[3] = $r15;

        $r16 = new java.lang.String;

        $r17 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r16.<java.lang.String: void <init>(char[])>($r17);

        $r7[4] = $r16;

        $r18 = new java.lang.String;

        $r19 = virtualinvoke r58.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r18.<java.lang.String: void <init>(char[])>($r19);

        $r7[5] = $r18;

        $r20 = newarray (java.lang.String)[6];

        $r21 = new java.lang.String;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        specialinvoke $r21.<java.lang.String: void <init>(char[])>($r22);

        $r20[0] = $r21;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        $r23 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r24 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>($z3, $r23, 1);

        $r20[1] = $r24;

        $r25 = new java.lang.String;

        $r26 = virtualinvoke r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26);

        $r20[2] = $r25;

        $r27 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: java.lang.String typesAsString(boolean,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean)>(0, r5, 1);

        $r20[3] = $r27;

        $r28 = new java.lang.String;

        $r29 = virtualinvoke r57.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r28.<java.lang.String: void <init>(char[])>($r29);

        $r20[4] = $r28;

        $r30 = new java.lang.String;

        $r31 = virtualinvoke r58.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r30.<java.lang.String: void <init>(char[])>($r31);

        $r20[5] = $r30;

        $i3 = r32.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceStart>;

        $i2 = r32.<org.eclipse.jdt.internal.compiler.ast.ASTNode: int sourceEnd>;

        specialinvoke r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(16777757, $r7, $r20, $i3, $i2);

     label6:
        return;
    }

    public void wrongSequenceOfExceptionTypesError(org.eclipse.jdt.internal.compiler.ast.TryStatement, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, int, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r4;
        java.lang.String[] $r5, $r12;
        int i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r7, r10;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r1;
        java.lang.String $r6, $r9, $r13, $r15;
        org.eclipse.jdt.internal.compiler.ast.Argument $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r3;
        org.eclipse.jdt.internal.compiler.ast.TryStatement r0;
        char[] $r8, $r11, $r14, $r16;

        r4 := @this: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TryStatement;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        i0 := @parameter2: int;

        r10 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TryStatement: org.eclipse.jdt.internal.compiler.ast.Argument[] catchArguments>;

        $r2 = $r1[i0];

        r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r5 = newarray (java.lang.String)[2];

        $r6 = new java.lang.String;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r8);

        $r5[0] = $r6;

        $r9 = new java.lang.String;

        $r11 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r11);

        $r5[1] = $r9;

        $r12 = newarray (java.lang.String)[2];

        $r13 = new java.lang.String;

        $r14 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r13.<java.lang.String: void <init>(char[])>($r14);

        $r12[0] = $r13;

        $r15 = new java.lang.String;

        $r16 = virtualinvoke r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] shortReadableName()>();

        specialinvoke $r15.<java.lang.String: void <init>(char[])>($r16);

        $r12[1] = $r15;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceEnd>;

        specialinvoke r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void handle(int,java.lang.String[],java.lang.String[],int,int)>(553648315, $r5, $r12, $i2, $i1);

        return;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: byte METHOD_ACCESS> = 12;

        <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: byte CONSTRUCTOR_ACCESS> = 8;

        <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: byte FIELD_ACCESS> = 4;

        return;
    }
}
