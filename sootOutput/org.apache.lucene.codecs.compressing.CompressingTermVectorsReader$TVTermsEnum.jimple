class org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum extends org.apache.lucene.index.TermsEnum
{
    private int numTerms;
    private int startPos;
    private int ord;
    private int[] prefixLengths;
    private int[] suffixLengths;
    private int[] termFreqs;
    private int[] positionIndex;
    private int[] positions;
    private int[] startOffsets;
    private int[] lengths;
    private int[] payloadIndex;
    private org.apache.lucene.store.ByteArrayDataInput in;
    private org.apache.lucene.util.BytesRef payloads;
    private final org.apache.lucene.util.BytesRef term;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        specialinvoke r0.<org.apache.lucene.index.TermsEnum: void <init>()>();

        $r1 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>(int)>(16);

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term> = $r1;

        return;
    }

    void reset(int, int, int[], int[], int[], int[], int[], int[], int[], int[], org.apache.lucene.util.BytesRef, org.apache.lucene.store.ByteArrayDataInput)
    {
        org.apache.lucene.util.BytesRef r9;
        org.apache.lucene.store.ByteArrayDataInput r10;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        int[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i0, $i1, i2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        r3 := @parameter4: int[];

        r4 := @parameter5: int[];

        r5 := @parameter6: int[];

        r6 := @parameter7: int[];

        r7 := @parameter8: int[];

        r8 := @parameter9: int[];

        r9 := @parameter10: org.apache.lucene.util.BytesRef;

        r10 := @parameter11: org.apache.lucene.store.ByteArrayDataInput;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms> = i0;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] prefixLengths> = r1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] suffixLengths> = r2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] termFreqs> = r3;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] positionIndex> = r4;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] positions> = r5;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] startOffsets> = r6;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] lengths> = r7;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] payloadIndex> = r8;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef payloads> = r9;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.store.ByteArrayDataInput in> = r10;

        $i1 = virtualinvoke r10.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int startPos> = $i1;

        virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: void reset()>();

        return;
    }

    void reset()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1;
        int $i0, $i2;
        org.apache.lucene.store.ByteArrayDataInput $r2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r1.<org.apache.lucene.util.BytesRef: int length> = 0;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.store.ByteArrayDataInput in>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int startPos>;

        virtualinvoke $r2.<org.apache.lucene.store.ByteArrayDataInput: void setPosition(int)>($i0);

        $i2 = (int) -1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord> = $i2;

        return;
    }

    public org.apache.lucene.util.BytesRef next() throws java.io.IOException
    {
        byte[] $r7, $r11, $r16, $r18;
        org.apache.lucene.store.ByteArrayDataInput $r12;
        int[] $r2, $r3, $r9, $r10;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r1, $r4, $r5, $r6, $r8, $r13, $r14, $r15, $r17;
        java.lang.AssertionError $r19;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $i2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms>;

        $i1 = $i0 - 1;

        if $i2 != $i1 goto label1;

        return null;

     label1:
        $z0 = <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i18 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i17 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms>;

        if $i18 < $i17 goto label2;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label2:
        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i4 = $i3 + 1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord> = $i4;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r1.<org.apache.lucene.util.BytesRef: int offset> = 0;

        $r4 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] prefixLengths>;

        $i5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i8 = $r2[$i5];

        $r3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] suffixLengths>;

        $i6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i7 = $r3[$i6];

        $i9 = $i8 + $i7;

        $r4.<org.apache.lucene.util.BytesRef: int length> = $i9;

        $r5 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i11 = $r5.<org.apache.lucene.util.BytesRef: int length>;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r7 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i10 = lengthof $r7;

        if $i11 <= $i10 goto label3;

        $r17 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r14 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r16 = $r14.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r15 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i16 = $r15.<org.apache.lucene.util.BytesRef: int length>;

        $r18 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r16, $i16);

        $r17.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r18;

     label3:
        $r12 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.store.ByteArrayDataInput in>;

        $r8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r11 = $r8.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] prefixLengths>;

        $i12 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i15 = $r9[$i12];

        $r10 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] suffixLengths>;

        $i13 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i14 = $r10[$i13];

        virtualinvoke $r12.<org.apache.lucene.store.ByteArrayDataInput: void readBytes(byte[],int,int)>($r11, $i15, $i14);

        $r13 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        return $r13;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r1;
        java.util.Comparator $r0;

        r1 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $r0 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r0;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef r1, $r5, $r7;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.index.TermsEnum$SeekStatus $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        boolean z0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $i1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms>;

        if $i1 >= $i0 goto label2;

        $i3 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        if $i3 < 0 goto label2;

        $r5 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term()>();

        $i4 = virtualinvoke $r5.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r1);

        if $i4 != 0 goto label1;

        $r6 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r6;

     label1:
        if $i4 <= 0 goto label2;

        virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: void reset()>();

     label2:
        $r7 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r7 != null goto label3;

        $r4 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r4;

     label3:
        $i2 = virtualinvoke $r7.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r1);

        if $i2 <= 0 goto label4;

        $r3 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r3;

     label4:
        if $i2 != 0 goto label5;

        $r2 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r2;

     label5:
        goto label2;
    }

    public void seekExact(long) throws java.io.IOException
    {
        long l0, $l4, $l7, $l9, $l12;
        java.lang.AssertionError $r11;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r5;
        byte $b1, $b5, $b8, $b10, $b13;
        int $i2, $i3, $i6, i11, $i14, $i15, $i16, $i17;
        java.lang.String $r7;
        boolean $z0;
        java.io.IOException $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r9;

        r5 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        l0 := @parameter0: long;

        $b1 = l0 cmp -1L;

        $i14 = (int) $b1;

        if $i14 < 0 goto label1;

        $i3 = r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms>;

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        $i15 = (int) $b5;

        if $i15 < 0 goto label2;

     label1:
        $r10 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ord is out of range: ord=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numTerms=");

        $i2 = r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int numTerms>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r10;

     label2:
        $i6 = r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $l7 = (long) $i6;

        $b8 = l0 cmp $l7;

        $i16 = (int) $b8;

        if $i16 >= 0 goto label3;

        virtualinvoke r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: void reset()>();

     label3:
        i11 = r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

     label4:
        $l12 = (long) i11;

        $b13 = $l12 cmp l0;

        $i17 = (int) $b13;

        if $i17 >= 0 goto label5;

        virtualinvoke r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef next()>();

        i11 = i11 + 1;

        goto label4;

     label5:
        $z0 = <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $l9 = virtualinvoke r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: long ord()>();

        $b10 = l0 cmp $l9;

        if $b10 == 0 goto label6;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label6:
        return;
    }

    public org.apache.lucene.util.BytesRef term() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term>;

        return $r1;
    }

    public long ord() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $l1 = (long) $i0;

        return $l1;
    }

    public int docFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        return 1;
    }

    public long totalTermFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        int[] $r1;
        int $i0, $i1;
        long $l2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] termFreqs>;

        $i0 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i1 = $r1[$i0];

        $l2 = (long) $i1;

        return $l2;
    }

    public final org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r3;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum $r1, r4;
        int[] $r5, $r6, $r7, $r8, $r9, $r11;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.lucene.util.Bits r2;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r10;
        org.apache.lucene.index.DocsEnum r0;

        r3 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        r2 := @parameter0: org.apache.lucene.util.Bits;

        r0 := @parameter1: org.apache.lucene.index.DocsEnum;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        if $z0 == 0 goto label1;

        r4 = (org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum) r0;

        goto label2;

     label1:
        $r1 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum;

        specialinvoke $r1.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void <init>()>();

        r4 = $r1;

     label2:
        $r5 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] termFreqs>;

        $i1 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i2 = $r5[$i1];

        $r6 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] positionIndex>;

        $i3 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int ord>;

        $i4 = $r6[$i3];

        $r7 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] positions>;

        $r8 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] startOffsets>;

        $r9 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] lengths>;

        $r10 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef payloads>;

        $r11 = r3.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] payloadIndex>;

        virtualinvoke r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVDocsEnum: void reset(org.apache.lucene.util.Bits,int,int,int[],int[],int[],org.apache.lucene.util.BytesRef,int[])>(r2, $i2, $i4, $r7, $r8, $r9, $r10, $r11);

        return r4;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocsEnum $r4;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.index.DocsAndPositionsEnum r3, $r5;
        int[] $r1, $r6;
        int i0;
        org.apache.lucene.util.Bits r2;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        r2 := @parameter0: org.apache.lucene.util.Bits;

        r3 := @parameter1: org.apache.lucene.index.DocsAndPositionsEnum;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] positions>;

        if $r1 != null goto label1;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: int[] startOffsets>;

        if $r6 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r2, r3, i0);

        $r5 = (org.apache.lucene.index.DocsAndPositionsEnum) $r4;

        return $r5;
    }

    void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$1)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$1 r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$1;

        specialinvoke r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/compressing/CompressingTermVectorsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.compressing.CompressingTermVectorsReader$TVTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
