public class org.eclipse.jetty.io.View extends org.eclipse.jetty.io.AbstractBuffer
{
    org.eclipse.jetty.io.Buffer _buffer;

    public void <init>(org.eclipse.jetty.io.Buffer, int, int, int, int)
    {
        org.eclipse.jetty.io.View r0;
        int i0, i1, i2, i3;
        org.eclipse.jetty.io.Buffer r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.View;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        i3 := @parameter4: int;

        $z0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean isImmutable()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, $z1);

        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer> = $r2;

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setPutIndex(int)>(i0);

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>(i1);

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setMarkIndex(int)>(i2);

        r0.<org.eclipse.jetty.io.View: int _access> = i3;

        return;
    }

    public void <init>(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.View r0;
        byte $b3;
        int $i0, $i1, $i2;
        org.eclipse.jetty.io.Buffer r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.io.View;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $z0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean isImmutable()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, $z2);

        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer> = $r2;

        $i0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setPutIndex(int)>($i0);

        $i1 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>($i1);

        $i2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int markIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setMarkIndex(int)>($i2);

        $z1 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean isReadOnly()>();

        if $z1 == 0 goto label3;

        $b3 = 1;

        goto label4;

     label3:
        $b3 = 2;

     label4:
        r0.<org.eclipse.jetty.io.View: int _access> = $b3;

        return;
    }

    public void <init>()
    {
        org.eclipse.jetty.io.View r0;

        r0 := @this: org.eclipse.jetty.io.View;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void <init>(int,boolean)>(2, 1);

        return;
    }

    public void update(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.View r0;
        byte $b3;
        int $i0, $i1, $i2;
        org.eclipse.jetty.io.Buffer r1, $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.View;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r0.<org.eclipse.jetty.io.View: int _access> = 2;

        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer> = $r2;

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>(0);

        $i0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setPutIndex(int)>($i0);

        $i1 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>($i1);

        $i2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int markIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setMarkIndex(int)>($i2);

        $z0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 2;

     label2:
        r0.<org.eclipse.jetty.io.View: int _access> = $b3;

        return;
    }

    public void update(int, int)
    {
        org.eclipse.jetty.io.View r0;
        int i0, i1, i2, $i4;

        r0 := @this: org.eclipse.jetty.io.View;

        i2 := @parameter0: int;

        i1 := @parameter1: int;

        i0 = r0.<org.eclipse.jetty.io.View: int _access>;

        r0.<org.eclipse.jetty.io.View: int _access> = 2;

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>(0);

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setPutIndex(int)>(i1);

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>(i2);

        $i4 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setMarkIndex(int)>($i4);

        r0.<org.eclipse.jetty.io.View: int _access> = i0;

        return;
    }

    public byte[] array()
    {
        byte[] $r2;
        org.eclipse.jetty.io.View r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.View;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        return $r2;
    }

    public org.eclipse.jetty.io.Buffer buffer()
    {
        org.eclipse.jetty.io.View r0;
        org.eclipse.jetty.io.Buffer $r1, $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        return $r2;
    }

    public int capacity()
    {
        int $i0;
        org.eclipse.jetty.io.View r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.View;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i0 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: int capacity()>();

        return $i0;
    }

    public void clear()
    {
        org.eclipse.jetty.io.View r0;
        int $i0, $i1, $i3;
        org.eclipse.jetty.io.Buffer $r1, $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        $i3 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setMarkIndex(int)>($i3);

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>(0);

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i0 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setPutIndex(int)>($i0);

        $r2 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.View: void setGetIndex(int)>($i1);

        return;
    }

    public void compact()
    {
        org.eclipse.jetty.io.View r0;

        r0 := @this: org.eclipse.jetty.io.View;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.eclipse.jetty.io.View r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.eclipse.jetty.io.View;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r1 instanceof org.eclipse.jetty.io.Buffer;

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label2;

     label1:
        $z1 = specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public boolean isReadOnly()
    {
        org.eclipse.jetty.io.View r0;
        org.eclipse.jetty.io.Buffer $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.View;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: boolean isReadOnly()>();

        return $z0;
    }

    public boolean isVolatile()
    {
        org.eclipse.jetty.io.View r0;

        r0 := @this: org.eclipse.jetty.io.View;

        return 1;
    }

    public byte peek(int)
    {
        org.eclipse.jetty.io.View r0;
        byte $b1;
        int i0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $b1 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: byte peek(int)>(i0);

        return $b1;
    }

    public int peek(int, byte[], int, int)
    {
        byte[] r1;
        org.eclipse.jetty.io.View r0;
        int i0, i1, i2, $i3;
        org.eclipse.jetty.io.Buffer $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i3 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int peek(int,byte[],int,int)>(i0, r1, i1, i2);

        return $i3;
    }

    public org.eclipse.jetty.io.Buffer peek(int, int)
    {
        org.eclipse.jetty.io.View r0;
        int i0, i1;
        org.eclipse.jetty.io.Buffer $r1, $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer peek(int,int)>(i0, i1);

        return $r2;
    }

    public int poke(int, org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.View r0;
        int i0, $i1;
        org.eclipse.jetty.io.Buffer r1, $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jetty.io.Buffer;

        $r2 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int poke(int,org.eclipse.jetty.io.Buffer)>(i0, r1);

        return $i1;
    }

    public void poke(int, byte)
    {
        org.eclipse.jetty.io.View r0;
        byte b1;
        int i0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: void poke(int,byte)>(i0, b1);

        return;
    }

    public int poke(int, byte[], int, int)
    {
        byte[] r1;
        org.eclipse.jetty.io.View r0;
        int i0, i1, i2, $i3;
        org.eclipse.jetty.io.Buffer $r2;

        r0 := @this: org.eclipse.jetty.io.View;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        $i3 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int poke(int,byte[],int,int)>(i0, r1, i1, i2);

        return $i3;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.io.View r0;
        java.lang.String $r2;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.View;

        $r1 = r0.<org.eclipse.jetty.io.View: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 != null goto label1;

        return "INVALID";

     label1:
        $r2 = specialinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: java.lang.String toString()>();

        return $r2;
    }
}
