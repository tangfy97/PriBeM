public final enum class org.waveprotocol.box.server.waveserver.TokenQueryType extends java.lang.Enum
{
    public static final enum org.waveprotocol.box.server.waveserver.TokenQueryType IN;
    public static final enum org.waveprotocol.box.server.waveserver.TokenQueryType ORDERBY;
    public static final enum org.waveprotocol.box.server.waveserver.TokenQueryType WITH;
    public static final enum org.waveprotocol.box.server.waveserver.TokenQueryType CREATOR;
    public static final enum org.waveprotocol.box.server.waveserver.TokenQueryType ID;
    final java.lang.String token;
    private static final java.util.Map reverseLookupMap;
    private static final org.waveprotocol.box.server.waveserver.TokenQueryType[] $VALUES;

    public static org.waveprotocol.box.server.waveserver.TokenQueryType[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.box.server.waveserver.TokenQueryType[] $r0, $r2;

        $r0 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.box.server.waveserver.TokenQueryType[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.box.server.waveserver.TokenQueryType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.waveprotocol.box.server.waveserver.TokenQueryType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/box/server/waveserver/TokenQueryType;", r0);

        $r2 = (org.waveprotocol.box.server.waveserver.TokenQueryType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        int i0;
        java.lang.String r1, r2;
        org.waveprotocol.box.server.waveserver.TokenQueryType r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.TokenQueryType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.waveprotocol.box.server.waveserver.TokenQueryType: java.lang.String token> = r2;

        return;
    }

    java.lang.String getToken()
    {
        java.lang.String $r1;
        org.waveprotocol.box.server.waveserver.TokenQueryType r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.TokenQueryType;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.TokenQueryType: java.lang.String token>;

        return $r1;
    }

    public static org.waveprotocol.box.server.waveserver.TokenQueryType fromToken(java.lang.String)
    {
        java.lang.IllegalArgumentException $r7;
        org.waveprotocol.box.server.waveserver.TokenQueryType r3, $r6;
        java.util.Map $r1, $r4;
        java.lang.Object $r2, $r5;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r0, $r11;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.box.server.waveserver.TokenQueryType: java.util.Map reverseLookupMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (org.waveprotocol.box.server.waveserver.TokenQueryType) $r2;

        if r3 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal query param: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r4 = <org.waveprotocol.box.server.waveserver.TokenQueryType: java.util.Map reverseLookupMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (org.waveprotocol.box.server.waveserver.TokenQueryType) $r5;

        return $r6;
    }

    public static boolean hasToken(java.lang.String)
    {
        java.util.Map $r0;
        java.util.Set $r1;
        java.lang.String r2;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 = <org.waveprotocol.box.server.waveserver.TokenQueryType: java.util.Map reverseLookupMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r11;
        java.util.Map $r14;
        int i0, i1;
        java.lang.String $r15;
        org.waveprotocol.box.server.waveserver.TokenQueryType[] $r5, $r12;
        org.waveprotocol.box.server.waveserver.TokenQueryType $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, r13;

        $r0 = new org.waveprotocol.box.server.waveserver.TokenQueryType;

        specialinvoke $r0.<org.waveprotocol.box.server.waveserver.TokenQueryType: void <init>(java.lang.String,int,java.lang.String)>("IN", 0, "in");

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType IN> = $r0;

        $r1 = new org.waveprotocol.box.server.waveserver.TokenQueryType;

        specialinvoke $r1.<org.waveprotocol.box.server.waveserver.TokenQueryType: void <init>(java.lang.String,int,java.lang.String)>("ORDERBY", 1, "orderby");

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ORDERBY> = $r1;

        $r2 = new org.waveprotocol.box.server.waveserver.TokenQueryType;

        specialinvoke $r2.<org.waveprotocol.box.server.waveserver.TokenQueryType: void <init>(java.lang.String,int,java.lang.String)>("WITH", 2, "with");

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType WITH> = $r2;

        $r3 = new org.waveprotocol.box.server.waveserver.TokenQueryType;

        specialinvoke $r3.<org.waveprotocol.box.server.waveserver.TokenQueryType: void <init>(java.lang.String,int,java.lang.String)>("CREATOR", 3, "creator");

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType CREATOR> = $r3;

        $r4 = new org.waveprotocol.box.server.waveserver.TokenQueryType;

        specialinvoke $r4.<org.waveprotocol.box.server.waveserver.TokenQueryType: void <init>(java.lang.String,int,java.lang.String)>("ID", 4, "id");

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ID> = $r4;

        $r5 = newarray (org.waveprotocol.box.server.waveserver.TokenQueryType)[5];

        $r6 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType IN>;

        $r5[0] = $r6;

        $r7 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ORDERBY>;

        $r5[1] = $r7;

        $r8 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType WITH>;

        $r5[2] = $r8;

        $r9 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType CREATOR>;

        $r5[3] = $r9;

        $r10 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ID>;

        $r5[4] = $r10;

        <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType[] $VALUES> = $r5;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        <org.waveprotocol.box.server.waveserver.TokenQueryType: java.util.Map reverseLookupMap> = $r11;

        $r12 = staticinvoke <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType[] values()>();

        i0 = lengthof $r12;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r13 = $r12[i1];

        $r14 = <org.waveprotocol.box.server.waveserver.TokenQueryType: java.util.Map reverseLookupMap>;

        $r15 = virtualinvoke r13.<org.waveprotocol.box.server.waveserver.TokenQueryType: java.lang.String getToken()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
