public class com.sun.jwt.resources.editor.editors.FontEditor extends javax.swing.JPanel
{
    private com.sun.lwuit.EditorFont font;
    private com.sun.lwuit.util.EditableResources resources;
    private java.lang.String fontName;
    public static final int[] FONT_FACE_VALUES;
    public static final int[] FONT_STYLE_VALUES;
    public static final int[] FONT_SIZE_VALUES;
    private static final java.lang.String[] ANTI_ALIASING_STRINGS;
    private boolean completedConstruction;
    private static final java.lang.Object[] ANTI_ALIASING_VALUES;
    private boolean factoryCreation;
    private javax.swing.JComboBox antiAliasing;
    private javax.swing.JCheckBox bold;
    private javax.swing.JTextArea charset;
    private javax.swing.JCheckBox createBitmapCheck;
    private javax.swing.JComboBox fontFamily;
    private javax.swing.JSpinner fontSize;
    private javax.swing.JCheckBox italic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea preview;
    private javax.swing.JComboBox systemFontFace;
    private javax.swing.JComboBox systemFontSize;
    private javax.swing.JComboBox systemFontStyle;

    public void <init>(com.sun.lwuit.util.EditableResources, com.sun.lwuit.Font, java.lang.String)
    {
        java.lang.Integer $r39;
        java.awt.GraphicsEnvironment $r52;
        javax.swing.JComboBox $r10, $r12, $r14, $r18, $r19, $r33, $r37, $r50, $r54;
        com.sun.lwuit.util.EditableResources r3;
        java.lang.Object[] $r28, $r29;
        java.lang.Double $r58;
        javax.swing.SpinnerNumberModel $r56;
        com.sun.lwuit.EditorFont $r2, $r5, $r7, $r20, $r30, $r42, $r43, $r45, $r48, $r59;
        java.lang.String r4, $r6, $r8, r34, $r36, $r44, $r47, $r60;
        com.sun.jwt.resources.editor.editors.FontEditor$2 $r24;
        com.sun.jwt.resources.editor.editors.FontEditor$1 $r27;
        javax.swing.JTextArea $r22, $r25, $r46, $r61;
        javax.swing.text.AbstractDocument r63;
        int[] $r11, $r13, $r15;
        javax.swing.DefaultComboBoxModel $r16, $r51;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Font $r35;
        javax.swing.JCheckBox $r40, $r41, $r49;
        javax.swing.text.Document $r23, $r26, $r62;
        java.lang.String[] $r9, $r17, $r53;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        javax.swing.JSpinner $r38, $r55, $r57;
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.lang.Object $r21, $r31, $r32;
        com.sun.lwuit.Font r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r3 := @parameter0: com.sun.lwuit.util.EditableResources;

        r1 := @parameter1: com.sun.lwuit.Font;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r2 = (com.sun.lwuit.EditorFont) r1;

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font> = $r2;

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.util.EditableResources resources> = r3;

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: java.lang.String fontName> = r4;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void initComponents()>();

        $r5 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r6 = virtualinvoke $r5.<com.sun.lwuit.EditorFont: java.lang.String getBitmapCharset()>();

        if $r6 == null goto label1;

        $r43 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r44 = virtualinvoke $r43.<com.sun.lwuit.EditorFont: java.lang.String getBitmapCharset()>();

        $i9 = virtualinvoke $r44.<java.lang.String: int length()>();

        if $i9 <= 0 goto label1;

        $r46 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r45 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r47 = virtualinvoke $r45.<com.sun.lwuit.EditorFont: java.lang.String getBitmapCharset()>();

        virtualinvoke $r46.<javax.swing.JTextArea: void setText(java.lang.String)>($r47);

     label1:
        $r48 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $z2 = virtualinvoke $r48.<com.sun.lwuit.EditorFont: boolean isIncludesBitmap()>();

        $r49 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        virtualinvoke $r49.<javax.swing.JCheckBox: void setSelected(boolean)>($z2);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void toggleBitmapFont(boolean)>($z2);

        $r50 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        $r51 = new javax.swing.DefaultComboBoxModel;

        $r52 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r53 = virtualinvoke $r52.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        specialinvoke $r51.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r53);

        virtualinvoke $r50.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r51);

        $r54 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        virtualinvoke $r54.<javax.swing.JComboBox: void setSelectedIndex(int)>(0);

        $r55 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $r56 = new javax.swing.SpinnerNumberModel;

        specialinvoke $r56.<javax.swing.SpinnerNumberModel: void <init>(double,double,double,double)>(13.0, 3.0, 120.0, 1.0);

        virtualinvoke $r55.<javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>($r56);

        $r57 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $r58 = new java.lang.Double;

        specialinvoke $r58.<java.lang.Double: void <init>(double)>(13.0);

        virtualinvoke $r57.<javax.swing.JSpinner: void setValue(java.lang.Object)>($r58);

        $r59 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r60 = virtualinvoke $r59.<com.sun.lwuit.EditorFont: java.lang.String getLookupFont()>();

        if $r60 != null goto label2;

        $r42 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        virtualinvoke $r42.<com.sun.lwuit.EditorFont: void setLookupFont(java.lang.String)>("Arial-plain-12");

     label2:
        $r7 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r8 = virtualinvoke $r7.<com.sun.lwuit.EditorFont: java.lang.String getLookupFont()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i8 = lengthof $r9;

        i10 = 0;

     label3:
        if i10 >= $i8 goto label5;

        r34 = $r9[i10];

        $r35 = staticinvoke <java.awt.Font: java.awt.Font decode(java.lang.String)>(r34);

        if $r35 == null goto label4;

        $r36 = virtualinvoke $r35.<java.awt.Font: java.lang.String getFamily()>();

        $r37 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        virtualinvoke $r37.<javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>($r36);

        $r38 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $i7 = virtualinvoke $r35.<java.awt.Font: int getSize()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r38.<javax.swing.JSpinner: void setValue(java.lang.Object)>($r39);

        $r40 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        $z0 = virtualinvoke $r35.<java.awt.Font: boolean isBold()>();

        virtualinvoke $r40.<javax.swing.JCheckBox: void setSelected(boolean)>($z0);

        $r41 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        $z1 = virtualinvoke $r35.<java.awt.Font: boolean isItalic()>();

        virtualinvoke $r41.<javax.swing.JCheckBox: void setSelected(boolean)>($z1);

        goto label5;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        $r10 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        $i0 = virtualinvoke r1.<com.sun.lwuit.Font: int getFace()>();

        $r11 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_FACE_VALUES>;

        $i1 = staticinvoke <com.sun.jwt.resources.editor.editors.FontEditor: int getSystemFontOffset(int,int[])>($i0, $r11);

        virtualinvoke $r10.<javax.swing.JComboBox: void setSelectedIndex(int)>($i1);

        $r12 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        $i2 = virtualinvoke r1.<com.sun.lwuit.Font: int getSize()>();

        $r13 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_SIZE_VALUES>;

        $i3 = staticinvoke <com.sun.jwt.resources.editor.editors.FontEditor: int getSystemFontOffset(int,int[])>($i2, $r13);

        virtualinvoke $r12.<javax.swing.JComboBox: void setSelectedIndex(int)>($i3);

        $r14 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        $i4 = virtualinvoke r1.<com.sun.lwuit.Font: int getStyle()>();

        $r15 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_STYLE_VALUES>;

        $i5 = staticinvoke <com.sun.jwt.resources.editor.editors.FontEditor: int getSystemFontOffset(int,int[])>($i4, $r15);

        virtualinvoke $r14.<javax.swing.JComboBox: void setSelectedIndex(int)>($i5);

        $r18 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        $r16 = new javax.swing.DefaultComboBoxModel;

        $r17 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.String[] ANTI_ALIASING_STRINGS>;

        specialinvoke $r16.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r17);

        virtualinvoke $r18.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r16);

        $r19 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        virtualinvoke $r19.<javax.swing.JComboBox: void setSelectedIndex(int)>(1);

        $r20 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r21 = virtualinvoke $r20.<com.sun.lwuit.EditorFont: java.lang.Object getBitmapAntiAliasing()>();

        if $r21 == null goto label8;

        i11 = 0;

     label6:
        $r28 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES>;

        $i6 = lengthof $r28;

        if i11 >= $i6 goto label8;

        $r29 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES>;

        $r31 = $r29[i11];

        $r30 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        $r32 = virtualinvoke $r30.<com.sun.lwuit.EditorFont: java.lang.Object getBitmapAntiAliasing()>();

        if $r31 != $r32 goto label7;

        $r33 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        virtualinvoke $r33.<javax.swing.JComboBox: void setSelectedIndex(int)>(i11);

        goto label8;

     label7:
        i11 = i11 + 1;

        goto label6;

     label8:
        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        $r61 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r62 = virtualinvoke $r61.<javax.swing.JTextArea: javax.swing.text.Document getDocument()>();

        $z3 = $r62 instanceof javax.swing.text.AbstractDocument;

        if $z3 == 0 goto label9;

        $r25 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r26 = virtualinvoke $r25.<javax.swing.JTextArea: javax.swing.text.Document getDocument()>();

        r63 = (javax.swing.text.AbstractDocument) $r26;

        $r27 = new com.sun.jwt.resources.editor.editors.FontEditor$1;

        specialinvoke $r27.<com.sun.jwt.resources.editor.editors.FontEditor$1: void <init>(com.sun.jwt.resources.editor.editors.FontEditor,javax.swing.text.AbstractDocument)>(r0, r63);

        virtualinvoke r63.<javax.swing.text.AbstractDocument: void setDocumentFilter(javax.swing.text.DocumentFilter)>($r27);

     label9:
        $r22 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r23 = virtualinvoke $r22.<javax.swing.JTextArea: javax.swing.text.Document getDocument()>();

        $r24 = new com.sun.jwt.resources.editor.editors.FontEditor$2;

        specialinvoke $r24.<com.sun.jwt.resources.editor.editors.FontEditor$2: void <init>(com.sun.jwt.resources.editor.editors.FontEditor)>(r0);

        interfaceinvoke $r23.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r24);

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean completedConstruction> = 1;

        return;
    }

    public com.sun.lwuit.EditorFont createFont()
    {
        int[] $r2, $r4, $r6;
        javax.swing.JComboBox $r1, $r3, $r5, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.Font $r9;
        com.sun.lwuit.util.EditableResources $r19;
        javax.swing.JCheckBox $r32;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r22, $r26, $r27, $r28, $r29;
        java.lang.Object[] $r33;
        com.sun.lwuit.EditorFont $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r11, $r14, $r18, $r23, r24, $r25, $r30, $r37;
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.lang.Object $r35;
        javax.swing.JTextArea $r8, $r36;
        com.sun.lwuit.Font $r7;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        $z0 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean completedConstruction>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_FACE_VALUES>;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        $i0 = virtualinvoke $r1.<javax.swing.JComboBox: int getSelectedIndex()>();

        $i1 = $r2[$i0];

        $r4 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_STYLE_VALUES>;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        $i2 = virtualinvoke $r3.<javax.swing.JComboBox: int getSelectedIndex()>();

        $i3 = $r4[$i2];

        $r6 = <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_SIZE_VALUES>;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        $i4 = virtualinvoke $r5.<javax.swing.JComboBox: int getSelectedIndex()>();

        $i5 = $r6[$i4];

        $r7 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createSystemFont(int,int,int)>($i1, $i3, $i5);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        $r9 = virtualinvoke $r8.<javax.swing.JTextArea: java.awt.Font getFont()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.awt.Font: java.lang.String getFamily()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r9.<java.awt.Font: boolean isBold()>();

        if $z1 == 0 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $z3 = virtualinvoke $r9.<java.awt.Font: boolean isItalic()>();

        if $z3 == 0 goto label2;

        $r23 = "bolditalic";

        goto label3;

     label2:
        $r23 = "bold";

     label3:
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label4:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $z2 = virtualinvoke $r9.<java.awt.Font: boolean isItalic()>();

        if $z2 == 0 goto label5;

        $r25 = "italic";

        goto label6;

     label5:
        $r25 = "plain";

     label6:
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i6 = virtualinvoke $r9.<java.awt.Font: int getSize()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new com.sun.lwuit.EditorFont;

        $r32 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        $z4 = virtualinvoke $r32.<javax.swing.JCheckBox: boolean isSelected()>();

        $r33 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES>;

        $r34 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        $i7 = virtualinvoke $r34.<javax.swing.JComboBox: int getSelectedIndex()>();

        $r35 = $r33[$i7];

        $r36 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r37 = virtualinvoke $r36.<javax.swing.JTextArea: java.lang.String getText()>();

        specialinvoke $r31.<com.sun.lwuit.EditorFont: void <init>(com.sun.lwuit.Font,byte[],java.lang.String,boolean,java.lang.Object,java.lang.String)>($r7, null, $r30, $z4, $r35, $r37);

        $z5 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean factoryCreation>;

        if $z5 != 0 goto label8;

        $r19 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.util.EditableResources resources>;

        $r18 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: java.lang.String fontName>;

        virtualinvoke $r19.<com.sun.lwuit.util.EditableResources: void setFont(java.lang.String,com.sun.lwuit.Font)>($r18, $r31);

     label8:
        return $r31;
    }

    public static int getSystemFontOffset(int, int[])
    {
        int[] r0;
        int $i0, i1, $i2, i3;

        i1 := @parameter0: int;

        r0 := @parameter1: int[];

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $i2 = r0[i3];

        if $i2 != i1 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void updatePreview()
    {
        javax.swing.JComboBox $r2;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Font $r28;
        javax.swing.JCheckBox $r8, $r11, $r15;
        java.lang.StringBuilder $r1, $r5, $r6, $r9, $r10, $r12, $r13, $r14, $r16, $r20, $r21, $r22, $r26;
        int $i0;
        java.lang.String $r4, $r7, $r17, r18, $r19, $r27, $r32;
        java.lang.Number $r25;
        javax.swing.JSpinner $r23;
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.lang.Object $r3, $r24;
        javax.swing.JTextArea $r29, $r30, $r31;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        $z0 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean completedConstruction>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        $r3 = virtualinvoke $r2.<javax.swing.JComboBox: java.lang.Object getSelectedItem()>();

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        $z1 = virtualinvoke $r8.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z1 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r15 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        $z3 = virtualinvoke $r15.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z3 == 0 goto label2;

        $r17 = "bolditalic";

        goto label3;

     label2:
        $r17 = "bold";

     label3:
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        $z2 = virtualinvoke $r11.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z2 == 0 goto label5;

        $r19 = "italic";

        goto label6;

     label5:
        $r19 = "plain";

     label6:
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r23 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $r24 = virtualinvoke $r23.<javax.swing.JSpinner: java.lang.Object getValue()>();

        $r25 = (java.lang.Number) $r24;

        $i0 = virtualinvoke $r25.<java.lang.Number: int intValue()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <java.awt.Font: java.awt.Font decode(java.lang.String)>($r27);

        $r29 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r29.<javax.swing.JTextArea: void setFont(java.awt.Font)>($r28);

        $r30 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        $r31 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r32 = virtualinvoke $r31.<javax.swing.JTextArea: java.lang.String getText()>();

        virtualinvoke $r30.<javax.swing.JTextArea: void setText(java.lang.String)>($r32);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont createFont()>();

        return;
    }

    private void initComponents()
    {
        javax.swing.JComboBox $r35, $r36, $r59, $r60, $r75, $r76, $r77, $r80, $r81, $r82, $r85, $r86, $r87, $r113, $r116, $r119, $r129, $r131, $r157, $r159, $r161, $r168, $r191, $r216, $r222, $r228, $r229, $r230;
        org.jdesktop.layout.GroupLayout$SequentialGroup $r90, $r91, $r109, $r110, $r112, $r114, $r115, $r117, $r118, $r120, $r122, $r124, $r125, $r127, $r141, $r142, $r145, $r146, $r152, $r153, $r163, $r164, $r170, $r171, $r177, $r178, $r186, $r187, $r193, $r194, $r200, $r201, $r207, $r208;
        javax.swing.JScrollPane $r37, $r44, $r45, $r46, $r47, $r48, $r56, $r133, $r135, $r198, $r203, $r217, $r219;
        com.sun.jwt.resources.editor.editors.FontEditor$AATextArea $r220;
        javax.swing.DefaultComboBoxModel $r232, $r233, $r234;
        javax.swing.JCheckBox $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r123, $r126, $r139, $r150, $r182, $r184, $r223, $r224, $r225;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45;
        com.sun.jwt.resources.editor.editors.FontEditor$FormListener $r231;
        org.jdesktop.layout.GroupLayout$ParallelGroup $r89, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r111, $r121, $r128, $r130, $r132, $r134, $r136, $r138, $r140, $r143, $r144, $r147, $r149, $r151, $r154, $r156, $r158, $r160, $r162, $r165, $r167, $r169, $r172, $r174, $r176, $r179, $r181, $r183, $r185, $r188, $r190, $r192, $r195, $r197, $r199, $r202, $r204, $r206, $r209;
        javax.swing.JTextArea $r38, $r39, $r40, $r41, $r42, $r43, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r218;
        org.jdesktop.layout.GroupLayout $r235;
        java.lang.String[] $r74, $r79, $r84;
        javax.swing.JSpinner $r57, $r58, $r137, $r175, $r221;
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        javax.swing.JLabel $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r69, $r70, $r71, $r72, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r148, $r155, $r166, $r173, $r180, $r189, $r196, $r205, $r210, $r211, $r212, $r213, $r214, $r215, $r226, $r227;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        $r210 = new javax.swing.JLabel;

        specialinvoke $r210.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel1> = $r210;

        $r211 = new javax.swing.JLabel;

        specialinvoke $r211.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel2> = $r211;

        $r212 = new javax.swing.JLabel;

        specialinvoke $r212.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel3> = $r212;

        $r213 = new javax.swing.JLabel;

        specialinvoke $r213.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel5> = $r213;

        $r214 = new javax.swing.JLabel;

        specialinvoke $r214.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel4> = $r214;

        $r215 = new javax.swing.JLabel;

        specialinvoke $r215.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel6> = $r215;

        $r216 = new javax.swing.JComboBox;

        specialinvoke $r216.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing> = $r216;

        $r217 = new javax.swing.JScrollPane;

        specialinvoke $r217.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane1> = $r217;

        $r218 = new javax.swing.JTextArea;

        specialinvoke $r218.<javax.swing.JTextArea: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset> = $r218;

        $r219 = new javax.swing.JScrollPane;

        specialinvoke $r219.<javax.swing.JScrollPane: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2> = $r219;

        $r220 = new com.sun.jwt.resources.editor.editors.FontEditor$AATextArea;

        specialinvoke $r220.<com.sun.jwt.resources.editor.editors.FontEditor$AATextArea: void <init>(com.sun.jwt.resources.editor.editors.FontEditor,com.sun.jwt.resources.editor.editors.FontEditor$1)>(r0, null);

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview> = $r220;

        $r221 = new javax.swing.JSpinner;

        specialinvoke $r221.<javax.swing.JSpinner: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize> = $r221;

        $r222 = new javax.swing.JComboBox;

        specialinvoke $r222.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily> = $r222;

        $r223 = new javax.swing.JCheckBox;

        specialinvoke $r223.<javax.swing.JCheckBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold> = $r223;

        $r224 = new javax.swing.JCheckBox;

        specialinvoke $r224.<javax.swing.JCheckBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic> = $r224;

        $r225 = new javax.swing.JCheckBox;

        specialinvoke $r225.<javax.swing.JCheckBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck> = $r225;

        $r226 = new javax.swing.JLabel;

        specialinvoke $r226.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel7> = $r226;

        $r227 = new javax.swing.JLabel;

        specialinvoke $r227.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel8> = $r227;

        $r228 = new javax.swing.JComboBox;

        specialinvoke $r228.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace> = $r228;

        $r229 = new javax.swing.JComboBox;

        specialinvoke $r229.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle> = $r229;

        $r230 = new javax.swing.JComboBox;

        specialinvoke $r230.<javax.swing.JComboBox: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize> = $r230;

        $r231 = new com.sun.jwt.resources.editor.editors.FontEditor$FormListener;

        specialinvoke $r231.<com.sun.jwt.resources.editor.editors.FontEditor$FormListener: void <init>(com.sun.jwt.resources.editor.editors.FontEditor)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void setName(java.lang.String)>("Form");

        $r23 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel1>;

        virtualinvoke $r23.<javax.swing.JLabel: void setText(java.lang.String)>("Family");

        $r24 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel1>;

        virtualinvoke $r24.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel1");

        $r25 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r25.<javax.swing.JLabel: void setText(java.lang.String)>("Size");

        $r26 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel2>;

        virtualinvoke $r26.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel2");

        $r27 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel3>;

        virtualinvoke $r27.<javax.swing.JLabel: void setText(java.lang.String)>("Style");

        $r28 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel3>;

        virtualinvoke $r28.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel3");

        $r29 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel5>;

        virtualinvoke $r29.<javax.swing.JLabel: void setText(java.lang.String)>("Preview");

        $r30 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel5>;

        virtualinvoke $r30.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel5");

        $r31 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel4>;

        virtualinvoke $r31.<javax.swing.JLabel: void setText(java.lang.String)>("Charset");

        $r32 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel4>;

        virtualinvoke $r32.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel4");

        $r33 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel6>;

        virtualinvoke $r33.<javax.swing.JLabel: void setText(java.lang.String)>("Anti-Aliasing");

        $r34 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel6>;

        virtualinvoke $r34.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel6");

        $r35 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        virtualinvoke $r35.<javax.swing.JComboBox: void setName(java.lang.String)>("antiAliasing");

        $r36 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        virtualinvoke $r36.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r37 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane1>;

        virtualinvoke $r37.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane1");

        $r38 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r38.<javax.swing.JTextArea: void setColumns(int)>(20);

        $r39 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r39.<javax.swing.JTextArea: void setLineWrap(boolean)>(1);

        $r40 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r40.<javax.swing.JTextArea: void setRows(int)>(5);

        $r41 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r41.<javax.swing.JTextArea: void setText(java.lang.String)>("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:!@/\\*()[]{}|#$%^&<>?\'\"+- ");

        $r42 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r42.<javax.swing.JTextArea: void setName(java.lang.String)>("charset");

        $r44 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane1>;

        $r43 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r44.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r43);

        $r45 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r45.<javax.swing.JScrollPane: void setHorizontalScrollBarPolicy(int)>(31);

        $r46 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r46.<javax.swing.JScrollPane: void setVerticalScrollBarPolicy(int)>(21);

        $r47 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r47.<javax.swing.JScrollPane: void setName(java.lang.String)>("jScrollPane2");

        $r48 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        virtualinvoke $r48.<javax.swing.JScrollPane: void setOpaque(boolean)>(0);

        $r49 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r49.<javax.swing.JTextArea: void setColumns(int)>(20);

        $r50 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r50.<javax.swing.JTextArea: void setEditable(boolean)>(0);

        $r51 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r51.<javax.swing.JTextArea: void setLineWrap(boolean)>(1);

        $r52 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r52.<javax.swing.JTextArea: void setRows(int)>(5);

        $r53 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r53.<javax.swing.JTextArea: void setName(java.lang.String)>("preview");

        $r54 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r54.<javax.swing.JTextArea: void setOpaque(boolean)>(0);

        $r56 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        $r55 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        virtualinvoke $r56.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>($r55);

        $r57 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        virtualinvoke $r57.<javax.swing.JSpinner: void setName(java.lang.String)>("fontSize");

        $r58 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        virtualinvoke $r58.<javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>($r231);

        $r59 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        virtualinvoke $r59.<javax.swing.JComboBox: void setName(java.lang.String)>("fontFamily");

        $r60 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        virtualinvoke $r60.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r61 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        virtualinvoke $r61.<javax.swing.JCheckBox: void setText(java.lang.String)>("Bold");

        $r62 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        virtualinvoke $r62.<javax.swing.JCheckBox: void setName(java.lang.String)>("bold");

        $r63 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        virtualinvoke $r63.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r64 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        virtualinvoke $r64.<javax.swing.JCheckBox: void setText(java.lang.String)>("Italic");

        $r65 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        virtualinvoke $r65.<javax.swing.JCheckBox: void setName(java.lang.String)>("italic");

        $r66 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        virtualinvoke $r66.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r67 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        virtualinvoke $r67.<javax.swing.JCheckBox: void setName(java.lang.String)>("createBitmapCheck");

        $r68 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        virtualinvoke $r68.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r69 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel7>;

        virtualinvoke $r69.<javax.swing.JLabel: void setText(java.lang.String)>("Create Bitmap");

        $r70 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel7>;

        virtualinvoke $r70.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel7");

        $r71 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel8>;

        virtualinvoke $r71.<javax.swing.JLabel: void setText(java.lang.String)>("System Font");

        $r72 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel8>;

        virtualinvoke $r72.<javax.swing.JLabel: void setName(java.lang.String)>("jLabel8");

        $r75 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        $r232 = new javax.swing.DefaultComboBoxModel;

        $r74 = newarray (java.lang.String)[3];

        $r74[0] = "SYSTEM";

        $r74[1] = "MONOSPACE";

        $r74[2] = "PROPORTIONAL";

        specialinvoke $r232.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r74);

        virtualinvoke $r75.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r232);

        $r76 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        virtualinvoke $r76.<javax.swing.JComboBox: void setName(java.lang.String)>("systemFontFace");

        $r77 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        virtualinvoke $r77.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r80 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        $r233 = new javax.swing.DefaultComboBoxModel;

        $r79 = newarray (java.lang.String)[4];

        $r79[0] = "PLAIN";

        $r79[1] = "BOLD";

        $r79[2] = "ITALIC";

        $r79[3] = "BOLD ITALIC";

        specialinvoke $r233.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r79);

        virtualinvoke $r80.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r233);

        $r81 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        virtualinvoke $r81.<javax.swing.JComboBox: void setName(java.lang.String)>("systemFontStyle");

        $r82 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        virtualinvoke $r82.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r85 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        $r234 = new javax.swing.DefaultComboBoxModel;

        $r84 = newarray (java.lang.String)[3];

        $r84[0] = "MEDIUM";

        $r84[1] = "SMALL";

        $r84[2] = "LARGE";

        specialinvoke $r234.<javax.swing.DefaultComboBoxModel: void <init>(java.lang.Object[])>($r84);

        virtualinvoke $r85.<javax.swing.JComboBox: void setModel(javax.swing.ComboBoxModel)>($r234);

        $r86 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        virtualinvoke $r86.<javax.swing.JComboBox: void setName(java.lang.String)>("systemFontSize");

        $r87 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        virtualinvoke $r87.<javax.swing.JComboBox: void addActionListener(java.awt.event.ActionListener)>($r231);

        $r235 = new org.jdesktop.layout.GroupLayout;

        specialinvoke $r235.<org.jdesktop.layout.GroupLayout: void <init>(java.awt.Container)>(r0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void setLayout(java.awt.LayoutManager)>($r235);

        $r89 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r90 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r91 = virtualinvoke $r90.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r92 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r93 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel2>;

        $r94 = virtualinvoke $r92.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r93);

        $r95 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel3>;

        $r96 = virtualinvoke $r94.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r95);

        $r97 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel5>;

        $r98 = virtualinvoke $r96.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r97);

        $r99 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel4>;

        $r100 = virtualinvoke $r98.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r99);

        $r101 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel6>;

        $r102 = virtualinvoke $r100.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r101);

        $r103 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel1>;

        $r104 = virtualinvoke $r102.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r103);

        $r105 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel7>;

        $r106 = virtualinvoke $r104.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r105);

        $r107 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel8>;

        $r108 = virtualinvoke $r106.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r107);

        $r109 = virtualinvoke $r91.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r108);

        $r110 = virtualinvoke $r109.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(55, 55, 55);

        $r111 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r112 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r113 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        $r114 = virtualinvoke $r112.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r113, 0, 158, 32767);

        $r115 = virtualinvoke $r114.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r116 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        $r117 = virtualinvoke $r115.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r116, 0, 134, 32767);

        $r118 = virtualinvoke $r117.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(18, 18, 18);

        $r119 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        $r120 = virtualinvoke $r118.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>($r119, 0, 118, 32767);

        $r121 = virtualinvoke $r111.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r120);

        $r122 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r123 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        $r124 = virtualinvoke $r122.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r123);

        $r125 = virtualinvoke $r124.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r126 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        $r127 = virtualinvoke $r125.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>($r126);

        $r128 = virtualinvoke $r121.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r127);

        $r129 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        $r130 = virtualinvoke $r128.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(int,java.awt.Component,int,int,int)>(2, $r129, 0, 435, 32767);

        $r131 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        $r132 = virtualinvoke $r130.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r131, 0, 435, 32767);

        $r133 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane1>;

        $i1 = (int) -1;

        $r134 = virtualinvoke $r132.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r133, $i1, 435, 32767);

        $r135 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        $i3 = (int) -1;

        $r136 = virtualinvoke $r134.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r135, $i3, 435, 32767);

        $r137 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $i5 = (int) -1;

        $r138 = virtualinvoke $r136.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r137, $i5, 435, 32767);

        $r139 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        $r140 = virtualinvoke $r138.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r139);

        $r141 = virtualinvoke $r110.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r140);

        $r142 = virtualinvoke $r141.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r143 = virtualinvoke $r89.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r142);

        virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group)>($r143);

        $r144 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r145 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup()>();

        $r146 = virtualinvoke $r145.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r147 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r148 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel7>;

        $r149 = virtualinvoke $r147.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r148);

        $r150 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        $r151 = virtualinvoke $r149.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r150);

        $r152 = virtualinvoke $r146.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r151);

        $r153 = virtualinvoke $r152.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r154 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r155 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel8>;

        $r156 = virtualinvoke $r154.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r155);

        $r157 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        $i7 = (int) -2;

        $i9 = (int) -1;

        $i11 = (int) -2;

        $r158 = virtualinvoke $r156.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r157, $i7, $i9, $i11);

        $r159 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        $i13 = (int) -2;

        $i15 = (int) -1;

        $i17 = (int) -2;

        $r160 = virtualinvoke $r158.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r159, $i13, $i15, $i17);

        $r161 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        $i19 = (int) -2;

        $i21 = (int) -1;

        $i23 = (int) -2;

        $r162 = virtualinvoke $r160.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r161, $i19, $i21, $i23);

        $r163 = virtualinvoke $r153.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r162);

        $r164 = virtualinvoke $r163.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r165 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r166 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel1>;

        $r167 = virtualinvoke $r165.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r166);

        $r168 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        $i25 = (int) -2;

        $i27 = (int) -1;

        $i29 = (int) -2;

        $r169 = virtualinvoke $r167.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r168, $i25, $i27, $i29);

        $r170 = virtualinvoke $r164.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r169);

        $r171 = virtualinvoke $r170.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r172 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r173 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel2>;

        $r174 = virtualinvoke $r172.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r173);

        $r175 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        $i31 = (int) -2;

        $i33 = (int) -1;

        $i35 = (int) -2;

        $r176 = virtualinvoke $r174.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r175, $i31, $i33, $i35);

        $r177 = virtualinvoke $r171.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r176);

        $r178 = virtualinvoke $r177.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r179 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r180 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel3>;

        $r181 = virtualinvoke $r179.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r180);

        $r182 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        $r183 = virtualinvoke $r181.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r182);

        $r184 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        $r185 = virtualinvoke $r183.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r184);

        $r186 = virtualinvoke $r178.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r185);

        $r187 = virtualinvoke $r186.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r188 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(3);

        $r189 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel6>;

        $r190 = virtualinvoke $r188.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r189);

        $r191 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        $i37 = (int) -2;

        $i39 = (int) -1;

        $i41 = (int) -2;

        $r192 = virtualinvoke $r190.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r191, $i37, $i39, $i41);

        $r193 = virtualinvoke $r187.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r192);

        $r194 = virtualinvoke $r193.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r195 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r196 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel4>;

        $r197 = virtualinvoke $r195.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r196);

        $r198 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane1>;

        $i43 = (int) -1;

        $r199 = virtualinvoke $r197.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r198, $i43, 46, 32767);

        $r200 = virtualinvoke $r194.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r199);

        $r201 = virtualinvoke $r200.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)>(0);

        $r202 = virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int)>(1);

        $r203 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JScrollPane jScrollPane2>;

        $i45 = (int) -1;

        $r204 = virtualinvoke $r202.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int)>($r203, $i45, 44, 32767);

        $r205 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JLabel jLabel5>;

        $r206 = virtualinvoke $r204.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component)>($r205);

        $r207 = virtualinvoke $r201.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>($r206);

        $r208 = virtualinvoke $r207.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()>();

        $r209 = virtualinvoke $r144.<org.jdesktop.layout.GroupLayout$ParallelGroup: org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group)>($r208);

        virtualinvoke $r235.<org.jdesktop.layout.GroupLayout: void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group)>($r209);

        return;
    }

    private void systemFontFaceActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void systemFontStyleactionInEditableComponent(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void systemFontSizeActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void createBitmapCheckActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        javax.swing.JCheckBox $r1;
        java.awt.event.ActionEvent r2;
        boolean $z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r2 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        $z0 = virtualinvoke $r1.<javax.swing.JCheckBox: boolean isSelected()>();

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void toggleBitmapFont(boolean)>($z0);

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void fontFamilyActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void fontSizeStateChanged(javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void boldActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void italicActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void antiAliasingActionPerformed(java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter0: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    private void toggleBitmapFont(boolean)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        javax.swing.JTextArea $r2;
        javax.swing.JComboBox $r1;
        boolean z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        virtualinvoke $r1.<javax.swing.JComboBox: void setEnabled(boolean)>(z0);

        $r2 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        virtualinvoke $r2.<javax.swing.JTextArea: void setEnabled(boolean)>(z0);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont createFont()>();

        return;
    }

    public boolean isFactoryCreation()
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        boolean $z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        $z0 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean factoryCreation>;

        return $z0;
    }

    public void setFactoryCreation(boolean)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        boolean z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        z0 := @parameter0: boolean;

        r0.<com.sun.jwt.resources.editor.editors.FontEditor: boolean factoryCreation> = z0;

        return;
    }

    public com.sun.lwuit.Font createBitmapFont()
    {
        java.awt.Color $r13, $r14;
        java.awt.geom.Rectangle2D $r30;
        javax.swing.JComboBox $r9;
        java.lang.Object[] $r11;
        java.lang.String $r20, $r27;
        java.awt.FontMetrics $r17;
        java.awt.font.FontRenderContext $r18;
        java.awt.RenderingHints$Key $r3, $r5, $r7, $r10;
        javax.swing.JTextArea $r15, $r19, $r28, $r31;
        int[] r21, r22, r35;
        boolean $z0;
        java.awt.image.BufferedImage $r0, $r23;
        java.awt.Font $r16, $r29, $r32;
        java.awt.Graphics $r1, $r24;
        java.awt.Graphics2D r33, r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.sun.jwt.resources.editor.editors.FontEditor r8;
        com.sun.lwuit.Image $r25;
        java.lang.Object $r2, $r4, $r6, $r12;
        com.sun.lwuit.Font $r26;

        r8 := @this: com.sun.jwt.resources.editor.editors.FontEditor;

        $r0 = new java.awt.image.BufferedImage;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(5000, 50, 1);

        $r1 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        r33 = (java.awt.Graphics2D) $r1;

        $r3 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_RENDERING>;

        $r2 = <java.awt.RenderingHints: java.lang.Object VALUE_RENDER_QUALITY>;

        virtualinvoke r33.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r3, $r2);

        $r5 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_COLOR_RENDERING>;

        $r4 = <java.awt.RenderingHints: java.lang.Object VALUE_COLOR_RENDER_QUALITY>;

        virtualinvoke r33.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r5, $r4);

        $r7 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_STROKE_CONTROL>;

        $r6 = <java.awt.RenderingHints: java.lang.Object VALUE_STROKE_NORMALIZE>;

        virtualinvoke r33.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r7, $r6);

        $r10 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_TEXT_ANTIALIASING>;

        $r11 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES>;

        $r9 = r8.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        $i0 = virtualinvoke $r9.<javax.swing.JComboBox: int getSelectedIndex()>();

        $r12 = $r11[$i0];

        virtualinvoke r33.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r10, $r12);

        $r13 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke r33.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r13);

        $i1 = virtualinvoke $r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i2 = virtualinvoke $r0.<java.awt.image.BufferedImage: int getHeight()>();

        virtualinvoke r33.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, $i1, $i2);

        $r14 = new java.awt.Color;

        specialinvoke $r14.<java.awt.Color: void <init>(int)>(16711680);

        virtualinvoke r33.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r14);

        $r15 = r8.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        $r16 = virtualinvoke $r15.<javax.swing.JTextArea: java.awt.Font getFont()>();

        virtualinvoke r33.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16);

        $r17 = virtualinvoke r33.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>();

        $r18 = virtualinvoke r33.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        $i3 = virtualinvoke $r17.<java.awt.FontMetrics: int getMaxDescent()>();

        $i4 = virtualinvoke $r17.<java.awt.FontMetrics: int getMaxAscent()>();

        $i5 = $i3 + $i4;

        $d0 = (double) $i5;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i6 = (int) $d1;

        $i7 = virtualinvoke $r17.<java.awt.FontMetrics: int getMaxAscent()>();

        $d2 = (double) $i7;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i8 = (int) $d3;

        $r19 = r8.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea charset>;

        $r20 = virtualinvoke $r19.<javax.swing.JTextArea: java.lang.String getText()>();

        $i9 = virtualinvoke $r20.<java.lang.String: int length()>();

        r21 = newarray (int)[$i9];

        $i10 = lengthof r21;

        r22 = newarray (int)[$i10];

        i25 = 0;

        i26 = 0;

     label1:
        $i11 = virtualinvoke $r20.<java.lang.String: int length()>();

        if i26 >= $i11 goto label4;

        r21[i26] = i25;

        $i20 = i26 + 1;

        $r27 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>(i26, $i20);

        virtualinvoke r33.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>($r27, i25, i8);

        $r28 = r8.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        $r29 = virtualinvoke $r28.<javax.swing.JTextArea: java.awt.Font getFont()>();

        $r30 = virtualinvoke $r29.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>($r27, $r18);

        $d4 = virtualinvoke $r30.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i21 = (int) $d5;

        r22[i26] = $i21;

        $r31 = r8.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JTextArea preview>;

        $r32 = virtualinvoke $r31.<javax.swing.JTextArea: java.awt.Font getFont()>();

        $z0 = virtualinvoke $r32.<java.awt.Font: boolean isItalic()>();

        if $z0 == 0 goto label2;

        $i24 = virtualinvoke $r17.<java.awt.FontMetrics: int getMaxAdvance()>();

        i25 = i25 + $i24;

        goto label3;

     label2:
        $i22 = r22[i26];

        $i23 = $i22 + 1;

        i25 = i25 + $i23;

     label3:
        i26 = i26 + 1;

        goto label1;

     label4:
        virtualinvoke r33.<java.awt.Graphics2D: void dispose()>();

        $r23 = new java.awt.image.BufferedImage;

        specialinvoke $r23.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i25, i6, 1);

        $r24 = virtualinvoke $r23.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        r34 = (java.awt.Graphics2D) $r24;

        virtualinvoke r34.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r0, 0, 0, null);

        virtualinvoke r34.<java.awt.Graphics2D: void dispose()>();

        $i12 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getWidth()>();

        $i13 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getHeight()>();

        $i14 = $i12 * $i13;

        r35 = newarray (int)[$i14];

        $i15 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getWidth()>();

        $i16 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getHeight()>();

        $i17 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getWidth()>();

        virtualinvoke $r23.<java.awt.image.BufferedImage: int[] getRGB(int,int,int,int,int[],int,int)>(0, 0, $i15, $i16, r35, 0, $i17);

        $i18 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getWidth()>();

        $i19 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getHeight()>();

        $r25 = staticinvoke <com.sun.lwuit.Image: com.sun.lwuit.Image createImage(int[],int,int)>(r35, $i18, $i19);

        $r26 = staticinvoke <com.sun.lwuit.Font: com.sun.lwuit.Font createBitmapFont(com.sun.lwuit.Image,int[],int[],java.lang.String)>($r25, r21, r22, $r20);

        return $r26;
    }

    static void access$000(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void updatePreview()>();

        return;
    }

    static javax.swing.JComboBox access$200(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JComboBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontFace>;

        return $r1;
    }

    static void access$300(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void systemFontFaceActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JComboBox access$400(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JComboBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontStyle>;

        return $r1;
    }

    static void access$500(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void systemFontStyleactionInEditableComponent(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JComboBox access$600(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JComboBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox systemFontSize>;

        return $r1;
    }

    static void access$700(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void systemFontSizeActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JCheckBox access$800(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JCheckBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox createBitmapCheck>;

        return $r1;
    }

    static void access$900(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void createBitmapCheckActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JComboBox access$1000(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JComboBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox fontFamily>;

        return $r1;
    }

    static void access$1100(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void fontFamilyActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JCheckBox access$1200(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JCheckBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox bold>;

        return $r1;
    }

    static void access$1300(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void boldActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JCheckBox access$1400(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JCheckBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JCheckBox italic>;

        return $r1;
    }

    static void access$1500(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void italicActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JComboBox access$1600(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JComboBox $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JComboBox antiAliasing>;

        return $r1;
    }

    static void access$1700(com.sun.jwt.resources.editor.editors.FontEditor, java.awt.event.ActionEvent)
    {
        com.sun.jwt.resources.editor.editors.FontEditor r0;
        java.awt.event.ActionEvent r1;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: java.awt.event.ActionEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void antiAliasingActionPerformed(java.awt.event.ActionEvent)>(r1);

        return;
    }

    static javax.swing.JSpinner access$1800(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        javax.swing.JSpinner $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: javax.swing.JSpinner fontSize>;

        return $r1;
    }

    static void access$1900(com.sun.jwt.resources.editor.editors.FontEditor, javax.swing.event.ChangeEvent)
    {
        javax.swing.event.ChangeEvent r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        r1 := @parameter1: javax.swing.event.ChangeEvent;

        specialinvoke r0.<com.sun.jwt.resources.editor.editors.FontEditor: void fontSizeStateChanged(javax.swing.event.ChangeEvent)>(r1);

        return;
    }

    static com.sun.lwuit.EditorFont access$2000(com.sun.jwt.resources.editor.editors.FontEditor)
    {
        com.sun.lwuit.EditorFont $r1;
        com.sun.jwt.resources.editor.editors.FontEditor r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.FontEditor;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.FontEditor: com.sun.lwuit.EditorFont font>;

        return $r1;
    }

    static java.lang.Object[] access$2100()
    {
        java.lang.Object[] $r0;

        $r0 = <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r3, $r13, r17;
        java.lang.String[] $r11, $r16, r18;
        int[] $r0, $r1, $r2;
        java.lang.Object $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15;

        $r0 = newarray (int)[3];

        $r0[0] = 0;

        $r0[1] = 32;

        $r0[2] = 64;

        <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_FACE_VALUES> = $r0;

        $r1 = newarray (int)[4];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_STYLE_VALUES> = $r1;

        $r2 = newarray (int)[3];

        $r2[0] = 0;

        $r2[1] = 8;

        $r2[2] = 16;

        <com.sun.jwt.resources.editor.editors.FontEditor: int[] FONT_SIZE_VALUES> = $r2;

     label1:
        $r3 = newarray (java.lang.Object)[7];

        $r4 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_OFF>;

        $r3[0] = $r4;

        $r5 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_ON>;

        $r3[1] = $r5;

        $r6 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_GASP>;

        $r3[2] = $r6;

        $r7 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_LCD_HBGR>;

        $r3[3] = $r7;

        $r8 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_LCD_HRGB>;

        $r3[4] = $r8;

        $r9 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_LCD_VBGR>;

        $r3[5] = $r9;

        $r10 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_LCD_VRGB>;

        $r3[6] = $r10;

        r17 = $r3;

        $r11 = newarray (java.lang.String)[7];

        $r11[0] = "Off";

        $r11[1] = "Simple";

        $r11[2] = "GASP";

        $r11[3] = "LCD HBGR";

        $r11[4] = "LCD HRGB";

        $r11[5] = "LCD VBGR";

        $r11[6] = "LCD VRGB";

        r18 = $r11;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r13 = newarray (java.lang.Object)[2];

        $r14 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_OFF>;

        $r13[0] = $r14;

        $r15 = <java.awt.RenderingHints: java.lang.Object VALUE_TEXT_ANTIALIAS_ON>;

        $r13[1] = $r15;

        r17 = $r13;

        $r16 = newarray (java.lang.String)[2];

        $r16[0] = "Off";

        $r16[1] = "Simple";

        r18 = $r16;

     label4:
        <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.String[] ANTI_ALIASING_STRINGS> = r18;

        <com.sun.jwt.resources.editor.editors.FontEditor: java.lang.Object[] ANTI_ALIASING_VALUES> = r17;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
