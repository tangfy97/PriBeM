class thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter extends java.lang.Object implements thredds.crawlabledataset.CrawlableDatasetFilter
{
    private boolean mustBeCollection;
    private thredds.crawlabledataset.filter.WildcardMatchOnNameFilter proxyFilter;
    final thredds.crawlabledataset.CrawlableDatasetAlias this$0;

    void <init>(thredds.crawlabledataset.CrawlableDatasetAlias, java.lang.String, boolean)
    {
        thredds.crawlabledataset.filter.WildcardMatchOnNameFilter $r2;
        java.lang.String r3;
        thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter r0;
        thredds.crawlabledataset.CrawlableDatasetAlias r1;
        boolean z0;

        r0 := @this: thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetAlias;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r0.<thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter: thredds.crawlabledataset.CrawlableDatasetAlias this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new thredds.crawlabledataset.filter.WildcardMatchOnNameFilter;

        specialinvoke $r2.<thredds.crawlabledataset.filter.WildcardMatchOnNameFilter: void <init>(java.lang.String)>(r3);

        r0.<thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter: thredds.crawlabledataset.filter.WildcardMatchOnNameFilter proxyFilter> = $r2;

        r0.<thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter: boolean mustBeCollection> = z0;

        return;
    }

    public java.lang.Object getConfigObject()
    {
        thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter r0;

        r0 := @this: thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter;

        return null;
    }

    public boolean accept(thredds.crawlabledataset.CrawlableDataset)
    {
        thredds.crawlabledataset.filter.WildcardMatchOnNameFilter $r2;
        thredds.crawlabledataset.CrawlableDataset r1;
        thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter r0;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $z0 = r0.<thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter: boolean mustBeCollection>;

        if $z0 == 0 goto label1;

        $z2 = interfaceinvoke r1.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<thredds.crawlabledataset.CrawlableDatasetAlias$MyFilter: thredds.crawlabledataset.filter.WildcardMatchOnNameFilter proxyFilter>;

        $z1 = virtualinvoke $r2.<thredds.crawlabledataset.filter.WildcardMatchOnNameFilter: boolean accept(thredds.crawlabledataset.CrawlableDataset)>(r1);

        return $z1;
    }
}
