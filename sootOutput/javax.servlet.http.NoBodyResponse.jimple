class javax.servlet.http.NoBodyResponse extends javax.servlet.http.HttpServletResponseWrapper
{
    private static final java.util.ResourceBundle lStrings;
    private javax.servlet.http.NoBodyOutputStream noBody;
    private java.io.PrintWriter writer;
    private boolean didSetContentLength;
    private boolean usingOutputStream;

    void <init>(javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.NoBodyResponse r0;
        javax.servlet.http.HttpServletResponse r1;
        javax.servlet.http.NoBodyOutputStream $r2;

        r0 := @this: javax.servlet.http.NoBodyResponse;

        r1 := @parameter0: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<javax.servlet.http.HttpServletResponseWrapper: void <init>(javax.servlet.http.HttpServletResponse)>(r1);

        $r2 = new javax.servlet.http.NoBodyOutputStream;

        specialinvoke $r2.<javax.servlet.http.NoBodyOutputStream: void <init>()>();

        r0.<javax.servlet.http.NoBodyResponse: javax.servlet.http.NoBodyOutputStream noBody> = $r2;

        return;
    }

    void setContentLength()
    {
        javax.servlet.http.NoBodyResponse r0;
        java.io.PrintWriter $r1, $r3;
        int $i0;
        javax.servlet.http.NoBodyOutputStream $r2;
        boolean $z0;

        r0 := @this: javax.servlet.http.NoBodyResponse;

        $z0 = r0.<javax.servlet.http.NoBodyResponse: boolean didSetContentLength>;

        if $z0 != 0 goto label2;

        $r1 = r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer>;

        if $r1 == null goto label1;

        $r3 = r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer>;

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

     label1:
        $r2 = r0.<javax.servlet.http.NoBodyResponse: javax.servlet.http.NoBodyOutputStream noBody>;

        $i0 = virtualinvoke $r2.<javax.servlet.http.NoBodyOutputStream: int getContentLength()>();

        virtualinvoke r0.<javax.servlet.http.NoBodyResponse: void setContentLength(int)>($i0);

     label2:
        return;
    }

    public void setContentLength(int)
    {
        javax.servlet.http.NoBodyResponse r0;
        int i0;

        r0 := @this: javax.servlet.http.NoBodyResponse;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.servlet.http.HttpServletResponseWrapper: void setContentLength(int)>(i0);

        r0.<javax.servlet.http.NoBodyResponse: boolean didSetContentLength> = 1;

        return;
    }

    public javax.servlet.ServletOutputStream getOutputStream() throws java.io.IOException
    {
        javax.servlet.http.NoBodyResponse r0;
        java.io.PrintWriter $r1;
        java.lang.IllegalStateException $r3;
        java.util.ResourceBundle $r4;
        javax.servlet.http.NoBodyOutputStream $r2;
        java.lang.String $r5;

        r0 := @this: javax.servlet.http.NoBodyResponse;

        $r1 = r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = <javax.servlet.http.NoBodyResponse: java.util.ResourceBundle lStrings>;

        $r5 = virtualinvoke $r4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("err.ise.getOutputStream");

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        r0.<javax.servlet.http.NoBodyResponse: boolean usingOutputStream> = 1;

        $r2 = r0.<javax.servlet.http.NoBodyResponse: javax.servlet.http.NoBodyOutputStream noBody>;

        return $r2;
    }

    public java.io.PrintWriter getWriter() throws java.io.UnsupportedEncodingException
    {
        javax.servlet.http.NoBodyResponse r0;
        java.io.PrintWriter $r1, $r2, $r6;
        java.lang.IllegalStateException $r7;
        java.util.ResourceBundle $r8;
        java.io.OutputStreamWriter $r3;
        javax.servlet.http.NoBodyOutputStream $r4;
        java.lang.String $r5, $r9;
        boolean $z0;

        r0 := @this: javax.servlet.http.NoBodyResponse;

        $z0 = r0.<javax.servlet.http.NoBodyResponse: boolean usingOutputStream>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = <javax.servlet.http.NoBodyResponse: java.util.ResourceBundle lStrings>;

        $r9 = virtualinvoke $r8.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("err.ise.getWriter");

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label1:
        $r1 = r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer>;

        if $r1 != null goto label2;

        $r3 = new java.io.OutputStreamWriter;

        $r4 = r0.<javax.servlet.http.NoBodyResponse: javax.servlet.http.NoBodyOutputStream noBody>;

        $r5 = virtualinvoke r0.<javax.servlet.http.NoBodyResponse: java.lang.String getCharacterEncoding()>();

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r4, $r5);

        $r6 = new java.io.PrintWriter;

        specialinvoke $r6.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer> = $r6;

     label2:
        $r2 = r0.<javax.servlet.http.NoBodyResponse: java.io.PrintWriter writer>;

        return $r2;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("javax.servlet.http.LocalStrings");

        <javax.servlet.http.NoBodyResponse: java.util.ResourceBundle lStrings> = $r0;

        return;
    }
}
