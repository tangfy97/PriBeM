public class org.eclipse.jdt.internal.compiler.ast.CastExpression extends org.eclipse.jdt.internal.compiler.ast.Expression
{
    public org.eclipse.jdt.internal.compiler.ast.Expression expression;
    public org.eclipse.jdt.internal.compiler.ast.Expression type;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1, r2;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type> = r2;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i1 = $i0 | 1073741824;

        r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r2;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3, $r5;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1, r2, r3);

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        return $r6;
    }

    public static void checkNeedForAssignedCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.CastExpression)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        int $i0, $i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r4, $r5, r6;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r4 == null goto label2;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r6);

        if $z1 == 0 goto label4;

        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r2);

     label4:
        return;
    }

    public static void checkNeedForCastCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.ast.CastExpression)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r6, $r8;
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r9, $r10;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r2, r4, $r12;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        return;

     label1:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r4 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r3;

        $i1 = r4.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i2 = $i1 & 16384;

        if $i2 != 0 goto label2;

        return;

     label2:
        $r12 = new org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        specialinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.CastExpression: void <init>(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression)>(null, $r6);

        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r12.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r7;

        $r10 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r8 = r4.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z0 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.CastExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r0, $r10, $r9, null);

        if $z0 != 0 goto label3;

        return;

     label3:
        $r11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r4);

        return;
    }

    public static void checkNeedForEnclosingInstanceCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r12, $r14;
        org.eclipse.jdt.internal.compiler.ast.Expression r2, $r4;
        int $i0, $i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5, r6, r8;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r10, $r11;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r7;
        char[] $r9;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r3, $r13, $r15;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r8 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $r3 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if r5 != null goto label2;

        return;

     label2:
        if r5 != r6 goto label3;

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r15 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r15);

        goto label7;

     label3:
        $r7 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r5 != $r7 goto label4;

        return;

     label4:
        $z0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z1 == 0 goto label6;

     label5:
        return;

     label6:
        $r9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] sourceName()>();

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r5;

        $r11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getMemberType(char[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r9, $r10);

        if r8 != $r11 goto label7;

        $r12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r13 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r13);

     label7:
        return;
    }

    public static void checkNeedForArgumentCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope, int, int, org.eclipse.jdt.internal.compiler.ast.Expression, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r5;
        org.eclipse.jdt.internal.compiler.ast.Expression r2, $r4;
        int $i0, i1, $i2, $i3, $i4, i5, i6, $i8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r8;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r3, $r6;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        r2 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Expression;

        i1 := @parameter4: int;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i8 = (int) -1;

        if $i0 != $i8 goto label1;

        return;

     label1:
        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i3 = $i2 & 16384;

        if $i3 != 0 goto label2;

        $r7 = r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z0 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r3 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r8 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r8 != null goto label3;

        return;

     label3:
        $i4 = $r8.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i4 != i1 goto label4;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r6 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r6);

        return;

     label4:
        if $i4 != 12 goto label5;

        return;

     label5:
        return;
    }

    public static void checkNeedForArgumentCasts(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.Expression[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.lookup.InvocationSite)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.lookup.InvocationSite r18;
        org.eclipse.jdt.internal.compiler.ast.Expression[] r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r4, $r6, r15;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r13, $r14, r16;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r17;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r2, $r9, $r10, r19;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r5, $r12;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r15 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r16 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r17 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r3 := @parameter4: org.eclipse.jdt.internal.compiler.ast.Expression[];

        r2 := @parameter5: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        r18 := @parameter6: org.eclipse.jdt.internal.compiler.lookup.InvocationSite;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i8 = (int) -1;

        if $i0 != $i8 goto label01;

        return;

     label01:
        i1 = lengthof r2;

        r19 = r2;

        i6 = 0;

        goto label10;

     label02:
        r4 = r3[i6];

        $z0 = r4 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z0 == 0 goto label09;

        $i2 = r4.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i3 = $i2 & 16384;

        if $i3 != 0 goto label03;

        $r13 = r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z1 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label03;

        goto label09;

     label03:
        $r5 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r4;

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r14 = $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r14 != null goto label04;

        return;

     label04:
        $r7 = r2[i6];

        if $r14 != $r7 goto label05;

        $r11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r4;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r12);

        goto label09;

     label05:
        $r8 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if $r14 != $r8 goto label06;

        goto label09;

     label06:
        $i4 = r4.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i5 = $i4 & 512;

        if $i5 == 0 goto label07;

        goto label09;

     label07:
        if r19 != r2 goto label08;

        $r10 = r19;

        $r9 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i1];

        r19 = $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i1);

     label08:
        r19[i6] = $r14;

     label09:
        i6 = i6 + 1;

     label10:
        if i6 < i1 goto label02;

        if r19 == r2 goto label11;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkAlternateBinding(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r0, r15, r16, r17, r3, r2, r19, r18);

     label11:
        return;
    }

    public static void checkNeedForArgumentCasts(org.eclipse.jdt.internal.compiler.lookup.BlockScope, int, int, org.eclipse.jdt.internal.compiler.ast.Expression, int, boolean, org.eclipse.jdt.internal.compiler.ast.Expression, int, boolean)
    {
        int[][] $r20;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r2, $r5, $r10, $r16;
        org.eclipse.jdt.internal.compiler.ast.Expression r3, r6, $r9, $r15;
        int[] $r21;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r12, $r13, $r18, $r19;
        boolean $z0, $z1, z2, z3;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i19;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r4, $r7, $r8, $r11, $r14, $r17;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Expression;

        i1 := @parameter4: int;

        z2 := @parameter5: boolean;

        r3 := @parameter6: org.eclipse.jdt.internal.compiler.ast.Expression;

        i2 := @parameter7: int;

        z3 := @parameter8: boolean;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(67108864L);

        $i19 = (int) -1;

        if $i0 != $i19 goto label01;

        return;

     label01:
        i11 = i1;

        if z2 == 0 goto label05;

        $i8 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i9 = $i8 & 16384;

        if $i9 != 0 goto label02;

        $r18 = r6.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z1 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label02;

        z2 = 0;

        goto label05;

     label02:
        $r14 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r6;

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r19 = $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r19 != null goto label03;

        return;

     label03:
        $i10 = $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        i11 = $i10;

        if $i10 != i1 goto label04;

        $r16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r6;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r17);

        z2 = 0;

        goto label05;

     label04:
        if $i10 != 12 goto label05;

        i11 = i1;

        z2 = 0;

     label05:
        i12 = i2;

        if z3 == 0 goto label09;

        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i6 = $i5 & 16384;

        if $i6 != 0 goto label06;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z0 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label06;

        z3 = 0;

        goto label09;

     label06:
        $r8 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r3;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r13 = $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r13 != null goto label07;

        return;

     label07:
        $i7 = $r13.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        i12 = $i7;

        if $i7 != i2 goto label08;

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r3;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r11);

        z3 = 0;

        goto label09;

     label08:
        if $i7 != 12 goto label09;

        i12 = i2;

        z3 = 0;

     label09:
        if z2 != 0 goto label10;

        if z3 == 0 goto label16;

     label10:
        if i11 > 15 goto label11;

        if i12 <= 15 goto label14;

     label11:
        if i11 != 11 goto label12;

        i12 = 1;

        goto label14;

     label12:
        if i12 != 11 goto label13;

        i11 = 1;

        goto label14;

     label13:
        return;

     label14:
        $r20 = <org.eclipse.jdt.internal.compiler.ast.OperatorExpression: int[][] OperatorSignatures>;

        $r21 = $r20[i3];

        $i13 = i11 << 4;

        $i14 = $i13 + i12;

        $i15 = $r21[$i14];

        $i16 = i4 & 986895;

        $i17 = $i15 & 986895;

        if $i16 != $i17 goto label16;

        if z2 == 0 goto label15;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r7 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r6;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r7);

     label15:
        if z3 == 0 goto label16;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r4 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r3;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r4);

     label16:
        return;
    }

    private static void checkAlternateBinding(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.Expression[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding[], org.eclipse.jdt.internal.compiler.lookup.InvocationSite)
    {
        org.eclipse.jdt.internal.compiler.lookup.InvocationSite r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.ast.Expression[] r12;
        org.eclipse.jdt.internal.compiler.ast.Expression r3, $r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r5, $r9, $r10, $r17, r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2, r23, $r24;
        org.eclipse.jdt.internal.compiler.ast.CastExpression$1 $r0;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding r18;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        int i0, i1, $i2, $i3, i4, i5;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r22;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r6, r8, $r15, $r16;
        char[] $r7, $r21;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r14;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r2 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r12 := @parameter4: org.eclipse.jdt.internal.compiler.ast.Expression[];

        r8 := @parameter5: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        r6 := @parameter6: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[];

        r1 := @parameter7: org.eclipse.jdt.internal.compiler.lookup.InvocationSite;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.CastExpression$1;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression$1: void <init>(org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r1);

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label01;

        $r22 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r5;

        r23 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getConstructor(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r22, r6, $r0);

        goto label04;

     label01:
        $z1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isImplicitThis()>();

        if $z1 == 0 goto label02;

        $r21 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r24 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getImplicitMethod(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r21, r6, $r0);

        goto label03;

     label02:
        $r7 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r24 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getMethod(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r5, $r7, r6, $r0);

     label03:
        r23 = $r24;

     label04:
        if r23 != r2 goto label10;

        i0 = lengthof r8;

        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        if $z2 == 0 goto label06;

        $r15 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i4 = lengthof $r15;

        if i4 != i0 goto label06;

        i1 = i4 - 1;

        $r16 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r17 = $r16[i1];

        r18 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) $r17;

        r19 = r6[i1];

        $i2 = r18.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: int dimensions>;

        $i3 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int dimensions()>();

        if $i2 == $i3 goto label05;

        return;

     label05:
        $r20 = virtualinvoke r18.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $z3 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r20);

        if $z3 == 0 goto label06;

        $z4 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r18);

        if $z4 == 0 goto label06;

        return;

     label06:
        i5 = 0;

        goto label09;

     label07:
        $r10 = r8[i5];

        $r9 = r6[i5];

        if $r10 == $r9 goto label08;

        $r11 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r13 = r12[i5];

        $r14 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r13;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r14);

     label08:
        i5 = i5 + 1;

     label09:
        if i5 < i0 goto label07;

     label10:
        return;
    }

    public boolean checkUnsafeCast(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, boolean)
    {
        byte $b15;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1, $r3, $r4, r6, $r11, $r16, $r20, $r21, $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding r7, $r19, r24;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        long $l13, $l14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r15;
        org.eclipse.jdt.internal.compiler.lookup.Scope r5;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r14, $r17, $r18;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r8, $r9, $r10, $r12, $r13;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        z1 := @parameter4: boolean;

        if r0 != r1 goto label02;

        if z1 != 0 goto label01;

        $r22 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r23 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        if r0 != $r23 goto label01;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, r1);

     label01:
        return 1;

     label02:
        if r0 == null goto label05;

        if z1 == 0 goto label03;

        $z8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isProvablyDistinct(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r6);

        if $z8 == 0 goto label05;

        goto label04;

     label03:
        $z7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isProvablyDistinct(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z7 == 0 goto label05;

     label04:
        return 0;

     label05:
        $i25 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i25)
        {
            case 68: goto label23;
            case 260: goto label06;
            case 4100: goto label25;
            default: goto label26;
        };

     label06:
        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBoundParameterizedType()>();

        if $z0 == 0 goto label26;

        if r0 != null goto label07;

        $i21 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i22 = $i21 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i22;

        return 1;

     label07:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i2)
        {
            case 260: goto label08;
            case 1028: goto label21;
            default: goto label22;
        };

     label08:
        if z1 == 0 goto label20;

        $z3 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isRawType()>();

        if $z3 != 0 goto label09;

        $z4 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isEquivalentTo(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        if $z4 != 0 goto label10;

     label09:
        $i7 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i8 = $i7 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i8;

        return 1;

     label10:
        r24 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding) r1;

        r7 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding) r0;

        r8 = r24.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] arguments>;

        i9 = lengthof r8;

        $r9 = r7.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] arguments>;

        if $r9 == null goto label11;

        $r10 = r7.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] arguments>;

        $i12 = lengthof $r10;

        if i9 <= $i12 goto label12;

     label11:
        $i10 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i11 = $i10 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i11;

        goto label19;

     label12:
        $l13 = r24.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: long tagBits>;

        $l14 = $l13 & 1610612736L;

        $b15 = $l14 cmp 0L;

        if $b15 == 0 goto label19;

        i26 = 0;

        goto label18;

     label13:
        $r11 = r8[i26];

        $i16 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i16)
        {
            case 516: goto label14;
            case 4100: goto label14;
            default: goto label15;
        };

     label14:
        goto label16;

     label15:
        goto label17;

     label16:
        $r13 = r24.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] arguments>;

        $r12 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i9];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r12, 0, i9);

        $r14 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        $r12[i26] = $r14;

        $r15 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r16 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r17 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r16;

        $r18 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r19 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding createParameterizedType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r17, $r12, $r18);

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r6);

        if $r20 != r0 goto label17;

        $i17 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i18 = $i17 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i18;

        goto label19;

     label17:
        i26 = i26 + 1;

     label18:
        if i26 < i9 goto label13;

     label19:
        return 1;

     label20:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isEquivalentTo(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        if $z2 != 0 goto label26;

        $i5 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i6 = $i5 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i6;

        return 1;

     label21:
        $i3 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i4 = $i3 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i4;

        return 1;

     label22:
        if z1 == 0 goto label26;

        $i19 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i20 = $i19 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i20;

        return 1;

     label23:
        $r21 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        if z1 == 0 goto label26;

        $z5 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBoundParameterizedType()>();

        if $z5 != 0 goto label24;

        $z6 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isTypeVariable()>();

        if $z6 == 0 goto label26;

     label24:
        $i23 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i24 = $i23 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i24;

        return 1;

     label25:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i1 = $i0 | 128;

        r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i1;

        return 1;

     label26:
        if z1 != 0 goto label27;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        if r0 != $r4 goto label27;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.CastExpression: void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, r1);

     label27:
        return 1;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r6, $r7, $r8, $r9, $r11;
        boolean z0, z1, $z3, $z4, $z5, $z6;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r10;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z1 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i2 = $i1 & 64;

        if $i2 == 0 goto label01;

        $z6 = 1;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

        $z4 = 0;

     label02:
        z0 = $z5;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label06;

        if z1 != 0 goto label03;

        if $z6 == 0 goto label05;

     label03:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r10, $i4);

        if z0 == 0 goto label04;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r11);

     label04:
        if z1 != 0 goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label05:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i5);

        return;

     label06:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if z1 != 0 goto label07;

        if $z4 != 0 goto label07;

        $z3 = 0;

        goto label08;

     label07:
        $z3 = 1;

     label08:
        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r4, r0, $z3);

        if z0 == 0 goto label09;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r4);

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        if $r6 == $r8 goto label09;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r9);

     label09:
        if z1 == 0 goto label10;

        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i3);

        goto label11;

     label10:
        if z0 == 0 goto label11;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label11:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i6);

        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.Expression innermostCastedExpression()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r2;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0, $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        goto label2;

     label1:
        $r1 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) r2;

        r2 = $r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

     label2:
        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z0 != 0 goto label1;

        return r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()>();

        return $r2;
    }

    public int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        int $i0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r1);

        return $i0;
    }

    public org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        lookupswitch($i0)
        {
            case 5: goto label1;
            case 33: goto label1;
            default: goto label2;
        };

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        return $r3;

     label2:
        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        return $r4;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r4;
        java.lang.StringBuffer r0, $r3, $r5;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

        return $r5;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r10, $r12, $r14, $r16, $r21;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r4, $r6, $r7, $r9, $r11, $r15, $r17, $r18, $r19, $r22, $r23;
        byte $b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r8, $r20, $r24, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r13;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        long $l0, $l1;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int implicitConversion> = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.TypeReference;

        if $z0 != 0 goto label01;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $z5 = $r18 instanceof org.eclipse.jdt.internal.compiler.ast.NameReference;

        if $z5 == 0 goto label09;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $i10 = $r23.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i11 = $i10 & 534773760;

        $i12 = $i11 >> 21;

        if $i12 != 0 goto label09;

     label01:
        z6 = 0;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r5;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z1 = $r6 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z1 == 0 goto label02;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $i8 = $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i9 = $i8 | 32;

        $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i9;

        z6 = 1;

     label02:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        if $r5 == null goto label08;

        if $r8 == null goto label07;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r3, $r5, $r8, $r9);

        if $z2 == 0 goto label05;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, $r5, $r8);

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i6 = $i5 & 128;

        if $i6 == 0 goto label03;

        $r16 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unsafeCast(org.eclipse.jdt.internal.compiler.ast.CastExpression,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r0, r3);

        goto label07;

     label03:
        $z3 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isRawType()>();

        if $z3 == 0 goto label04;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i7 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(35184372088832L);

        $i17 = (int) -1;

        if $i7 == $i17 goto label04;

        $r14 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void rawTypeReference(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r15, $r5);

     label04:
        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i14 = $i13 & 16416;

        if $i14 != 16384 goto label07;

        $z4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: boolean isIndirectlyUsed()>();

        if $z4 != 0 goto label07;

        $r12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r0);

        goto label07;

     label05:
        $l0 = $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label06;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeCastError(org.eclipse.jdt.internal.compiler.ast.CastExpression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r5, $r8);

     label06:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i4 = $i3 | 32;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i4;

     label07:
        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int sourceEnd>;

        $r24 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding capture(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r3, $i15);

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r24;

        if z6 == 0 goto label08;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkNeedForCastCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.CastExpression)>(r3, r0);

     label08:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r25;

     label09:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r3);

        if $r20 != null goto label10;

        return null;

     label10:
        $r21 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidTypeReference(org.eclipse.jdt.internal.compiler.ast.Expression)>($r22);

        return null;
    }

    public void setExpectedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType> = r1;

        return;
    }

    private boolean isIndirectlyUsed()
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r3, $r4, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r7;
        org.eclipse.jdt.internal.compiler.ast.MessageSend $r6;
        org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding $r8;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z0 = $r1 instanceof org.eclipse.jdt.internal.compiler.ast.MessageSend;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r6 = (org.eclipse.jdt.internal.compiler.ast.MessageSend) $r5;

        r7 = $r6.<org.eclipse.jdt.internal.compiler.ast.MessageSend: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z3 = r7 instanceof org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding;

        if $z3 == 0 goto label2;

        $r8 = (org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding) r7;

        $z4 = $r8.<org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding: boolean inferredReturnType>;

        if $z4 == 0 goto label2;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType>;

        if $r9 != null goto label1;

        return 1;

     label1:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType>;

        if $r11 == $r10 goto label2;

        return 1;

     label2:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType>;

        if $r12 == null goto label3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 == 0 goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding expectedType>;

        $z2 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r3);

        if $z2 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void tagAsNeedCheckCast()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i1 = $i0 | 64;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i1;

        return;
    }

    public void tagAsUnnecessaryCast(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits>;

        $i1 = $i0 | 16384;

        r0.<org.eclipse.jdt.internal.compiler.ast.CastExpression: int bits> = $i1;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.CastExpression r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CastExpression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.CastExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression type>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.CastExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
