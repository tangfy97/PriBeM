public class org.apache.lucene.index.DocTermOrds extends java.lang.Object
{
    private static final int TNUM_OFFSET;
    public static final int DEFAULT_INDEX_INTERVAL_BITS;
    private int indexIntervalBits;
    private int indexIntervalMask;
    private int indexInterval;
    protected final int maxTermDocFreq;
    protected final java.lang.String field;
    protected int numTermsInField;
    protected long termInstances;
    private long memsz;
    protected int total_time;
    protected int phase1_time;
    protected int[] index;
    protected byte[][] tnums;
    protected long sizeOfIndexedStrings;
    protected org.apache.lucene.util.BytesRef[] indexedTermsArray;
    protected org.apache.lucene.util.BytesRef prefix;
    protected int ordBase;
    protected org.apache.lucene.index.DocsEnum docsEnum;

    public long ramUsedInBytes()
    {
        byte[] r4;
        long $l0, $l4, $l7, $l8, l9;
        byte $b1;
        int[] $r1, $r5;
        int i2, $i3, $i5, $i6, i10;
        org.apache.lucene.index.DocTermOrds r0;
        byte[][] $r2, r3;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        $l0 = r0.<org.apache.lucene.index.DocTermOrds: long memsz>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l8 = r0.<org.apache.lucene.index.DocTermOrds: long memsz>;

        return $l8;

     label1:
        l9 = 96L;

        $r1 = r0.<org.apache.lucene.index.DocTermOrds: int[] index>;

        if $r1 == null goto label2;

        $r5 = r0.<org.apache.lucene.index.DocTermOrds: int[] index>;

        $i5 = lengthof $r5;

        $i6 = $i5 * 4;

        $l7 = (long) $i6;

        l9 = 96L + $l7;

     label2:
        $r2 = r0.<org.apache.lucene.index.DocTermOrds: byte[][] tnums>;

        if $r2 == null goto label5;

        r3 = r0.<org.apache.lucene.index.DocTermOrds: byte[][] tnums>;

        i2 = lengthof r3;

        i10 = 0;

     label3:
        if i10 >= i2 goto label5;

        r4 = r3[i10];

        if r4 == null goto label4;

        $i3 = lengthof r4;

        $l4 = (long) $i3;

        l9 = l9 + $l4;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        r0.<org.apache.lucene.index.DocTermOrds: long memsz> = l9;

        return l9;
    }

    public void <init>(org.apache.lucene.index.AtomicReader, org.apache.lucene.util.Bits, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        java.lang.String r3;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.index.AtomicReader r1;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.lucene.index.DocTermOrds: void <init>(org.apache.lucene.index.AtomicReader,org.apache.lucene.util.Bits,java.lang.String,org.apache.lucene.util.BytesRef,int)>(r1, r2, r3, null, 2147483647);

        return;
    }

    public void <init>(org.apache.lucene.index.AtomicReader, org.apache.lucene.util.Bits, java.lang.String, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        org.apache.lucene.util.BytesRef r4;
        java.lang.String r3;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.index.AtomicReader r1;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.util.BytesRef;

        specialinvoke r0.<org.apache.lucene.index.DocTermOrds: void <init>(org.apache.lucene.index.AtomicReader,org.apache.lucene.util.Bits,java.lang.String,org.apache.lucene.util.BytesRef,int)>(r1, r2, r3, r4, 2147483647);

        return;
    }

    public void <init>(org.apache.lucene.index.AtomicReader, org.apache.lucene.util.Bits, java.lang.String, org.apache.lucene.util.BytesRef, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        org.apache.lucene.util.BytesRef r4;
        int i0;
        java.lang.String r3;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.index.AtomicReader r1;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.util.BytesRef;

        i0 := @parameter4: int;

        specialinvoke r0.<org.apache.lucene.index.DocTermOrds: void <init>(org.apache.lucene.index.AtomicReader,org.apache.lucene.util.Bits,java.lang.String,org.apache.lucene.util.BytesRef,int,int)>(r1, r2, r3, r4, i0, 7);

        return;
    }

    public void <init>(org.apache.lucene.index.AtomicReader, org.apache.lucene.util.Bits, java.lang.String, org.apache.lucene.util.BytesRef, int, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        org.apache.lucene.util.BytesRef r4;
        int i0, i1;
        java.lang.String r1;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReader r2;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r2 := @parameter0: org.apache.lucene.index.AtomicReader;

        r3 := @parameter1: org.apache.lucene.util.Bits;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.lucene.util.BytesRef;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        specialinvoke r0.<org.apache.lucene.index.DocTermOrds: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.apache.lucene.index.DocTermOrds: void uninvert(org.apache.lucene.index.AtomicReader,org.apache.lucene.util.Bits,org.apache.lucene.util.BytesRef)>(r2, r3, r4);

        return;
    }

    protected void <init>(java.lang.String, int, int)
    {
        org.apache.lucene.index.DocTermOrds r0;
        byte[][] $r1;
        int i0, i1, $i2, $i3, $i4, $i6;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte[])[256];

        r0.<org.apache.lucene.index.DocTermOrds: byte[][] tnums> = $r1;

        r0.<org.apache.lucene.index.DocTermOrds: java.lang.String field> = r2;

        r0.<org.apache.lucene.index.DocTermOrds: int maxTermDocFreq> = i0;

        r0.<org.apache.lucene.index.DocTermOrds: int indexIntervalBits> = i1;

        $i2 = 32 - i1;

        $i6 = (int) -1;

        $i3 = $i6 >>> $i2;

        r0.<org.apache.lucene.index.DocTermOrds: int indexIntervalMask> = $i3;

        $i4 = 1 << i1;

        r0.<org.apache.lucene.index.DocTermOrds: int indexInterval> = $i4;

        return;
    }

    public org.apache.lucene.index.TermsEnum getOrdTermsEnum(org.apache.lucene.index.AtomicReader) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        org.apache.lucene.index.Terms $r6;
        org.apache.lucene.index.DocTermOrds$OrdWrappedTermsEnum $r2;
        org.apache.lucene.index.Fields $r4;
        org.apache.lucene.index.TermsEnum $r7;
        org.apache.lucene.util.BytesRef[] $r1;
        java.lang.String $r5;
        org.apache.lucene.index.AtomicReader r3;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r3 := @parameter0: org.apache.lucene.index.AtomicReader;

        $r1 = r0.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.util.BytesRef[] indexedTermsArray>;

        if $r1 != null goto label3;

        $r4 = virtualinvoke r3.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<org.apache.lucene.index.DocTermOrds: java.lang.String field>;

        $r6 = virtualinvoke $r4.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r5);

        if $r6 != null goto label2;

        return null;

     label2:
        $r7 = virtualinvoke $r6.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        return $r7;

     label3:
        $r2 = new org.apache.lucene.index.DocTermOrds$OrdWrappedTermsEnum;

        specialinvoke $r2.<org.apache.lucene.index.DocTermOrds$OrdWrappedTermsEnum: void <init>(org.apache.lucene.index.DocTermOrds,org.apache.lucene.index.AtomicReader)>(r0, r3);

        return $r2;
    }

    public int numTerms()
    {
        org.apache.lucene.index.DocTermOrds r0;
        int $i0;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        $i0 = r0.<org.apache.lucene.index.DocTermOrds: int numTermsInField>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.lucene.index.DocTermOrds r0;
        int[] $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        $r1 = r0.<org.apache.lucene.index.DocTermOrds: int[] index>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void visitTerm(org.apache.lucene.index.TermsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        int i0;
        org.apache.lucene.index.TermsEnum r1;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        i0 := @parameter1: int;

        return;
    }

    protected void setActualDocFreq(int, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        int i0, i1;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    protected void uninvert(org.apache.lucene.index.AtomicReader, org.apache.lucene.util.Bits, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        byte[] r18, r51, r52, r53, r54, r55, r56;
        byte $b31, $b32, b59, $b65, b73, b74, b75;
        org.apache.lucene.index.FieldInfos $r1;
        byte[][] $r16, $r17, $r25, $r34;
        java.lang.StringBuilder $r21, $r23, $r37, $r39, $r40, $r42, $r57, $r63;
        org.apache.lucene.index.AtomicReader r0;
        java.lang.Object[] $r14;
        long $l0, $l2, $l3, $l5, $l21, $l22, $l45, $l46, $l47, $l48, $l63, $l64;
        short $s34, $s80;
        org.apache.lucene.util.Bits r27;
        int[] $r32, $r33;
        org.apache.lucene.index.Terms $r8;
        org.apache.lucene.util.BytesRef[] $r13, $r15;
        int $i1, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i49, i50, $i51, $i52, i53, i54, i55, i56, i57, i58, $i60, i61, i62, i66, i67, i68, i69, i70, i71, i72, $i77, $i79, $i81;
        org.apache.lucene.index.FieldInfo$DocValuesType $r41;
        org.apache.lucene.index.TermsEnum $r9;
        org.apache.lucene.index.DocTermOrds r2;
        java.util.ArrayList r49, $r60;
        java.lang.String $r3, $r7, $r22, $r24, $r38, $r43;
        java.lang.UnsupportedOperationException $r44;
        org.apache.lucene.index.DocsEnum $r28, $r29, $r30;
        org.apache.lucene.index.TermsEnum$SeekStatus $r10, $r11;
        org.apache.lucene.index.FieldInfo $r4;
        java.lang.IllegalStateException $r58, $r64;
        org.apache.lucene.index.Fields $r6;
        boolean $z0, $z1, z2;
        org.apache.lucene.util.BytesRef r5, $r12, $r26, $r47, $r48, $r59, $r62;
        org.apache.lucene.util.PagedBytes r50, $r61;

        r2 := @this: org.apache.lucene.index.DocTermOrds;

        r0 := @parameter0: org.apache.lucene.index.AtomicReader;

        r27 := @parameter1: org.apache.lucene.util.Bits;

        r5 := @parameter2: org.apache.lucene.util.BytesRef;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r3 = r2.<org.apache.lucene.index.DocTermOrds: java.lang.String field>;

        $r4 = virtualinvoke $r1.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>($r3);

        if $r4 == null goto label01;

        $z1 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfo: boolean hasDocValues()>();

        if $z1 == 0 goto label01;

        $r58 = new java.lang.IllegalStateException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type mismatch: ");

        $r38 = r2.<org.apache.lucene.index.DocTermOrds: java.lang.String field>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was indexed as ");

        $r41 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r43);

        throw $r58;

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if r5 != null goto label02;

        $r47 = null;

        goto label03;

     label02:
        $r47 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>(r5);

     label03:
        r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.util.BytesRef prefix> = $r47;

        $i1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r32 = newarray (int)[$i1];

        $r33 = newarray (int)[$i1];

        $r34 = newarray (byte[])[$i1];

        $r6 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        if $r6 != null goto label04;

        return;

     label04:
        $r7 = r2.<org.apache.lucene.index.DocTermOrds: java.lang.String field>;

        $r8 = virtualinvoke $r6.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r7);

        if $r8 != null goto label05;

        return;

     label05:
        $r9 = virtualinvoke $r8.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        if r5 == null goto label06;

        $r48 = r5;

        goto label07;

     label06:
        $r59 = new org.apache.lucene.util.BytesRef;

        $r48 = $r59;

        specialinvoke $r59.<org.apache.lucene.util.BytesRef: void <init>()>();

     label07:
        $r10 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef)>($r48);

        $r11 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        if $r10 != $r11 goto label08;

        return;

     label08:
        r49 = null;

        r50 = null;

        z2 = 0;

        r51 = newarray (byte)[12];

        i50 = 0;

        r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.index.DocsEnum docsEnum> = null;

     label09:
        $r12 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        if $r12 == null goto label35;

        if r5 == null goto label10;

        $z0 = staticinvoke <org.apache.lucene.util.StringHelper: boolean startsWith(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r12, r5);

        if $z0 != 0 goto label10;

        goto label35;

     label10:
        if z2 != 0 goto label15;

     label11:
        $l48 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: long ord()>();

        $i49 = (int) $l48;

        r2.<org.apache.lucene.index.DocTermOrds: int ordBase> = $i49;

     label12:
        goto label14;

     label13:
        $r44 := @caughtexception;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        r49 = $r60;

        $r61 = new org.apache.lucene.util.PagedBytes;

        specialinvoke $r61.<org.apache.lucene.util.PagedBytes: void <init>(int)>(15);

        r50 = $r61;

     label14:
        z2 = 1;

     label15:
        virtualinvoke r2.<org.apache.lucene.index.DocTermOrds: void visitTerm(org.apache.lucene.index.TermsEnum,int)>($r9, i50);

        if r49 == null goto label16;

        $i42 = r2.<org.apache.lucene.index.DocTermOrds: int indexIntervalMask>;

        $i43 = i50 & $i42;

        if $i43 != 0 goto label16;

        $l46 = r2.<org.apache.lucene.index.DocTermOrds: long sizeOfIndexedStrings>;

        $i44 = $r12.<org.apache.lucene.util.BytesRef: int length>;

        $l45 = (long) $i44;

        $l47 = $l46 + $l45;

        r2.<org.apache.lucene.index.DocTermOrds: long sizeOfIndexedStrings> = $l47;

        $r62 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r62.<org.apache.lucene.util.BytesRef: void <init>()>();

        virtualinvoke r50.<org.apache.lucene.util.PagedBytes: void copy(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>($r12, $r62);

        interfaceinvoke r49.<java.util.List: boolean add(java.lang.Object)>($r62);

     label16:
        $i51 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $i52 = r2.<org.apache.lucene.index.DocTermOrds: int maxTermDocFreq>;

        if $i51 > $i52 goto label33;

        $r28 = r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.index.DocsEnum docsEnum>;

        $r29 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r27, $r28, 0);

        r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.index.DocsEnum docsEnum> = $r29;

        i53 = 0;

     label17:
        $r30 = r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.index.DocsEnum docsEnum>;

        $i20 = virtualinvoke $r30.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i20 != 2147483647 goto label18;

        goto label32;

     label18:
        i53 = i53 + 1;

        $l21 = r2.<org.apache.lucene.index.DocTermOrds: long termInstances>;

        $l22 = $l21 + 1L;

        r2.<org.apache.lucene.index.DocTermOrds: long termInstances> = $l22;

        $i23 = $r33[$i20];

        $i24 = i50 - $i23;

        i54 = $i24 + 2;

        $r33[$i20] = i50;

        i55 = $r32[$i20];

        $i25 = i55 & 255;

        if $i25 != 1 goto label20;

        i56 = i55 >>> 8;

        $i36 = staticinvoke <org.apache.lucene.index.DocTermOrds: int vIntSize(int)>(i54);

        r52 = $r34[$i20];

        i57 = i56 + $i36;

        $i37 = lengthof r52;

        if i57 <= $i37 goto label19;

        $i41 = i57 + 3;

        $i77 = (int) -4;

        i58 = $i41 & $i77;

        r53 = newarray (byte)[i58];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r52, 0, r53, 0, i56);

        r52 = r53;

        $r34[$i20] = r53;

     label19:
        $i38 = staticinvoke <org.apache.lucene.index.DocTermOrds: int writeInt(int,byte[],int)>(i54, r52, i56);

        $i39 = $i38 << 8;

        $i40 = $i39 | 1;

        $r32[$i20] = $i40;

        goto label31;

     label20:
        if i55 != 0 goto label21;

        b59 = 0;

        b75 = 0;

        b74 = 0;

        b73 = 0;

        goto label25;

     label21:
        $i79 = (int) 65408;

        $i26 = i55 & $i79;

        if $i26 != 0 goto label22;

        b59 = 1;

        b75 = 1;

        b74 = 1;

        b73 = 1;

        goto label25;

     label22:
        $i27 = i55 & 16744448;

        if $i27 != 0 goto label23;

        b59 = 2;

        b75 = 2;

        b74 = 2;

        b73 = 2;

        goto label25;

     label23:
        $i28 = i55 & -8388608;

        if $i28 != 0 goto label24;

        b59 = 3;

        b75 = 3;

        b74 = 3;

        b73 = 3;

        goto label25;

     label24:
        b59 = 4;

        b75 = 4;

        b74 = 4;

        b73 = 4;

     label25:
        $i60 = staticinvoke <org.apache.lucene.index.DocTermOrds: int writeInt(int,byte[],int)>(i54, r51, b75);

        if $i60 > 4 goto label28;

        i61 = b73;

     label26:
        if i61 >= $i60 goto label27;

        $b32 = r51[i61];

        $s80 = (short) $b32;

        $s34 = $s80 & 255;

        $i33 = i61 << 3;

        $i81 = (int) $s34;

        $i35 = $i81 << $i33;

        i55 = i55 | $i35;

        i61 = i61 + 1;

        goto label26;

     label27:
        $r32[$i20] = i55;

        goto label31;

     label28:
        i62 = 0;

     label29:
        if i62 >= b74 goto label30;

        $b31 = (byte) i55;

        r51[i62] = $b31;

        i55 = i55 >>> 8;

        i62 = i62 + 1;

        goto label29;

     label30:
        $i29 = $i60 << 8;

        $i30 = $i29 | 1;

        $r32[$i20] = $i30;

        $r34[$i20] = r51;

        r51 = newarray (byte)[12];

     label31:
        goto label17;

     label32:
        virtualinvoke r2.<org.apache.lucene.index.DocTermOrds: void setActualDocFreq(int,int)>(i50, i53);

     label33:
        i50 = i50 + 1;

        $r26 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r26 != null goto label34;

        goto label35;

     label34:
        goto label09;

     label35:
        r2.<org.apache.lucene.index.DocTermOrds: int numTermsInField> = i50;

        $l63 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l64 = r2.<org.apache.lucene.index.DocTermOrds: long termInstances>;

        $b65 = $l64 cmp 0L;

        if $b65 != 0 goto label36;

        $r25 = (byte[][]) null;

        r2.<org.apache.lucene.index.DocTermOrds: byte[][] tnums> = $r25;

        goto label51;

     label36:
        r2.<org.apache.lucene.index.DocTermOrds: int[] index> = $r32;

        i66 = 0;

     label37:
        if i66 >= 256 goto label51;

        $r16 = r2.<org.apache.lucene.index.DocTermOrds: byte[][] tnums>;

        r54 = $r16[i66];

        i67 = 0;

        if r54 == null goto label38;

        i67 = lengthof r54;

        goto label39;

     label38:
        r54 = newarray (byte)[4096];

     label39:
        i68 = i66 << 16;

     label40:
        if i68 >= $i1 goto label48;

        $i10 = i68 + 65536;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i1);

        i69 = i68;

     label41:
        if i69 >= $i11 goto label47;

        i70 = $r32[i69];

        $i12 = i70 & 255;

        if $i12 != 1 goto label46;

        i71 = i70 >>> 8;

        $i13 = i67 << 8;

        $i14 = $i13 | 1;

        $r32[i69] = $i14;

        $i15 = i67 & -16777216;

        if $i15 == 0 goto label42;

        $r64 = new java.lang.IllegalStateException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many values for UnInvertedField faceting on field ");

        $r22 = r2.<org.apache.lucene.index.DocTermOrds: java.lang.String field>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r64.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r64;

     label42:
        r55 = $r34[i69];

        $r34[i69] = null;

        $i17 = lengthof r54;

        $i16 = i67 + i71;

        if $i17 > $i16 goto label45;

        i72 = lengthof r54;

     label43:
        $i19 = i67 + i71;

        if i72 > $i19 goto label44;

        i72 = i72 << 1;

        goto label43;

     label44:
        r18 = newarray (byte)[i72];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r54, 0, r18, 0, i67);

        r54 = r18;

     label45:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r55, 0, r54, i67, i71);

        $i18 = i71 + 1;

        i67 = i67 + $i18;

     label46:
        i69 = i69 + 1;

        goto label41;

     label47:
        i68 = i68 + 16777216;

        goto label40;

     label48:
        $i8 = lengthof r54;

        if i67 >= $i8 goto label49;

        r56 = newarray (byte)[i67];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r54, 0, r56, 0, i67);

        r54 = r56;

     label49:
        $r17 = r2.<org.apache.lucene.index.DocTermOrds: byte[][] tnums>;

        $r17[i66] = r54;

        $i9 = i66 << 16;

        if $i9 <= $i1 goto label50;

        goto label51;

     label50:
        i66 = i66 + 1;

        goto label37;

     label51:
        if r49 == null goto label52;

        $i7 = interfaceinvoke r49.<java.util.List: int size()>();

        $r13 = newarray (org.apache.lucene.util.BytesRef)[$i7];

        $r14 = interfaceinvoke r49.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (org.apache.lucene.util.BytesRef[]) $r14;

        r2.<org.apache.lucene.index.DocTermOrds: org.apache.lucene.util.BytesRef[] indexedTermsArray> = $r15;

     label52:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - $l0;

        $i4 = (int) $l3;

        r2.<org.apache.lucene.index.DocTermOrds: int total_time> = $i4;

        $l5 = $l63 - $l0;

        $i6 = (int) $l5;

        r2.<org.apache.lucene.index.DocTermOrds: int phase1_time> = $i6;

        return;

        catch java.lang.UnsupportedOperationException from label11 to label12 with label13;
    }

    private static int vIntSize(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i6, $i8;

        i0 := @parameter0: int;

        $i6 = (int) -128;

        $i1 = i0 & $i6;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i8 = (int) -16384;

        $i2 = i0 & $i8;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = i0 & -2097152;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = i0 & -268435456;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    private static int writeInt(int, byte[], int)
    {
        byte[] r0;
        byte $b2, $b5, $b8, $b12, $b16;
        int i0, $i1, $i3, $i4, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i17, i18, i19, i20;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        i18 := @parameter2: int;

        i19 = i0 >>> 28;

        if i19 == 0 goto label1;

        $i14 = i18;

        i18 = i18 + 1;

        $i15 = i19 | 128;

        $b16 = (byte) $i15;

        r0[$i14] = $b16;

     label1:
        $i17 = i0 >>> 21;

        if $i17 == 0 goto label2;

        $i10 = i18;

        i18 = i18 + 1;

        $i11 = $i17 | 128;

        $b12 = (byte) $i11;

        r0[$i10] = $b12;

     label2:
        $i13 = i0 >>> 14;

        if $i13 == 0 goto label3;

        $i6 = i18;

        i18 = i18 + 1;

        $i7 = $i13 | 128;

        $b8 = (byte) $i7;

        r0[$i6] = $b8;

     label3:
        $i9 = i0 >>> 7;

        if $i9 == 0 goto label4;

        $i3 = i18;

        i18 = i18 + 1;

        $i4 = $i9 | 128;

        $b5 = (byte) $i4;

        r0[$i3] = $b5;

     label4:
        i20 = i18 + 1;

        $i1 = i0 & 127;

        $b2 = (byte) $i1;

        r0[i18] = $b2;

        return i20;
    }

    public org.apache.lucene.util.BytesRef lookupTerm(org.apache.lucene.index.TermsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r2;
        org.apache.lucene.index.TermsEnum r0;
        org.apache.lucene.util.BytesRef $r1;
        int i0;
        long $l1;

        r2 := @this: org.apache.lucene.index.DocTermOrds;

        r0 := @parameter0: org.apache.lucene.index.TermsEnum;

        i0 := @parameter1: int;

        $l1 = (long) i0;

        virtualinvoke r0.<org.apache.lucene.index.TermsEnum: void seekExact(long)>($l1);

        $r1 = virtualinvoke r0.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef term()>();

        return $r1;
    }

    public org.apache.lucene.index.SortedSetDocValues iterator(org.apache.lucene.index.AtomicReader) throws java.io.IOException
    {
        org.apache.lucene.index.DocTermOrds r0;
        org.apache.lucene.index.DocTermOrds$Iterator $r1;
        org.apache.lucene.index.SortedSetDocValues $r3;
        org.apache.lucene.index.AtomicReader r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocTermOrds;

        r2 := @parameter0: org.apache.lucene.index.AtomicReader;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.DocTermOrds: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = <org.apache.lucene.index.SortedSetDocValues: org.apache.lucene.index.SortedSetDocValues EMPTY>;

        return $r3;

     label1:
        $r1 = new org.apache.lucene.index.DocTermOrds$Iterator;

        specialinvoke $r1.<org.apache.lucene.index.DocTermOrds$Iterator: void <init>(org.apache.lucene.index.DocTermOrds,org.apache.lucene.index.AtomicReader)>(r0, r2);

        return $r1;
    }

    static int access$000(org.apache.lucene.index.DocTermOrds)
    {
        org.apache.lucene.index.DocTermOrds r0;
        int $i0;

        r0 := @parameter0: org.apache.lucene.index.DocTermOrds;

        $i0 = r0.<org.apache.lucene.index.DocTermOrds: int indexInterval>;

        return $i0;
    }

    static int access$100(org.apache.lucene.index.DocTermOrds)
    {
        org.apache.lucene.index.DocTermOrds r0;
        int $i0;

        r0 := @parameter0: org.apache.lucene.index.DocTermOrds;

        $i0 = r0.<org.apache.lucene.index.DocTermOrds: int indexIntervalBits>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.index.DocTermOrds: int DEFAULT_INDEX_INTERVAL_BITS> = 7;

        <org.apache.lucene.index.DocTermOrds: int TNUM_OFFSET> = 2;

        return;
    }
}
