public class org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.compressors.bzip2.BZip2Constants
{
    private int last;
    private int origPtr;
    private int blockSize100k;
    private boolean blockRandomised;
    private int bsBuff;
    private int bsLive;
    private final org.apache.commons.compress.compressors.bzip2.CRC crc;
    private int nInUse;
    private java.io.InputStream in;
    private final boolean decompressConcatenated;
    private static final int EOF;
    private static final int START_BLOCK_STATE;
    private static final int RAND_PART_A_STATE;
    private static final int RAND_PART_B_STATE;
    private static final int RAND_PART_C_STATE;
    private static final int NO_RAND_PART_A_STATE;
    private static final int NO_RAND_PART_B_STATE;
    private static final int NO_RAND_PART_C_STATE;
    private int currentState;
    private int storedBlockCRC;
    private int storedCombinedCRC;
    private int computedBlockCRC;
    private int computedCombinedCRC;
    private int su_count;
    private int su_ch2;
    private int su_chPrev;
    private int su_i2;
    private int su_j2;
    private int su_rNToGo;
    private int su_rTPos;
    private int su_tPos;
    private char su_z;
    private org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void <init>(java.io.InputStream,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.io.InputStream, boolean) throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.CRC $r1;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream r2;
        boolean z0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        r2 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.compress.compressors.CompressorInputStream: void <init>()>();

        $r1 = new org.apache.commons.compress.compressors.bzip2.CRC;

        specialinvoke $r1.<org.apache.commons.compress.compressors.bzip2.CRC: void <init>()>();

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc> = $r1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in> = r2;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean decompressConcatenated> = z0;

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean init(boolean)>(1);

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void initBlock()>();

        return;
    }

    public int read() throws java.io.IOException
    {
        byte $b1;
        int $i0;
        java.io.IOException $r2;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        if $r1 == null goto label3;

        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int read0()>();

        if $i0 >= 0 goto label1;

        $b1 = -1;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        virtualinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void count(int)>($b1);

        return $i0;

     label3:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        java.lang.IndexOutOfBoundsException $r27, $r29, $r31;
        byte $b7;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r22, $r23, $r24, $r26, $r28, $r30;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i8, i9, $i10, $i12;
        java.lang.String $r13, $r19, $r25;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r1;
        java.io.IOException $r32;
        java.io.InputStream $r2;

        r1 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 >= 0 goto label1;

        $r27 = new java.lang.IndexOutOfBoundsException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offs(");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") < 0.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r25);

        throw $r27;

     label1:
        if i1 >= 0 goto label2;

        $r29 = new java.lang.IndexOutOfBoundsException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("len(");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") < 0.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r29;

     label2:
        $i3 = i0 + i1;

        $i2 = lengthof r0;

        if $i3 <= $i2 goto label3;

        $r31 = new java.lang.IndexOutOfBoundsException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offs(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") + len(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") > dest.length(");

        $i8 = lengthof r0;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw $r31;

     label3:
        $r2 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        if $r2 != null goto label4;

        $r32 = new java.io.IOException;

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r32;

     label4:
        i4 = i0 + i1;

        i9 = i0;

     label5:
        if i9 >= i4 goto label6;

        $i5 = specialinvoke r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int read0()>();

        if $i5 < 0 goto label6;

        $i6 = i9;

        i9 = i9 + 1;

        $b7 = (byte) $i5;

        r0[$i6] = $b7;

        virtualinvoke r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void count(int)>(1);

        goto label5;

     label6:
        if i9 != i0 goto label7;

        $i12 = (int) -1;

        $i10 = $i12;

        goto label8;

     label7:
        $i10 = i9 - i0;

     label8:
        return $i10;
    }

    private void makeMaps()
    {
        byte[] r4;
        boolean[] r2;
        byte $b1;
        int $i0, i2, i3;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r2 = $r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: boolean[] inUse>;

        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r4 = $r3.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] seqToUnseq>;

        i2 = 0;

        i3 = 0;

     label1:
        if i3 >= 256 goto label3;

        $z0 = r2[i3];

        if $z0 == 0 goto label2;

        $i0 = i2;

        i2 = i2 + 1;

        $b1 = (byte) i3;

        r4[$i0] = $b1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int nInUse> = i2;

        return;
    }

    private int read0() throws java.io.IOException
    {
        java.lang.IllegalStateException $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label9;
        };

     label1:
        $i7 = (int) -1;

        return $i7;

     label2:
        $i5 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupBlock()>();

        return $i5;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label4:
        $i4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartB()>();

        return $i4;

     label5:
        $i3 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartC()>();

        return $i3;

     label6:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label7:
        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartB()>();

        return $i2;

     label8:
        $i1 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartC()>();

        return $i1;

     label9:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;
    }

    private boolean init(boolean) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r9;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        boolean z0;
        java.io.IOException $r10, $r11, $r12;
        java.io.InputStream $r1, $r2, $r3, $r4, $r6;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        if null != $r1 goto label1;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("No InputStream");

        throw $r10;

     label1:
        $r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i6 = (int) -1;

        if $i0 != $i6 goto label2;

        if z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        $i1 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        $r4 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        if $i0 != 66 goto label3;

        if $i1 != 90 goto label3;

        if $i2 == 104 goto label6;

     label3:
        $r11 = new java.io.IOException;

        if z0 == 0 goto label4;

        $r9 = "Stream is not in the BZip2 format";

        goto label5;

     label4:
        $r9 = "Garbage after a valid BZip2 stream";

     label5:
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label6:
        $r6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        $i3 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        if $i3 < 49 goto label7;

        if $i3 <= 57 goto label8;

     label7:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("BZip2 block size is invalid");

        throw $r12;

     label8:
        $i4 = $i3 - 48;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int blockSize100k> = $i4;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC> = 0;

        return 1;
    }

    private void initBlock() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.CRC $r2;
        int $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r6;
        boolean $z0, $z1;
        char $c0, $c1, $c2, $c3, $c4, $c5;
        java.io.IOException $r5;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

     label1:
        $c0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $c1 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $c2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $c3 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $c4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $c5 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char bsGetUByte()>();

        $i9 = (int) $c0;

        if $i9 != 23 goto label3;

        $i10 = (int) $c1;

        if $i10 != 114 goto label3;

        $i11 = (int) $c2;

        if $i11 != 69 goto label3;

        $i12 = (int) $c3;

        if $i12 != 56 goto label3;

        $i13 = (int) $c4;

        if $i13 != 80 goto label3;

        $i14 = (int) $c5;

        if $i14 == 144 goto label2;

        goto label3;

     label2:
        $z0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean complete()>();

        if $z0 == 0 goto label1;

        return;

     label3:
        $i15 = (int) $c0;

        if $i15 != 49 goto label4;

        $i16 = (int) $c1;

        if $i16 != 65 goto label4;

        $i17 = (int) $c2;

        if $i17 != 89 goto label4;

        $i18 = (int) $c3;

        if $i18 != 38 goto label4;

        $i19 = (int) $c4;

        if $i19 != 83 goto label4;

        $i20 = (int) $c5;

        if $i20 == 89 goto label5;

     label4:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 0;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("bad block header");

        throw $r5;

     label5:
        $i6 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsGetInt()>();

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedBlockCRC> = $i6;

        $i7 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(1);

        if $i7 != 1 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean blockRandomised> = $z1;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        if $r1 != null goto label8;

        $r6 = new org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data;

        $i8 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int blockSize100k>;

        specialinvoke $r6.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: void <init>(int)>($i8);

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data> = $r6;

     label8:
        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void getAndMoveToFrontDecode()>();

        $r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        virtualinvoke $r2.<org.apache.commons.compress.compressors.bzip2.CRC: void initialiseCRC()>();

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 1;

        return;
    }

    private void endBlock() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.CRC $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.IOException $r2;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        $i0 = virtualinvoke $r1.<org.apache.commons.compress.compressors.bzip2.CRC: int getFinalCRC()>();

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedBlockCRC> = $i0;

        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedBlockCRC>;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedBlockCRC>;

        if $i2 == $i1 goto label1;

        $i11 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedCombinedCRC>;

        $i14 = $i11 << 1;

        $i12 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedCombinedCRC>;

        $i13 = $i12 >>> 31;

        $i15 = $i14 | $i13;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC> = $i15;

        $i17 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC>;

        $i16 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedBlockCRC>;

        $i18 = $i17 ^ $i16;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC> = $i18;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("BZip2 CRC error");

        throw $r2;

     label1:
        $i3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC>;

        $i6 = $i3 << 1;

        $i4 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC>;

        $i5 = $i4 >>> 31;

        $i7 = $i6 | $i5;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC> = $i7;

        $i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC>;

        $i8 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedBlockCRC>;

        $i10 = $i9 ^ $i8;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC> = $i10;

        return;
    }

    private boolean complete() throws java.io.IOException
    {
        java.io.IOException $r1;
        int $i0, $i1, $i2;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsGetInt()>();

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedCombinedCRC> = $i0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data> = null;

        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int storedCombinedCRC>;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int computedCombinedCRC>;

        if $i2 == $i1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("BZip2 CRC error");

        throw $r1;

     label1:
        $z0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean decompressConcatenated>;

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean init(boolean)>(0);

        if $z1 != 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r3;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream r1, $r2;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        if r1 == null goto label5;

     label1:
        $r2 = <java.lang.System: java.io.InputStream in>;

        if r1 == $r2 goto label2;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label2:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data> = null;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in> = null;

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data> = null;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in> = null;

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private int bsR(int) throws java.io.IOException
    {
        java.io.IOException $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        i0 := @parameter0: int;

        i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive>;

        i10 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff>;

        if i9 >= i0 goto label3;

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

     label1:
        $i7 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i7 >= 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r2;

     label2:
        $i8 = i10 << 8;

        i10 = $i8 | $i7;

        i9 = i9 + 8;

        if i9 < i0 goto label1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff> = i10;

     label3:
        $i1 = i9 - i0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive> = $i1;

        $i2 = i9 - i0;

        $i5 = i10 >> $i2;

        $i3 = 1 << i0;

        $i4 = $i3 - 1;

        $i6 = $i5 & $i4;

        return $i6;
    }

    private boolean bsGetBit() throws java.io.IOException
    {
        java.io.IOException $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        i6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive>;

        i7 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff>;

        if i6 >= 1 goto label2;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        $i4 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i4 >= 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r2;

     label1:
        $i5 = i7 << 8;

        i7 = $i5 | $i4;

        i6 = i6 + 8;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff> = i7;

     label2:
        $i0 = i6 - 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive> = $i0;

        $i1 = i6 - 1;

        $i2 = i7 >> $i1;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private char bsGetUByte() throws java.io.IOException
    {
        int $i0;
        char $c1;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(8);

        $c1 = (char) $i0;

        return $c1;
    }

    private int bsGetInt() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(8);

        $i1 = $i0 << 8;

        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(8);

        $i3 = $i1 | $i2;

        $i4 = $i3 << 8;

        $i5 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(8);

        $i6 = $i4 | $i5;

        $i7 = $i6 << 8;

        $i8 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(8);

        $i9 = $i7 | $i8;

        return $i9;
    }

    private static void hbCreateDecodeTables(int[], int[], int[], char[], int, int, int)
    {
        int[] r0, r1, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i15, $i16, $i17, $i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, $i32, $i34, $i35;
        char $c14, $c18;
        char[] r2;

        r1 := @parameter0: int[];

        r0 := @parameter1: int[];

        r3 := @parameter2: int[];

        r2 := @parameter3: char[];

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i20 = i0;

        i21 = 0;

     label01:
        if i20 > i1 goto label05;

        i22 = 0;

     label02:
        if i22 >= i2 goto label04;

        $c18 = r2[i22];

        $i32 = (int) $c18;

        if $i32 != i20 goto label03;

        $i19 = i21;

        i21 = i21 + 1;

        r3[$i19] = i22;

     label03:
        i22 = i22 + 1;

        goto label02;

     label04:
        i20 = i20 + 1;

        goto label01;

     label05:
        i23 = 23;

     label06:
        $i34 = (int) -1;

        i23 = i23 + $i34;

        if i23 <= 0 goto label07;

        r0[i23] = 0;

        r1[i23] = 0;

        goto label06;

     label07:
        i24 = 0;

     label08:
        if i24 >= i2 goto label09;

        $c14 = r2[i24];

        $i35 = (int) $c14;

        $i15 = $i35 + 1;

        $i16 = r0[$i15];

        $i17 = $i16 + 1;

        r0[$i15] = $i17;

        i24 = i24 + 1;

        goto label08;

     label09:
        i25 = 1;

        i26 = r0[0];

     label10:
        if i25 >= 23 goto label11;

        $i13 = r0[i25];

        i26 = i26 + $i13;

        r0[i25] = i26;

        i25 = i25 + 1;

        goto label10;

     label11:
        i27 = i0;

        i28 = 0;

        i29 = r0[i0];

     label12:
        if i27 > i1 goto label13;

        $i9 = i27 + 1;

        i10 = r0[$i9];

        $i11 = i10 - i29;

        i30 = i28 + $i11;

        i29 = i10;

        $i12 = i30 - 1;

        r1[i27] = $i12;

        i28 = i30 << 1;

        i27 = i27 + 1;

        goto label12;

     label13:
        i31 = i0 + 1;

     label14:
        if i31 > i1 goto label15;

        $i3 = i31 - 1;

        $i4 = r1[$i3];

        $i5 = $i4 + 1;

        $i7 = $i5 << 1;

        $i6 = r0[i31];

        $i8 = $i7 - $i6;

        r0[i31] = $i8;

        i31 = i31 + 1;

        goto label14;

     label15:
        return;
    }

    private void recvDecodingTables() throws java.io.IOException
    {
        byte[] r3, r4, r5;
        char[][] r7;
        byte $b5, $b7, $b8, $b9, b26, $b30;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i4, $i6, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i27, i28, i29, $i32, $i34, $i35, $i37;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        boolean[] r2;
        char $c3;
        char[] r6;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r2 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: boolean[] inUse>;

        r3 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] recvDecodingTables_pos>;

        r4 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selector>;

        r5 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selectorMtf>;

        i14 = 0;

        i15 = 0;

     label01:
        if i15 >= 16 goto label03;

        $z4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean bsGetBit()>();

        if $z4 == 0 goto label02;

        $i13 = 1 << i15;

        i14 = i14 | $i13;

     label02:
        i15 = i15 + 1;

        goto label01;

     label03:
        i16 = 256;

     label04:
        $i32 = (int) -1;

        i16 = i16 + $i32;

        if i16 < 0 goto label05;

        r2[i16] = 0;

        goto label04;

     label05:
        i17 = 0;

     label06:
        if i17 >= 16 goto label10;

        $i10 = 1 << i17;

        $i11 = i14 & $i10;

        if $i11 == 0 goto label09;

        i18 = i17 << 4;

        i19 = 0;

     label07:
        if i19 >= 16 goto label09;

        $z3 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean bsGetBit()>();

        if $z3 == 0 goto label08;

        $i12 = i18 + i19;

        r2[$i12] = 1;

     label08:
        i19 = i19 + 1;

        goto label07;

     label09:
        i17 = i17 + 1;

        goto label06;

     label10:
        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void makeMaps()>();

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int nInUse>;

        i20 = $i0 + 2;

        $i1 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(3);

        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(15);

        i21 = 0;

     label11:
        if i21 >= $i2 goto label14;

        i22 = 0;

     label12:
        $z2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean bsGetBit()>();

        if $z2 == 0 goto label13;

        i22 = i22 + 1;

        goto label12;

     label13:
        $b9 = (byte) i22;

        r5[i21] = $b9;

        i21 = i21 + 1;

        goto label11;

     label14:
        i23 = $i1;

     label15:
        $i34 = (int) -1;

        i23 = i23 + $i34;

        if i23 < 0 goto label16;

        $b8 = (byte) i23;

        r3[i23] = $b8;

        goto label15;

     label16:
        i24 = 0;

     label17:
        if i24 >= $i2 goto label20;

        $b5 = r5[i24];

        $i35 = (int) $b5;

        i25 = $i35 & 255;

        b26 = r3[i25];

     label18:
        if i25 <= 0 goto label19;

        $i6 = i25 - 1;

        $b7 = r3[$i6];

        r3[i25] = $b7;

        $i37 = (int) -1;

        i25 = i25 + $i37;

        goto label18;

     label19:
        r3[0] = b26;

        r4[i24] = b26;

        i24 = i24 + 1;

        goto label17;

     label20:
        r7 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: char[][] temp_charArray2d>;

        i27 = 0;

     label21:
        if i27 >= $i1 goto label28;

        i28 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(5);

        r6 = r7[i27];

        i29 = 0;

     label22:
        if i29 >= i20 goto label27;

     label23:
        $z0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean bsGetBit()>();

        if $z0 == 0 goto label26;

        $i4 = i28;

        $z1 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean bsGetBit()>();

        if $z1 == 0 goto label24;

        $b30 = -1;

        goto label25;

     label24:
        $b30 = 1;

     label25:
        i28 = $i4 + $b30;

        goto label23;

     label26:
        $c3 = (char) i28;

        r6[i29] = $c3;

        i29 = i29 + 1;

        goto label22;

     label27:
        i27 = i27 + 1;

        goto label21;

     label28:
        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void createHuffmanDecodingTables(int,int)>(i20, $i1);

        return;
    }

    private void createHuffmanDecodingTables(int, int)
    {
        int[][] r4, r5, r6;
        char[][] r2;
        int[] r3, $r9, $r10, $r11;
        int i0, i1, i3, i4, i5, i6, $i8, $i9, $i10;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r1;
        char c2;
        char[] r7, $r8;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r2 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: char[][] temp_charArray2d>;

        r3 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] minLens>;

        r4 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] limit>;

        r5 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] base>;

        r6 = r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] perm>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        i4 = 32;

        i5 = 0;

        r7 = r2[i3];

        i6 = i1;

     label2:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        if i6 < 0 goto label5;

        c2 = r7[i6];

        $i9 = (int) c2;

        if $i9 <= i5 goto label3;

        i5 = c2;

     label3:
        $i10 = (int) c2;

        if $i10 >= i4 goto label4;

        i4 = c2;

     label4:
        goto label2;

     label5:
        $r11 = r4[i3];

        $r10 = r5[i3];

        $r9 = r6[i3];

        $r8 = r2[i3];

        staticinvoke <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void hbCreateDecodeTables(int[],int[],int[],char[],int,int,int)>($r11, $r10, $r9, $r8, i4, i5, i1);

        r3[i3] = i4;

        i3 = i3 + 1;

        goto label1;

     label6:
        return;
    }

    private void getAndMoveToFrontDecode() throws java.io.IOException
    {
        byte[] r3, r5, r6;
        byte $b5, $b27, $b29, $b33, $b49, b67;
        short $s7, $s30, s60, s64, s70, $s77, $s84, $s94, $s100, $s106;
        java.io.IOException $r21, $r22, $r23, $r24, $r25, $r26;
        char[] r7;
        int[][] r9, r10, r11;
        int[] r4, r8, r18, r19, r20;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r2;
        int $i0, $i1, i2, $i3, i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, i53, i54, i55, i56, i57, i58, i59, i61, i62, i63, i65, i66, i69, i71, i72, $i74, $i76, $i78, $i79, $i80, $i81, $i83, $i85, $i86, $i87, $i88, $i90, $i92, $i93, $i95, $i96, $i98, $i99, $i101, $i102, $i103, $i105, $i107, $i108, $i109, $i110, $i112, $i114;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        char $c6, $c51, $c52, c68;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(24);

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int origPtr> = $i0;

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void recvDecodingTables()>();

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r3 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        r4 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] unzftab>;

        r5 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selector>;

        r6 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] seqToUnseq>;

        r7 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: char[] getAndMoveToFrontDecode_yy>;

        r8 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] minLens>;

        r9 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] limit>;

        r10 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] base>;

        r11 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] perm>;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int blockSize100k>;

        i2 = $i1 * 100000;

        i53 = 256;

     label01:
        $i74 = (int) -1;

        i53 = i53 + $i74;

        if i53 < 0 goto label02;

        $c52 = (char) i53;

        r7[i53] = $c52;

        r4[i53] = 0;

        goto label01;

     label02:
        i54 = 0;

        i55 = 49;

        $i3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int nInUse>;

        i4 = $i3 + 1;

        i56 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int getAndMoveToFrontDecode0(int)>(0);

        i57 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff>;

        i58 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive>;

        $i76 = (int) -1;

        i59 = $i76;

        $b5 = r5[0];

        $s77 = (short) $b5;

        s60 = $s77 & 255;

        $i78 = (int) s60;

        r18 = r10[$i78];

        $i79 = (int) s60;

        r19 = r9[$i79];

        $i80 = (int) s60;

        r20 = r11[$i80];

        $i81 = (int) s60;

        i61 = r8[$i81];

     label03:
        if i56 == i4 goto label38;

        if i56 == 0 goto label04;

        if i56 != 1 goto label22;

     label04:
        $i83 = (int) -1;

        i62 = $i83;

        i63 = 1;

     label05:
        if i56 != 0 goto label06;

        i62 = i62 + i63;

        goto label07;

     label06:
        if i56 != 1 goto label18;

        $i12 = i63 << 1;

        i62 = i62 + $i12;

     label07:
        if i55 != 0 goto label08;

        i55 = 49;

        i54 = i54 + 1;

        $b27 = r5[i54];

        $s84 = (short) $b27;

        s64 = $s84 & 255;

        $i85 = (int) s64;

        r18 = r10[$i85];

        $i86 = (int) s64;

        r19 = r9[$i86];

        $i87 = (int) s64;

        r20 = r11[$i87];

        $i88 = (int) s64;

        i61 = r8[$i88];

        goto label09;

     label08:
        $i90 = (int) -1;

        i55 = i55 + $i90;

     label09:
        i65 = i61;

     label10:
        if i58 >= i65 goto label12;

        $i25 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i25 < 0 goto label11;

        $i26 = i57 << 8;

        i57 = $i26 | $i25;

        i58 = i58 + 8;

        goto label10;

     label11:
        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r21;

     label12:
        $i13 = i58 - i65;

        $i16 = i57 >> $i13;

        $i14 = 1 << i65;

        $i15 = $i14 - 1;

        i66 = $i16 & $i15;

        i58 = i58 - i65;

     label13:
        $i17 = r19[i65];

        if i66 <= $i17 goto label17;

        i65 = i65 + 1;

     label14:
        if i58 >= 1 goto label16;

        $i23 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i23 < 0 goto label15;

        $i24 = i57 << 8;

        i57 = $i24 | $i23;

        i58 = i58 + 8;

        goto label14;

     label15:
        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r22;

     label16:
        $i92 = (int) -1;

        i58 = i58 + $i92;

        $i22 = i66 << 1;

        $i20 = i57 >> i58;

        $i21 = $i20 & 1;

        i66 = $i22 | $i21;

        goto label13;

     label17:
        $i18 = r18[i65];

        $i19 = i66 - $i18;

        i56 = r20[$i19];

        i63 = i63 << 1;

        goto label05;

     label18:
        $c6 = r7[0];

        $i93 = (int) $c6;

        b67 = r6[$i93];

        $s94 = (short) b67;

        $s7 = $s94 & 255;

        $i95 = (int) $s7;

        $i9 = r4[$i95];

        $i8 = i62 + 1;

        $i10 = $i9 + $i8;

        $i96 = (int) $s7;

        r4[$i96] = $i10;

     label19:
        $i11 = i62;

        $i98 = (int) -1;

        i62 = i62 + $i98;

        if $i11 < 0 goto label20;

        i59 = i59 + 1;

        r3[i59] = b67;

        goto label19;

     label20:
        if i59 < i2 goto label21;

        $r23 = new java.io.IOException;

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>("block overrun");

        throw $r23;

     label21:
        goto label03;

     label22:
        i59 = i59 + 1;

        if i59 < i2 goto label23;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("block overrun");

        throw $r24;

     label23:
        $i28 = i56 - 1;

        c68 = r7[$i28];

        $i99 = (int) c68;

        $b29 = r6[$i99];

        $s100 = (short) $b29;

        $s30 = $s100 & 255;

        $i101 = (int) $s30;

        $i31 = r4[$i101];

        $i32 = $i31 + 1;

        $i102 = (int) $s30;

        r4[$i102] = $i32;

        $i103 = (int) c68;

        $b33 = r6[$i103];

        r3[i59] = $b33;

        if i56 > 16 goto label26;

        i69 = i56 - 1;

     label24:
        if i69 <= 0 goto label25;

        $i50 = i69;

        $i105 = (int) -1;

        i69 = i69 + $i105;

        $c51 = r7[i69];

        r7[$i50] = $c51;

        goto label24;

     label25:
        goto label27;

     label26:
        $i34 = i56 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r7, 1, $i34);

     label27:
        r7[0] = c68;

        if i55 != 0 goto label28;

        i55 = 49;

        i54 = i54 + 1;

        $b49 = r5[i54];

        $s106 = (short) $b49;

        s70 = $s106 & 255;

        $i107 = (int) s70;

        r18 = r10[$i107];

        $i108 = (int) s70;

        r19 = r9[$i108];

        $i109 = (int) s70;

        r20 = r11[$i109];

        $i110 = (int) s70;

        i61 = r8[$i110];

        goto label29;

     label28:
        $i112 = (int) -1;

        i55 = i55 + $i112;

     label29:
        i71 = i61;

     label30:
        if i58 >= i71 goto label32;

        $i47 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i47 < 0 goto label31;

        $i48 = i57 << 8;

        i57 = $i48 | $i47;

        i58 = i58 + 8;

        goto label30;

     label31:
        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r25;

     label32:
        $i35 = i58 - i71;

        $i38 = i57 >> $i35;

        $i36 = 1 << i71;

        $i37 = $i36 - 1;

        i72 = $i38 & $i37;

        i58 = i58 - i71;

     label33:
        $i39 = r19[i71];

        if i72 <= $i39 goto label37;

        i71 = i71 + 1;

     label34:
        if i58 >= 1 goto label36;

        $i45 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i45 < 0 goto label35;

        $i46 = i57 << 8;

        i57 = $i46 | $i45;

        i58 = i58 + 8;

        goto label34;

     label35:
        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r26;

     label36:
        $i114 = (int) -1;

        i58 = i58 + $i114;

        $i44 = i72 << 1;

        $i42 = i57 >> i58;

        $i43 = $i42 & 1;

        i72 = $i44 | $i43;

        goto label33;

     label37:
        $i40 = r18[i71];

        $i41 = i72 - $i40;

        i56 = r20[$i41];

        goto label03;

     label38:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int last> = i59;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive> = i58;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff> = i57;

        return;
    }

    private int getAndMoveToFrontDecode0(int) throws java.io.IOException
    {
        byte[] $r3;
        int[][] $r4, $r7, $r8;
        byte $b1;
        int[] r5, $r6, $r9, $r10;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data r2;
        short s2, $s16;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, $i17, $i18, $i20, $i21, $i22;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.IOException $r12;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: java.io.InputStream in>;

        r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r3 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] selector>;

        $b1 = $r3[i0];

        $s16 = (short) $b1;

        s2 = $s16 & 255;

        $r4 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] limit>;

        $i17 = (int) s2;

        r5 = $r4[$i17];

        $r6 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] minLens>;

        $i18 = (int) s2;

        i12 = $r6[$i18];

        i13 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsR(int)>(i12);

        i14 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive>;

        i15 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff>;

     label1:
        $i3 = r5[i12];

        if i13 <= $i3 goto label5;

        i12 = i12 + 1;

     label2:
        if i14 >= 1 goto label4;

        $i10 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i10 < 0 goto label3;

        $i11 = i15 << 8;

        i15 = $i11 | $i10;

        i14 = i14 + 8;

        goto label2;

     label3:
        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r12;

     label4:
        $i20 = (int) -1;

        i14 = i14 + $i20;

        $i9 = i13 << 1;

        $i7 = i15 >> i14;

        $i8 = $i7 & 1;

        i13 = $i9 | $i8;

        goto label1;

     label5:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsLive> = i14;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int bsBuff> = i15;

        $r7 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] perm>;

        $i21 = (int) s2;

        $r10 = $r7[$i21];

        $r8 = r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[][] base>;

        $i22 = (int) s2;

        $r9 = $r8[$i22];

        $i4 = $r9[i12];

        $i5 = i13 - $i4;

        $i6 = $r10[$i5];

        return $i6;
    }

    private int setupBlock() throws java.io.IOException
    {
        byte[] r7;
        byte $b10;
        int[] r3, $r5, $r9;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r2, $r4, $r6, $r8;
        boolean $z0;
        short $s11, $s21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i14, i15, i16, i17, i18, $i20, $i22, $i23;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        java.io.IOException $r11;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState>;

        if $i0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        if $r1 != null goto label2;

     label1:
        $i20 = (int) -1;

        return $i20;

     label2:
        $r2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r3 = $r2.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] cftab>;

        $r4 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int last>;

        $i2 = $i1 + 1;

        $r5 = virtualinvoke $r4.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] initTT(int)>($i2);

        $r6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        r7 = $r6.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        r3[0] = 0;

        $r8 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r9 = $r8.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] unzftab>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r3, 1, 256);

        i15 = 1;

        i16 = r3[0];

     label3:
        if i15 > 256 goto label4;

        $i14 = r3[i15];

        i16 = i16 + $i14;

        r3[i15] = i16;

        i15 = i15 + 1;

        goto label3;

     label4:
        i17 = 0;

        i18 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int last>;

     label5:
        if i17 > i18 goto label6;

        $b10 = r7[i17];

        $s21 = (short) $b10;

        $s11 = $s21 & 255;

        $i22 = (int) $s11;

        $i12 = r3[$i22];

        $i13 = $i12 + 1;

        $i23 = (int) $s11;

        r3[$i23] = $i13;

        $r5[$i12] = i17;

        i17 = i17 + 1;

        goto label5;

     label6:
        $i3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int origPtr>;

        if $i3 < 0 goto label7;

        $i5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int origPtr>;

        $i4 = lengthof $r5;

        if $i5 < $i4 goto label8;

     label7:
        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("stream corrupted");

        throw $r11;

     label8:
        $i6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int origPtr>;

        $i7 = $r5[$i6];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos> = $i7;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2> = 256;

        $z0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: boolean blockRandomised>;

        if $z0 == 0 goto label9;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos> = 0;

        $i9 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartA()>();

        return $i9;

     label9:
        $i8 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartA()>();

        return $i8;
    }

    private int setupRandPartA() throws java.io.IOException
    {
        byte[] $r2;
        byte $b5;
        int[] $r4;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r3;
        boolean $z0;
        org.apache.commons.compress.compressors.bzip2.CRC $r5;
        short $s11, s19, $s21;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i22, $i23, $i24;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int last>;

        if $i1 > $i0 goto label5;

        $i3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_chPrev> = $i3;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r2 = $r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        $i4 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $b5 = $r2[$i4];

        $s21 = (short) $b5;

        s19 = $s21 & 255;

        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r4 = $r3.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt>;

        $i6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $i7 = $r4[$i6];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos> = $i7;

        $i8 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        if $i8 != 0 goto label1;

        $i14 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos>;

        $i15 = staticinvoke <org.apache.commons.compress.compressors.bzip2.Rand: int rNums(int)>($i14);

        $i16 = $i15 - 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo> = $i16;

        $i17 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos>;

        $i18 = $i17 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos> = $i18;

        if $i18 != 512 goto label2;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos> = 0;

        goto label2;

     label1:
        $i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        $i10 = $i9 - 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo> = $i10;

     label2:
        $i20 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        if $i20 != 1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $s11 = s19 ^ $z0;

        $i22 = (int) $s11;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2> = $i22;

        $i12 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i13 = $i12 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2> = $i13;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 3;

        $r5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        $i23 = (int) $s11;

        virtualinvoke $r5.<org.apache.commons.compress.compressors.bzip2.CRC: void updateCRC(int)>($i23);

        $i24 = (int) $s11;

        return $i24;

     label5:
        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void endBlock()>();

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void initBlock()>();

        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupBlock()>();

        return $i2;
    }

    private int setupNoRandPartA() throws java.io.IOException
    {
        byte[] $r2;
        org.apache.commons.compress.compressors.bzip2.CRC $r5;
        short s6, $s11;
        byte $b5;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r3;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int last>;

        if $i1 > $i0 goto label1;

        $i3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_chPrev> = $i3;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r2 = $r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        $i4 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $b5 = $r2[$i4];

        $s11 = (short) $b5;

        s6 = $s11 & 255;

        $i12 = (int) s6;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2> = $i12;

        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r4 = $r3.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt>;

        $i7 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $i8 = $r4[$i7];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos> = $i8;

        $i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i10 = $i9 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2> = $i10;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 6;

        $r5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        $i13 = (int) s6;

        virtualinvoke $r5.<org.apache.commons.compress.compressors.bzip2.CRC: void updateCRC(int)>($i13);

        $i14 = (int) s6;

        return $i14;

     label1:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 5;

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void endBlock()>();

        specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: void initBlock()>();

        $i2 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupBlock()>();

        return $i2;
    }

    private int setupRandPartB() throws java.io.IOException
    {
        byte[] $r2;
        short $s7, $s25;
        byte $b6;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r3;
        char $c8, $c15, $c16, $c17;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_chPrev>;

        if $i1 == $i0 goto label1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 2;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = 1;

        $i23 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartA()>();

        return $i23;

     label1:
        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = $i3;

        if $i3 < 4 goto label5;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r2 = $r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        $i5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $b6 = $r2[$i5];

        $s25 = (short) $b6;

        $s7 = $s25 & 255;

        $c8 = (char) $s7;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z> = $c8;

        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r4 = $r3.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt>;

        $i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $i10 = $r4[$i9];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos> = $i10;

        $i11 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        if $i11 != 0 goto label2;

        $i18 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos>;

        $i19 = staticinvoke <org.apache.commons.compress.compressors.bzip2.Rand: int rNums(int)>($i18);

        $i20 = $i19 - 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo> = $i20;

        $i21 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos>;

        $i22 = $i21 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos> = $i22;

        if $i22 != 512 goto label3;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rTPos> = 0;

        goto label3;

     label2:
        $i12 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        $i13 = $i12 - 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo> = $i13;

     label3:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2> = 0;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 4;

        $i24 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_rNToGo>;

        if $i24 != 1 goto label4;

        $c15 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z>;

        $c16 = $c15 ^ 1;

        $c17 = (char) $c16;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z> = $c17;

     label4:
        $i14 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartC()>();

        return $i14;

     label5:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 2;

        $i4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartA()>();

        return $i4;
    }

    private int setupRandPartC() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.CRC $r1;
        char $c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2>;

        $c0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z>;

        $i9 = (int) $c0;

        if $i1 >= $i9 goto label1;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        $i5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        virtualinvoke $r1.<org.apache.commons.compress.compressors.bzip2.CRC: void updateCRC(int)>($i5);

        $i6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2>;

        $i7 = $i6 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2> = $i7;

        $i8 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        return $i8;

     label1:
        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 2;

        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2> = $i3;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = 0;

        $i4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupRandPartA()>();

        return $i4;
    }

    private int setupNoRandPartB() throws java.io.IOException
    {
        byte[] $r2;
        short $s7, $s13;
        byte $b6;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9, $i10, $i11, $i12;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data $r1, $r3;
        char $c8;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        $i0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_chPrev>;

        if $i1 == $i0 goto label1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = 1;

        $i12 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartA()>();

        return $i12;

     label1:
        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = $i3;

        if $i3 < 4 goto label2;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r2 = $r1.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: byte[] ll8>;

        $i5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $b6 = $r2[$i5];

        $s13 = (short) $b6;

        $s7 = $s13 & 255;

        $c8 = (char) $s7;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z> = $c8;

        $r3 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data>;

        $r4 = $r3.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data: int[] tt>;

        $i9 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos>;

        $i10 = $r4[$i9];

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_tPos> = $i10;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2> = 0;

        $i11 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartC()>();

        return $i11;

     label2:
        $i4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartA()>();

        return $i4;
    }

    private int setupNoRandPartC() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.bzip2.CRC $r1;
        char $c0;
        int $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8;
        org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream r0;

        r0 := @this: org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;

        $i1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2>;

        $c0 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: char su_z>;

        $i8 = (int) $c0;

        if $i1 >= $i8 goto label1;

        i5 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_ch2>;

        $r1 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: org.apache.commons.compress.compressors.bzip2.CRC crc>;

        virtualinvoke $r1.<org.apache.commons.compress.compressors.bzip2.CRC: void updateCRC(int)>(i5);

        $i6 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2>;

        $i7 = $i6 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_j2> = $i7;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int currentState> = 7;

        return i5;

     label1:
        $i2 = r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2>;

        $i3 = $i2 + 1;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_i2> = $i3;

        r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int su_count> = 0;

        $i4 = specialinvoke r0.<org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int setupNoRandPartA()>();

        return $i4;
    }

    public static boolean matches(byte[], int)
    {
        byte[] r0;
        byte $b1, $b2, $b3;
        int i0, $i4, $i5, $i6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        if i0 >= 3 goto label1;

        return 0;

     label1:
        $b1 = r0[0];

        $i4 = (int) $b1;

        if $i4 == 66 goto label2;

        return 0;

     label2:
        $b2 = r0[1];

        $i5 = (int) $b2;

        if $i5 == 90 goto label3;

        return 0;

     label3:
        $b3 = r0[2];

        $i6 = (int) $b3;

        if $i6 == 104 goto label4;

        return 0;

     label4:
        return 1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int NO_RAND_PART_C_STATE> = 7;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int NO_RAND_PART_B_STATE> = 6;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int NO_RAND_PART_A_STATE> = 5;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int RAND_PART_C_STATE> = 4;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int RAND_PART_B_STATE> = 3;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int RAND_PART_A_STATE> = 2;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int START_BLOCK_STATE> = 1;

        <org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream: int EOF> = 0;

        return;
    }
}
