public class org.apache.zookeeper.txn.TxnHeader extends java.lang.Object implements org.apache.jute.Record
{
    private long clientId;
    private int cxid;
    private long zxid;
    private long time;
    private int type;

    public void <init>()
    {
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(long, int, long, long, int)
    {
        int i1, i4;
        org.apache.zookeeper.txn.TxnHeader r0;
        long l0, l2, l3;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.txn.TxnHeader: long clientId> = l0;

        r0.<org.apache.zookeeper.txn.TxnHeader: int cxid> = i1;

        r0.<org.apache.zookeeper.txn.TxnHeader: long zxid> = l2;

        r0.<org.apache.zookeeper.txn.TxnHeader: long time> = l3;

        r0.<org.apache.zookeeper.txn.TxnHeader: int type> = i4;

        return;
    }

    public long getClientId()
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $l0 = r0.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        return $l0;
    }

    public void setClientId(long)
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.txn.TxnHeader: long clientId> = l0;

        return;
    }

    public int getCxid()
    {
        int $i0;
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $i0 = r0.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        return $i0;
    }

    public void setCxid(int)
    {
        int i0;
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.txn.TxnHeader: int cxid> = i0;

        return;
    }

    public long getZxid()
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $l0 = r0.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        return $l0;
    }

    public void setZxid(long)
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.txn.TxnHeader: long zxid> = l0;

        return;
    }

    public long getTime()
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $l0 = r0.<org.apache.zookeeper.txn.TxnHeader: long time>;

        return $l0;
    }

    public void setTime(long)
    {
        org.apache.zookeeper.txn.TxnHeader r0;
        long l0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.txn.TxnHeader: long time> = l0;

        return;
    }

    public int getType()
    {
        int $i0;
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $i0 = r0.<org.apache.zookeeper.txn.TxnHeader: int type>;

        return $i0;
    }

    public void setType(int)
    {
        int i0;
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.txn.TxnHeader: int type> = i0;

        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.txn.TxnHeader r1;
        long $l0, $l2, $l3;
        org.apache.jute.OutputArchive r0;
        int $i1, $i4;
        java.lang.String r2;

        r1 := @this: org.apache.zookeeper.txn.TxnHeader;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $l0 = r1.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeLong(long,java.lang.String)>($l0, "clientId");

        $i1 = r1.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i1, "cxid");

        $l2 = r1.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeLong(long,java.lang.String)>($l2, "zxid");

        $l3 = r1.<org.apache.zookeeper.txn.TxnHeader: long time>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeLong(long,java.lang.String)>($l3, "time");

        $i4 = r1.<org.apache.zookeeper.txn.TxnHeader: int type>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i4, "type");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.InputArchive r0;
        org.apache.zookeeper.txn.TxnHeader r2;
        long $l0, $l2, $l3;
        int $i1, $i4;
        java.lang.String r1;

        r2 := @this: org.apache.zookeeper.txn.TxnHeader;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $l0 = interfaceinvoke r0.<org.apache.jute.InputArchive: long readLong(java.lang.String)>("clientId");

        r2.<org.apache.zookeeper.txn.TxnHeader: long clientId> = $l0;

        $i1 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("cxid");

        r2.<org.apache.zookeeper.txn.TxnHeader: int cxid> = $i1;

        $l2 = interfaceinvoke r0.<org.apache.jute.InputArchive: long readLong(java.lang.String)>("zxid");

        r2.<org.apache.zookeeper.txn.TxnHeader: long zxid> = $l2;

        $l3 = interfaceinvoke r0.<org.apache.jute.InputArchive: long readLong(java.lang.String)>("time");

        r2.<org.apache.zookeeper.txn.TxnHeader: long time> = $l3;

        $i4 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("type");

        r2.<org.apache.zookeeper.txn.TxnHeader: int type> = $i4;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        org.apache.jute.CsvOutputArchive $r1;
        java.io.ByteArrayOutputStream $r0;
        org.apache.zookeeper.txn.TxnHeader r2;
        long $l0, $l2, $l3;
        int $i1, $i4;
        java.lang.String $r3;

        r2 := @this: org.apache.zookeeper.txn.TxnHeader;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.jute.CsvOutputArchive;

        specialinvoke $r1.<org.apache.jute.CsvOutputArchive: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $l0 = r2.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeLong(long,java.lang.String)>($l0, "clientId");

        $i1 = r2.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i1, "cxid");

        $l2 = r2.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeLong(long,java.lang.String)>($l2, "zxid");

        $l3 = r2.<org.apache.zookeeper.txn.TxnHeader: long time>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeLong(long,java.lang.String)>($l3, "time");

        $i4 = r2.<org.apache.zookeeper.txn.TxnHeader: int type>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i4, "type");

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        return "ERROR";

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r0;
        java.io.DataOutput r1;
        org.apache.zookeeper.txn.TxnHeader r2;

        r2 := @this: org.apache.zookeeper.txn.TxnHeader;

        r1 := @parameter0: java.io.DataOutput;

        $r0 = new org.apache.jute.BinaryOutputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryOutputArchive: void <init>(java.io.DataOutput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.txn.TxnHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r0, "");

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r1;
        org.apache.zookeeper.txn.TxnHeader r2;
        org.apache.jute.BinaryInputArchive $r0;

        r2 := @this: org.apache.zookeeper.txn.TxnHeader;

        r1 := @parameter0: java.io.DataInput;

        $r0 = new org.apache.jute.BinaryInputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryInputArchive: void <init>(java.io.DataInput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.txn.TxnHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r0, "");

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        byte $b2, $b5, $b12, $b15, $b18, $b21, $b31, $b32, $b33, $b34, $b35, $b36, $b37, $b38, $b39, $b40, $b41;
        boolean $z0;
        long $l0, $l1, $l3, $l4, $l10, $l11, $l13, $l14, $l16, $l17, $l19, $l20;
        java.lang.ClassCastException $r4;
        int $i6, $i7, $i8, $i9, $i22, $i23, $i24, $i25, $i42, $i43, $i44;
        org.apache.zookeeper.txn.TxnHeader r1, r2;
        java.lang.Object r0;

        r2 := @this: org.apache.zookeeper.txn.TxnHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.txn.TxnHeader;

        if $z0 != 0 goto label01;

        $r4 = new java.lang.ClassCastException;

        specialinvoke $r4.<java.lang.ClassCastException: void <init>(java.lang.String)>("Comparing different types of records.");

        throw $r4;

     label01:
        r1 = (org.apache.zookeeper.txn.TxnHeader) r0;

        $l1 = r2.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $l0 = r1.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label02;

        $b32 = 0;

        $b31 = 0;

        goto label04;

     label02:
        $l4 = r2.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $l3 = r1.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $b5 = $l4 cmp $l3;

        $i42 = (int) $b5;

        if $i42 >= 0 goto label03;

        $b32 = -1;

        $b31 = -1;

        goto label04;

     label03:
        $b32 = 1;

        $b31 = 1;

     label04:
        if $b31 == 0 goto label05;

        return $b32;

     label05:
        $i7 = r2.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        $i6 = r1.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        if $i7 != $i6 goto label06;

        $b34 = 0;

        $b33 = 0;

        goto label08;

     label06:
        $i9 = r2.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        $i8 = r1.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        if $i9 >= $i8 goto label07;

        $b34 = -1;

        $b33 = -1;

        goto label08;

     label07:
        $b34 = 1;

        $b33 = 1;

     label08:
        if $b33 == 0 goto label09;

        return $b34;

     label09:
        $l11 = r2.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $l10 = r1.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $b12 = $l11 cmp $l10;

        if $b12 != 0 goto label10;

        $b36 = 0;

        $b35 = 0;

        goto label12;

     label10:
        $l14 = r2.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $l13 = r1.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $b15 = $l14 cmp $l13;

        $i43 = (int) $b15;

        if $i43 >= 0 goto label11;

        $b36 = -1;

        $b35 = -1;

        goto label12;

     label11:
        $b36 = 1;

        $b35 = 1;

     label12:
        if $b36 == 0 goto label13;

        return $b35;

     label13:
        $l17 = r2.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $l16 = r1.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $b18 = $l17 cmp $l16;

        if $b18 != 0 goto label14;

        $b41 = 0;

        $b40 = 0;

        goto label16;

     label14:
        $l20 = r2.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $l19 = r1.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $b21 = $l20 cmp $l19;

        $i44 = (int) $b21;

        if $i44 >= 0 goto label15;

        $b41 = -1;

        $b40 = -1;

        goto label16;

     label15:
        $b41 = 1;

        $b40 = 1;

     label16:
        if $b40 == 0 goto label17;

        return $b41;

     label17:
        $i23 = r2.<org.apache.zookeeper.txn.TxnHeader: int type>;

        $i22 = r1.<org.apache.zookeeper.txn.TxnHeader: int type>;

        if $i23 != $i22 goto label18;

        $b39 = 0;

        $b38 = 0;

        $b37 = 0;

        goto label20;

     label18:
        $i25 = r2.<org.apache.zookeeper.txn.TxnHeader: int type>;

        $i24 = r1.<org.apache.zookeeper.txn.TxnHeader: int type>;

        if $i25 >= $i24 goto label19;

        $b39 = -1;

        $b38 = -1;

        $b37 = -1;

        goto label20;

     label19:
        $b39 = 1;

        $b38 = 1;

        $b37 = 1;

     label20:
        if $b39 == 0 goto label21;

        return $b37;

     label21:
        return $b38;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1, $l5, $l6, $l8, $l9;
        byte $b2, $b7, $b10;
        int $i3, $i4, $i11, $i12;
        boolean $z0, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        org.apache.zookeeper.txn.TxnHeader r1, r2;
        java.lang.Object r0;

        r1 := @this: org.apache.zookeeper.txn.TxnHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.txn.TxnHeader;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        if r0 != r1 goto label02;

        return 1;

     label02:
        r2 = (org.apache.zookeeper.txn.TxnHeader) r0;

        $l1 = r1.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $l0 = r2.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label03;

        $z7 = 1;

        $z6 = 1;

        goto label04;

     label03:
        $z7 = 0;

        $z6 = 0;

     label04:
        if $z6 != 0 goto label05;

        return $z7;

     label05:
        $i4 = r1.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        $i3 = r2.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        if $i4 != $i3 goto label06;

        $z14 = 1;

        $z13 = 1;

        goto label07;

     label06:
        $z14 = 0;

        $z13 = 0;

     label07:
        if $z14 != 0 goto label08;

        return $z13;

     label08:
        $l6 = r1.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $l5 = r2.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $b7 = $l6 cmp $l5;

        if $b7 != 0 goto label09;

        $z16 = 1;

        $z15 = 1;

        goto label10;

     label09:
        $z16 = 0;

        $z15 = 0;

     label10:
        if $z15 != 0 goto label11;

        return $z16;

     label11:
        $l9 = r1.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $l8 = r2.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $b10 = $l9 cmp $l8;

        if $b10 != 0 goto label12;

        $z9 = 1;

        $z8 = 1;

        goto label13;

     label12:
        $z9 = 0;

        $z8 = 0;

     label13:
        if $z9 != 0 goto label14;

        return $z8;

     label14:
        $i12 = r1.<org.apache.zookeeper.txn.TxnHeader: int type>;

        $i11 = r2.<org.apache.zookeeper.txn.TxnHeader: int type>;

        if $i12 != $i11 goto label15;

        $z12 = 1;

        $z11 = 1;

        $z10 = 1;

        goto label16;

     label15:
        $z12 = 0;

        $z11 = 0;

        $z10 = 0;

     label16:
        if $z11 != 0 goto label17;

        return $z12;

     label17:
        return $z10;
    }

    public int hashCode()
    {
        long $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13;
        int $i4, $i9, $i14, $i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25;
        org.apache.zookeeper.txn.TxnHeader r0;

        r0 := @this: org.apache.zookeeper.txn.TxnHeader;

        $l2 = r0.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $l0 = r0.<org.apache.zookeeper.txn.TxnHeader: long clientId>;

        $l1 = $l0 >>> 32;

        $l3 = $l2 ^ $l1;

        i16 = (int) $l3;

        i17 = 629 + i16;

        i18 = r0.<org.apache.zookeeper.txn.TxnHeader: int cxid>;

        $i4 = 37 * i17;

        i19 = $i4 + i18;

        $l7 = r0.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $l5 = r0.<org.apache.zookeeper.txn.TxnHeader: long zxid>;

        $l6 = $l5 >>> 32;

        $l8 = $l7 ^ $l6;

        i20 = (int) $l8;

        $i9 = 37 * i19;

        i21 = $i9 + i20;

        $l12 = r0.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $l10 = r0.<org.apache.zookeeper.txn.TxnHeader: long time>;

        $l11 = $l10 >>> 32;

        $l13 = $l12 ^ $l11;

        i22 = (int) $l13;

        $i14 = 37 * i21;

        i23 = $i14 + i22;

        i24 = r0.<org.apache.zookeeper.txn.TxnHeader: int type>;

        $i15 = 37 * i23;

        i25 = $i15 + i24;

        return i25;
    }

    public static java.lang.String signature()
    {
        return "LTxnHeader(lilli)";
    }
}
