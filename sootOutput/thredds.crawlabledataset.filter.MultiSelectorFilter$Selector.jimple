public class thredds.crawlabledataset.filter.MultiSelectorFilter$Selector extends java.lang.Object
{
    private boolean includer;
    private boolean applyToAtomicDataset;
    private boolean applyToCollectionDataset;
    private thredds.crawlabledataset.CrawlableDatasetFilter filter;

    public void <init>(thredds.crawlabledataset.CrawlableDatasetFilter, boolean, boolean, boolean)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        thredds.crawlabledataset.CrawlableDatasetFilter r1;
        boolean z0, z1, z2;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDatasetFilter;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: thredds.crawlabledataset.CrawlableDatasetFilter filter> = r1;

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean includer> = z0;

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToAtomicDataset> = z1;

        r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToCollectionDataset> = z2;

        return;
    }

    public thredds.crawlabledataset.CrawlableDatasetFilter getFilter()
    {
        thredds.crawlabledataset.CrawlableDatasetFilter $r1;
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $r1 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        return $r1;
    }

    public boolean isApplyToAtomicDataset()
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        boolean $z0;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $z0 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToAtomicDataset>;

        return $z0;
    }

    public boolean isApplyToCollectionDataset()
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        boolean $z0;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $z0 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToCollectionDataset>;

        return $z0;
    }

    public boolean match(thredds.crawlabledataset.CrawlableDataset)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        thredds.crawlabledataset.CrawlableDataset r1;
        thredds.crawlabledataset.CrawlableDatasetFilter $r2;
        boolean $z0;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $r2 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: thredds.crawlabledataset.CrawlableDatasetFilter filter>;

        $z0 = interfaceinvoke $r2.<thredds.crawlabledataset.CrawlableDatasetFilter: boolean accept(thredds.crawlabledataset.CrawlableDataset)>(r1);

        return $z0;
    }

    public boolean isApplicable(thredds.crawlabledataset.CrawlableDataset)
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        thredds.crawlabledataset.CrawlableDataset r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        r1 := @parameter0: thredds.crawlabledataset.CrawlableDataset;

        $z0 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToAtomicDataset>;

        if $z0 == 0 goto label1;

        $z3 = interfaceinvoke r1.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z3 != 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean applyToCollectionDataset>;

        if $z1 == 0 goto label2;

        $z2 = interfaceinvoke r1.<thredds.crawlabledataset.CrawlableDataset: boolean isCollection()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isIncluder()
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        boolean $z0;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $z0 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean includer>;

        return $z0;
    }

    public boolean isExcluder()
    {
        thredds.crawlabledataset.filter.MultiSelectorFilter$Selector r0;
        boolean $z0, $z1;

        r0 := @this: thredds.crawlabledataset.filter.MultiSelectorFilter$Selector;

        $z0 = r0.<thredds.crawlabledataset.filter.MultiSelectorFilter$Selector: boolean includer>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
