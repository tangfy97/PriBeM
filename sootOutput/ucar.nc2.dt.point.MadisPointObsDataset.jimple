public class ucar.nc2.dt.point.MadisPointObsDataset extends ucar.nc2.dt.point.PointObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private ucar.nc2.Structure recordVar;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;
    private java.lang.String obsTimeVName;
    private java.lang.String nomTimeVName;
    private java.lang.String stnIdVName;
    private java.lang.String stnDescVName;
    private java.lang.String altVName;
    private boolean debug;
    private boolean debugLinks;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r7, $r8, $r9;
        ucar.nc2.Variable $r1, $r2, $r3, $r4, $r5, $r6;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r10;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("staticIds");

        if $r1 != null goto label01;

        return 0;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("nStaticIds");

        if $r2 != null goto label02;

        return 0;

     label02:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("lastRecord");

        if $r3 != null goto label03;

        return 0;

     label03:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("prevRecord");

        if $r4 != null goto label04;

        return 0;

     label04:
        $r5 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("latitude");

        if $r5 != null goto label05;

        return 0;

     label05:
        $r6 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("longitude");

        if $r6 != null goto label06;

        return 0;

     label06:
        $z0 = virtualinvoke r0.<ucar.nc2.NetcdfFile: boolean hasUnlimitedDimension()>();

        if $z0 != 0 goto label07;

        return 0;

     label07:
        $r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("timeVariables");

        if $r7 != null goto label08;

        return 0;

     label08:
        $r8 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("idVariables");

        if $r8 != null goto label09;

        return 0;

     label09:
        $r9 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("title");

        if $r9 == null goto label10;

        $r10 = virtualinvoke $r9.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("MADIS ACARS data");

        if $z1 == 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.MadisPointObsDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.MadisPointObsDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.dt.point.MadisPointObsDataset r2;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.point.MadisStationObsDataset $r0;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.MadisStationObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.MadisStationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.PointObsDatasetImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debugLinks> = 0;

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        java.lang.StringBuilder $r43, $r45, $r48, $r58, $r60, $r61, $r62, $r63, $r64;
        ucar.nc2.Structure $r28, $r37;
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        java.util.StringTokenizer $r3, $r7;
        java.lang.StringBuffer $r14, $r59;
        java.lang.String $r2, $r4, $r6, $r8, $r9, $r10, $r16, $r17, $r29, $r39, $r40, $r41, $r42, $r47, $r49, $r65;
        ucar.nc2.units.DateUnit $r19, $r33, $r35;
        ucar.ma2.Array $r21, $r23, $r31;
        ucar.ma2.ArrayInt$D1 $r50, $r51;
        ucar.ma2.InvalidRangeException $r57;
        ucar.nc2.dataset.NetcdfDataset r1, $r46;
        java.util.Date $r34, $r36;
        ucar.ma2.StructureData $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.ma2.MAMath$MinMax $r32;
        java.util.List $r15;
        java.util.HashMap $r25;
        int $i0, $i1, $i2, i3;
        ucar.nc2.Variable $r5, $r11, $r12, $r20, $r22, $r24, $r27, $r30, $r53, $r55;
        double $d0, $d1;
        java.io.PrintStream $r44, $r52, $r54, $r56;
        ucar.nc2.dt.point.RecordDatasetHelper $r13, $r18, $r26;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.PointObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug> = 0;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debugLinks> = 0;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String altVName> = "elevation";

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "timeVariables", null);

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, ", ");

        $r4 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String obsTimeVName> = $r4;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("timeNominal");

        if $r5 == null goto label01;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String nomTimeVName> = "timeNominal";

     label01:
        $r6 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "idVariables", null);

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, ", ");

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName> = $r8;

        $r9 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("stationName");

        if $z0 == 0 goto label03;

        $r55 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("locationName");

        if $r55 == null goto label02;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnDescVName> = "locationName";

     label02:
        $z4 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug>;

        if $z4 == 0 goto label08;

        $r56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("filetype 1 (metars)");

        goto label08;

     label03:
        $r10 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("latitude");

        if $z1 == 0 goto label05;

        $r53 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("en_tailNumber");

        if $r53 == null goto label04;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName> = "en_tailNumber";

     label04:
        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String altVName> = "altitude";

        $z3 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug>;

        if $z3 == 0 goto label08;

        $r54 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("filetype 3 (acars)");

        goto label08;

     label05:
        $r11 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("stationId");

        if $r11 == null goto label06;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName> = "stationId";

     label06:
        $r12 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("stationName");

        if $r12 == null goto label07;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnDescVName> = "stationName";

     label07:
        $z2 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug>;

        if $z2 == 0 goto label08;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("filetype 2 (mesonet)");

     label08:
        $z5 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: boolean debug>;

        if $z5 == 0 goto label09;

        $r44 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("title= ");

        $r46 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r47 = virtualinvoke $r46.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", null);

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label09:
        $r13 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r17 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String obsTimeVName>;

        $r16 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String nomTimeVName>;

        $r15 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.util.List dataVariables>;

        $r14 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.StringBuffer parseInfo>;

        specialinvoke $r13.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List,java.lang.StringBuffer)>(r1, $r17, $r16, $r15, $r14);

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r13;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisPointObsDataset: void removeDataVariable(java.lang.String)>("prevRecord");

        $r18 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r19 = $r18.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.units.DateUnit timeUnit> = $r19;

        $r20 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("lastRecord");

        $r21 = virtualinvoke $r20.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r50 = (ucar.ma2.ArrayInt$D1) $r21;

        $r22 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("inventory");

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r51 = (ucar.ma2.ArrayInt$D1) $r23;

        $r24 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("nStaticIds");

        $i0 = virtualinvoke $r24.<ucar.nc2.Variable: int readScalarInt()>();

        $r26 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r25 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r25.<java.util.HashMap: void <init>(int)>($i1);

        $r26.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r25;

        $r27 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("record");

        $r28 = (ucar.nc2.Structure) $r27;

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.Structure recordVar> = $r28;

        i3 = 0;

     label10:
        if i3 >= $i0 goto label17;

        $i2 = virtualinvoke $r50.<ucar.ma2.ArrayInt$D1: int get(int)>(i3);

        virtualinvoke $r51.<ucar.ma2.ArrayInt$D1: int get(int)>(i3);

        if $i2 >= 0 goto label11;

        goto label16;

     label11:
        $r37 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.Structure recordVar>;

        $r38 = virtualinvoke $r37.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>($i2);

     label12:
        goto label14;

     label13:
        $r57 := @caughtexception;

        $r59 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.StringBuffer parseInfo>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid lastValue=");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for station at index ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        goto label16;

     label14:
        $r39 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnIdVName>;

        $r40 = virtualinvoke $r38.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r39);

        virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

        $r41 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnDescVName>;

        if $r41 != null goto label15;

        goto label16;

     label15:
        $r42 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String stnDescVName>;

        virtualinvoke $r38.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r42);

     label16:
        i3 = i3 + 1;

        goto label10;

     label17:
        $r29 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String obsTimeVName>;

        $r30 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r32 = staticinvoke <ucar.ma2.MAMath: ucar.ma2.MAMath$MinMax getMinMax(ucar.ma2.Array)>($r31);

        $r33 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = $r32.<ucar.ma2.MAMath$MinMax: double min>;

        $r34 = virtualinvoke $r33.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.util.Date startDate> = $r34;

        $r35 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.units.DateUnit timeUnit>;

        $d1 = $r32.<ucar.ma2.MAMath$MinMax: double max>;

        $r36 = virtualinvoke $r35.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d1);

        r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.util.Date endDate> = $r36;

        virtualinvoke r0.<ucar.nc2.dt.point.MadisPointObsDataset: void setBoundingBox()>();

        return;

        catch ucar.ma2.InvalidRangeException from label11 to label12 with label13;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.MadisPointObsDataset r1;
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.PointObsDatatype $r2;
        int $i0, i1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r3 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<ucar.nc2.dt.point.MadisPointObsDataset: int getDataCount()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.PointObsDatatype makeObs(int)>(i1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if r3 == null goto label2;

        $z0 = interfaceinvoke r3.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    protected ucar.nc2.dt.PointObsDatatype makeObs(int) throws java.io.IOException
    {
        ucar.unidata.geoloc.EarthLocationImpl $r9;
        ucar.nc2.Structure $r1;
        ucar.ma2.StructureData $r2;
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs $r7;
        int i0;
        java.lang.String $r3, $r4, $r5, $r6, $r12;
        double $d0, $d1, $d2, $d3, $d4;
        java.io.IOException $r11;
        ucar.nc2.dt.point.RecordDatasetHelper $r8;
        ucar.ma2.InvalidRangeException $r10;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.Structure recordVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>(i0);

        $r3 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String obsTimeVName>;

        $f0 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r3);

        $r4 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String nomTimeVName>;

        if $r4 != null goto label2;

        $f4 = $f0;

        goto label3;

     label2:
        $r5 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String nomTimeVName>;

        $f4 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r5);

     label3:
        $f1 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("latitude");

        $f2 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>("longitude");

        $r6 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: java.lang.String altVName>;

        $f3 = virtualinvoke $r2.<ucar.ma2.StructureData: float convertScalarFloat(java.lang.String)>($r6);

        $r7 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        $r8 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = new ucar.unidata.geoloc.EarthLocationImpl;

        $d2 = (double) $f1;

        $d1 = (double) $f2;

        $d0 = (double) $f3;

        specialinvoke $r9.<ucar.unidata.geoloc.EarthLocationImpl: void <init>(double,double,double)>($d2, $d1, $d0);

        $d4 = (double) $f0;

        $d3 = (double) $f4;

        specialinvoke $r7.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.EarthLocation,double,double,int)>($r8, $r9, $d4, $d3, i0);

     label4:
        return $r7;

     label5:
        $r10 := @caughtexception;

        virtualinvoke $r10.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r11 = new java.io.IOException;

        $r12 = virtualinvoke $r10.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r11;

        catch ucar.ma2.InvalidRangeException from label1 to label4 with label5;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r1;
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        ucar.nc2.util.CancelTask r2;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r2 := @parameter1: ucar.nc2.util.CancelTask;

        return null;
    }

    public java.util.List getData(ucar.unidata.geoloc.LatLonRect, java.util.Date, java.util.Date, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r1;
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        ucar.nc2.util.CancelTask r4;
        java.util.Date r2, r3;

        r0 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        r4 := @parameter3: ucar.nc2.util.CancelTask;

        return null;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dt.point.MadisPointObsDataset$MadisDatatypeIterator $r0;
        ucar.nc2.dt.point.MadisPointObsDataset r1;
        ucar.nc2.dataset.StructureDS $r3;
        int i0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;

        r1 := @this: ucar.nc2.dt.point.MadisPointObsDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.MadisPointObsDataset$MadisDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.MadisPointObsDataset$MadisDatatypeIterator: void <init>(ucar.nc2.dt.point.MadisPointObsDataset,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static ucar.nc2.dt.point.RecordDatasetHelper access$000(ucar.nc2.dt.point.MadisPointObsDataset)
    {
        ucar.nc2.dt.point.MadisPointObsDataset r0;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;

        r0 := @parameter0: ucar.nc2.dt.point.MadisPointObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.MadisPointObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        return $r1;
    }
}
