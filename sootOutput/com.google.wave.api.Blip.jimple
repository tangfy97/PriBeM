public class com.google.wave.api.Blip extends java.lang.Object implements java.io.Serializable
{
    private static final java.lang.String INLINE_BLIP_ELEMENT_ID_KEY;
    private static final java.util.regex.Pattern MARKUP_PATTERN;
    private final java.lang.String blipId;
    private final java.lang.String parentBlipId;
    private final com.google.wave.api.BlipThread thread;
    private final java.util.List childBlipIds;
    private java.util.SortedMap inlineReplyThreads;
    private final java.util.List replyThreads;
    private final java.util.List contributors;
    private final java.lang.String creator;
    private final long lastModifiedTime;
    private final long version;
    private final com.google.wave.api.Annotations annotations;
    private final com.google.wave.api.Wavelet wavelet;
    private final com.google.wave.api.OperationQueue operationQueue;
    private java.lang.String content;
    private java.util.SortedMap elements;

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.google.wave.api.Wavelet)
    {
        com.google.wave.api.Blip r0;
        com.google.wave.api.Wavelet r10;
        java.util.ArrayList $r2, $r4, $r7, $r9;
        java.lang.String r1, r3, r5, r6, $r11, $r12, $r13, $r16, $r18;
        boolean $z0, $z1;
        java.util.TreeMap $r8;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r10 := @parameter4: com.google.wave.api.Wavelet;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.TreeMap;

        specialinvoke $r8.<java.util.TreeMap: void <init>()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.google.wave.api.Blip: void <init>(java.lang.String,java.util.List,java.lang.String,java.util.List,java.lang.String,long,long,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.List,com.google.wave.api.Wavelet)>(r1, $r2, r3, $r4, null, -1L, -1L, r5, r6, $r7, $r8, $r9, r10);

        $r11 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        if $r11 == null goto label1;

        $r12 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r0.<com.google.wave.api.Blip: java.lang.String content> = "\n";

        goto label3;

     label2:
        $r13 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        $z1 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z1 != 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.google.wave.api.Blip: java.lang.String content> = $r18;

     label3:
        return;
    }

    void <init>(java.lang.String, java.util.List, java.lang.String, java.util.List, java.lang.String, long, long, java.lang.String, java.lang.String, java.util.List, java.util.Map, java.util.List, com.google.wave.api.Wavelet)
    {
        java.lang.Integer $r26;
        com.google.wave.api.Wavelet r9;
        java.util.Map r16;
        com.google.wave.api.Annotation r33;
        boolean $z0, $z1;
        com.google.wave.api.BlipThread $r11, $r23;
        java.util.List r4, r6, r13, r20, $r24;
        com.google.wave.api.Range $r31, $r32;
        java.util.SortedMap $r25;
        long l0, l1;
        com.google.wave.api.Blip r0;
        java.util.ArrayList $r35, $r36, $r40;
        int $i2, $i3, $i4, $i5, $i7;
        com.google.wave.api.Annotations $r28, $r37;
        java.lang.String r1, r2, r7, r8, r10, $r29, $r30, r34;
        java.util.Iterator $r14, $r21;
        com.google.wave.api.OperationQueue $r17;
        java.util.TreeMap $r38, $r39;
        java.lang.Object $r22, $r27;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        r6 := @parameter3: java.util.List;

        r7 := @parameter4: java.lang.String;

        l0 := @parameter5: long;

        l1 := @parameter6: long;

        r8 := @parameter7: java.lang.String;

        r10 := @parameter8: java.lang.String;

        r13 := @parameter9: java.util.List;

        r16 := @parameter10: java.util.Map;

        r20 := @parameter11: java.util.List;

        r9 := @parameter12: com.google.wave.api.Wavelet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.Blip: java.lang.String blipId> = r1;

        r0.<com.google.wave.api.Blip: java.lang.String content> = r2;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        r0.<com.google.wave.api.Blip: java.util.List childBlipIds> = $r35;

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>(java.util.Collection)>(r6);

        r0.<com.google.wave.api.Blip: java.util.List contributors> = $r36;

        r0.<com.google.wave.api.Blip: java.lang.String creator> = r7;

        r0.<com.google.wave.api.Blip: long lastModifiedTime> = l0;

        r0.<com.google.wave.api.Blip: long version> = l1;

        r0.<com.google.wave.api.Blip: java.lang.String parentBlipId> = r8;

        $r11 = virtualinvoke r9.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread getThread(java.lang.String)>(r10);

        r0.<com.google.wave.api.Blip: com.google.wave.api.BlipThread thread> = $r11;

        $r37 = new com.google.wave.api.Annotations;

        specialinvoke $r37.<com.google.wave.api.Annotations: void <init>()>();

        r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations> = $r37;

        $r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r27 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r33 = (com.google.wave.api.Annotation) $r27;

        $r28 = r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        $r29 = virtualinvoke r33.<com.google.wave.api.Annotation: java.lang.String getName()>();

        $r30 = virtualinvoke r33.<com.google.wave.api.Annotation: java.lang.String getValue()>();

        $r31 = virtualinvoke r33.<com.google.wave.api.Annotation: com.google.wave.api.Range getRange()>();

        $i4 = virtualinvoke $r31.<com.google.wave.api.Range: int getStart()>();

        $r32 = virtualinvoke r33.<com.google.wave.api.Annotation: com.google.wave.api.Range getRange()>();

        $i5 = virtualinvoke $r32.<com.google.wave.api.Range: int getEnd()>();

        virtualinvoke $r28.<com.google.wave.api.Annotations: void add(java.lang.String,java.lang.String,int,int)>($r29, $r30, $i4, $i5);

        goto label1;

     label2:
        $r38 = new java.util.TreeMap;

        specialinvoke $r38.<java.util.TreeMap: void <init>(java.util.Map)>(r16);

        r0.<com.google.wave.api.Blip: java.util.SortedMap elements> = $r38;

        r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet> = r9;

        $r17 = virtualinvoke r9.<com.google.wave.api.Wavelet: com.google.wave.api.OperationQueue getOperationQueue()>();

        r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue> = $r17;

        $r39 = new java.util.TreeMap;

        specialinvoke $r39.<java.util.TreeMap: void <init>()>();

        r0.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads> = $r39;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        r0.<com.google.wave.api.Blip: java.util.List replyThreads> = $r40;

        $r21 = interfaceinvoke r20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.lang.String) $r22;

        $r23 = virtualinvoke r9.<com.google.wave.api.Wavelet: com.google.wave.api.BlipThread getThread(java.lang.String)>(r34);

        $i2 = virtualinvoke $r23.<com.google.wave.api.BlipThread: int getLocation()>();

        $i7 = (int) -1;

        if $i2 == $i7 goto label4;

        $r25 = r0.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $i3 = virtualinvoke $r23.<com.google.wave.api.BlipThread: int getLocation()>();

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r25.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r23);

        goto label5;

     label4:
        $r24 = r0.<com.google.wave.api.Blip: java.util.List replyThreads>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r23);

     label5:
        goto label3;

     label6:
        return;
    }

    private void <init>(com.google.wave.api.Blip, com.google.wave.api.OperationQueue)
    {
        long $l0, $l1;
        com.google.wave.api.Blip r0, r1;
        com.google.wave.api.Wavelet $r13;
        com.google.wave.api.Annotations $r11;
        java.lang.String $r2, $r6, $r8, $r9;
        com.google.wave.api.BlipThread $r10;
        java.util.List $r3, $r5, $r7;
        com.google.wave.api.OperationQueue r14;
        java.util.SortedMap $r4, $r12;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: com.google.wave.api.Blip;

        r14 := @parameter1: com.google.wave.api.OperationQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.google.wave.api.Blip: java.lang.String blipId>;

        r0.<com.google.wave.api.Blip: java.lang.String blipId> = $r2;

        $r3 = r1.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        r0.<com.google.wave.api.Blip: java.util.List childBlipIds> = $r3;

        $r4 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        r0.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads> = $r4;

        $r5 = r1.<com.google.wave.api.Blip: java.util.List replyThreads>;

        r0.<com.google.wave.api.Blip: java.util.List replyThreads> = $r5;

        $r6 = r1.<com.google.wave.api.Blip: java.lang.String content>;

        r0.<com.google.wave.api.Blip: java.lang.String content> = $r6;

        $r7 = r1.<com.google.wave.api.Blip: java.util.List contributors>;

        r0.<com.google.wave.api.Blip: java.util.List contributors> = $r7;

        $r8 = r1.<com.google.wave.api.Blip: java.lang.String creator>;

        r0.<com.google.wave.api.Blip: java.lang.String creator> = $r8;

        $l0 = r1.<com.google.wave.api.Blip: long lastModifiedTime>;

        r0.<com.google.wave.api.Blip: long lastModifiedTime> = $l0;

        $l1 = r1.<com.google.wave.api.Blip: long version>;

        r0.<com.google.wave.api.Blip: long version> = $l1;

        $r9 = r1.<com.google.wave.api.Blip: java.lang.String parentBlipId>;

        r0.<com.google.wave.api.Blip: java.lang.String parentBlipId> = $r9;

        $r10 = r1.<com.google.wave.api.Blip: com.google.wave.api.BlipThread thread>;

        r0.<com.google.wave.api.Blip: com.google.wave.api.BlipThread thread> = $r10;

        $r11 = r1.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations> = $r11;

        $r12 = r1.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        r0.<com.google.wave.api.Blip: java.util.SortedMap elements> = $r12;

        $r13 = r1.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet> = $r13;

        r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue> = r14;

        return;
    }

    public java.lang.String getBlipId()
    {
        java.lang.String $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String blipId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.id.WaveId $r2;
        com.google.wave.api.Blip r0;
        com.google.wave.api.Wavelet $r1;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        return $r2;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.id.WaveletId $r2;
        com.google.wave.api.Blip r0;
        com.google.wave.api.Wavelet $r1;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        return $r2;
    }

    public java.util.List getChildBlipIds()
    {
        java.util.List $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        return $r1;
    }

    public java.util.List getChildBlips()
    {
        java.util.Iterator $r4;
        com.google.wave.api.Blip r1, r10;
        com.google.wave.api.Wavelet $r7;
        java.util.ArrayList $r0;
        java.util.List $r2, $r3;
        java.util.Map $r8;
        int $i0;
        java.lang.Object $r5, $r9;
        java.lang.String r6;
        boolean $z0;

        r1 := @this: com.google.wave.api.Blip;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r1.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r8 = virtualinvoke $r7.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r10 = (com.google.wave.api.Blip) $r9;

        if r10 == null goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.util.Collection getInlineReplyThreads()
    {
        com.google.wave.api.Blip r0;
        java.util.SortedMap $r1;
        java.util.Collection $r2;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Collection values()>();

        return $r2;
    }

    public java.util.Collection getReplyThreads()
    {
        java.util.List $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.util.List replyThreads>;

        return $r1;
    }

    public java.util.List getContributors()
    {
        java.util.List $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.util.List contributors>;

        return $r1;
    }

    public java.lang.String getCreator()
    {
        java.lang.String $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String creator>;

        return $r1;
    }

    public long getLastModifiedTime()
    {
        long $l0;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $l0 = r0.<com.google.wave.api.Blip: long lastModifiedTime>;

        return $l0;
    }

    public long getVersion()
    {
        long $l0;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $l0 = r0.<com.google.wave.api.Blip: long version>;

        return $l0;
    }

    public java.lang.String getParentBlipId()
    {
        java.lang.String $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String parentBlipId>;

        return $r1;
    }

    public com.google.wave.api.Blip getParentBlip()
    {
        java.util.Map $r3;
        java.lang.Object $r5;
        java.lang.String $r1, $r4;
        com.google.wave.api.Blip r0, $r6;
        com.google.wave.api.Wavelet $r2;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String parentBlipId>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r3 = virtualinvoke $r2.<com.google.wave.api.Wavelet: java.util.Map getBlips()>();

        $r4 = r0.<com.google.wave.api.Blip: java.lang.String parentBlipId>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (com.google.wave.api.Blip) $r5;

        return $r6;
    }

    public com.google.wave.api.BlipThread getThread()
    {
        com.google.wave.api.BlipThread $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.BlipThread thread>;

        return $r1;
    }

    public boolean isRoot()
    {
        java.lang.String $r2, $r3;
        com.google.wave.api.Blip r0;
        com.google.wave.api.Wavelet $r1;
        boolean $z0;

        r0 := @this: com.google.wave.api.Blip;

        $r2 = r0.<com.google.wave.api.Blip: java.lang.String blipId>;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r3 = virtualinvoke $r1.<com.google.wave.api.Wavelet: java.lang.String getRootBlipId()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public com.google.wave.api.Annotations getAnnotations()
    {
        com.google.wave.api.Annotations $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        return $r1;
    }

    public java.util.SortedMap getElements()
    {
        com.google.wave.api.Blip r0;
        java.util.SortedMap $r1;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        return $r1;
    }

    public java.lang.String getContent()
    {
        java.lang.String $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        return $r1;
    }

    void setContent(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String r4;
        com.google.wave.api.Blip r0;
        boolean $z0;

        r0 := @this: com.google.wave.api.Blip;

        r4 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r0.<com.google.wave.api.Blip: java.lang.String content> = r4;

        return;
    }

    public int length()
    {
        int $i0;
        java.lang.String $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public com.google.wave.api.Wavelet getWavelet()
    {
        com.google.wave.api.Blip r0;
        com.google.wave.api.Wavelet $r1;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        return $r1;
    }

    protected com.google.wave.api.OperationQueue getOperationQueue()
    {
        com.google.wave.api.OperationQueue $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        return $r1;
    }

    public com.google.wave.api.BlipContentRefs all()
    {
        com.google.wave.api.BlipContentRefs $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip)>(r0);

        return $r1;
    }

    public com.google.wave.api.BlipContentRefs all(java.lang.String)
    {
        int $i1;
        java.lang.String r1;
        com.google.wave.api.BlipContentRefs $r2;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        $i1 = (int) -1;

        $r2 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip,java.lang.String,int)>(r0, r1, $i1);

        return $r2;
    }

    public com.google.wave.api.BlipContentRefs all(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.google.wave.api.BlipContentRefs $r2;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip,java.lang.String,int)>(r0, r1, i0);

        return $r2;
    }

    public transient com.google.wave.api.BlipContentRefs all(com.google.wave.api.ElementType, com.google.wave.api.Restriction[])
    {
        int $i1;
        com.google.wave.api.ElementType r1;
        com.google.wave.api.Restriction[] r2;
        com.google.wave.api.BlipContentRefs $r3;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: com.google.wave.api.ElementType;

        r2 := @parameter1: com.google.wave.api.Restriction[];

        $i1 = (int) -1;

        $r3 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip,com.google.wave.api.ElementType,int,com.google.wave.api.Restriction[])>(r0, r1, $i1, r2);

        return $r3;
    }

    public transient com.google.wave.api.BlipContentRefs all(com.google.wave.api.ElementType, int, com.google.wave.api.Restriction[])
    {
        int i0;
        com.google.wave.api.ElementType r1;
        com.google.wave.api.Restriction[] r2;
        com.google.wave.api.BlipContentRefs $r3;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: com.google.wave.api.ElementType;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.wave.api.Restriction[];

        $r3 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip,com.google.wave.api.ElementType,int,com.google.wave.api.Restriction[])>(r0, r1, i0, r2);

        return $r3;
    }

    public com.google.wave.api.BlipContentRefs first(java.lang.String)
    {
        java.lang.String r1;
        com.google.wave.api.BlipContentRefs $r2;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.BlipContentRefs all(java.lang.String,int)>(r1, 1);

        return $r2;
    }

    public transient com.google.wave.api.BlipContentRefs first(com.google.wave.api.ElementType, com.google.wave.api.Restriction[])
    {
        com.google.wave.api.ElementType r1;
        com.google.wave.api.Restriction[] r2;
        com.google.wave.api.BlipContentRefs $r3;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: com.google.wave.api.ElementType;

        r2 := @parameter1: com.google.wave.api.Restriction[];

        $r3 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.BlipContentRefs all(com.google.wave.api.ElementType,int,com.google.wave.api.Restriction[])>(r1, 1, r2);

        return $r3;
    }

    public com.google.wave.api.BlipContentRefs at(int)
    {
        int i0, $i1;
        com.google.wave.api.BlipContentRefs $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $r1 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs range(com.google.wave.api.Blip,int,int)>(r0, i0, $i1);

        return $r1;
    }

    public com.google.wave.api.BlipContentRefs range(int, int)
    {
        int i0, i1;
        com.google.wave.api.BlipContentRefs $r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs range(com.google.wave.api.Blip,int,int)>(r0, i0, i1);

        return $r1;
    }

    public com.google.wave.api.BlipContentRefs append(com.google.wave.api.BlipContent)
    {
        com.google.wave.api.BlipContent[] $r2;
        com.google.wave.api.BlipContentRefs $r1, $r4;
        com.google.wave.api.BlipContent r3;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r3 := @parameter0: com.google.wave.api.BlipContent;

        $r1 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip)>(r0);

        $r2 = newarray (com.google.wave.api.BlipContent)[1];

        $r2[0] = r3;

        $r4 = virtualinvoke $r1.<com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs insertAfter(com.google.wave.api.BlipContent[])>($r2);

        return $r4;
    }

    public com.google.wave.api.BlipContentRefs append(java.lang.String)
    {
        java.lang.String[] $r2;
        java.lang.String r3;
        com.google.wave.api.BlipContentRefs $r1, $r4;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r3 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs all(com.google.wave.api.Blip)>(r0);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r3;

        $r4 = virtualinvoke $r1.<com.google.wave.api.BlipContentRefs: com.google.wave.api.BlipContentRefs insertAfter(java.lang.String[])>($r2);

        return $r4;
    }

    public com.google.wave.api.Blip reply()
    {
        com.google.wave.api.OperationQueue $r1;
        com.google.wave.api.Blip r0, $r2;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.OperationQueue: com.google.wave.api.Blip createChildOfBlip(com.google.wave.api.Blip)>(r0);

        return $r2;
    }

    public com.google.wave.api.Blip continueThread()
    {
        com.google.wave.api.OperationQueue $r1;
        com.google.wave.api.Blip r0, $r2;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.OperationQueue: com.google.wave.api.Blip continueThreadOfBlip(com.google.wave.api.Blip)>(r0);

        return $r2;
    }

    public com.google.wave.api.Blip insertInlineBlip(int)
    {
        com.google.wave.api.Element $r19;
        java.lang.Integer $r23;
        com.google.wave.api.Blip r6, $r18;
        int i0, $i1;
        java.lang.String $r5, $r7, $r9, $r10, $r13, $r14, $r16, $r21;
        java.lang.IllegalArgumentException $r0;
        com.google.wave.api.ElementType $r20;
        com.google.wave.api.OperationQueue $r17;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r8, $r11, $r12, $r15;
        java.util.SortedMap $r22;

        r6 := @this: com.google.wave.api.Blip;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r7 = r6.<com.google.wave.api.Blip: java.lang.String content>;

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal inline blip position: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Position has to be greater than 0 and less than or equal to length.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label2:
        virtualinvoke r6.<com.google.wave.api.Blip: void shift(int,int)>(i0, 1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r6.<com.google.wave.api.Blip: java.lang.String content>;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = r6.<com.google.wave.api.Blip: java.lang.String content>;

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r6.<com.google.wave.api.Blip: java.lang.String content> = $r16;

        $r17 = r6.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        $r18 = virtualinvoke $r17.<com.google.wave.api.OperationQueue: com.google.wave.api.Blip insertInlineBlipToDocument(com.google.wave.api.Blip,int)>(r6, i0);

        $r19 = new com.google.wave.api.Element;

        $r20 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INLINE_BLIP>;

        specialinvoke $r19.<com.google.wave.api.Element: void <init>(com.google.wave.api.ElementType)>($r20);

        $r21 = virtualinvoke $r18.<com.google.wave.api.Blip: java.lang.String getBlipId()>();

        virtualinvoke $r19.<com.google.wave.api.Element: void setProperty(java.lang.String,java.lang.String)>("id", $r21);

        $r22 = r6.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r22.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r19);

        return $r18;
    }

    public void appendMarkup(java.lang.String)
    {
        com.google.wave.api.Blip r0;
        com.google.wave.api.OperationQueue $r2;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.lang.String r1, $r4, $r6, $r8;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        virtualinvoke $r2.<com.google.wave.api.OperationQueue: void appendMarkupToDocument(com.google.wave.api.Blip,java.lang.String)>(r0, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.google.wave.api.Blip: java.lang.String content>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = staticinvoke <com.google.wave.api.Blip: java.lang.String convertToPlainText(java.lang.String)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.google.wave.api.Blip: java.lang.String content> = $r8;

        return;
    }

    public com.google.wave.api.Blip proxyFor(java.lang.String)
    {
        com.google.wave.api.OperationQueue $r2, $r3;
        java.lang.String r0;
        com.google.wave.api.Blip r1, $r4;

        r1 := @this: com.google.wave.api.Blip;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.wave.api.Util: void checkIsValidProxyForId(java.lang.String)>(r0);

        $r2 = r1.<com.google.wave.api.Blip: com.google.wave.api.OperationQueue operationQueue>;

        $r3 = virtualinvoke $r2.<com.google.wave.api.OperationQueue: com.google.wave.api.OperationQueue proxyFor(java.lang.String)>(r0);

        $r4 = new com.google.wave.api.Blip;

        specialinvoke $r4.<com.google.wave.api.Blip: void <init>(com.google.wave.api.Blip,com.google.wave.api.OperationQueue)>(r1, $r3);

        return $r4;
    }

    public int getInlineBlipOffset()
    {
        com.google.wave.api.Element r8;
        java.lang.Integer $r14;
        com.google.wave.api.Blip r0, $r1;
        int $i0, $i2, $i4;
        java.lang.String $r11, $r12;
        boolean $z0, $z1;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.wave.api.ElementType $r9, $r10;
        java.lang.Object $r5, $r7, $r13;
        java.util.SortedMap $r2;

        r0 := @this: com.google.wave.api.Blip;

        $r1 = virtualinvoke r0.<com.google.wave.api.Blip: com.google.wave.api.Blip getParentBlip()>();

        if $r1 != null goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r2 = virtualinvoke $r1.<com.google.wave.api.Blip: java.util.SortedMap getElements()>();

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (com.google.wave.api.Element) $r7;

        $r9 = virtualinvoke r8.<com.google.wave.api.Element: com.google.wave.api.ElementType getType()>();

        $r10 = <com.google.wave.api.ElementType: com.google.wave.api.ElementType INLINE_BLIP>;

        if $r9 != $r10 goto label3;

        $r11 = r0.<com.google.wave.api.Blip: java.lang.String blipId>;

        $r12 = virtualinvoke r8.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("id");

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.Integer) $r13;

        $i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        return $i0;

     label3:
        goto label2;

     label4:
        $i4 = (int) -1;

        return $i4;
    }

    protected void shift(int, int)
    {
        java.lang.Integer $r3, $r6, $r12, $r15, $r24, $r27, $r28;
        boolean $z0, $z1;
        java.util.Set $r8, $r17;
        com.google.wave.api.BlipThread r23;
        java.util.SortedMap $r2, $r4, $r5, $r7, $r11, $r13, $r14, $r16;
        com.google.wave.api.Blip r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.google.wave.api.Annotations $r19;
        java.util.Map$Entry r21, r30;
        java.util.Iterator $r9, $r18;
        java.util.TreeMap $r0, $r10;
        java.lang.Object $r20, $r22, $r25, $r26, $r29;

        r1 := @this: com.google.wave.api.Blip;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.util.TreeMap;

        $r2 = r1.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r3);

        specialinvoke $r0.<java.util.TreeMap: void <init>(java.util.SortedMap)>($r4);

        $r5 = r1.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke $r5.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r25 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.Integer) $r26;

        $i5 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $i6 = $i5 + i1;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r29 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        goto label1;

     label2:
        r1.<com.google.wave.api.Blip: java.util.SortedMap elements> = $r0;

        $r10 = new java.util.TreeMap;

        $r11 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r13 = interfaceinvoke $r11.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>($r12);

        specialinvoke $r10.<java.util.TreeMap: void <init>(java.util.SortedMap)>($r13);

        $r14 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16 = interfaceinvoke $r14.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>($r15);

        $r17 = interfaceinvoke $r16.<java.util.SortedMap: java.util.Set entrySet()>();

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r20 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (com.google.wave.api.BlipThread) $r22;

        $i2 = virtualinvoke r23.<com.google.wave.api.BlipThread: int getLocation()>();

        $i3 = $i2 + i1;

        virtualinvoke r23.<com.google.wave.api.BlipThread: void setLocation(int)>($i3);

        $i4 = virtualinvoke r23.<com.google.wave.api.BlipThread: int getLocation()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        interfaceinvoke $r10.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, r23);

        goto label3;

     label4:
        r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads> = $r10;

        $r19 = r1.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        virtualinvoke $r19.<com.google.wave.api.Annotations: void shift(int,int)>(i0, i1);

        return;
    }

    protected void deleteAnnotations(int, int)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.wave.api.Blip r0;
        com.google.wave.api.Annotations $r1, $r6;
        int i0, i1;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: com.google.wave.api.Blip;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        $r2 = virtualinvoke $r1.<com.google.wave.api.Annotations: java.util.Set namesSet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = r0.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        virtualinvoke $r6.<com.google.wave.api.Annotations: void delete(java.lang.String,int,int)>(r5, i0, i1);

        goto label1;

     label2:
        return;
    }

    protected void deleteChildBlipId(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        com.google.wave.api.Blip r0;

        r0 := @this: com.google.wave.api.Blip;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    protected void addThread(com.google.wave.api.BlipThread)
    {
        com.google.wave.api.BlipThread r0;
        java.lang.Integer $r3;
        com.google.wave.api.Blip r1;
        java.util.List $r4;
        int $i0, $i1, $i3;
        java.util.SortedMap $r2;

        r1 := @this: com.google.wave.api.Blip;

        r0 := @parameter0: com.google.wave.api.BlipThread;

        $i0 = virtualinvoke r0.<com.google.wave.api.BlipThread: int getLocation()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r4 = r1.<com.google.wave.api.Blip: java.util.List replyThreads>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r2 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $i1 = virtualinvoke r0.<com.google.wave.api.BlipThread: int getLocation()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

     label2:
        return;
    }

    protected void removeThread(com.google.wave.api.BlipThread)
    {
        com.google.wave.api.BlipThread r0;
        java.lang.Integer $r3;
        com.google.wave.api.Blip r1;
        java.util.List $r4;
        int $i0, $i1, $i3;
        java.util.SortedMap $r2;

        r1 := @this: com.google.wave.api.Blip;

        r0 := @parameter0: com.google.wave.api.BlipThread;

        $i0 = virtualinvoke r0.<com.google.wave.api.BlipThread: int getLocation()>();

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r4 = r1.<com.google.wave.api.Blip: java.util.List replyThreads>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r2 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $i1 = virtualinvoke r0.<com.google.wave.api.BlipThread: int getLocation()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r3);

     label2:
        return;
    }

    private static java.lang.String convertToPlainText(java.lang.String)
    {
        java.lang.String[] $r8;
        java.util.regex.Matcher $r3;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.String r1, $r4, $r5, $r6, $r7, r9, $r10, $r11, r12;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = <com.google.wave.api.Blip: java.util.regex.Pattern MARKUP_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

     label1:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        r12 = "";

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(1, $i1);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r9 = $r8[0];

        $r10 = "p";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 != 0 goto label2;

        $r11 = "br";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label3;

     label2:
        r12 = "\n";

     label3:
        virtualinvoke $r3.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r0, r12);

        goto label1;

     label4:
        virtualinvoke $r3.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>($r0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public com.google.wave.api.BlipData serialize()
    {
        com.google.wave.api.Wavelet $r4, $r8;
        com.google.wave.api.Annotation r35;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.model.id.WaveId $r5;
        java.util.Collection $r26;
        com.google.wave.api.BlipThread $r12, r36, r37;
        java.util.List $r16, $r17, $r24, $r28;
        com.google.wave.api.BlipData $r0;
        java.util.SortedMap $r18, $r23, $r25;
        org.waveprotocol.wave.model.id.WaveletId $r9;
        long $l0, $l1;
        com.google.wave.api.Blip r1;
        java.util.ArrayList $r19, $r22;
        com.google.wave.api.Annotations $r20;
        int $i2, $i3, $i4;
        java.lang.String $r2, $r6, $r10, $r11, $r13, $r14, $r15, $r31, $r33;
        org.waveprotocol.wave.model.id.IdSerialiser $r3, $r7;
        java.util.Iterator $r21, $r27, $r29;
        java.lang.Object $r30, $r32, $r34;

        r1 := @this: com.google.wave.api.Blip;

        $r0 = new com.google.wave.api.BlipData;

        specialinvoke $r0.<com.google.wave.api.BlipData: void <init>()>();

        $r2 = r1.<com.google.wave.api.Blip: java.lang.String blipId>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setBlipId(java.lang.String)>($r2);

        $r3 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r4 = r1.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r5 = virtualinvoke $r4.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r6 = interfaceinvoke $r3.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r5);

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setWaveId(java.lang.String)>($r6);

        $r7 = staticinvoke <com.google.wave.api.ApiIdSerializer: org.waveprotocol.wave.model.id.IdSerialiser instance()>();

        $r8 = r1.<com.google.wave.api.Blip: com.google.wave.api.Wavelet wavelet>;

        $r9 = virtualinvoke $r8.<com.google.wave.api.Wavelet: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $r10 = interfaceinvoke $r7.<org.waveprotocol.wave.model.id.IdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r9);

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setWaveletId(java.lang.String)>($r10);

        $r11 = r1.<com.google.wave.api.Blip: java.lang.String parentBlipId>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setParentBlipId(java.lang.String)>($r11);

        $r12 = r1.<com.google.wave.api.Blip: com.google.wave.api.BlipThread thread>;

        $r13 = virtualinvoke $r12.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setThreadId(java.lang.String)>($r13);

        $r14 = r1.<com.google.wave.api.Blip: java.lang.String creator>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setCreator(java.lang.String)>($r14);

        $l0 = r1.<com.google.wave.api.Blip: long lastModifiedTime>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setLastModifiedTime(long)>($l0);

        $l1 = r1.<com.google.wave.api.Blip: long version>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setVersion(long)>($l1);

        $r15 = r1.<com.google.wave.api.Blip: java.lang.String content>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setContent(java.lang.String)>($r15);

        $r16 = r1.<com.google.wave.api.Blip: java.util.List childBlipIds>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setChildBlipIds(java.util.List)>($r16);

        $r17 = r1.<com.google.wave.api.Blip: java.util.List contributors>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setContributors(java.util.List)>($r17);

        $r18 = r1.<com.google.wave.api.Blip: java.util.SortedMap elements>;

        virtualinvoke $r0.<com.google.wave.api.BlipData: void setElements(java.util.Map)>($r18);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $r20 = r1.<com.google.wave.api.Blip: com.google.wave.api.Annotations annotations>;

        $r21 = virtualinvoke $r20.<com.google.wave.api.Annotations: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r34 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r35 = (com.google.wave.api.Annotation) $r34;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r35);

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.wave.api.BlipData: void setAnnotations(java.util.List)>($r19);

        $r22 = new java.util.ArrayList;

        $r23 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $i2 = interfaceinvoke $r23.<java.util.SortedMap: int size()>();

        $r24 = r1.<com.google.wave.api.Blip: java.util.List replyThreads>;

        $i3 = interfaceinvoke $r24.<java.util.List: int size()>();

        $i4 = $i2 + $i3;

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>($i4);

        $r25 = r1.<com.google.wave.api.Blip: java.util.SortedMap inlineReplyThreads>;

        $r26 = interfaceinvoke $r25.<java.util.SortedMap: java.util.Collection values()>();

        $r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r32 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.google.wave.api.BlipThread) $r32;

        $r33 = virtualinvoke r36.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label3;

     label4:
        $r28 = r1.<com.google.wave.api.Blip: java.util.List replyThreads>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.google.wave.api.BlipThread) $r30;

        $r31 = virtualinvoke r37.<com.google.wave.api.BlipThread: java.lang.String getId()>();

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label5;

     label6:
        virtualinvoke $r0.<com.google.wave.api.BlipData: void setReplyThreadIds(java.util.List)>($r22);

        return $r0;
    }

    public static com.google.wave.api.Blip deserialize(com.google.wave.api.OperationQueue, com.google.wave.api.Wavelet, com.google.wave.api.BlipData)
    {
        long $l0, $l1;
        com.google.wave.api.Blip $r11;
        com.google.wave.api.Wavelet r12;
        java.util.ArrayList $r13;
        java.util.Map $r9;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        java.util.List $r6, $r7, $r8, $r10, r15;
        com.google.wave.api.OperationQueue r14;
        com.google.wave.api.BlipData r0;

        r14 := @parameter0: com.google.wave.api.OperationQueue;

        r12 := @parameter1: com.google.wave.api.Wavelet;

        r0 := @parameter2: com.google.wave.api.BlipData;

        $r1 = virtualinvoke r0.<com.google.wave.api.BlipData: java.lang.String getBlipId()>();

        $r2 = virtualinvoke r0.<com.google.wave.api.BlipData: java.lang.String getParentBlipId()>();

        $r3 = virtualinvoke r0.<com.google.wave.api.BlipData: java.lang.String getThreadId()>();

        $r4 = virtualinvoke r0.<com.google.wave.api.BlipData: java.lang.String getCreator()>();

        $l0 = virtualinvoke r0.<com.google.wave.api.BlipData: long getLastModifiedTime()>();

        $l1 = virtualinvoke r0.<com.google.wave.api.BlipData: long getVersion()>();

        $r5 = virtualinvoke r0.<com.google.wave.api.BlipData: java.lang.String getContent()>();

        $r6 = virtualinvoke r0.<com.google.wave.api.BlipData: java.util.List getChildBlipIds()>();

        $r7 = virtualinvoke r0.<com.google.wave.api.BlipData: java.util.List getReplyThreadIds()>();

        r15 = $r7;

        if $r7 != null goto label1;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r15 = $r13;

     label1:
        $r8 = virtualinvoke r0.<com.google.wave.api.BlipData: java.util.List getContributors()>();

        $r9 = virtualinvoke r0.<com.google.wave.api.BlipData: java.util.Map getElements()>();

        $r10 = virtualinvoke r0.<com.google.wave.api.BlipData: java.util.List getAnnotations()>();

        $r11 = new com.google.wave.api.Blip;

        specialinvoke $r11.<com.google.wave.api.Blip: void <init>(java.lang.String,java.util.List,java.lang.String,java.util.List,java.lang.String,long,long,java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.List,com.google.wave.api.Wavelet)>($r1, $r6, $r5, $r8, $r4, $l0, $l1, $r2, $r3, $r10, $r9, r15, r12);

        return $r11;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.google.wave.api.Blip: java.lang.String INLINE_BLIP_ELEMENT_ID_KEY> = "id";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\<.*?\\>");

        <com.google.wave.api.Blip: java.util.regex.Pattern MARKUP_PATTERN> = $r0;

        return;
    }
}
