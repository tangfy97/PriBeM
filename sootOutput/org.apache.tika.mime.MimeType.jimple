public final class org.apache.tika.mime.MimeType extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.tika.mime.MediaType type;
    private java.lang.String acronym;
    private java.lang.String uti;
    private java.util.List links;
    private java.lang.String description;
    private java.util.List magics;
    private java.util.List rootXML;
    private int minLength;
    private java.util.List extensions;

    public static boolean isValid(java.lang.String)
    {
        int $i0, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String r0;
        boolean z0, z1, z2;
        char $c1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name is missing");

        throw $r2;

     label1:
        z0 = 0;

        z2 = 0;

        z1 = 0;

        i4 = 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c1;

        if $i5 <= 32 goto label3;

        $i6 = (int) $c1;

        if $i6 >= 127 goto label3;

        $i7 = (int) $c1;

        if $i7 == 40 goto label3;

        $i8 = (int) $c1;

        if $i8 == 41 goto label3;

        $i9 = (int) $c1;

        if $i9 == 60 goto label3;

        $i10 = (int) $c1;

        if $i10 == 62 goto label3;

        $i11 = (int) $c1;

        if $i11 == 64 goto label3;

        $i12 = (int) $c1;

        if $i12 == 44 goto label3;

        $i13 = (int) $c1;

        if $i13 == 59 goto label3;

        $i14 = (int) $c1;

        if $i14 == 58 goto label3;

        $i15 = (int) $c1;

        if $i15 == 92 goto label3;

        $i16 = (int) $c1;

        if $i16 == 34 goto label3;

        $i17 = (int) $c1;

        if $i17 == 91 goto label3;

        $i18 = (int) $c1;

        if $i18 == 93 goto label3;

        $i19 = (int) $c1;

        if $i19 == 63 goto label3;

        $i20 = (int) $c1;

        if $i20 != 61 goto label4;

     label3:
        return 0;

     label4:
        $i21 = (int) $c1;

        if $i21 != 47 goto label7;

        if z2 != 0 goto label5;

        if i4 == 0 goto label5;

        $i2 = i4 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != $i3 goto label6;

     label5:
        return 0;

     label6:
        z0 = 1;

        z2 = 1;

        z1 = 1;

     label7:
        i4 = i4 + 1;

        goto label2;

     label8:
        return z1;
    }

    void <init>(org.apache.tika.mime.MediaType)
    {
        java.util.List $r1;
        org.apache.tika.mime.MediaType r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        r2 := @parameter0: org.apache.tika.mime.MediaType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.mime.MimeType: java.lang.String acronym> = "";

        r0.<org.apache.tika.mime.MimeType: java.lang.String uti> = "";

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.tika.mime.MimeType: java.util.List links> = $r1;

        r0.<org.apache.tika.mime.MimeType: java.lang.String description> = "";

        r0.<org.apache.tika.mime.MimeType: java.util.List magics> = null;

        r0.<org.apache.tika.mime.MimeType: java.util.List rootXML> = null;

        r0.<org.apache.tika.mime.MimeType: int minLength> = 0;

        r0.<org.apache.tika.mime.MimeType: java.util.List extensions> = null;

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Media type name is missing");

        throw $r3;

     label1:
        r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type> = r2;

        return;
    }

    public org.apache.tika.mime.MediaType getType()
    {
        org.apache.tika.mime.MediaType $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.apache.tika.mime.MediaType $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $r2 = virtualinvoke $r1.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.lang.String description>;

        return $r1;
    }

    public void setDescription(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.tika.mime.MimeType r1;

        r1 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Description is missing");

        throw $r2;

     label1:
        r1.<org.apache.tika.mime.MimeType: java.lang.String description> = r0;

        return;
    }

    public java.lang.String getAcronym()
    {
        java.lang.String $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.lang.String acronym>;

        return $r1;
    }

    void setAcronym(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.tika.mime.MimeType r1;

        r1 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Acronym is missing");

        throw $r2;

     label1:
        r1.<org.apache.tika.mime.MimeType: java.lang.String acronym> = r0;

        return;
    }

    public java.lang.String getUniformTypeIdentifier()
    {
        java.lang.String $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.lang.String uti>;

        return $r1;
    }

    void setUniformTypeIdentifier(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.tika.mime.MimeType r1;

        r1 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uniform Type Identifier is missing");

        throw $r2;

     label1:
        r1.<org.apache.tika.mime.MimeType: java.lang.String uti> = r0;

        return;
    }

    public java.util.List getLinks()
    {
        java.util.List $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List links>;

        return $r1;
    }

    void addLink(java.net.URI)
    {
        java.lang.IllegalArgumentException $r6;
        java.util.ArrayList $r1;
        java.util.List $r3, $r4, $r5;
        int $i0, $i1;
        java.net.URI r0;
        org.apache.tika.mime.MimeType r2;

        r2 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Missing Link");

        throw $r6;

     label1:
        $r1 = new java.util.ArrayList;

        $r3 = r2.<org.apache.tika.mime.MimeType: java.util.List links>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i1);

        $r4 = r2.<org.apache.tika.mime.MimeType: java.util.List links>;

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        r2.<org.apache.tika.mime.MimeType: java.util.List links> = $r5;

        return;
    }

    void addRootXML(java.lang.String, java.lang.String)
    {
        java.util.List $r1, $r5;
        org.apache.tika.mime.MimeType$RootXML $r2;
        java.lang.String r3, r4;
        org.apache.tika.mime.MimeType r0;
        java.util.ArrayList $r6;

        r0 := @this: org.apache.tika.mime.MimeType;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List rootXML>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.tika.mime.MimeType: java.util.List rootXML> = $r6;

     label1:
        $r5 = r0.<org.apache.tika.mime.MimeType: java.util.List rootXML>;

        $r2 = new org.apache.tika.mime.MimeType$RootXML;

        specialinvoke $r2.<org.apache.tika.mime.MimeType$RootXML: void <init>(org.apache.tika.mime.MimeType,java.lang.String,java.lang.String)>(r0, r3, r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    boolean matchesXML(java.lang.String, java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.List $r1, $r2;
        org.apache.tika.mime.MimeType$RootXML r5;
        java.lang.Object $r4;
        java.lang.String r6, r7;
        org.apache.tika.mime.MimeType r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.mime.MimeType;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List rootXML>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.tika.mime.MimeType: java.util.List rootXML>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.tika.mime.MimeType$RootXML) $r4;

        $z1 = virtualinvoke r5.<org.apache.tika.mime.MimeType$RootXML: boolean matches(java.lang.String,java.lang.String)>(r6, r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    boolean hasRootXML()
    {
        java.util.List $r1;
        org.apache.tika.mime.MimeType r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List rootXML>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.util.List getMagics()
    {
        java.util.List $r1, $r2, $r3;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        return $r3;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    void addMagic(org.apache.tika.mime.Magic)
    {
        java.util.List $r2, $r3;
        org.apache.tika.mime.Magic r0;
        org.apache.tika.mime.MimeType r1;
        java.util.ArrayList $r4;

        r1 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: org.apache.tika.mime.Magic;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.tika.mime.MimeType: java.util.List magics>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.tika.mime.MimeType: java.util.List magics> = $r4;

     label2:
        $r3 = r1.<org.apache.tika.mime.MimeType: java.util.List magics>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    int getMinLength()
    {
        int $i0;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $i0 = r0.<org.apache.tika.mime.MimeType: int minLength>;

        return $i0;
    }

    public boolean hasMagic()
    {
        java.util.List $r1;
        org.apache.tika.mime.MimeType r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean matchesMagic(byte[])
    {
        byte[] r6;
        java.util.List $r1, $r2, $r3;
        org.apache.tika.mime.Magic r5;
        int $i0, i1;
        java.lang.Object $r4;
        org.apache.tika.mime.MimeType r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MimeType;

        r6 := @parameter0: byte[];

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.apache.tika.mime.MimeType: java.util.List magics>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (org.apache.tika.mime.Magic) $r4;

        $z0 = virtualinvoke r5.<org.apache.tika.mime.Magic: boolean eval(byte[])>(r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean matches(byte[])
    {
        byte[] r1;
        org.apache.tika.mime.MimeType r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MimeType;

        r1 := @parameter0: byte[];

        $z0 = virtualinvoke r0.<org.apache.tika.mime.MimeType: boolean matchesMagic(byte[])>(r1);

        return $z0;
    }

    public int compareTo(org.apache.tika.mime.MimeType)
    {
        int $i0;
        org.apache.tika.mime.MediaType $r2, $r3;
        org.apache.tika.mime.MimeType r0, r1;

        r0 := @this: org.apache.tika.mime.MimeType;

        r1 := @parameter0: org.apache.tika.mime.MimeType;

        $r3 = r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $r2 = r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $i0 = virtualinvoke $r3.<org.apache.tika.mime.MediaType: int compareTo(org.apache.tika.mime.MediaType)>($r2);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.tika.mime.MediaType $r3, $r4;
        org.apache.tika.mime.MimeType r1, r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.tika.mime.MimeType;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.tika.mime.MimeType;

        if $z0 == 0 goto label1;

        r1 = (org.apache.tika.mime.MimeType) r0;

        $r4 = r2.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $r3 = r1.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $z1 = virtualinvoke $r4.<org.apache.tika.mime.MediaType: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.tika.mime.MediaType $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $i0 = virtualinvoke $r1.<org.apache.tika.mime.MediaType: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.apache.tika.mime.MediaType $r1;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: org.apache.tika.mime.MediaType type>;

        $r2 = virtualinvoke $r1.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getExtension()
    {
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.List getExtensions()
    {
        java.util.List $r1, $r2, $r3, $r4;
        org.apache.tika.mime.MimeType r0;

        r0 := @this: org.apache.tika.mime.MimeType;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;
    }

    void addExtension(java.lang.String)
    {
        java.util.ArrayList $r5;
        java.util.List $r1, $r2, $r4, $r6, $r7, $r8;
        int $i0;
        java.lang.String r3;
        org.apache.tika.mime.MimeType r0;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MimeType;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        if $r1 != null goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r3);

        r0.<org.apache.tika.mime.MimeType: java.util.List extensions> = $r7;

        goto label2;

     label1:
        $r2 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r5 = new java.util.ArrayList;

        $r6 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r0.<org.apache.tika.mime.MimeType: java.util.List extensions> = $r5;

     label2:
        $r8 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.tika.mime.MimeType: java.util.List extensions>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.tika.mime.MimeType r0, $r2;

        r0 := @this: org.apache.tika.mime.MimeType;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.tika.mime.MimeType) r1;

        $i0 = virtualinvoke r0.<org.apache.tika.mime.MimeType: int compareTo(org.apache.tika.mime.MimeType)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.tika.mime.MimeType: long serialVersionUID> = 4357830439860729201L;

        return;
    }
}
