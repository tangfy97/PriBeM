public class ucar.nc2.iosp.gempak.GempakSoundingIOSP extends ucar.nc2.iosp.gempak.GempakStationFileIOSP
{
    protected static final ucar.nc2.Dimension DIM_MAXMERGELEVELS;

    public void <init>()
    {
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakStationFileIOSP: void <init>()>();

        return;
    }

    protected ucar.nc2.iosp.gempak.AbstractGempakStationFileReader makeStationReader()
    {
        ucar.nc2.iosp.gempak.GempakSoundingFileReader $r0;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r1;

        r1 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        $r0 = new ucar.nc2.iosp.gempak.GempakSoundingFileReader;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakSoundingFileReader: void <init>()>();

        return $r0;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r2, $r4;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakStationFileIOSP: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("merged");

        if $z1 != 0 goto label2;

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r5 = virtualinvoke $r4.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("unmerged");

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        return "GempakSounding";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        return "GEMPAK Sounding Obs Data";
    }

    public java.lang.String getCFFeatureType()
    {
        ucar.nc2.constants.CF$FeatureType $r0;
        java.lang.String $r1;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r2;

        r2 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        $r0 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeriesProfile>;

        $r1 = virtualinvoke $r0.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        return $r1;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r3;
        ucar.ma2.Array $r6;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r4;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;
        ucar.nc2.Variable r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r2 := @parameter0: ucar.nc2.Variable;

        r3 := @parameter1: ucar.ma2.Section;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r5 = virtualinvoke $r4.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("merged");

        $r6 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.ma2.Array readSoundingData(ucar.nc2.Variable,ucar.ma2.Section,boolean)>(r2, r3, $z0);

        return $r6;
    }

    private ucar.ma2.Array readSoundingData(ucar.nc2.Variable, ucar.ma2.Section, boolean) throws java.io.IOException
    {
        java.nio.ByteBuffer $r8;
        ucar.ma2.ArrayStructureBB $r6, r24;
        byte $b6;
        int[] $r7;
        boolean $z0, z1, z2, $z3, $z4;
        ucar.ma2.Range $r2, $r3;
        ucar.nc2.iosp.gempak.GempakSoundingFileReader $r11, $r23;
        java.util.List $r16, $r25;
        ucar.ma2.StructureMembers $r5;
        ucar.ma2.Section r1;
        float[] $r21;
        ucar.nc2.Structure r4;
        ucar.nc2.Sequence r20;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r10, $r15, $r17, $r22;
        int $i0, $i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i11, i12;
        ucar.nc2.Variable r0, $r19;
        java.lang.String r14;
        java.util.Iterator $r12;
        ucar.nc2.iosp.gempak.GempakFileReader$RData $r18;
        ucar.ma2.ArraySequence r26;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r9;
        java.lang.Object $r13;

        r9 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r0 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.ma2.Section;

        z1 := @parameter2: boolean;

        r24 = null;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label13;

        $r2 = virtualinvoke r1.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(0);

        $r3 = virtualinvoke r1.<ucar.ma2.Section: ucar.ma2.Range getRange(int)>(1);

        $i0 = virtualinvoke $r2.<ucar.ma2.Range: int length()>();

        $i1 = virtualinvoke $r3.<ucar.ma2.Range: int length()>();

        i2 = $i0 * $i1;

        r4 = (ucar.nc2.Structure) r0;

        $r5 = virtualinvoke r4.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        staticinvoke <ucar.ma2.ArrayStructureBB: int setOffsets(ucar.ma2.StructureMembers)>($r5);

        $r6 = new ucar.ma2.ArrayStructureBB;

        $r7 = newarray (int)[1];

        $r7[0] = i2;

        specialinvoke $r6.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[])>($r5, $r7);

        $r8 = virtualinvoke $r6.<ucar.ma2.ArrayStructureBB: java.nio.ByteBuffer getByteBuffer()>();

        i11 = virtualinvoke $r2.<ucar.ma2.Range: int first()>();

     label01:
        $i3 = virtualinvoke $r2.<ucar.ma2.Range: int last()>();

        if i11 > $i3 goto label12;

        i12 = virtualinvoke $r3.<ucar.ma2.Range: int first()>();

     label02:
        $i4 = virtualinvoke $r3.<ucar.ma2.Range: int last()>();

        if i12 > $i4 goto label11;

        if z1 == 0 goto label03;

        $r22 = r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r23 = (ucar.nc2.iosp.gempak.GempakSoundingFileReader) $r22;

        $r25 = virtualinvoke $r23.<ucar.nc2.iosp.gempak.GempakSoundingFileReader: java.util.List getMergedParts()>();

        goto label04;

     label03:
        $r10 = r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r11 = (ucar.nc2.iosp.gempak.GempakSoundingFileReader) $r10;

        $r25 = virtualinvoke $r11.<ucar.nc2.iosp.gempak.GempakSoundingFileReader: java.util.List getUnmergedParts()>();

     label04:
        z2 = 1;

        $r12 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        $r15 = r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r16 = virtualinvoke $r15.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getParameters(java.lang.String)>(r14);

        $r17 = r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $i9 = i12 + 1;

        $i8 = i11 + 1;

        $r18 = virtualinvoke $r17.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: ucar.nc2.iosp.gempak.GempakFileReader$RData DM_RDTR(int,int,java.lang.String)>($i9, $i8, r14);

        $r19 = virtualinvoke r4.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>(r14);

        r20 = (ucar.nc2.Sequence) $r19;

        if $r18 != null goto label06;

        r26 = specialinvoke r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.ma2.ArraySequence makeEmptySequence(ucar.nc2.Sequence)>(r20);

        goto label07;

     label06:
        z2 = 0;

        $r21 = $r18.<ucar.nc2.iosp.gempak.GempakFileReader$RData: float[] data>;

        r26 = specialinvoke r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.ma2.ArraySequence makeArraySequence(ucar.nc2.Sequence,java.util.List,float[])>(r20, $r16, $r21);

     label07:
        $i10 = virtualinvoke $r6.<ucar.ma2.ArrayStructureBB: int addObjectToHeap(java.lang.Object)>(r26);

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i10);

        goto label05;

     label08:
        if z2 == 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        $b6 = (byte) $z4;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $i7 = virtualinvoke $r3.<ucar.ma2.Range: int stride()>();

        i12 = i12 + $i7;

        goto label02;

     label11:
        $i5 = virtualinvoke $r2.<ucar.ma2.Range: int stride()>();

        i11 = i11 + $i5;

        goto label01;

     label12:
        r24 = $r6;

        staticinvoke <visad.util.Trace: void call2(java.lang.String)>("GEMPAKSIOSP: readMergedData");

     label13:
        return r24;
    }

    private ucar.ma2.ArraySequence makeEmptySequence(ucar.nc2.Sequence)
    {
        ucar.nc2.iosp.gempak.GempakSoundingIOSP$EmptyStructureDataIterator $r5;
        ucar.ma2.ArraySequence $r6;
        ucar.nc2.Sequence r0;
        ucar.ma2.StructureMembers $r1;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r4;
        int $i1;

        r4 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r0 := @parameter0: ucar.nc2.Sequence;

        $r1 = virtualinvoke r0.<ucar.nc2.Sequence: ucar.ma2.StructureMembers makeStructureMembers()>();

        $r6 = new ucar.ma2.ArraySequence;

        $r5 = new ucar.nc2.iosp.gempak.GempakSoundingIOSP$EmptyStructureDataIterator;

        specialinvoke $r5.<ucar.nc2.iosp.gempak.GempakSoundingIOSP$EmptyStructureDataIterator: void <init>(ucar.nc2.iosp.gempak.GempakSoundingIOSP)>(r4);

        $i1 = (int) -1;

        specialinvoke $r6.<ucar.ma2.ArraySequence: void <init>(ucar.ma2.StructureMembers,ucar.ma2.StructureDataIterator,int)>($r1, $r5, $i1);

        return $r6;
    }

    private ucar.ma2.ArraySequence makeArraySequence(ucar.nc2.Sequence, java.util.List, float[])
    {
        byte[] r4;
        float[] r0;
        java.nio.ByteBuffer $r5;
        ucar.ma2.StructureMembers$Member $r15;
        ucar.nc2.iosp.gempak.GempakParameter r13;
        ucar.nc2.Sequence r2;
        ucar.ma2.ArrayStructureBB $r6;
        int[] $r7;
        int $i0, $i1, i2, $i3, i4, i5, i6;
        java.lang.String $r14;
        boolean $z0;
        java.util.Iterator $r11;
        ucar.ma2.ArraySequence $r8, $r16;
        java.util.List r1;
        ucar.ma2.StructureMembers $r3;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r10;
        float $f0;
        java.lang.Object $r12;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP$SequenceIterator $r9;

        r10 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r2 := @parameter0: ucar.nc2.Sequence;

        r1 := @parameter1: java.util.List;

        r0 := @parameter2: float[];

        if r0 != null goto label1;

        $r16 = specialinvoke r10.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.ma2.ArraySequence makeEmptySequence(ucar.nc2.Sequence)>(r2);

        return $r16;

     label1:
        $i0 = lengthof r0;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = $i0 / $i1;

        $r3 = virtualinvoke r2.<ucar.nc2.Sequence: ucar.ma2.StructureMembers makeStructureMembers()>();

        $i3 = staticinvoke <ucar.ma2.ArrayStructureBB: int setOffsets(ucar.ma2.StructureMembers)>($r3);

        i4 = $i3 * i2;

        r4 = newarray (byte)[i4];

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r4);

        $r6 = new ucar.ma2.ArrayStructureBB;

        $r7 = newarray (int)[1];

        $r7[0] = i2;

        specialinvoke $r6.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int)>($r3, $r7, $r5, 0);

        i5 = 0;

        i6 = 0;

     label2:
        if i6 >= i2 goto label6;

        $r11 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.iosp.gempak.GempakParameter) $r12;

        $r14 = virtualinvoke r13.<ucar.nc2.iosp.gempak.GempakParameter: java.lang.String getName()>();

        $r15 = virtualinvoke $r3.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r14);

        if $r15 == null goto label4;

        $f0 = r0[i5];

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        i6 = i6 + 1;

        goto label2;

     label6:
        $r8 = new ucar.ma2.ArraySequence;

        $r9 = new ucar.nc2.iosp.gempak.GempakSoundingIOSP$SequenceIterator;

        specialinvoke $r9.<ucar.nc2.iosp.gempak.GempakSoundingIOSP$SequenceIterator: void <init>(ucar.nc2.iosp.gempak.GempakSoundingIOSP,int,ucar.ma2.ArrayStructure)>(r10, i2, $r6);

        specialinvoke $r8.<ucar.ma2.ArraySequence: void <init>(ucar.ma2.StructureMembers,ucar.ma2.StructureDataIterator,int)>($r3, $r9, i2);

        return $r8;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r6;
        ucar.unidata.io.RandomAccessFile $r1;
        java.lang.String[] r2;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP $r0;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP$MakeNetcdfFile $r4;
        int $i0;
        java.lang.String $r3, $r5, $r7;

        r2 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        specialinvoke $r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: void <init>()>();

        $r1 = new ucar.unidata.io.RandomAccessFile;

        $r3 = r2[0];

        specialinvoke $r1.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String,int)>($r3, "r", 2048);

        $r4 = new ucar.nc2.iosp.gempak.GempakSoundingIOSP$MakeNetcdfFile;

        $r5 = r2[0];

        specialinvoke $r4.<ucar.nc2.iosp.gempak.GempakSoundingIOSP$MakeNetcdfFile: void <init>(ucar.nc2.iosp.IOServiceProvider,ucar.unidata.io.RandomAccessFile,java.lang.String,ucar.nc2.util.CancelTask)>($r0, $r1, $r5, null);

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $r7 = r2[1];

        staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String)>($r4, $r7);

        goto label2;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.Object)>($r4);

     label2:
        return;
    }

    protected void fillNCFile() throws java.io.IOException
    {
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("merged");

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: void buildFile(boolean)>($z0);

        return;
    }

    private void buildFile(boolean)
    {
        ucar.nc2.iosp.gempak.GempakSoundingFileReader $r34;
        ucar.nc2.Attribute $r20, $r21, $r32, $r37;
        ucar.ma2.ArrayDouble$D1 $r22, $r47;
        java.lang.StringBuilder $r26, $r27, $r28;
        long $l2;
        ucar.nc2.Structure $r30;
        java.util.ArrayList $r25, $r45;
        java.lang.String $r29, $r40, r43, $r52;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;
        ucar.nc2.Dimension $r3, $r5, $r7, $r9, $r15;
        ucar.nc2.constants.CF$FeatureType $r38;
        java.util.Date r51;
        boolean $z0, $z1, z2, $z3;
        ucar.ma2.DataType $r18;
        java.util.List $r2, $r11, $r14, r53;
        ucar.nc2.NetcdfFile $r4, $r6, $r8, $r10, $r16, $r19, $r24, $r31, $r39, $r41, $r49;
        ucar.nc2.Sequence $r44;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r13, $r33;
        int $i0, $i1, i3;
        ucar.nc2.Variable $r17, $r36, r50;
        double $d0, $d1;
        java.util.Iterator $r12, $r23, $r35;
        java.lang.Object $r42, $r46, $r48;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        z2 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getStations()>();

        $r3 = new ucar.nc2.Dimension;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r3.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("station", $i0, 1);

        $r4 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r4.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r3);

        $r6 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r5 = <ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Dimension DIM_LEN8>;

        virtualinvoke $r6.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r5);

        $r8 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r7 = <ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Dimension DIM_LEN4>;

        virtualinvoke $r8.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r7);

        $r10 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r9 = <ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Dimension DIM_LEN2>;

        virtualinvoke $r10.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r9);

        $r11 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: java.util.List makeStationVars(java.util.List,ucar.nc2.Dimension)>($r2, $r3);

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r48 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r50 = (ucar.nc2.Variable) $r48;

        $r49 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r49.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, r50);

        goto label01;

     label02:
        $r13 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r14 = virtualinvoke $r13.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getDates()>();

        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        $r15 = new ucar.nc2.Dimension;

        specialinvoke $r15.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("time", $i1, 1);

        $r16 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r16.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r15);

        $r17 = new ucar.nc2.Variable;

        $r19 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r17.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String)>($r19, null, null, "time", $r18, "time");

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1970-01-01 00:00:00");

        virtualinvoke $r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time");

        virtualinvoke $r17.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        $r22 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r22.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i1);

        i3 = 0;

        $r23 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r46 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.util.Date) $r46;

        $r47 = (ucar.ma2.ArrayDouble$D1) $r22;

        $l2 = virtualinvoke r51.<java.util.Date: long getTime()>();

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        virtualinvoke $r47.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i3, $d1);

        i3 = i3 + 1;

        goto label03;

     label04:
        virtualinvoke $r17.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r22, 0);

        $r24 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r24.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r17);

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r3);

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r15);

        if z2 == 0 goto label05;

        $r52 = "merged";

        goto label06;

     label05:
        $r52 = "unmerged";

     label06:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sounding");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new ucar.nc2.Structure;

        $r31 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r30.<ucar.nc2.Structure: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r31, null, null, $r29);

        virtualinvoke $r30.<ucar.nc2.Structure: void setDimensions(java.util.List)>($r25);

        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", "time SLAT SLON SELV");

        virtualinvoke $r30.<ucar.nc2.Structure: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        if z2 == 0 goto label07;

        $r45 = new java.util.ArrayList;

        specialinvoke $r45.<java.util.ArrayList: void <init>()>();

        r53 = $r45;

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>("SNDT");

        goto label08;

     label07:
        $r33 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r34 = (ucar.nc2.iosp.gempak.GempakSoundingFileReader) $r33;

        r53 = virtualinvoke $r34.<ucar.nc2.iosp.gempak.GempakSoundingFileReader: java.util.List getUnmergedParts()>();

     label08:
        $r35 = interfaceinvoke r53.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r42 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r43 = (java.lang.String) $r42;

        $r44 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Sequence makeSequence(ucar.nc2.Structure,java.lang.String,boolean)>($r30, r43, 0);

        if $r44 != null goto label10;

        goto label09;

     label10:
        virtualinvoke $r30.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r44);

        goto label09;

     label11:
        $r36 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Variable makeMissingVariable()>();

        virtualinvoke $r30.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r36);

        $r39 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        $r37 = new ucar.nc2.Attribute;

        $r38 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType timeSeriesProfile>;

        $r40 = virtualinvoke $r38.<ucar.nc2.constants.CF$FeatureType: java.lang.String toString()>();

        specialinvoke $r37.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("CF:featureType", $r40);

        virtualinvoke $r39.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r37);

        $r41 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r41.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r30);

        return;
    }

    protected ucar.nc2.Sequence makeSequence(ucar.nc2.Structure, java.lang.String, boolean)
    {
        java.util.Iterator $r7;
        ucar.nc2.Structure r5;
        ucar.nc2.iosp.gempak.GempakParameter r10;
        java.util.List $r3;
        ucar.nc2.Sequence $r4;
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r2;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;
        ucar.nc2.Variable $r8, $r11;
        java.lang.Object $r9;
        java.lang.String r1;
        ucar.nc2.NetcdfFile $r6;
        boolean $z0, z1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r5 := @parameter0: ucar.nc2.Structure;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r2 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r3 = virtualinvoke $r2.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.util.List getParameters(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new ucar.nc2.Sequence;

        $r6 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.NetcdfFile ncfile>;

        specialinvoke $r4.<ucar.nc2.Sequence: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>($r6, null, r5, r1);

        virtualinvoke $r4.<ucar.nc2.Sequence: void setDimensions(java.lang.String)>("");

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (ucar.nc2.iosp.gempak.GempakParameter) $r9;

        $r11 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Variable makeParamVariable(ucar.nc2.iosp.gempak.GempakParameter,java.util.List)>(r10, null);

        specialinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: void addVerticalCoordAttribute(ucar.nc2.Variable)>($r11);

        virtualinvoke $r4.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r11);

        goto label2;

     label3:
        if z1 == 0 goto label4;

        $r8 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Variable makeMissingVariable()>();

        virtualinvoke $r4.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r8);

     label4:
        return $r4;
    }

    private void addVerticalCoordAttribute(ucar.nc2.Variable)
    {
        ucar.nc2.iosp.gempak.AbstractGempakStationFileReader $r1, $r5;
        ucar.nc2.constants.AxisType $r8, $r11, $r14;
        int $i0;
        ucar.nc2.Variable r3;
        java.lang.String $r4, $r6, $r9, $r12, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.iosp.gempak.GempakSoundingFileReader r2;
        ucar.nc2.Attribute $r7, $r10, $r13;
        ucar.nc2.iosp.gempak.GempakSoundingIOSP r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakSoundingIOSP;

        r3 := @parameter0: ucar.nc2.Variable;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        r2 = (ucar.nc2.iosp.gempak.GempakSoundingFileReader) $r1;

        $i0 = virtualinvoke r2.<ucar.nc2.iosp.gempak.GempakSoundingFileReader: int getVerticalCoordinate()>();

        $r4 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $r5 = r0.<ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.iosp.gempak.AbstractGempakStationFileReader gemreader>;

        $r6 = virtualinvoke $r5.<ucar.nc2.iosp.gempak.AbstractGempakStationFileReader: java.lang.String getFileSubType()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("merged");

        if $z0 == 0 goto label3;

        if $i0 != 1 goto label1;

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("PRES");

        if $z5 == 0 goto label1;

        $r10 = new ucar.nc2.Attribute;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        $r12 = virtualinvoke $r11.<ucar.nc2.constants.AxisType: java.lang.String name()>();

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r12);

        virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        goto label4;

     label1:
        if $i0 != 3 goto label4;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("HGHT");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("MHGT");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("DHGT");

        if $z4 == 0 goto label4;

     label2:
        $r13 = new ucar.nc2.Attribute;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r15 = virtualinvoke $r14.<ucar.nc2.constants.AxisType: java.lang.String name()>();

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r15);

        virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

        goto label4;

     label3:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("PRES");

        if $z1 == 0 goto label4;

        $r7 = new ucar.nc2.Attribute;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        $r9 = virtualinvoke $r8.<ucar.nc2.constants.AxisType: java.lang.String name()>();

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r9);

        virtualinvoke r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

     label4:
        return;
    }

    static void <clinit>()
    {
        ucar.nc2.Dimension $r0;

        $r0 = new ucar.nc2.Dimension;

        specialinvoke $r0.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>("maxMergeLevels", 50, 1);

        <ucar.nc2.iosp.gempak.GempakSoundingIOSP: ucar.nc2.Dimension DIM_MAXMERGELEVELS> = $r0;

        return;
    }
}
