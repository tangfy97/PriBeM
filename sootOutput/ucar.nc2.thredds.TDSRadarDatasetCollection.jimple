public class ucar.nc2.thredds.TDSRadarDatasetCollection extends ucar.nc2.dt.radial.StationRadarCollectionImpl
{
    protected java.util.HashMap stationHMap;
    private java.util.List radarTimeSpan;
    private ucar.unidata.geoloc.LatLonRect radarRegion;
    private java.lang.String dsc_location;
    private java.util.List radarProducts;
    private java.lang.String summary;
    protected static final org.jdom.Namespace defNS;
    private java.net.URI docURI;
    static final boolean $assertionsDisabled;

    public static ucar.nc2.thredds.TDSRadarDatasetCollection factory(thredds.catalog.InvDataset, java.lang.String, java.lang.StringBuffer) throws java.io.IOException, java.net.URISyntaxException
    {
        java.lang.StringBuffer r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection $r4;
        java.lang.String $r1, r2;
        thredds.catalog.InvDataset r0;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.StringBuffer;

        $r1 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        $r4 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection factory(java.lang.String,java.lang.String,java.lang.StringBuffer)>($r1, r2, r3);

        return $r4;
    }

    public static ucar.nc2.thredds.TDSRadarDatasetCollection factory(java.lang.String, java.lang.String, java.lang.StringBuffer) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection $r5;
        thredds.catalog.XMLEntityResolver $r0;
        org.jdom.Document r10;
        org.jdom.JDOMException $r8;
        java.lang.StringBuffer r7;
        org.jdom.Namespace $r4;
        java.lang.String r2, r6, $r9;
        org.jdom.Element $r3;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.StringBuffer;

        r10 = null;

        $r0 = new thredds.catalog.XMLEntityResolver;

        specialinvoke $r0.<thredds.catalog.XMLEntityResolver: void <init>(boolean)>(1);

        $r1 = virtualinvoke $r0.<thredds.catalog.XMLEntityResolver: org.jdom.input.SAXBuilder getSAXBuilder()>();

     label1:
        r10 = virtualinvoke $r1.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<org.jdom.JDOMException: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label4:
        $r3 = virtualinvoke r10.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r4 = virtualinvoke $r3.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r5 = new ucar.nc2.thredds.TDSRadarDatasetCollection;

        specialinvoke $r5.<ucar.nc2.thredds.TDSRadarDatasetCollection: void <init>(java.lang.String,java.lang.String,org.jdom.Element,org.jdom.Namespace,java.lang.StringBuffer)>(r6, r2, $r3, $r4, r7);

        return $r5;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    private void <init>(java.lang.String, java.lang.String, org.jdom.Element, org.jdom.Namespace, java.lang.StringBuffer) throws java.io.IOException
    {
        java.util.Date $r15, $r18;
        java.util.HashMap $r6;
        java.lang.StringBuffer r20;
        org.jdom.Namespace r7;
        java.lang.String r4, $r5, $r11, r12, $r14, $r17;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.nc2.units.DateUnit $r19;
        java.lang.Exception $r21;
        ucar.unidata.geoloc.LatLonRect $r8;
        java.util.List $r9, $r10;
        java.lang.Object $r13, $r16;
        org.jdom.Element r1, $r2, $r3;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r12 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: org.jdom.Element;

        r7 := @parameter3: org.jdom.Namespace;

        r20 := @parameter4: java.lang.StringBuffer;

        specialinvoke r0.<ucar.nc2.dt.radial.StationRadarCollectionImpl: void <init>()>();

        virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: org.jdom.Element readElements(org.jdom.Element,java.lang.String)>(r1, "service");

        $r2 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: org.jdom.Element readElements(org.jdom.Element,java.lang.String)>(r1, "dataset");

        $r3 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: org.jdom.Element readElements(org.jdom.Element,java.lang.String)>($r2, "metadata");

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("dataset.xml", "stations.xml");

        $r6 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.HashMap readRadarStations(java.lang.String)>($r5);

        $r8 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.LatLonRect readSelectRegion(org.jdom.Element,org.jdom.Namespace)>($r3, r7);

        $r9 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List readSelectTime(org.jdom.Element,org.jdom.Namespace)>($r3, r7);

        $r10 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List readSelectVariable(org.jdom.Element,org.jdom.Namespace)>($r3, r7);

        $r11 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String readSelectDocument(org.jdom.Element,org.jdom.Namespace)>($r3, r7);

        if $r6 != null goto label1;

        virtualinvoke r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TDSRadarDatasetCollection must have station selected");

        return;

     label1:
        if $r8 != null goto label2;

        virtualinvoke r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TDSRadarDatasetCollection must have region selected");

        return;

     label2:
        if $r9 != null goto label3;

        virtualinvoke r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TDSRadarDatasetCollection must have time span selected");

        return;

     label3:
        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String desc> = r12;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String dsc_location> = r4;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarProducts> = $r10;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String summary> = $r11;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.HashMap stationHMap> = $r6;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.LatLonRect radarRegion> = $r8;

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarTimeSpan> = $r9;

        $r13 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (java.lang.String) $r13;

        $r15 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r14);

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.Date startDate> = $r15;

        $r16 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(1);

        $r17 = (java.lang.String) $r16;

        $r18 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>($r17);

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.Date endDate> = $r18;

     label4:
        $r19 = new ucar.nc2.units.DateUnit;

        specialinvoke $r19.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("hours since 1991-01-01T00:00");

        r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.units.DateUnit timeUnit> = $r19;

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label7:
        return;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.util.HashMap readRadarStations(java.lang.String) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r1;
        java.util.Iterator $r6;
        ucar.nc2.thredds.TDSRadarDatasetCollection r9;
        ucar.unidata.geoloc.Station $r10;
        thredds.catalog.XMLEntityResolver $r0;
        java.util.HashMap $r2;
        java.util.List $r5;
        org.jdom.Document r13;
        org.jdom.JDOMException $r12;
        java.lang.Object $r7;
        java.lang.String r3, $r11;
        org.jdom.Element $r4, r8;
        boolean $z0;

        r9 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r3 := @parameter0: java.lang.String;

        r13 = null;

        $r0 = new thredds.catalog.XMLEntityResolver;

        specialinvoke $r0.<thredds.catalog.XMLEntityResolver: void <init>(boolean)>(1);

        $r1 = virtualinvoke $r0.<thredds.catalog.XMLEntityResolver: org.jdom.input.SAXBuilder getSAXBuilder()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

     label1:
        r13 = virtualinvoke $r1.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<org.jdom.JDOMException: void printStackTrace()>();

     label4:
        $r4 = virtualinvoke r13.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r5 = virtualinvoke $r4.<org.jdom.Element: java.util.List getChildren()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jdom.Element) $r7;

        $r10 = specialinvoke r9.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.Station readStation(org.jdom.Element)>(r8);

        if null == $r10 goto label6;

        $r11 = interfaceinvoke $r10.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

     label6:
        goto label5;

     label7:
        return $r2;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public org.jdom.Element readElements(org.jdom.Element, java.lang.String)
    {
        java.util.Iterator $r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r7;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        org.jdom.Element r0, r4;
        boolean $z0, $z1;

        r7 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r0 := @parameter0: org.jdom.Element;

        r6 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jdom.Element) $r3;

        $r5 = virtualinvoke r4.<org.jdom.Element: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private ucar.unidata.geoloc.Station readStation(org.jdom.Element)
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r11;
        ucar.unidata.geoloc.StationImpl $r10;
        java.lang.String $r1, $r3, $r5, $r7, $r9;
        org.jdom.Element r0, $r2, $r4, $r6, $r8;
        double $d0, $d1, $d2;

        r11 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r2 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("name");

        $r3 = virtualinvoke $r2.<org.jdom.Element: java.lang.String getValue()>();

        $r4 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("latitude");

        $r5 = virtualinvoke $r4.<org.jdom.Element: java.lang.String getValue()>();

        $r6 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("longitude");

        $r7 = virtualinvoke $r6.<org.jdom.Element: java.lang.String getValue()>();

        $r8 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>("elevation");

        $r9 = virtualinvoke $r8.<org.jdom.Element: java.lang.String getValue()>();

        $r10 = new ucar.unidata.geoloc.StationImpl;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r7);

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        specialinvoke $r10.<ucar.unidata.geoloc.StationImpl: void <init>(java.lang.String,java.lang.String,java.lang.String,double,double,double)>($r1, $r3, "", $d0, $d1, $d2);

        return $r10;
    }

    public ucar.unidata.geoloc.LatLonRect readSelectRegion(org.jdom.Element, org.jdom.Namespace)
    {
        java.lang.Double $r12, $r13, $r15, $r16;
        org.jdom.Namespace r1;
        java.lang.String $r4, $r6, $r8, $r10;
        double $d0, $d1, $d2, $d3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r18;
        ucar.unidata.geoloc.LatLonRect $r17;
        ucar.unidata.geoloc.LatLonPointImpl $r11, $r14;
        org.jdom.Element r0, $r2, $r3, $r5, $r7, $r9;

        r18 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r0 := @parameter0: org.jdom.Element;

        r1 := @parameter1: org.jdom.Namespace;

        $r2 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("LatLonBox", r1);

        $r3 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("north", r1);

        $r4 = virtualinvoke $r3.<org.jdom.Element: java.lang.String getValue()>();

        $r5 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("south", r1);

        $r6 = virtualinvoke $r5.<org.jdom.Element: java.lang.String getValue()>();

        $r7 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("east", r1);

        $r8 = virtualinvoke $r7.<org.jdom.Element: java.lang.String getValue()>();

        $r9 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("west", r1);

        $r10 = virtualinvoke $r9.<org.jdom.Element: java.lang.String getValue()>();

        $r11 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r6);

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r10);

        $d1 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        specialinvoke $r11.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        $r14 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r4);

        $d2 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r8);

        $d3 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        specialinvoke $r14.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d2, $d3);

        $r17 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r17.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>($r11, $r14);

        return $r17;
    }

    public java.util.List readSelectTime(org.jdom.Element, org.jdom.Namespace)
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r8;
        java.util.ArrayList $r7;
        org.jdom.Namespace r1;
        java.lang.String $r4, $r6;
        org.jdom.Element r0, $r2, $r3, $r5;

        r8 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r0 := @parameter0: org.jdom.Element;

        r1 := @parameter1: org.jdom.Namespace;

        $r2 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("TimeSpan", r1);

        virtualinvoke $r2.<org.jdom.Element: java.util.List getChildren()>();

        $r3 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("start", r1);

        $r4 = virtualinvoke $r3.<org.jdom.Element: java.lang.String getValue()>();

        $r5 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("end", r1);

        $r6 = virtualinvoke $r5.<org.jdom.Element: java.lang.String getValue()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r7;
    }

    public java.util.List readSelectVariable(org.jdom.Element, org.jdom.Namespace)
    {
        java.lang.String[] $r11;
        java.util.ArrayList $r0;
        org.jdom.Namespace r2;
        java.lang.String $r8, $r9, $r13, $r14;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        ucar.nc2.thredds.TDSRadarDatasetCollection r15;
        java.util.List $r4;
        ucar.unidata.util.Product $r10, $r12;
        java.lang.Object $r6;
        org.jdom.Element r1, $r3, r7;

        r15 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: org.jdom.Element;

        r2 := @parameter1: org.jdom.Namespace;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r1.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("Variables", r2);

        $r4 = virtualinvoke $r3.<org.jdom.Element: java.util.List getChildren()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jdom.Element) $r6;

        $r8 = virtualinvoke r7.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $z1 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $r12 = new ucar.unidata.util.Product;

        $r14 = $r11[0];

        $r13 = $r11[1];

        specialinvoke $r12.<ucar.unidata.util.Product: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label3;

     label2:
        $r9 = virtualinvoke r7.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("vocabulary_name");

        $r10 = new ucar.unidata.util.Product;

        specialinvoke $r10.<ucar.unidata.util.Product: void <init>(java.lang.String,java.lang.String)>($r8, $r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

     label3:
        goto label1;

     label4:
        return $r0;
    }

    private java.lang.String readSelectDocument(org.jdom.Element, org.jdom.Namespace)
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r4;
        org.jdom.Namespace r1;
        java.lang.String $r3;
        org.jdom.Element r0, $r2;

        r4 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r0 := @parameter0: org.jdom.Element;

        r1 := @parameter1: org.jdom.Namespace;

        $r2 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("documentation", r1);

        $r3 = virtualinvoke $r2.<org.jdom.Element: java.lang.String getValue()>();

        return $r3;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        return;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String summary>;

        return $r1;
    }

    public java.lang.String getLocation()
    {
        java.lang.String $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String dsc_location>;

        return $r1;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String desc>;

        return $r1;
    }

    public ucar.unidata.geoloc.LatLonRect getRadarsBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.LatLonRect radarRegion>;

        return $r1;
    }

    public java.util.List getRadarTimeSpan()
    {
        java.util.List $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarTimeSpan>;

        return $r1;
    }

    public java.util.List getRadarProducts()
    {
        java.util.List $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarProducts>;

        return $r1;
    }

    public boolean checkStationProduct(java.lang.String, ucar.unidata.util.Product)
    {
        java.util.Iterator $r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.util.List $r1;
        ucar.unidata.util.Product r4, r5;
        java.lang.Object $r3;
        java.lang.String r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r6 := @parameter0: java.lang.String;

        r5 := @parameter1: ucar.unidata.util.Product;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarProducts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.unidata.util.Product) $r3;

        $z1 = virtualinvoke r4.<ucar.unidata.util.Product: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean checkStationProduct(ucar.unidata.util.Product)
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.unidata.util.Product r1;
        boolean $z0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: ucar.unidata.util.Product;

        $z0 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: boolean checkStationProduct(java.lang.String,ucar.unidata.util.Product)>(null, r1);

        return $z0;
    }

    public int getStationProductCount(java.lang.String)
    {
        java.util.List $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        int $i0;
        java.lang.String r2;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarProducts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List getStations() throws java.io.IOException
    {
        java.util.List $r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r1 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarStations()>();

        return $r1;
    }

    public java.util.List getRadarStations()
    {
        java.util.Iterator $r4;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        java.util.Collection $r3;
        ucar.unidata.geoloc.Station $r6;
        java.util.HashMap $r2;
        java.util.ArrayList $r0;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.HashMap stationHMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (ucar.unidata.geoloc.Station) $r5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    public ucar.unidata.geoloc.Station getRadarStation(java.lang.String)
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.unidata.geoloc.Station $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.HashMap stationHMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (ucar.unidata.geoloc.Station) $r3;

        return $r4;
    }

    public java.util.List getStations(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $r2 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getStations(ucar.unidata.geoloc.LatLonRect,ucar.nc2.util.CancelTask)>(null, r1);

        return $r2;
    }

    public java.util.List getStations(ucar.unidata.geoloc.LatLonRect) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r1;
        java.util.List $r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        $r2 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getStations(ucar.unidata.geoloc.LatLonRect,ucar.nc2.util.CancelTask)>(r1, null);

        return $r2;
    }

    public java.util.List getStations(ucar.unidata.geoloc.LatLonRect, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Iterator $r6;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.util.Collection $r2;
        ucar.unidata.geoloc.Station r8;
        java.util.HashMap $r1;
        java.util.ArrayList $r3;
        ucar.unidata.geoloc.LatLonRect r4, $r5;
        ucar.unidata.geoloc.LatLonPoint $r9;
        ucar.nc2.util.CancelTask r10;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r4 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r10 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.HashMap stationHMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.LatLonRect radarRegion>;

        $z0 = virtualinvoke r4.<ucar.unidata.geoloc.LatLonRect: boolean containedIn(ucar.unidata.geoloc.LatLonRect)>($r5);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.unidata.geoloc.Station) $r7;

        $r9 = interfaceinvoke r8.<ucar.unidata.geoloc.Station: ucar.unidata.geoloc.LatLonPoint getLatLon()>();

        $z2 = virtualinvoke r4.<ucar.unidata.geoloc.LatLonRect: boolean contains(ucar.unidata.geoloc.LatLonPoint)>($r9);

        if $z2 == 0 goto label3;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        if r10 == null goto label4;

        $z3 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z3 == 0 goto label4;

        return null;

     label4:
        goto label2;

     label5:
        return $r3;
    }

    public ucar.nc2.dt.RadialDatasetSweep getRadarDataset(java.lang.String, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.RadialDatasetSweep $r7;
        java.util.Date r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r5;
        ucar.nc2.thredds.ThreddsDataFactory $r4;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String r1, $r11, $r14;
        thredds.catalog.InvDataset $r3;
        ucar.nc2.ft.FeatureDataset $r6;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.util.Date)>(r1, r2);

        if $r3 != null goto label1;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r11 = virtualinvoke r2.<java.util.Date: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $r4 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r4.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r3, null);

        $r6 = $r5.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r7 = (ucar.nc2.dt.RadialDatasetSweep) $r6;

        return $r7;
    }

    public ucar.nc2.dt.RadialDatasetSweep getRadarDataset(java.lang.String, java.lang.String, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.RadialDatasetSweep $r8;
        java.util.Date r3;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r6;
        ucar.nc2.thredds.ThreddsDataFactory $r5;
        java.lang.String r1, r2, $r12, $r15;
        thredds.catalog.InvDataset $r4;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.io.IOException $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        ucar.nc2.ft.FeatureDataset $r7;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Date;

        $r4 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.lang.String,java.util.Date)>(r1, r2, r3);

        if $r4 != null goto label1;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r12 = virtualinvoke r3.<java.util.Date: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label1:
        $r5 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r5.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r4, null);

        $r7 = $r6.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        $r8 = (ucar.nc2.dt.RadialDatasetSweep) $r7;

        return $r8;
    }

    public java.net.URI getRadarDatasetURI(java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        thredds.catalog.InvAccess r6;
        java.io.IOException $r8;
        java.util.List $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String r1, $r11, $r14;
        java.net.URI $r7;
        thredds.catalog.InvDataset $r3;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.util.Date)>(r1, r2);

        $r4 = virtualinvoke $r3.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (thredds.catalog.InvAccess) $r5;

        $r7 = virtualinvoke r6.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        if $r7 != null goto label1;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r11 = virtualinvoke r2.<java.util.Date: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        return $r7;
    }

    private thredds.catalog.InvDataset queryRadarStation(java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.lang.String r1;
        thredds.catalog.InvDataset $r3;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.lang.String,java.util.Date)>(r1, null, r2);

        return $r3;
    }

    private thredds.catalog.InvDataset queryRadarStation(java.lang.String, java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r0;
        java.net.URISyntaxException $r40;
        java.net.URI $r17;
        thredds.catalog.InvCatalogFactory $r19;
        boolean $z0;
        thredds.catalog.InvDataset r24, r27;
        ucar.nc2.thredds.TDSRadarDatasetCollection r4;
        java.util.List $r22, $r25;
        thredds.catalog.InvCatalogImpl $r20;
        java.lang.StringBuilder $r3, $r7, $r8, $r10, $r13, $r14, $r15, $r21, $r29, $r30, $r31, $r32, $r34, $r36, $r37, $r38, $r42, $r43, $r45, $r46;
        java.lang.String $r1, $r2, $r5, $r6, r9, $r11, r12, $r16, $r18, $r33, $r35, $r39, $r44, $r47;
        java.io.IOException $r28, $r41;
        java.lang.Object $r23, $r26;

        r4 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r9 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.Date;

        $r1 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("GMT", "");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r4.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String dsc_location>;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("/dataset.xml", "?");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&stn=");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        if r12 == null goto label1;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&var=");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label1:
        if r0 != null goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time=present");

        goto label3;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label3:
        $r17 = new java.net.URI;

        $r18 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.net.URI: void <init>(java.lang.String)>($r18);

     label4:
        goto label6;

     label5:
        $r40 := @caughtexception;

        $r41 = new java.io.IOException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <>\n");

        $r44 = virtualinvoke $r40.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.io.IOException: void <init>(java.lang.String)>($r47);

        throw $r41;

     label6:
        $r19 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r19.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("default", 0);

        $r20 = virtualinvoke $r19.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r17);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r20.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder)>($r21);

        if $z0 != 0 goto label7;

        $r28 = new java.io.IOException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid catalog <");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r33 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r35);

        throw $r28;

     label7:
        $r22 = virtualinvoke $r20.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0);

        r24 = (thredds.catalog.InvDataset) $r23;

        $r25 = virtualinvoke r24.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(0);

        r27 = (thredds.catalog.InvDataset) $r26;

        return r27;

        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    public java.net.URI getRadarDatasetURI(java.lang.String, java.lang.String, java.util.Date) throws java.io.IOException
    {
        java.util.Date r3;
        thredds.catalog.InvAccess r7;
        java.lang.String r0, r2, $r12, $r15;
        java.net.URI $r8, $r16;
        thredds.catalog.InvDataset $r4;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        java.io.IOException $r9;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Date;

        if r0 != null goto label1;

        $r16 = virtualinvoke r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.net.URI getRadarDatasetURI(java.lang.String,java.util.Date)>(r2, r3);

        return $r16;

     label1:
        $r4 = specialinvoke r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: thredds.catalog.InvDataset queryRadarStation(java.lang.String,java.lang.String,java.util.Date)>(r2, r0, r3);

        $r5 = virtualinvoke $r4.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (thredds.catalog.InvAccess) $r6;

        $r8 = virtualinvoke r7.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        if $r8 != null goto label2;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time selected: ");

        $r12 = virtualinvoke r3.<java.util.Date: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        return $r8;
    }

    private ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.Date r2, r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r4;
        java.lang.String r1;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>(r1, null, r2, r3);

        return $r4;
    }

    private ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String, java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo $r46;
        thredds.catalog.InvCatalogFactory $r24;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        thredds.catalog.InvCatalogImpl $r25;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r16, $r17, $r18, $r20, $r21, $r22, $r26, $r49, $r50, $r51, $r52, $r54, $r58, $r59, $r60, $r62, $r63, $r64, $r68, $r69, $r71, $r72;
        java.util.ArrayList $r31, $r32, $r33;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r35;
        java.lang.String $r2, $r3, r6, $r8, r9, $r12, $r13, $r14, $r15, $r19, $r23, $r53, $r55, $r56, $r57, $r61, $r65, $r70, $r73, $r75;
        java.io.IOException $r48, $r67;
        java.util.Date r10, r11, $r45;
        java.net.URISyntaxException $r66;
        thredds.catalog.InvAccess r41;
        java.net.URI $r42, $r74;
        boolean $z0, $z1;
        thredds.catalog.InvDataset r29, r37;
        java.util.List $r27, $r30, $r38, $r39;
        ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo $r47;
        ucar.nc2.units.DateType $r44;
        java.util.Iterator $r34;
        java.lang.Object $r28, $r36, $r40, $r43;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r6 := @parameter0: java.lang.String;

        r9 := @parameter1: java.lang.String;

        r10 := @parameter2: java.util.Date;

        r11 := @parameter3: java.util.Date;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.lang.String dsc_location>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("/dataset.xml", "?");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&stn=");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        if r9 == null goto label01;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&var=");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

     label01:
        if r10 != null goto label02;

        if r11 != null goto label02;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time=present");

        goto label04;

     label02:
        if r11 != null goto label03;

        $r56 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r10);

        $r57 = virtualinvoke $r56.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("GMT", "");

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time_start=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time_end=present");

        goto label04;

     label03:
        $r12 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r10);

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("GMT", "");

        $r14 = staticinvoke <ucar.unidata.util.DateUtil: java.lang.String getTimeAsISO8601(java.util.Date)>(r11);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("GMT", "");

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time_start=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&time_end=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label04:
        $r74 = new java.net.URI;

        $r75 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.net.URI: void <init>(java.lang.String)>($r75);

     label05:
        goto label07;

     label06:
        $r66 := @caughtexception;

        $r67 = new java.io.IOException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <>\n");

        $r70 = virtualinvoke $r66.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<java.io.IOException: void <init>(java.lang.String)>($r73);

        throw $r67;

     label07:
        $r24 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r24.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("default", 0);

        $r25 = virtualinvoke $r24.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r74);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r25.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder)>($r26);

        if $z0 != 0 goto label08;

        $r48 = new java.io.IOException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid catalog <");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r53 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.io.IOException: void <init>(java.lang.String)>($r55);

        throw $r48;

     label08:
        $r27 = virtualinvoke $r25.<thredds.catalog.InvCatalogImpl: java.util.List getDatasets()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(0);

        r29 = (thredds.catalog.InvDataset) $r28;

        $r30 = virtualinvoke r29.<thredds.catalog.InvDataset: java.util.List getDatasets()>();

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        $r34 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r36 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        r37 = (thredds.catalog.InvDataset) $r36;

        $r38 = virtualinvoke r37.<thredds.catalog.InvDataset: java.util.List getAccess()>();

        $r39 = virtualinvoke r37.<thredds.catalog.InvDataset: java.util.List getDates()>();

        $r40 = interfaceinvoke $r38.<java.util.List: java.lang.Object get(int)>(0);

        r41 = (thredds.catalog.InvAccess) $r40;

        $r42 = virtualinvoke r41.<thredds.catalog.InvAccess: java.net.URI getStandardUri()>();

        $r43 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(0);

        $r44 = (ucar.nc2.units.DateType) $r43;

        $r45 = virtualinvoke $r44.<ucar.nc2.units.DateType: java.util.Date getDate()>();

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r46 = new ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo;

        specialinvoke $r46.<ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo: void <init>(ucar.nc2.thredds.TDSRadarDatasetCollection,java.net.URI,java.util.Date)>(r1, $r42, $r45);

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r47 = new ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo;

        specialinvoke $r47.<ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo: void <init>(ucar.nc2.thredds.TDSRadarDatasetCollection,thredds.catalog.InvDataset,java.util.Date)>(r1, r37, $r45);

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r47);

        goto label09;

     label10:
        $r35 = new ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo;

        specialinvoke $r35.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: void <init>(ucar.nc2.thredds.TDSRadarDatasetCollection,java.util.List,java.util.List,java.util.List)>(r1, $r31, $r32, $r33);

        return $r35;

        catch java.net.URISyntaxException from label04 to label05 with label06;
    }

    public java.util.List getRadarStationURIs(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo r9;
        java.util.Iterator $r7;
        java.util.Date r2, r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.util.ArrayList $r6;
        java.util.List $r5;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r4;
        java.lang.Object $r8;
        java.lang.String r1;
        java.net.URI $r10;
        boolean $z0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r1, r2, r3);

        $r5 = virtualinvoke $r4.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: java.util.List getURIList()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo) $r8;

        $r10 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo: java.net.URI access$000(ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo)>(r9);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return $r6;
    }

    public java.util.List getRadarStationDatasets(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.Iterator $r7;
        java.util.Date r3, r4;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r12;
        ucar.nc2.thredds.ThreddsDataFactory $r11;
        java.util.ArrayList $r0;
        java.util.List $r6;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r5;
        java.lang.Object $r8;
        java.lang.String r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo r9;
        boolean $z0;
        thredds.catalog.InvDataset $r10;
        ucar.nc2.ft.FeatureDataset $r13;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Date;

        r4 := @parameter2: java.util.Date;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r5 = specialinvoke r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, r3, r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: java.util.List getInvList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo) $r8;

        $r10 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo: thredds.catalog.InvDataset access$100(ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo)>(r9);

        $r11 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r11.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r12 = virtualinvoke $r11.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r10, null);

        $r13 = $r12.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        return $r0;
    }

    public java.util.List getRadarStationTimes(java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.List $r4;
        java.util.Date r2, r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        r3 := @parameter2: java.util.Date;

        $r4 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarStationTimes(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>(r1, null, r2, r3);

        return $r4;
    }

    public java.util.List getRadarStationTimes(java.lang.String, java.lang.String, java.util.Date, java.util.Date) throws java.io.IOException
    {
        java.util.List $r6;
        java.util.Date r3, r4;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r5;
        java.lang.String r1, r2;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Date;

        r4 := @parameter3: java.util.Date;

        $r5 = specialinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>(r1, r2, r3, r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: java.util.List getTimeList()>();

        return $r6;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        int i0;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        i0 := @parameter0: int;

        return null;
    }

    private java.util.List queryRadarStationRTimes(java.lang.String) throws java.io.IOException
    {
        java.util.List $r1;
        java.lang.String r2;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List radarTimeSpan>;

        return $r1;
    }

    public java.util.List getDataURIs(java.lang.String, ucar.unidata.util.DateSelection) throws java.io.IOException
    {
        java.util.List $r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.lang.String r1;
        ucar.unidata.util.DateSelection r2;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.unidata.util.DateSelection;

        $r3 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getDataURIs(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>(r1, r2, null);

        return $r3;
    }

    public java.util.List getData(java.lang.String, ucar.unidata.util.DateSelection) throws java.io.IOException
    {
        java.util.List $r3;
        ucar.nc2.thredds.TDSRadarDatasetCollection r0;
        java.lang.String r1;
        ucar.unidata.util.DateSelection r2;

        r0 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.unidata.util.DateSelection;

        $r3 = virtualinvoke r0.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getData(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>(r1, r2, null);

        return $r3;
    }

    public java.util.List getData(java.lang.String, ucar.unidata.util.DateSelection, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Date $r4, $r5;
        ucar.nc2.thredds.ThreddsDataFactory$Result $r15;
        ucar.nc2.thredds.ThreddsDataFactory $r14;
        ucar.unidata.util.DateSelection r3;
        java.util.ArrayList $r7;
        ucar.nc2.util.CancelTask r0;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r6;
        java.lang.String r2;
        thredds.catalog.InvDataset $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        java.util.List $r8, $r9;
        java.lang.Object $r11;
        ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo r12;
        ucar.nc2.ft.FeatureDataset $r16;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.unidata.util.DateSelection;

        r0 := @parameter2: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getStartFixedDate()>();

        $r5 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getEndFixedDate()>();

        $r6 = specialinvoke r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, $r4, $r5);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke $r6.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: java.util.List getInvList()>();

        $r9 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.List apply(java.util.List)>($r8);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo) $r11;

        $r13 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo: thredds.catalog.InvDataset access$100(ucar.nc2.thredds.TDSRadarDatasetCollection$InvDatasetInfo)>(r12);

        $r14 = new ucar.nc2.thredds.ThreddsDataFactory;

        specialinvoke $r14.<ucar.nc2.thredds.ThreddsDataFactory: void <init>()>();

        $r15 = virtualinvoke $r14.<ucar.nc2.thredds.ThreddsDataFactory: ucar.nc2.thredds.ThreddsDataFactory$Result openFeatureDataset(thredds.catalog.InvDataset,ucar.nc2.util.CancelTask)>($r13, null);

        $r16 = $r15.<ucar.nc2.thredds.ThreddsDataFactory$Result: ucar.nc2.ft.FeatureDataset featureDataset>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r16);

        if r0 == null goto label3;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        goto label2;

     label4:
        return $r7;
    }

    public java.util.List getDataURIs(java.lang.String, ucar.unidata.util.DateSelection, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo r12;
        java.util.Date $r4, $r5;
        ucar.unidata.util.DateSelection r3;
        java.util.ArrayList $r9;
        ucar.nc2.util.CancelTask r0;
        ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo $r6;
        java.lang.String r2;
        java.net.URI $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r10;
        ucar.nc2.thredds.TDSRadarDatasetCollection r1;
        java.util.List $r7, $r8;
        java.lang.Object $r11;

        r1 := @this: ucar.nc2.thredds.TDSRadarDatasetCollection;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.unidata.util.DateSelection;

        r0 := @parameter2: ucar.nc2.util.CancelTask;

        if r0 == null goto label1;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getStartFixedDate()>();

        $r5 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.Date getEndFixedDate()>();

        $r6 = specialinvoke r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo queryRadarStation(java.lang.String,java.util.Date,java.util.Date)>(r2, $r4, $r5);

        $r7 = virtualinvoke $r6.<ucar.nc2.thredds.TDSRadarDatasetCollection$TDSRadarDatasetInfo: java.util.List getURIList()>();

        $r8 = virtualinvoke r3.<ucar.unidata.util.DateSelection: java.util.List apply(java.util.List)>($r7);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo) $r11;

        $r13 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo: java.net.URI access$000(ucar.nc2.thredds.TDSRadarDatasetCollection$DatasetURIInfo)>(r12);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r13);

        if r0 == null goto label3;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

        return null;

     label3:
        goto label2;

     label4:
        return $r9;
    }

    public static long roundTo(long, long)
    {
        int i1, $i3, $i4;
        long l0, l2, $l5, $l6;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        i1 = (int) l0;

        if i1 != 0 goto label1;

        return l2;

     label1:
        $i3 = (int) l2;

        $i4 = $i3 % i1;

        $l5 = (long) $i4;

        $l6 = l2 - $l5;

        return $l6;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.thredds.TDSRadarDatasetCollection $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r14, $r16, $r17, $r20, $r22, $r23, $r46, $r48, $r49, $r51, $r53, $r54, $r55, $r56, $r58, $r59, $r61;
        java.text.SimpleDateFormat $r36;
        long $l2, $l3, $l4;
        java.lang.AssertionError $r39, $r40, $r63;
        java.lang.StringBuffer $r0;
        java.lang.String $r6, $r12, $r18, $r24, $r27, $r30, $r42, $r50, $r62, $r65;
        java.util.Date $r25, $r26, $r38, $r43, $r44, r67, r68;
        ucar.unidata.util.DateSelection $r32;
        java.net.URI $r31;
        boolean $z0, $z1, $z2;
        java.util.TimeZone $r37;
        java.util.List $r7, $r13, $r28, $r33, $r34, $r45;
        ucar.unidata.geoloc.Station $r19, r69;
        java.lang.String[] r66;
        int $i0, $i1, $i5, $i6, $i7, $i8, i9, i10, $i11;
        java.io.PrintStream $r3, $r9, $r15, $r21, $r47, $r52;
        java.lang.Object $r29, $r35, $r41, $r57, $r60, $r64;

        r66 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = staticinvoke <ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.thredds.TDSRadarDatasetCollection factory(java.lang.String,java.lang.String,java.lang.StringBuffer)>("test", "http://motherlode.ucar.edu:9080/thredds/radarServer/nexrad/level3/CCS039/dataset.xml", $r0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" errs= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getStations()>();

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nstns= ");

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getStations()>();

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nstns= ");

        $i1 = interfaceinvoke $r13.<java.util.List: int size()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.unidata.geoloc.Station getRadarStation(java.lang.String)>("DVN");

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stn = ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarTimeSpan()>();

        $r25 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>("1998-06-28T01:01:21Z");

        $r26 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardOrISO(java.lang.String)>("1998-07-30T19:01:21Z");

        virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarProducts()>();

        $r27 = interfaceinvoke $r19.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r28 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarStationTimes(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>($r27, "BREF1", $r25, $r26);

        interfaceinvoke $r28.<java.util.List: int size()>();

        i9 = 0;

     label1:
        if i9 >= 3 goto label2;

        $r64 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i9);

        r67 = (java.util.Date) $r64;

        $r65 = interfaceinvoke $r19.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: ucar.nc2.dt.RadialDatasetSweep getRadarDataset(java.lang.String,java.lang.String,java.util.Date)>($r65, "BREF1", r67);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(0);

        r68 = (java.util.Date) $r29;

        $r30 = interfaceinvoke $r19.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r31 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.net.URI getRadarDatasetURI(java.lang.String,java.lang.String,java.util.Date)>($r30, "BREF1", r68);

        $z0 = <ucar.nc2.thredds.TDSRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if null != $r31 goto label3;

        $r63 = new java.lang.AssertionError;

        specialinvoke $r63.<java.lang.AssertionError: void <init>()>();

        throw $r63;

     label3:
        $r32 = new ucar.unidata.util.DateSelection;

        specialinvoke $r32.<ucar.unidata.util.DateSelection: void <init>(java.util.Date,java.util.Date)>($r25, $r26);

        virtualinvoke $r32.<ucar.unidata.util.DateSelection: void setInterval(double)>(3600000.0);

        virtualinvoke $r32.<ucar.unidata.util.DateSelection: void setRoundTo(double)>(3600000.0);

        virtualinvoke $r32.<ucar.unidata.util.DateSelection: void setPreRange(double)>(500000.0);

        virtualinvoke $r32.<ucar.unidata.util.DateSelection: void setPostRange(double)>(500000.0);

        i10 = 0;

     label4:
        $i11 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i10 >= $i11 goto label7;

        $r41 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i10);

        r69 = (ucar.unidata.geoloc.Station) $r41;

        $r42 = interfaceinvoke r69.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r43 = new java.util.Date;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - 50065408L;

        specialinvoke $r43.<java.util.Date: void <init>(long)>($l3);

        $r44 = new java.util.Date;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r44.<java.util.Date: void <init>(long)>($l4);

        $r45 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getRadarStationTimes(java.lang.String,java.util.Date,java.util.Date)>($r42, $r43, $r44);

        $i5 = interfaceinvoke $r45.<java.util.List: int size()>();

        if $i5 <= 0 goto label5;

        $r52 = <java.lang.System: java.io.PrintStream err>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times:");

        $i6 = interfaceinvoke $r45.<java.util.List: int size()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(0);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $i7 = interfaceinvoke $r45.<java.util.List: int size()>();

        $i8 = $i7 - 1;

        $r60 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>($i8);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r62);

        goto label6;

     label5:
        $r47 = <java.lang.System: java.io.PrintStream err>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no times");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r50);

     label6:
        i10 = i10 + 1;

        goto label4;

     label7:
        $r33 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getDataURIs(java.lang.String,ucar.unidata.util.DateSelection)>("KABX", $r32);

        $z1 = <ucar.nc2.thredds.TDSRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        if null != $r33 goto label8;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label8:
        $r34 = virtualinvoke $r1.<ucar.nc2.thredds.TDSRadarDatasetCollection: java.util.List getData(java.lang.String,ucar.unidata.util.DateSelection,ucar.nc2.util.CancelTask)>("KABX", $r32, null);

        $z2 = <ucar.nc2.thredds.TDSRadarDatasetCollection: boolean $assertionsDisabled>;

        if $z2 != 0 goto label9;

        if null != $r34 goto label9;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label9:
        $r35 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(1);

        $r38 = (java.util.Date) $r35;

        $r36 = new java.text.SimpleDateFormat;

        specialinvoke $r36.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss");

        $r37 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r36.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r37);

        virtualinvoke $r36.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r38);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.jdom.Namespace $r1;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/thredds/TDSRadarDatasetCollection;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.thredds.TDSRadarDatasetCollection: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/thredds/queryCapability/v0.4");

        <ucar.nc2.thredds.TDSRadarDatasetCollection: org.jdom.Namespace defNS> = $r1;

        return;
    }
}
