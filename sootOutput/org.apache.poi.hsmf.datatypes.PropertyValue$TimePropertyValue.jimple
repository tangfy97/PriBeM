public class org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue extends org.apache.poi.hsmf.datatypes.PropertyValue
{
    private static final long OFFSET;

    public void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty, long, byte[])
    {
        org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue r0;
        byte[] r2;
        org.apache.poi.hsmf.datatypes.MAPIProperty r1;
        long l0;

        r0 := @this: org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue;

        r1 := @parameter0: org.apache.poi.hsmf.datatypes.MAPIProperty;

        l0 := @parameter1: long;

        r2 := @parameter2: byte[];

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.PropertyValue: void <init>(org.apache.poi.hsmf.datatypes.MAPIProperty,long,byte[])>(r1, l0, r2);

        return;
    }

    public java.util.Calendar getValue()
    {
        org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue r0;
        byte[] $r1;
        java.util.TimeZone $r2;
        long $l0, $l1, $l2, l3;
        java.util.Calendar $r3;

        r0 := @this: org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: byte[] data>;

        $l0 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[])>($r1);

        $l1 = $l0 / 10L;

        $l2 = $l1 / 1000L;

        l3 = $l2 - 11644473600000L;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

        virtualinvoke $r3.<java.util.Calendar: void setTimeInMillis(long)>(l3);

        return $r3;
    }

    public void setValue(java.util.Calendar)
    {
        org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue r0;
        byte[] $r1, $r3, $r4;
        long $l1, $l2, $l3, $l4;
        java.util.Calendar r2;
        int $i0;

        r0 := @this: org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue;

        r2 := @parameter0: java.util.Calendar;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: byte[] data>;

        $i0 = lengthof $r1;

        if $i0 == 8 goto label1;

        $r4 = newarray (byte)[8];

        r0.<org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: byte[] data> = $r4;

     label1:
        $l1 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $l2 = $l1 + 11644473600000L;

        $l3 = $l2 * 10L;

        $l4 = $l3 * 1000L;

        $r3 = r0.<org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: byte[] data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putLong(byte[],int,long)>($r3, 0, $l4);

        return;
    }

    public volatile java.lang.Object getValue()
    {
        org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue r0;
        java.util.Calendar $r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue;

        $r1 = virtualinvoke r0.<org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: java.util.Calendar getValue()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hsmf.datatypes.PropertyValue$TimePropertyValue: long OFFSET> = 11644473600000L;

        return;
    }
}
