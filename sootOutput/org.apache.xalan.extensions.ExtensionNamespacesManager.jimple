public class org.apache.xalan.extensions.ExtensionNamespacesManager extends java.lang.Object
{
    private java.util.Vector m_extensions;
    private java.util.Vector m_predefExtensions;
    private java.util.Vector m_unregisteredExtensions;

    public void <init>()
    {
        java.util.Vector $r1, $r2, $r3;
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>(int)>(7);

        r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions> = $r3;

        specialinvoke r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: void setPredefinedNamespaces()>();

        return;
    }

    public void registerExtension(java.lang.String)
    {
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;
        java.util.Vector $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i3, $i5;
        java.lang.Object $r8;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        $i0 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: int namespaceIndex(java.lang.String,java.util.Vector)>(r1, $r2);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r3 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $i1 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: int namespaceIndex(java.lang.String,java.util.Vector)>(r1, $r3);

        $i5 = (int) -1;

        if $i1 == $i5 goto label1;

        $r7 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        $r6 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r8 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        virtualinvoke $r7.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        goto label2;

     label1:
        $r4 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        $z0 = virtualinvoke $r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void registerExtension(org.apache.xalan.extensions.ExtensionNamespaceSupport)
    {
        org.apache.xalan.extensions.ExtensionNamespaceSupport r0;
        org.apache.xalan.extensions.ExtensionNamespacesManager r2;
        java.util.Vector $r3, $r4, $r5, $r6;
        int $i0, $i2;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        r0 := @parameter0: org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r1 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionNamespaceSupport: java.lang.String getNamespace()>();

        $r3 = r2.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        $i0 = virtualinvoke r2.<org.apache.xalan.extensions.ExtensionNamespacesManager: int namespaceIndex(java.lang.String,java.util.Vector)>($r1, $r3);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r4 = r2.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r0);

        $r5 = r2.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        $z0 = virtualinvoke $r5.<java.util.Vector: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r6 = r2.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        virtualinvoke $r6.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

     label1:
        return;
    }

    public int namespaceIndex(java.lang.String, java.util.Vector)
    {
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r2;
        org.apache.xalan.extensions.ExtensionNamespacesManager r5;
        java.util.Vector r0;
        int $i0, i1, $i3;
        java.lang.Object $r1;
        java.lang.String $r3, r4;
        boolean $z0;

        r5 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Vector;

        i1 = 0;

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r2 = (org.apache.xalan.extensions.ExtensionNamespaceSupport) $r1;

        $r3 = virtualinvoke $r2.<org.apache.xalan.extensions.ExtensionNamespaceSupport: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        if i1 < $i0 goto label1;

        $i3 = (int) -1;

        return $i3;
    }

    public java.util.Vector getExtensions()
    {
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        $r1 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        return $r1;
    }

    public void registerUnregisteredNamespaces()
    {
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r4;
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;
        java.util.Vector $r1, $r5, $r6;
        int i0, $i1;
        java.lang.Object $r2;
        java.lang.String r3;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        i0 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: org.apache.xalan.extensions.ExtensionNamespaceSupport defineJavaNamespace(java.lang.String)>(r3);

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_extensions>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>($r4);

     label2:
        i0 = i0 + 1;

     label3:
        $r6 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_unregisteredExtensions>;

        $i1 = virtualinvoke $r6.<java.util.Vector: int size()>();

        if i0 < $i1 goto label1;

        return;
    }

    public org.apache.xalan.extensions.ExtensionNamespaceSupport defineJavaNamespace(java.lang.String)
    {
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;
        java.lang.String r1;
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r2;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: org.apache.xalan.extensions.ExtensionNamespaceSupport defineJavaNamespace(java.lang.String,java.lang.String)>(r1, r1);

        return $r2;
    }

    public org.apache.xalan.extensions.ExtensionNamespaceSupport defineJavaNamespace(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r5, $r8;
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r15, $r17;
        org.apache.xalan.extensions.ExtensionNamespacesManager r13;
        java.lang.StringBuffer $r10, $r11, $r16;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r0, $r1, r2, $r3, $r12, r14;
        boolean $z0;
        java.lang.ClassNotFoundException $r6;

        r13 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if null == r0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        r14 = r2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("class:");

        if $z0 == 0 goto label3;

        r14 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(6);

     label3:
        $i1 = virtualinvoke r14.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i5 = (int) -1;

        if $i5 == $i1 goto label4;

        $i3 = $i1 + 1;

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>($i3);

     label4:
        if null == r14 goto label5;

        $r3 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label6;

     label5:
        return null;

     label6:
        staticinvoke <org.apache.xalan.extensions.ExtensionHandler: java.lang.Class getClassForName(java.lang.String)>(r14);

        $r15 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r0;

        $r5[1] = "javaclass";

        $r5[2] = r14;

        specialinvoke $r15.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>(r0, "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r5);

        return $r15;

     label7:
        $r6 := @caughtexception;

        $r17 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = r0;

        $r8[1] = "javapackage";

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8[2] = $r12;

        specialinvoke $r17.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>(r0, "org.apache.xalan.extensions.ExtensionHandlerJavaPackage", $r8);

        return $r17;

        catch java.lang.ClassNotFoundException from label6 to label7 with label7;
    }

    private void setPredefinedNamespaces()
    {
        java.util.Vector $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42;
        java.lang.Object[] $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41;
        org.apache.xalan.extensions.ExtensionNamespaceSupport $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40;
        org.apache.xalan.extensions.ExtensionNamespacesManager r0;

        r0 := @this: org.apache.xalan.extensions.ExtensionNamespacesManager;

        $r3 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r1 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = "http://xml.apache.org/xalan/java";

        $r2[1] = "javapackage";

        $r2[2] = "";

        specialinvoke $r1.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xalan/java", "org.apache.xalan.extensions.ExtensionHandlerJavaPackage", $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        $r6 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r4 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = "http://xml.apache.org/xslt/java";

        $r5[1] = "javapackage";

        $r5[2] = "";

        specialinvoke $r4.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xslt/java", "org.apache.xalan.extensions.ExtensionHandlerJavaPackage", $r5);

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r9 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r7 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = "http://xsl.lotus.com/java";

        $r8[1] = "javapackage";

        $r8[2] = "";

        specialinvoke $r7.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xsl.lotus.com/java", "org.apache.xalan.extensions.ExtensionHandlerJavaPackage", $r8);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        $r12 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r10 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "http://xml.apache.org/xalan";

        $r11[1] = "javaclass";

        $r11[2] = "org.apache.xalan.lib.Extensions";

        specialinvoke $r10.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xalan", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r11);

        virtualinvoke $r12.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        $r15 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r13 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = "http://xml.apache.org/xslt";

        $r14[1] = "javaclass";

        $r14[2] = "org.apache.xalan.lib.Extensions";

        specialinvoke $r13.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xslt", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r14);

        virtualinvoke $r15.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r18 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r16 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = "http://xml.apache.org/xalan/redirect";

        $r17[1] = "javaclass";

        $r17[2] = "org.apache.xalan.lib.Redirect";

        specialinvoke $r16.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xalan/redirect", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r17);

        virtualinvoke $r18.<java.util.Vector: void addElement(java.lang.Object)>($r16);

        $r21 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r19 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r20 = newarray (java.lang.Object)[3];

        $r20[0] = "http://xml.apache.org/xalan/PipeDocument";

        $r20[1] = "javaclass";

        $r20[2] = "org.apache.xalan.lib.PipeDocument";

        specialinvoke $r19.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xalan/PipeDocument", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r20);

        virtualinvoke $r21.<java.util.Vector: void addElement(java.lang.Object)>($r19);

        $r24 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r22 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = "http://xml.apache.org/xalan/sql";

        $r23[1] = "javaclass";

        $r23[2] = "org.apache.xalan.lib.sql.XConnection";

        specialinvoke $r22.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://xml.apache.org/xalan/sql", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r23);

        virtualinvoke $r24.<java.util.Vector: void addElement(java.lang.Object)>($r22);

        $r27 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r25 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r26 = newarray (java.lang.Object)[3];

        $r26[0] = "http://exslt.org/common";

        $r26[1] = "javaclass";

        $r26[2] = "org.apache.xalan.lib.ExsltCommon";

        specialinvoke $r25.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/common", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r26);

        virtualinvoke $r27.<java.util.Vector: void addElement(java.lang.Object)>($r25);

        $r30 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r28 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r29 = newarray (java.lang.Object)[3];

        $r29[0] = "http://exslt.org/math";

        $r29[1] = "javaclass";

        $r29[2] = "org.apache.xalan.lib.ExsltMath";

        specialinvoke $r28.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/math", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r29);

        virtualinvoke $r30.<java.util.Vector: void addElement(java.lang.Object)>($r28);

        $r33 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r31 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r32 = newarray (java.lang.Object)[3];

        $r32[0] = "http://exslt.org/sets";

        $r32[1] = "javaclass";

        $r32[2] = "org.apache.xalan.lib.ExsltSets";

        specialinvoke $r31.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/sets", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r32);

        virtualinvoke $r33.<java.util.Vector: void addElement(java.lang.Object)>($r31);

        $r36 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r34 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r35 = newarray (java.lang.Object)[3];

        $r35[0] = "http://exslt.org/dates-and-times";

        $r35[1] = "javaclass";

        $r35[2] = "org.apache.xalan.lib.ExsltDatetime";

        specialinvoke $r34.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/dates-and-times", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r35);

        virtualinvoke $r36.<java.util.Vector: void addElement(java.lang.Object)>($r34);

        $r39 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r37 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r38 = newarray (java.lang.Object)[3];

        $r38[0] = "http://exslt.org/dynamic";

        $r38[1] = "javaclass";

        $r38[2] = "org.apache.xalan.lib.ExsltDynamic";

        specialinvoke $r37.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/dynamic", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r38);

        virtualinvoke $r39.<java.util.Vector: void addElement(java.lang.Object)>($r37);

        $r42 = r0.<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector m_predefExtensions>;

        $r40 = new org.apache.xalan.extensions.ExtensionNamespaceSupport;

        $r41 = newarray (java.lang.Object)[3];

        $r41[0] = "http://exslt.org/strings";

        $r41[1] = "javaclass";

        $r41[2] = "org.apache.xalan.lib.ExsltStrings";

        specialinvoke $r40.<org.apache.xalan.extensions.ExtensionNamespaceSupport: void <init>(java.lang.String,java.lang.String,java.lang.Object[])>("http://exslt.org/strings", "org.apache.xalan.extensions.ExtensionHandlerJavaClass", $r41);

        virtualinvoke $r42.<java.util.Vector: void addElement(java.lang.Object)>($r40);

        return;
    }
}
