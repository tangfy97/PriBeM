final class com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet extends com.google.gxp.com.google.common.collect.ImmutableSortedSet
{
    final java.lang.Object[] elements;
    final int fromIndex;
    final int toIndex;

    void <init>(java.lang.Object[], java.util.Comparator)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] r2;
        int $i0;
        java.util.Comparator r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r2 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: void <init>(java.util.Comparator,com.google.gxp.com.google.common.collect.ImmutableSortedSet$1)>(r1, null);

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements> = r2;

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex> = 0;

        $i0 = lengthof r2;

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex> = $i0;

        return;
    }

    void <init>(java.lang.Object[], java.util.Comparator, int, int)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] r2;
        int i0, i1;
        java.util.Comparator r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r2 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.util.Comparator;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: void <init>(java.util.Comparator,com.google.gxp.com.google.common.collect.ImmutableSortedSet$1)>(r1, null);

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements> = r2;

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex> = i0;

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex> = i1;

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] $r1;
        java.util.Iterator $r2;
        int $i0, $i1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $i1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.Iterators: java.util.Iterator forArray(java.lang.Object[],int,int)>($r1, $i0, $i1);

        return $r2;
    }

    public boolean isEmpty()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        return 0;
    }

    public int size()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $i1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r1;
        int $i0;
        java.lang.Object r0;
        java.lang.ClassCastException $r2;
        boolean $z0;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int binarySearch(java.lang.Object)>(r0);

        if $i0 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label3 with label4;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Object[] $r4;
        java.util.Iterator $r3;
        java.util.Collection r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5, r7;
        java.util.Comparator $r2, $r6;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r0 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean access$400(java.lang.Object,java.util.Comparator)>(r0, $r2);

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 > 1 goto label2;

     label1:
        $z1 = specialinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean containsAll(java.util.Collection)>(r0);

        return $z1;

     label2:
        i3 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $r3 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

     label3:
        $i1 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        if i3 < $i1 goto label4;

        return 0;

     label4:
        $r6 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        $r4 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r5 = $r4[i3];

        $i2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int access$500(java.util.Comparator,java.lang.Object,java.lang.Object)>($r6, $r5, r7);

        if $i2 >= 0 goto label5;

        i3 = i3 + 1;

        goto label8;

     label5:
        if $i2 != 0 goto label7;

        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label6;

        return 1;

     label6:
        r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        i3 = i3 + 1;

        goto label8;

     label7:
        if $i2 <= 0 goto label8;

        return 0;

     label8:
        goto label3;
    }

    int binarySearch(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, i8;
        java.lang.Object r1, $r3;
        java.util.Comparator $r4;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        i7 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        i8 = $i0 - 1;

     label1:
        if i7 > i8 goto label5;

        $i3 = i8 - i7;

        $i4 = $i3 / 2;

        i5 = i7 + $i4;

        $r4 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        $r2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r3 = $r2[i5];

        $i6 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int access$500(java.util.Comparator,java.lang.Object,java.lang.Object)>($r4, r1, $r3);

        if $i6 >= 0 goto label2;

        i8 = i5 - 1;

        goto label4;

     label2:
        if $i6 <= 0 goto label3;

        i7 = i5 + 1;

        goto label4;

     label3:
        return i5;

     label4:
        goto label1;

     label5:
        $i1 = neg i7;

        $i2 = $i1 - 1;

        return $i2;
    }

    public java.lang.Object[] toArray()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $i2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, r1, 0, $i2);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object[];

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        $i1 = lengthof r1;

        if $i1 >= $i0 goto label1;

        r1 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r1, $i0);

        goto label2;

     label1:
        $i2 = lengthof r1;

        if $i2 <= $i0 goto label2;

        r1[$i0] = null;

     label2:
        $r2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i3 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, 0, $i0);

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object[] $r6;
        java.lang.ClassCastException $r10;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r1;
        int $i0, $i1, $i2, $i3, i4;
        java.util.NoSuchElementException $r9;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        java.util.Set r2;
        java.lang.Object r0, $r5, $r7;
        java.util.Comparator $r3, $r8;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof java.util.Set;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (java.util.Set) r0;

        $i0 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        $i1 = interfaceinvoke r2.<java.util.Set: int size()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        $r3 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        $z1 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean access$400(java.lang.Object,java.util.Comparator)>(r0, $r3);

        if $z1 == 0 goto label11;

        $r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        i4 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

     label05:
        $i2 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        if i4 >= $i2 goto label08;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $r5 == null goto label06;

        $r8 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        $r6 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r7 = $r6[i4];

        $i3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int access$500(java.util.Comparator,java.lang.Object,java.lang.Object)>($r8, $r7, $r5);

        if $i3 == 0 goto label07;

     label06:
        return 0;

     label07:
        i4 = i4 + 1;

        goto label05;

     label08:
        return 1;

     label09:
        $r10 := @caughtexception;

        return 0;

     label10:
        $r9 := @caughtexception;

        return 0;

     label11:
        $z2 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: boolean containsAll(java.util.Collection)>(r2);

        return $z2;

        catch java.lang.ClassCastException from label04 to label06 with label09;
        catch java.lang.ClassCastException from label07 to label08 with label09;
        catch java.util.NoSuchElementException from label04 to label06 with label10;
        catch java.util.NoSuchElementException from label07 to label08 with label10;
    }

    public int hashCode()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        i2 = 0;

        i3 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

     label1:
        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        if i3 >= $i0 goto label2;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r2 = $r1[i3];

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r3, $r8;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r6;
        java.lang.StringBuilder $r0, $r2, $r5, $r7;
        java.lang.Object $r4, $r9;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int size()>();

        $i1 = $i0 * 16;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i2 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $r4 = $r3[$i2];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $i3 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        i5 = $i3 + 1;

     label1:
        $i4 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        if i5 >= $i4 goto label2;

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r9 = $r8[i5];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Object first()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.Object last()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    com.google.gxp.com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        int $i0, $i1;
        java.lang.Object r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        $i1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r2;
    }

    com.google.gxp.com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r3;
        int $i0, $i1;
        java.lang.Object r1, r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $i1 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r2);

        $r3 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r3;
    }

    com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        int $i0, $i1;
        java.lang.Object r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $i1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r2;
    }

    int findSubsetIndex(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        int $i0, $i1, $i2;
        java.lang.Object r1;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int binarySearch(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $i2 = $i0;

        goto label2;

     label1:
        $i1 = neg $i0;

        $i2 = $i1 - 1;

     label2:
        return $i2;
    }

    com.google.gxp.com.google.common.collect.ImmutableSortedSet createSubset(int, int)
    {
        java.lang.Object[] $r5;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0, $r3;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        int i0, i1;
        java.util.Comparator $r1, $r4;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $r3 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r5 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $r4 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator,int,int)>($r5, $r4, i0, i1);

        return $r3;

     label1:
        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.util.Comparator comparator>;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet access$600(java.util.Comparator)>($r1);

        return $r2;
    }

    boolean hasPartialArray()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $i0 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int fromIndex>;

        if $i0 != 0 goto label1;

        $i2 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: int toIndex>;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: java.lang.Object[] elements>;

        $i1 = lengthof $r1;

        if $i2 == $i1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public volatile java.util.SortedSet tailSet(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedSet headSet(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        java.lang.Object r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r3;
        java.lang.Object r1, r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }
}
