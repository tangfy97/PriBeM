public class com.mongodb.util.Util extends java.lang.Object
{

    public void <init>()
    {
        com.mongodb.util.Util r0;

        r0 := @this: com.mongodb.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toHex(byte[])
    {
        byte[] r1;
        short $s2, $s5;
        byte $b1;
        int $i0, $i3, i4, $i6;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r1 := @parameter0: byte[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label3;

        $b1 = r1[i4];

        $s5 = (short) $b1;

        $s2 = 255 & $s5;

        $i6 = (int) $s2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i3 >= 2 goto label2;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label2:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String hexMD5(byte[])
    {
        byte[] r1, $r2;
        java.security.MessageDigest $r0;
        java.security.NoSuchAlgorithmException $r4;
        java.lang.String $r3;
        java.lang.RuntimeException $r5;

        r1 := @parameter0: byte[];

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r0.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>(r1);

        $r2 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <com.mongodb.util.Util: java.lang.String toHex(byte[])>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error - this implementation of Java doesn\'t support MD5.");

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String hexMD5(java.nio.ByteBuffer, int, int)
    {
        byte[] r0;
        java.nio.ByteBuffer r2;
        byte $b3;
        int i0, i1, $i2, i4;
        java.lang.String $r1;

        r2 := @parameter0: java.nio.ByteBuffer;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $i2 = i1 + i4;

        $b3 = virtualinvoke r2.<java.nio.ByteBuffer: byte get(int)>($i2);

        r0[i4] = $b3;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r1 = staticinvoke <com.mongodb.util.Util: java.lang.String hexMD5(byte[])>(r0);

        return $r1;
    }
}
