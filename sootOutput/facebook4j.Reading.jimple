public class facebook4j.Reading extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Map parameterMap;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        facebook4j.Reading r0;

        r0 := @this: facebook4j.Reading;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<facebook4j.Reading: java.util.Map parameterMap> = $r1;

        return;
    }

    public java.lang.String getQuery()
    {
        java.lang.String[] r2;
        java.util.Map $r1, $r3, $r12;
        int $i0, i1;
        facebook4j.Reading r0;
        java.lang.String $r6, r8, $r14, $r15, $r17;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r7, $r13;
        java.lang.StringBuilder $r9, $r10, $r11, $r16;

        r0 := @this: facebook4j.Reading;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        r2 = newarray (java.lang.String)[$i0];

        i1 = 0;

        $r3 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r14 = (java.lang.String) $r13;

        $r15 = staticinvoke <facebook4j.internal.http.HttpParameter: java.lang.String encode(java.lang.String)>($r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[i1] = $r17;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = staticinvoke <facebook4j.internal.util.z_F4JInternalStringUtil: java.lang.String join(java.lang.String[],java.lang.String)>(r2, "&");

        return $r6;
    }

    public transient facebook4j.Reading fields(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.NullPointerException $r14;
        java.util.Map $r2, $r10;
        facebook4j.Reading r1;
        java.lang.String r4, $r7, $r9, r15;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r8, $r11, $r12, $r13;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("fields is null");

        throw $r14;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("fields");

        r4 = (java.lang.String) $r3;

        r15 = "";

        if r4 == null goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r7 = staticinvoke <facebook4j.internal.util.z_F4JInternalStringUtil: java.lang.String join(java.lang.String[])>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fields", $r9);

        return r1;
    }

    public facebook4j.Reading limit(int)
    {
        java.lang.IllegalStateException $r4;
        java.util.Map $r1, $r2;
        int i0;
        facebook4j.Reading r0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        i0 := @parameter0: int;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("limit");

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'limit\' already sets");

        throw $r4;

     label1:
        $r2 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("limit", $r3);

        return r0;
    }

    public facebook4j.Reading offset(int)
    {
        java.lang.IllegalStateException $r4;
        java.util.Map $r1, $r2;
        int i0;
        facebook4j.Reading r0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        i0 := @parameter0: int;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("offset");

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'offset\' already sets");

        throw $r4;

     label1:
        $r2 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("offset", $r3);

        return r0;
    }

    public facebook4j.Reading until(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String r0;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("phpDateTimeFormats is null");

        throw $r5;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("until");

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'until\' already sets");

        throw $r4;

     label2:
        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("until", r0);

        return r1;
    }

    public facebook4j.Reading until(java.util.Date)
    {
        java.lang.IllegalStateException $r5;
        java.util.Date r0;
        long $l0, l1;
        java.lang.NullPointerException $r6;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String $r4;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("datetime is null");

        throw $r6;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("until");

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'until\' already sets");

        throw $r5;

     label2:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        l1 = $l0 / 1000L;

        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("until", $r4);

        return r1;
    }

    public facebook4j.Reading since(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String r0;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("phpDateTimeFormats is null");

        throw $r5;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("since");

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'since\' already sets");

        throw $r4;

     label2:
        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("since", r0);

        return r1;
    }

    public facebook4j.Reading since(java.util.Date)
    {
        java.lang.IllegalStateException $r5;
        java.util.Date r0;
        long $l0, l1;
        java.lang.NullPointerException $r6;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String $r4;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("datetime is null");

        throw $r6;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("since");

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'since\' already sets");

        throw $r5;

     label2:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        l1 = $l0 / 1000L;

        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("since", $r4);

        return r1;
    }

    public facebook4j.Reading after(java.lang.String)
    {
        java.lang.IllegalStateException $r5;
        java.util.Map $r1, $r3;
        facebook4j.Reading r0;
        java.lang.String r2, $r4;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("after");

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'after\' already sets");

        throw $r5;

     label1:
        $r3 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("after", $r4);

        return r0;
    }

    public facebook4j.Reading before(java.lang.String)
    {
        java.lang.IllegalStateException $r5;
        java.util.Map $r1, $r3;
        facebook4j.Reading r0;
        java.lang.String r2, $r4;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("before");

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'before\' already sets");

        throw $r5;

     label1:
        $r3 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("before", $r4);

        return r0;
    }

    public facebook4j.Reading metadata()
    {
        java.lang.IllegalStateException $r3;
        java.util.Map $r1, $r2;
        facebook4j.Reading r0;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("metadata");

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'metadata\' already sets");

        throw $r3;

     label1:
        $r2 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("metadata", "1");

        return r0;
    }

    public facebook4j.Reading locale(java.util.Locale)
    {
        java.lang.IllegalStateException $r5;
        java.lang.NullPointerException $r6;
        java.util.Locale r0;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String $r4;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("locale is null");

        throw $r6;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("locale");

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'locale\' already sets");

        throw $r5;

     label2:
        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $r4 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("locale", $r4);

        return r1;
    }

    public facebook4j.Reading withLocation()
    {
        java.lang.IllegalStateException $r3;
        java.util.Map $r1, $r2;
        facebook4j.Reading r0;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>("with");

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'with\' already sets");

        throw $r3;

     label1:
        $r2 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("with", "location");

        return r0;
    }

    public facebook4j.Reading filter(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        java.util.Map $r2, $r3;
        facebook4j.Reading r1;
        java.lang.String r0;
        java.lang.NullPointerException $r5;
        boolean $z0;

        r1 := @this: facebook4j.Reading;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("filterName is null");

        throw $r5;

     label1:
        $r2 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("filter");

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("\'filter\' already sets");

        throw $r4;

     label2:
        $r3 = r1.<facebook4j.Reading: java.util.Map parameterMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("filter", r0);

        return r1;
    }

    public int hashCode()
    {
        java.util.Map $r1, $r2;
        int $i0, $i1;
        facebook4j.Reading r0;

        r0 := @this: facebook4j.Reading;

        $r1 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        if $r1 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $i0 = 31 + $i1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r5, $r6, $r7, $r8;
        facebook4j.Reading r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: facebook4j.Reading;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (facebook4j.Reading) r1;

        $r5 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        if $r5 != null goto label4;

        $r8 = r4.<facebook4j.Reading: java.util.Map parameterMap>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<facebook4j.Reading: java.util.Map parameterMap>;

        $r6 = r4.<facebook4j.Reading: java.util.Map parameterMap>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        facebook4j.Reading r2;
        java.lang.String $r3, $r6;

        r2 := @this: facebook4j.Reading;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading [");

        $r3 = virtualinvoke r2.<facebook4j.Reading: java.lang.String getQuery()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <facebook4j.Reading: long serialVersionUID> = -8052261582496495423L;

        return;
    }
}
