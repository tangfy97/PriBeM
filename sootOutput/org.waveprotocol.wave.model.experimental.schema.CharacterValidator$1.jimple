final class org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1 extends java.lang.Object implements org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate
{
    final java.util.Set val$disallowedCharacters;

    void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1 r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1;

        r1 := @parameter0: java.util.Set;

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1: java.util.Set val$disallowedCharacters> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(int)
    {
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1 r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$1: java.util.Set val$disallowedCharacters>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
