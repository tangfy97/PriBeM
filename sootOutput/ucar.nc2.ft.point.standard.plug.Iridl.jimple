public class ucar.nc2.ft.point.standard.plug.Iridl extends ucar.nc2.ft.point.standard.TableConfigurerImpl
{

    public void <init>()
    {
        ucar.nc2.ft.point.standard.plug.Iridl r0;

        r0 := @this: ucar.nc2.ft.point.standard.plug.Iridl;

        specialinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: void <init>()>();

        return;
    }

    public boolean isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.ft.point.standard.plug.Iridl r2;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.constants.FeatureType r3;
        boolean $z0;

        r2 := @this: ucar.nc2.ft.point.standard.plug.Iridl;

        r3 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", "");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("IRIDL");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public ucar.nc2.ft.point.standard.TableConfig getConfig(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter)
    {
        java.lang.Object[] $r26, $r27, $r28;
        java.util.Formatter r25;
        ucar.nc2.ft.point.standard.TableConfig $r7, $r19;
        ucar.nc2.ft.point.standard.Table$Type $r8, $r20;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r9;
        ucar.nc2.constants.AxisType $r1, $r5, $r13, $r15, $r17, $r21;
        ucar.nc2.Variable $r4;
        java.lang.String $r3, $r11, $r12, $r14, $r16, $r18, $r22, $r23, $r24;
        ucar.nc2.constants.FeatureType $r10, r30;
        ucar.nc2.ft.point.standard.plug.Iridl r29;
        ucar.nc2.Dimension $r2, $r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r29 := @this: ucar.nc2.ft.point.standard.plug.Iridl;

        r30 := @parameter0: ucar.nc2.constants.FeatureType;

        r0 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r25 := @parameter2: java.util.Formatter;

        $r1 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r2 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.Dimension findDimensionByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r1);

        if $r2 != null goto label1;

        $r28 = newarray (java.lang.Object)[0];

        virtualinvoke r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a latitude coordinate", $r28);

        return null;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r3);

        if $r4 != null goto label2;

        $r27 = newarray (java.lang.Object)[0];

        virtualinvoke r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a station coordinate variable", $r27);

        return null;

     label2:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.Dimension findDimensionByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r5);

        if $r6 != null goto label3;

        $r26 = newarray (java.lang.Object)[0];

        virtualinvoke r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Must have a Time coordinate", $r26);

        return null;

     label3:
        $r7 = new ucar.nc2.ft.point.standard.TableConfig;

        $r8 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type Structure>;

        specialinvoke $r7.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r8, "station");

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName> = "station";

        $r9 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType> = $r9;

        $r10 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r7.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.constants.FeatureType featureType> = $r10;

        $r11 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r11;

        $r12 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getName()>();

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnId> = $r12;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r14 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r13);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lat> = $r14;

        $r15 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r16 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r15);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String lon> = $r16;

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r18 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r17);

        $r7.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String stnAlt> = $r18;

        $r19 = new ucar.nc2.ft.point.standard.TableConfig;

        $r20 = <ucar.nc2.ft.point.standard.Table$Type: ucar.nc2.ft.point.standard.Table$Type MultidimInner>;

        specialinvoke $r19.<ucar.nc2.ft.point.standard.TableConfig: void <init>(ucar.nc2.ft.point.standard.Table$Type,java.lang.String)>($r20, "obs");

        $r21 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r22 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: java.lang.String findCoordNameByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r0, $r21);

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String time> = $r22;

        $r23 = virtualinvoke $r2.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName> = $r23;

        $r24 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r19.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName> = $r24;

        virtualinvoke $r7.<ucar.nc2.ft.point.standard.TableConfig: void addChild(ucar.nc2.ft.point.standard.TableConfig)>($r19);

        return $r7;
    }
}
