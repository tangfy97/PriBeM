final class org.mozilla.javascript.NativeError extends org.mozilla.javascript.IdScriptableObject
{
    static final long serialVersionUID;
    private static final java.lang.Object ERROR_TAG;
    private static final int Id_constructor;
    private static final int Id_toString;
    private static final int Id_toSource;
    private static final int MAX_PROTOTYPE_ID;

    void <init>()
    {
        org.mozilla.javascript.NativeError r0;

        r0 := @this: org.mozilla.javascript.NativeError;

        specialinvoke r0.<org.mozilla.javascript.IdScriptableObject: void <init>()>();

        return;
    }

    static void init(org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.NativeError $r0;
        java.lang.Integer $r1;
        boolean z0;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        z0 := @parameter1: boolean;

        $r0 = new org.mozilla.javascript.NativeError;

        specialinvoke $r0.<org.mozilla.javascript.NativeError: void <init>()>();

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r0, "name", "Error");

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r0, "message", "");

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r0, "fileName", "");

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(0);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r0, "lineNumber", $r1);

        virtualinvoke $r0.<org.mozilla.javascript.NativeError: org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean)>(3, r2, z0);

        return;
    }

    static org.mozilla.javascript.NativeError make(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.IdFunctionObject, java.lang.Object[])
    {
        java.lang.Object[] r5;
        java.lang.Integer $r10;
        org.mozilla.javascript.IdFunctionObject r0;
        int $i0, $i1, $i2, $i3;
        org.mozilla.javascript.NativeError $r3;
        java.lang.String $r7;
        org.mozilla.javascript.Context r11;
        org.mozilla.javascript.Scriptable r2, r4;
        java.lang.Object $r1, $r6, $r8, $r9;

        r11 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: org.mozilla.javascript.IdFunctionObject;

        r5 := @parameter3: java.lang.Object[];

        $r1 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>("prototype", r0);

        r2 = (org.mozilla.javascript.Scriptable) $r1;

        $r3 = new org.mozilla.javascript.NativeError;

        specialinvoke $r3.<org.mozilla.javascript.NativeError: void <init>()>();

        virtualinvoke $r3.<org.mozilla.javascript.NativeError: void setPrototype(org.mozilla.javascript.Scriptable)>(r2);

        virtualinvoke $r3.<org.mozilla.javascript.NativeError: void setParentScope(org.mozilla.javascript.Scriptable)>(r4);

        $i0 = lengthof r5;

        if $i0 < 1 goto label1;

        $r6 = r5[0];

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r6);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r3, "message", $r7);

        $i1 = lengthof r5;

        if $i1 < 2 goto label1;

        $r8 = r5[1];

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r3, "fileName", $r8);

        $i2 = lengthof r5;

        if $i2 < 3 goto label1;

        $r9 = r5[2];

        $i3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>($r9);

        $r10 = new java.lang.Integer;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i3);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r3, "lineNumber", $r10);

     label1:
        return $r3;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeError r0;

        r0 := @this: org.mozilla.javascript.NativeError;

        return "Error";
    }

    public java.lang.String toString()
    {
        org.mozilla.javascript.NativeError r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.NativeError;

        $r1 = staticinvoke <org.mozilla.javascript.NativeError: java.lang.String js_toString(org.mozilla.javascript.Scriptable)>(r0);

        return $r1;
    }

    protected void initPrototypeId(int)
    {
        byte b1;
        int i0;
        org.mozilla.javascript.NativeError r0;
        java.lang.Object $r4;
        java.lang.String $r2, r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: org.mozilla.javascript.NativeError;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        b1 = 1;

        r3 = "constructor";

        goto label5;

     label2:
        b1 = 0;

        r3 = "toString";

        goto label5;

     label3:
        b1 = 0;

        r3 = "toSource";

        goto label5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label5:
        $r4 = <org.mozilla.javascript.NativeError: java.lang.Object ERROR_TAG>;

        virtualinvoke r0.<org.mozilla.javascript.NativeError: void initPrototypeMethod(java.lang.Object,int,java.lang.String,int)>($r4, i0, r3, b1);

        return;
    }

    public java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r7;
        org.mozilla.javascript.Context r2;
        java.lang.IllegalArgumentException $r9;
        org.mozilla.javascript.IdFunctionObject r0;
        org.mozilla.javascript.Scriptable r3, r4;
        int $i0;
        java.lang.Object $r1, $r12;
        org.mozilla.javascript.NativeError $r8, r11;
        java.lang.String $r5, $r6, $r10;
        boolean $z0;

        r11 := @this: org.mozilla.javascript.NativeError;

        r0 := @parameter0: org.mozilla.javascript.IdFunctionObject;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        r4 := @parameter3: org.mozilla.javascript.Scriptable;

        r7 := @parameter4: java.lang.Object[];

        $r1 = <org.mozilla.javascript.NativeError: java.lang.Object ERROR_TAG>;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: boolean hasTag(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r12 = specialinvoke r11.<org.mozilla.javascript.IdScriptableObject: java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r0, r2, r3, r4, r7);

        return $r12;

     label1:
        $i0 = virtualinvoke r0.<org.mozilla.javascript.IdFunctionObject: int methodId()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r8 = staticinvoke <org.mozilla.javascript.NativeError: org.mozilla.javascript.NativeError make(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject,java.lang.Object[])>(r2, r3, r0, r7);

        return $r8;

     label3:
        $r6 = staticinvoke <org.mozilla.javascript.NativeError: java.lang.String js_toString(org.mozilla.javascript.Scriptable)>(r4);

        return $r6;

     label4:
        $r5 = staticinvoke <org.mozilla.javascript.NativeError: java.lang.String js_toSource(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>(r2, r3, r4);

        return $r5;

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    private static java.lang.String js_toString(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = staticinvoke <org.mozilla.javascript.NativeError: java.lang.String getString(org.mozilla.javascript.Scriptable,java.lang.String)>(r1, "name");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r5 = staticinvoke <org.mozilla.javascript.NativeError: java.lang.String getString(org.mozilla.javascript.Scriptable,java.lang.String)>(r1, "message");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String js_toSource(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable)
    {
        java.lang.StringBuffer $r5;
        int $i0;
        java.lang.String $r7, $r11, $r14, $r16, $r24;
        double $d0;
        org.mozilla.javascript.Context r9;
        org.mozilla.javascript.Scriptable r0, r10;
        java.lang.Object $r1, $r2, $r3, $r4, $r6, $r8, $r12, $r13, $r15, $r17, $r18, $r19, r20, r21, r22, $r23;

        r9 := @parameter0: org.mozilla.javascript.Context;

        r10 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, "name");

        r20 = $r1;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, "message");

        r21 = $r2;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, "fileName");

        r22 = $r3;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, "lineNumber");

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(new ");

        $r6 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r1 != $r6 goto label1;

        r20 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label1:
        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r20);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r8 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r2 != $r8 goto label2;

        $r18 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r3 != $r18 goto label2;

        $r19 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r4 == $r19 goto label6;

     label2:
        $r23 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r2 != $r23 goto label3;

        r21 = "";

     label3:
        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r9, r10, r21);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r3 != $r12 goto label4;

        $r17 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r4 == $r17 goto label6;

     label4:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r13 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r3 != $r13 goto label5;

        r22 = "";

     label5:
        $r14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r9, r10, r22);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r15 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r4 == $r15 goto label6;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>($r4);

        if $i0 == 0 goto label6;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $d0 = (double) $i0;

        $r16 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>($d0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

     label6:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("))");

        $r24 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r24;
    }

    private static java.lang.String getString(org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r2, $r3;
        java.lang.String r1, $r4;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r1);

        $r3 = <org.mozilla.javascript.NativeError: java.lang.Object NOT_FOUND>;

        if $r2 != $r3 goto label1;

        return "";

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r2);

        return $r4;
    }

    protected int findPrototypeId(java.lang.String)
    {
        char $c1;
        byte b2;
        int $i0, $i3, $i4;
        org.mozilla.javascript.NativeError r1;
        java.lang.String r0, r2, r3, r4, r5;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeError;

        r0 := @parameter0: java.lang.String;

        b2 = 0;

        r2 = null;

        r5 = null;

        r4 = null;

        r3 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 8 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i3 = (int) $c1;

        if $i3 != 111 goto label1;

        r2 = "toSource";

        r5 = "toSource";

        r4 = "toSource";

        r3 = "toSource";

        b2 = 3;

        goto label3;

     label1:
        $i4 = (int) $c1;

        if $i4 != 116 goto label3;

        r2 = "toString";

        r5 = "toString";

        r4 = "toString";

        r3 = "toString";

        b2 = 2;

        goto label3;

     label2:
        if $i0 != 11 goto label3;

        r2 = "constructor";

        r5 = "constructor";

        r4 = "constructor";

        r3 = "constructor";

        b2 = 1;

     label3:
        if r4 == null goto label4;

        if r5 == r0 goto label4;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label4;

        b2 = 0;

     label4:
        return b2;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.mozilla.javascript.NativeError: int MAX_PROTOTYPE_ID> = 3;

        <org.mozilla.javascript.NativeError: int Id_toSource> = 3;

        <org.mozilla.javascript.NativeError: int Id_toString> = 2;

        <org.mozilla.javascript.NativeError: int Id_constructor> = 1;

        <org.mozilla.javascript.NativeError: long serialVersionUID> = -5338413581437645187L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeError: java.lang.Object ERROR_TAG> = $r0;

        return;
    }
}
