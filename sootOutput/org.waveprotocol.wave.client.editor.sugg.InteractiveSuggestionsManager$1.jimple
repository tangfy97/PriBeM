class org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$SuggestionMenuHandler
{
    final org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0;

    void <init>(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)
    {
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager r1;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager;

        r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handleItemSelected()
    {
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser $r2;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser access$000(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r1);

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser: void access$100(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser)>($r2);

        return;
    }

    public void handleLeftRight(boolean)
    {
        org.waveprotocol.wave.client.common.util.SequenceElement $r2, $r4, $r7, $r8, r9;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager $r1, $r3, $r5, $r6;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r7 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.common.util.SequenceElement access$200(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r6);

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.client.common.util.SequenceElement: org.waveprotocol.wave.client.common.util.SequenceElement getNext()>();

        goto label2;

     label1:
        $r1 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.common.util.SequenceElement access$200(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r1);

        $r8 = interfaceinvoke $r2.<org.waveprotocol.wave.client.common.util.SequenceElement: org.waveprotocol.wave.client.common.util.SequenceElement getPrev()>();

     label2:
        r9 = $r8;

        $r3 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.common.util.SequenceElement access$200(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r3);

        if $r8 != $r4 goto label3;

        r9 = null;

     label3:
        $r5 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: void access$300(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager,org.waveprotocol.wave.client.common.util.SequenceElement)>($r5, r9);

        return;
    }

    public void beforeItemClicked()
    {
        java.lang.Throwable $r8;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager $r1, $r3, $r5, $r7, $r9;
        org.waveprotocol.wave.model.document.util.FocusedRange $r2, $r6;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.model.document.util.FocusedRange access$400(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r1);

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper access$500(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r3);

        $r5 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.model.document.util.FocusedRange access$400(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r5);

        interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setSelectionRange(org.waveprotocol.wave.model.document.util.FocusedRange)>($r6);

     label2:
        $r7 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.model.document.util.FocusedRange access$402(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager,org.waveprotocol.wave.model.document.util.FocusedRange)>($r7, null);

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        $r9 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.model.document.util.FocusedRange access$402(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager,org.waveprotocol.wave.model.document.util.FocusedRange)>($r9, null);

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void handleMouseOut()
    {
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser $r2;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser access$000(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r1);

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser: void access$600(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser,com.google.gwt.user.client.Command)>($r2, null);

        return;
    }

    public void handleMouseOver()
    {
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser $r2;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1 r0;
        org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$1: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager: org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser access$000(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager)>($r1);

        staticinvoke <org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser: void access$700(org.waveprotocol.wave.client.editor.sugg.InteractiveSuggestionsManager$PopupCloser)>($r2);

        return;
    }
}
