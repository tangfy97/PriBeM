public class org.apache.commons.codec.binary.Base32OutputStream extends org.apache.commons.codec.binary.BaseNCodecOutputStream
{

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.commons.codec.binary.Base32OutputStream r0;

        r0 := @this: org.apache.commons.codec.binary.Base32OutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<org.apache.commons.codec.binary.Base32OutputStream: void <init>(java.io.OutputStream,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        java.io.OutputStream r1;
        org.apache.commons.codec.binary.Base32OutputStream r0;
        org.apache.commons.codec.binary.Base32 $r2;
        boolean z0;

        r0 := @this: org.apache.commons.codec.binary.Base32OutputStream;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.commons.codec.binary.Base32;

        specialinvoke $r2.<org.apache.commons.codec.binary.Base32: void <init>(boolean)>(0);

        specialinvoke r0.<org.apache.commons.codec.binary.BaseNCodecOutputStream: void <init>(java.io.OutputStream,org.apache.commons.codec.binary.BaseNCodec,boolean)>(r1, $r2, z0);

        return;
    }

    public void <init>(java.io.OutputStream, boolean, int, byte[])
    {
        java.io.OutputStream r1;
        byte[] r3;
        int i0;
        org.apache.commons.codec.binary.Base32OutputStream r0;
        org.apache.commons.codec.binary.Base32 $r2;
        boolean z0;

        r0 := @this: org.apache.commons.codec.binary.Base32OutputStream;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        $r2 = new org.apache.commons.codec.binary.Base32;

        specialinvoke $r2.<org.apache.commons.codec.binary.Base32: void <init>(int,byte[])>(i0, r3);

        specialinvoke r0.<org.apache.commons.codec.binary.BaseNCodecOutputStream: void <init>(java.io.OutputStream,org.apache.commons.codec.binary.BaseNCodec,boolean)>(r1, $r2, z0);

        return;
    }
}
