public class org.apache.xmlbeans.impl.values.JavaUriHolderEx extends org.apache.xmlbeans.impl.values.JavaUriHolder
{
    private org.apache.xmlbeans.SchemaType _schemaType;

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.values.JavaUriHolderEx r0;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaUriHolderEx;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.impl.values.JavaUriHolderEx r0;
        org.apache.xmlbeans.SchemaType r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaUriHolderEx;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    protected int get_wscanon_rule()
    {
        int $i0;
        org.apache.xmlbeans.impl.values.JavaUriHolderEx r0;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaUriHolderEx;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getWhiteSpaceRule()>();

        return $i0;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.values.JavaUriHolderEx r0;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r4, $r5;
        java.lang.String r1;
        org.apache.xmlbeans.SchemaType $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaUriHolderEx;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.values.JavaUriHolderEx: boolean check(java.lang.String,org.apache.xmlbeans.SchemaType)>(r1, $r2);

        if $z1 != 0 goto label1;

        $r5 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r5.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $z2 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r1);

        if $z2 != 0 goto label2;

        $r4 = new org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException;

        specialinvoke $r4.<org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException: void <init>()>();

        throw $r4;

     label2:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolder: void set_text(java.lang.String)>(r1);

        return;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Integer $r7, $r12, $r17;
        java.math.BigInteger $r5, $r10, $r15;
        org.apache.xmlbeans.SchemaType r2;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.XmlAnySimpleType $r23, $r26, $r27, $r28;
        java.lang.Object[] $r6, $r11, $r16, $r19, $r21;
        org.apache.xmlbeans.XmlAnySimpleType[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r0, $r8, $r13, $r18, $r20, $r22, $r25;
        org.apache.xmlbeans.SimpleValue $r4, $r9, $r14, $r24;
        org.apache.xmlbeans.impl.common.ValidationContext r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        staticinvoke <org.apache.xmlbeans.impl.values.XmlAnyUriImpl: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, r1);

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r3 == null goto label4;

        i8 = 0;

     label1:
        $i6 = lengthof $r3;

        if i8 >= $i6 goto label3;

        $r23 = $r3[i8];

        $r24 = (org.apache.xmlbeans.SimpleValue) $r23;

        $r25 = interfaceinvoke $r24.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        $z1 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        $i7 = lengthof $r3;

        if i8 < $i7 goto label4;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = "anyURI";

        $r21[1] = r0;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r21[2] = $r22;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-enumeration-valid", $r21);

     label4:
        $z2 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean hasPatternFacet()>();

        if $z2 == 0 goto label5;

        $z0 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r0);

        if $z0 != 0 goto label5;

        $r19 = newarray (java.lang.Object)[3];

        $r19[0] = "anyURI";

        $r19[1] = r0;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r19[2] = $r20;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r19);

     label5:
        $r26 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(0);

        if $r26 == null goto label6;

        $r14 = (org.apache.xmlbeans.SimpleValue) $r26;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i4 = virtualinvoke $r15.<java.math.BigInteger: int intValue()>();

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 == $i5 goto label6;

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = "anyURI";

        $r16[1] = r0;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>($i4);

        $r16[2] = $r17;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r16[3] = $r18;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-length-valid.1.1", $r16);

     label6:
        $r27 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(1);

        if $r27 == null goto label7;

        $r9 = (org.apache.xmlbeans.SimpleValue) $r27;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i2 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>();

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 <= $i3 goto label7;

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = "anyURI";

        $r11[1] = r0;

        $r12 = new java.lang.Integer;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>($i2);

        $r11[2] = $r12;

        $r13 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r11[3] = $r13;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minLength-valid.1.1", $r11);

     label7:
        $r28 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(2);

        if $r28 == null goto label8;

        $r4 = (org.apache.xmlbeans.SimpleValue) $r28;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i0 = virtualinvoke $r5.<java.math.BigInteger: int intValue()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label8;

        $r6 = newarray (java.lang.Object)[4];

        $r6[0] = "anyURI";

        $r6[1] = r0;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i0);

        $r6[2] = $r7;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r6[3] = $r8;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxLength-valid.1.1", $r6);

     label8:
        return;
    }

    private static boolean check(java.lang.String, org.apache.xmlbeans.SchemaType)
    {
        int i0, $i1, $i2, $i3, $i4;
        java.math.BigInteger $r6, $r8, $r10;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.SimpleValue $r5, $r7, $r9;
        org.apache.xmlbeans.XmlAnySimpleType $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.SchemaType;

        if r0 != null goto label1;

        $i4 = 0;

        goto label2;

     label1:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        i0 = $i4;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(0);

        if $r2 == null goto label3;

        $r9 = (org.apache.xmlbeans.SimpleValue) $r2;

        $r10 = interfaceinvoke $r9.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i3 = virtualinvoke $r10.<java.math.BigInteger: int intValue()>();

        if $i4 != $i3 goto label3;

        return 0;

     label3:
        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(1);

        if $r3 == null goto label4;

        $r7 = (org.apache.xmlbeans.SimpleValue) $r3;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i2 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        if i0 >= $i2 goto label4;

        return 0;

     label4:
        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(2);

        if $r4 == null goto label5;

        $r5 = (org.apache.xmlbeans.SimpleValue) $r4;

        $r6 = interfaceinvoke $r5.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        $i1 = virtualinvoke $r6.<java.math.BigInteger: int intValue()>();

        if i0 <= $i1 goto label5;

        return 0;

     label5:
        return 1;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        org.apache.xmlbeans.impl.common.ValidationContext r3;
        java.lang.String $r1, r4;
        org.apache.xmlbeans.impl.values.JavaUriHolderEx r0;
        org.apache.xmlbeans.SchemaType $r2;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaUriHolderEx;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: java.lang.String stringValue()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaUriHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaUriHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($r1, $r2, r3);

        return;
    }
}
