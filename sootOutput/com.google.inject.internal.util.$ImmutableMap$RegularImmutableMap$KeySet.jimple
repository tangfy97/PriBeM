class com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet extends com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet
{
    final com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map;

    void <init>(com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap)
    {
        int $i0;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet r0;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap r1;
        java.util.Map$Entry[] $r2;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet;

        r1 := @parameter0: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap;

        $r2 = staticinvoke <com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: java.util.Map$Entry[] access$500(com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap)>(r1);

        $i0 = staticinvoke <com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: int access$600(com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap)>(r1);

        specialinvoke r0.<com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet: void <init>(java.lang.Object[],int)>($r2, $i0);

        r0.<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map> = r1;

        return;
    }

    java.lang.Object transform(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.lang.Object $r1;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet r2;

        r2 := @this: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet;

        r0 := @parameter0: java.util.Map$Entry;

        $r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet r0;
        java.lang.Object r1;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap $r2;
        boolean $z0;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map>;

        $z0 = virtualinvoke $r2.<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    volatile java.lang.Object transform(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet r0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet: java.lang.Object transform(java.util.Map$Entry)>($r2);

        return $r3;
    }
}
