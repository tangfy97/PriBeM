public final class org.waveprotocol.box.server.authentication.SessionManagerImpl extends java.lang.Object implements org.waveprotocol.box.server.authentication.SessionManager
{
    private static final java.lang.String USER_FIELD;
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final org.eclipse.jetty.server.SessionManager jettySessionManager;
    private static final org.waveprotocol.wave.util.logging.Log LOG;

    public void <init>(org.waveprotocol.box.server.persistence.AccountStore, org.eclipse.jetty.server.SessionManager)
    {
        org.eclipse.jetty.server.SessionManager r2;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r0;
        org.waveprotocol.box.server.persistence.AccountStore r1;

        r0 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.AccountStore;

        r2 := @parameter1: org.eclipse.jetty.server.SessionManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null account store");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null jetty session manager");

        r0.<org.waveprotocol.box.server.authentication.SessionManagerImpl: org.waveprotocol.box.server.persistence.AccountStore accountStore> = r1;

        r0.<org.waveprotocol.box.server.authentication.SessionManagerImpl: org.eclipse.jetty.server.SessionManager jettySessionManager> = r2;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getLoggedInUser(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        java.lang.Object $r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r3;

        r3 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>("user");

        $r2 = (org.waveprotocol.wave.model.wave.ParticipantId) $r1;

        return $r2;

     label1:
        return null;
    }

    public org.waveprotocol.box.server.account.AccountData getLoggedInAccount(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r1;
        org.waveprotocol.box.server.account.AccountData $r4;
        org.waveprotocol.wave.model.wave.ParticipantId $r2;
        org.waveprotocol.box.server.persistence.PersistenceException $r5;
        java.lang.StringBuilder $r6, $r8, $r9;
        org.waveprotocol.wave.util.logging.Log $r7;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r0;
        org.waveprotocol.box.server.persistence.AccountStore $r3;
        java.lang.String $r10;

        r0 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r1 := @parameter0: javax.servlet.http.HttpSession;

        $r2 = virtualinvoke r0.<org.waveprotocol.box.server.authentication.SessionManagerImpl: org.waveprotocol.wave.model.wave.ParticipantId getLoggedInUser(javax.servlet.http.HttpSession)>(r1);

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<org.waveprotocol.box.server.authentication.SessionManagerImpl: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.box.server.persistence.AccountStore: org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId)>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r7 = <org.waveprotocol.box.server.authentication.SessionManagerImpl: org.waveprotocol.wave.util.logging.Log LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retrieve account data for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r10, $r5);

        return null;

     label4:
        return null;

        catch org.waveprotocol.box.server.persistence.PersistenceException from label1 to label2 with label3;
    }

    public void setLoggedInUser(javax.servlet.http.HttpSession, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        javax.servlet.http.HttpSession r0;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r2;

        r2 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Session is null");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Participant id is null");

        interfaceinvoke r0.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>("user", r1);

        return;
    }

    public void logout(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r1;

        r1 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        if r0 == null goto label1;

        interfaceinvoke r0.<javax.servlet.http.HttpSession: void removeAttribute(java.lang.String)>("user");

     label1:
        return;
    }

    public java.lang.String getLoginUrl(java.lang.String)
    {
        org.waveprotocol.wave.util.escapers.PercentEscaper $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9;
        java.lang.String r0, $r4, $r6, $r10;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r11;
        boolean $z0;

        r11 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return "/auth/signin";

     label1:
        $r1 = new org.waveprotocol.wave.util.escapers.PercentEscaper;

        specialinvoke $r1.<org.waveprotocol.wave.util.escapers.PercentEscaper: void <init>(java.lang.String,boolean)>("-_.!~*\'()@:$,;/?:", 0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?r=");

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.util.escapers.PercentEscaper: java.lang.String escape(java.lang.String)>(r0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/auth/signin");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public javax.servlet.http.HttpSession getSessionFromToken(java.lang.String)
    {
        javax.servlet.http.HttpSession $r3;
        org.eclipse.jetty.server.SessionManager $r2;
        java.lang.String r0;
        org.waveprotocol.box.server.authentication.SessionManagerImpl r1;

        r1 := @this: org.waveprotocol.box.server.authentication.SessionManagerImpl;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = r1.<org.waveprotocol.box.server.authentication.SessionManagerImpl: org.eclipse.jetty.server.SessionManager jettySessionManager>;

        $r3 = interfaceinvoke $r2.<org.eclipse.jetty.server.SessionManager: javax.servlet.http.HttpSession getHttpSession(java.lang.String)>(r0);

        return $r3;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        <org.waveprotocol.box.server.authentication.SessionManagerImpl: java.lang.String USER_FIELD> = "user";

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/authentication/SessionManagerImpl;");

        <org.waveprotocol.box.server.authentication.SessionManagerImpl: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
