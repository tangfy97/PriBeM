public final class org.apache.poi.xssf.usermodel.XSSFCell extends java.lang.Object implements org.apache.poi.ss.usermodel.Cell
{
    private static final java.lang.String FALSE_AS_STRING;
    private static final java.lang.String TRUE_AS_STRING;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell;
    private final org.apache.poi.xssf.usermodel.XSSFRow _row;
    private int _cellNum;
    private org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource;
    private org.apache.poi.xssf.model.StylesTable _stylesSource;

    protected void <init>(org.apache.poi.xssf.usermodel.XSSFRow, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell r1;
        org.apache.poi.xssf.model.StylesTable $r12;
        org.apache.poi.xssf.usermodel.XSSFRow r2;
        org.apache.poi.ss.util.CellReference $r13;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r8, $r11;
        short $s0, $s4;
        int $i1, $i2, $i3, $i5, $i6, $i8, $i9;
        java.lang.String $r3, $r6;
        org.apache.poi.xssf.usermodel.XSSFSheet $r7, $r10;
        org.apache.poi.xssf.model.SharedStringsTable $r9;
        org.apache.poi.xssf.usermodel.XSSFCell r0, $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRow;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row> = r2;

        $r3 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        if $r3 == null goto label1;

        $r13 = new org.apache.poi.ss.util.CellReference;

        $r6 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        specialinvoke $r13.<org.apache.poi.ss.util.CellReference: void <init>(java.lang.String)>($r6);

        $s4 = virtualinvoke $r13.<org.apache.poi.ss.util.CellReference: short getCol()>();

        $i5 = (int) $s4;

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum> = $i5;

        goto label2;

     label1:
        $s0 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFRow: short getLastCellNum()>();

        $i6 = (int) $s0;

        $i8 = (int) -1;

        if $i6 == $i8 goto label2;

        $i9 = (int) $s0;

        $i1 = $i9 - 1;

        $r4 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell getCell(int)>($i1);

        $i2 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $i3 = $i2 + 1;

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum> = $i3;

     label2:
        $r7 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.SharedStringsTable getSharedStringSource()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource> = $r9;

        $r10 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r12 = virtualinvoke $r11.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.StylesTable getStylesSource()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource> = $r12;

        return;
    }

    protected org.apache.poi.xssf.model.SharedStringsTable getSharedStringSource()
    {
        org.apache.poi.xssf.model.SharedStringsTable $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        return $r1;
    }

    protected org.apache.poi.xssf.model.StylesTable getStylesSource()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.model.StylesTable $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFSheet getSheet()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow getRow()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFRow getRow()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        return $r1;
    }

    public boolean getBooleanCellValue()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1, $r2, $r5, $r6;
        int $i0;
        java.lang.String $r3, $r4, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException $r9;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label8;
        };

     label1:
        return 0;

     label2:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z0 == 0 goto label3;

        $r3 = "1";

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z2 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z2 == 0 goto label6;

        $r7 = "1";

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r8 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label6;

        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;

     label8:
        $r9 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(4, $i0, 0);

        throw $r9;
    }

    public void setCellValue(boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r1;
        java.lang.String $r4;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        z0 := @parameter0: boolean;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r1 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum B>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r1);

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        if z0 == 0 goto label1;

        $r4 = "1";

        goto label2;

     label1:
        $r4 = "0";

     label2:
        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r4);

        return;
    }

    public double getNumericCellValue()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1, $r2;
        java.lang.NumberFormatException $r5;
        java.lang.RuntimeException $r4, $r6;
        int $i0;
        java.lang.String $r3;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label7;
            case 2: goto label2;
            case 3: goto label1;
            default: goto label7;
        };

     label1:
        return 0.0;

     label2:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z0 == 0 goto label6;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        return 0.0;

     label3:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label4:
        return $d0;

     label5:
        $r5 := @caughtexception;

        $r6 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(0, 1, 0);

        throw $r6;

     label6:
        return 0.0;

     label7:
        $r4 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(0, $i0, 0);

        throw $r4;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    public void setCellValue(double)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2, $r3, $r6, $r8, $r11, $r13;
        java.lang.String $r4, $r9, $r14;
        double d0;
        boolean $z0, $z1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r1, $r5, $r10;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.ss.usermodel.FormulaError $r7, $r12;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z0 == 0 goto label1;

        $r11 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r10 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum E>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r10);

        $r13 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r12 = <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError DIV0>;

        $r14 = virtualinvoke $r12.<org.apache.poi.ss.usermodel.FormulaError: java.lang.String getString()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r14);

        goto label3;

     label1:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum E>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r5);

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r7 = <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError NUM>;

        $r9 = virtualinvoke $r7.<org.apache.poi.ss.usermodel.FormulaError: java.lang.String getString()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r9);

        goto label3;

     label2:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r1 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum N>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r1);

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r4);

     label3:
        return;
    }

    public java.lang.String getStringCellValue()
    {
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRichTextString getRichStringCellValue()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

     label2:
        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFRichTextString getRichStringCellValue()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r3, $r4, $r5, $r8, $r11, $r13, $r19, $r20, $r21, $r22, $r25, $r28;
        org.apache.poi.xssf.model.StylesTable $r34;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.xssf.model.SharedStringsTable $r16;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r17, $r29;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r1, $r2, $r12, $r15, $r18, $r23, $r24, $r27, r31;
        int $i0, $i1, $i2;
        java.lang.String $r14, $r26, $r32, $r33;
        java.lang.RuntimeException $r30;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r6, $r7, $r9, $r10;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label10;
            case 3: goto label01;
            default: goto label13;
        };

     label01:
        $r1 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>("");

        r31 = $r1;

        goto label14;

     label02:
        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum getT()>();

        $r7 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum INLINE_STR>;

        if $r6 != $r7 goto label05;

        $r21 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z3 = interfaceinvoke $r21.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetIs()>();

        if $z3 == 0 goto label03;

        $r27 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r28 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r29 = interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getIs()>();

        specialinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r29);

        r31 = $r27;

        goto label14;

     label03:
        $r22 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z4 = interfaceinvoke $r22.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z4 == 0 goto label04;

        $r24 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r25 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r26 = interfaceinvoke $r25.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        specialinvoke $r24.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r26);

        r31 = $r24;

        goto label14;

     label04:
        $r23 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke $r23.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>("");

        r31 = $r23;

        goto label14;

     label05:
        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum getT()>();

        $r10 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum STR>;

        if $r9 != $r10 goto label08;

        $r18 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r19 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z2 = interfaceinvoke $r19.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z2 == 0 goto label06;

        $r20 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r32 = interfaceinvoke $r20.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        goto label07;

     label06:
        $r32 = "";

     label07:
        specialinvoke $r18.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r32);

        r31 = $r18;

        goto label14;

     label08:
        $r11 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z1 = interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z1 == 0 goto label09;

        $r13 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        $r15 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r16 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r17 = virtualinvoke $r16.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)>($i2);

        specialinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r17);

        r31 = $r15;

        goto label14;

     label09:
        $r12 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke $r12.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>("");

        r31 = $r12;

        goto label14;

     label10:
        $i1 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(0);

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: void checkFormulaCachedValueType(int,int)>(1, $i1);

        $r2 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z0 == 0 goto label11;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r33 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        goto label12;

     label11:
        $r33 = "";

     label12:
        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r33);

        r31 = $r2;

        goto label14;

     label13:
        $r30 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(1, $i0, 0);

        throw $r30;

     label14:
        $r34 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        virtualinvoke r31.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setStylesTableReference(org.apache.poi.xssf.model.StylesTable)>($r34);

        return r31;
    }

    private static void checkFormulaCachedValueType(int, int)
    {
        int i0, i1;
        java.lang.RuntimeException $r0;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 == i1 goto label1;

        $r0 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(i1, i0, 1);

        throw $r0;

     label1:
        return;
    }

    public void setCellValue(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>(r1);

     label2:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellValue(org.apache.poi.ss.usermodel.RichTextString)>($r2);

        return;
    }

    public void setCellValue(org.apache.poi.ss.usermodel.RichTextString)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r3, $r6, $r7, $r11, $r16, $r18;
        org.apache.poi.xssf.model.StylesTable $r13;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r15;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r12;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r17, $r19;
        org.apache.poi.ss.usermodel.RichTextString r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r5, $r8, $r9, $r10;
        org.apache.poi.xssf.model.SharedStringsTable $r14;
        org.apache.poi.xssf.usermodel.XSSFCell r1;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r0 := @parameter0: org.apache.poi.ss.usermodel.RichTextString;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        if $r2 != null goto label2;

     label1:
        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellType(int)>(3);

        return;

     label2:
        $i0 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        lookupswitch($i0)
        {
            case 2: goto label3;
            default: goto label4;
        };

     label3:
        $r3 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r4 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r4);

        $r6 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum STR>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r5);

        goto label6;

     label4:
        $r7 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum getT()>();

        $r9 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum INLINE_STR>;

        if $r8 != $r9 goto label5;

        $r18 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r19 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        interfaceinvoke $r18.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r19);

        goto label6;

     label5:
        $r11 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r10 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum S>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r10);

        r12 = (org.apache.poi.xssf.usermodel.XSSFRichTextString) r0;

        $r13 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        virtualinvoke r12.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setStylesTableReference(org.apache.poi.xssf.model.StylesTable)>($r13);

        $r14 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r15 = virtualinvoke r12.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $i1 = virtualinvoke $r14.<org.apache.poi.xssf.model.SharedStringsTable: int addEntry(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r15);

        $r16 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke $r16.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r17);

     label6:
        return;
    }

    public java.lang.String getCellFormula()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum $r3, $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        long $l1;
        java.lang.RuntimeException $r10;
        int $i0, $i2;
        org.apache.poi.xssf.usermodel.XSSFSheet $r7;
        java.lang.String $r5, $r6, $r9;
        org.apache.poi.xssf.usermodel.XSSFCell r0, $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        if $i0 == 2 goto label1;

        $r10 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(2, $i0, 0);

        throw $r10;

     label1:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z0 == 0 goto label2;

        if $r2 != null goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFCell getFirstCellInArrayFormula(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

        $r9 = virtualinvoke $r8.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getCellFormula()>();

        return $r9;

     label2:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum getT()>();

        $r4 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum SHARED>;

        if $r3 != $r4 goto label3;

        $l1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: long getSi()>();

        $i2 = (int) $l1;

        $r6 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String convertSharedFormula(int)>($i2);

        return $r6;

     label3:
        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getStringValue()>();

        return $r5;
    }

    private java.lang.String convertSharedFormula(int)
    {
        java.lang.IllegalStateException $r14;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r6, $r7;
        org.apache.poi.ss.formula.SharedFormula $r9;
        org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook $r8;
        org.apache.poi.ss.formula.ptg.Ptg[] $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r4, $r13, $r19;
        org.apache.poi.ss.util.CellRangeAddress $r5;
        org.apache.poi.ss.SpreadsheetVersion $r10;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getSharedFormula(int)>(i0);

        if $r2 != null goto label1;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Master cell of a shared formula with sid=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not found");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getStringValue()>();

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getRef()>();

        $r5 = staticinvoke <org.apache.poi.ss.util.CellRangeAddress: org.apache.poi.ss.util.CellRangeAddress valueOf(java.lang.String)>($r4);

        $r6 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $i1 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getSheetIndex(org.apache.poi.ss.usermodel.Sheet)>($r1);

        $r7 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r8 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook: org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook create(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r7);

        $r9 = new org.apache.poi.ss.formula.SharedFormula;

        $r10 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        specialinvoke $r9.<org.apache.poi.ss.formula.SharedFormula: void <init>(org.apache.poi.ss.SpreadsheetVersion)>($r10);

        $r11 = staticinvoke <org.apache.poi.ss.formula.FormulaParser: org.apache.poi.ss.formula.ptg.Ptg[] parse(java.lang.String,org.apache.poi.ss.formula.FormulaParsingWorkbook,int,int)>($r3, $r8, 0, $i1);

        $i2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        $i3 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $i6 = virtualinvoke $r5.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i7 = $i5 - $i6;

        $r12 = virtualinvoke $r9.<org.apache.poi.ss.formula.SharedFormula: org.apache.poi.ss.formula.ptg.Ptg[] convertSharedFormulas(org.apache.poi.ss.formula.ptg.Ptg[],int,int)>($r11, $i4, $i7);

        $r13 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook,org.apache.poi.ss.formula.ptg.Ptg[])>($r8, $r12);

        return $r13;
    }

    public void setCellFormula(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void notifyArrayFormulaChanging()>();

     label1:
        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setFormula(java.lang.String,int)>(r1, 0);

        return;
    }

    void setCellArrayFormula(java.lang.String, org.apache.poi.ss.util.CellRangeAddress)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum $r4;
        org.apache.poi.ss.util.CellRangeAddress r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2;
        java.lang.String r1, $r6;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.poi.ss.util.CellRangeAddress;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setFormula(java.lang.String,int)>(r1, 2);

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        $r4 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum ARRAY>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum)>($r4);

        $r6 = virtualinvoke r5.<org.apache.poi.ss.util.CellRangeAddress: java.lang.String formatAsString()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setRef(java.lang.String)>($r6);

        return;
    }

    private void setFormula(java.lang.String, int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r8, $r9, $r10, $r11, $r12;
        org.apache.poi.xssf.usermodel.XSSFRow $r1;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r3;
        org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook $r5;
        int i0, $i1;
        java.lang.String r4;
        boolean $z0, $z1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2, $r6;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r7;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        if r4 != null goto label2;

        virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFWorkbook: void onDeleteFormula(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

        $r11 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z1 = interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetF()>();

        if $z1 == 0 goto label1;

        $r12 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void unsetF()>();

     label1:
        return;

     label2:
        $r5 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook: org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook create(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r3);

        $r6 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $i1 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getSheetIndex(org.apache.poi.ss.usermodel.Sheet)>($r6);

        staticinvoke <org.apache.poi.ss.formula.FormulaParser: org.apache.poi.ss.formula.ptg.Ptg[] parse(java.lang.String,org.apache.poi.ss.formula.FormulaParsingWorkbook,int,int)>(r4, $r5, i0, $i1);

        $r7 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula newInstance()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setStringValue(java.lang.String)>(r4);

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setF(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula)>($r7);

        $r9 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z0 == 0 goto label3;

        $r10 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void unsetV()>();

     label3:
        return;
    }

    public int getColumnIndex()
    {
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum>;

        return $i0;
    }

    public int getRowIndex()
    {
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        $i0 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        return $i0;
    }

    public java.lang.String getReference()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        java.lang.String $r2, $r4;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.ss.util.CellReference $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        if $r2 != null goto label1;

        $r3 = new org.apache.poi.ss.util.CellReference;

        specialinvoke $r3.<org.apache.poi.ss.util.CellReference: void <init>(org.apache.poi.ss.usermodel.Cell)>(r0);

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        return $r4;

     label1:
        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFCellStyle getCellStyle()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2, $r4;
        long $l2;
        org.apache.poi.xssf.model.StylesTable $r1, $r3;
        org.apache.poi.xssf.usermodel.XSSFCellStyle r5;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r5 = null;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        $i0 = virtualinvoke $r1.<org.apache.poi.xssf.model.StylesTable: int getNumCellStyles()>();

        if $i0 <= 0 goto label3;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetS()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $l2 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: long getS()>();

        goto label2;

     label1:
        $l2 = 0L;

     label2:
        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        $i1 = (int) $l2;

        r5 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFCellStyle getStyleAt(int)>($i1);

     label3:
        return r5;
    }

    public void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r5, $r6, $r7;
        long l1;
        org.apache.poi.xssf.usermodel.XSSFCellStyle r1;
        org.apache.poi.xssf.model.StylesTable $r3, $r4;
        int $i0;
        org.apache.poi.ss.usermodel.CellStyle r0;
        org.apache.poi.xssf.usermodel.XSSFCell r2;
        boolean $z0;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r0 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        if r0 != null goto label1;

        $r6 = r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetS()>();

        if $z0 == 0 goto label2;

        $r7 = r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void unsetS()>();

        goto label2;

     label1:
        r1 = (org.apache.poi.xssf.usermodel.XSSFCellStyle) r0;

        $r3 = r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCellStyle: void verifyBelongsToStylesSource(org.apache.poi.xssf.model.StylesTable)>($r3);

        $r4 = r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        $i0 = virtualinvoke $r4.<org.apache.poi.xssf.model.StylesTable: int putStyle(org.apache.poi.xssf.usermodel.XSSFCellStyle)>(r1);

        l1 = (long) $i0;

        $r5 = r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setS(long)>(l1);

     label2:
        return;
    }

    public int getCellType()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r3;
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $z0 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: boolean isCellInArrayFormulaContext(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return 2;

     label2:
        $i0 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(1);

        return $i0;
    }

    public int getCachedFormulaResultType()
    {
        java.lang.IllegalStateException $r3;
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Only formula cells have cached results");

        throw $r3;

     label1:
        $i0 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(0);

        return $i0;
    }

    private int getBaseCellType(boolean)
    {
        java.lang.IllegalStateException $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1, $r3, $r7;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r2, $r8;
        java.lang.String $r10;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        z1 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum getT()>();

        $i0 = virtualinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            default: goto label6;
        };

     label1:
        return 4;

     label2:
        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetV()>();

        if $z0 != 0 goto label3;

        if z1 == 0 goto label3;

        return 3;

     label3:
        return 0;

     label4:
        return 5;

     label5:
        return 1;

     label6:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal cell type: ");

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum getT()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r4;
    }

    public java.util.Date getDateCellValue()
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        java.util.Date $r3;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        if $i0 != 3 goto label1;

        return null;

     label1:
        $d0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: double getNumericCellValue()>();

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $z0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: boolean isDate1904()>();

        $r3 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: java.util.Date getJavaDate(double,boolean)>($d0, $z0);

        return $r3;
    }

    public void setCellValue(java.util.Date)
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        java.util.Date r3;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r3 := @parameter0: java.util.Date;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $z0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: boolean isDate1904()>();

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Date,boolean)>(r3, $z0);

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellValue(double)>($d0);

        return;
    }

    public void setCellValue(java.util.Calendar)
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        java.util.Calendar r3;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r3 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $z0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: boolean isDate1904()>();

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Calendar,boolean)>(r3, $z0);

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellValue(double)>($d0);

        return;
    }

    public java.lang.String getErrorCellString()
    {
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(1);

        if $i0 == 5 goto label1;

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.RuntimeException typeMismatch(int,int,boolean)>(5, $i0, 0);

        throw $r3;

     label1:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        return $r2;
    }

    public byte getErrorCellValue()
    {
        byte $b0;
        java.lang.String $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.ss.usermodel.FormulaError $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getErrorCellString()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError forString(java.lang.String)>($r1);

        $b0 = virtualinvoke $r2.<org.apache.poi.ss.usermodel.FormulaError: byte getCode()>();

        return $b0;
    }

    public void setCellErrorValue(byte)
    {
        byte b0;
        org.apache.poi.xssf.usermodel.XSSFCell r1;
        org.apache.poi.ss.usermodel.FormulaError $r0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        b0 := @parameter0: byte;

        $r0 = staticinvoke <org.apache.poi.ss.usermodel.FormulaError: org.apache.poi.ss.usermodel.FormulaError forInt(byte)>(b0);

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellErrorValue(org.apache.poi.ss.usermodel.FormulaError)>($r0);

        return;
    }

    public void setCellErrorValue(org.apache.poi.ss.usermodel.FormulaError)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2, $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r1;
        java.lang.String $r5;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.ss.usermodel.FormulaError r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r3 := @parameter0: org.apache.poi.ss.usermodel.FormulaError;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r1 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum E>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r1);

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = virtualinvoke r3.<org.apache.poi.ss.usermodel.FormulaError: java.lang.String getString()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r5);

        return;
    }

    public void setAsActiveCell()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getReference()>();

        virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: void setActiveCell(java.lang.String)>($r2);

        return;
    }

    private void setBlank()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r0, $r2, $r4, $r5, $r6;
        long $l0;
        java.lang.String $r3;
        org.apache.poi.xssf.usermodel.XSSFCell r1;
        boolean $z0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell newInstance()>();

        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setR(java.lang.String)>($r3);

        $r4 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z0 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetS()>();

        if $z0 == 0 goto label1;

        $r6 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $l0 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: long getS()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setS(long)>($l0);

     label1:
        $r5 = r1.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r0);

        return;
    }

    protected void setCellNum(int)
    {
        int i0, $i1, $i2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r3;
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.ss.util.CellReference $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        i0 := @parameter0: int;

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: void checkBounds(int)>(i0);

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum> = i0;

        $r1 = new org.apache.poi.ss.util.CellReference;

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        $i2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        specialinvoke $r1.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i1, $i2);

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setR(java.lang.String)>($r2);

        return;
    }

    public void setCellType(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r20, $r23;
        org.apache.poi.xssf.model.StylesTable $r17;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r25, $r26, $r27;
        org.apache.poi.xssf.model.SharedStringsTable $r18;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r19;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r16;
        int $i0, i1, $i2;
        java.lang.String $r15, $r21, $r28, $r31;
        java.lang.IllegalArgumentException $r24;
        org.apache.poi.xssf.usermodel.XSSFSheet $r29;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum $r1, $r5, $r13, $r22;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r9;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void notifyArrayFormulaChanging()>();

     label01:
        if $i0 != 2 goto label02;

        if i1 == 2 goto label02;

        $r29 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r30 = virtualinvoke $r29.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        virtualinvoke $r30.<org.apache.poi.xssf.usermodel.XSSFWorkbook: void onDeleteFormula(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

     label02:
        tableswitch(i1)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label11;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label08;
            default: goto label13;
        };

     label03:
        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: void setBlank()>();

        goto label14;

     label04:
        $z2 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean convertCellValueToBoolean()>();

        if $z2 == 0 goto label05;

        $r31 = "1";

        goto label06;

     label05:
        $r31 = "0";

     label06:
        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum B>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r5);

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r31);

        goto label14;

     label07:
        $r23 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r22 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum N>;

        interfaceinvoke $r23.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r22);

        goto label14;

     label08:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r1 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum E>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r1);

        goto label14;

     label09:
        if $i0 == 1 goto label10;

        $r15 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String convertCellValueToString()>();

        $r16 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke $r16.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(java.lang.String)>($r15);

        $r17 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.StylesTable _stylesSource>;

        virtualinvoke $r16.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setStylesTableReference(org.apache.poi.xssf.model.StylesTable)>($r17);

        $r18 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r19 = virtualinvoke $r16.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $i2 = virtualinvoke $r18.<org.apache.poi.xssf.model.SharedStringsTable: int addEntry(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r19);

        $r20 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke $r20.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setV(java.lang.String)>($r21);

     label10:
        $r14 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r13 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum S>;

        interfaceinvoke $r14.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setT(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum)>($r13);

        goto label14;

     label11:
        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z3 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetF()>();

        if $z3 != 0 goto label14;

        $r9 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula newInstance()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setStringValue(java.lang.String)>("0");

        $r10 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setF(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula)>($r9);

        $r11 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z4 = interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetT()>();

        if $z4 == 0 goto label12;

        $r12 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void unsetT()>();

     label12:
        goto label14;

     label13:
        $r24 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal cell type: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label14:
        if i1 == 2 goto label15;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetF()>();

        if $z1 == 0 goto label15;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void unsetF()>();

     label15:
        return;
    }

    public java.lang.String toString()
    {
        java.util.Date $r7;
        java.text.SimpleDateFormat $r14;
        byte $b1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r3;
        int $i0, $i2, $i3;
        java.lang.String $r1, $r2, $r4, $r5, $r8, $r12, $r13;
        boolean $z0, $z1;
        double $d0;
        java.lang.StringBuilder $r10, $r11, $r15;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label07;
            case 1: goto label09;
            case 2: goto label06;
            case 3: goto label01;
            case 4: goto label02;
            case 5: goto label05;
            default: goto label10;
        };

     label01:
        return "";

     label02:
        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean getBooleanCellValue()>();

        if $z0 == 0 goto label03;

        $r13 = "TRUE";

        goto label04;

     label03:
        $r13 = "FALSE";

     label04:
        return $r13;

     label05:
        $b1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: byte getErrorCellValue()>();

        $i3 = (int) $b1;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.ErrorEval: java.lang.String getText(int)>($i3);

        return $r1;

     label06:
        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getCellFormula()>();

        return $r2;

     label07:
        $z1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: boolean isCellDateFormatted(org.apache.poi.ss.usermodel.Cell)>(r0);

        if $z1 == 0 goto label08;

        $r14 = new java.text.SimpleDateFormat;

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd-MMM-yyyy");

        $r7 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.util.Date getDateCellValue()>();

        $r8 = virtualinvoke $r14.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r7);

        return $r8;

     label08:
        $d0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: double getNumericCellValue()>();

        $r5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r5;

     label09:
        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRichTextString getRichStringCellValue()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String toString()>();

        return $r4;

     label10:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Cell Type: ");

        $i2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String getRawValue()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        return $r2;
    }

    private static java.lang.String getCellTypeName(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label7;
        };

     label1:
        return "blank";

     label2:
        return "text";

     label3:
        return "boolean";

     label4:
        return "error";

     label5:
        return "numeric";

     label6:
        return "formula";

     label7:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#unknown cell type (");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")#");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.RuntimeException typeMismatch(int, int, boolean)
    {
        java.lang.IllegalStateException $r11;
        int i0, i1;
        java.lang.String $r2, $r5, $r10, $r12;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get a ");

        $r2 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getCellTypeName(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value from a ");

        $r5 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getCellTypeName(int)>(i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        if z0 == 0 goto label1;

        $r12 = "formula ";

        goto label2;

     label1:
        $r12 = "";

     label2:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cell");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        return $r11;
    }

    private static void checkBounds(int)
    {
        int $i0, i1;
        java.lang.String $r7, $r12, $r15;
        java.lang.IllegalArgumentException $r2;
        org.apache.poi.ss.SpreadsheetVersion r0, $r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14;

        i1 := @parameter0: int;

        r0 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        $r1 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.SpreadsheetVersion: int getLastColumnIndex()>();

        if i1 < 0 goto label1;

        if i1 <= $i0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid column index (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  Allowable column range for ");

        $r7 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: java.lang.String name()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is (0..");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or (\'A\'..\'");

        $r12 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: java.lang.String getLastColumnName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r2;

     label2:
        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFComment getCellComment()
    {
        org.apache.poi.xssf.usermodel.XSSFComment $r3;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $r3 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFComment getCellComment(int,int)>($i0, $i1);

        return $r3;
    }

    public void setCellComment(org.apache.poi.ss.usermodel.Comment)
    {
        org.apache.poi.ss.usermodel.Comment r0;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFCell r1;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Comment;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: void removeCellComment()>();

        return;

     label1:
        $i0 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.Comment: void setRow(int)>($i0);

        $i1 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        interfaceinvoke r0.<org.apache.poi.ss.usermodel.Comment: void setColumn(int)>($i1);

        return;
    }

    public void removeCellComment()
    {
        org.apache.poi.xssf.usermodel.XSSFVMLDrawing $r5;
        org.apache.poi.xssf.model.CommentsTable $r4;
        org.apache.poi.xssf.usermodel.XSSFComment $r1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r3;
        int $i0, $i1;
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFComment getCellComment()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getReference()>();

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.model.CommentsTable getCommentsTable(boolean)>(0);

        virtualinvoke $r4.<org.apache.poi.xssf.model.CommentsTable: boolean removeComment(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFVMLDrawing getVMLDrawing(boolean)>(0);

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getRowIndex()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFVMLDrawing: boolean removeCommentShape(int,int)>($i0, $i1);

     label1:
        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFHyperlink getHyperlink()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r2;
        org.apache.poi.xssf.usermodel.XSSFHyperlink $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $i1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum>;

        $r3 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFHyperlink getHyperlink(int,int)>($i0, $i1);

        return $r3;
    }

    public void setHyperlink(org.apache.poi.ss.usermodel.Hyperlink)
    {
        org.apache.poi.xssf.usermodel.XSSFHyperlink r1;
        org.apache.poi.ss.util.CellReference $r2;
        org.apache.poi.xssf.usermodel.XSSFRow $r4;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r6;
        java.lang.String $r5;
        org.apache.poi.xssf.usermodel.XSSFCell r3;
        org.apache.poi.ss.usermodel.Hyperlink r0;

        r3 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Hyperlink;

        r1 = (org.apache.poi.xssf.usermodel.XSSFHyperlink) r0;

        $r2 = new org.apache.poi.ss.util.CellReference;

        $r4 = r3.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow _row>;

        $i0 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $i1 = r3.<org.apache.poi.xssf.usermodel.XSSFCell: int _cellNum>;

        specialinvoke $r2.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i0, $i1);

        $r5 = virtualinvoke $r2.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFHyperlink: void setCellReference(java.lang.String)>($r5);

        $r6 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFSheet: void addHyperlink(org.apache.poi.xssf.usermodel.XSSFHyperlink)>(r1);

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        return $r1;
    }

    public void setCTCell(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell;

        r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell> = r1;

        return;
    }

    private boolean convertCellValueToBoolean()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1, $r4, $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r8;
        byte $b2;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r6;
        int $i0, $i1, i3;
        java.lang.String $r2, $r3, $r5, $r9, $r11, $r17;
        boolean $z0, $z1, $z2;
        double $d0;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;
        org.apache.poi.xssf.model.SharedStringsTable $r7;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        i3 = $i0;

        if $i0 != 2 goto label1;

        i3 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(0);

     label1:
        tableswitch(i3)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label8;
            case 3: goto label7;
            case 4: goto label2;
            case 5: goto label7;
            default: goto label8;
        };

     label2:
        $r2 = "1";

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label3:
        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r6 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r8 = virtualinvoke $r7.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)>($i1);

        specialinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r8);

        $r9 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r9);

        return $z1;

     label4:
        $r10 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        $b2 = $d0 cmpl 0.0;

        if $b2 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;

     label7:
        return 0;

     label8:
        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r12;
    }

    private java.lang.String convertCellValueToString()
    {
        java.lang.IllegalStateException $r8, $r14, $r28;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r1, $r4, $r20, $r26;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r29, $r30, $r31, $r32;
        org.apache.poi.xssf.model.SharedStringsTable $r23;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r24;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r22;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r13, $r19, $r21, $r25, $r27, $r33, $r34;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        tableswitch($i0)
        {
            case 0: goto label06;
            case 1: goto label05;
            case 2: goto label07;
            case 3: goto label01;
            case 4: goto label02;
            case 5: goto label06;
            default: goto label08;
        };

     label01:
        return "";

     label02:
        $r2 = "1";

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label03;

        $r34 = "TRUE";

        goto label04;

     label03:
        $r34 = "FALSE";

     label04:
        return $r34;

     label05:
        $r20 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r21 = interfaceinvoke $r20.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        $r22 = new org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r23 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.model.SharedStringsTable _sharedStringSource>;

        $r24 = virtualinvoke $r23.<org.apache.poi.xssf.model.SharedStringsTable: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)>($i2);

        specialinvoke $r22.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r24);

        $r25 = virtualinvoke $r22.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        return $r25;

     label06:
        $r26 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r27 = interfaceinvoke $r26.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        return $r27;

     label07:
        goto label09;

     label08:
        $r28 = new java.lang.IllegalStateException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected cell type (");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        throw $r28;

     label09:
        $i1 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: int getBaseCellType(boolean)>(0);

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getV()>();

        tableswitch($i1)
        {
            case 0: goto label13;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label14;
            case 4: goto label10;
            case 5: goto label13;
            default: goto label14;
        };

     label10:
        $r6 = "1";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label11;

        return "TRUE";

     label11:
        $r7 = "0";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label12;

        return "FALSE";

     label12:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected boolean cached formula value \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label13:
        return $r5;

     label14:
        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected formula result type (");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r14;
    }

    public org.apache.poi.ss.util.CellRangeAddress getArrayFormulaRange()
    {
        org.apache.poi.ss.util.CellRangeAddress $r6;
        java.lang.IllegalStateException $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r3;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        java.lang.String $r5, $r10, $r13;
        org.apache.poi.xssf.usermodel.XSSFCell r0, $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFCell getFirstCellInArrayFormula(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

        if $r2 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cell ");

        $r10 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getReference()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not part of an array formula.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label1:
        $r3 = $r2.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell _cell>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getRef()>();

        $r6 = staticinvoke <org.apache.poi.ss.util.CellRangeAddress: org.apache.poi.ss.util.CellRangeAddress valueOf(java.lang.String)>($r5);

        return $r6;
    }

    public boolean isPartOfArrayFormulaGroup()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $z0 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: boolean isCellInArrayFormulaContext(org.apache.poi.xssf.usermodel.XSSFCell)>(r0);

        return $z0;
    }

    void notifyArrayFormulaChanging(java.lang.String)
    {
        org.apache.poi.ss.util.CellRangeAddress $r1;
        java.lang.IllegalStateException $r4;
        org.apache.poi.xssf.usermodel.XSSFRow $r2;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r3;
        java.lang.String r5;
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        r5 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.ss.util.CellRangeAddress getArrayFormulaRange()>();

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getNumberOfCells()>();

        if $i0 <= 1 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r5);

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow getRow()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.CellRange removeArrayFormula(org.apache.poi.ss.usermodel.Cell)>(r0);

     label2:
        return;
    }

    void notifyArrayFormulaChanging()
    {
        org.apache.poi.ss.util.CellReference $r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        org.apache.poi.xssf.usermodel.XSSFCell r1;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r0 = new org.apache.poi.ss.util.CellReference;

        specialinvoke $r0.<org.apache.poi.ss.util.CellReference: void <init>(org.apache.poi.ss.usermodel.Cell)>(r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cell ");

        $r4 = virtualinvoke $r0.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is part of a multi-cell array formula. ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You cannot change part of an array.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFCell: void notifyArrayFormulaChanging(java.lang.String)>($r8);

        return;
    }

    public volatile org.apache.poi.ss.usermodel.Hyperlink getHyperlink()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFHyperlink $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFHyperlink getHyperlink()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Comment getCellComment()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFComment $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFComment getCellComment()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.CellStyle getCellStyle()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFCellStyle $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFCellStyle getCellStyle()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRichTextString $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRichTextString getRichStringCellValue()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Row getRow()
    {
        org.apache.poi.xssf.usermodel.XSSFCell r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFRow getRow()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Sheet getSheet()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFCell: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String TRUE_AS_STRING> = "1";

        <org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String FALSE_AS_STRING> = "0";

        return;
    }
}
