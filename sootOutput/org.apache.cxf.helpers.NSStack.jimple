public class org.apache.cxf.helpers.NSStack extends java.lang.Object
{
    private static final java.lang.String NS_PREFIX_PREFIX;
    private final java.util.List stack;
    private java.util.List top;
    private int size;
    private int nsPrefixCount;

    public void <init>()
    {
        org.apache.cxf.helpers.NSStack r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.helpers.NSStack: java.util.List stack> = $r1;

        r0.<org.apache.cxf.helpers.NSStack: int nsPrefixCount> = 1;

        return;
    }

    public synchronized void push()
    {
        java.util.List $r2, $r3;
        int $i0, $i1;
        org.apache.cxf.helpers.NSStack r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.helpers.NSStack: java.util.List top> = $r1;

        $r3 = r0.<org.apache.cxf.helpers.NSStack: java.util.List stack>;

        $r2 = r0.<org.apache.cxf.helpers.NSStack: java.util.List top>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.cxf.helpers.NSStack: int size> = $i1;

        return;
    }

    public synchronized void pop()
    {
        java.util.List $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.cxf.helpers.NSStack r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        $r1 = r0.<org.apache.cxf.helpers.NSStack: java.util.List stack>;

        $i0 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        $i1 = $i0 - 1;

        r0.<org.apache.cxf.helpers.NSStack: int size> = $i1;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i1);

        r0.<org.apache.cxf.helpers.NSStack: java.util.List top> = null;

        $i2 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        if $i2 == 0 goto label1;

        $r2 = r0.<org.apache.cxf.helpers.NSStack: java.util.List stack>;

        $i3 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        $i4 = $i3 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i4);

        $r4 = (java.util.List) $r3;

        r0.<org.apache.cxf.helpers.NSStack: java.util.List top> = $r4;

     label1:
        return;
    }

    public synchronized void add(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        org.apache.cxf.helpers.NSDecl $r1;
        org.apache.cxf.helpers.NSStack r0;
        java.lang.String r2, r3;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.cxf.helpers.NSStack: java.util.List top>;

        $r1 = new org.apache.cxf.helpers.NSDecl;

        specialinvoke $r1.<org.apache.cxf.helpers.NSDecl: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public synchronized java.lang.String add(java.lang.String)
    {
        int $i0, $i1;
        org.apache.cxf.helpers.NSStack r0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r1, $r2, $r6, $r7, r8;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.helpers.NSStack: java.lang.String getPrefix(java.lang.String)>(r1);

        r8 = $r2;

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns");

        $i0 = r0.<org.apache.cxf.helpers.NSStack: int nsPrefixCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.cxf.helpers.NSStack: int nsPrefixCount> = $i1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = $r6;

        $r7 = virtualinvoke r0.<org.apache.cxf.helpers.NSStack: java.lang.String getURI(java.lang.String)>($r6);

        if $r7 != null goto label1;

        virtualinvoke r0.<org.apache.cxf.helpers.NSStack: void add(java.lang.String,java.lang.String)>($r6, r1);

     label2:
        return r8;
    }

    public synchronized java.lang.String getPrefix(java.lang.String)
    {
        java.util.ListIterator $r4;
        org.apache.cxf.helpers.NSDecl r6;
        java.util.List $r1, r3;
        int $i0, i1, $i3;
        org.apache.cxf.helpers.NSStack r0;
        java.lang.Object $r2, $r5;
        java.lang.String $r7, r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        r8 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label5;

        $r1 = r0.<org.apache.cxf.helpers.NSStack: java.util.List stack>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (java.util.List) $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.helpers.NSDecl) $r5;

        $r7 = virtualinvoke r6.<org.apache.cxf.helpers.NSDecl: java.lang.String getUri()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label3;

        $r9 = virtualinvoke r6.<org.apache.cxf.helpers.NSDecl: java.lang.String getPrefix()>();

        return $r9;

     label3:
        goto label2;

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label5:
        return null;
    }

    public synchronized java.lang.String getURI(java.lang.String)
    {
        java.util.ListIterator $r4;
        org.apache.cxf.helpers.NSDecl r6;
        java.util.List $r1, r3;
        int $i0, i1, $i3;
        org.apache.cxf.helpers.NSStack r0;
        java.lang.Object $r2, $r5;
        java.lang.String $r7, r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.helpers.NSStack;

        r8 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.cxf.helpers.NSStack: int size>;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label5;

        $r1 = r0.<org.apache.cxf.helpers.NSStack: java.util.List stack>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (java.util.List) $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.ListIterator: java.lang.Object next()>();

        r6 = (org.apache.cxf.helpers.NSDecl) $r5;

        $r7 = virtualinvoke r6.<org.apache.cxf.helpers.NSDecl: java.lang.String getPrefix()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label3;

        $r9 = virtualinvoke r6.<org.apache.cxf.helpers.NSDecl: java.lang.String getUri()>();

        return $r9;

     label3:
        goto label2;

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label5:
        return null;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.helpers.NSStack: java.lang.String NS_PREFIX_PREFIX> = "ns";

        return;
    }
}
