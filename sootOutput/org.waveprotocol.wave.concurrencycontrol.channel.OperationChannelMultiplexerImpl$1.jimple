final class org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$DeltaChannelFactory
{
    final org.waveprotocol.wave.common.logging.LoggerBundle val$logger;

    void <init>(org.waveprotocol.wave.common.logging.LoggerBundle)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1 r0;
        org.waveprotocol.wave.common.logging.LoggerBundle r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1;

        r1 := @parameter0: org.waveprotocol.wave.common.logging.LoggerBundle;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1: org.waveprotocol.wave.common.logging.LoggerBundle val$logger> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$MultiplexedDeltaChannel create(org.waveprotocol.wave.concurrencycontrol.channel.WaveletChannel)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1 r2;
        org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannelImpl $r0;
        org.waveprotocol.wave.common.logging.LoggerBundle $r3;
        org.waveprotocol.wave.concurrencycontrol.channel.WaveletChannel r1;

        r2 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.channel.WaveletChannel;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannelImpl;

        $r3 = r2.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelMultiplexerImpl$1: org.waveprotocol.wave.common.logging.LoggerBundle val$logger>;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.channel.WaveletDeltaChannelImpl: void <init>(org.waveprotocol.wave.concurrencycontrol.channel.WaveletChannel,org.waveprotocol.wave.common.logging.LoggerBundle)>(r1, $r3);

        return $r0;
    }
}
