final class org.waveprotocol.wave.model.conversation.BlipIterators$2 extends java.lang.Object implements java.lang.Iterable
{
    final org.waveprotocol.wave.model.conversation.ConversationThread val$thread;

    void <init>(org.waveprotocol.wave.model.conversation.ConversationThread)
    {
        org.waveprotocol.wave.model.conversation.BlipIterators$2 r0;
        org.waveprotocol.wave.model.conversation.ConversationThread r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.BlipIterators$2;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ConversationThread;

        r0.<org.waveprotocol.wave.model.conversation.BlipIterators$2: org.waveprotocol.wave.model.conversation.ConversationThread val$thread> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        org.waveprotocol.wave.model.conversation.BlipIterators$BlipIterator $r0;
        org.waveprotocol.wave.model.conversation.ConversationThread $r2;
        org.waveprotocol.wave.model.conversation.BlipIterators$2 r1;
        org.waveprotocol.wave.model.util.Predicate $r3;

        r1 := @this: org.waveprotocol.wave.model.conversation.BlipIterators$2;

        $r0 = new org.waveprotocol.wave.model.conversation.BlipIterators$BlipIterator;

        $r2 = r1.<org.waveprotocol.wave.model.conversation.BlipIterators$2: org.waveprotocol.wave.model.conversation.ConversationThread val$thread>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.conversation.BlipIterators: org.waveprotocol.wave.model.util.Predicate access$000()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.conversation.BlipIterators$BlipIterator: void <init>(org.waveprotocol.wave.model.conversation.ConversationThread,org.waveprotocol.wave.model.util.Predicate)>($r2, $r3);

        return $r0;
    }
}
