public class com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView extends com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper
{
    private com.hp.hpl.jena.graph.Node prefix;
    private com.hp.hpl.jena.tdb.store.NodeId prefixId;

    public void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        com.hp.hpl.jena.tdb.store.NodeId $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.graph.Node r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable)>(r1);

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.graph.Node prefix> = r2;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r2);

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.store.NodeId prefixId> = $r4;

        return;
    }

    public transient boolean addRow(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.graph.Node[] r3, r4;
        java.lang.Object[] $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.graph.Node $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.graph.Node prefix>;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/graph/Node;", $r1, r3);

        r4 = (com.hp.hpl.jena.graph.Node[]) $r2;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: boolean addRow(com.hp.hpl.jena.graph.Node[])>(r4);

        return $z0;
    }

    public transient boolean deleteRow(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.graph.Node[] r3, r4;
        java.lang.Object[] $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.graph.Node $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.graph.Node prefix>;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/graph/Node;", $r1, r3);

        r4 = (com.hp.hpl.jena.graph.Node[]) $r2;

        $z0 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: boolean deleteRow(com.hp.hpl.jena.graph.Node[])>(r4);

        return $z0;
    }

    public transient java.util.Iterator find(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r3;
        com.hp.hpl.jena.graph.Node[] r5, r6;
        java.lang.Object[] $r2;
        java.util.Iterator $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.graph.Node prefix>;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/graph/Node;", $r1, r5);

        r6 = (com.hp.hpl.jena.graph.Node[]) $r2;

        $r3 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>(r6);

        return $r4;
    }

    private static java.lang.Object[] push(java.lang.Class, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2;
        java.lang.Class r0;
        java.lang.Object r3;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object[];

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        $r2 = staticinvoke <org.apache.jena.atlas.lib.ArrayUtils: java.lang.Object[] alloc(java.lang.Class,int)>(r0, $i1);

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r2, 1, $i2);

        $r2[0] = r3;

        return $r2;
    }

    public transient java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r3;
        java.lang.Object[] $r2;
        java.util.Iterator $r4;
        com.hp.hpl.jena.tdb.store.NodeId $r1;
        com.hp.hpl.jena.tdb.store.NodeId[] r5, r6;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r5 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId[];

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.store.NodeId prefixId>;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/tdb/store/NodeId;", $r1, r5);

        r6 = (com.hp.hpl.jena.tdb.store.NodeId[]) $r2;

        $r3 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])>(r6);

        return $r4;
    }

    public java.util.Iterator find(org.apache.jena.atlas.lib.Tuple)
    {
        java.lang.Object[] $r3, $r4;
        java.util.Iterator $r7;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.store.NodeId[] r5;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r6;
        com.hp.hpl.jena.tdb.store.NodeId $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.store.NodeId prefixId>;

        $r3 = virtualinvoke r1.<org.apache.jena.atlas.lib.Tuple: java.lang.Object[] tuple()>();

        $r4 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/tdb/store/NodeId;", $r2, $r3);

        r5 = (com.hp.hpl.jena.tdb.store.NodeId[]) $r4;

        $r6 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])>(r5);

        return $r7;
    }

    public transient java.util.Iterator findAsNodeIds(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r3;
        com.hp.hpl.jena.graph.Node[] r5, r6;
        java.lang.Object[] $r2;
        java.util.Iterator $r4;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.graph.Node $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.graph.Node prefix>;

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: java.lang.Object[] push(java.lang.Class,java.lang.Object,java.lang.Object[])>(class "Lcom/hp/hpl/jena/graph/Node;", $r1, r5);

        r6 = (com.hp.hpl.jena.graph.Node[]) $r2;

        $r3 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator findAsNodeIds(com.hp.hpl.jena.graph.Node[])>(r6);

        return $r4;
    }

    public com.hp.hpl.jena.tdb.index.TupleTable getTupleTable()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView r0;
        com.hp.hpl.jena.tdb.index.TupleTable $r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableView;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.index.TupleTable getTupleTable()>();

        return $r1;
    }
}
