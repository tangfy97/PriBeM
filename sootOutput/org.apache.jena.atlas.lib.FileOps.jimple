public class org.apache.jena.atlas.lib.FileOps extends java.lang.Object
{

    private void <init>()
    {
        org.apache.jena.atlas.lib.FileOps r0;

        r0 := @this: org.apache.jena.atlas.lib.FileOps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void delete(java.lang.String)
    {
        java.lang.String r1;
        java.io.File $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        staticinvoke <org.apache.jena.atlas.lib.FileOps: void delete(java.io.File,boolean)>($r0, 1);

        return;
    }

    public static void deleteSilent(java.lang.String)
    {
        java.lang.String r1;
        java.io.File $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        staticinvoke <org.apache.jena.atlas.lib.FileOps: void delete(java.io.File,boolean)>($r0, 0);

        return;
    }

    public static void delete(java.io.File, boolean)
    {
        java.io.File r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r11;
        java.lang.SecurityException $r5;
        java.lang.String $r4, $r10, $r12;
        boolean z0, $z1;

        r0 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

     label1:
        virtualinvoke r0.<java.io.File: boolean delete()>();

        if z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete: *** File still exists: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lorg/apache/jena/atlas/lib/FileOps;", $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Security exception; ");

        $r10 = virtualinvoke $r5.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Lorg/apache/jena/atlas/lib/FileOps;", $r12);

     label4:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static void clearDirectory(java.lang.String)
    {
        int i0, i1;
        java.lang.String r1;
        java.io.File[] $r2;
        java.io.File $r0, r3;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r2[i1];

        $z0 = virtualinvoke r3.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        staticinvoke <org.apache.jena.atlas.lib.FileOps: void delete(java.io.File,boolean)>(r3, 0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static boolean existsAnyFiles(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        java.io.File[] $r2;
        java.io.File $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r2;

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean exists(java.lang.String)
    {
        java.lang.String r1;
        java.io.File $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        return $z0;
    }

    public static boolean isEmpty(java.lang.String)
    {
        long $l0;
        java.io.File $r0;
        org.apache.jena.atlas.AtlasException $r2;
        byte $b1;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke $r0.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label4;

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        $r2 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r2.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.String)>("Not a file");

        throw $r2;
    }

    public static void ensureDir(java.lang.String)
    {
        java.lang.String r1;
        java.io.File $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }

    public static org.apache.jena.atlas.lib.Tuple splitDirBaseExt(java.lang.String)
    {
        org.apache.jena.atlas.lib.Tuple $r2;
        java.lang.String[] $r1;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.String r0, r3, r4, r5;

        r0 := @parameter0: java.lang.String;

        r3 = null;

        r4 = r0;

        r5 = null;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i4 = $i0;

        if $i0 >= 0 goto label1;

        i4 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

     label1:
        if i4 < 0 goto label2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        $i3 = i4 + 1;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        $i1 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(46);

        $i6 = (int) -1;

        if $i1 <= $i6 goto label3;

        $i2 = $i1 + 1;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label3:
        $r1 = newarray (java.lang.String)[3];

        $r1[0] = r3;

        $r1[1] = r4;

        $r1[2] = r5;

        $r2 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>($r1);

        return $r2;
    }

    public static org.apache.jena.atlas.lib.Tuple splitDirFile(java.lang.String)
    {
        org.apache.jena.atlas.lib.Tuple $r2;
        java.lang.String[] $r1;
        int $i0, $i1, i2;
        java.lang.String r0, r3, r4;

        r0 := @parameter0: java.lang.String;

        r3 = null;

        r4 = r0;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i2 = $i0;

        if $i0 >= 0 goto label1;

        i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

     label1:
        if i2 < 0 goto label2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i1 = i2 + 1;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $r1 = newarray (java.lang.String)[2];

        $r1[0] = r3;

        $r1[1] = r4;

        $r2 = staticinvoke <org.apache.jena.atlas.lib.Tuple: org.apache.jena.atlas.lib.Tuple create(java.lang.Object[])>($r1);

        return $r2;
    }

    public static java.lang.String basename(java.lang.String)
    {
        int $i0, $i1, $i2, i3, $i5;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i3 = $i0;

        if $i0 >= 0 goto label1;

        i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

     label1:
        if i3 < 0 goto label2;

        $i2 = i3 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label3;

     label2:
        $r2 = r0;

     label3:
        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(46);

        $i5 = (int) -1;

        if $i1 <= $i5 goto label4;

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;

     label4:
        return $r2;
    }

    public static java.lang.String extension(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i4 = $i0;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $i1 <= $i0 goto label1;

        i4 = $i1;

     label1:
        if $i2 <= i4 goto label2;

        $i3 = $i2 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        goto label3;

     label2:
        $r2 = "";

     label3:
        return $r2;
    }

    public static java.lang.String fullPath(java.lang.String)
    {
        java.lang.String r1, $r2;
        java.io.File $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

    public static java.lang.String fullDirectoryPath(java.lang.String)
    {
        java.io.File $r0, $r2, $r4;
        java.lang.String r1, $r3, $r5, $r6;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r6;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        if $r2 == null goto label2;

        $r4 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r5;

     label2:
        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r3;
    }
}
