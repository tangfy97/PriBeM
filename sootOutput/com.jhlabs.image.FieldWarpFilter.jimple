public class com.jhlabs.image.FieldWarpFilter extends com.jhlabs.image.TransformFilter
{
    private float amount;
    private float power;
    private float strength;
    private com.jhlabs.image.FieldWarpFilter$Line[] inLines;
    private com.jhlabs.image.FieldWarpFilter$Line[] outLines;
    private com.jhlabs.image.FieldWarpFilter$Line[] intermediateLines;
    private float width;
    private float height;

    public void <init>()
    {
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.FieldWarpFilter: float amount> = 1.0F;

        r0.<com.jhlabs.image.FieldWarpFilter: float power> = 1.0F;

        r0.<com.jhlabs.image.FieldWarpFilter: float strength> = 2.0F;

        return;
    }

    public void setAmount(float)
    {
        float f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FieldWarpFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        float $f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        $f0 = r0.<com.jhlabs.image.FieldWarpFilter: float amount>;

        return $f0;
    }

    public void setPower(float)
    {
        float f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FieldWarpFilter: float power> = f0;

        return;
    }

    public float getPower()
    {
        float $f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        $f0 = r0.<com.jhlabs.image.FieldWarpFilter: float power>;

        return $f0;
    }

    public void setStrength(float)
    {
        float f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.FieldWarpFilter: float strength> = f0;

        return;
    }

    public float getStrength()
    {
        float $f0;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        $f0 = r0.<com.jhlabs.image.FieldWarpFilter: float strength>;

        return $f0;
    }

    public void setInLines(com.jhlabs.image.FieldWarpFilter$Line[])
    {
        com.jhlabs.image.FieldWarpFilter$Line[] r1;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        r1 := @parameter0: com.jhlabs.image.FieldWarpFilter$Line[];

        r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines> = r1;

        return;
    }

    public com.jhlabs.image.FieldWarpFilter$Line[] getInLines()
    {
        com.jhlabs.image.FieldWarpFilter$Line[] $r1;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        $r1 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        return $r1;
    }

    public void setOutLines(com.jhlabs.image.FieldWarpFilter$Line[])
    {
        com.jhlabs.image.FieldWarpFilter$Line[] r1;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        r1 := @parameter0: com.jhlabs.image.FieldWarpFilter$Line[];

        r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines> = r1;

        return;
    }

    public com.jhlabs.image.FieldWarpFilter$Line[] getOutLines()
    {
        com.jhlabs.image.FieldWarpFilter$Line[] $r1;
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        $r1 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        return $r1;
    }

    protected void transform(int, int, java.awt.Point)
    {
        com.jhlabs.image.FieldWarpFilter r0;
        int i0, i1;
        java.awt.Point r1;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Point;

        return;
    }

    protected void transformInverse(int, int, float[])
    {
        byte $b11, $b12, $b13;
        float[] r2;
        com.jhlabs.image.FieldWarpFilter r0;
        com.jhlabs.image.FieldWarpFilter$Line[] $r1, $r3, $r5;
        float $f0, $f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, f24, $f25, $f26, $f27, $f28, $f29, $f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66;
        com.jhlabs.image.FieldWarpFilter$Line r4, r6;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, $i15, $i16, $i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r2 := @parameter2: float[];

        $f0 = r0.<com.jhlabs.image.FieldWarpFilter: float strength>;

        $f1 = 1.5F * $f0;

        f2 = $f1 + 0.5F;

        f3 = r0.<com.jhlabs.image.FieldWarpFilter: float power>;

        f31 = 0.0F;

        f32 = 0.0F;

        f33 = 0.0F;

        i18 = 0;

     label1:
        $r1 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $i0 = lengthof $r1;

        if i18 >= $i0 goto label6;

        $r3 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        r4 = $r3[i18];

        $r5 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] intermediateLines>;

        r6 = $r5[i18];

        $i3 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int x1>;

        $i4 = i1 - $i3;

        f34 = (float) $i4;

        $i5 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int y1>;

        $i6 = i2 - $i5;

        f35 = (float) $i6;

        $i7 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int dx>;

        $f12 = (float) $i7;

        $f15 = f34 * $f12;

        $i8 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int dy>;

        $f13 = (float) $i8;

        $f14 = f35 * $f13;

        $f17 = $f15 + $f14;

        $f16 = r6.<com.jhlabs.image.FieldWarpFilter$Line: float lengthSquared>;

        f36 = $f17 / $f16;

        $i9 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int dx>;

        $f18 = (float) $i9;

        $f21 = f35 * $f18;

        $i10 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int dy>;

        $f19 = (float) $i10;

        $f20 = f34 * $f19;

        $f23 = $f21 - $f20;

        $f22 = r6.<com.jhlabs.image.FieldWarpFilter$Line: float length>;

        f24 = $f23 / $f22;

        $b11 = f36 cmpg 0.0F;

        $i25 = (int) $b11;

        if $i25 > 0 goto label2;

        $f29 = f34 * f34;

        $f28 = f35 * f35;

        $f30 = $f29 + $f28;

        $d2 = (double) $f30;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        f37 = (float) $d3;

        goto label5;

     label2:
        $b12 = f36 cmpl 1.0F;

        $i26 = (int) $b12;

        if $i26 < 0 goto label3;

        $i14 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int x2>;

        $i15 = i1 - $i14;

        f38 = (float) $i15;

        $i16 = r6.<com.jhlabs.image.FieldWarpFilter$Line: int y2>;

        $i17 = i2 - $i16;

        f39 = (float) $i17;

        $f26 = f38 * f38;

        $f25 = f39 * f39;

        $f27 = $f26 + $f25;

        $d0 = (double) $f27;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f37 = (float) $d1;

        goto label5;

     label3:
        $b13 = f24 cmpl 0.0F;

        $i27 = (int) $b13;

        if $i27 < 0 goto label4;

        f37 = f24;

        goto label5;

     label4:
        f37 = neg f24;

     label5:
        $i19 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int x1>;

        $f40 = (float) $i19;

        $i20 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int dx>;

        $f41 = (float) $i20;

        $f42 = f36 * $f41;

        $f43 = $f40 + $f42;

        $i21 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int dy>;

        $f44 = (float) $i21;

        $f45 = f24 * $f44;

        $f46 = r4.<com.jhlabs.image.FieldWarpFilter$Line: float length>;

        $f47 = $f45 / $f46;

        $f48 = $f43 - $f47;

        $i22 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int y1>;

        $f49 = (float) $i22;

        $i23 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int dy>;

        $f50 = (float) $i23;

        $f51 = f36 * $f50;

        $f52 = $f49 + $f51;

        $i24 = r4.<com.jhlabs.image.FieldWarpFilter$Line: int dx>;

        $f53 = (float) $i24;

        $f54 = f24 * $f53;

        $f55 = r4.<com.jhlabs.image.FieldWarpFilter$Line: float length>;

        $f56 = $f54 / $f55;

        $f57 = $f52 + $f56;

        $f58 = r6.<com.jhlabs.image.FieldWarpFilter$Line: float length>;

        $d4 = (double) $f58;

        $d5 = (double) f3;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, $d5);

        $f59 = 0.001F + f37;

        $d7 = (double) $f59;

        $d8 = $d6 / $d7;

        $d9 = (double) f2;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, $d9);

        $f60 = (float) $d10;

        $f61 = (float) i1;

        $f62 = $f48 - $f61;

        $f63 = $f62 * $f60;

        f32 = f32 + $f63;

        $f64 = (float) i2;

        $f65 = $f57 - $f64;

        $f66 = $f65 * $f60;

        f33 = f33 + $f66;

        f31 = f31 + $f60;

        i18 = i18 + 1;

        goto label1;

     label6:
        $f5 = (float) i1;

        $f4 = f32 / f31;

        $f6 = $f5 + $f4;

        $f7 = $f6 + 0.5F;

        r2[0] = $f7;

        $f9 = (float) i2;

        $f8 = f33 / f31;

        $f10 = $f9 + $f8;

        $f11 = $f10 + 0.5F;

        r2[1] = $f11;

        return;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        com.jhlabs.image.FieldWarpFilter r0;
        java.awt.image.BufferedImage r2, $r7, r28;
        com.jhlabs.image.FieldWarpFilter$Line[] $r1, $r3, $r4, $r5, $r6, $r9, $r11, $r13, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.jhlabs.image.FieldWarpFilter$Line $r8, $r10, $r12, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        r2 := @parameter0: java.awt.image.BufferedImage;

        r28 := @parameter1: java.awt.image.BufferedImage;

        $f0 = r0.<com.jhlabs.image.FieldWarpFilter: float width>;

        r0.<com.jhlabs.image.FieldWarpFilter: float width> = $f0;

        $f1 = r0.<com.jhlabs.image.FieldWarpFilter: float height>;

        r0.<com.jhlabs.image.FieldWarpFilter: float height> = $f1;

        $r1 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        if $r1 == null goto label3;

        $r3 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        if $r3 == null goto label3;

        $r4 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $i0 = lengthof $r4;

        $r5 = newarray (com.jhlabs.image.FieldWarpFilter$Line)[$i0];

        r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] intermediateLines> = $r5;

        i14 = 0;

     label1:
        $r6 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $i1 = lengthof $r6;

        if i14 >= $i1 goto label2;

        $r13 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] intermediateLines>;

        $r8 = new com.jhlabs.image.FieldWarpFilter$Line;

        $f2 = r0.<com.jhlabs.image.FieldWarpFilter: float amount>;

        $r9 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $r10 = $r9[i14];

        $i3 = $r10.<com.jhlabs.image.FieldWarpFilter$Line: int x1>;

        $r11 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        $r12 = $r11[i14];

        $i2 = $r12.<com.jhlabs.image.FieldWarpFilter$Line: int x1>;

        $i4 = staticinvoke <com.jhlabs.image.ImageMath: int lerp(float,int,int)>($f2, $i3, $i2);

        $f3 = r0.<com.jhlabs.image.FieldWarpFilter: float amount>;

        $r14 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $r15 = $r14[i14];

        $i6 = $r15.<com.jhlabs.image.FieldWarpFilter$Line: int y1>;

        $r16 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        $r17 = $r16[i14];

        $i5 = $r17.<com.jhlabs.image.FieldWarpFilter$Line: int y1>;

        $i7 = staticinvoke <com.jhlabs.image.ImageMath: int lerp(float,int,int)>($f3, $i6, $i5);

        $f4 = r0.<com.jhlabs.image.FieldWarpFilter: float amount>;

        $r18 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $r19 = $r18[i14];

        $i9 = $r19.<com.jhlabs.image.FieldWarpFilter$Line: int x2>;

        $r20 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        $r21 = $r20[i14];

        $i8 = $r21.<com.jhlabs.image.FieldWarpFilter$Line: int x2>;

        $i10 = staticinvoke <com.jhlabs.image.ImageMath: int lerp(float,int,int)>($f4, $i9, $i8);

        $f5 = r0.<com.jhlabs.image.FieldWarpFilter: float amount>;

        $r22 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $r23 = $r22[i14];

        $i12 = $r23.<com.jhlabs.image.FieldWarpFilter$Line: int y2>;

        $r24 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] outLines>;

        $r25 = $r24[i14];

        $i11 = $r25.<com.jhlabs.image.FieldWarpFilter$Line: int y2>;

        $i13 = staticinvoke <com.jhlabs.image.ImageMath: int lerp(float,int,int)>($f5, $i12, $i11);

        specialinvoke $r8.<com.jhlabs.image.FieldWarpFilter$Line: void <init>(int,int,int,int)>($i4, $i7, $i10, $i13);

        $r13[i14] = $r8;

        virtualinvoke $r8.<com.jhlabs.image.FieldWarpFilter$Line: void setup()>();

        $r26 = r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] inLines>;

        $r27 = $r26[i14];

        virtualinvoke $r27.<com.jhlabs.image.FieldWarpFilter$Line: void setup()>();

        i14 = i14 + 1;

        goto label1;

     label2:
        $r7 = specialinvoke r0.<com.jhlabs.image.TransformFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r2, r28);

        r0.<com.jhlabs.image.FieldWarpFilter: com.jhlabs.image.FieldWarpFilter$Line[] intermediateLines> = null;

        return $r7;

     label3:
        return r2;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.FieldWarpFilter r0;

        r0 := @this: com.jhlabs.image.FieldWarpFilter;

        return "Distort/Field Warp...";
    }
}
