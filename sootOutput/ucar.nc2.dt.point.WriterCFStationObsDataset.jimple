public class ucar.nc2.dt.point.WriterCFStationObsDataset extends java.lang.Object
{
    private static final java.lang.String recordDimName;
    private static final java.lang.String stationDimName;
    private static final java.lang.String latName;
    private static final java.lang.String lonName;
    private static final java.lang.String altName;
    private static final java.lang.String idName;
    private static final java.lang.String descName;
    private static final java.lang.String wmoName;
    private static final java.lang.String timeName;
    private static final java.lang.String parentName;
    private ucar.nc2.units.DateFormatter dateFormatter;
    private int name_strlen;
    private int desc_strlen;
    private int wmo_strlen;
    private ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile;
    private java.lang.String title;
    private java.util.Set dimSet;
    private java.util.List stnList;
    private java.util.List recordVars;
    private java.util.Date minDate;
    private java.util.Date maxDate;
    private boolean useAlt;
    private boolean useWmoId;
    private boolean debug;
    private ucar.ma2.ArrayInt$D1 timeArray;
    private ucar.ma2.ArrayInt$D1 parentArray;
    private java.util.HashMap stationMap;

    public void <init>(java.io.DataOutputStream, java.lang.String)
    {
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r6;
        java.util.ArrayList $r3;
        java.util.HashSet $r2;
        ucar.ma2.ArrayInt$D1 $r4, $r5;
        java.io.DataOutputStream r7;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        java.lang.String r8;
        ucar.nc2.units.DateFormatter $r1;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r7 := @parameter0: java.io.DataOutputStream;

        r8 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r1.<ucar.nc2.units.DateFormatter: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.units.DateFormatter dateFormatter> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.Set dimSet> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars> = $r3;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.Date minDate> = null;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.Date maxDate> = null;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt> = 0;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId> = 0;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean debug> = 0;

        $r4 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r4.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 timeArray> = $r4;

        $r5 = new ucar.ma2.ArrayInt$D1;

        specialinvoke $r5.<ucar.ma2.ArrayInt$D1: void <init>(int)>(1);

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray> = $r5;

        $r6 = new ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream;

        specialinvoke $r6.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void <init>(ucar.nc2.dt.point.WriterCFStationObsDataset,java.io.DataOutputStream)>(r0, r7);

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile> = $r6;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String title> = r8;

        return;
    }

    public void writeHeader(java.util.List, java.util.List, int) throws java.io.IOException
    {
        java.util.List r1, r2;
        int i0;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r3, $r4;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        specialinvoke r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: void createGlobalAttributes()>();

        specialinvoke r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: void createStations(java.util.List)>(r1);

        specialinvoke r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: void createRecordVariables(java.util.List)>(r2);

        $r3 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r3.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void finish()>();

        $r4 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeHeader(int)>(i0);

        specialinvoke r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeStationData(java.util.List)>(r1);

        return;
    }

    private void createGlobalAttributes()
    {
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r2, $r4, $r7;
        ucar.nc2.Attribute $r1, $r3, $r5;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        java.lang.String $r6;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        $r2 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r1 = new ucar.nc2.Attribute;

        specialinvoke $r1.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "CF-1.0");

        virtualinvoke $r2.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r1);

        $r4 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r3 = new ucar.nc2.Attribute;

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("cdm_datatype", "Station");

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r3);

        $r7 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r5 = new ucar.nc2.Attribute;

        $r6 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String title>;

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("title", $r6);

        virtualinvoke $r7.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r5);

        return;
    }

    private void createStations(java.util.List) throws java.io.IOException
    {
        ucar.nc2.Attribute $r3, $r7, $r11, $r15, $r26, $r27, $r31, $r32, $r35, $r38, $r41, $r45, $r46, $r47;
        ucar.nc2.dt.point.WriterCFStationObsDataset r1;
        java.lang.String $r6, $r10, $r14, $r18, $r49, $r50, $r51, $r53, $r54, $r55;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.Dimension $r19, $r21;
        ucar.unidata.geoloc.LatLonPointImpl $r5, $r9, $r13, $r17;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r23, $r28, $r42;
        java.util.List r0;
        ucar.unidata.geoloc.Station r56, r57;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r4, $r8, $r12, $r16, $r20, $r22, $r24, $r29, $r33, $r36, $r39, $r43;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        ucar.nc2.Variable $r25, $r30, $r34, $r37, $r40, $r44;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r48, $r52;

        r1 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i14 = 0;

     label1:
        if i14 >= $i0 goto label4;

        $r52 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i14);

        r56 = (ucar.unidata.geoloc.Station) $r52;

        $d4 = interfaceinvoke r56.<ucar.unidata.geoloc.Station: double getAltitude()>();

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d4);

        if $z3 != 0 goto label2;

        r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt> = 1;

     label2:
        $r53 = interfaceinvoke r56.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        if $r53 == null goto label3;

        $r54 = interfaceinvoke r56.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        $r55 = virtualinvoke $r54.<java.lang.String: java.lang.String trim()>();

        $i13 = virtualinvoke $r55.<java.lang.String: int length()>();

        if $i13 <= 0 goto label3;

        r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId> = 1;

     label3:
        i14 = i14 + 1;

        goto label1;

     label4:
        i15 = 0;

     label5:
        if i15 >= $i0 goto label7;

        $r48 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i15);

        r57 = (ucar.unidata.geoloc.Station) $r48;

        $i4 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int name_strlen>;

        $r49 = interfaceinvoke r57.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i5 = virtualinvoke $r49.<java.lang.String: int length()>();

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int name_strlen> = $i6;

        $i7 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int desc_strlen>;

        $r50 = interfaceinvoke r57.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        $i8 = virtualinvoke $r50.<java.lang.String: int length()>();

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i8);

        r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int desc_strlen> = $i9;

        $z2 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label6;

        $i10 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int wmo_strlen>;

        $r51 = interfaceinvoke r57.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $i11 = virtualinvoke $r51.<java.lang.String: int length()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i11);

        r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int wmo_strlen> = $i12;

     label6:
        i15 = i15 + 1;

        goto label5;

     label7:
        $r2 = specialinvoke r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)>(r0);

        $r4 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r3 = new ucar.nc2.Attribute;

        $r5 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d0 = virtualinvoke $r5.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("geospatial_lat_min", $r6);

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r3);

        $r8 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r7 = new ucar.nc2.Attribute;

        $r9 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d1 = virtualinvoke $r9.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("geospatial_lat_max", $r10);

        virtualinvoke $r8.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r7);

        $r12 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r11 = new ucar.nc2.Attribute;

        $r13 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getLowerLeftPoint()>();

        $d2 = virtualinvoke $r13.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("geospatial_lon_min", $r14);

        virtualinvoke $r12.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r11);

        $r16 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r15 = new ucar.nc2.Attribute;

        $r17 = virtualinvoke $r2.<ucar.unidata.geoloc.LatLonRect: ucar.unidata.geoloc.LatLonPointImpl getUpperRightPoint()>();

        $d3 = virtualinvoke $r17.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        $r18 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d3);

        specialinvoke $r15.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("geospatial_lon_max", $r18);

        virtualinvoke $r16.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r15);

        $r20 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r19 = new ucar.nc2.Dimension;

        specialinvoke $r19.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("record", 0, 1, 1, 0);

        virtualinvoke $r20.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r19);

        $r22 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r21 = new ucar.nc2.Dimension;

        specialinvoke $r21.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>("station", $i0);

        virtualinvoke $r22.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r21);

        $r24 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r23 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r25 = virtualinvoke $r24.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "latitude", $r23, "station");

        $r26 = new ucar.nc2.Attribute;

        specialinvoke $r26.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r26);

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station latitude");

        virtualinvoke $r25.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        $r29 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r30 = virtualinvoke $r29.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "longitude", $r28, "station");

        $r31 = new ucar.nc2.Attribute;

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r31);

        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station longitude");

        virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        $z0 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt>;

        if $z0 == 0 goto label8;

        $r43 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r42 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r44 = virtualinvoke $r43.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "altitude", $r42, "station");

        $r45 = new ucar.nc2.Attribute;

        specialinvoke $r45.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "meters");

        virtualinvoke $r44.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r45);

        $r46 = new ucar.nc2.Attribute;

        specialinvoke $r46.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station altitude");

        virtualinvoke $r44.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r46);

        $r47 = new ucar.nc2.Attribute;

        specialinvoke $r47.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", "up");

        virtualinvoke $r44.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r47);

     label8:
        $r33 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $i1 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int name_strlen>;

        $r34 = virtualinvoke $r33.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addStringVariable(ucar.nc2.Group,java.lang.String,java.lang.String,int)>(null, "station_id", "station", $i1);

        $r35 = new ucar.nc2.Attribute;

        specialinvoke $r35.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station identifier");

        virtualinvoke $r34.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r35);

        $r36 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $i2 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int desc_strlen>;

        $r37 = virtualinvoke $r36.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addStringVariable(ucar.nc2.Group,java.lang.String,java.lang.String,int)>(null, "station_description", "station", $i2);

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station description");

        virtualinvoke $r37.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r38);

        $z1 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId>;

        if $z1 == 0 goto label9;

        $r39 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $i3 = r1.<ucar.nc2.dt.point.WriterCFStationObsDataset: int wmo_strlen>;

        $r40 = virtualinvoke $r39.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addStringVariable(ucar.nc2.Group,java.lang.String,java.lang.String,int)>(null, "wmo_id", "station", $i3);

        $r41 = new ucar.nc2.Attribute;

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "station WMO id");

        virtualinvoke $r40.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

     label9:
        return;
    }

    private void createRecordVariables(java.util.List)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        ucar.ma2.DataType $r1, $r8, $r26;
        java.util.Set $r17, $r43;
        java.util.List $r6, $r12, r15, $r21, $r29, $r30, $r42;
        ucar.nc2.Attribute $r4, $r5, $r11, $r14, r33;
        ucar.nc2.VariableSimpleIF r45, r47;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        java.lang.StringBuilder $r22, $r35;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r2, $r9, $r24, $r39;
        int $i0;
        ucar.nc2.Variable $r3, $r10, $r28;
        java.lang.String $r25, $r27, $r36, $r40, $r44;
        java.util.Iterator $r16, $r18, $r19, $r23, $r31;
        ucar.ma2.ArrayInt$D1 $r7, $r13;
        java.lang.Object $r20, $r32, $r34, $r37, $r41;
        ucar.nc2.Dimension $r38, r46, r48;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r15 := @parameter0: java.util.List;

        $r2 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "time", $r1, "record");

        $r4 = new ucar.nc2.Attribute;

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "secs since 1970-01-01 00:00:00");

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r4);

        $r5 = new ucar.nc2.Attribute;

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "calendar date");

        virtualinvoke $r3.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $r6 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r7 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 timeArray>;

        virtualinvoke $r3.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r7, 0);

        $r9 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r10 = virtualinvoke $r9.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "parent_index", $r8, "record");

        $r11 = new ucar.nc2.Attribute;

        specialinvoke $r11.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "index of parent station");

        virtualinvoke $r10.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r11);

        $r12 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r13 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        virtualinvoke $r10.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r13, 0);

        $r14 = new ucar.nc2.Attribute;

        $z0 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt>;

        if $z0 == 0 goto label01;

        $r44 = "latitude longitude altitude time";

        goto label02;

     label01:
        $r44 = "latitude longitude time";

     label02:
        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r44);

        $r16 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z9 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label04;

        $r41 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r45 = (ucar.nc2.VariableSimpleIF) $r41;

        $r42 = interfaceinvoke r45.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r43 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.Set dimSet>;

        interfaceinvoke $r43.<java.util.Set: boolean addAll(java.util.Collection)>($r42);

        goto label03;

     label04:
        $r17 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.Set dimSet>;

        $r18 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r37 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r46 = (ucar.nc2.Dimension) $r37;

        $z6 = virtualinvoke r46.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z6 != 0 goto label06;

        $r39 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r38 = new ucar.nc2.Dimension;

        $r40 = virtualinvoke r46.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i0 = virtualinvoke r46.<ucar.nc2.Dimension: int getLength()>();

        $z7 = virtualinvoke r46.<ucar.nc2.Dimension: boolean isShared()>();

        $z8 = virtualinvoke r46.<ucar.nc2.Dimension: boolean isVariableLength()>();

        specialinvoke $r38.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>($r40, $i0, $z7, 0, $z8);

        virtualinvoke $r39.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r38);

     label06:
        goto label05;

     label07:
        $r19 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r47 = (ucar.nc2.VariableSimpleIF) $r20;

        $r21 = interfaceinvoke r47.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("record");

        $r23 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r34 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.Dimension) $r34;

        $z5 = virtualinvoke r48.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z5 != 0 goto label10;

        $r35 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = virtualinvoke r48.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

     label10:
        goto label09;

     label11:
        $r24 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r25 = interfaceinvoke r47.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r26 = interfaceinvoke r47.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = virtualinvoke $r24.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, $r25, $r26, $r27);

        $r29 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars>;

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r30 = interfaceinvoke r47.<ucar.nc2.VariableSimpleIF: java.util.List getAttributes()>();

        $r31 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.Attribute) $r32;

        virtualinvoke $r28.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r33);

        goto label12;

     label13:
        virtualinvoke $r28.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        goto label08;

     label14:
        return;
    }

    private void writeStationData(java.util.List) throws java.io.IOException
    {
        java.lang.IllegalStateException $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r24;
        java.util.List r1;
        ucar.ma2.ArrayDouble$D1 $r3, $r4, $r5;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        ucar.unidata.geoloc.Station r16;
        java.util.HashMap $r2, $r17;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r9, $r10, $r11, $r12, $r13, $r14;
        ucar.ma2.ArrayChar$D2 $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        java.lang.String $r18, $r20, $r21, $r22;
        double $d0, $d1, $d2;
        java.io.PrintStream $r23;
        ucar.nc2.dt.point.WriterCFStationObsDataset$StationTracker $r19;
        java.lang.Object $r15;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r1 := @parameter0: java.util.List;

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List stnList> = r1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = new java.util.HashMap;

        $i1 = 2 * $i0;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>($i1);

        r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.HashMap stationMap> = $r2;

        $z0 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("stationMap created");

     label1:
        $r3 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r3.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r4 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r4.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r5 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r5.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        $r6 = new ucar.ma2.ArrayChar$D2;

        $i2 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: int name_strlen>;

        specialinvoke $r6.<ucar.ma2.ArrayChar$D2: void <init>(int,int)>($i0, $i2);

        $r7 = new ucar.ma2.ArrayChar$D2;

        $i3 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: int desc_strlen>;

        specialinvoke $r7.<ucar.ma2.ArrayChar$D2: void <init>(int,int)>($i0, $i3);

        $r8 = new ucar.ma2.ArrayChar$D2;

        $i4 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: int wmo_strlen>;

        specialinvoke $r8.<ucar.ma2.ArrayChar$D2: void <init>(int,int)>($i0, $i4);

        i5 = 0;

     label2:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if i5 >= $i6 goto label5;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        r16 = (ucar.unidata.geoloc.Station) $r15;

        $r17 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.HashMap stationMap>;

        $r18 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        $r19 = new ucar.nc2.dt.point.WriterCFStationObsDataset$StationTracker;

        specialinvoke $r19.<ucar.nc2.dt.point.WriterCFStationObsDataset$StationTracker: void <init>(ucar.nc2.dt.point.WriterCFStationObsDataset,int)>(r0, i5);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

        $d0 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLatitude()>();

        virtualinvoke $r3.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i5, $d0);

        $d1 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r4.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i5, $d1);

        $z3 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt>;

        if $z3 == 0 goto label3;

        $d2 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: double getAltitude()>();

        virtualinvoke $r5.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i5, $d2);

     label3:
        $r20 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getName()>();

        virtualinvoke $r6.<ucar.ma2.ArrayChar$D2: void setString(int,java.lang.String)>(i5, $r20);

        $r21 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getDescription()>();

        virtualinvoke $r7.<ucar.ma2.ArrayChar$D2: void setString(int,java.lang.String)>(i5, $r21);

        $z4 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId>;

        if $z4 == 0 goto label4;

        $r22 = interfaceinvoke r16.<ucar.unidata.geoloc.Station: java.lang.String getWmoId()>();

        virtualinvoke $r8.<ucar.ma2.ArrayChar$D2: void setString(int,java.lang.String)>(i5, $r22);

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        $r9 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r9.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("latitude", $r3);

        $r10 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r10.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("longitude", $r4);

        $z1 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useAlt>;

        if $z1 == 0 goto label6;

        $r14 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r14.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("altitude", $r5);

     label6:
        $r11 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r11.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("station_id", $r6);

        $r12 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r12.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("station_description", $r7);

        $z2 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean useWmoId>;

        if $z2 == 0 goto label7;

        $r13 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r13.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeNonRecordData(java.lang.String,ucar.ma2.Array)>("wmo_id", $r8);

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;

        virtualinvoke $r24.<java.lang.Exception: void printStackTrace()>();

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label9:
        return;

        catch java.lang.Exception from label5 to label7 with label8;
    }

    public void writeRecord(ucar.nc2.dt.StationObsDatatype, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.util.Date $r18;
        ucar.ma2.StructureData r11;
        ucar.nc2.dt.StationObsDatatype r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r1, $r3, $r15;
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        java.lang.StringBuilder $r20, $r22, $r23, $r24, $r26;
        ucar.unidata.geoloc.Station $r16, $r25;
        long $l1, $l2;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r4;
        int $i0, i3;
        ucar.nc2.Variable r6;
        java.lang.String $r7, $r8, $r9, $r10, $r12, $r27;
        java.io.PrintStream $r21;
        java.util.Iterator $r2;
        ucar.ma2.Array $r13;
        ucar.ma2.ArrayInt$D1 $r17, $r19;
        java.lang.Object $r5;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r14 := @parameter0: ucar.nc2.dt.StationObsDatatype;

        r11 := @parameter1: ucar.ma2.StructureData;

        $z0 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sobs= ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; station = ");

        $r25 = interfaceinvoke r14.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label1:
        $r1 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.Variable) $r5;

        $r7 = "time";

        $r8 = virtualinvoke r6.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        $r18 = interfaceinvoke r14.<ucar.nc2.dt.StationObsDatatype: java.util.Date getObservationTimeAsDate()>();

        $l1 = virtualinvoke $r18.<java.util.Date: long getTime()>();

        $l2 = $l1 / 1000L;

        i3 = (int) $l2;

        $r19 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 timeArray>;

        virtualinvoke $r19.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, i3);

        goto label5;

     label3:
        $r9 = "parent_index";

        $r10 = virtualinvoke r6.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label4;

        $r15 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List stnList>;

        $r16 = interfaceinvoke r14.<ucar.nc2.dt.StationObsDatatype: ucar.unidata.geoloc.Station getStation()>();

        $i0 = interfaceinvoke $r15.<java.util.List: int indexOf(java.lang.Object)>($r16);

        $r17 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.ma2.ArrayInt$D1 parentArray>;

        virtualinvoke $r17.<ucar.ma2.ArrayInt$D1: void set(int,int)>(0, $i0);

        goto label5;

     label4:
        $r12 = virtualinvoke r6.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r13 = virtualinvoke r11.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r12);

        virtualinvoke r6.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r13, 0);

     label5:
        goto label2;

     label6:
        $r4 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        $r3 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: java.util.List recordVars>;

        virtualinvoke $r4.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void writeRecordData(java.util.List)>($r3);

        return;
    }

    public void finish() throws java.io.IOException
    {
        ucar.nc2.dt.point.WriterCFStationObsDataset r0;
        ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream $r1;

        r0 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.WriterCFStationObsDataset: ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream ncfile>;

        virtualinvoke $r1.<ucar.nc2.dt.point.WriterCFStationObsDataset$NetcdfFileStream: void close()>();

        return;
    }

    private ucar.unidata.geoloc.LatLonRect getBoundingBox(java.util.List)
    {
        ucar.unidata.geoloc.Station r6, r7;
        ucar.unidata.geoloc.LatLonRect $r3;
        java.util.List r0;
        int $i0, i1;
        ucar.nc2.dt.point.WriterCFStationObsDataset r5;
        java.lang.Object $r1, $r4;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        double $d0, $d1, $d2, $d3;

        r5 := @this: ucar.nc2.dt.point.WriterCFStationObsDataset;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (ucar.unidata.geoloc.Station) $r1;

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $d0 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d1 = interfaceinvoke r6.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d0, $d1);

        $r3 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,double,double)>($r2, 0.001, 0.001);

        i1 = 1;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (ucar.unidata.geoloc.Station) $r4;

        $d2 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLatitude()>();

        $d3 = interfaceinvoke r7.<ucar.unidata.geoloc.Station: double getLongitude()>();

        virtualinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d2, $d3);

        virtualinvoke $r3.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonPoint)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static void main3(java.lang.String[]) throws java.io.IOException
    {
        ucar.ma2.StructureData $r28;
        ucar.nc2.dt.StationObsDatatype r30;
        java.io.DataOutputStream $r33;
        ucar.nc2.dt.StationObsDataset r3;
        ucar.nc2.constants.FeatureType $r1;
        ucar.nc2.dt.DataIterator $r20;
        boolean $z0;
        java.util.List $r14;
        ucar.nc2.VariableSimpleIF $r19;
        ucar.nc2.dt.point.WriterCFStationObsDataset $r35;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r23, $r24, $r25, $r31, $r34, $r38;
        ucar.unidata.geoloc.Station r17;
        long $l0, $l1, l2;
        java.lang.String[] r29;
        java.util.ArrayList $r36, $r37;
        ucar.nc2.dt.TypedDataset $r2;
        int $i4;
        java.lang.String $r12, $r26;
        java.io.PrintStream $r7, $r22;
        java.io.FileOutputStream $r32;
        java.lang.Object $r16, $r27;

        r29 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r2 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,java.lang.String,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r1, "C:/data/metars/Surface_METAR_20070329_0000.nc", null, $r31);

        r3 = (ucar.nc2.dt.StationObsDataset) $r2;

        $r32 = new java.io.FileOutputStream;

        specialinvoke $r32.<java.io.FileOutputStream: void <init>(java.lang.String)>("C:/temp/Surface_METAR_20070329_0000.stream.nc");

        $r33 = new java.io.DataOutputStream;

        specialinvoke $r33.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r32);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/metars/Surface_METAR_20070329_0000.nc");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" write to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/temp/Surface_METAR_20070329_0000.stream.nc");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r35 = new ucar.nc2.dt.point.WriterCFStationObsDataset;

        specialinvoke $r35.<ucar.nc2.dt.point.WriterCFStationObsDataset: void <init>(java.io.DataOutputStream,java.lang.String)>($r33, "test");

        $r14 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        r17 = (ucar.unidata.geoloc.Station) $r16;

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r17);

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r19 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: ucar.nc2.VariableSimpleIF getDataVariable(java.lang.String)>("wind_speed");

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r19);

        $i4 = (int) -1;

        virtualinvoke $r35.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeHeader(java.util.List,java.util.List,int)>($r36, $r37, $i4);

        $r20 = interfaceinvoke r3.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)>(r17);

     label1:
        $z0 = interfaceinvoke $r20.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r27 = interfaceinvoke $r20.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r30 = (ucar.nc2.dt.StationObsDatatype) $r27;

        $r28 = interfaceinvoke r30.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        virtualinvoke $r35.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeRecord(ucar.nc2.dt.StationObsDatatype,ucar.ma2.StructureData)>(r30, $r28);

        goto label1;

     label2:
        virtualinvoke $r35.<ucar.nc2.dt.point.WriterCFStationObsDataset: void finish()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That took = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

        return;
    }

    public static void rewrite(java.lang.String, java.lang.String, boolean, boolean) throws java.io.IOException
    {
        ucar.ma2.StructureData $r37, $r43;
        ucar.nc2.dt.StationObsDatatype r42, r47;
        java.io.DataOutputStream $r52;
        ucar.nc2.dt.StationObsDataset $r44;
        ucar.nc2.constants.FeatureType $r15;
        boolean z0, z1, $z2, $z3, $z4;
        ucar.nc2.dt.DataIterator $r26, $r40;
        java.util.List $r17, $r18;
        ucar.nc2.dt.point.WriterCFStationObsDataset $r54;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r23, $r24, $r29, $r30, $r31, $r32, $r33, $r34, $r48, $r50, $r53, $r55;
        ucar.nc2.NetcdfFile $r45;
        ucar.unidata.geoloc.Station r46;
        long $l0, $l1, $l2;
        ucar.nc2.dt.TypedDataset $r16;
        int $i4;
        java.lang.String r3, r6, $r12, $r25, $r35;
        java.io.PrintStream $r1, $r28;
        java.util.Iterator $r38;
        java.io.FileOutputStream $r51;
        java.lang.Object $r36, $r39, $r41;
        ucar.nc2.dataset.NetcdfDataset $r49;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite .nc files from ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inMem= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sort= ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if z0 == 0 goto label1;

        $r45 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String)>(r3);

        goto label2;

     label1:
        $r45 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>(r3);

     label2:
        $r49 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r49.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile)>($r45);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r15 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r16 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r15, $r49, null, $r50);

        $r44 = (ucar.nc2.dt.StationObsDataset) $r16;

        $r17 = interfaceinvoke $r44.<ucar.nc2.dt.StationObsDataset: java.util.List getStations()>();

        $r18 = interfaceinvoke $r44.<ucar.nc2.dt.StationObsDataset: java.util.List getDataVariables()>();

        $r51 = new java.io.FileOutputStream;

        specialinvoke $r51.<java.io.FileOutputStream: void <init>(java.lang.String)>(r6);

        $r52 = new java.io.DataOutputStream;

        specialinvoke $r52.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r51);

        $r54 = new ucar.nc2.dt.point.WriterCFStationObsDataset;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rewrite ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<ucar.nc2.dt.point.WriterCFStationObsDataset: void <init>(java.io.DataOutputStream,java.lang.String)>($r52, $r25);

        $i4 = (int) -1;

        virtualinvoke $r54.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeHeader(java.util.List,java.util.List,int)>($r17, $r18, $i4);

        if z1 == 0 goto label7;

        $r38 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r46 = (ucar.unidata.geoloc.Station) $r39;

        $r40 = interfaceinvoke $r44.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)>(r46);

     label4:
        $z4 = interfaceinvoke $r40.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r41 = interfaceinvoke $r40.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r42 = (ucar.nc2.dt.StationObsDatatype) $r41;

        $r43 = interfaceinvoke r42.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        virtualinvoke $r54.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeRecord(ucar.nc2.dt.StationObsDatatype,ucar.ma2.StructureData)>(r42, $r43);

        goto label4;

     label5:
        goto label3;

     label6:
        goto label9;

     label7:
        $r26 = interfaceinvoke $r44.<ucar.nc2.dt.StationObsDataset: ucar.nc2.dt.DataIterator getDataIterator(int)>(1000000);

     label8:
        $z2 = interfaceinvoke $r26.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r36 = interfaceinvoke $r26.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r47 = (ucar.nc2.dt.StationObsDatatype) $r36;

        $r37 = interfaceinvoke r47.<ucar.nc2.dt.StationObsDatatype: ucar.ma2.StructureData getData()>();

        virtualinvoke $r54.<ucar.nc2.dt.point.WriterCFStationObsDataset: void writeRecord(ucar.nc2.dt.StationObsDatatype,ucar.ma2.StructureData)>(r47, $r37);

        goto label8;

     label9:
        virtualinvoke $r54.<ucar.nc2.dt.point.WriterCFStationObsDataset: void finish()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took = ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r35);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r21;
        java.lang.String $r3, $r5, $r8, $r10, $r13, $r15, $r18, $r20;
        java.io.File $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r7, $r9, $r11, $r12, $r14, $r16, $r17, $r19;

        r21 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("C:/data/metars/Surface_METAR_20070329_0000.nc");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/temp/FU");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterCFStationObsDataset: void rewrite(java.lang.String,java.lang.String,boolean,boolean)>("C:/data/metars/Surface_METAR_20070329_0000.nc", $r5, 0, 0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/temp/FS");

        $r8 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterCFStationObsDataset: void rewrite(java.lang.String,java.lang.String,boolean,boolean)>("C:/data/metars/Surface_METAR_20070329_0000.nc", $r10, 0, 1);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/temp/MU");

        $r13 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterCFStationObsDataset: void rewrite(java.lang.String,java.lang.String,boolean,boolean)>("C:/data/metars/Surface_METAR_20070329_0000.nc", $r15, 1, 0);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/temp/MS");

        $r18 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterCFStationObsDataset: void rewrite(java.lang.String,java.lang.String,boolean,boolean)>("C:/data/metars/Surface_METAR_20070329_0000.nc", $r20, 1, 1);

        return;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r10, $r12, $r13, $r18, $r19, $r21;
        long $l0, $l2, l5;
        java.lang.String[] r0;
        int $i1, $i3, i4;
        java.lang.String $r7, $r14, $r16, $r17, $r20, $r22, r23, r24;
        java.io.PrintStream $r2, $r11;
        java.io.File $r8, r15;
        java.io.File[] $r9;

        r0 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r23 = "C:/temp2/";

        r24 = "C:/data/metars/";

        $i1 = lengthof r0;

        if $i1 <= 1 goto label1;

        r24 = r0[0];

        r23 = r0[1];

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite .nc files from ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r24);

        $r9 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        $i3 = lengthof $r9;

        i4 = 0;

     label2:
        if i4 >= $i3 goto label4;

        r15 = $r9[i4];

        $r16 = virtualinvoke r15.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r16.<java.lang.String: boolean endsWith(java.lang.String)>(".nc");

        if $z0 == 0 goto label3;

        $r17 = virtualinvoke r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r20 = virtualinvoke r15.<java.io.File: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.dt.point.WriterCFStationObsDataset: void rewrite(java.lang.String,java.lang.String,boolean,boolean)>($r17, $r22, 1, 1);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = $l2 - $l0;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("That took = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String parentName> = "parent_index";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String timeName> = "time";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String wmoName> = "wmo_id";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String descName> = "station_description";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String idName> = "station_id";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String altName> = "altitude";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String lonName> = "longitude";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String latName> = "latitude";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String stationDimName> = "station";

        <ucar.nc2.dt.point.WriterCFStationObsDataset: java.lang.String recordDimName> = "record";

        return;
    }
}
