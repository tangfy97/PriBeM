final class org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget extends org.waveprotocol.wave.model.document.operation.algorithm.Composer$PostTarget
{
    private int itemCount;
    final org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0;

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer, int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.Composer;

        i0 := @parameter1: int;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$PostTarget: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$1)>(r1, null);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount> = i0;

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPreTarget $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2, $r5, $r6, $r7;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3, $r8;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        if i0 > $i1 goto label1;

        $r7 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r8 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r7);

        interfaceinvoke $r8.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void retain(int)>(i0);

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r2);

        $i2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void retain(int)>($i2);

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r4 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPreTarget;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $i3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        $i4 = i0 - $i3;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPreTarget: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer,int)>($r5, $i4);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$502(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target)>($r6, $r4);

     label2:
        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r3, $r7, $r8, $r10;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$DeleteCharactersPreTarget $r6;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r4, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r5, $r9;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        if $i0 > $i1 goto label1;

        $r10 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r11 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r10);

        interfaceinvoke $r11.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteCharacters(java.lang.String)>(r2);

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>($i4);

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r3);

        $i2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteCharacters(java.lang.String)>($r5);

        $r7 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r6 = new org.waveprotocol.wave.model.document.operation.algorithm.Composer$DeleteCharactersPreTarget;

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $i3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        specialinvoke $r6.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$DeleteCharactersPreTarget: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.Composer,java.lang.String)>($r8, $r9);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$502(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target)>($r7, $r6);

     label2:
        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        java.lang.String r4;
        org.waveprotocol.wave.model.document.operation.Attributes r5;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r4, r5);

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>(1);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementEnd()>();

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>(1);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.Attributes r4, r5;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        r4 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r5 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r4, r5);

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>(1);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r4;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        r4 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: void access$700(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$200(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r2);

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r4);

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: void cancelRetain(int)>(1);

        return;
    }

    private void cancelRetain(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target $r3;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer $r1, $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget;

        i0 := @parameter0: int;

        $i1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        if i0 >= $i1 goto label1;

        $i2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount>;

        $i3 = $i2 - i0;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: int itemCount> = $i3;

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.Composer$RetainPostTarget: org.waveprotocol.wave.model.document.operation.algorithm.Composer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$800(org.waveprotocol.wave.model.document.operation.algorithm.Composer)>($r1);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Composer: org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target access$502(org.waveprotocol.wave.model.document.operation.algorithm.Composer,org.waveprotocol.wave.model.document.operation.algorithm.Composer$Target)>($r2, $r3);

     label2:
        return;
    }
}
