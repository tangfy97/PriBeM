public class org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration extends org.eclipse.jdt.internal.compiler.ast.ASTNode implements org.eclipse.jdt.internal.compiler.problem.ProblemSeverities, org.eclipse.jdt.internal.compiler.impl.ReferenceContext
{
    private static final java.util.Comparator STRING_LITERAL_COMPARATOR;
    private static final int STRING_LITERALS_INCREMENT;
    public org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage;
    public org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports;
    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types;
    public int[][] comments;
    public boolean ignoreFurtherInvestigation;
    public boolean ignoreMethodBodies;
    public org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope;
    public org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter;
    public org.eclipse.jdt.internal.compiler.CompilationResult compilationResult;
    public org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes;
    public int localTypeCount;
    public boolean isPropagatingInnerClassEmulation;
    public org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc;
    public org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags;
    private org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals;
    private int stringLiteralsPtr;
    private org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart;
    long[] suppressWarningIrritants;
    org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations;
    long[] suppressWarningScopePositions;
    int suppressWarningsCount;

    static void <clinit>()
    {
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1 $r0;

        <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int STRING_LITERALS_INCREMENT> = 10;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1: void <init>()>();

        <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: java.util.Comparator STRING_LITERAL_COMPARATOR> = $r0;

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter, org.eclipse.jdt.internal.compiler.CompilationResult, int)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.CompilationResult r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.CompilationResult;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ASTNode: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation> = 0;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreMethodBodies> = 0;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount> = 0;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult> = r2;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceStart> = 0;

        $i1 = i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int sourceEnd> = $i1;

        return;
    }

    public void abort(int, org.eclipse.jdt.core.compiler.CategorizedProblem)
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem r2;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3, $r5, $r7;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r4;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r6;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r0;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        i0 := @parameter0: int;

        r2 := @parameter1: org.eclipse.jdt.core.compiler.CategorizedProblem;

        lookupswitch(i0)
        {
            case 8: goto label1;
            case 16: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = new org.eclipse.jdt.internal.compiler.problem.AbortType;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.AbortType: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r5, r2);

        throw $r4;

     label2:
        $r0 = new org.eclipse.jdt.internal.compiler.problem.AbortMethod;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r3, r2);

        throw $r0;

     label3:
        $r6 = new org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r7, r2);

        throw $r6;
    }

    public void analyseCode()
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r6;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r5;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r1 == null goto label4;

        i1 = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i0 = lengthof $r2;

        goto label3;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r5 = $r3[i1];

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r4);

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label2;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void propagateInnerEmulationForAllLocalTypes()>();

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;

     label7:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit from label1 to label5 with label6;
    }

    public void cleanUp()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r6, $r7;
        int $i0, i1, i2, i3, i4, i5;
        org.eclipse.jdt.internal.compiler.ClassFile r5;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding r10;
        org.eclipse.jdt.internal.compiler.CompilationResult $r2, $r3;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] $r9;
        org.eclipse.jdt.internal.compiler.ClassFile[] $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r8;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r1 == null goto label5;

        i1 = 0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i2 = lengthof $r6;

        goto label2;

     label1:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r8 = $r7[i1];

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void cleanUp(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r8);

        i1 = i1 + 1;

     label2:
        if i1 < i2 goto label1;

        i3 = 0;

        i4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        goto label4;

     label3:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes>;

        r10 = $r9[i3];

        r10.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope> = null;

        r10.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: org.eclipse.jdt.internal.compiler.ast.CaseStatement enclosingCase> = null;

        i3 = i3 + 1;

     label4:
        if i3 < i4 goto label3;

     label5:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r2.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData recoveryScannerData> = null;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.ClassFile[] getClassFiles()>();

        i5 = 0;

        $i0 = lengthof $r4;

        goto label7;

     label6:
        r5 = $r4[i5];

        r5.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding referenceBinding> = null;

        r5.<org.eclipse.jdt.internal.compiler.ClassFile: java.util.Set innerClassesBindings> = null;

        r5.<org.eclipse.jdt.internal.compiler.ClassFile: java.util.List missingTypes> = null;

        i5 = i5 + 1;

     label7:
        if i5 < $i0 goto label6;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations> = null;

        return;
    }

    private void cleanUp(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2, $r3, $r4, $r10;
        org.eclipse.jdt.internal.compiler.CompilationResult $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r7, $r8;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, $r9;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r5;

        r5 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r1 == null goto label3;

        i1 = 0;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i0 = lengthof $r7;

        goto label2;

     label1:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r9 = $r8[i1];

        specialinvoke r5.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void cleanUp(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r9);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r2 == null goto label4;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAnnotationType()>();

        if $z0 == 0 goto label4;

        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r6.<org.eclipse.jdt.internal.compiler.CompilationResult: boolean hasAnnotations> = 1;

     label4:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r10 == null goto label5;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r3.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope> = null;

     label5:
        return;
    }

    public void checkUnusedImports()
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r1, $r3, $r5, $r9;
        org.eclipse.jdt.internal.compiler.ast.ImportReference r8;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r10;
        org.eclipse.jdt.internal.compiler.lookup.ImportBinding r7;
        int i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] $r2, $r4, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] imports>;

        if $r2 == null goto label4;

        i3 = 0;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] imports>;

        i0 = lengthof $r4;

        goto label3;

     label1:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.lookup.ImportBinding[] imports>;

        r7 = $r6[i3];

        r8 = r7.<org.eclipse.jdt.internal.compiler.lookup.ImportBinding: org.eclipse.jdt.internal.compiler.ast.ImportReference reference>;

        if r8 == null goto label2;

        $i1 = r8.<org.eclipse.jdt.internal.compiler.ast.ImportReference: int bits>;

        $i2 = $i1 & 2;

        if $i2 != 0 goto label2;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedImport(org.eclipse.jdt.internal.compiler.ast.ImportReference)>(r8);

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

     label4:
        return;
    }

    public org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()
    {
        org.eclipse.jdt.internal.compiler.CompilationResult $r1;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration declarationOfType(char[][])
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r2;
        char[][] r3;
        int $i0, i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4, $r5;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r3 := @parameter0: char[][];

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r4 = $r2[i1];

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration declarationOfType(char[][])>(r3);

        if $r5 == null goto label2;

        return $r5;

     label2:
        i1 = i1 + 1;

     label3:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i0 = lengthof $r1;

        if i1 < $i0 goto label1;

        return null;
    }

    public void finalizeProblems()
    {
        byte $b10, $b16, $b19, $b21, $b25, $b30, $b33, $b35, $b39, $b47, $b49;
        java.util.Map $r10, $r16;
        org.eclipse.jdt.internal.compiler.CompilationResult $r1, $r3, $r9, $r11, $r13, $r15, $r38;
        org.eclipse.jdt.internal.compiler.impl.Constant $r23, $r30, r44, r45;
        long $l6, $l7, $l8, $l9, $l11, $l12, $l15, $l18, $l20, $l23, $l24, l26, $l27, $l28, $l29, $l32, $l34, $l37, $l38, l41, $l42, $l45, $l46, $l48, l58, l64;
        org.eclipse.jdt.internal.compiler.ast.Annotation r40;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r17;
        long[] r4, $r7, $r8, $r18, $r27, $r28, $r35, $r36;
        int $i0, i1, $i2, $i3, $i4, $i5, $i13, $i14, $i17, $i22, $i31, $i36, i40, i43, i44, $i50, $i51, $i52, $i53, i54, i55, i56, i57, i59, i60, i61, i62, i63, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, $i77, $i79, $i81, $i83, $i85;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r5, $r25, $r32;
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] $r19;
        org.eclipse.jdt.internal.compiler.ast.MemberValuePair r41;
        java.util.Set $r12, $r14;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r6;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        java.lang.String $r24, $r31;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer r42;
        char[] $r20, $r21;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r26, $r33;
        org.eclipse.jdt.internal.compiler.ast.Expression[] r43;
        org.eclipse.jdt.internal.compiler.ast.Expression r22, $r29, $r34;
        boolean $z0, $z1, $z2, z3, $z4, z5;
        org.eclipse.jdt.core.compiler.CategorizedProblem $r37, r39;
        org.eclipse.jdt.core.compiler.CategorizedProblem[] r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        if $i0 != 0 goto label01;

        return;

     label01:
        i54 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        r2 = $r1.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.core.compiler.CategorizedProblem[] problems>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        i1 = $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        r4 = newarray (long)[$i2];

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        z3 = 0;

        i55 = 0;

        goto label13;

     label02:
        r39 = r2[i55];

        $i3 = virtualinvoke r39.<org.eclipse.jdt.core.compiler.CategorizedProblem: int getID()>();

        $z0 = virtualinvoke r39.<org.eclipse.jdt.core.compiler.CategorizedProblem: boolean isError()>();

        if $z0 == 0 goto label03;

        if $i3 == 536871547 goto label12;

        z3 = 1;

        goto label12;

     label03:
        $i4 = virtualinvoke r39.<org.eclipse.jdt.core.compiler.CategorizedProblem: int getSourceStart()>();

        $i5 = virtualinvoke r39.<org.eclipse.jdt.core.compiler.CategorizedProblem: int getSourceEnd()>();

        $l6 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.ProblemReporter: long getIrritant(int)>($i3);

        i56 = 0;

        i57 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        goto label11;

     label04:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions>;

        l58 = $r7[i56];

        $l7 = l58 >>> 32;

        i59 = (int) $l7;

        i60 = (int) l58;

        if $i4 >= i59 goto label05;

        goto label10;

     label05:
        if $i5 <= i60 goto label06;

        goto label10;

     label06:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $l8 = $r8[i56];

        $l9 = $l6 & $l8;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label07;

        goto label10;

     label07:
        i54 = i54 + 1;

        r2[i55] = null;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r10 = $r9.<org.eclipse.jdt.internal.compiler.CompilationResult: java.util.Map problemsMap>;

        if $r10 == null goto label08;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.CompilationResult: java.util.Map problemsMap>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r39);

     label08:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.CompilationResult: java.util.Set firstErrors>;

        if $r12 == null goto label09;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.CompilationResult: java.util.Set firstErrors>;

        interfaceinvoke $r14.<java.util.Set: boolean remove(java.lang.Object)>(r39);

     label09:
        $l11 = r4[i56];

        $l12 = $l11 | $l6;

        r4[i56] = $l12;

        goto label12;

     label10:
        i56 = i56 + 1;

     label11:
        if i56 < i57 goto label04;

     label12:
        i55 = i55 + 1;

     label13:
        if i55 < i1 goto label02;

        if i54 <= 0 goto label18;

        i61 = 0;

        i62 = 0;

        goto label17;

     label14:
        $r37 = r2[i61];

        if $r37 == null goto label16;

        if i61 <= i62 goto label15;

        $i51 = i62;

        i62 = i62 + 1;

        r2[$i51] = $r37;

        goto label16;

     label15:
        i62 = i62 + 1;

     label16:
        i61 = i61 + 1;

     label17:
        if i61 < i1 goto label14;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $i52 = $r38.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount>;

        $i53 = $i52 - i54;

        $r38.<org.eclipse.jdt.internal.compiler.CompilationResult: int problemCount> = $i53;

     label18:
        if z3 != 0 goto label45;

        $i13 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(18014398509481984L);

        $i77 = (int) -1;

        if $i13 == $i77 goto label45;

        $i14 = $i13 & 1;

        if $i14 != 0 goto label19;

        $z4 = 1;

        goto label20;

     label19:
        $z4 = 0;

     label20:
        z5 = $z4;

        i63 = 0;

        $i50 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        goto label44;

     label21:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations>;

        r40 = $r17[i63];

        if r40 != null goto label22;

        goto label43;

     label22:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        l64 = $r18[i63];

        if z5 == 0 goto label23;

        $l48 = l64 ^ -1L;

        $b49 = $l48 cmp 0L;

        if $b49 != 0 goto label23;

        goto label43;

     label23:
        $l15 = r4[i63];

        $b16 = l64 cmp $l15;

        if $b16 == 0 goto label43;

        $r19 = virtualinvoke r40.<org.eclipse.jdt.internal.compiler.ast.Annotation: org.eclipse.jdt.internal.compiler.ast.MemberValuePair[] memberValuePairs()>();

        i65 = 0;

        i66 = lengthof $r19;

        goto label42;

     label24:
        r41 = $r19[i65];

        $r21 = r41.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: char[] name>;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUE>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r21, $r20);

        if $z1 == 0 goto label41;

        r22 = r41.<org.eclipse.jdt.internal.compiler.ast.MemberValuePair: org.eclipse.jdt.internal.compiler.ast.Expression value>;

        $z2 = r22 instanceof org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        if $z2 == 0 goto label34;

        r42 = (org.eclipse.jdt.internal.compiler.ast.ArrayInitializer) r22;

        r43 = r42.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions>;

        if r43 == null goto label43;

        i67 = 0;

        i68 = lengthof r43;

        goto label33;

     label25:
        $r29 = r43[i67];

        r44 = $r29.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r30 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r44 == $r30 goto label32;

        $i31 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i31 != 11 goto label32;

        $r31 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $l32 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long warningTokenToIrritants(java.lang.String)>($r31);

        $b33 = $l32 cmp 0L;

        if $b33 == 0 goto label32;

        $l34 = $l32 ^ -1L;

        $b35 = $l34 cmp 0L;

        if $b35 == 0 goto label32;

        $i36 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>($l32);

        $i79 = (int) -1;

        if $i36 == $i79 goto label32;

        $l37 = r4[i63];

        $l38 = $l37 & $l32;

        $b39 = $l38 cmp 0L;

        if $b39 != 0 goto label32;

        if z5 == 0 goto label31;

        i40 = r22.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        i69 = r22.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        i70 = i63 - 1;

        goto label30;

     label26:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions>;

        l41 = $r35[i70];

        $l42 = l41 >>> 32;

        i43 = (int) $l42;

        i44 = (int) l41;

        if i40 >= i43 goto label27;

        goto label29;

     label27:
        if i69 <= i44 goto label28;

        goto label29;

     label28:
        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $l45 = $r36[i70];

        $l46 = $l45 ^ -1L;

        $b47 = $l46 cmp 0L;

        if $b47 != 0 goto label29;

        goto label43;

     label29:
        $i81 = (int) -1;

        i70 = i70 + $i81;

     label30:
        if i70 >= 0 goto label26;

     label31:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r33 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r34 = r43[i67];

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedWarningToken(org.eclipse.jdt.internal.compiler.ast.Expression)>($r34);

     label32:
        i67 = i67 + 1;

     label33:
        if i67 < i68 goto label25;

        goto label43;

     label34:
        r45 = r22.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r23 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if r45 == $r23 goto label43;

        $i17 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i17 != 11 goto label43;

        $r24 = virtualinvoke r45.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        $l18 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long warningTokenToIrritants(java.lang.String)>($r24);

        $b19 = $l18 cmp 0L;

        if $b19 == 0 goto label43;

        $l20 = $l18 ^ -1L;

        $b21 = $l20 cmp 0L;

        if $b21 == 0 goto label43;

        $i22 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>($l18);

        $i83 = (int) -1;

        if $i22 == $i83 goto label43;

        $l23 = r4[i63];

        $l24 = $l23 & $l18;

        $b25 = $l24 cmp 0L;

        if $b25 != 0 goto label43;

        if z5 == 0 goto label40;

        i71 = r22.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        i72 = r22.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceEnd>;

        i73 = i63 - 1;

        goto label39;

     label35:
        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions>;

        l26 = $r27[i73];

        $l27 = l26 >>> 32;

        i74 = (int) $l27;

        i75 = (int) l26;

        if i71 >= i74 goto label36;

        goto label38;

     label36:
        if i72 <= i75 goto label37;

        goto label38;

     label37:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $l28 = $r28[i73];

        $l29 = $l28 ^ -1L;

        $b30 = $l29 cmp 0L;

        if $b30 != 0 goto label38;

        goto label43;

     label38:
        $i85 = (int) -1;

        i73 = i73 + $i85;

     label39:
        if i73 >= 0 goto label35;

     label40:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r26 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedWarningToken(org.eclipse.jdt.internal.compiler.ast.Expression)>(r22);

        goto label43;

     label41:
        i65 = i65 + 1;

     label42:
        if i65 < i66 goto label24;

     label43:
        i63 = i63 + 1;

     label44:
        if i63 < $i50 goto label21;

     label45:
        return;
    }

    public void generateCode()
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r3, $r18;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r2, $r5, $r9, $r13, $r14, $r15, $r17, $r21;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r8, $r11;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r20;
        int i0, i1, i2, i3;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r6, $r7, $r10;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4, $r12, $r16, $r19;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label04;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r13 == null goto label03;

        i0 = 0;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i1 = lengthof $r14;

        goto label02;

     label01:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r16 = $r15[i0];

        $r16.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r19 = $r17[i0];

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r18);

        i0 = i0 + 1;

     label02:
        if i0 < i1 goto label01;

     label03:
        return;

     label04:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean isPackageInfo()>();

        if $z1 == 0 goto label05;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r5 == null goto label05;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r6 == null goto label05;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r8 == null goto label05;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r12 = $r9[0];

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r12.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r11;

     label05:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r21 == null goto label10;

        i2 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i3 = lengthof $r1;

        goto label07;

     label06:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r4 = $r2[i2];

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r3);

        i2 = i2 + 1;

     label07:
        if i2 < i3 goto label06;

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

     label10:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit from label05 to label08 with label09;
    }

    public char[] getFileName()
    {
        org.eclipse.jdt.internal.compiler.CompilationResult $r1;
        char[] $r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.CompilationResult: char[] getFileName()>();

        return $r2;
    }

    public char[] getMainTypeName()
    {
        int $i0, $i1, $i2, i3, $i4, i5, $i7;
        org.eclipse.jdt.internal.compiler.CompilationResult $r1, $r3, $r6;
        char[] $r5, $r7, $r8;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r2, $r4;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit>;

        if $r2 != null goto label4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.CompilationResult: char[] getFileName()>();

        $i0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(47, $r7);

        i3 = $i0 + 1;

        if i3 == 0 goto label1;

        $i2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(92, $r7);

        if i3 >= $i2 goto label2;

     label1:
        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(92, $r7);

        i3 = $i1 + 1;

     label2:
        $i4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(46, $r7);

        i5 = $i4;

        $i7 = (int) -1;

        if $i4 != $i7 goto label3;

        i5 = lengthof $r7;

     label3:
        $r8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r7, i3, i5);

        return $r8;

     label4:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: org.eclipse.jdt.internal.compiler.env.ICompilationUnit compilationUnit>;

        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getMainTypeName()>();

        return $r5;
    }

    public boolean isEmpty()
    {
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1;
        org.eclipse.jdt.internal.compiler.ast.ImportReference[] $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r3;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r1 != null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        if $r2 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r3 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPackageInfo()
    {
        char[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: char[] getMainTypeName()>();

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] PACKAGE_INFO_NAME>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r1, $r2);

        return $z0;
    }

    public boolean hasErrors()
    {
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation>;

        return $z0;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r3, $r5, $r6;
        java.lang.StringBuffer r4, $r8, $r9, $r12, $r13, $r15;
        int $i0, i1, i2, $i3, i4;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r1, r11, $r14;
        org.eclipse.jdt.internal.compiler.ast.ImportReference[] $r2, $r10, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r7;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        i1 := @parameter0: int;

        r4 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r1 == null goto label1;

        $r13 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i1, r4);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("package ");

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.ImportReference: java.lang.StringBuffer print(int,java.lang.StringBuffer,boolean)>(0, r4, 0);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        if $r2 == null goto label5;

        i2 = 0;

        goto label4;

     label2:
        $r9 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i1, r4);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("import ");

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        r11 = $r10[i2];

        $z0 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.ast.ImportReference: boolean isStatic()>();

        if $z0 == 0 goto label3;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static ");

     label3:
        $r12 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.ast.ImportReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r4);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";\n");

        i2 = i2 + 1;

     label4:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        $i3 = lengthof $r16;

        if i2 < $i3 goto label2;

     label5:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r3 == null goto label8;

        i4 = 0;

        goto label7;

     label6:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r7 = $r6[i4];

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i1, r4);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i4 = i4 + 1;

     label7:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $i0 = lengthof $r5;

        if i4 < $i0 goto label6;

     label8:
        return r4;
    }

    public void propagateInnerEmulationForAllLocalTypes()
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r3;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] $r1;
        int i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean isPropagatingInnerClassEmulation> = 1;

        i3 = 0;

        i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        goto label3;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes>;

        r2 = $r1[i3];

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label2;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: void updateInnerEmulationDependents()>();

     label2:
        i3 = i3 + 1;

     label3:
        if i3 < i0 goto label1;

        return;
    }

    public void recordStringLiteral(org.eclipse.jdt.internal.compiler.ast.StringLiteral, boolean)
    {
        boolean z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.util.HashSetOfInt $r1, $r7, $r10, $r11, $r12, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.StringLiteral r3, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13;
        org.eclipse.jdt.internal.compiler.ast.StringLiteral[] $r2, $r4, $r5, $r6, $r8, $r15, $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ast.StringLiteral;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        if $r1 == null goto label2;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        $i8 = r3.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        $z2 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: boolean contains(int)>($i8);

        if $z2 == 0 goto label1;

        return;

     label1:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        $i9 = r3.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: int add(int)>($i9);

        goto label6;

     label2:
        if z0 == 0 goto label6;

        $r7 = new org.eclipse.jdt.internal.compiler.util.HashSetOfInt;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr>;

        $i3 = $i2 + 10;

        specialinvoke $r7.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: void <init>(int)>($i3);

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart> = $r7;

        i10 = 0;

        goto label4;

     label3:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r9 = $r8[i10];

        $i5 = $r9.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: int add(int)>($i5);

        i10 = i10 + 1;

     label4:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr>;

        if i10 < $i4 goto label3;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        $z1 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: boolean contains(int)>($i6);

        if $z1 == 0 goto label5;

        return;

     label5:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.util.HashSetOfInt stringLiteralsStart>;

        $i7 = r3.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int sourceStart>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.util.HashSetOfInt: int add(int)>($i7);

     label6:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        if $r15 != null goto label7;

        $r6 = newarray (org.eclipse.jdt.internal.compiler.ast.StringLiteral)[10];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals> = $r6;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr> = 0;

        goto label8;

     label7:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        i11 = lengthof $r2;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr>;

        if $i0 != i11 goto label8;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $i1 = i11 + 10;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.ast.StringLiteral)[$i1];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, i11);

     label8:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr> = $i13;

        $r16[$i12] = r3;

        return;
    }

    public void recordSuppressWarnings(long, org.eclipse.jdt.internal.compiler.ast.Annotation, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Annotation r3;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        long l2, $l18, $l19, $l20, $l21;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r6, $r7, $r11, $r14;
        long[] $r1, $r2, $r4, $r5, $r8, $r9, $r10, $r12, $r13, $r15;
        int $i0, $i1, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        l2 := @parameter0: long;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Annotation;

        i3 := @parameter2: int;

        i4 := @parameter3: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        if $r1 != null goto label1;

        $r10 = newarray (long)[3];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants> = $r10;

        $r11 = newarray (org.eclipse.jdt.internal.compiler.ast.Annotation)[3];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations> = $r11;

        $r12 = newarray (long)[3];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions> = $r12;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $i1 = lengthof $r2;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        if $i1 != $i0 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $i6 = 2 * $i5;

        $r4 = newarray (long)[$i6];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants> = $r4;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i7);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $i9 = 2 * $i8;

        $r6 = newarray (org.eclipse.jdt.internal.compiler.ast.Annotation)[$i9];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations> = $r6;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i10);

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $i12 = 2 * $i11;

        $r8 = newarray (long)[$i12];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions> = $r8;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r8, 0, $i13);

     label2:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningIrritants>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $r13[$i14] = l2;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] suppressWarningAnnotations>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $r14[$i15] = r3;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: long[] suppressWarningScopePositions>;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount>;

        $i17 = $i16 + 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int suppressWarningsCount> = $i17;

        $l18 = (long) i3;

        $l19 = $l18 << 32;

        $l20 = (long) i4;

        $l21 = $l19 + $l20;

        $r15[$i16] = $l21;

        return;
    }

    public void record(org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] $r1, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        if $i0 != 0 goto label1;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)[5];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes> = $r5;

        goto label2;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes>;

        $i1 = lengthof $r1;

        if $i2 != $i1 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        $i4 = $i3 * 2;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)[$i4];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes> = $r3;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i5);

     label2:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding[] localTypes>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int localTypeCount> = $i7;

        $r6[$i6] = r2;

        return;
    }

    public void resolve()
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r6, $r10, $r15, $r19, $r26;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r2, $r16, $r18, $r22, $r30, $r33;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r21, $r29;
        byte b3;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r14;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r7, r32;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r1, $r4, $r5, $r17, $r35;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r9, $r13, $r24, $r28;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r31;
        int i0, $i1, $i2, i4;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r8, $r12, $r20, $r23, $r25, $r34;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding $r27;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        b3 = 0;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean isPackageInfo()>();

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r1 == null goto label04;

        if $z0 == 0 goto label04;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        r32 = $r17[0];

        $r18 = r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r18 != null goto label01;

        $r30 = new org.eclipse.jdt.internal.compiler.ast.Javadoc;

        $i2 = r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        $i1 = r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart>;

        specialinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void <init>(int,int)>($i2, $i1);

        r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc> = $r30;

     label01:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r19);

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r20 == null goto label02;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r24 == null goto label02;

        $r29 = r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r28 = $r25.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r27 = $r26.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.lookup.PackageBinding fPackage>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void resolveAnnotations(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Annotation[],org.eclipse.jdt.internal.compiler.lookup.Binding)>($r29, $r28, $r27);

     label02:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r33 == null goto label03;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r21 = r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolve(org.eclipse.jdt.internal.compiler.lookup.MethodScope)>($r21);

     label03:
        b3 = 1;

        goto label05;

     label04:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r2 == null goto label05;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolve(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r15);

     label05:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r34 == null goto label06;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r9 == null goto label06;

        if $z0 != 0 goto label06;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r14 = $r13[0];

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidFileNameForPackageAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation)>($r14);

     label06:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r35 == null goto label09;

        i4 = b3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i0 = lengthof $r4;

        goto label08;

     label07:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r7 = $r5[i4];

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r6);

        i4 = i4 + 1;

     label08:
        if i4 < i0 goto label07;

     label09:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.CompilationResult: boolean hasErrors()>();

        if $z1 != 0 goto label10;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void checkUnusedImports()>();

     label10:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void reportNLSProblems()>();

     label11:
        goto label13;

     label12:
        $r31 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;

     label13:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit from label06 to label11 with label12;
    }

    private void reportNLSProblems()
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r8, $r13, $r17, $r21, $r24, $r27, $r34, $r41;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.StringLiteral $r11, $r37, r45;
        org.eclipse.jdt.internal.compiler.parser.NLSTag r16, r20, r44, r46;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r9, $r14, $r18, $r22, $r25, $r28, $r35, $r42;
        org.eclipse.jdt.internal.compiler.parser.NLSTag[] $r1, $r2, $r3, $r12, $r15, $r19, $r23, $r26, $r40;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, i22, $i24;
        org.eclipse.jdt.internal.compiler.ast.StringLiteral[] $r4, $r6, $r7, $r10, $r29, $r30, $r31, $r33, $r36, $r38, $r39, $r43;
        java.util.Comparator $r5, $r32;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        if $r1 != null goto label01;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        if $r43 == null goto label35;

     label01:
        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: int stringLiteralsPtr>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        if $r2 != null goto label02;

        $i14 = 0;

        goto label03;

     label02:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $i14 = lengthof $r3;

     label03:
        i0 = $i14;

        if $i13 != 0 goto label07;

        if $i14 == 0 goto label35;

        i15 = 0;

        goto label06;

     label04:
        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        r44 = $r40[i15];

        if r44 == null goto label05;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r42 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i12 = r44.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int start>;

        $i11 = r44.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int end>;

        virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryNLSTags(int,int)>($i12, $i11);

     label05:
        i15 = i15 + 1;

     label06:
        if i15 < i0 goto label04;

        goto label35;

     label07:
        if $i14 != 0 goto label11;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $i10 = lengthof $r31;

        if $i10 == $i13 goto label08;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r38 = newarray (org.eclipse.jdt.internal.compiler.ast.StringLiteral)[$i13];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals> = $r38;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r39, 0, $r38, 0, $i13);

     label08:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r32 = <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: java.util.Comparator STRING_LITERAL_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r33, $r32);

        i16 = 0;

        goto label10;

     label09:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r35 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r37 = $r36[i16];

        virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r37);

        i16 = i16 + 1;

     label10:
        if i16 < $i13 goto label09;

        goto label35;

     label11:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $i1 = lengthof $r4;

        if $i1 == $i13 goto label12;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r29 = newarray (org.eclipse.jdt.internal.compiler.ast.StringLiteral)[$i13];

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals> = $r29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r30, 0, $r29, 0, $i13);

     label12:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r5 = <org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: java.util.Comparator STRING_LITERAL_COMPARATOR>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r6, $r5);

        i17 = 1;

        $i24 = (int) -1;

        i18 = $i24;

        i19 = 0;

        i20 = 0;

        goto label29;

     label13:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        r45 = $r7[i20];

        i21 = r45.<org.eclipse.jdt.internal.compiler.ast.StringLiteral: int lineNumber>;

        if i18 == i21 goto label14;

        i17 = 1;

        i18 = i21;

        goto label15;

     label14:
        i17 = i17 + 1;

     label15:
        if i19 >= i0 goto label31;

        goto label27;

     label16:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        r16 = $r15[i19];

        if r16 != null goto label17;

        goto label26;

     label17:
        i4 = r16.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int lineNumber>;

        if i21 >= i4 goto label18;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r45);

        goto label28;

     label18:
        if i21 != i4 goto label25;

        $i7 = r16.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int index>;

        if $i7 != i17 goto label19;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $r26[i19] = null;

        i19 = i19 + 1;

        goto label28;

     label19:
        i22 = i19 + 1;

        goto label24;

     label20:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        r20 = $r19[i22];

        if r20 != null goto label21;

        goto label23;

     label21:
        i8 = r20.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int lineNumber>;

        if i21 != i8 goto label22;

        $i9 = r20.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int index>;

        if $i9 != i17 goto label23;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        $r23[i22] = null;

        goto label28;

     label22:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r45);

        goto label28;

     label23:
        i22 = i22 + 1;

     label24:
        if i22 < i0 goto label20;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r45);

        goto label28;

     label25:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i6 = r16.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int start>;

        $i5 = r16.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int end>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryNLSTags(int,int)>($i6, $i5);

     label26:
        i19 = i19 + 1;

     label27:
        if i19 < i0 goto label16;

        goto label31;

     label28:
        i20 = i20 + 1;

     label29:
        if i20 < $i13 goto label13;

        goto label31;

     label30:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals>;

        $r11 = $r10[i20];

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void nonExternalizedStringLiteral(org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r11);

        i20 = i20 + 1;

     label31:
        if i20 < $i13 goto label30;

        if i19 >= i0 goto label35;

        goto label34;

     label32:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.parser.NLSTag[] nlsTags>;

        r46 = $r12[i19];

        if r46 == null goto label33;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i3 = r46.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int start>;

        $i2 = r46.<org.eclipse.jdt.internal.compiler.parser.NLSTag: int end>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryNLSTags(int,int)>($i3, $i2);

     label33:
        i19 = i19 + 1;

     label34:
        if i19 < i0 goto label32;

     label35:
        return;
    }

    public void tagAsHavingErrors()
    {
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r2, $r8, $r12, $r14, r24, $r28;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r17, $r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r26;
        org.eclipse.jdt.internal.compiler.ASTVisitor r1;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r21;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r9, r25;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r3, $r5, $r6, $r7, $r16;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] r20;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r23;
        int i0, i1, i2, i3, i4, i5;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r13, $r15, $r18, $r19, $r27;
        org.eclipse.jdt.internal.compiler.ast.ImportReference[] $r4, $r10, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r24 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r0, $r2);

        if $z1 == 0 goto label12;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r3 == null goto label05;

        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean isPackageInfo()>();

        if $z2 == 0 goto label05;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        r25 = $r16[0];

        r26 = r25.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r17 == null goto label02;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r26);

     label02:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r18 == null goto label05;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        r20 = $r19.<org.eclipse.jdt.internal.compiler.ast.ImportReference: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if r20 == null goto label05;

        i0 = lengthof r20;

        i1 = 0;

        goto label04;

     label03:
        $r21 = r20[i1];

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r26);

        i1 = i1 + 1;

     label04:
        if i1 < i0 goto label03;

     label05:
        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        if $r27 == null goto label06;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.ImportReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r1, $r14);

     label06:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        if $r4 == null goto label09;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        i2 = lengthof $r10;

        i3 = 0;

        goto label08;

     label07:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        $r13 = $r11[i3];

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.ImportReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r1, $r12);

        i3 = i3 + 1;

     label08:
        if i3 < i2 goto label07;

     label09:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        if $r5 == null goto label12;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        i4 = lengthof $r6;

        i5 = 0;

        goto label11;

     label10:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types>;

        $r9 = $r7[i5];

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r1, $r8);

        i5 = i5 + 1;

     label11:
        if i5 < i4 goto label10;

     label12:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r0, $r28);

     label13:
        goto label15;

     label14:
        $r23 := @caughtexception;

     label15:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit from label01 to label13 with label14;
    }
}
