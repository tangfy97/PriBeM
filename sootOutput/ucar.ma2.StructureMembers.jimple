public class ucar.ma2.StructureMembers extends java.lang.Object
{
    private java.lang.String name;
    private java.util.Map memberHash;
    private java.util.List members;
    private int structureSize;

    public void <init>(java.lang.String)
    {
        ucar.ma2.StructureMembers r0;
        int $i1;
        java.lang.String r1;
        java.util.ArrayList $r3;

        r0 := @this: ucar.ma2.StructureMembers;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<ucar.ma2.StructureMembers: int structureSize> = $i1;

        r0.<ucar.ma2.StructureMembers: java.lang.String name> = r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.ma2.StructureMembers: java.util.List members> = $r3;

        return;
    }

    public void <init>(ucar.ma2.StructureMembers)
    {
        ucar.ma2.StructureMembers$Member r8, $r14;
        java.util.ArrayList $r13;
        int $i0, $i2;
        java.lang.String $r2;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.List $r4, $r5;
        ucar.ma2.StructureMembers r0, r1, $r10, $r12, $r15;
        java.lang.Object $r7;

        r0 := @this: ucar.ma2.StructureMembers;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<ucar.ma2.StructureMembers: int structureSize> = $i2;

        $r2 = r1.<ucar.ma2.StructureMembers: java.lang.String name>;

        r0.<ucar.ma2.StructureMembers: java.lang.String name> = $r2;

        $r13 = new java.util.ArrayList;

        $r4 = virtualinvoke r1.<ucar.ma2.StructureMembers: java.util.List getMembers()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<ucar.ma2.StructureMembers: java.util.List members> = $r13;

        $r5 = r1.<ucar.ma2.StructureMembers: java.util.List members>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.ma2.StructureMembers$Member) $r7;

        $r14 = new ucar.ma2.StructureMembers$Member;

        specialinvoke $r14.<ucar.ma2.StructureMembers$Member: void <init>(ucar.ma2.StructureMembers,ucar.ma2.StructureMembers$Member)>(r0, r8);

        virtualinvoke r0.<ucar.ma2.StructureMembers: void addMember(ucar.ma2.StructureMembers$Member)>($r14);

        $r10 = staticinvoke <ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers access$000(ucar.ma2.StructureMembers$Member)>(r8);

        if $r10 == null goto label2;

        $r15 = new ucar.ma2.StructureMembers;

        $r12 = staticinvoke <ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers access$000(ucar.ma2.StructureMembers$Member)>(r8);

        specialinvoke $r15.<ucar.ma2.StructureMembers: void <init>(ucar.ma2.StructureMembers)>($r12);

        staticinvoke <ucar.ma2.StructureMembers$Member: ucar.ma2.StructureMembers access$002(ucar.ma2.StructureMembers$Member,ucar.ma2.StructureMembers)>($r14, $r15);

     label2:
        goto label1;

     label3:
        return;
    }

    public java.lang.String getName()
    {
        ucar.ma2.StructureMembers r0;
        java.lang.String $r1;

        r0 := @this: ucar.ma2.StructureMembers;

        $r1 = r0.<ucar.ma2.StructureMembers: java.lang.String name>;

        return $r1;
    }

    public void addMember(ucar.ma2.StructureMembers$Member)
    {
        java.util.List $r2;
        ucar.ma2.StructureMembers r0;
        java.util.Map $r3, $r4;
        java.lang.String $r5;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureMembers;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = r0.<ucar.ma2.StructureMembers: java.util.List members>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        if $r3 == null goto label1;

        $r4 = r0.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        $r5 = virtualinvoke r1.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

     label1:
        return;
    }

    public ucar.ma2.StructureMembers$Member addMember(java.lang.String, java.lang.String, java.lang.String, ucar.ma2.DataType, int[])
    {
        ucar.ma2.StructureMembers r1;
        int[] r6;
        ucar.ma2.DataType r5;
        java.lang.String r2, r3, r4;
        ucar.ma2.StructureMembers$Member $r0;

        r1 := @this: ucar.ma2.StructureMembers;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: ucar.ma2.DataType;

        r6 := @parameter4: int[];

        $r0 = new ucar.ma2.StructureMembers$Member;

        specialinvoke $r0.<ucar.ma2.StructureMembers$Member: void <init>(ucar.ma2.StructureMembers,java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>(r1, r2, r3, r4, r5, r6);

        virtualinvoke r1.<ucar.ma2.StructureMembers: void addMember(ucar.ma2.StructureMembers$Member)>($r0);

        return $r0;
    }

    public void hideMember(ucar.ma2.StructureMembers$Member)
    {
        java.util.List $r2;
        ucar.ma2.StructureMembers r1;
        ucar.ma2.StructureMembers$Member r0;

        r1 := @this: ucar.ma2.StructureMembers;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<ucar.ma2.StructureMembers: java.util.List members>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public int getStructureSize()
    {
        int $i0, $i1;
        ucar.ma2.StructureMembers r0;

        r0 := @this: ucar.ma2.StructureMembers;

        $i0 = r0.<ucar.ma2.StructureMembers: int structureSize>;

        if $i0 >= 0 goto label1;

        specialinvoke r0.<ucar.ma2.StructureMembers: void calcStructureSize()>();

     label1:
        $i1 = r0.<ucar.ma2.StructureMembers: int structureSize>;

        return $i1;
    }

    private void calcStructureSize()
    {
        java.util.Iterator $r2;
        ucar.ma2.StructureMembers$Member r4;
        java.util.List $r1;
        ucar.ma2.StructureMembers r0;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: ucar.ma2.StructureMembers;

        r0.<ucar.ma2.StructureMembers: int structureSize> = 0;

        $r1 = r0.<ucar.ma2.StructureMembers: java.util.List members>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.ma2.StructureMembers$Member) $r3;

        $i0 = r0.<ucar.ma2.StructureMembers: int structureSize>;

        $i1 = virtualinvoke r4.<ucar.ma2.StructureMembers$Member: int getSizeBytes()>();

        $i2 = $i0 + $i1;

        r0.<ucar.ma2.StructureMembers: int structureSize> = $i2;

        goto label1;

     label2:
        return;
    }

    public void setStructureSize(int)
    {
        int i0;
        ucar.ma2.StructureMembers r0;

        r0 := @this: ucar.ma2.StructureMembers;

        i0 := @parameter0: int;

        r0.<ucar.ma2.StructureMembers: int structureSize> = i0;

        return;
    }

    public java.util.List getMembers()
    {
        java.util.List $r1;
        ucar.ma2.StructureMembers r0;

        r0 := @this: ucar.ma2.StructureMembers;

        $r1 = r0.<ucar.ma2.StructureMembers: java.util.List members>;

        return $r1;
    }

    public java.util.List getMemberNames()
    {
        java.util.Iterator $r3;
        ucar.ma2.StructureMembers$Member r5;
        java.util.ArrayList $r0;
        java.util.List $r2;
        ucar.ma2.StructureMembers r1;
        java.lang.Object $r4;
        java.lang.String $r6;
        boolean $z0;

        r1 := @this: ucar.ma2.StructureMembers;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<ucar.ma2.StructureMembers: java.util.List members>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.ma2.StructureMembers$Member) $r4;

        $r6 = virtualinvoke r5.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    public ucar.ma2.StructureMembers$Member getMember(int)
    {
        java.util.List $r1;
        ucar.ma2.StructureMembers r0;
        int i0;
        java.lang.Object $r2;
        ucar.ma2.StructureMembers$Member $r3;

        r0 := @this: ucar.ma2.StructureMembers;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.StructureMembers: java.util.List members>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (ucar.ma2.StructureMembers$Member) $r2;

        return $r3;
    }

    public ucar.ma2.StructureMembers$Member findMember(java.lang.String)
    {
        java.util.HashMap $r7;
        ucar.ma2.StructureMembers$Member $r5, r11;
        java.util.Map $r2, $r3, $r12;
        int $i0, $i1, i2;
        java.lang.String r0, $r13;
        double $d0, $d1;
        boolean $z0;
        java.util.Iterator $r9;
        java.util.List $r6, $r8;
        ucar.ma2.StructureMembers r1;
        java.lang.Object $r4, $r10;

        r1 := @this: ucar.ma2.StructureMembers;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        if $r2 != null goto label3;

        $r6 = r1.<ucar.ma2.StructureMembers: java.util.List members>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $d0 = (double) $i0;

        $d1 = $d0 / 0.75;

        $i1 = (int) $d1;

        i2 = $i1 + 1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>(int)>(i2);

        r1.<ucar.ma2.StructureMembers: java.util.Map memberHash> = $r7;

        $r8 = r1.<ucar.ma2.StructureMembers: java.util.List members>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (ucar.ma2.StructureMembers$Member) $r10;

        $r12 = r1.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        $r13 = virtualinvoke r11.<ucar.ma2.StructureMembers$Member: java.lang.String getName()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r11);

        goto label2;

     label3:
        $r3 = r1.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (ucar.ma2.StructureMembers$Member) $r4;

        return $r5;
    }

    static java.util.Map access$100(ucar.ma2.StructureMembers)
    {
        ucar.ma2.StructureMembers r0;
        java.util.Map $r1;

        r0 := @parameter0: ucar.ma2.StructureMembers;

        $r1 = r0.<ucar.ma2.StructureMembers: java.util.Map memberHash>;

        return $r1;
    }
}
