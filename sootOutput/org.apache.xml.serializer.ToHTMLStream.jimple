public class org.apache.xml.serializer.ToHTMLStream extends org.apache.xml.serializer.ToStream
{
    protected boolean m_inDTD;
    private boolean m_inBlockElem;
    protected static final org.apache.xml.serializer.CharInfo m_htmlcharInfo;
    static final org.apache.xml.utils.Trie m_elementFlags;
    private static final org.apache.xml.serializer.ElemDesc m_dummy;
    private boolean m_specialEscapeURLs;
    private boolean m_omitMetaTag;

    public void setSpecialEscapeURLs(boolean)
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs> = z0;

        return;
    }

    public void setOmitMetaTag(boolean)
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        z0 := @parameter0: boolean;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag> = z0;

        return;
    }

    public void setOutputFormat(java.util.Properties)
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.util.Properties r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.util.Properties;

        $z0 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)>("{http://xml.apache.org/xalan}use-url-escaping", r1);

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs> = $z0;

        $z1 = staticinvoke <org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)>("{http://xml.apache.org/xalan}omit-meta-tag", r1);

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag> = $z1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void setOutputFormat(java.util.Properties)>(r1);

        return;
    }

    private final boolean getSpecialEscapeURLs()
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        $z0 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs>;

        return $z0;
    }

    private final boolean getOmitMetaTag()
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        $z0 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag>;

        return $z0;
    }

    public static final org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)
    {
        org.apache.xml.utils.Trie $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        org.apache.xml.serializer.ElemDesc $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>(r0);

        if null == $r2 goto label1;

        $r4 = (org.apache.xml.serializer.ElemDesc) $r2;

        return $r4;

     label1:
        $r3 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc m_dummy>;

        return $r3;
    }

    public void <init>()
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        org.apache.xml.serializer.NamespaceMappings $r2;
        org.apache.xml.serializer.CharInfo $r1;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void <init>()>();

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inDTD> = 0;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem> = 0;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs> = 1;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag> = 0;

        $r1 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.CharInfo m_htmlcharInfo>;

        r0.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo> = $r1;

        $r2 = new org.apache.xml.serializer.NamespaceMappings;

        specialinvoke $r2.<org.apache.xml.serializer.NamespaceMappings: void <init>()>();

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings m_prefixMap> = $r2;

        return;
    }

    protected void startDocumentInternal() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r5;
        java.io.Writer $r3;
        java.io.IOException $r4;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 1;

        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 0;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setOmitXMLDeclaration(boolean)>(1);

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl>;

        if 1 != $z0 goto label9;

        $r1 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()>();

        $r2 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypePublic()>();

        if null != $r1 goto label1;

        if null == $r2 goto label9;

     label1:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

     label2:
        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>("<!DOCTYPE HTML");

        if null == $r2 goto label3;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(" PUBLIC \"");

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r2);

        virtualinvoke $r3.<java.io.Writer: void write(int)>(34);

     label3:
        if null == $r1 goto label6;

        if null != $r2 goto label4;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(" SYSTEM \"");

        goto label5;

     label4:
        virtualinvoke $r3.<java.io.Writer: void write(int)>(34);

     label5:
        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.Writer: void write(int)>(34);

     label6:
        virtualinvoke $r3.<java.io.Writer: void write(int)>(62);

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputLineSep()>();

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label9:
        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToOutputDocTypeDecl> = 0;

        return;

        catch java.io.IOException from label2 to label7 with label8;
    }

    public final void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r2;
        org.apache.xml.serializer.SerializerTrace $r3;
        java.io.IOException $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushPending()>();

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext>;

        if $z1 != 0 goto label4;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputLineSep()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new org.xml.sax.SAXException;

        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r1);

        throw $r2;

     label4:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushWriter()>();

        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label5;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndDoc()>();

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z9, $z10, $z11, $z12, $z13;
        org.apache.xml.serializer.ElemDesc $r3;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r16;
        java.io.Writer $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.xml.sax.Attributes r4;
        java.lang.String r1, r2, r6, $r8, $r9, $r14;
        org.apache.xml.serializer.ElemContext $r7, $r10, $r11, $r12, r17;
        java.io.IOException $r15;
        org.apache.xml.serializer.SerializerTrace $r5;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        r17 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = r17.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void closeStartTag()>();

        r17.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

        goto label03;

     label01:
        $z1 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen> = 0;

        goto label03;

     label02:
        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z2 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument> = 0;

     label03:
        if null == r1 goto label04;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 0 goto label04;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r6, r2, r4);

        return;

     label04:
        $r3 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)>(r2);

        $i0 = virtualinvoke $r3.<org.apache.xml.serializer.ElemDesc: int getFlags()>();

        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z3 == 0 goto label12;

        $i4 = $i0 & 8;

        if $i4 == 0 goto label05;

        $z13 = 1;

        $z12 = 1;

        goto label06;

     label05:
        $z13 = 0;

        $z12 = 0;

     label06:
        z9 = $z12;

        $z6 = r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        if $z6 == 0 goto label07;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        goto label09;

     label07:
        $r14 = r17.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        if null == $r14 goto label09;

        $z7 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem>;

        if $z7 == 0 goto label08;

        if $z13 == 0 goto label09;

     label08:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label09:
        if z9 != 0 goto label10;

        $z10 = 1;

        goto label11;

     label10:
        $z10 = 0;

     label11:
        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem> = $z10;

     label12:
        if r4 == null goto label13;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void addAttributes(org.xml.sax.Attributes)>(r4);

     label13:
        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r13 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r13.<java.io.Writer: void write(int)>(60);

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>(r2);

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r5 == null goto label14;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void firePseudoAttributes()>();

     label14:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label15;

        $r10 = virtualinvoke r17.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext push()>();

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r10;

        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r11.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName> = r2;

        $r12 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r12.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemDesc m_elementDesc> = $r3;

        return;

     label15:
        $r7 = virtualinvoke r17.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext push(java.lang.String,java.lang.String,java.lang.String)>(r1, r6, r2);

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r7;

        $r7.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemDesc m_elementDesc> = $r3;

        $i2 = $i0 & 256;

        if $i2 == 0 goto label16;

        $z11 = 1;

        goto label17;

     label16:
        $z11 = 0;

     label17:
        $r7.<org.apache.xml.serializer.ElemContext: boolean m_isRaw> = $z11;

        $i3 = $i0 & 4194304;

        if $i3 == 0 goto label19;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void closeStartTag()>();

        $r7.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

        $z4 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag>;

        if $z4 != 0 goto label19;

        $z5 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z5 == 0 goto label18;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label18:
        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>("<META http-equiv=\"Content-Type\" content=\"text/html; charset=");

        $r8 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        $r9 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>($r8);

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>($r9);

        virtualinvoke $r13.<java.io.Writer: void write(java.lang.String)>("\">");

     label19:
        goto label21;

     label20:
        $r15 := @caughtexception;

        $r16 = new org.xml.sax.SAXException;

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r15);

        throw $r16;

     label21:
        return;

        catch java.io.IOException from label04 to label19 with label20;
    }

    public final void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.AttributesImplSerializer $r3, $r10;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z11, z12, $z13, $z14, $z15, $z16, $z17;
        org.apache.xml.serializer.ElemDesc $r12;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r15;
        java.io.Writer $r9, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1, r8, r13;
        org.apache.xml.serializer.ElemContext $r7, $r11, $r17;
        java.io.IOException $r14;
        org.apache.xml.serializer.SerializerTrace $r2, $r4;
        org.apache.xml.utils.BoolStack $r5, $r6;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r13 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_cdataTagOpen>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void closeCDATA()>();

     label01:
        if null == r1 goto label02;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i6 <= 0 goto label02;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r13, r8);

        return;

     label02:
        $r11 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r12 = $r11.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemDesc m_elementDesc>;

        $i0 = virtualinvoke $r12.<org.apache.xml.serializer.ElemDesc: int getFlags()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        z1 = $z9;

        $z2 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z2 == 0 goto label13;

        $i3 = $i0 & 8;

        if $i3 == 0 goto label05;

        $z17 = 1;

        $z16 = 1;

        goto label06;

     label05:
        $z17 = 0;

        $z16 = 0;

     label06:
        z11 = $z16;

        z12 = 0;

        $z6 = r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        if $z6 == 0 goto label07;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 0;

        goto label09;

     label07:
        $z7 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z7 == 0 goto label09;

        $z8 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem>;

        if $z8 == 0 goto label08;

        if $z17 == 0 goto label09;

     label08:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

        z12 = 1;

     label09:
        $z13 = $r11.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z13 != 0 goto label10;

        if z12 == 0 goto label10;

        $i4 = $r11.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        $i5 = $i4 - 1;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent(int)>($i5);

     label10:
        if z11 != 0 goto label11;

        $z14 = 1;

        goto label12;

     label11:
        $z14 = 0;

     label12:
        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem> = $z14;

     label13:
        $r16 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $z15 = $r11.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z15 != 0 goto label14;

        virtualinvoke $r16.<java.io.Writer: void write(java.lang.String)>("</");

        virtualinvoke $r16.<java.io.Writer: void write(java.lang.String)>(r8);

        virtualinvoke $r16.<java.io.Writer: void write(int)>(62);

        goto label18;

     label14:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label15;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>(r8);

     label15:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i2 = virtualinvoke $r3.<org.xml.sax.helpers.AttributesImpl: int getLength()>();

        if $i2 <= 0 goto label16;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void processAttributes(java.io.Writer,int)>($r9, $i2);

        $r10 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r10.<org.apache.xml.serializer.AttributesImplSerializer: void clear()>();

     label16:
        if z1 != 0 goto label17;

        virtualinvoke $r16.<java.io.Writer: void write(java.lang.String)>("></");

        virtualinvoke $r16.<java.io.Writer: void write(java.lang.String)>(r8);

        virtualinvoke $r16.<java.io.Writer: void write(int)>(62);

        goto label18;

     label17:
        virtualinvoke $r16.<java.io.Writer: void write(int)>(62);

     label18:
        $i7 = $i0 & 2097152;

        if $i7 == 0 goto label19;

        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

     label19:
        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r4 == null goto label20;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEndElem(java.lang.String)>(r8);

     label20:
        if z1 == 0 goto label21;

        $r7 = $r11.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext m_prev>;

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r7;

        return;

     label21:
        $z3 = $r11.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z3 != 0 goto label22;

        $z4 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z4 == 0 goto label22;

        $r5 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z5 = virtualinvoke $r5.<org.apache.xml.utils.BoolStack: boolean isEmpty()>();

        if $z5 != 0 goto label22;

        $r6 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        virtualinvoke $r6.<org.apache.xml.utils.BoolStack: boolean pop()>();

     label22:
        $r17 = $r11.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemContext m_prev>;

        r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext> = $r17;

     label23:
        goto label25;

     label24:
        $r14 := @caughtexception;

        $r15 = new org.xml.sax.SAXException;

        specialinvoke $r15.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r14);

        throw $r15;

     label25:
        return;

        catch java.io.IOException from label02 to label23 with label24;
    }

    protected void processAttribute(java.io.Writer, java.lang.String, java.lang.String, org.apache.xml.serializer.ElemDesc) throws java.io.IOException
    {
        org.apache.xml.serializer.ElemDesc r2;
        org.apache.xml.serializer.ToHTMLStream r4;
        java.io.Writer r0;
        int $i0;
        java.lang.String r1, r3, $r5;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: org.apache.xml.serializer.ToHTMLStream;

        r0 := @parameter0: java.io.Writer;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: org.apache.xml.serializer.ElemDesc;

        virtualinvoke r0.<java.io.Writer: void write(int)>(32);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z3 == 0 goto label2;

     label1:
        if r2 == null goto label2;

        $z2 = virtualinvoke r2.<org.apache.xml.serializer.ElemDesc: boolean isAttrFlagSet(java.lang.String,int)>(r3, 4);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r3);

        goto label5;

     label2:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("=\"");

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<org.apache.xml.serializer.ElemDesc: boolean isAttrFlagSet(java.lang.String,int)>(r3, 2);

        if $z0 == 0 goto label3;

        $z1 = r4.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs>;

        virtualinvoke r4.<org.apache.xml.serializer.ToHTMLStream: void writeAttrURI(java.io.Writer,java.lang.String,boolean)>(r0, r1, $z1);

        goto label4;

     label3:
        $r5 = virtualinvoke r4.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        virtualinvoke r4.<org.apache.xml.serializer.ToHTMLStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)>(r0, r1, $r5);

     label4:
        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

     label5:
        return;
    }

    private boolean isASCIIDigit(char)
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        int $i1, $i2;
        char c0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 48 goto label1;

        $i2 = (int) c0;

        if $i2 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static java.lang.String makeHHString(int)
    {
        java.lang.StringBuffer $r2, $r3, $r4;
        int i0, $i1;
        java.lang.String $r0, $r1, r5;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        r5 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 1 goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r5;
    }

    private boolean isHHSign(java.lang.String)
    {
        org.apache.xml.serializer.ToHTMLStream r2;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;
        boolean z0;

        r2 := @this: org.apache.xml.serializer.ToHTMLStream;

        r0 := @parameter0: java.lang.String;

        z0 = 1;

     label1:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 16);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        z0 = 0;

     label4:
        return z0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void writeAttrURI(java.io.Writer, java.lang.String, boolean) throws java.io.IOException
    {
        boolean z0, $z1, $z2;
        org.apache.xml.serializer.ToHTMLStream r1;
        java.io.Writer r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, $i12, $i13, i14, $i15, i16, $i17, $i18, $i19, $i20, i21, i22, i23, $i24, $i25, $i26, $i27, i28, i29, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41;
        java.lang.String r0, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        char c30;
        char[] $r2, $r3, $r16, $r17;

        r1 := @this: org.apache.xml.serializer.ToHTMLStream;

        r4 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label01;

        $i26 = $i0 * 2;

        $i27 = $i26 + 1;

        $r16 = newarray (char)[$i27];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff> = $r16;

     label01:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r17 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        i28 = 0;

        i29 = 0;

        c30 = 0;

        i31 = 0;

        goto label17;

     label02:
        c30 = $r17[i31];

        if c30 < 32 goto label03;

        if c30 <= 126 goto label11;

     label03:
        if i29 <= 0 goto label04;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r17, i28, i29);

        i29 = 0;

     label04:
        if z0 == 0 goto label08;

        if c30 > 127 goto label05;

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r15 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(c30);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r15);

        goto label10;

     label05:
        if c30 > 2047 goto label06;

        $i24 = c30 >> 6;

        i32 = $i24 | 192;

        $i25 = c30 & 63;

        i33 = $i25 | 128;

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r13 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i32);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r13);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r14 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i33);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r14);

        goto label10;

     label06:
        $z2 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c30);

        if $z2 == 0 goto label07;

        i34 = c30 & 1023;

        $i6 = i34 & 960;

        i35 = $i6 >> 6;

        i36 = i35 + 1;

        $i7 = i34 & 60;

        i8 = $i7 >> 2;

        $i9 = i34 & 3;

        $i10 = $i9 << 4;

        i37 = $i10 & 48;

        i31 = i31 + 1;

        c30 = $r17[i31];

        i11 = c30 & 1023;

        $i12 = i11 & 960;

        $i13 = $i12 >> 6;

        i38 = i37 | $i13;

        i14 = i11 & 63;

        $i15 = i36 >> 2;

        i16 = 240 | $i15;

        $i17 = i36 & 3;

        $i18 = $i17 << 4;

        $i19 = $i18 & 48;

        $i20 = 128 | $i19;

        i21 = $i20 | i8;

        i22 = 128 | i38;

        i23 = 128 | i14;

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r9 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i16);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r9);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r10 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i21);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r10);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r11 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i22);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r11);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r12 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i23);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r12);

        goto label10;

     label07:
        $i2 = c30 >> 12;

        i39 = $i2 | 224;

        $i3 = c30 & 4032;

        $i4 = $i3 >> 6;

        i40 = $i4 | 128;

        $i5 = c30 & 63;

        i41 = $i5 | 128;

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r6 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i39);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r6);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r7 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i40);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r7);

        virtualinvoke r4.<java.io.Writer: void write(int)>(37);

        $r8 = staticinvoke <org.apache.xml.serializer.ToHTMLStream: java.lang.String makeHHString(int)>(i41);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r8);

        goto label10;

     label08:
        $z1 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c30);

        if $z1 == 0 goto label09;

        virtualinvoke r4.<java.io.Writer: void write(int)>(c30);

        goto label10;

     label09:
        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("&#");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(c30);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r5);

        virtualinvoke r4.<java.io.Writer: void write(int)>(59);

     label10:
        i28 = i31 + 1;

        goto label16;

     label11:
        if c30 != 34 goto label15;

        if i29 <= 0 goto label12;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r17, i28, i29);

        i29 = 0;

     label12:
        if z0 == 0 goto label13;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("%22");

        goto label14;

     label13:
        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("&quot;");

     label14:
        i28 = i31 + 1;

        goto label16;

     label15:
        i29 = i29 + 1;

     label16:
        i31 = i31 + 1;

     label17:
        if i31 < $i0 goto label02;

        if i29 <= 1 goto label19;

        if i28 != 0 goto label18;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r0);

        goto label20;

     label18:
        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r17, i28, i29);

        goto label20;

     label19:
        if i29 != 1 goto label20;

        virtualinvoke r4.<java.io.Writer: void write(int)>(c30);

     label20:
        return;
    }

    public void writeAttrString(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.xml.serializer.CharInfo $r5, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, i8, i9, i11, $i12;
        java.lang.String r0, $r6, $r7, r11;
        boolean $z0, $z1, $z2, $z3;
        char $c5, c10;
        org.apache.xml.serializer.ToHTMLStream r1;
        java.io.Writer r4;
        char[] $r2, $r3, $r9, $r10;

        r1 := @this: org.apache.xml.serializer.ToHTMLStream;

        r4 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label01;

        $i6 = $i0 * 2;

        $i7 = $i6 + 1;

        $r9 = newarray (char)[$i7];

        r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff> = $r9;

     label01:
        $r3 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r3, 0);

        $r10 = r1.<org.apache.xml.serializer.SerializerBase: char[] m_attrBuff>;

        i8 = 0;

        i9 = 0;

        c10 = 0;

        i11 = 0;

        goto label14;

     label02:
        c10 = $r10[i11];

        $z0 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c10);

        if $z0 == 0 goto label03;

        $r8 = r1.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $z3 = virtualinvoke $r8.<org.apache.xml.serializer.CharInfo: boolean isSpecialAttrChar(int)>(c10);

        if $z3 != 0 goto label03;

        i9 = i9 + 1;

        goto label13;

     label03:
        if 60 == c10 goto label04;

        if 62 != c10 goto label05;

     label04:
        i9 = i9 + 1;

        goto label13;

     label05:
        if 38 != c10 goto label06;

        $i3 = i11 + 1;

        if $i3 >= $i0 goto label06;

        $i4 = i11 + 1;

        $c5 = $r10[$i4];

        $i12 = (int) $c5;

        if 123 != $i12 goto label06;

        i9 = i9 + 1;

        goto label13;

     label06:
        if i9 <= 0 goto label07;

        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r10, i8, i9);

        i9 = 0;

     label07:
        $i2 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: int accumDefaultEntity(java.io.Writer,char,int,char[],int,boolean,boolean)>(r4, c10, i11, $r10, $i0, 0, 0);

        if i11 == $i2 goto label08;

        i11 = $i2 - 1;

        goto label12;

     label08:
        $z1 = staticinvoke <org.apache.xml.serializer.ToStream: boolean isUTF16Surrogate(char)>(c10);

        if $z1 == 0 goto label09;

        virtualinvoke r1.<org.apache.xml.serializer.ToStream: void writeUTF16Surrogate(char,char[],int,int)>(c10, $r10, i11, $i0);

        i11 = i11 + 1;

     label09:
        $r5 = r1.<org.apache.xml.serializer.ToStream: org.apache.xml.serializer.CharInfo m_charInfo>;

        $r6 = virtualinvoke $r5.<org.apache.xml.serializer.CharInfo: java.lang.String getEntityNameForChar(char)>(c10);

        if null == $r6 goto label10;

        virtualinvoke r4.<java.io.Writer: void write(int)>(38);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r6);

        virtualinvoke r4.<java.io.Writer: void write(int)>(59);

        goto label12;

     label10:
        $z2 = virtualinvoke r1.<org.apache.xml.serializer.ToStream: boolean escapingNotNeeded(char)>(c10);

        if $z2 == 0 goto label11;

        virtualinvoke r4.<java.io.Writer: void write(int)>(c10);

        goto label12;

     label11:
        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("&#");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(c10);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r7);

        virtualinvoke r4.<java.io.Writer: void write(int)>(59);

     label12:
        i8 = i11 + 1;

     label13:
        i11 = i11 + 1;

     label14:
        if i11 < $i0 goto label02;

        if i9 <= 1 goto label16;

        if i8 != 0 goto label15;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r0);

        goto label17;

     label15:
        virtualinvoke r4.<java.io.Writer: void write(char[],int,int)>($r10, i8, i9);

        goto label17;

     label16:
        if i9 != 1 goto label17;

        virtualinvoke r4.<java.io.Writer: void write(int)>(c10);

     label17:
        return;
    }

    public final void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r3, $r5;
        java.io.IOException $r6;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r7;
        int i0, i1;
        org.apache.xml.serializer.SerializerTrace $r4;
        char[] r2;
        java.lang.String $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r1.<org.apache.xml.serializer.ElemContext: boolean m_isRaw>;

        if $z0 == 0 goto label5;

     label1:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r3.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void closeStartTag()>();

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label2:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        $z2 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r2, i0, i1, 0, $z2);

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r4 == null goto label3;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireCharEvent(char[],int,int)>(r2, i0, i1);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        $r8 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_OIERROR", null);

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r8, $r6);

        throw $r7;

     label5:
        specialinvoke r0.<org.apache.xml.serializer.ToStream: void characters(char[],int,int)>(r2, i0, i1);

        return;

        catch java.io.IOException from label1 to label4 with label4;
    }

    public final void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        java.lang.String $r2, $r5, $r9, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xml.serializer.ElemContext $r1, $r4, $r6, $r7, $r8;
        java.io.IOException $r10;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r11;
        char[] r3;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r2 = $r1.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        if null == $r2 goto label7;

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5 = $r4.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("SCRIPT");

        if $z0 != 0 goto label1;

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r9 = $r8.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STYLE");

        if $z4 == 0 goto label7;

     label1:
        $r6 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r6.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void closeStartTag()>();

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r7.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label2:
        r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve> = 1;

        $z2 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label3:
        $z3 = r0.<org.apache.xml.serializer.ToStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void writeNormalizedChars(char[],int,int,boolean,boolean)>(r3, i0, i1, 1, $z3);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = new org.xml.sax.SAXException;

        $r12 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_OIERROR", null);

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r12, $r10);

        throw $r11;

     label6:
        goto label8;

     label7:
        specialinvoke r0.<org.apache.xml.serializer.ToStream: void cdata(char[],int,int)>(r3, i0, i1);

     label8:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0, $i2;
        java.lang.String r1, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xml.serializer.ElemContext $r2, $r5, $r8;
        char $c1;
        java.io.IOException $r6;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r7;
        java.io.Writer $r4;
        org.apache.xml.serializer.SerializerTrace $r9;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void flushPending()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.disable-output-escaping");

        if $z0 == 0 goto label01;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void startNonEscaping()>();

        goto label10;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.enable-output-escaping");

        if $z1 == 0 goto label02;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void endNonEscaping()>();

        goto label10;

     label02:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z2 = $r2.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z2 == 0 goto label03;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void closeStartTag()>();

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

        goto label04;

     label03:
        $z3 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_needToCallStartDocument>;

        if $z3 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void startDocumentInternal()>();

     label04:
        $z5 = virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean shouldIndent()>();

        if $z5 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void indent()>();

     label05:
        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>("<?");

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(r1);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $z4 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c1);

        if $z4 != 0 goto label06;

        virtualinvoke $r4.<java.io.Writer: void write(int)>(32);

     label06:
        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>(r3);

        virtualinvoke $r4.<java.io.Writer: void write(int)>(62);

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i2 = $r8.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        if $i2 > 0 goto label07;

        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void outputLineSep()>();

     label07:
        r0.<org.apache.xml.serializer.ToStream: boolean m_startNewLine> = 1;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        $r7 = new org.xml.sax.SAXException;

        specialinvoke $r7.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label10:
        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r9 == null goto label11;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireEscapingEvent(java.lang.String,java.lang.String)>(r1, r3);

     label11:
        return;

        catch java.io.IOException from label02 to label08 with label09;
    }

    public final void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r3;
        java.io.Writer r4;
        java.io.IOException $r2;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

     label1:
        r4 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r4.<java.io.Writer: void write(int)>(38);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r4.<java.io.Writer: void write(int)>(59);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void endElement(java.lang.String,java.lang.String,java.lang.String)>(null, null, r1);

        return;
    }

    public void processAttributes(java.io.Writer, int) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r6;
        org.apache.xml.serializer.ElemDesc $r7;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.apache.xml.serializer.AttributesImplSerializer $r2, $r4;
        int i0, i1;
        java.io.Writer r1;
        java.lang.String $r3, $r5;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.io.Writer;

        i0 := @parameter1: int;

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $r3 = virtualinvoke $r2.<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)>(i1);

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $r5 = virtualinvoke $r4.<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)>(i1);

        $r6 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r7 = $r6.<org.apache.xml.serializer.ElemContext: org.apache.xml.serializer.ElemDesc m_elementDesc>;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void processAttribute(java.io.Writer,java.lang.String,java.lang.String,org.apache.xml.serializer.ElemDesc)>(r1, $r3, $r5, $r7);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    protected void closeStartTag() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.AttributesImplSerializer $r2, $r8;
        java.util.Vector $r4;
        int $i0;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        org.apache.xml.serializer.ElemContext $r6, $r9;
        java.io.IOException $r11;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r12;
        org.apache.xml.serializer.SerializerTrace $r1;
        java.io.Writer $r3, $r7;
        org.apache.xml.utils.BoolStack $r5;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

     label1:
        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label2;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r10 = $r9.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        specialinvoke r0.<org.apache.xml.serializer.SerializerBase: void fireStartElem(java.lang.String)>($r10);

     label2:
        $r2 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        $i0 = virtualinvoke $r2.<org.xml.sax.helpers.AttributesImpl: int getLength()>();

        if $i0 <= 0 goto label3;

        $r7 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void processAttributes(java.io.Writer,int)>($r7, $i0);

        $r8 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.AttributesImplSerializer m_attributes>;

        virtualinvoke $r8.<org.apache.xml.serializer.AttributesImplSerializer: void clear()>();

     label3:
        $r3 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        virtualinvoke $r3.<java.io.Writer: void write(int)>(62);

        $r4 = r0.<org.apache.xml.serializer.SerializerBase: java.util.Vector m_cdataSectionElements>;

        if $r4 == null goto label4;

        $r6 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z2 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: boolean isCdataSection()>();

        $r6.<org.apache.xml.serializer.ElemContext: boolean m_isCdataSection> = $z2;

     label4:
        $z0 = r0.<org.apache.xml.serializer.SerializerBase: boolean m_doIndent>;

        if $z0 == 0 goto label5;

        r0.<org.apache.xml.serializer.ToStream: boolean m_isprevtext> = 0;

        $r5 = r0.<org.apache.xml.serializer.ToStream: org.apache.xml.utils.BoolStack m_preserves>;

        $z1 = r0.<org.apache.xml.serializer.ToStream: boolean m_ispreserve>;

        virtualinvoke $r5.<org.apache.xml.utils.BoolStack: boolean push(boolean)>($z1);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r11);

        throw $r12;

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    protected synchronized void init(java.io.OutputStream, java.util.Properties) throws java.io.UnsupportedEncodingException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.io.OutputStream r1;
        java.util.Properties r2;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.util.Properties;

        if null != r2 goto label1;

        r2 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>("html");

     label1:
        specialinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.OutputStream,java.util.Properties,boolean)>(r1, r2, 0);

        return;
    }

    public void setOutputStream(java.io.OutputStream)
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.io.OutputStream r2;
        java.util.Properties $r1, r4;
        java.io.UnsupportedEncodingException $r3;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r2 := @parameter0: java.io.OutputStream;

     label1:
        $r1 = r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format>;

        if null != $r1 goto label2;

        r4 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)>("html");

        goto label3;

     label2:
        r4 = r0.<org.apache.xml.serializer.ToStream: java.util.Properties m_format>;

     label3:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: void init(java.io.OutputStream,java.util.Properties,boolean)>(r2, r4, 1);

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ElemContext $r1, $r5, $r9;
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String $r2, r3, r4, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r2 = $r1.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI>;

        if $r2 != null goto label1;

        $r5 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6 = $r5.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        $r7 = staticinvoke <org.apache.xml.serializer.SerializerBase: java.lang.String getPrefixPart(java.lang.String)>($r6);

        if $r7 != null goto label1;

        $r8 = "";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r9.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI> = r4;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r3, r4, 0);

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inDTD> = 1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inDTD> = 0;

        return;
    }

    public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        return;
    }

    public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.CharInfo $r4;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r1, r2, $r3;
        boolean $z0, $z1, $z2;
        java.io.IOException $r5;
        org.apache.xml.serializer.ToHTMLStream r0;
        org.xml.sax.SAXException $r6;
        java.io.Writer r7;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        r7 = r0.<org.apache.xml.serializer.SerializerBase: java.io.Writer m_writer>;

        $i1 = i0 & 1;

        if $i1 <= 0 goto label2;

        $r4 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.CharInfo m_htmlcharInfo>;

        $z2 = $r4.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt>;

        if $z2 == 0 goto label2;

        virtualinvoke r7.<java.io.Writer: void write(int)>(32);

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>("=\"");

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r7.<java.io.Writer: void write(int)>(34);

        goto label7;

     label2:
        $i2 = i0 & 2;

        if $i2 <= 0 goto label4;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 == 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke r7.<java.io.Writer: void write(int)>(32);

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>(r1);

        goto label7;

     label4:
        virtualinvoke r7.<java.io.Writer: void write(int)>(32);

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>("=\"");

        $i3 = i0 & 4;

        if $i3 <= 0 goto label5;

        $z0 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs>;

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void writeAttrURI(java.io.Writer,java.lang.String,boolean)>(r7, r2, $z0);

        goto label6;

     label5:
        $r3 = virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)>(r7, r2, $r3);

     label6:
        virtualinvoke r7.<java.io.Writer: void write(int)>(34);

     label7:
        goto label9;

     label8:
        $r5 := @caughtexception;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label9:
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        int i0, i1;
        char[] r1;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inDTD>;

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.apache.xml.serializer.ToStream: void comment(char[],int,int)>(r1, i0, i1);

        return;
    }

    public boolean reset()
    {
        org.apache.xml.serializer.ToHTMLStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        $z0 = specialinvoke r0.<org.apache.xml.serializer.ToStream: boolean reset()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<org.apache.xml.serializer.ToHTMLStream: void initToHTMLStream()>();

        return 1;
    }

    private void initToHTMLStream()
    {
        org.apache.xml.serializer.ToHTMLStream r0;

        r0 := @this: org.apache.xml.serializer.ToHTMLStream;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inBlockElem> = 0;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_inDTD> = 0;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_omitMetaTag> = 0;

        r0.<org.apache.xml.serializer.ToHTMLStream: boolean m_specialEscapeURLs> = 1;

        return;
    }

    static void <clinit>()
    {
        org.apache.xml.serializer.ElemDesc r240, r241, r242, r243, r244, r245, r246, r247, r248, r249, r250, r251, r252, r253, r254, r255, r256, r257, r258, r259, r260, r261, r262, r263, $r265, $r266, $r267, $r268, $r269, $r270, $r271, $r272, $r273, $r274, $r275, $r276, $r277, $r278, $r279, $r280, $r281, $r282, $r283, $r284, $r285, $r286, $r287, $r288, $r289, $r290, $r291, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r301, $r302, $r303, $r304, $r305, $r306, $r307, $r308, $r309, $r310, $r311, $r312, $r313, $r314, $r315, $r316, $r317, $r318, $r319, $r320, $r321, $r322, $r323, $r324, $r325, $r326, $r327, $r328, $r329, $r330, $r331, $r332, $r333, $r334, $r335, $r336, $r337, $r338, $r339, $r340, $r341, $r342, $r343, $r344, $r345, $r346, $r347, $r348, $r349, $r350, $r351, $r352, $r353, $r354, $r355, $r356, $r357, $r358, $r359;
        org.apache.xml.serializer.CharInfo $r1;
        int $i1;
        java.lang.String $r0;
        java.lang.Object $r192, $r194, $r196, $r198, $r200, $r202, $r204, $r206, $r208, $r210, $r212, $r214, $r216, $r218, $r220, $r222, $r224, $r226, $r228, $r230, $r232, $r234, $r236, $r238;
        org.apache.xml.utils.Trie $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r118, $r120, $r122, $r124, $r126, $r128, $r130, $r132, $r134, $r136, $r138, $r140, $r142, $r144, $r146, $r148, $r150, $r152, $r154, $r156, $r158, $r160, $r162, $r164, $r166, $r168, $r170, $r172, $r174, $r176, $r178, $r180, $r182, $r184, $r186, $r188, $r190, $r191, $r193, $r195, $r197, $r199, $r201, $r203, $r205, $r207, $r209, $r211, $r213, $r215, $r217, $r219, $r221, $r223, $r225, $r227, $r229, $r231, $r233, $r235, $r237, $r264;

        $r0 = <org.apache.xml.serializer.CharInfo: java.lang.String HTML_ENTITIES_RESOURCE>;

        $r1 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)>($r0, "html");

        <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.CharInfo m_htmlcharInfo> = $r1;

        $r264 = new org.apache.xml.utils.Trie;

        specialinvoke $r264.<org.apache.xml.utils.Trie: void <init>()>();

        <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags> = $r264;

        $r4 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r265 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r265.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(2);

        virtualinvoke $r4.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BASEFONT", $r265);

        $r6 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r266 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r266.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(10);

        virtualinvoke $r6.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("FRAME", $r266);

        $r8 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r267 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r267.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r8.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("FRAMESET", $r267);

        $r10 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r268 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r268.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r10.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("NOFRAMES", $r268);

        $r12 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r269 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r269.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(10);

        virtualinvoke $r12.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("ISINDEX", $r269);

        $r14 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r270 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r270.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(2097152);

        virtualinvoke $r14.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("APPLET", $r270);

        $r16 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r271 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r271.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r16.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("CENTER", $r271);

        $r18 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r272 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r272.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r18.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DIR", $r272);

        $r20 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r273 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r273.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r20.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("MENU", $r273);

        $r22 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r274 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r274.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r22.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TT", $r274);

        $r24 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r275 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r275.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r24.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("I", $r275);

        $r26 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r276 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r276.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r26.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("B", $r276);

        $r28 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r277 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r277.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r28.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BIG", $r277);

        $r30 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r278 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r278.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r30.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SMALL", $r278);

        $r32 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r279 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r279.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r32.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("EM", $r279);

        $r34 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r280 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r280.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r34.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("STRONG", $r280);

        $r36 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r281 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r281.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r36.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DFN", $r281);

        $r38 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r282 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r282.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r38.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("CODE", $r282);

        $r40 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r283 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r283.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r40.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SAMP", $r283);

        $r42 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r284 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r284.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r42.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("KBD", $r284);

        $r44 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r285 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r285.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r44.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("VAR", $r285);

        $r46 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r286 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r286.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r46.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("CITE", $r286);

        $r48 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r287 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r287.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r48.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("ABBR", $r287);

        $r50 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r288 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r288.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8192);

        virtualinvoke $r50.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("ACRONYM", $r288);

        $r52 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r289 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r289.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98304);

        virtualinvoke $r52.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SUP", $r289);

        $r54 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r290 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r290.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98304);

        virtualinvoke $r54.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SUB", $r290);

        $r56 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r291 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r291.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98304);

        virtualinvoke $r56.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SPAN", $r291);

        $r58 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r292 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r292.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98304);

        virtualinvoke $r58.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BDO", $r292);

        $r60 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r293 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r293.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98314);

        virtualinvoke $r60.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BR", $r293);

        $r62 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r294 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r294.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r62.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BODY", $r294);

        $r64 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r295 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r295.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r64.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("ADDRESS", $r295);

        $r66 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r296 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r296.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r66.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DIV", $r296);

        $r68 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r297 = new org.apache.xml.serializer.ElemDesc;

        $i1 = (int) 32768;

        specialinvoke $r297.<org.apache.xml.serializer.ElemDesc: void <init>(int)>($i1);

        virtualinvoke $r68.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("A", $r297);

        $r70 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r298 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r298.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98312);

        virtualinvoke $r70.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("MAP", $r298);

        $r72 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r299 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r299.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(10);

        virtualinvoke $r72.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("AREA", $r299);

        $r74 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r300 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r300.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(131082);

        virtualinvoke $r74.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("LINK", $r300);

        $r76 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r301 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r301.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(2195458);

        virtualinvoke $r76.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("IMG", $r301);

        $r78 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r302 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r302.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(2326528);

        virtualinvoke $r78.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("OBJECT", $r302);

        $r80 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r303 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r303.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(2);

        virtualinvoke $r80.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("PARAM", $r303);

        $r82 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r304 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r304.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(58);

        virtualinvoke $r82.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("HR", $r304);

        $r84 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r305 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r305.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r84.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("P", $r305);

        $r86 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r306 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r306.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r86.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H1", $r306);

        $r88 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r307 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r307.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r88.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H2", $r307);

        $r90 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r308 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r308.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r90.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H3", $r308);

        $r92 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r309 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r309.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r92.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H4", $r309);

        $r94 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r310 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r310.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r94.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H5", $r310);

        $r96 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r311 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r311.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(262152);

        virtualinvoke $r96.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("H6", $r311);

        $r98 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r312 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r312.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(1048584);

        virtualinvoke $r98.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("PRE", $r312);

        $r100 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r313 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r313.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(98304);

        virtualinvoke $r100.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("Q", $r313);

        $r102 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r314 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r314.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r102.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BLOCKQUOTE", $r314);

        $r104 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r315 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r315.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r104.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("INS", $r315);

        $r106 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r316 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r316.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r106.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DEL", $r316);

        $r108 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r317 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r317.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r108.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DL", $r317);

        $r110 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r318 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r318.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r110.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DT", $r318);

        $r112 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r319 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r319.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r112.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("DD", $r319);

        $r114 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r320 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r320.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(524296);

        virtualinvoke $r114.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("OL", $r320);

        $r116 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r321 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r321.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(524296);

        virtualinvoke $r116.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("UL", $r321);

        $r118 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r322 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r322.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r118.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("LI", $r322);

        $r120 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r323 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r323.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r120.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("FORM", $r323);

        $r122 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r324 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r324.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(16384);

        virtualinvoke $r122.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("LABEL", $r324);

        $r124 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r325 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r325.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(18434);

        virtualinvoke $r124.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("INPUT", $r325);

        $r126 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r326 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r326.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(18432);

        virtualinvoke $r126.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SELECT", $r326);

        $r128 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r327 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r327.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r128.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("OPTGROUP", $r327);

        $r130 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r328 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r328.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r130.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("OPTION", $r328);

        $r132 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r329 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r329.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(18432);

        virtualinvoke $r132.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TEXTAREA", $r329);

        $r134 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r330 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r330.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(24);

        virtualinvoke $r134.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("FIELDSET", $r330);

        $r136 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r331 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r331.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r136.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("LEGEND", $r331);

        $r138 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r332 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r332.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(18432);

        virtualinvoke $r138.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BUTTON", $r332);

        $r140 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r333 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r333.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r140.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TABLE", $r333);

        $r142 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r334 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r334.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r142.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("CAPTION", $r334);

        $r144 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r335 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r335.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r144.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("THEAD", $r335);

        $r146 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r336 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r336.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r146.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TFOOT", $r336);

        $r148 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r337 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r337.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r148.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TBODY", $r337);

        $r150 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r338 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r338.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r150.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("COLGROUP", $r338);

        $r152 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r339 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r339.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(10);

        virtualinvoke $r152.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("COL", $r339);

        $r154 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r340 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r340.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r154.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TR", $r340);

        $r156 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r341 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r341.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r156.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TH", $r341);

        $r158 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r342 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r342.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(0);

        virtualinvoke $r158.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TD", $r342);

        $r160 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r343 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r343.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4194312);

        virtualinvoke $r160.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("HEAD", $r343);

        $r162 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r344 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r344.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r162.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("TITLE", $r344);

        $r164 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r345 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r345.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(10);

        virtualinvoke $r164.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("BASE", $r345);

        $r166 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r346 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r346.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(131082);

        virtualinvoke $r166.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("META", $r346);

        $r168 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r347 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r347.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(131336);

        virtualinvoke $r168.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("STYLE", $r347);

        $r170 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r348 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r348.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(229632);

        virtualinvoke $r170.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("SCRIPT", $r348);

        $r172 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r349 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r349.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r172.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("NOSCRIPT", $r349);

        $r174 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r350 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r350.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        virtualinvoke $r174.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("HTML", $r350);

        $r176 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r351 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r351.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r176.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("FONT", $r351);

        $r178 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r352 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r352.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r178.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("S", $r352);

        $r180 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r353 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r353.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r180.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("STRIKE", $r353);

        $r182 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r354 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r354.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r182.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("U", $r354);

        $r184 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r355 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r355.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(4096);

        virtualinvoke $r184.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("NOBR", $r355);

        $r186 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r356 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r356.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r186.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("IFRAME", $r356);

        $r188 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r357 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r357.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r188.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("LAYER", $r357);

        $r190 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r358 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r358.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(56);

        virtualinvoke $r190.<org.apache.xml.utils.Trie: java.lang.Object put(java.lang.String,java.lang.Object)>("ILAYER", $r358);

        $r191 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r192 = virtualinvoke $r191.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("AREA");

        r240 = (org.apache.xml.serializer.ElemDesc) $r192;

        virtualinvoke r240.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("HREF", 2);

        virtualinvoke r240.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("NOHREF", 4);

        $r193 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r194 = virtualinvoke $r193.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("BASE");

        r241 = (org.apache.xml.serializer.ElemDesc) $r194;

        virtualinvoke r241.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("HREF", 2);

        $r195 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r196 = virtualinvoke $r195.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("BLOCKQUOTE");

        r242 = (org.apache.xml.serializer.ElemDesc) $r196;

        virtualinvoke r242.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CITE", 2);

        $r197 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r198 = virtualinvoke $r197.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("Q");

        r243 = (org.apache.xml.serializer.ElemDesc) $r198;

        virtualinvoke r243.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CITE", 2);

        $r199 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r200 = virtualinvoke $r199.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("INS");

        r244 = (org.apache.xml.serializer.ElemDesc) $r200;

        virtualinvoke r244.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CITE", 2);

        $r201 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r202 = virtualinvoke $r201.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("DEL");

        r245 = (org.apache.xml.serializer.ElemDesc) $r202;

        virtualinvoke r245.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CITE", 2);

        $r203 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r204 = virtualinvoke $r203.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("A");

        r246 = (org.apache.xml.serializer.ElemDesc) $r204;

        virtualinvoke r246.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("HREF", 2);

        virtualinvoke r246.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("NAME", 2);

        $r205 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r206 = virtualinvoke $r205.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("LINK");

        r247 = (org.apache.xml.serializer.ElemDesc) $r206;

        virtualinvoke r247.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("HREF", 2);

        $r207 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r208 = virtualinvoke $r207.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("INPUT");

        r248 = (org.apache.xml.serializer.ElemDesc) $r208;

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("USEMAP", 2);

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CHECKED", 4);

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("ISMAP", 4);

        virtualinvoke r248.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("READONLY", 4);

        $r209 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r210 = virtualinvoke $r209.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("SELECT");

        r249 = (org.apache.xml.serializer.ElemDesc) $r210;

        virtualinvoke r249.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        virtualinvoke r249.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("MULTIPLE", 4);

        $r211 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r212 = virtualinvoke $r211.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("OPTGROUP");

        r250 = (org.apache.xml.serializer.ElemDesc) $r212;

        virtualinvoke r250.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        $r213 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r214 = virtualinvoke $r213.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("OPTION");

        r251 = (org.apache.xml.serializer.ElemDesc) $r214;

        virtualinvoke r251.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SELECTED", 4);

        virtualinvoke r251.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        $r215 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r216 = virtualinvoke $r215.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("TEXTAREA");

        r252 = (org.apache.xml.serializer.ElemDesc) $r216;

        virtualinvoke r252.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        virtualinvoke r252.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("READONLY", 4);

        $r217 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r218 = virtualinvoke $r217.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("BUTTON");

        r253 = (org.apache.xml.serializer.ElemDesc) $r218;

        virtualinvoke r253.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DISABLED", 4);

        $r219 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r220 = virtualinvoke $r219.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("SCRIPT");

        r254 = (org.apache.xml.serializer.ElemDesc) $r220;

        virtualinvoke r254.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        virtualinvoke r254.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("FOR", 2);

        virtualinvoke r254.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DEFER", 4);

        $r221 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r222 = virtualinvoke $r221.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("IMG");

        r255 = (org.apache.xml.serializer.ElemDesc) $r222;

        virtualinvoke r255.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        virtualinvoke r255.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("LONGDESC", 2);

        virtualinvoke r255.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("USEMAP", 2);

        virtualinvoke r255.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("ISMAP", 4);

        $r223 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r224 = virtualinvoke $r223.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("OBJECT");

        r256 = (org.apache.xml.serializer.ElemDesc) $r224;

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CLASSID", 2);

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("CODEBASE", 2);

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DATA", 2);

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("ARCHIVE", 2);

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("USEMAP", 2);

        virtualinvoke r256.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("DECLARE", 4);

        $r225 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r226 = virtualinvoke $r225.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("FORM");

        r257 = (org.apache.xml.serializer.ElemDesc) $r226;

        virtualinvoke r257.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("ACTION", 2);

        $r227 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r228 = virtualinvoke $r227.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("HEAD");

        r258 = (org.apache.xml.serializer.ElemDesc) $r228;

        virtualinvoke r258.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("PROFILE", 2);

        $r229 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r230 = virtualinvoke $r229.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("FRAME");

        r259 = (org.apache.xml.serializer.ElemDesc) $r230;

        virtualinvoke r259.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        virtualinvoke r259.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("LONGDESC", 2);

        $r231 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r232 = virtualinvoke $r231.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("IFRAME");

        r260 = (org.apache.xml.serializer.ElemDesc) $r232;

        virtualinvoke r260.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        virtualinvoke r260.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("LONGDESC", 2);

        $r233 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r234 = virtualinvoke $r233.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("LAYER");

        r261 = (org.apache.xml.serializer.ElemDesc) $r234;

        virtualinvoke r261.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        $r235 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r236 = virtualinvoke $r235.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("ILAYER");

        r262 = (org.apache.xml.serializer.ElemDesc) $r236;

        virtualinvoke r262.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        $r237 = <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.utils.Trie m_elementFlags>;

        $r238 = virtualinvoke $r237.<org.apache.xml.utils.Trie: java.lang.Object get(java.lang.String)>("DIV");

        r263 = (org.apache.xml.serializer.ElemDesc) $r238;

        virtualinvoke r263.<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)>("SRC", 2);

        $r359 = new org.apache.xml.serializer.ElemDesc;

        specialinvoke $r359.<org.apache.xml.serializer.ElemDesc: void <init>(int)>(8);

        <org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc m_dummy> = $r359;

        return;
    }
}
