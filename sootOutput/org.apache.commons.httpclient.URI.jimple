public class org.apache.commons.httpclient.URI extends java.lang.Object implements java.lang.Cloneable, java.lang.Comparable, java.io.Serializable
{
    static final long serialVersionUID;
    protected int hash;
    protected char[] _uri;
    protected java.lang.String protocolCharset;
    protected static java.lang.String defaultProtocolCharset;
    protected static java.lang.String defaultDocumentCharset;
    protected static java.lang.String defaultDocumentCharsetByLocale;
    protected static java.lang.String defaultDocumentCharsetByPlatform;
    protected char[] _scheme;
    protected char[] _opaque;
    protected char[] _authority;
    protected char[] _userinfo;
    protected char[] _host;
    protected int _port;
    protected char[] _path;
    protected char[] _query;
    protected char[] _fragment;
    protected static final char[] rootPath;
    protected static final java.util.BitSet percent;
    protected static final java.util.BitSet digit;
    protected static final java.util.BitSet alpha;
    protected static final java.util.BitSet alphanum;
    protected static final java.util.BitSet hex;
    protected static final java.util.BitSet escaped;
    protected static final java.util.BitSet mark;
    protected static final java.util.BitSet unreserved;
    protected static final java.util.BitSet reserved;
    protected static final java.util.BitSet uric;
    protected static final java.util.BitSet fragment;
    protected static final java.util.BitSet query;
    protected static final java.util.BitSet pchar;
    protected static final java.util.BitSet param;
    protected static final java.util.BitSet segment;
    protected static final java.util.BitSet path_segments;
    protected static final java.util.BitSet abs_path;
    protected static final java.util.BitSet uric_no_slash;
    protected static final java.util.BitSet opaque_part;
    protected static final java.util.BitSet path;
    protected static final java.util.BitSet port;
    protected static final java.util.BitSet IPv4address;
    protected static final java.util.BitSet IPv6address;
    protected static final java.util.BitSet IPv6reference;
    protected static final java.util.BitSet toplabel;
    protected static final java.util.BitSet domainlabel;
    protected static final java.util.BitSet hostname;
    protected static final java.util.BitSet host;
    protected static final java.util.BitSet hostport;
    protected static final java.util.BitSet userinfo;
    public static final java.util.BitSet within_userinfo;
    protected static final java.util.BitSet server;
    protected static final java.util.BitSet reg_name;
    protected static final java.util.BitSet authority;
    protected static final java.util.BitSet scheme;
    protected static final java.util.BitSet rel_segment;
    protected static final java.util.BitSet rel_path;
    protected static final java.util.BitSet net_path;
    protected static final java.util.BitSet hier_part;
    protected static final java.util.BitSet relativeURI;
    protected static final java.util.BitSet absoluteURI;
    protected static final java.util.BitSet URI_reference;
    public static final java.util.BitSet control;
    public static final java.util.BitSet space;
    public static final java.util.BitSet delims;
    public static final java.util.BitSet unwise;
    public static final java.util.BitSet disallowed_rel_path;
    public static final java.util.BitSet disallowed_opaque_part;
    public static final java.util.BitSet allowed_authority;
    public static final java.util.BitSet allowed_opaque_part;
    public static final java.util.BitSet allowed_reg_name;
    public static final java.util.BitSet allowed_userinfo;
    public static final java.util.BitSet allowed_within_userinfo;
    public static final java.util.BitSet allowed_IPv6reference;
    public static final java.util.BitSet allowed_host;
    public static final java.util.BitSet allowed_within_authority;
    public static final java.util.BitSet allowed_abs_path;
    public static final java.util.BitSet allowed_rel_path;
    public static final java.util.BitSet allowed_within_path;
    public static final java.util.BitSet allowed_query;
    public static final java.util.BitSet allowed_within_query;
    public static final java.util.BitSet allowed_fragment;
    protected boolean _is_hier_part;
    protected boolean _is_opaque_part;
    protected boolean _is_net_path;
    protected boolean _is_abs_path;
    protected boolean _is_rel_path;
    protected boolean _is_reg_name;
    protected boolean _is_server;
    protected boolean _is_hostname;
    protected boolean _is_IPv4address;
    protected boolean _is_IPv6reference;

    protected void <init>()
    {
        int $i1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        return;
    }

    public void <init>(java.lang.String, boolean, java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        int $i1;
        java.lang.String r1, r2;
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>(r2, z0);

        return;
    }

    public void <init>(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        int $i1;
        java.lang.String r1;
        org.apache.commons.httpclient.URI r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public void <init>(char[], java.lang.String) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        int $i1;
        char[] r3;
        java.lang.String r1, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r3 := @parameter0: char[];

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = r1;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r3);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r4, 1);

        return;
    }

    public void <init>(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        int $i1;
        char[] r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r3, 1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int $i1;
        java.lang.String r1, r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>(r2, 0);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int $i1;
        java.lang.String r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r13, $r14;
        int $i1;
        char[] $r3, $r9, $r12;
        java.lang.String r1, $r2, r6, $r8, r10;
        java.util.BitSet $r4, $r7;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        if r1 != null goto label1;

        $r13 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r13.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "scheme required");

        throw $r13;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r3, $r4);

        if $z0 == 0 goto label2;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r3;

        goto label3;

     label2:
        $r14 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r14.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect scheme");

        throw $r14;

     label3:
        $r7 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        $r8 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r9 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r6, $r7, $r8);

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r9;

        r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = 1;

        if r10 != null goto label4;

        $r12 = null;

        goto label5;

     label4:
        $r12 = virtualinvoke r10.<java.lang.String: char[] toCharArray()>();

     label5:
        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r12;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r10;
        java.lang.StringBuffer $r9;
        int $i1;
        java.lang.String r2, r3, r4, r5, r6, $r7;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        if r2 == null goto label1;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        if r3 == null goto label2;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

     label2:
        if r4 == null goto label5;

        if r2 != null goto label3;

        if r3 == null goto label4;

     label3:
        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label4;

        $r10 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r10.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "abs_path requested");

        throw $r10;

     label4:
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label5:
        if r5 == null goto label6;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label6:
        if r6 == null goto label7;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

     label7:
        $r7 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r7, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int) throws org.apache.commons.httpclient.URIException
    {
        int i0;
        java.lang.String r1, r2, r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, null, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int i0;
        java.lang.String r1, r2, r3, r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int i0;
        java.lang.String r1, r2, r3, r4, r5;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, i0, r4, r5, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r12, $r13, $r15, $r16, $r20, $r21, $r22;
        int i0, $i2;
        java.lang.String r1, r2, r4, r8, r9, r10, $r17, $r18, $r19;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r8 := @parameter4: java.lang.String;

        r9 := @parameter5: java.lang.String;

        r10 := @parameter6: java.lang.String;

        if r2 != null goto label1;

        $r17 = null;

        goto label6;

     label1:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        if r4 == null goto label2;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label3;

     label2:
        $r18 = "";

     label3:
        $r5 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $i2 = (int) -1;

        if i0 == $i2 goto label4;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r19 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label4:
        $r19 = "";

     label5:
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label6:
        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, $r17, r8, r9, r10);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String r1, r2, r3, r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, null, r4);

        return;
    }

    public void <init>(org.apache.commons.httpclient.URI, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String r3;
        org.apache.commons.httpclient.URI r0, r1, $r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: org.apache.commons.httpclient.URI;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.apache.commons.httpclient.URI;

        specialinvoke $r2.<org.apache.commons.httpclient.URI: void <init>(java.lang.String)>(r3);

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.commons.httpclient.URI, java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String r3;
        org.apache.commons.httpclient.URI r0, r1, $r2;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: org.apache.commons.httpclient.URI;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = new org.apache.commons.httpclient.URI;

        specialinvoke $r2.<org.apache.commons.httpclient.URI: void <init>(java.lang.String,boolean)>(r3, z0);

        specialinvoke r0.<org.apache.commons.httpclient.URI: void <init>(org.apache.commons.httpclient.URI,org.apache.commons.httpclient.URI)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.commons.httpclient.URI, org.apache.commons.httpclient.URI) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r46;
        java.lang.String $r47;
        char[] $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r44, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        org.apache.commons.httpclient.URI r0, r1, r5;
        int $i0, $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: org.apache.commons.httpclient.URI;

        r5 := @parameter1: org.apache.commons.httpclient.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.URI: int hash> = 0;

        r0.<org.apache.commons.httpclient.URI: char[] _uri> = null;

        r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = null;

        $i5 = (int) -1;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i5;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = null;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        $r2 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r2 != null goto label01;

        $r46 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r46.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "base URI required");

        throw $r46;

     label01:
        $r3 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r3 == null goto label02;

        $r38 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r38;

        $r39 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r39;

        $z20 = r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z20;

     label02:
        $z0 = r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 != 0 goto label03;

        $z3 = r5.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z3 == 0 goto label07;

     label03:
        $r4 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r4;

        $z1 = r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 != 0 goto label04;

        $z2 = r5.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z2 == 0 goto label05;

     label04:
        $z21 = 1;

        goto label06;

     label05:
        $z21 = 0;

     label06:
        r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = $z21;

        $r6 = r5.<org.apache.commons.httpclient.URI: char[] _opaque>;

        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r6;

        $r7 = r5.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r7;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label07:
        $r9 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $r8 = r5.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>($r9, $r8);

        $r10 = r5.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r10 == null goto label11;

        if $z4 == 0 goto label08;

        $r37 = r5.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r37 == null goto label11;

     label08:
        $r33 = r5.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r0.<org.apache.commons.httpclient.URI: char[] _scheme> = $r33;

        $z15 = r5.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z15;

        $r34 = r5.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r34;

        $z16 = r5.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z16 == 0 goto label09;

        $z19 = r5.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z19;

        $r35 = r5.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r35;

        $r36 = r5.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r36;

        $i3 = r5.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i3;

        goto label10;

     label09:
        $z17 = r5.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z17 == 0 goto label10;

        $z18 = r5.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z18;

     label10:
        $z22 = r5.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z22;

        $z23 = r5.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z23;

        $r41 = r5.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r41;

        goto label13;

     label11:
        $r11 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r11 == null goto label13;

        $r29 = r5.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r29 != null goto label13;

        $z10 = r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z10;

        $r30 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r30;

        $z11 = r1.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z11 == 0 goto label12;

        $z14 = r1.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z14;

        $r31 = r1.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r31;

        $r32 = r1.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r32;

        $i2 = r1.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i2;

        goto label13;

     label12:
        $z12 = r1.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z12 == 0 goto label13;

        $z13 = r1.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z13;

     label13:
        $r42 = r5.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r42 == null goto label16;

        $z5 = r5.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z5;

        $r26 = r5.<org.apache.commons.httpclient.URI: char[] _authority>;

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r26;

        $z6 = r5.<org.apache.commons.httpclient.URI: boolean _is_server>;

        if $z6 == 0 goto label14;

        $z9 = r5.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = $z9;

        $r27 = r5.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r27;

        $r28 = r5.<org.apache.commons.httpclient.URI: char[] _host>;

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r28;

        $i1 = r5.<org.apache.commons.httpclient.URI: int _port>;

        r0.<org.apache.commons.httpclient.URI: int _port> = $i1;

        goto label15;

     label14:
        $z7 = r5.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z7 == 0 goto label15;

        $z8 = r5.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z8;

     label15:
        $z24 = r5.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z24;

        $z25 = r5.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z25;

        $r43 = r5.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r43;

     label16:
        $r44 = r5.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r44 != null goto label20;

        $r17 = r5.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r17 == null goto label17;

        if $z4 == 0 goto label20;

     label17:
        $r18 = r5.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r18 == null goto label18;

        $r25 = r5.<org.apache.commons.httpclient.URI: char[] _path>;

        $i0 = lengthof $r25;

        if $i0 != 0 goto label19;

     label18:
        $r19 = r5.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r19 != null goto label19;

        $r23 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r23;

        $r24 = r1.<org.apache.commons.httpclient.URI: char[] _query>;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r24;

        goto label20;

     label19:
        $r21 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        $r20 = r5.<org.apache.commons.httpclient.URI: char[] _path>;

        $r22 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] resolvePath(char[],char[])>($r21, $r20);

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r22;

     label20:
        $r45 = r5.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r45 == null goto label21;

        $r16 = r5.<org.apache.commons.httpclient.URI: char[] _query>;

        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r16;

     label21:
        $r12 = r5.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r12 == null goto label22;

        $r15 = r5.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r0.<org.apache.commons.httpclient.URI: char[] _fragment> = $r15;

     label22:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        $r47 = new java.lang.String;

        $r14 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r47.<java.lang.String: void <init>(char[])>($r14);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseUriReference(java.lang.String,boolean)>($r47, 1);

        return;
    }

    protected static char[] encode(java.lang.String, java.util.BitSet, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        byte[] $r3, $r4;
        java.lang.IllegalArgumentException $r7, $r8;
        char[] $r6;
        java.lang.String r0, r2, $r5;
        java.util.BitSet r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.BitSet;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Original string may not be null");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Allowed bitset may not be null");

        throw $r7;

     label2:
        $r3 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getBytes(java.lang.String,java.lang.String)>(r0, r2);

        $r4 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] encodeUrl(java.util.BitSet,byte[])>(r1, $r3);

        $r5 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getAsciiString(byte[])>($r4);

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        return $r6;
    }

    protected static java.lang.String decode(char[], java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] r0;
        java.lang.String $r1, r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: char[];

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component array of chars may not be null");

        throw $r4;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(java.lang.String,java.lang.String)>($r1, r2);

        return $r3;
    }

    protected static java.lang.String decode(java.lang.String, java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        byte[] $r1, $r2;
        org.apache.commons.codec.DecoderException $r6;
        java.lang.IllegalArgumentException $r5;
        org.apache.commons.httpclient.URIException $r7;
        java.lang.String r0, r3, $r4, $r8;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component array of chars may not be null");

        throw $r5;

     label1:
        $r1 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: byte[] getAsciiBytes(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.commons.codec.net.URLCodec: byte[] decodeUrl(byte[])>($r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.commons.httpclient.URIException;

        $r8 = virtualinvoke $r6.<org.apache.commons.codec.DecoderException: java.lang.String getMessage()>();

        specialinvoke $r7.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r4 = staticinvoke <org.apache.commons.httpclient.util.EncodingUtil: java.lang.String getString(byte[],java.lang.String)>($r2, r3);

        return $r4;

        catch org.apache.commons.codec.DecoderException from label1 to label2 with label3;
    }

    protected boolean prevalidate(java.lang.String, java.util.BitSet)
    {
        char $c1;
        int $i0, i2, $i3;
        char[] $r1;
        java.lang.String r0;
        java.util.BitSet r2;
        org.apache.commons.httpclient.URI r3;
        boolean $z0;

        r3 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.BitSet;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i2 = 0;

     label2:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label4;

        $c1 = $r1[i2];

        $i3 = (int) $c1;

        $z0 = virtualinvoke r2.<java.util.BitSet: boolean get(int)>($i3);

        if $z0 == 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    protected boolean validate(char[], java.util.BitSet)
    {
        int $i1;
        char[] r1;
        java.util.BitSet r2;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: char[];

        r2 := @parameter1: java.util.BitSet;

        $i1 = (int) -1;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>(r1, 0, $i1, r2);

        return $z0;
    }

    protected boolean validate(char[], int, int, java.util.BitSet)
    {
        char $c1;
        int i0, $i2, i3, i4, $i6, $i7;
        char[] r1;
        java.util.BitSet r0;
        org.apache.commons.httpclient.URI r2;
        boolean $z0;

        r2 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        r0 := @parameter3: java.util.BitSet;

        $i6 = (int) -1;

        if i3 != $i6 goto label1;

        $i2 = lengthof r1;

        i3 = $i2 - 1;

     label1:
        i4 = i0;

     label2:
        if i4 > i3 goto label4;

        $c1 = r1[i4];

        $i7 = (int) $c1;

        $z0 = virtualinvoke r0.<java.util.BitSet: boolean get(int)>($i7);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return 1;
    }

    protected void parseUriReference(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r45, $r46, $r47;
        java.lang.String r0, $r1, $r3, $r5, $r6, $r8, $r11, $r17, $r20, $r22, $r25, $r27, $r28, $r29, $r33, r39, $r40, $r41, $r42, $r43;
        char[] $r7, $r10, $r12, $r14, $r16, $r18, $r23, $r30, $r34, $r36, $r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, z13;
        org.apache.commons.httpclient.URI r2;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18, $i19, $i20, $i21, $i24, $i26, i27, i28, $i29, $i30, i31, i32, $i33, $i34, i35, i36, $i38, $i39, $i40, $i41, $i43, $i45, $i46, $i48, $i49;
        char $c3, $c8, $c14, $c17, $c22, $c23, $c25;
        java.util.BitSet $r4, $r9, $r13, $r19, $r21, $r24, $r26, $r31, $r35, $r37;

        r2 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label01;

        $r45 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r45.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("URI-Reference required");

        throw $r45;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        r39 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i27 = $i0;

        if $i0 <= 0 goto label02;

        $r34 = newarray (char)[1];

        $c23 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $r34[0] = $c23;

        $r35 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        $z9 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r34, $r35);

        if $z9 == 0 goto label02;

        if $i0 < 2 goto label02;

        $r36 = newarray (char)[1];

        $i24 = $i0 - 1;

        $c25 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i24);

        $r36[0] = $c25;

        $r37 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        $z10 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r36, $r37);

        if $z10 == 0 goto label02;

        $i26 = $i0 - 1;

        r39 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i26);

        i27 = $i0 - 2;

     label02:
        i28 = 0;

        z11 = 0;

        z13 = 0;

        z12 = 0;

        $i29 = virtualinvoke r39.<java.lang.String: int indexOf(int)>(58);

        $i30 = virtualinvoke r39.<java.lang.String: int indexOf(int)>(47);

        if $i29 > 0 goto label03;

        $z8 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z8 == 0 goto label04;

     label03:
        if $i30 < 0 goto label05;

        if $i30 >= $i29 goto label05;

     label04:
        z11 = 1;

        z13 = 1;

        z12 = 1;

     label05:
        $r33 = r39;

        if z12 == 0 goto label06;

        $r40 = "/?#";

        goto label07;

     label06:
        $r40 = ":/?#";

     label07:
        $i1 = virtualinvoke r2.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>($r33, $r40, 0);

        i31 = $i1;

        $i38 = (int) -1;

        if $i1 != $i38 goto label08;

        i31 = 0;

     label08:
        if i31 <= 0 goto label11;

        if i31 >= i27 goto label11;

        $c22 = virtualinvoke r39.<java.lang.String: char charAt(int)>(i31);

        $i39 = (int) $c22;

        if $i39 != 58 goto label11;

        $r28 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(0, i31);

        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String toLowerCase()>();

        $r30 = virtualinvoke $r29.<java.lang.String: char[] toCharArray()>();

        $r31 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $z7 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r30, $r31);

        if $z7 == 0 goto label09;

        r2.<org.apache.commons.httpclient.URI: char[] _scheme> = $r30;

        goto label10;

     label09:
        $r46 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r46.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("incorrect scheme");

        throw $r46;

     label10:
        i31 = i31 + 1;

        i28 = i31;

     label11:
        r2.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = 0;

        r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = 0;

        r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = 0;

        r2.<org.apache.commons.httpclient.URI: boolean _is_net_path> = 0;

        if 0 > i31 goto label16;

        if i31 >= i27 goto label16;

        $c14 = virtualinvoke r39.<java.lang.String: char charAt(int)>(i31);

        $i40 = (int) $c14;

        if $i40 != 47 goto label16;

        r2.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = 1;

        $i15 = i31 + 2;

        if $i15 >= i27 goto label15;

        $i16 = i31 + 1;

        $c17 = virtualinvoke r39.<java.lang.String: char charAt(int)>($i16);

        $i41 = (int) $c17;

        if $i41 != 47 goto label15;

        if z13 != 0 goto label15;

        $i18 = i31 + 2;

        $i19 = virtualinvoke r2.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>(r39, "/?#", $i18);

        i32 = $i19;

        $i43 = (int) -1;

        if $i19 != $i43 goto label14;

        $i20 = i31 + 2;

        $r27 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int)>($i20);

        $i21 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i21 != 0 goto label12;

        $i33 = i31 + 2;

        goto label13;

     label12:
        $i33 = virtualinvoke r39.<java.lang.String: int length()>();

     label13:
        i32 = $i33;

     label14:
        $i34 = i31 + 2;

        $r41 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>($i34, i32);

        virtualinvoke r2.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>($r41, z0);

        i31 = i32;

        i28 = i32;

        r2.<org.apache.commons.httpclient.URI: boolean _is_net_path> = 1;

     label15:
        if i28 != i31 goto label16;

        r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = 1;

     label16:
        if i28 >= i27 goto label27;

        $i13 = virtualinvoke r2.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>(r39, "?#", i28);

        i35 = $i13;

        $i45 = (int) -1;

        if $i13 != $i45 goto label17;

        i35 = virtualinvoke r39.<java.lang.String: int length()>();

     label17:
        $z2 = r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z2 != 0 goto label24;

        if z0 != 0 goto label18;

        $r25 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(i28, i35);

        $r26 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $z6 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean prevalidate(java.lang.String,java.util.BitSet)>($r25, $r26);

        if $z6 != 0 goto label19;

     label18:
        if z0 == 0 goto label20;

        $r22 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(i28, i35);

        $r23 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        $r24 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $z5 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r23, $r24);

        if $z5 == 0 goto label20;

     label19:
        r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = 1;

        goto label24;

     label20:
        if z0 != 0 goto label21;

        $r20 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(i28, i35);

        $r21 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $z4 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean prevalidate(java.lang.String,java.util.BitSet)>($r20, $r21);

        if $z4 != 0 goto label22;

     label21:
        if z0 == 0 goto label23;

        $r17 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(i28, i35);

        $r18 = virtualinvoke $r17.<java.lang.String: char[] toCharArray()>();

        $r19 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $z3 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r18, $r19);

        if $z3 == 0 goto label23;

     label22:
        r2.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = 1;

        goto label24;

     label23:
        r2.<org.apache.commons.httpclient.URI: char[] _path> = null;

     label24:
        $r42 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(i28, i35);

        if z0 == 0 goto label25;

        $r16 = virtualinvoke $r42.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r2.<org.apache.commons.httpclient.URI: void setRawPath(char[])>($r16);

        goto label26;

     label25:
        virtualinvoke r2.<org.apache.commons.httpclient.URI: void setPath(java.lang.String)>($r42);

     label26:
        i31 = i35;

     label27:
        $r43 = virtualinvoke r2.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        if 0 > i31 goto label31;

        $i7 = i31 + 1;

        if $i7 >= i27 goto label31;

        $c8 = virtualinvoke r39.<java.lang.String: char charAt(int)>(i31);

        $i46 = (int) $c8;

        if $i46 != 63 goto label31;

        $i9 = i31 + 1;

        $i10 = virtualinvoke r39.<java.lang.String: int indexOf(int,int)>(35, $i9);

        i36 = $i10;

        $i48 = (int) -1;

        if $i10 != $i48 goto label28;

        i36 = virtualinvoke r39.<java.lang.String: int length()>();

     label28:
        if z0 == 0 goto label29;

        $i12 = i31 + 1;

        $r11 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>($i12, i36);

        $r12 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.URI: char[] _query> = $r12;

        $r14 = r2.<org.apache.commons.httpclient.URI: char[] _query>;

        $r13 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $z1 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r14, $r13);

        if $z1 != 0 goto label30;

        $r47 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r47.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("Invalid query");

        throw $r47;

     label29:
        $i11 = i31 + 1;

        $r8 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>($i11, i36);

        $r9 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r10 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r8, $r9, $r43);

        r2.<org.apache.commons.httpclient.URI: char[] _query> = $r10;

     label30:
        i31 = i36;

     label31:
        if 0 > i31 goto label35;

        $i2 = i31 + 1;

        if $i2 > i27 goto label35;

        $c3 = virtualinvoke r39.<java.lang.String: char charAt(int)>(i31);

        $i49 = (int) $c3;

        if $i49 != 35 goto label35;

        $i4 = i31 + 1;

        if $i4 != i27 goto label32;

        $r6 = "";

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        r2.<org.apache.commons.httpclient.URI: char[] _fragment> = $r7;

        goto label35;

     label32:
        if z0 == 0 goto label33;

        $i6 = i31 + 1;

        $r5 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int)>($i6);

        $r44 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        goto label34;

     label33:
        $i5 = i31 + 1;

        $r3 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int)>($i5);

        $r4 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r44 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r3, $r4, $r43);

     label34:
        r2.<org.apache.commons.httpclient.URI: char[] _fragment> = $r44;

     label35:
        virtualinvoke r2.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    protected int indexFirstOf(java.lang.String, java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r1, r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i2 = (int) -1;

        $i0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(java.lang.String,java.lang.String,int)>(r1, r2, $i2);

        return $i0;
    }

    protected int indexFirstOf(java.lang.String, java.lang.String, int)
    {
        int $i0, $i1, $i2, $i3, $i5, i6, i7, i8, $i9, $i10, $i12, $i14, $i16, $i17, $i19;
        java.lang.String r0, r1;
        char $c4;
        char[] $r2;
        org.apache.commons.httpclient.URI r3;

        r3 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i6 := @parameter2: int;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $i12 = (int) -1;

        return $i12;

     label02:
        if r1 == null goto label03;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label04;

     label03:
        $i14 = (int) -1;

        return $i14;

     label04:
        if i6 >= 0 goto label05;

        i6 = 0;

        goto label06;

     label05:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 <= $i2 goto label06;

        $i16 = (int) -1;

        return $i16;

     label06:
        i7 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i8 = 0;

     label07:
        $i9 = lengthof $r2;

        if i8 >= $i9 goto label09;

        $c4 = $r2[i8];

        $i17 = (int) $c4;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>($i17, i6);

        if $i5 < 0 goto label08;

        if $i5 >= i7 goto label08;

        i7 = $i5;

     label08:
        i8 = i8 + 1;

        goto label07;

     label09:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i7 != $i3 goto label10;

        $i19 = (int) -1;

        $i10 = $i19;

        goto label11;

     label10:
        $i10 = i7;

     label11:
        return $i10;
    }

    protected int indexFirstOf(char[], char)
    {
        int $i1;
        char[] r1;
        char c0;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: char[];

        c0 := @parameter1: char;

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(char[],char,int)>(r1, c0, 0);

        return $i1;
    }

    protected int indexFirstOf(char[], char, int)
    {
        char c2, $c3;
        int $i0, $i1, i4, i5, $i6, $i8, $i10, $i11, $i12, $i14;
        char[] r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: char[];

        c2 := @parameter1: char;

        i4 := @parameter2: int;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        $i8 = (int) -1;

        return $i8;

     label2:
        if i4 >= 0 goto label3;

        i4 = 0;

        goto label4;

     label3:
        $i1 = lengthof r0;

        if i4 <= $i1 goto label4;

        $i10 = (int) -1;

        return $i10;

     label4:
        i5 = i4;

     label5:
        $i6 = lengthof r0;

        if i5 >= $i6 goto label7;

        $c3 = r0[i5];

        $i11 = (int) $c3;

        $i12 = (int) c2;

        if $i11 != $i12 goto label6;

        return i5;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        $i14 = (int) -1;

        return $i14;
    }

    protected void parseAuthority(java.lang.String, boolean) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r34, $r35, $r36;
        boolean $z0, $z1, z2, $z3, z4, $z5;
        org.apache.commons.httpclient.URI r0;
        java.lang.StringBuffer $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, $i10, i11, i12, $i14, $i16, $i18, $i19, $i21;
        java.lang.String $r1, r2, $r3, $r12, $r19, $r21, $r23, $r25, $r32;
        char $c6;
        java.lang.NumberFormatException $r26;
        char[] $r4, $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r28, $r29, $r31, $r33;
        java.util.BitSet $r5, $r7, $r13, $r16, $r20, $r24;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = 0;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        z4 = 1;

        i9 = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(64);

        $i14 = (int) -1;

        if $i0 == $i14 goto label03;

        if z2 == 0 goto label01;

        $r25 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r28 = virtualinvoke $r25.<java.lang.String: char[] toCharArray()>();

        goto label02;

     label01:
        $r23 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r24 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        $r28 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r23, $r24, $r1);

     label02:
        r0.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r28;

        i9 = $i0 + 1;

     label03:
        $i10 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(91, i9);

        if $i10 < i9 goto label07;

        $i8 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(93, i9);

        $i16 = (int) -1;

        if $i8 != $i16 goto label04;

        $r34 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r34.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "IPv6reference");

        throw $r34;

     label04:
        i11 = $i8 + 1;

        if z2 == 0 goto label05;

        $r21 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i9, i11);

        $r29 = virtualinvoke $r21.<java.lang.String: char[] toCharArray()>();

        goto label06;

     label05:
        $r19 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i9, i11);

        $r20 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        $r29 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r19, $r20, $r1);

     label06:
        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r29;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 1;

        goto label11;

     label07:
        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(58, i9);

        i11 = $i1;

        $i18 = (int) -1;

        if $i1 != $i18 goto label08;

        i11 = virtualinvoke r2.<java.lang.String: int length()>();

        z4 = 0;

     label08:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i9, i11);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _host> = $r4;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r6, $r5);

        if $z0 == 0 goto label09;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 1;

        goto label11;

     label09:
        $r8 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r7 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r8, $r7);

        if $z1 == 0 goto label10;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 1;

        goto label11;

     label10:
        r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = 1;

     label11:
        $z5 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        if $z5 == 0 goto label13;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_hostname> = 0;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 0;

        if z2 == 0 goto label12;

        $r15 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r15;

        $r17 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r16 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $z3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r17, $r16);

        if $z3 != 0 goto label20;

        $r35 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r35.<org.apache.commons.httpclient.URIException: void <init>(java.lang.String)>("Invalid authority");

        throw $r35;

     label12:
        $r13 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        $r14 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r2, $r13, $r1);

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r14;

        goto label20;

     label13:
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if $i3 <= i11 goto label17;

        if z4 == 0 goto label17;

        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i11);

        $i19 = (int) $c6;

        if $i19 != 58 goto label17;

        i12 = i11 + 1;

     label14:
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i12);

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r0.<org.apache.commons.httpclient.URI: int _port> = $i7;

     label15:
        goto label17;

     label16:
        $r26 := @caughtexception;

        $r36 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r36.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "invalid port number");

        throw $r36;

     label17:
        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r31 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r31 == null goto label18;

        $r11 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r11);

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label18:
        $r9 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        if $r9 == null goto label19;

        $r10 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r10);

        $i4 = r0.<org.apache.commons.httpclient.URI: int _port>;

        $i21 = (int) -1;

        if $i4 == $i21 goto label19;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i5 = r0.<org.apache.commons.httpclient.URI: int _port>;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

     label19:
        $r32 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r33 = virtualinvoke $r32.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.commons.httpclient.URI: char[] _authority> = $r33;

        r0.<org.apache.commons.httpclient.URI: boolean _is_server> = 1;

     label20:
        return;

        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    protected void setURI()
    {
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r4;
        boolean $z0, $z1;
        char[] $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r2 == null goto label1;

        $r12 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $z0 = r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r10 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r10 == null goto label2;

        $r11 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r11);

     label2:
        $r13 = r1.<org.apache.commons.httpclient.URI: char[] _opaque>;

        if $r13 == null goto label3;

        $z1 = r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z1 == 0 goto label3;

        $r9 = r1.<org.apache.commons.httpclient.URI: char[] _opaque>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r9);

        goto label4;

     label3:
        $r3 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r3 == null goto label4;

        $r7 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        $i0 = lengthof $r7;

        if $i0 == 0 goto label4;

        $r8 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

     label4:
        $r14 = r1.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r14 == null goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r6 = r1.<org.apache.commons.httpclient.URI: char[] _query>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

     label5:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.URI: char[] _uri> = $r5;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;
    }

    public boolean isAbsoluteURI()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isRelativeURI()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHierPart()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part>;

        return $z0;
    }

    public boolean isOpaquePart()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        return $z0;
    }

    public boolean isNetPath()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 == null goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isAbsPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        return $z0;
    }

    public boolean isRelPath()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        return $z0;
    }

    public boolean hasAuthority()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isRegName()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        return $z0;
    }

    public boolean isServer()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_server>;

        return $z0;
    }

    public boolean hasUserinfo()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHostname()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hostname>;

        return $z0;
    }

    public boolean isIPv4address()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address>;

        return $z0;
    }

    public boolean isIPv6reference()
    {
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference>;

        return $z0;
    }

    public boolean hasQuery()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasFragment()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void setDefaultProtocolCharset(java.lang.String) throws org.apache.commons.httpclient.URI$DefaultCharsetChanged
    {
        org.apache.commons.httpclient.URI$DefaultCharsetChanged $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset> = r0;

        $r1 = new org.apache.commons.httpclient.URI$DefaultCharsetChanged;

        specialinvoke $r1.<org.apache.commons.httpclient.URI$DefaultCharsetChanged: void <init>(int,java.lang.String)>(1, "the default protocol charset changed");

        throw $r1;
    }

    public static java.lang.String getDefaultProtocolCharset()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset>;

        return $r0;
    }

    public java.lang.String getProtocolCharset()
    {
        java.lang.String $r1, $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset>;

     label2:
        return $r2;
    }

    public static void setDefaultDocumentCharset(java.lang.String) throws org.apache.commons.httpclient.URI$DefaultCharsetChanged
    {
        org.apache.commons.httpclient.URI$DefaultCharsetChanged $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = r0;

        $r1 = new org.apache.commons.httpclient.URI$DefaultCharsetChanged;

        specialinvoke $r1.<org.apache.commons.httpclient.URI$DefaultCharsetChanged: void <init>(int,java.lang.String)>(2, "the default document charset changed");

        throw $r1;
    }

    public static java.lang.String getDefaultDocumentCharset()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset>;

        return $r0;
    }

    public static java.lang.String getDefaultDocumentCharsetByLocale()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale>;

        return $r0;
    }

    public static java.lang.String getDefaultDocumentCharsetByPlatform()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform>;

        return $r0;
    }

    public char[] getRawScheme()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        return $r1;
    }

    public java.lang.String getScheme()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public void setRawAuthority(char[]) throws org.apache.commons.httpclient.URIException, java.lang.NullPointerException
    {
        char[] r2;
        java.lang.String $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r2 := @parameter0: char[];

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r2);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>($r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    public void setEscapedAuthority(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        java.lang.String r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void parseAuthority(java.lang.String,boolean)>(r1, 1);

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    public char[] getRawAuthority()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        return $r1;
    }

    public java.lang.String getEscapedAuthority()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getAuthority() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public char[] getRawUserinfo()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        return $r1;
    }

    public java.lang.String getEscapedUserinfo()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getUserinfo() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public char[] getRawHost()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        return $r1;
    }

    public java.lang.String getHost() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

        return $r4;

     label1:
        return null;
    }

    public int getPort()
    {
        int $i0;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        return $i0;
    }

    public void setRawPath(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r15, $r16, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.commons.httpclient.URI r0;
        int $i0, $i3, $i4, $i5, $i7, $i9, $i10, $i12;
        char $c1, $c2;
        char[] $r1, r14;
        java.util.BitSet $r2, $r6, $r7, $r9, $r11, $r12;

        r0 := @this: org.apache.commons.httpclient.URI;

        r14 := @parameter0: char[];

        if r14 == null goto label01;

        $i0 = lengthof r14;

        if $i0 != 0 goto label02;

     label01:
        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = r14;

        r0.<org.apache.commons.httpclient.URI: char[] _path> = r14;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label02:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] removeFragmentIdentifier(char[])>(r14);

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label03;

        $z2 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z2 == 0 goto label06;

     label03:
        $c1 = $r1[0];

        $i5 = (int) $c1;

        if $i5 == 47 goto label04;

        $r15 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r15.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "not absolute path");

        throw $r15;

     label04:
        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $z1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r1, $r2);

        if $z1 != 0 goto label05;

        $r16 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r16.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped absolute path not valid");

        throw $r16;

     label05:
        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

        goto label14;

     label06:
        $z3 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        if $z3 == 0 goto label11;

        $i3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: int indexFirstOf(char[],char)>($r1, 47);

        if $i3 != 0 goto label07;

        $r17 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r17.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r17;

     label07:
        if $i3 <= 0 goto label08;

        $i4 = $i3 - 1;

        $r11 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $z8 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 0, $i4, $r11);

        if $z8 != 0 goto label08;

        $r12 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $i7 = (int) -1;

        $z9 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, $i3, $i7, $r12);

        if $z9 == 0 goto label09;

     label08:
        if $i3 >= 0 goto label10;

        $r9 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $i9 = (int) -1;

        $z7 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 0, $i9, $r9);

        if $z7 != 0 goto label10;

     label09:
        $r18 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r18.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped relative path not valid");

        throw $r18;

     label10:
        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r1;

        goto label14;

     label11:
        $z4 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z4 == 0 goto label13;

        $r6 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $c2 = $r1[0];

        $i10 = (int) $c2;

        $z5 = virtualinvoke $r6.<java.util.BitSet: boolean get(int)>($i10);

        if $z5 != 0 goto label12;

        $r7 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $i12 = (int) -1;

        $z6 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],int,int,java.util.BitSet)>($r1, 1, $i12, $r7);

        if $z6 != 0 goto label12;

        $r19 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r19.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped opaque part not valid");

        throw $r19;

     label12:
        r0.<org.apache.commons.httpclient.URI: char[] _opaque> = $r1;

        goto label14;

     label13:
        $r20 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r20.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r20;

     label14:
        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    public void setEscapedPath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] $r2;
        java.lang.String r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.commons.httpclient.URI: char[] _opaque> = null;

        r1.<org.apache.commons.httpclient.URI: char[] _path> = null;

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setRawPath(char[])>($r2);

        return;
    }

    public void setPath(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r5, $r26;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.httpclient.URI r1;
        java.lang.StringBuffer $r6, $r15;
        int $i0, $i1, $i2;
        java.lang.String r0, $r2, $r7, $r10, $r13, $r18, $r20, $r23;
        char[] $r4, $r9, $r12, $r14, $r17, $r19, $r22, $r25, $r27;
        java.util.BitSet $r3, $r8, $r11, $r16, $r21, $r24;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label01:
        if r0 != null goto label02;

        $r27 = null;

        goto label03;

     label02:
        $r27 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label03:
        r1.<org.apache.commons.httpclient.URI: char[] _opaque> = $r27;

        r1.<org.apache.commons.httpclient.URI: char[] _path> = $r27;

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label04:
        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $z0 = r1.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        if $z0 != 0 goto label05;

        $z1 = r1.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        if $z1 == 0 goto label06;

     label05:
        $r3 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r0, $r3, $r2);

        r1.<org.apache.commons.httpclient.URI: char[] _path> = $r4;

        goto label12;

     label06:
        $z2 = r1.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        if $z2 == 0 goto label10;

        $r15 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        if $i2 != 0 goto label07;

        $r26 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r26.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect relative path");

        throw $r26;

     label07:
        if $i2 <= 0 goto label08;

        $r20 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r21 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r22 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r20, $r21, $r2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r22);

        $r23 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r24 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r25 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r23, $r24, $r2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r25);

        goto label09;

     label08:
        $r16 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r17 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r0, $r16, $r2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r17);

     label09:
        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.URI: char[] _path> = $r19;

        goto label12;

     label10:
        $z3 = r1.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z3 == 0 goto label11;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r8 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r9 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r7, $r8, $r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>(0, $r9);

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r11 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r12 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>($r10, $r11, $r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>(1, $r12);

        $r13 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.String: char[] toCharArray()>();

        r1.<org.apache.commons.httpclient.URI: char[] _opaque> = $r14;

        goto label12;

     label11:
        $r5 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r5.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "incorrect path");

        throw $r5;

     label12:
        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    protected char[] resolvePath(char[], char[]) throws org.apache.commons.httpclient.URIException
    {
        java.lang.StringBuffer $r14;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12;
        java.lang.String r0, $r5, $r8, $r11, $r12, $r13;
        char $c1;
        char[] r1, $r3, $r6, $r7, $r9, r10;
        org.apache.commons.httpclient.URI r2;

        r2 := @this: org.apache.commons.httpclient.URI;

        r10 := @parameter0: char[];

        r1 := @parameter1: char[];

        if r10 != null goto label1;

        $r11 = "";

        goto label2;

     label1:
        $r13 = new java.lang.String;

        $r11 = $r13;

        specialinvoke $r13.<java.lang.String: void <init>(char[])>(r10);

     label2:
        r0 = $r11;

        if r1 == null goto label3;

        $i0 = lengthof r1;

        if $i0 != 0 goto label4;

     label3:
        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.URI: char[] normalize(char[])>(r10);

        return $r3;

     label4:
        $c1 = r1[0];

        $i8 = (int) $c1;

        if $i8 != 47 goto label5;

        $r9 = virtualinvoke r2.<org.apache.commons.httpclient.URI: char[] normalize(char[])>(r1);

        return $r9;

     label5:
        $i2 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(int)>(47);

        $i10 = (int) -1;

        if $i2 == $i10 goto label6;

        $i7 = $i2 + 1;

        $r8 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

     label6:
        $r14 = new java.lang.StringBuffer;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = lengthof r1;

        $i5 = $i3 + $i4;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(int)>($i5);

        $i12 = (int) -1;

        if $i2 == $i12 goto label7;

        $i6 = $i2 + 1;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        goto label8;

     label7:
        $r12 = "/";

     label8:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r1);

        $r5 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        $r7 = virtualinvoke r2.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r6);

        return $r7;
    }

    protected char[] getRawCurrentHierPath(char[]) throws org.apache.commons.httpclient.URIException
    {
        org.apache.commons.httpclient.URIException $r8, $r9;
        int $i0, $i1, $i3;
        char[] r1, $r4, $r5;
        java.lang.String $r3, $r10;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r1 := @parameter0: char[];

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label1;

        $r8 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r8.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "no hierarchy level");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r9 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r9.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(1, "empty path");

        throw $r9;

     label2:
        $r10 = new java.lang.String;

        specialinvoke $r10.<java.lang.String: void <init>(char[])>(r1);

        $i0 = virtualinvoke $r10.<java.lang.String: int indexOf(int)>(47);

        $i1 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(int)>(47);

        if $i1 != 0 goto label3;

        $r5 = <org.apache.commons.httpclient.URI: char[] rootPath>;

        return $r5;

     label3:
        if $i0 == $i1 goto label4;

        $i3 = (int) -1;

        if $i1 == $i3 goto label4;

        $r3 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        return $r4;

     label4:
        return r1;
    }

    public char[] getRawCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getEscapedCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getCurrentHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public char[] getRawAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawCurrentHierPath(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getEscapedAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawAboveHierPath()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getAboveHierPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawAboveHierPath()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public char[] getRawPath()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

     label2:
        return $r1;
    }

    public java.lang.String getEscapedPath()
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getPath() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPath()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public char[] getRawName()
    {
        char $c2;
        int $i0, $i1, $i3, i4, i5, $i6, $i8;
        char[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r1 != null goto label1;

        return null;

     label1:
        i4 = 0;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $i0 = lengthof $r2;

        i5 = $i0 - 1;

     label2:
        if i5 < 0 goto label4;

        $r5 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $c2 = $r5[i5];

        $i6 = (int) $c2;

        if $i6 != 47 goto label3;

        i4 = i5 + 1;

        goto label4;

     label3:
        $i8 = (int) -1;

        i5 = i5 + $i8;

        goto label2;

     label4:
        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $i1 = lengthof $r3;

        $i3 = $i1 - i4;

        $r6 = newarray (char)[$i3];

        $r4 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i4, $r6, 0, $i3);

        return $r6;
    }

    public java.lang.String getEscapedName()
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getName() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawName()>();

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public char[] getRawPathQuery()
    {
        java.lang.StringBuffer $r2;
        char[] $r1, $r3, $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r1 != null goto label1;

        $r9 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r9 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        if $r3 == null goto label2;

        $r8 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r8);

     label2:
        $r4 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r4 == null goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r7 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r7);

     label3:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        return $r6;
    }

    public java.lang.String getEscapedPathQuery()
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPathQuery()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getPathQuery() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawPathQuery()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public void setRawQuery(char[]) throws org.apache.commons.httpclient.URIException
    {
        int $i0;
        char[] $r1, r4;
        java.util.BitSet $r2;
        org.apache.commons.httpclient.URI r0;
        org.apache.commons.httpclient.URIException $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        r4 := @parameter0: char[];

        if r4 == null goto label1;

        $i0 = lengthof r4;

        if $i0 != 0 goto label2;

     label1:
        r0.<org.apache.commons.httpclient.URI: char[] _query> = r4;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label2:
        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] removeFragmentIdentifier(char[])>(r4);

        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>($r1, $r2);

        if $z0 != 0 goto label3;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped query not valid");

        throw $r3;

     label3:
        r0.<org.apache.commons.httpclient.URI: char[] _query> = $r1;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

        return;
    }

    public void setEscapedQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] $r2;
        java.lang.String r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.commons.httpclient.URI: char[] _query> = null;

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setRawQuery(char[])>($r2);

        return;
    }

    public void setQuery(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int $i0;
        char[] $r4, $r5;
        java.lang.String r0, $r3;
        java.util.BitSet $r2;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label1:
        if r0 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label3:
        r1.<org.apache.commons.httpclient.URI: char[] _query> = $r5;

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setURI()>();

        return;

     label4:
        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r0, $r2, $r3);

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setRawQuery(char[])>($r4);

        return;
    }

    public char[] getRawQuery()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        return $r1;
    }

    public java.lang.String getEscapedQuery()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getQuery() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public void setRawFragment(char[]) throws org.apache.commons.httpclient.URIException
    {
        int $i0;
        char[] r0;
        java.util.BitSet $r2;
        org.apache.commons.httpclient.URI r1;
        org.apache.commons.httpclient.URIException $r3;
        boolean $z0;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        r1.<org.apache.commons.httpclient.URI: char[] _fragment> = r0;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label2:
        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet fragment>;

        $z0 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean validate(char[],java.util.BitSet)>(r0, $r2);

        if $z0 != 0 goto label3;

        $r3 = new org.apache.commons.httpclient.URIException;

        specialinvoke $r3.<org.apache.commons.httpclient.URIException: void <init>(int,java.lang.String)>(3, "escaped fragment not valid");

        throw $r3;

     label3:
        r1.<org.apache.commons.httpclient.URI: char[] _fragment> = r0;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;
    }

    public void setEscapedFragment(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        char[] $r2;
        java.lang.String r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.commons.httpclient.URI: char[] _fragment> = null;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r1.<org.apache.commons.httpclient.URI: void setRawFragment(char[])>($r2);

        return;
    }

    public void setFragment(java.lang.String) throws org.apache.commons.httpclient.URIException
    {
        int $i0;
        char[] $r4, $r5;
        java.lang.String r0, $r3;
        java.util.BitSet $r2;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label1:
        if r0 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label3:
        r1.<org.apache.commons.httpclient.URI: char[] _fragment> = $r5;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;

     label4:
        $r2 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)>(r0, $r2, $r3);

        r1.<org.apache.commons.httpclient.URI: char[] _fragment> = $r4;

        r1.<org.apache.commons.httpclient.URI: int hash> = 0;

        return;
    }

    public char[] getRawFragment()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        return $r1;
    }

    public java.lang.String getEscapedFragment()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getFragment() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    protected char[] removeFragmentIdentifier(char[])
    {
        int $i0, $i2;
        char[] r4;
        java.lang.String $r2, $r5, $r6;
        org.apache.commons.httpclient.URI r3;

        r3 := @this: org.apache.commons.httpclient.URI;

        r4 := @parameter0: char[];

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r4);

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(35);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r4);

        $r2 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r4 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

     label2:
        return r4;
    }

    protected char[] normalize(char[]) throws org.apache.commons.httpclient.URIException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.commons.httpclient.URI r12;
        java.lang.StringBuffer $r4, $r6, $r9, $r11, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i21, $i23, $i25;
        java.lang.String $r3, $r5, $r8, $r10, r13, $r15;
        char[] r0, $r14;

        r12 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: char[];

        if r0 != null goto label01;

        return null;

     label01:
        $r15 = new java.lang.String;

        specialinvoke $r15.<java.lang.String: void <init>(char[])>(r0);

        r13 = $r15;

        $z0 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("./");

        if $z0 == 0 goto label02;

        r13 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>(1);

        goto label04;

     label02:
        $z1 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("../");

        if $z1 == 0 goto label03;

        r13 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>(2);

        goto label04;

     label03:
        $z2 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("..");

        if $z2 == 0 goto label04;

        r13 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int)>(2);

     label04:
        $i16 = virtualinvoke r13.<java.lang.String: int indexOf(java.lang.String)>("/./");

        $i21 = (int) -1;

        if $i16 == $i21 goto label05;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

        $r9 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $i15 = $i16 + 2;

        $r10 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i15);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label05:
        $z3 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("/.");

        if $z3 == 0 goto label06;

        $i13 = virtualinvoke r13.<java.lang.String: int length()>();

        $i14 = $i13 - 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

     label06:
        i17 = 0;

     label07:
        $i18 = virtualinvoke r13.<java.lang.String: int indexOf(java.lang.String,int)>("/../", i17);

        $i23 = (int) -1;

        if $i18 == $i23 goto label10;

        $i10 = $i18 - 1;

        $i11 = virtualinvoke r13.<java.lang.String: int lastIndexOf(int,int)>(47, $i10);

        if $i11 < 0 goto label08;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i11);

        $r4 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i12 = $i18 + 3;

        $r5 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i12);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r13 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label08:
        i17 = $i18 + 3;

     label09:
        goto label07;

     label10:
        $z4 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z4 == 0 goto label11;

        $i6 = virtualinvoke r13.<java.lang.String: int length()>();

        $i7 = $i6 - 4;

        $i8 = virtualinvoke r13.<java.lang.String: int lastIndexOf(int,int)>(47, $i7);

        if $i8 < 0 goto label11;

        $i9 = $i8 + 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

     label11:
        $i19 = virtualinvoke r13.<java.lang.String: int indexOf(java.lang.String)>("/../");

        $i25 = (int) -1;

        if $i19 == $i25 goto label13;

        $i3 = $i19 - 1;

        $i4 = virtualinvoke r13.<java.lang.String: int lastIndexOf(int,int)>(47, $i3);

        if $i4 < 0 goto label12;

        goto label13;

     label12:
        $i5 = $i19 + 3;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i5);

        goto label11;

     label13:
        $z5 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z5 == 0 goto label14;

        $i0 = virtualinvoke r13.<java.lang.String: int length()>();

        $i1 = $i0 - 4;

        $i2 = virtualinvoke r13.<java.lang.String: int lastIndexOf(int,int)>(47, $i1);

        if $i2 >= 0 goto label14;

        r13 = "/";

     label14:
        $r14 = virtualinvoke r13.<java.lang.String: char[] toCharArray()>();

        return $r14;
    }

    public void normalize() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        org.apache.commons.httpclient.URI r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $z0 = virtualinvoke r0.<org.apache.commons.httpclient.URI: boolean isAbsPath()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] normalize(char[])>($r1);

        r0.<org.apache.commons.httpclient.URI: char[] _path> = $r2;

        virtualinvoke r0.<org.apache.commons.httpclient.URI: void setURI()>();

     label1:
        return;
    }

    protected boolean equals(char[], char[])
    {
        char $c3, $c4;
        int $i0, $i1, $i2, i5, $i6, $i7;
        char[] r0, r1;
        org.apache.commons.httpclient.URI r2;

        r2 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: char[];

        r1 := @parameter1: char[];

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        i5 = 0;

     label5:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label7;

        $c4 = r0[i5];

        $c3 = r1[i5];

        $i6 = (int) $c4;

        $i7 = (int) $c3;

        if $i6 == $i7 goto label6;

        return 0;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        char[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Object r0;
        org.apache.commons.httpclient.URI r1, r2;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.commons.httpclient.URI;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.commons.httpclient.URI) r0;

        $r4 = r1.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $r3 = r2.<org.apache.commons.httpclient.URI: char[] _scheme>;

        $z1 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r1.<org.apache.commons.httpclient.URI: char[] _opaque>;

        $r5 = r2.<org.apache.commons.httpclient.URI: char[] _opaque>;

        $z2 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r8 = r1.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r7 = r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        $z3 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r8, $r7);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r10 = r1.<org.apache.commons.httpclient.URI: char[] _path>;

        $r9 = r2.<org.apache.commons.httpclient.URI: char[] _path>;

        $z4 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r10, $r9);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r12 = r1.<org.apache.commons.httpclient.URI: char[] _query>;

        $r11 = r2.<org.apache.commons.httpclient.URI: char[] _query>;

        $z5 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r12, $r11);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r14 = r1.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $r13 = r2.<org.apache.commons.httpclient.URI: char[] _fragment>;

        $z6 = virtualinvoke r1.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r14, $r13);

        if $z6 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException
    {
        java.io.ObjectInputStream r0;
        org.apache.commons.httpclient.URI r1;

        r1 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        return;
    }

    public int hashCode()
    {
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, i9, i10, i11, i12, $i13, $i14, $i15;
        char $c2, $c6;
        char[] $r1, r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $i0 = r0.<org.apache.commons.httpclient.URI: int hash>;

        if $i0 != 0 goto label4;

        r2 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if r2 == null goto label2;

        i9 = 0;

        i10 = lengthof r2;

     label1:
        if i9 >= i10 goto label2;

        $i5 = r0.<org.apache.commons.httpclient.URI: int hash>;

        $i7 = 31 * $i5;

        $c6 = r2[i9];

        $i14 = (int) $c6;

        $i8 = $i7 + $i14;

        r0.<org.apache.commons.httpclient.URI: int hash> = $i8;

        i9 = i9 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 == null goto label4;

        i11 = 0;

        i12 = lengthof $r1;

     label3:
        if i11 >= i12 goto label4;

        $i1 = r0.<org.apache.commons.httpclient.URI: int hash>;

        $i3 = 31 * $i1;

        $c2 = $r1[i11];

        $i15 = (int) $c2;

        $i4 = $i3 + $i15;

        r0.<org.apache.commons.httpclient.URI: int hash> = $i4;

        i11 = i11 + 1;

        goto label3;

     label4:
        $i13 = r0.<org.apache.commons.httpclient.URI: int hash>;

        return $i13;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        int $i0, $i2;
        char[] $r3, $r4;
        java.lang.Object r0;
        java.lang.String $r5, $r6;
        org.apache.commons.httpclient.URI r1, r2;
        boolean $z0;

        r2 := @this: org.apache.commons.httpclient.URI;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.apache.commons.httpclient.URI) r0;

        $r3 = r2.<org.apache.commons.httpclient.URI: char[] _authority>;

        $r4 = virtualinvoke r1.<org.apache.commons.httpclient.URI: char[] getRawAuthority()>();

        $z0 = virtualinvoke r2.<org.apache.commons.httpclient.URI: boolean equals(char[],char[])>($r3, $r4);

        if $z0 != 0 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r5 = virtualinvoke r2.<org.apache.commons.httpclient.URI: java.lang.String toString()>();

        $r6 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String toString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r6);

        return $i0;
    }

    public synchronized java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        int $i0;
        java.lang.String $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        char[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.Object $r1;
        org.apache.commons.httpclient.URI r0, r2;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.httpclient.URI) $r1;

        $r3 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        r2.<org.apache.commons.httpclient.URI: char[] _uri> = $r3;

        $r4 = r0.<org.apache.commons.httpclient.URI: char[] _scheme>;

        r2.<org.apache.commons.httpclient.URI: char[] _scheme> = $r4;

        $r5 = r0.<org.apache.commons.httpclient.URI: char[] _opaque>;

        r2.<org.apache.commons.httpclient.URI: char[] _opaque> = $r5;

        $r6 = r0.<org.apache.commons.httpclient.URI: char[] _authority>;

        r2.<org.apache.commons.httpclient.URI: char[] _authority> = $r6;

        $r7 = r0.<org.apache.commons.httpclient.URI: char[] _userinfo>;

        r2.<org.apache.commons.httpclient.URI: char[] _userinfo> = $r7;

        $r8 = r0.<org.apache.commons.httpclient.URI: char[] _host>;

        r2.<org.apache.commons.httpclient.URI: char[] _host> = $r8;

        $i0 = r0.<org.apache.commons.httpclient.URI: int _port>;

        r2.<org.apache.commons.httpclient.URI: int _port> = $i0;

        $r9 = r0.<org.apache.commons.httpclient.URI: char[] _path>;

        r2.<org.apache.commons.httpclient.URI: char[] _path> = $r9;

        $r10 = r0.<org.apache.commons.httpclient.URI: char[] _query>;

        r2.<org.apache.commons.httpclient.URI: char[] _query> = $r10;

        $r11 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        r2.<org.apache.commons.httpclient.URI: char[] _fragment> = $r11;

        $r12 = r0.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset>;

        r2.<org.apache.commons.httpclient.URI: java.lang.String protocolCharset> = $r12;

        $z0 = r0.<org.apache.commons.httpclient.URI: boolean _is_hier_part>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_hier_part> = $z0;

        $z1 = r0.<org.apache.commons.httpclient.URI: boolean _is_opaque_part>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_opaque_part> = $z1;

        $z2 = r0.<org.apache.commons.httpclient.URI: boolean _is_net_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_net_path> = $z2;

        $z3 = r0.<org.apache.commons.httpclient.URI: boolean _is_abs_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_abs_path> = $z3;

        $z4 = r0.<org.apache.commons.httpclient.URI: boolean _is_rel_path>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_rel_path> = $z4;

        $z5 = r0.<org.apache.commons.httpclient.URI: boolean _is_reg_name>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_reg_name> = $z5;

        $z6 = r0.<org.apache.commons.httpclient.URI: boolean _is_server>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_server> = $z6;

        $z7 = r0.<org.apache.commons.httpclient.URI: boolean _is_hostname>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_hostname> = $z7;

        $z8 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv4address>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_IPv4address> = $z8;

        $z9 = r0.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference>;

        r2.<org.apache.commons.httpclient.URI: boolean _is_IPv6reference> = $z9;

        return r2;
    }

    public char[] getRawURI()
    {
        char[] $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        return $r1;
    }

    public java.lang.String getEscapedURI()
    {
        char[] $r1, $r2;
        java.lang.String $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r2);

     label2:
        return $r3;
    }

    public java.lang.String getURI() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1, $r2;
        java.lang.String $r3, $r4;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r4 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r2, $r3);

     label2:
        return $r4;
    }

    public char[] getRawURIReference()
    {
        java.lang.StringBuffer $r3, $r6, $r7, $r10;
        char[] $r1, $r2, $r5, $r9, $r12, $r13, $r14;
        java.lang.String $r4, $r8, $r11;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        if $r1 != null goto label1;

        $r14 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        return $r14;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        if $r2 != null goto label2;

        $r13 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        return $r13;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = new java.lang.String;

        $r5 = r0.<org.apache.commons.httpclient.URI: char[] _uri>;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r8 = new java.lang.String;

        $r9 = r0.<org.apache.commons.httpclient.URI: char[] _fragment>;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: char[] toCharArray()>();

        return $r12;
    }

    public java.lang.String getEscapedURIReference()
    {
        char[] $r1;
        java.lang.String $r2;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawURIReference()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label2:
        return $r2;
    }

    public java.lang.String getURIReference() throws org.apache.commons.httpclient.URIException
    {
        char[] $r1;
        java.lang.String $r2, $r3;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: char[] getRawURIReference()>();

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getProtocolCharset()>();

        $r3 = staticinvoke <org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)>($r1, $r2);

     label2:
        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.URI r0;

        r0 := @this: org.apache.commons.httpclient.URI;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.URI: java.lang.String getEscapedURI()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.SecurityException $r359;
        int i0, i1, i2, i3, i4, i5;
        java.util.BitSet $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r249, $r250, $r251, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r259, $r260, $r261, $r262, $r263, $r264, $r265, $r266, $r267, $r268, $r269, $r270, $r271, $r272, $r273, $r274, $r275, $r276, $r277, $r278, $r279, $r280, $r281, $r282, $r283, $r284, $r285, $r286, $r287, $r288, $r289, $r290, $r291, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r301, $r302, $r303, $r304, $r305, $r306, $r307, $r308, $r309, $r310, $r311, $r312, $r313, $r314, $r315, $r316, $r317, $r318, $r319, $r320, $r321, $r322, $r323, $r324, $r325, $r326, $r327, $r328, $r329, $r330, $r331, $r332, $r333, $r334, $r335, $r336, $r337, $r338, $r339, $r340, $r341, $r342, $r343, $r344, $r345, $r346, $r347, $r348, $r349, $r350, $r351, $r352, $r353, $r354, $r355;
        java.lang.String $r1, $r2, $r356, $r357, $r358;
        char[] $r3;
        java.util.Locale $r0;

        <org.apache.commons.httpclient.URI: long serialVersionUID> = 604752400577948726L;

        <org.apache.commons.httpclient.URI: java.lang.String defaultProtocolCharset> = "UTF-8";

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = null;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale> = null;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform> = null;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        if $r0 == null goto label01;

        $r357 = staticinvoke <org.apache.commons.httpclient.URI$LocaleToCharsetMap: java.lang.String getCharset(java.util.Locale)>($r0);

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale> = $r357;

        $r358 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByLocale>;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = $r358;

     label01:
        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform> = $r1;

     label02:
        goto label04;

     label03:
        $r359 := @caughtexception;

     label04:
        $r2 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset>;

        if $r2 != null goto label05;

        $r356 = <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharsetByPlatform>;

        <org.apache.commons.httpclient.URI: java.lang.String defaultDocumentCharset> = $r356;

     label05:
        $r3 = newarray (char)[1];

        $r3[0] = 47;

        <org.apache.commons.httpclient.URI: char[] rootPath> = $r3;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet percent> = $r4;

        $r5 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r5.<java.util.BitSet: void set(int)>(37);

        $r6 = new java.util.BitSet;

        specialinvoke $r6.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet digit> = $r6;

        i0 = 48;

     label06:
        if i0 > 57 goto label07;

        $r355 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r355.<java.util.BitSet: void set(int)>(i0);

        i0 = i0 + 1;

        goto label06;

     label07:
        $r7 = new java.util.BitSet;

        specialinvoke $r7.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet alpha> = $r7;

        i1 = 97;

     label08:
        if i1 > 122 goto label09;

        $r354 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r354.<java.util.BitSet: void set(int)>(i1);

        i1 = i1 + 1;

        goto label08;

     label09:
        i2 = 65;

     label10:
        if i2 > 90 goto label11;

        $r353 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r353.<java.util.BitSet: void set(int)>(i2);

        i2 = i2 + 1;

        goto label10;

     label11:
        $r8 = new java.util.BitSet;

        specialinvoke $r8.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet alphanum> = $r8;

        $r10 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        $r9 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r10.<java.util.BitSet: void or(java.util.BitSet)>($r9);

        $r12 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        $r11 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r12.<java.util.BitSet: void or(java.util.BitSet)>($r11);

        $r13 = new java.util.BitSet;

        specialinvoke $r13.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hex> = $r13;

        $r15 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        $r14 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r15.<java.util.BitSet: void or(java.util.BitSet)>($r14);

        i3 = 97;

     label12:
        if i3 > 102 goto label13;

        $r352 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r352.<java.util.BitSet: void set(int)>(i3);

        i3 = i3 + 1;

        goto label12;

     label13:
        i4 = 65;

     label14:
        if i4 > 70 goto label15;

        $r351 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r351.<java.util.BitSet: void set(int)>(i4);

        i4 = i4 + 1;

        goto label14;

     label15:
        $r16 = new java.util.BitSet;

        specialinvoke $r16.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet escaped> = $r16;

        $r18 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        $r17 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r18.<java.util.BitSet: void or(java.util.BitSet)>($r17);

        $r20 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        $r19 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r20.<java.util.BitSet: void or(java.util.BitSet)>($r19);

        $r21 = new java.util.BitSet;

        specialinvoke $r21.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet mark> = $r21;

        $r22 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r22.<java.util.BitSet: void set(int)>(45);

        $r23 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r23.<java.util.BitSet: void set(int)>(95);

        $r24 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r24.<java.util.BitSet: void set(int)>(46);

        $r25 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r25.<java.util.BitSet: void set(int)>(33);

        $r26 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r26.<java.util.BitSet: void set(int)>(126);

        $r27 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r27.<java.util.BitSet: void set(int)>(42);

        $r28 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r28.<java.util.BitSet: void set(int)>(39);

        $r29 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r29.<java.util.BitSet: void set(int)>(40);

        $r30 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r30.<java.util.BitSet: void set(int)>(41);

        $r31 = new java.util.BitSet;

        specialinvoke $r31.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet unreserved> = $r31;

        $r33 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        $r32 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        virtualinvoke $r33.<java.util.BitSet: void or(java.util.BitSet)>($r32);

        $r35 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        $r34 = <org.apache.commons.httpclient.URI: java.util.BitSet mark>;

        virtualinvoke $r35.<java.util.BitSet: void or(java.util.BitSet)>($r34);

        $r36 = new java.util.BitSet;

        specialinvoke $r36.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet reserved> = $r36;

        $r37 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r37.<java.util.BitSet: void set(int)>(59);

        $r38 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r38.<java.util.BitSet: void set(int)>(47);

        $r39 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r39.<java.util.BitSet: void set(int)>(63);

        $r40 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r40.<java.util.BitSet: void set(int)>(58);

        $r41 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r41.<java.util.BitSet: void set(int)>(64);

        $r42 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r42.<java.util.BitSet: void set(int)>(38);

        $r43 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r43.<java.util.BitSet: void set(int)>(61);

        $r44 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r44.<java.util.BitSet: void set(int)>(43);

        $r45 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r45.<java.util.BitSet: void set(int)>(36);

        $r46 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r46.<java.util.BitSet: void set(int)>(44);

        $r47 = new java.util.BitSet;

        specialinvoke $r47.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet uric> = $r47;

        $r49 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r48 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r49.<java.util.BitSet: void or(java.util.BitSet)>($r48);

        $r51 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r50 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r51.<java.util.BitSet: void or(java.util.BitSet)>($r50);

        $r53 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        $r52 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r53.<java.util.BitSet: void or(java.util.BitSet)>($r52);

        $r54 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        <org.apache.commons.httpclient.URI: java.util.BitSet fragment> = $r54;

        $r55 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        <org.apache.commons.httpclient.URI: java.util.BitSet query> = $r55;

        $r56 = new java.util.BitSet;

        specialinvoke $r56.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet pchar> = $r56;

        $r58 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        $r57 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r58.<java.util.BitSet: void or(java.util.BitSet)>($r57);

        $r60 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        $r59 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r60.<java.util.BitSet: void or(java.util.BitSet)>($r59);

        $r61 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r61.<java.util.BitSet: void set(int)>(58);

        $r62 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r62.<java.util.BitSet: void set(int)>(64);

        $r63 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r63.<java.util.BitSet: void set(int)>(38);

        $r64 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r64.<java.util.BitSet: void set(int)>(61);

        $r65 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r65.<java.util.BitSet: void set(int)>(43);

        $r66 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r66.<java.util.BitSet: void set(int)>(36);

        $r67 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r67.<java.util.BitSet: void set(int)>(44);

        $r68 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        <org.apache.commons.httpclient.URI: java.util.BitSet param> = $r68;

        $r69 = new java.util.BitSet;

        specialinvoke $r69.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet segment> = $r69;

        $r71 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        $r70 = <org.apache.commons.httpclient.URI: java.util.BitSet pchar>;

        virtualinvoke $r71.<java.util.BitSet: void or(java.util.BitSet)>($r70);

        $r72 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        virtualinvoke $r72.<java.util.BitSet: void set(int)>(59);

        $r74 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        $r73 = <org.apache.commons.httpclient.URI: java.util.BitSet param>;

        virtualinvoke $r74.<java.util.BitSet: void or(java.util.BitSet)>($r73);

        $r75 = new java.util.BitSet;

        specialinvoke $r75.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet path_segments> = $r75;

        $r76 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        virtualinvoke $r76.<java.util.BitSet: void set(int)>(47);

        $r78 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        $r77 = <org.apache.commons.httpclient.URI: java.util.BitSet segment>;

        virtualinvoke $r78.<java.util.BitSet: void or(java.util.BitSet)>($r77);

        $r79 = new java.util.BitSet;

        specialinvoke $r79.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet abs_path> = $r79;

        $r80 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r80.<java.util.BitSet: void set(int)>(47);

        $r82 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        $r81 = <org.apache.commons.httpclient.URI: java.util.BitSet path_segments>;

        virtualinvoke $r82.<java.util.BitSet: void or(java.util.BitSet)>($r81);

        $r83 = new java.util.BitSet;

        specialinvoke $r83.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash> = $r83;

        $r85 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r84 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r85.<java.util.BitSet: void or(java.util.BitSet)>($r84);

        $r87 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        $r86 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r87.<java.util.BitSet: void or(java.util.BitSet)>($r86);

        $r88 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r88.<java.util.BitSet: void set(int)>(59);

        $r89 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r89.<java.util.BitSet: void set(int)>(63);

        $r90 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r90.<java.util.BitSet: void set(int)>(59);

        $r91 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r91.<java.util.BitSet: void set(int)>(64);

        $r92 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r92.<java.util.BitSet: void set(int)>(38);

        $r93 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r93.<java.util.BitSet: void set(int)>(61);

        $r94 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r94.<java.util.BitSet: void set(int)>(43);

        $r95 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r95.<java.util.BitSet: void set(int)>(36);

        $r96 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r96.<java.util.BitSet: void set(int)>(44);

        $r97 = new java.util.BitSet;

        specialinvoke $r97.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part> = $r97;

        $r99 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $r98 = <org.apache.commons.httpclient.URI: java.util.BitSet uric_no_slash>;

        virtualinvoke $r99.<java.util.BitSet: void or(java.util.BitSet)>($r98);

        $r101 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        $r100 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r101.<java.util.BitSet: void or(java.util.BitSet)>($r100);

        $r102 = new java.util.BitSet;

        specialinvoke $r102.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet path> = $r102;

        $r104 = <org.apache.commons.httpclient.URI: java.util.BitSet path>;

        $r103 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r104.<java.util.BitSet: void or(java.util.BitSet)>($r103);

        $r106 = <org.apache.commons.httpclient.URI: java.util.BitSet path>;

        $r105 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r106.<java.util.BitSet: void or(java.util.BitSet)>($r105);

        $r107 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        <org.apache.commons.httpclient.URI: java.util.BitSet port> = $r107;

        $r108 = new java.util.BitSet;

        specialinvoke $r108.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address> = $r108;

        $r110 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        $r109 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r110.<java.util.BitSet: void or(java.util.BitSet)>($r109);

        $r111 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        virtualinvoke $r111.<java.util.BitSet: void set(int)>(46);

        $r112 = new java.util.BitSet;

        specialinvoke $r112.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address> = $r112;

        $r114 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        $r113 = <org.apache.commons.httpclient.URI: java.util.BitSet hex>;

        virtualinvoke $r114.<java.util.BitSet: void or(java.util.BitSet)>($r113);

        $r115 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        virtualinvoke $r115.<java.util.BitSet: void set(int)>(58);

        $r117 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        $r116 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv4address>;

        virtualinvoke $r117.<java.util.BitSet: void or(java.util.BitSet)>($r116);

        $r118 = new java.util.BitSet;

        specialinvoke $r118.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference> = $r118;

        $r119 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r119.<java.util.BitSet: void set(int)>(91);

        $r121 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        $r120 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6address>;

        virtualinvoke $r121.<java.util.BitSet: void or(java.util.BitSet)>($r120);

        $r122 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r122.<java.util.BitSet: void set(int)>(93);

        $r123 = new java.util.BitSet;

        specialinvoke $r123.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet toplabel> = $r123;

        $r125 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        $r124 = <org.apache.commons.httpclient.URI: java.util.BitSet alphanum>;

        virtualinvoke $r125.<java.util.BitSet: void or(java.util.BitSet)>($r124);

        $r126 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        virtualinvoke $r126.<java.util.BitSet: void set(int)>(45);

        $r127 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        <org.apache.commons.httpclient.URI: java.util.BitSet domainlabel> = $r127;

        $r128 = new java.util.BitSet;

        specialinvoke $r128.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hostname> = $r128;

        $r130 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        $r129 = <org.apache.commons.httpclient.URI: java.util.BitSet toplabel>;

        virtualinvoke $r130.<java.util.BitSet: void or(java.util.BitSet)>($r129);

        $r131 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r131.<java.util.BitSet: void set(int)>(46);

        $r132 = new java.util.BitSet;

        specialinvoke $r132.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet host> = $r132;

        $r134 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        $r133 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r134.<java.util.BitSet: void or(java.util.BitSet)>($r133);

        $r136 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        $r135 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r136.<java.util.BitSet: void or(java.util.BitSet)>($r135);

        $r137 = new java.util.BitSet;

        specialinvoke $r137.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hostport> = $r137;

        $r139 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        $r138 = <org.apache.commons.httpclient.URI: java.util.BitSet host>;

        virtualinvoke $r139.<java.util.BitSet: void or(java.util.BitSet)>($r138);

        $r140 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        virtualinvoke $r140.<java.util.BitSet: void set(int)>(58);

        $r142 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        $r141 = <org.apache.commons.httpclient.URI: java.util.BitSet port>;

        virtualinvoke $r142.<java.util.BitSet: void or(java.util.BitSet)>($r141);

        $r143 = new java.util.BitSet;

        specialinvoke $r143.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet userinfo> = $r143;

        $r145 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        $r144 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r145.<java.util.BitSet: void or(java.util.BitSet)>($r144);

        $r147 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        $r146 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r147.<java.util.BitSet: void or(java.util.BitSet)>($r146);

        $r148 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r148.<java.util.BitSet: void set(int)>(59);

        $r149 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r149.<java.util.BitSet: void set(int)>(58);

        $r150 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r150.<java.util.BitSet: void set(int)>(38);

        $r151 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r151.<java.util.BitSet: void set(int)>(61);

        $r152 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r152.<java.util.BitSet: void set(int)>(43);

        $r153 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r153.<java.util.BitSet: void set(int)>(36);

        $r154 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r154.<java.util.BitSet: void set(int)>(44);

        $r155 = new java.util.BitSet;

        specialinvoke $r155.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo> = $r155;

        $r157 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        $r156 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r157.<java.util.BitSet: void or(java.util.BitSet)>($r156);

        $r158 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r158.<java.util.BitSet: void clear(int)>(59);

        $r159 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r159.<java.util.BitSet: void clear(int)>(58);

        $r160 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r160.<java.util.BitSet: void clear(int)>(64);

        $r161 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r161.<java.util.BitSet: void clear(int)>(63);

        $r162 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r162.<java.util.BitSet: void clear(int)>(47);

        $r163 = new java.util.BitSet;

        specialinvoke $r163.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet server> = $r163;

        $r165 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        $r164 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r165.<java.util.BitSet: void or(java.util.BitSet)>($r164);

        $r166 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r166.<java.util.BitSet: void set(int)>(64);

        $r168 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        $r167 = <org.apache.commons.httpclient.URI: java.util.BitSet hostport>;

        virtualinvoke $r168.<java.util.BitSet: void or(java.util.BitSet)>($r167);

        $r169 = new java.util.BitSet;

        specialinvoke $r169.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet reg_name> = $r169;

        $r171 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $r170 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r171.<java.util.BitSet: void or(java.util.BitSet)>($r170);

        $r173 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        $r172 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r173.<java.util.BitSet: void or(java.util.BitSet)>($r172);

        $r174 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r174.<java.util.BitSet: void set(int)>(36);

        $r175 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r175.<java.util.BitSet: void set(int)>(44);

        $r176 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r176.<java.util.BitSet: void set(int)>(59);

        $r177 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r177.<java.util.BitSet: void set(int)>(58);

        $r178 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r178.<java.util.BitSet: void set(int)>(64);

        $r179 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r179.<java.util.BitSet: void set(int)>(38);

        $r180 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r180.<java.util.BitSet: void set(int)>(61);

        $r181 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r181.<java.util.BitSet: void set(int)>(43);

        $r182 = new java.util.BitSet;

        specialinvoke $r182.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet authority> = $r182;

        $r184 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        $r183 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r184.<java.util.BitSet: void or(java.util.BitSet)>($r183);

        $r186 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        $r185 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r186.<java.util.BitSet: void or(java.util.BitSet)>($r185);

        $r187 = new java.util.BitSet;

        specialinvoke $r187.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet scheme> = $r187;

        $r189 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $r188 = <org.apache.commons.httpclient.URI: java.util.BitSet alpha>;

        virtualinvoke $r189.<java.util.BitSet: void or(java.util.BitSet)>($r188);

        $r191 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        $r190 = <org.apache.commons.httpclient.URI: java.util.BitSet digit>;

        virtualinvoke $r191.<java.util.BitSet: void or(java.util.BitSet)>($r190);

        $r192 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r192.<java.util.BitSet: void set(int)>(43);

        $r193 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r193.<java.util.BitSet: void set(int)>(45);

        $r194 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r194.<java.util.BitSet: void set(int)>(46);

        $r195 = new java.util.BitSet;

        specialinvoke $r195.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment> = $r195;

        $r197 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $r196 = <org.apache.commons.httpclient.URI: java.util.BitSet unreserved>;

        virtualinvoke $r197.<java.util.BitSet: void or(java.util.BitSet)>($r196);

        $r199 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        $r198 = <org.apache.commons.httpclient.URI: java.util.BitSet escaped>;

        virtualinvoke $r199.<java.util.BitSet: void or(java.util.BitSet)>($r198);

        $r200 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r200.<java.util.BitSet: void set(int)>(59);

        $r201 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r201.<java.util.BitSet: void set(int)>(64);

        $r202 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r202.<java.util.BitSet: void set(int)>(38);

        $r203 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r203.<java.util.BitSet: void set(int)>(61);

        $r204 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r204.<java.util.BitSet: void set(int)>(43);

        $r205 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r205.<java.util.BitSet: void set(int)>(36);

        $r206 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r206.<java.util.BitSet: void set(int)>(44);

        $r207 = new java.util.BitSet;

        specialinvoke $r207.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet rel_path> = $r207;

        $r209 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $r208 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_segment>;

        virtualinvoke $r209.<java.util.BitSet: void or(java.util.BitSet)>($r208);

        $r211 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        $r210 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r211.<java.util.BitSet: void or(java.util.BitSet)>($r210);

        $r212 = new java.util.BitSet;

        specialinvoke $r212.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet net_path> = $r212;

        $r213 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r213.<java.util.BitSet: void set(int)>(47);

        $r215 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        $r214 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        virtualinvoke $r215.<java.util.BitSet: void or(java.util.BitSet)>($r214);

        $r217 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        $r216 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r217.<java.util.BitSet: void or(java.util.BitSet)>($r216);

        $r218 = new java.util.BitSet;

        specialinvoke $r218.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet hier_part> = $r218;

        $r220 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r219 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r220.<java.util.BitSet: void or(java.util.BitSet)>($r219);

        $r222 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r221 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r222.<java.util.BitSet: void or(java.util.BitSet)>($r221);

        $r224 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        $r223 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        virtualinvoke $r224.<java.util.BitSet: void or(java.util.BitSet)>($r223);

        $r225 = new java.util.BitSet;

        specialinvoke $r225.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI> = $r225;

        $r227 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r226 = <org.apache.commons.httpclient.URI: java.util.BitSet net_path>;

        virtualinvoke $r227.<java.util.BitSet: void or(java.util.BitSet)>($r226);

        $r229 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r228 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r229.<java.util.BitSet: void or(java.util.BitSet)>($r228);

        $r231 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r230 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r231.<java.util.BitSet: void or(java.util.BitSet)>($r230);

        $r233 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        $r232 = <org.apache.commons.httpclient.URI: java.util.BitSet query>;

        virtualinvoke $r233.<java.util.BitSet: void or(java.util.BitSet)>($r232);

        $r234 = new java.util.BitSet;

        specialinvoke $r234.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI> = $r234;

        $r236 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r235 = <org.apache.commons.httpclient.URI: java.util.BitSet scheme>;

        virtualinvoke $r236.<java.util.BitSet: void or(java.util.BitSet)>($r235);

        $r237 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        virtualinvoke $r237.<java.util.BitSet: void set(int)>(58);

        $r239 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r238 = <org.apache.commons.httpclient.URI: java.util.BitSet hier_part>;

        virtualinvoke $r239.<java.util.BitSet: void or(java.util.BitSet)>($r238);

        $r241 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        $r240 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r241.<java.util.BitSet: void or(java.util.BitSet)>($r240);

        $r242 = new java.util.BitSet;

        specialinvoke $r242.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference> = $r242;

        $r244 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r243 = <org.apache.commons.httpclient.URI: java.util.BitSet absoluteURI>;

        virtualinvoke $r244.<java.util.BitSet: void or(java.util.BitSet)>($r243);

        $r246 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r245 = <org.apache.commons.httpclient.URI: java.util.BitSet relativeURI>;

        virtualinvoke $r246.<java.util.BitSet: void or(java.util.BitSet)>($r245);

        $r247 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        virtualinvoke $r247.<java.util.BitSet: void set(int)>(35);

        $r249 = <org.apache.commons.httpclient.URI: java.util.BitSet URI_reference>;

        $r248 = <org.apache.commons.httpclient.URI: java.util.BitSet fragment>;

        virtualinvoke $r249.<java.util.BitSet: void or(java.util.BitSet)>($r248);

        $r250 = new java.util.BitSet;

        specialinvoke $r250.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet control> = $r250;

        i5 = 0;

     label16:
        if i5 > 31 goto label17;

        $r350 = <org.apache.commons.httpclient.URI: java.util.BitSet control>;

        virtualinvoke $r350.<java.util.BitSet: void set(int)>(i5);

        i5 = i5 + 1;

        goto label16;

     label17:
        $r251 = <org.apache.commons.httpclient.URI: java.util.BitSet control>;

        virtualinvoke $r251.<java.util.BitSet: void set(int)>(127);

        $r252 = new java.util.BitSet;

        specialinvoke $r252.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet space> = $r252;

        $r253 = <org.apache.commons.httpclient.URI: java.util.BitSet space>;

        virtualinvoke $r253.<java.util.BitSet: void set(int)>(32);

        $r254 = new java.util.BitSet;

        specialinvoke $r254.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet delims> = $r254;

        $r255 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r255.<java.util.BitSet: void set(int)>(60);

        $r256 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r256.<java.util.BitSet: void set(int)>(62);

        $r257 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r257.<java.util.BitSet: void set(int)>(35);

        $r258 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r258.<java.util.BitSet: void set(int)>(37);

        $r259 = <org.apache.commons.httpclient.URI: java.util.BitSet delims>;

        virtualinvoke $r259.<java.util.BitSet: void set(int)>(34);

        $r260 = new java.util.BitSet;

        specialinvoke $r260.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet unwise> = $r260;

        $r261 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r261.<java.util.BitSet: void set(int)>(123);

        $r262 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r262.<java.util.BitSet: void set(int)>(125);

        $r263 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r263.<java.util.BitSet: void set(int)>(124);

        $r264 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r264.<java.util.BitSet: void set(int)>(92);

        $r265 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r265.<java.util.BitSet: void set(int)>(94);

        $r266 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r266.<java.util.BitSet: void set(int)>(91);

        $r267 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r267.<java.util.BitSet: void set(int)>(93);

        $r268 = <org.apache.commons.httpclient.URI: java.util.BitSet unwise>;

        virtualinvoke $r268.<java.util.BitSet: void set(int)>(96);

        $r269 = new java.util.BitSet;

        specialinvoke $r269.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path> = $r269;

        $r271 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $r270 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r271.<java.util.BitSet: void or(java.util.BitSet)>($r270);

        $r273 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_rel_path>;

        $r272 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r273.<java.util.BitSet: void andNot(java.util.BitSet)>($r272);

        $r274 = new java.util.BitSet;

        specialinvoke $r274.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part> = $r274;

        $r276 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $r275 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r276.<java.util.BitSet: void or(java.util.BitSet)>($r275);

        $r278 = <org.apache.commons.httpclient.URI: java.util.BitSet disallowed_opaque_part>;

        $r277 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r278.<java.util.BitSet: void andNot(java.util.BitSet)>($r277);

        $r279 = new java.util.BitSet;

        specialinvoke $r279.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority> = $r279;

        $r281 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority>;

        $r280 = <org.apache.commons.httpclient.URI: java.util.BitSet authority>;

        virtualinvoke $r281.<java.util.BitSet: void or(java.util.BitSet)>($r280);

        $r282 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_authority>;

        virtualinvoke $r282.<java.util.BitSet: void clear(int)>(37);

        $r283 = new java.util.BitSet;

        specialinvoke $r283.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part> = $r283;

        $r285 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        $r284 = <org.apache.commons.httpclient.URI: java.util.BitSet opaque_part>;

        virtualinvoke $r285.<java.util.BitSet: void or(java.util.BitSet)>($r284);

        $r286 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_opaque_part>;

        virtualinvoke $r286.<java.util.BitSet: void clear(int)>(37);

        $r287 = new java.util.BitSet;

        specialinvoke $r287.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name> = $r287;

        $r289 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        $r288 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r289.<java.util.BitSet: void or(java.util.BitSet)>($r288);

        $r290 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_reg_name>;

        virtualinvoke $r290.<java.util.BitSet: void clear(int)>(37);

        $r291 = new java.util.BitSet;

        specialinvoke $r291.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo> = $r291;

        $r293 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        $r292 = <org.apache.commons.httpclient.URI: java.util.BitSet userinfo>;

        virtualinvoke $r293.<java.util.BitSet: void or(java.util.BitSet)>($r292);

        $r294 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_userinfo>;

        virtualinvoke $r294.<java.util.BitSet: void clear(int)>(37);

        $r295 = new java.util.BitSet;

        specialinvoke $r295.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo> = $r295;

        $r297 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        $r296 = <org.apache.commons.httpclient.URI: java.util.BitSet within_userinfo>;

        virtualinvoke $r297.<java.util.BitSet: void or(java.util.BitSet)>($r296);

        $r298 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_userinfo>;

        virtualinvoke $r298.<java.util.BitSet: void clear(int)>(37);

        $r299 = new java.util.BitSet;

        specialinvoke $r299.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference> = $r299;

        $r301 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        $r300 = <org.apache.commons.httpclient.URI: java.util.BitSet IPv6reference>;

        virtualinvoke $r301.<java.util.BitSet: void or(java.util.BitSet)>($r300);

        $r302 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r302.<java.util.BitSet: void clear(int)>(91);

        $r303 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r303.<java.util.BitSet: void clear(int)>(93);

        $r304 = new java.util.BitSet;

        specialinvoke $r304.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host> = $r304;

        $r306 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r305 = <org.apache.commons.httpclient.URI: java.util.BitSet hostname>;

        virtualinvoke $r306.<java.util.BitSet: void or(java.util.BitSet)>($r305);

        $r308 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_host>;

        $r307 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_IPv6reference>;

        virtualinvoke $r308.<java.util.BitSet: void or(java.util.BitSet)>($r307);

        $r309 = new java.util.BitSet;

        specialinvoke $r309.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority> = $r309;

        $r311 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        $r310 = <org.apache.commons.httpclient.URI: java.util.BitSet server>;

        virtualinvoke $r311.<java.util.BitSet: void or(java.util.BitSet)>($r310);

        $r313 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        $r312 = <org.apache.commons.httpclient.URI: java.util.BitSet reg_name>;

        virtualinvoke $r313.<java.util.BitSet: void or(java.util.BitSet)>($r312);

        $r314 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r314.<java.util.BitSet: void clear(int)>(59);

        $r315 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r315.<java.util.BitSet: void clear(int)>(58);

        $r316 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r316.<java.util.BitSet: void clear(int)>(64);

        $r317 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r317.<java.util.BitSet: void clear(int)>(63);

        $r318 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_authority>;

        virtualinvoke $r318.<java.util.BitSet: void clear(int)>(47);

        $r319 = new java.util.BitSet;

        specialinvoke $r319.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path> = $r319;

        $r321 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r320 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r321.<java.util.BitSet: void or(java.util.BitSet)>($r320);

        $r323 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        $r322 = <org.apache.commons.httpclient.URI: java.util.BitSet percent>;

        virtualinvoke $r323.<java.util.BitSet: void andNot(java.util.BitSet)>($r322);

        $r324 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_abs_path>;

        virtualinvoke $r324.<java.util.BitSet: void clear(int)>(43);

        $r325 = new java.util.BitSet;

        specialinvoke $r325.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path> = $r325;

        $r327 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        $r326 = <org.apache.commons.httpclient.URI: java.util.BitSet rel_path>;

        virtualinvoke $r327.<java.util.BitSet: void or(java.util.BitSet)>($r326);

        $r328 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        virtualinvoke $r328.<java.util.BitSet: void clear(int)>(37);

        $r329 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_rel_path>;

        virtualinvoke $r329.<java.util.BitSet: void clear(int)>(43);

        $r330 = new java.util.BitSet;

        specialinvoke $r330.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path> = $r330;

        $r332 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        $r331 = <org.apache.commons.httpclient.URI: java.util.BitSet abs_path>;

        virtualinvoke $r332.<java.util.BitSet: void or(java.util.BitSet)>($r331);

        $r333 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r333.<java.util.BitSet: void clear(int)>(47);

        $r334 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r334.<java.util.BitSet: void clear(int)>(59);

        $r335 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r335.<java.util.BitSet: void clear(int)>(61);

        $r336 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_path>;

        virtualinvoke $r336.<java.util.BitSet: void clear(int)>(63);

        $r337 = new java.util.BitSet;

        specialinvoke $r337.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query> = $r337;

        $r339 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        $r338 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r339.<java.util.BitSet: void or(java.util.BitSet)>($r338);

        $r340 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        virtualinvoke $r340.<java.util.BitSet: void clear(int)>(37);

        $r341 = new java.util.BitSet;

        specialinvoke $r341.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query> = $r341;

        $r343 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query>;

        $r342 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_query>;

        virtualinvoke $r343.<java.util.BitSet: void or(java.util.BitSet)>($r342);

        $r345 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_within_query>;

        $r344 = <org.apache.commons.httpclient.URI: java.util.BitSet reserved>;

        virtualinvoke $r345.<java.util.BitSet: void andNot(java.util.BitSet)>($r344);

        $r346 = new java.util.BitSet;

        specialinvoke $r346.<java.util.BitSet: void <init>(int)>(256);

        <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment> = $r346;

        $r348 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        $r347 = <org.apache.commons.httpclient.URI: java.util.BitSet uric>;

        virtualinvoke $r348.<java.util.BitSet: void or(java.util.BitSet)>($r347);

        $r349 = <org.apache.commons.httpclient.URI: java.util.BitSet allowed_fragment>;

        virtualinvoke $r349.<java.util.BitSet: void clear(int)>(37);

        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
    }
}
