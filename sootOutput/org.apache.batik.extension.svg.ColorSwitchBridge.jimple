public class org.apache.batik.extension.svg.ColorSwitchBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.bridge.PaintBridge, org.apache.batik.extension.svg.BatikExtConstants
{

    public void <init>()
    {
        org.apache.batik.extension.svg.ColorSwitchBridge r0;

        r0 := @this: org.apache.batik.extension.svg.ColorSwitchBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.extension.svg.ColorSwitchBridge r0;

        r0 := @this: org.apache.batik.extension.svg.ColorSwitchBridge;

        return "http://xml.apache.org/batik/ext";
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.extension.svg.ColorSwitchBridge r0;

        r0 := @this: org.apache.batik.extension.svg.ColorSwitchBridge;

        return "colorSwitch";
    }

    public java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, float)
    {
        java.awt.Color $r4, $r9;
        org.apache.batik.extension.svg.ColorSwitchBridge r10;
        short $s0;
        org.w3c.dom.Node r12;
        org.apache.batik.bridge.PaintBridge $r7;
        boolean $z0, $z1;
        org.apache.batik.gvt.GraphicsNode r6;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.Bridge $r3;
        org.apache.batik.bridge.UserAgent $r2;
        org.w3c.dom.Element r0, r5, r11, r13;
        java.awt.Paint $r8;
        float f0;

        r10 := @this: org.apache.batik.extension.svg.ColorSwitchBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.w3c.dom.Element;

        r6 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        f0 := @parameter4: float;

        r11 = null;

        r12 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label1:
        $s0 = interfaceinvoke r12.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label2;

        goto label3;

     label2:
        r13 = (org.w3c.dom.Element) r12;

        $r2 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r13, $r2);

        if $z0 == 0 goto label3;

        r11 = r13;

        goto label5;

     label3:
        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r12 != null goto label1;

     label5:
        if r11 != null goto label6;

        $r9 = <java.awt.Color: java.awt.Color black>;

        return $r9;

     label6:
        $r3 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.Bridge getBridge(org.w3c.dom.Element)>(r11);

        if $r3 == null goto label7;

        $z1 = $r3 instanceof org.apache.batik.bridge.PaintBridge;

        if $z1 != 0 goto label8;

     label7:
        $r4 = <java.awt.Color: java.awt.Color black>;

        return $r4;

     label8:
        $r7 = (org.apache.batik.bridge.PaintBridge) $r3;

        $r8 = interfaceinvoke $r7.<org.apache.batik.bridge.PaintBridge: java.awt.Paint createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)>(r1, r11, r5, r6, f0);

        return $r8;
    }
}
