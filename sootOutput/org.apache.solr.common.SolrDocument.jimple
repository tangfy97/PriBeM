public class org.apache.solr.common.SolrDocument extends java.lang.Object implements java.util.Map, java.lang.Iterable, java.io.Serializable
{
    private final java.util.Map _fields;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        org.apache.solr.common.SolrDocument r0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields> = $r1;

        return;
    }

    public java.util.Collection getFieldNames()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Set $r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.util.Set keySet()>();

        return $r1;
    }

    public void clear()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean removeFields(java.lang.String)
    {
        org.apache.solr.common.SolrDocument r0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.lang.Object remove(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setField(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r7, $r8;
        java.lang.Iterable $r3;
        java.util.ArrayList $r2, $r6;
        java.util.Map $r11;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4;
        org.apache.solr.common.SolrDocument r0;
        java.util.List $r9;
        java.lang.Object $r5, r10;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Object;

        $z0 = r10 instanceof java.lang.Object[];

        if $z0 == 0 goto label1;

        $r6 = new java.util.ArrayList;

        $r7 = (java.lang.Object[]) r10;

        $r8 = (java.lang.Object[]) $r7;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r10 = $r6;

        goto label6;

     label1:
        $z1 = r10 instanceof java.util.Collection;

        if $z1 == 0 goto label2;

        goto label6;

     label2:
        $z2 = r10 instanceof org.apache.solr.common.util.NamedList;

        if $z2 == 0 goto label3;

        goto label6;

     label3:
        $z3 = r10 instanceof java.lang.Iterable;

        if $z3 == 0 goto label6;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.lang.Iterable) r10;

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label4;

     label5:
        r10 = $r2;

     label6:
        $r11 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

        return;
    }

    public void addField(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r6, r16;
        java.lang.Iterable $r8;
        java.util.ArrayList $r4, $r11;
        java.util.Map $r2, $r17;
        int i0, i1;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r9, $r13;
        java.util.Collection $r12, r15;
        org.apache.solr.common.SolrDocument r0;
        java.lang.Object $r3, r5, r7, $r10, $r14;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 != null goto label05;

        $z4 = r5 instanceof java.util.Collection;

        if $z4 == 0 goto label03;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(3);

        $r12 = (java.util.Collection) r5;

        $r13 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label02;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>($r14);

        goto label01;

     label02:
        virtualinvoke r0.<org.apache.solr.common.SolrDocument: void setField(java.lang.String,java.lang.Object)>(r1, $r11);

        goto label04;

     label03:
        virtualinvoke r0.<org.apache.solr.common.SolrDocument: void setField(java.lang.String,java.lang.Object)>(r1, r5);

     label04:
        return;

     label05:
        $z0 = $r3 instanceof java.util.Collection;

        if $z0 == 0 goto label06;

        r15 = (java.util.Collection) $r3;

        goto label07;

     label06:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(3);

        r15 = $r4;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label07:
        $z1 = r5 instanceof java.lang.Iterable;

        if $z1 == 0 goto label10;

        $r8 = (java.lang.Iterable) r5;

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r15.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label08;

     label09:
        goto label14;

     label10:
        $z2 = r5 instanceof java.lang.Object[];

        if $z2 == 0 goto label13;

        $r6 = (java.lang.Object[]) r5;

        r16 = (java.lang.Object[]) $r6;

        i0 = lengthof r16;

        i1 = 0;

     label11:
        if i1 >= i0 goto label12;

        r7 = r16[i1];

        interfaceinvoke r15.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        i1 = i1 + 1;

        goto label11;

     label12:
        goto label14;

     label13:
        interfaceinvoke r15.<java.util.Collection: boolean add(java.lang.Object)>(r5);

     label14:
        $r17 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r15);

        return;
    }

    public java.lang.Object getFirstValue(java.lang.String)
    {
        java.util.Iterator $r5;
        java.util.Collection r4;
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3, $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = $r3 instanceof java.util.Collection;

        if $z0 != 0 goto label2;

     label1:
        return $r3;

     label2:
        r4 = (java.util.Collection) $r3;

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        return $r6;

     label3:
        return null;
    }

    public java.lang.Object getFieldValue(java.lang.String)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.util.Collection getFieldValues(java.lang.String)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.util.Collection $r5;
        java.lang.Object $r3;
        java.lang.String r1;
        boolean $z0;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r3 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r5 = (java.util.Collection) $r3;

        return $r5;

     label1:
        if $r3 == null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        return $r4;

     label2:
        return null;
    }

    public java.lang.String toString()
    {
        org.apache.solr.common.SolrDocument r2;
        java.util.Map $r3;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;

        r2 := @this: org.apache.solr.common.SolrDocument;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SolrDocument");

        $r3 = r2.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.util.Iterator iterator()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Map getFieldValuesMap()
    {
        org.apache.solr.common.SolrDocument$1 $r0;
        org.apache.solr.common.SolrDocument r1;

        r1 := @this: org.apache.solr.common.SolrDocument;

        $r0 = new org.apache.solr.common.SolrDocument$1;

        specialinvoke $r0.<org.apache.solr.common.SolrDocument$1: void <init>(org.apache.solr.common.SolrDocument)>(r1);

        return $r0;
    }

    public java.util.Map getFieldValueMap()
    {
        org.apache.solr.common.SolrDocument r1;
        org.apache.solr.common.SolrDocument$2 $r0;

        r1 := @this: org.apache.solr.common.SolrDocument;

        $r0 = new org.apache.solr.common.SolrDocument$2;

        specialinvoke $r0.<org.apache.solr.common.SolrDocument$2: void <init>(org.apache.solr.common.SolrDocument)>(r1);

        return $r0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Set $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isEmpty()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Set $r2;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r3;
        java.lang.Object r2, $r4;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r3;
    }

    public int size()
    {
        int $i0;
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.solr.common.SolrDocument r0;
        java.lang.Object r1, r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.solr.common.SolrDocument;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke r0.<org.apache.solr.common.SolrDocument: java.lang.Object put(java.lang.String,java.lang.Object)>($r3, r2);

        return $r4;
    }

    static java.util.Map access$000(org.apache.solr.common.SolrDocument)
    {
        org.apache.solr.common.SolrDocument r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.solr.common.SolrDocument;

        $r1 = r0.<org.apache.solr.common.SolrDocument: java.util.Map _fields>;

        return $r1;
    }
}
