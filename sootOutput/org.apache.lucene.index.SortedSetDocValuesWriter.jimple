class org.apache.lucene.index.SortedSetDocValuesWriter extends org.apache.lucene.index.DocValuesWriter
{
    final org.apache.lucene.util.BytesRefHash hash;
    private org.apache.lucene.util.packed.AppendingLongBuffer pending;
    private org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts;
    private final org.apache.lucene.util.Counter iwBytesUsed;
    private long bytesUsed;
    private final org.apache.lucene.index.FieldInfo fieldInfo;
    private int currentDoc;
    private int[] currentValues;
    private int currentUpto;
    private int maxCount;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.FieldInfo, org.apache.lucene.util.Counter)
    {
        org.apache.lucene.util.BytesRefHash $r4;
        long $l0, $l1, $l2, $l3;
        org.apache.lucene.util.ByteBlockPool $r5;
        int[] $r1;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray $r7;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator $r6;
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.Counter r3;
        org.apache.lucene.util.packed.AppendingLongBuffer $r8, $r9, $r10, $r11;
        org.apache.lucene.index.FieldInfo r2;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.index.DocValuesWriter: void <init>()>();

        $r1 = newarray (int)[8];

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues> = $r1;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto> = 0;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int maxCount> = 0;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo> = r2;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed> = r3;

        $r4 = new org.apache.lucene.util.BytesRefHash;

        $r5 = new org.apache.lucene.util.ByteBlockPool;

        $r6 = new org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        specialinvoke $r6.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: void <init>(org.apache.lucene.util.Counter)>(r3);

        specialinvoke $r5.<org.apache.lucene.util.ByteBlockPool: void <init>(org.apache.lucene.util.ByteBlockPool$Allocator)>($r6);

        $r7 = new org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        specialinvoke $r7.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: void <init>(int,org.apache.lucene.util.Counter)>(16, r3);

        specialinvoke $r4.<org.apache.lucene.util.BytesRefHash: void <init>(org.apache.lucene.util.ByteBlockPool,int,org.apache.lucene.util.BytesRefHash$BytesStartArray)>($r5, 16, $r7);

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.BytesRefHash hash> = $r4;

        $r8 = new org.apache.lucene.util.packed.AppendingLongBuffer;

        specialinvoke $r8.<org.apache.lucene.util.packed.AppendingLongBuffer: void <init>()>();

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending> = $r8;

        $r9 = new org.apache.lucene.util.packed.AppendingLongBuffer;

        specialinvoke $r9.<org.apache.lucene.util.packed.AppendingLongBuffer: void <init>()>();

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts> = $r9;

        $r10 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l0 = virtualinvoke $r10.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        $r11 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        $l1 = virtualinvoke $r11.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        $l2 = $l0 + $l1;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: long bytesUsed> = $l2;

        $l3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: long bytesUsed>;

        virtualinvoke r3.<org.apache.lucene.util.Counter: long addAndGet(long)>($l3);

        return;
    }

    public void addValue(int, org.apache.lucene.util.BytesRef)
    {
        int $i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String $r7, $r11, $r16, $r19;
        org.apache.lucene.util.BytesRef r0;
        java.lang.IllegalArgumentException $r3, $r12;
        org.apache.lucene.index.SortedSetDocValuesWriter r1;
        org.apache.lucene.util.packed.AppendingLongBuffer $r2;
        org.apache.lucene.index.FieldInfo $r6, $r15;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r17, $r18;

        r1 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.lucene.util.BytesRef;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field \"");

        $r15 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r16 = $r15.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": null value not allowed");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r12;

     label1:
        $i0 = r0.<org.apache.lucene.util.BytesRef: int length>;

        if $i0 <= 32766 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocValuesField \"");

        $r6 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r7 = $r6.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is too large, must be <= ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(32766);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label2:
        $i2 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc>;

        if i1 == $i2 goto label3;

        specialinvoke r1.<org.apache.lucene.index.SortedSetDocValuesWriter: void finishCurrentDoc()>();

     label3:
        $i5 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc>;

        if $i5 >= i1 goto label4;

        $r2 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        virtualinvoke $r2.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>(0L);

        $i3 = r1.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc>;

        $i4 = $i3 + 1;

        r1.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc> = $i4;

        goto label3;

     label4:
        specialinvoke r1.<org.apache.lucene.index.SortedSetDocValuesWriter: void addOneValue(org.apache.lucene.util.BytesRef)>(r0);

        specialinvoke r1.<org.apache.lucene.index.SortedSetDocValuesWriter: void updateBytesUsed()>();

        return;
    }

    private void finishCurrentDoc()
    {
        long $l2, $l8;
        int[] $r1, $r3;
        int $i0, $i1, $i3, $i4, $i5, $i6, i7, i9, i10, i11, $i13;
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r2, $r4;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $i0 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        staticinvoke <java.util.Arrays: void sort(int[],int,int)>($r1, 0, $i0);

        $i13 = (int) -1;

        i9 = $i13;

        i10 = 0;

        i11 = 0;

     label1:
        $i1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        if i11 >= $i1 goto label3;

        $r3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        i7 = $r3[i11];

        if i7 == i9 goto label2;

        $r4 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l8 = (long) i7;

        virtualinvoke $r4.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>($l8);

        i10 = i10 + 1;

     label2:
        i9 = i7;

        i11 = i11 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        $l2 = (long) i10;

        virtualinvoke $r2.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>($l2);

        $i3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int maxCount>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, i10);

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int maxCount> = $i4;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto> = 0;

        $i5 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc> = $i6;

        return;
    }

    public void finish(int)
    {
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;
        int i0, i1;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.index.SortedSetDocValuesWriter: void finishCurrentDoc()>();

        i1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentDoc>;

     label1:
        if i1 >= i0 goto label2;

        $r1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        virtualinvoke $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>(0L);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void addOneValue(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRefHash $r2;
        long $l13;
        int[] $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15;
        org.apache.lucene.util.BytesRef r1;
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.Counter $r3, $r10;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        $r2 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int add(org.apache.lucene.util.BytesRef)>(r1);

        i15 = $i0;

        if $i0 >= 0 goto label1;

        $i14 = neg $i0;

        i15 = $i14 - 1;

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed>;

        virtualinvoke $r3.<org.apache.lucene.util.Counter: long addAndGet(long)>(8L);

     label2:
        $i2 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        $r4 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $i1 = lengthof $r4;

        if $i2 != $i1 goto label3;

        $r7 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $r6 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $i6 = lengthof $r6;

        $i7 = $i6 + 1;

        $r8 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r7, $i7);

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues> = $r8;

        $r10 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed>;

        $r9 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $i9 = lengthof $r9;

        $i8 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        $i10 = $i9 - $i8;

        $i11 = $i10 * 2;

        $i12 = $i11 * 4;

        $l13 = (long) $i12;

        virtualinvoke $r10.<org.apache.lucene.util.Counter: long addAndGet(long)>($l13);

     label3:
        $r5 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int[] currentValues>;

        $i3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        $r5[$i3] = i15;

        $i4 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: int currentUpto> = $i5;

        return;
    }

    private void updateBytesUsed()
    {
        long $l0, $l1, l2, $l3, $l4;
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.Counter $r3;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1, $r2;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        $r2 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        l2 = $l0 + $l1;

        $r3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed>;

        $l3 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: long bytesUsed>;

        $l4 = l2 - $l3;

        virtualinvoke $r3.<org.apache.lucene.util.Counter: long addAndGet(long)>($l4);

        r0.<org.apache.lucene.index.SortedSetDocValuesWriter: long bytesUsed> = l2;

        return;
    }

    public void flush(org.apache.lucene.index.SegmentWriteState, org.apache.lucene.codecs.DocValuesConsumer) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r3, $r4;
        long $l4, $l5;
        java.lang.AssertionError $r14;
        byte $b6;
        int[] $r6, $r13;
        org.apache.lucene.index.SegmentWriteState r0;
        int $i0, i1, $i2, $i3, i7;
        boolean $z0;
        org.apache.lucene.codecs.DocValuesConsumer r7;
        org.apache.lucene.index.SortedSetDocValuesWriter$1 $r8;
        org.apache.lucene.index.SegmentInfo $r1;
        org.apache.lucene.index.SortedSetDocValuesWriter$2 $r10;
        org.apache.lucene.index.SortedSetDocValuesWriter$3 $r11;
        org.apache.lucene.index.SortedSetDocValuesWriter r2;
        org.apache.lucene.util.packed.AppendingLongBuffer $r12;
        org.apache.lucene.index.FieldInfo $r9;
        java.util.Comparator $r5;

        r2 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        r0 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        r7 := @parameter1: org.apache.lucene.codecs.DocValuesConsumer;

        $r1 = r0.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        i1 = r2.<org.apache.lucene.index.SortedSetDocValuesWriter: int maxCount>;

        $z0 = <org.apache.lucene.index.SortedSetDocValuesWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r12 = r2.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        $l4 = virtualinvoke $r12.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $l5 = (long) $i0;

        $b6 = $l4 cmp $l5;

        if $b6 == 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r3 = r2.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $i2 = virtualinvoke $r3.<org.apache.lucene.util.BytesRefHash: int size()>();

        $r4 = r2.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $r5 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        $r6 = virtualinvoke $r4.<org.apache.lucene.util.BytesRefHash: int[] sort(java.util.Comparator)>($r5);

        $r13 = newarray (int)[$i2];

        i7 = 0;

     label2:
        if i7 >= $i2 goto label3;

        $i3 = $r6[i7];

        $r13[$i3] = i7;

        i7 = i7 + 1;

        goto label2;

     label3:
        $r9 = r2.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r8 = new org.apache.lucene.index.SortedSetDocValuesWriter$1;

        specialinvoke $r8.<org.apache.lucene.index.SortedSetDocValuesWriter$1: void <init>(org.apache.lucene.index.SortedSetDocValuesWriter,int[],int)>(r2, $r6, $i2);

        $r10 = new org.apache.lucene.index.SortedSetDocValuesWriter$2;

        specialinvoke $r10.<org.apache.lucene.index.SortedSetDocValuesWriter$2: void <init>(org.apache.lucene.index.SortedSetDocValuesWriter,int)>(r2, $i0);

        $r11 = new org.apache.lucene.index.SortedSetDocValuesWriter$3;

        specialinvoke $r11.<org.apache.lucene.index.SortedSetDocValuesWriter$3: void <init>(org.apache.lucene.index.SortedSetDocValuesWriter,int[],int)>(r2, $r13, i1);

        virtualinvoke r7.<org.apache.lucene.codecs.DocValuesConsumer: void addSortedSetField(org.apache.lucene.index.FieldInfo,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)>($r9, $r8, $r10, $r11);

        return;
    }

    public void abort()
    {
        org.apache.lucene.index.SortedSetDocValuesWriter r0;

        r0 := @this: org.apache.lucene.index.SortedSetDocValuesWriter;

        return;
    }

    static org.apache.lucene.util.packed.AppendingLongBuffer access$000(org.apache.lucene.index.SortedSetDocValuesWriter)
    {
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;

        r0 := @parameter0: org.apache.lucene.index.SortedSetDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        return $r1;
    }

    static org.apache.lucene.util.packed.AppendingLongBuffer access$100(org.apache.lucene.index.SortedSetDocValuesWriter)
    {
        org.apache.lucene.index.SortedSetDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;

        r0 := @parameter0: org.apache.lucene.index.SortedSetDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedSetDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pendingCounts>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SortedSetDocValuesWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SortedSetDocValuesWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
