public abstract class org.apache.log4j.lf5.viewer.LogFactor5Dialog extends javax.swing.JDialog
{
    protected static final java.awt.Font DISPLAY_FONT;

    protected void <init>(javax.swing.JFrame, java.lang.String, boolean)
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r0;
        java.lang.String r2;
        javax.swing.JFrame r1;
        boolean z0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        r1 := @parameter0: javax.swing.JFrame;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<javax.swing.JDialog: void <init>(java.awt.Frame,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    public void show()
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r0;

        r0 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        virtualinvoke r0.<java.awt.Window: void pack()>();

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogFactor5Dialog: void minimumSizeDialog(java.awt.Component,int,int)>(r0, 200, 100);

        virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogFactor5Dialog: void centerWindow(java.awt.Window)>(r0);

        specialinvoke r0.<java.awt.Dialog: void show()>();

        return;
    }

    protected void centerWindow(java.awt.Window)
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.awt.Window r2;
        java.awt.Dimension $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        java.awt.Toolkit $r0;

        r9 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        r2 := @parameter0: java.awt.Window;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $i0 = $r1.<java.awt.Dimension: int width>;

        $r3 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i1 = $r3.<java.awt.Dimension: int width>;

        if $i0 >= $i1 goto label1;

        $i14 = $r1.<java.awt.Dimension: int width>;

        $r8 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i15 = $r8.<java.awt.Dimension: int height>;

        virtualinvoke r2.<java.awt.Window: void setSize(int,int)>($i14, $i15);

     label1:
        $i2 = $r1.<java.awt.Dimension: int height>;

        $r4 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i3 = $r4.<java.awt.Dimension: int height>;

        if $i2 >= $i3 goto label2;

        $r7 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i11 = $r7.<java.awt.Dimension: int width>;

        $i10 = $r1.<java.awt.Dimension: int height>;

        virtualinvoke r2.<java.awt.Window: void setSize(int,int)>($i11, $i10);

     label2:
        $i4 = $r1.<java.awt.Dimension: int width>;

        $r5 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i5 = $r5.<java.awt.Dimension: int width>;

        $i6 = $i4 - $i5;

        $i12 = $i6 / 2;

        $i7 = $r1.<java.awt.Dimension: int height>;

        $r6 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i8 = $r6.<java.awt.Dimension: int height>;

        $i9 = $i7 - $i8;

        $i13 = $i9 / 2;

        virtualinvoke r2.<java.awt.Component: void setLocation(int,int)>($i12, $i13);

        return;
    }

    protected void wrapStringOnPanel(java.lang.String, java.awt.Container)
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r0;
        java.awt.Insets $r2;
        java.awt.Font $r7;
        java.awt.Label $r6;
        java.awt.GridBagConstraints $r1;
        int $i0, $i1, $i2;
        java.awt.Container r3;
        java.lang.String r8, r9;
        java.awt.LayoutManager $r4;
        java.awt.GridBagLayout r5;

        r0 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        r8 := @parameter0: java.lang.String;

        r3 := @parameter1: java.awt.Container;

        $r1 = virtualinvoke r0.<org.apache.log4j.lf5.viewer.LogFactor5Dialog: java.awt.GridBagConstraints getDefaultConstraints()>();

        $r1.<java.awt.GridBagConstraints: int gridwidth> = 0;

        $r2 = new java.awt.Insets;

        specialinvoke $r2.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r1.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r2;

        $r4 = virtualinvoke r3.<java.awt.Container: java.awt.LayoutManager getLayout()>();

        r5 = (java.awt.GridBagLayout) $r4;

     label1:
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $i1 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(10);

        if $i1 < 0 goto label2;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = $i1 + 1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label3;

     label2:
        r9 = r8;

        r8 = "";

     label3:
        $r6 = new java.awt.Label;

        specialinvoke $r6.<java.awt.Label: void <init>(java.lang.String)>(r9);

        $r7 = <org.apache.log4j.lf5.viewer.LogFactor5Dialog: java.awt.Font DISPLAY_FONT>;

        virtualinvoke $r6.<java.awt.Component: void setFont(java.awt.Font)>($r7);

        virtualinvoke r5.<java.awt.GridBagLayout: void setConstraints(java.awt.Component,java.awt.GridBagConstraints)>($r6, $r1);

        virtualinvoke r3.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r6);

        goto label1;

     label4:
        return;
    }

    protected java.awt.GridBagConstraints getDefaultConstraints()
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r2;
        java.awt.Insets $r1;
        java.awt.GridBagConstraints $r0;

        r2 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        $r0 = new java.awt.GridBagConstraints;

        specialinvoke $r0.<java.awt.GridBagConstraints: void <init>()>();

        $r0.<java.awt.GridBagConstraints: double weightx> = 1.0;

        $r0.<java.awt.GridBagConstraints: double weighty> = 1.0;

        $r0.<java.awt.GridBagConstraints: int gridheight> = 1;

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(4, 4, 4, 4);

        $r0.<java.awt.GridBagConstraints: java.awt.Insets insets> = $r1;

        $r0.<java.awt.GridBagConstraints: int fill> = 0;

        $r0.<java.awt.GridBagConstraints: int anchor> = 17;

        return $r0;
    }

    protected void minimumSizeDialog(java.awt.Component, int, int)
    {
        org.apache.log4j.lf5.viewer.LogFactor5Dialog r5;
        java.awt.Component r0;
        java.awt.Dimension $r1, $r2, $r3, $r4;
        int i0, $i1, i2, $i3, $i4, $i5;

        r5 := @this: org.apache.log4j.lf5.viewer.LogFactor5Dialog;

        r0 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i1 = $r1.<java.awt.Dimension: int width>;

        if $i1 >= i0 goto label1;

        $r4 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i5 = $r4.<java.awt.Dimension: int height>;

        virtualinvoke r0.<java.awt.Component: void setSize(int,int)>(i0, $i5);

     label1:
        $r2 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i3 = $r2.<java.awt.Dimension: int height>;

        if $i3 >= i2 goto label2;

        $r3 = virtualinvoke r0.<java.awt.Component: java.awt.Dimension getSize()>();

        $i4 = $r3.<java.awt.Dimension: int width>;

        virtualinvoke r0.<java.awt.Component: void setSize(int,int)>($i4, i2);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.awt.Font $r0;

        $r0 = new java.awt.Font;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Arial", 1, 12);

        <org.apache.log4j.lf5.viewer.LogFactor5Dialog: java.awt.Font DISPLAY_FONT> = $r0;

        return;
    }
}
