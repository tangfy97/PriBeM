public class org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede extends org.bouncycastle.jce.provider.JCESecretKeyFactory
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede r0;

        r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede;

        specialinvoke r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier)>("DESede", null);

        return;
    }

    protected java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class) throws java.security.spec.InvalidKeySpecException
    {
        byte[] $r5, $r9, r17;
        java.security.spec.InvalidKeySpecException $r4, $r12, $r13, $r15;
        javax.crypto.spec.SecretKeySpec $r8;
        javax.crypto.spec.DESedeKeySpec $r6, $r7;
        int $i0;
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede r10;
        java.lang.String $r11, $r16;
        boolean $z0, $z1;
        java.lang.Exception $r14;
        java.lang.Class r0, $r2, $r3;
        javax.crypto.SecretKey r1;

        r10 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede;

        r1 := @parameter0: javax.crypto.SecretKey;

        r0 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r13 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r13.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("keySpec parameter is null");

        throw $r13;

     label1:
        if r1 != null goto label2;

        $r12 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r12.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("key parameter is null");

        throw $r12;

     label2:
        $r2 = class "Ljavax/crypto/spec/SecretKeySpec;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label3;

        $r8 = new javax.crypto.spec.SecretKeySpec;

        $r9 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r11 = r10.<org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede: java.lang.String algName>;

        specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r11);

        return $r8;

     label3:
        $r3 = class "Ljavax/crypto/spec/DESedeKeySpec;";

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label9;

        $r5 = interfaceinvoke r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label4:
        $i0 = lengthof $r5;

        if $i0 != 16 goto label6;

        r17 = newarray (byte)[24];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r17, 0, 16);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r17, 16, 8);

        $r7 = new javax.crypto.spec.DESedeKeySpec;

        specialinvoke $r7.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>(r17);

     label5:
        return $r7;

     label6:
        $r6 = new javax.crypto.spec.DESedeKeySpec;

        specialinvoke $r6.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>($r5);

     label7:
        return $r6;

     label8:
        $r14 := @caughtexception;

        $r15 = new java.security.spec.InvalidKeySpecException;

        $r16 = virtualinvoke $r14.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r15.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label9:
        $r4 = new java.security.spec.InvalidKeySpecException;

        specialinvoke $r4.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>("Invalid KeySpec");

        throw $r4;

        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        java.security.spec.KeySpec r0;
        byte[] $r5;
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede r1;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.SecretKey $r2;
        boolean $z0;
        javax.crypto.spec.DESedeKeySpec r3;

        r1 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DESede;

        r0 := @parameter0: java.security.spec.KeySpec;

        $z0 = r0 instanceof javax.crypto.spec.DESedeKeySpec;

        if $z0 == 0 goto label1;

        r3 = (javax.crypto.spec.DESedeKeySpec) r0;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = virtualinvoke r3.<javax.crypto.spec.DESedeKeySpec: byte[] getKey()>();

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "DESede");

        return $r4;

     label1:
        $r2 = specialinvoke r1.<org.bouncycastle.jce.provider.JCESecretKeyFactory: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)>(r0);

        return $r2;
    }
}
