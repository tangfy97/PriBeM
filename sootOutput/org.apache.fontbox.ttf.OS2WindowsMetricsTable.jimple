public class org.apache.fontbox.ttf.OS2WindowsMetricsTable extends org.apache.fontbox.ttf.TTFTable
{
    public static final int WEIGHT_CLASS_THIN;
    public static final int WEIGHT_CLASS_ULTRA_LIGHT;
    public static final int WEIGHT_CLASS_LIGHT;
    public static final int WEIGHT_CLASS_NORMAL;
    public static final int WEIGHT_CLASS_MEDIUM;
    public static final int WEIGHT_CLASS_SEMI_BOLD;
    public static final int WEIGHT_CLASS_BOLD;
    public static final int WEIGHT_CLASS_EXTRA_BOLD;
    public static final int WEIGHT_CLASS_BLACK;
    public static final int WIDTH_CLASS_ULTRA_CONDENSED;
    public static final int WIDTH_CLASS_EXTRA_CONDENSED;
    public static final int WIDTH_CLASS_CONDENSED;
    public static final int WIDTH_CLASS_SEMI_CONDENSED;
    public static final int WIDTH_CLASS_MEDIUM;
    public static final int WIDTH_CLASS_SEMI_EXPANDED;
    public static final int WIDTH_CLASS_EXPANDED;
    public static final int WIDTH_CLASS_EXTRA_EXPANDED;
    public static final int WIDTH_CLASS_ULTRA_EXPANDED;
    public static final int FAMILY_CLASS_NO_CLASSIFICATION;
    public static final int FAMILY_CLASS_OLDSTYLE_SERIFS;
    public static final int FAMILY_CLASS_TRANSITIONAL_SERIFS;
    public static final int FAMILY_CLASS_MODERN_SERIFS;
    public static final int FAMILY_CLASS_CLAREDON_SERIFS;
    public static final int FAMILY_CLASS_SLAB_SERIFS;
    public static final int FAMILY_CLASS_FREEFORM_SERIFS;
    public static final int FAMILY_CLASS_SANS_SERIF;
    public static final int FAMILY_CLASS_ORNAMENTALS;
    public static final int FAMILY_CLASS_SCRIPTS;
    public static final int FAMILY_CLASS_SYMBOLIC;
    private int version;
    private short averageCharWidth;
    private int weightClass;
    private int widthClass;
    private short fsType;
    private short subscriptXSize;
    private short subscriptYSize;
    private short subscriptXOffset;
    private short subscriptYOffset;
    private short superscriptXSize;
    private short superscriptYSize;
    private short superscriptXOffset;
    private short superscriptYOffset;
    private short strikeoutSize;
    private short strikeoutPosition;
    private int familyClass;
    private int familySubClass;
    private byte[] panose;
    private long unicodeRange1;
    private long unicodeRange2;
    private long unicodeRange3;
    private long unicodeRange4;
    private java.lang.String achVendId;
    private int fsSelection;
    private int firstCharIndex;
    private int lastCharIndex;
    private int typoAscender;
    private int typoDescender;
    private int typeLineGap;
    private int winAscent;
    private int winDescent;
    private long codePageRange1;
    private long codePageRange2;
    public static final java.lang.String TAG;

    public void <init>()
    {
        byte[] $r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        specialinvoke r0.<org.apache.fontbox.ttf.TTFTable: void <init>()>();

        $r1 = newarray (byte)[10];

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: byte[] panose> = $r1;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: java.lang.String achVendId> = "XXXX";

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange1> = -1L;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange2> = -1L;

        return;
    }

    public java.lang.String getAchVendId()
    {
        java.lang.String $r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $r1 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: java.lang.String achVendId>;

        return $r1;
    }

    public void setAchVendId(java.lang.String)
    {
        java.lang.String r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: java.lang.String achVendId> = r1;

        return;
    }

    public short getAverageCharWidth()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short averageCharWidth>;

        return $s0;
    }

    public void setAverageCharWidth(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short averageCharWidth> = s0;

        return;
    }

    public long getCodePageRange1()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange1>;

        return $l0;
    }

    public void setCodePageRange1(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange1> = l0;

        return;
    }

    public long getCodePageRange2()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange2>;

        return $l0;
    }

    public void setCodePageRange2(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange2> = l0;

        return;
    }

    public int getFamilyClass()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familyClass>;

        return $i0;
    }

    public void setFamilyClass(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familyClass> = i0;

        return;
    }

    public int getFamilySubClass()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familySubClass>;

        return $i0;
    }

    public void setFamilySubClass(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familySubClass> = i0;

        return;
    }

    public int getFirstCharIndex()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int firstCharIndex>;

        return $i0;
    }

    public void setFirstCharIndex(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int firstCharIndex> = i0;

        return;
    }

    public int getFsSelection()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int fsSelection>;

        return $i0;
    }

    public void setFsSelection(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int fsSelection> = i0;

        return;
    }

    public short getFsType()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short fsType>;

        return $s0;
    }

    public void setFsType(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short fsType> = s0;

        return;
    }

    public int getLastCharIndex()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int lastCharIndex>;

        return $i0;
    }

    public void setLastCharIndex(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int lastCharIndex> = i0;

        return;
    }

    public byte[] getPanose()
    {
        byte[] $r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $r1 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: byte[] panose>;

        return $r1;
    }

    public void setPanose(byte[])
    {
        byte[] r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        r1 := @parameter0: byte[];

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: byte[] panose> = r1;

        return;
    }

    public short getStrikeoutPosition()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutPosition>;

        return $s0;
    }

    public void setStrikeoutPosition(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutPosition> = s0;

        return;
    }

    public short getStrikeoutSize()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutSize>;

        return $s0;
    }

    public void setStrikeoutSize(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutSize> = s0;

        return;
    }

    public short getSubscriptXOffset()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXOffset>;

        return $s0;
    }

    public void setSubscriptXOffset(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXOffset> = s0;

        return;
    }

    public short getSubscriptXSize()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXSize>;

        return $s0;
    }

    public void setSubscriptXSize(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXSize> = s0;

        return;
    }

    public short getSubscriptYOffset()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYOffset>;

        return $s0;
    }

    public void setSubscriptYOffset(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYOffset> = s0;

        return;
    }

    public short getSubscriptYSize()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYSize>;

        return $s0;
    }

    public void setSubscriptYSize(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYSize> = s0;

        return;
    }

    public short getSuperscriptXOffset()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXOffset>;

        return $s0;
    }

    public void setSuperscriptXOffset(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXOffset> = s0;

        return;
    }

    public short getSuperscriptXSize()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXSize>;

        return $s0;
    }

    public void setSuperscriptXSize(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXSize> = s0;

        return;
    }

    public short getSuperscriptYOffset()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYOffset>;

        return $s0;
    }

    public void setSuperscriptYOffset(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYOffset> = s0;

        return;
    }

    public short getSuperscriptYSize()
    {
        short $s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $s0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYSize>;

        return $s0;
    }

    public void setSuperscriptYSize(short)
    {
        short s0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYSize> = s0;

        return;
    }

    public int getTypeLineGap()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typeLineGap>;

        return $i0;
    }

    public void setTypeLineGap(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typeLineGap> = i0;

        return;
    }

    public int getTypoAscender()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoAscender>;

        return $i0;
    }

    public void setTypoAscender(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoAscender> = i0;

        return;
    }

    public int getTypoDescender()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoDescender>;

        return $i0;
    }

    public void setTypoDescender(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoDescender> = i0;

        return;
    }

    public long getUnicodeRange1()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange1>;

        return $l0;
    }

    public void setUnicodeRange1(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange1> = l0;

        return;
    }

    public long getUnicodeRange2()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange2>;

        return $l0;
    }

    public void setUnicodeRange2(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange2> = l0;

        return;
    }

    public long getUnicodeRange3()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange3>;

        return $l0;
    }

    public void setUnicodeRange3(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange3> = l0;

        return;
    }

    public long getUnicodeRange4()
    {
        long $l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $l0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange4>;

        return $l0;
    }

    public void setUnicodeRange4(long)
    {
        long l0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange4> = l0;

        return;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int version>;

        return $i0;
    }

    public void setVersion(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int version> = i0;

        return;
    }

    public int getWeightClass()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int weightClass>;

        return $i0;
    }

    public void setWeightClass(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int weightClass> = i0;

        return;
    }

    public int getWidthClass()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int widthClass>;

        return $i0;
    }

    public void setWidthClass(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int widthClass> = i0;

        return;
    }

    public int getWinAscent()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winAscent>;

        return $i0;
    }

    public void setWinAscent(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winAscent> = i0;

        return;
    }

    public int getWinDescent()
    {
        int $i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        $i0 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winDescent>;

        return $i0;
    }

    public void setWinDescent(int)
    {
        int i0;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winDescent> = i0;

        return;
    }

    public void initData(org.apache.fontbox.ttf.TrueTypeFont, org.apache.fontbox.ttf.TTFDataStream) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.fontbox.ttf.TTFDataStream r1;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r0;
        org.apache.fontbox.ttf.TrueTypeFont r4;
        long $l17, $l18, $l19, $l20, $l30, $l31;
        short $s1, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s24, $s25, $s26;
        int $i0, $i2, $i3, $i15, $i16, $i21, $i22, $i23, $i27, $i28, $i29, $i32, $i33, $i34;
        java.lang.String $r3;

        r0 := @this: org.apache.fontbox.ttf.OS2WindowsMetricsTable;

        r4 := @parameter0: org.apache.fontbox.ttf.TrueTypeFont;

        r1 := @parameter1: org.apache.fontbox.ttf.TTFDataStream;

        $i0 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int version> = $i0;

        $s1 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short averageCharWidth> = $s1;

        $i2 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int weightClass> = $i2;

        $i3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int widthClass> = $i3;

        $s4 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short fsType> = $s4;

        $s5 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXSize> = $s5;

        $s6 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYSize> = $s6;

        $s7 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptXOffset> = $s7;

        $s8 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short subscriptYOffset> = $s8;

        $s9 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXSize> = $s9;

        $s10 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYSize> = $s10;

        $s11 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptXOffset> = $s11;

        $s12 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short superscriptYOffset> = $s12;

        $s13 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutSize> = $s13;

        $s14 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: short strikeoutPosition> = $s14;

        $i15 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedByte()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familyClass> = $i15;

        $i16 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedByte()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int familySubClass> = $i16;

        $r2 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: byte[] read(int)>(10);

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: byte[] panose> = $r2;

        $l17 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange1> = $l17;

        $l18 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange2> = $l18;

        $l19 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange3> = $l19;

        $l20 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long unicodeRange4> = $l20;

        $r3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: java.lang.String readString(int)>(4);

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: java.lang.String achVendId> = $r3;

        $i21 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int fsSelection> = $i21;

        $i22 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int firstCharIndex> = $i22;

        $i23 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int lastCharIndex> = $i23;

        $s24 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        $i32 = (int) $s24;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoAscender> = $i32;

        $s25 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        $i33 = (int) $s25;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typoDescender> = $i33;

        $s26 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        $i34 = (int) $s26;

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int typeLineGap> = $i34;

        $i27 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winAscent> = $i27;

        $i28 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int winDescent> = $i28;

        $i29 = r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: int version>;

        if $i29 < 1 goto label1;

        $l30 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange1> = $l30;

        $l31 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: long codePageRange2> = $l31;

     label1:
        r0.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: boolean initialized> = 1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: java.lang.String TAG> = "OS/2";

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_SYMBOLIC> = 12;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_SCRIPTS> = 10;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_ORNAMENTALS> = 9;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_SANS_SERIF> = 8;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_FREEFORM_SERIFS> = 7;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_SLAB_SERIFS> = 5;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_CLAREDON_SERIFS> = 4;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_MODERN_SERIFS> = 3;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_TRANSITIONAL_SERIFS> = 2;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_OLDSTYLE_SERIFS> = 1;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int FAMILY_CLASS_NO_CLASSIFICATION> = 0;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_ULTRA_EXPANDED> = 9;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_EXTRA_EXPANDED> = 8;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_EXPANDED> = 7;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_SEMI_EXPANDED> = 6;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_MEDIUM> = 5;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_SEMI_CONDENSED> = 4;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_CONDENSED> = 3;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_EXTRA_CONDENSED> = 2;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WIDTH_CLASS_ULTRA_CONDENSED> = 1;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_BLACK> = 900;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_EXTRA_BOLD> = 800;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_BOLD> = 700;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_SEMI_BOLD> = 600;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_MEDIUM> = 500;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_NORMAL> = 400;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_LIGHT> = 300;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_ULTRA_LIGHT> = 200;

        <org.apache.fontbox.ttf.OS2WindowsMetricsTable: int WEIGHT_CLASS_THIN> = 100;

        return;
    }
}
