public abstract class org.springframework.ejb.support.AbstractEnterpriseBean extends java.lang.Object implements javax.ejb.EnterpriseBean
{
    public static final java.lang.String BEAN_FACTORY_PATH_ENVIRONMENT_KEY;
    private org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator;
    private java.lang.String beanFactoryLocatorKey;
    private org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference;

    public void <init>()
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setBeanFactoryLocator(org.springframework.beans.factory.access.BeanFactoryLocator)
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;
        org.springframework.beans.factory.access.BeanFactoryLocator r1;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        r1 := @parameter0: org.springframework.beans.factory.access.BeanFactoryLocator;

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator> = r1;

        return;
    }

    public void setBeanFactoryLocatorKey(java.lang.String)
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;
        java.lang.String r1;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: java.lang.String beanFactoryLocatorKey> = r1;

        return;
    }

    void loadBeanFactory() throws org.springframework.beans.BeansException
    {
        org.springframework.beans.factory.access.BeanFactoryReference $r5, $r7;
        org.springframework.ejb.support.AbstractEnterpriseBean r0;
        org.springframework.context.access.ContextJndiBeanFactoryLocator $r8;
        java.lang.String $r2, $r3;
        org.springframework.beans.factory.access.BeanFactoryLocator $r1, $r4;
        org.springframework.ejb.support.AbstractEnterpriseBean$BeanFactoryReferenceReleaseListener $r6;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        $r1 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator>;

        if $r1 != null goto label1;

        $r8 = new org.springframework.context.access.ContextJndiBeanFactoryLocator;

        specialinvoke $r8.<org.springframework.context.access.ContextJndiBeanFactoryLocator: void <init>()>();

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator> = $r8;

     label1:
        $r2 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: java.lang.String beanFactoryLocatorKey>;

        if $r2 != null goto label2;

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: java.lang.String beanFactoryLocatorKey> = "java:comp/env/ejb/BeanFactoryPath";

     label2:
        $r4 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator>;

        $r3 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: java.lang.String beanFactoryLocatorKey>;

        $r5 = interfaceinvoke $r4.<org.springframework.beans.factory.access.BeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryReference useBeanFactory(java.lang.String)>($r3);

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference> = $r5;

        $r6 = new org.springframework.ejb.support.AbstractEnterpriseBean$BeanFactoryReferenceReleaseListener;

        $r7 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference>;

        specialinvoke $r6.<org.springframework.ejb.support.AbstractEnterpriseBean$BeanFactoryReferenceReleaseListener: void <init>(org.springframework.beans.factory.access.BeanFactoryReference)>($r7);

        staticinvoke <org.springframework.util.WeakReferenceMonitor: void monitor(java.lang.Object,org.springframework.util.WeakReferenceMonitor$ReleaseListener)>(r0, $r6);

        return;
    }

    void unloadBeanFactory() throws org.springframework.beans.FatalBeanException
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;
        org.springframework.beans.factory.access.BeanFactoryReference $r1, $r2;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        $r1 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference>;

        interfaceinvoke $r2.<org.springframework.beans.factory.access.BeanFactoryReference: void release()>();

        r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference> = null;

     label1:
        return;
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory()
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;
        org.springframework.beans.factory.access.BeanFactoryReference $r1;
        org.springframework.beans.factory.BeanFactory $r2;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        $r1 = r0.<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference>;

        $r2 = interfaceinvoke $r1.<org.springframework.beans.factory.access.BeanFactoryReference: org.springframework.beans.factory.BeanFactory getFactory()>();

        return $r2;
    }

    public void ejbRemove()
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        virtualinvoke r0.<org.springframework.ejb.support.AbstractEnterpriseBean: void onEjbRemove()>();

        virtualinvoke r0.<org.springframework.ejb.support.AbstractEnterpriseBean: void unloadBeanFactory()>();

        return;
    }

    protected void onEjbRemove()
    {
        org.springframework.ejb.support.AbstractEnterpriseBean r0;

        r0 := @this: org.springframework.ejb.support.AbstractEnterpriseBean;

        return;
    }

    public static void <clinit>()
    {
        <org.springframework.ejb.support.AbstractEnterpriseBean: java.lang.String BEAN_FACTORY_PATH_ENVIRONMENT_KEY> = "java:comp/env/ejb/BeanFactoryPath";

        return;
    }
}
