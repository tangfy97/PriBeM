final class org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler extends java.lang.Object implements org.waveprotocol.wave.model.util.Utf16Util$CodePointHandler
{
    private int count;
    private final org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate;

    void <init>(org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate)
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        r1 := @parameter0: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: int count> = 0;

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate> = r1;

        return;
    }

    public java.lang.Integer codePoint(int)
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate $r1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        java.lang.Integer $r2;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate predicate>;

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate: boolean apply(int)>(i0);

        if $z0 != 0 goto label1;

        $i3 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: int count>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r2;

     label1:
        $i1 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: int count>;

        $i2 = $i1 + 1;

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: int count> = $i2;

        return null;
    }

    public java.lang.Integer unpairedSurrogate(char)
    {
        int $i0;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        char c1;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        c1 := @parameter0: char;

        $i0 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: int count>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    public java.lang.Integer endOfString()
    {
        int $i1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r1;
        java.lang.Integer $r0;

        r1 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        $i1 = (int) -1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r0;
    }

    public volatile java.lang.Object endOfString()
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: java.lang.Integer endOfString()>();

        return $r1;
    }

    public volatile java.lang.Object unpairedSurrogate(char)
    {
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        char c0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: java.lang.Integer unpairedSurrogate(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Object codePoint(int)
    {
        int i0;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler r0;
        java.lang.Integer $r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$ValidatingHandler: java.lang.Integer codePoint(int)>(i0);

        return $r1;
    }
}
