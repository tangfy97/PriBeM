public class com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler extends java.lang.Object implements com.hp.hpl.jena.graph.GraphStatisticsHandler
{
    protected final com.hp.hpl.jena.mem.GraphTripleStoreMem store;

    public void <init>(com.hp.hpl.jena.mem.GraphTripleStoreMem)
    {
        com.hp.hpl.jena.mem.GraphTripleStoreMem r1;
        com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler;

        r1 := @parameter0: com.hp.hpl.jena.mem.GraphTripleStoreMem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store> = r1;

        return;
    }

    public long getStatistic(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, r1, r2;
        byte $b10, $b11;
        com.hp.hpl.jena.mem.GraphTripleStoreMem $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.graph.Triple $r5;
        com.hp.hpl.jena.mem.NodeToTriplesMapMem $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler r3;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l8, $l12;
        int $i0, $i7, $i9;

        r3 := @this: com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isConcrete()>();

        if $z0 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        $z1 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isConcrete()>();

        if $z1 == 0 goto label03;

        $b10 = 2;

        goto label04;

     label03:
        $b10 = 0;

     label04:
        $i0 = $z3 + $b10;

        $z4 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: boolean isConcrete()>();

        if $z4 == 0 goto label05;

        $b11 = 4;

        goto label06;

     label05:
        $b11 = 0;

     label06:
        $i9 = $i0 + $b11;

        tableswitch($i9)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label11;
            case 3: goto label09;
            case 4: goto label13;
            case 5: goto label10;
            case 6: goto label12;
            case 7: goto label14;
            default: goto label17;
        };

     label07:
        $r24 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $i7 = virtualinvoke $r24.<com.hp.hpl.jena.mem.GraphTripleStoreMem: int size()>();

        $l8 = (long) $i7;

        return $l8;

     label08:
        $r22 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r23 = virtualinvoke $r22.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getSubjects()>();

        $l6 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r0, $r23);

        return $l6;

     label09:
        $r16 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r17 = virtualinvoke $r16.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getSubjects()>();

        $r18 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r19 = virtualinvoke $r18.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getPredicates()>();

        $l4 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countsInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r0, $r17, r1, $r19);

        return $l4;

     label10:
        $r10 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getSubjects()>();

        $r12 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getObjects()>();

        $l2 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countsInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r0, $r11, r2, $r13);

        return $l2;

     label11:
        $r20 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r21 = virtualinvoke $r20.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getPredicates()>();

        $l5 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r1, $r21);

        return $l5;

     label12:
        $r6 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getPredicates()>();

        $r8 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getObjects()>();

        $l1 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countsInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r1, $r7, r2, $r9);

        return $l1;

     label13:
        $r14 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r15 = virtualinvoke $r14.<com.hp.hpl.jena.mem.GraphTripleStoreMem: com.hp.hpl.jena.mem.NodeToTriplesMapMem getObjects()>();

        $l3 = virtualinvoke r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r2, $r15);

        return $l3;

     label14:
        $r4 = r3.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: com.hp.hpl.jena.mem.GraphTripleStoreMem store>;

        $r5 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r1, r2);

        $z2 = virtualinvoke $r4.<com.hp.hpl.jena.mem.GraphTripleStoreMem: boolean contains(com.hp.hpl.jena.graph.Triple)>($r5);

        if $z2 == 0 goto label15;

        $l12 = 1L;

        goto label16;

     label15:
        $l12 = 0L;

     label16:
        return $l12;

     label17:
        return -1L;
    }

    public long countsInMap(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.mem.NodeToTriplesMapMem, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.mem.NodeToTriplesMapMem)
    {
        long $l0, $l1, $l4;
        com.hp.hpl.jena.graph.Node r1, r3;
        com.hp.hpl.jena.mem.NodeToTriplesMapMem r2, r4;
        byte $b2, $b3;
        com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler r0;

        r0 := @this: com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.mem.NodeToTriplesMapMem;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.mem.NodeToTriplesMapMem;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r1, r2);

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler: long countInMap(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.mem.NodeToTriplesMapMem)>(r3, r4);

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label1;

        $b3 = $l1 cmp 0L;

        if $b3 != 0 goto label2;

     label1:
        $l4 = 0L;

        goto label3;

     label2:
        $l4 = -1L;

     label3:
        return $l4;
    }

    public long countInMap(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.mem.NodeToTriplesMapMem)
    {
        com.hp.hpl.jena.mem.NodeToTriplesMapMem r0;
        com.hp.hpl.jena.mem.TripleBunch $r3;
        com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler r4;
        int $i0;
        java.lang.Object $r2;
        long $l1;
        com.hp.hpl.jena.graph.Node r1;

        r4 := @this: com.hp.hpl.jena.mem.GraphMem$GraphMemStatisticsHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.mem.NodeToTriplesMapMem;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: java.lang.Object getIndexingValue()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.mem.NodeToTriplesMapMem: com.hp.hpl.jena.mem.TripleBunch get(java.lang.Object)>($r2);

        if $r3 != null goto label1;

        $l1 = 0L;

        goto label2;

     label1:
        $i0 = interfaceinvoke $r3.<com.hp.hpl.jena.mem.TripleBunch: int size()>();

        $l1 = (long) $i0;

     label2:
        return $l1;
    }
}
