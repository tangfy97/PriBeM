final class org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet extends java.lang.Object
{
    int count;
    org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points;
    private static final int HASHMAP_CUTOVER;
    private final java.util.HashMap map;
    private boolean useHash;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        java.util.HashMap $r2;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] $r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.lucene.util.automaton.BasicOperations$PointTransitions)[5];

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map> = $r2;

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean useHash> = 0;

        return;
    }

    private org.apache.lucene.util.automaton.BasicOperations$PointTransitions next(int)
    {
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] $r1, $r2, $r4, $r5, r7;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions $r3, $r6, r8;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        i3 := @parameter0: int;

        $i1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        $r1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i7 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        $i9 = 1 + $i7;

        $i8 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i10 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i9, $i8);

        r7 = newarray (org.apache.lucene.util.automaton.BasicOperations$PointTransitions)[$i10];

        $r5 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $i11 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r7, 0, $i11);

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points> = r7;

     label1:
        $r2 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $i2 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        $r6 = $r2[$i2];

        r8 = $r6;

        if $r6 != null goto label2;

        $r4 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $i6 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        $r3 = new org.apache.lucene.util.automaton.BasicOperations$PointTransitions;

        specialinvoke $r3.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: void <init>(org.apache.lucene.util.automaton.BasicOperations$1)>(null);

        $r4[$i6] = $r3;

        r8 = $r3;

     label2:
        virtualinvoke r8.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: void reset(int)>(i3);

        $i4 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count> = $i5;

        return r8;
    }

    private org.apache.lucene.util.automaton.BasicOperations$PointTransitions find(int)
    {
        java.util.HashMap $r4, $r8, $r15, $r18;
        java.lang.AssertionError $r9;
        java.lang.Integer $r5, $r14;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        boolean $z0, $z1;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] $r2, $r6, $r10, $r12;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions $r1, $r3, $r7, $r11, $r13, $r17, r19;
        java.lang.Object $r16;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        i1 := @parameter0: int;

        $z0 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean useHash>;

        if $z0 == 0 goto label2;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        r19 = (org.apache.lucene.util.automaton.BasicOperations$PointTransitions) $r16;

        if r19 != null goto label1;

        $r17 = specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions next(int)>(i1);

        r19 = $r17;

        $r18 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17);

     label1:
        return r19;

     label2:
        i6 = 0;

     label3:
        $i0 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        if i6 >= $i0 goto label5;

        $r10 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r11 = $r10[i6];

        $i5 = $r11.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        if $i5 != i1 goto label4;

        $r12 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r13 = $r12[i6];

        return $r13;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        $r1 = specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions next(int)>(i1);

        $i2 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        if $i2 != 30 goto label9;

        $z1 = <org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $r8 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map>;

        $i4 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i4 == 0 goto label6;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label6:
        i7 = 0;

     label7:
        $i8 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        if i7 >= $i8 goto label8;

        $r4 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map>;

        $r2 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r3 = $r2[i7];

        $i3 = $r3.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r7 = $r6[i7];

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        i7 = i7 + 1;

        goto label7;

     label8:
        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean useHash> = 1;

     label9:
        return $r1;
    }

    public void reset()
    {
        java.util.HashMap $r1;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        $z0 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean useHash>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: java.util.HashMap map>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean useHash> = 0;

     label1:
        r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count> = 0;

        return;
    }

    public void sort()
    {
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        int $i0, $i1;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] $r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        $i0 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        if $i0 <= 1 goto label1;

        $r1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $i1 = r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        staticinvoke <org.apache.lucene.util.ArrayUtil: void mergeSort(java.lang.Comparable[],int,int)>($r1, 0, $i1);

     label1:
        return;
    }

    public void add(org.apache.lucene.util.automaton.Transition)
    {
        org.apache.lucene.util.automaton.Transition r1;
        org.apache.lucene.util.automaton.BasicOperations$TransitionList $r3, $r5;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        int $i0, $i1, $i2;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions $r2, $r4;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        r1 := @parameter0: org.apache.lucene.util.automaton.Transition;

        $i0 = r1.<org.apache.lucene.util.automaton.Transition: int min>;

        $r2 = specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions find(int)>($i0);

        $r3 = $r2.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList starts>;

        virtualinvoke $r3.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: void add(org.apache.lucene.util.automaton.Transition)>(r1);

        $i1 = r1.<org.apache.lucene.util.automaton.Transition: int max>;

        $i2 = 1 + $i1;

        $r4 = specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions find(int)>($i2);

        $r5 = $r4.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList ends>;

        virtualinvoke $r5.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: void add(org.apache.lucene.util.automaton.Transition)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r2;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] $r3, $r7, $r12;
        org.apache.lucene.util.automaton.BasicOperations$TransitionList $r9, $r14;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r1;
        org.apache.lucene.util.automaton.BasicOperations$PointTransitions $r4, $r8, $r13;
        java.lang.StringBuilder $r0, $r5, $r6, $r10, $r11;

        r1 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        $i0 = r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int count>;

        if i4 >= $i0 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $r3 = r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r4 = $r3[i4];

        $i1 = $r4.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: int point>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r7 = r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r8 = $r7[i4];

        $r9 = $r8.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList starts>;

        $i2 = $r9.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: int count>;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r12 = r1.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: org.apache.lucene.util.automaton.BasicOperations$PointTransitions[] points>;

        $r13 = $r12[i4];

        $r14 = $r13.<org.apache.lucene.util.automaton.BasicOperations$PointTransitions: org.apache.lucene.util.automaton.BasicOperations$TransitionList ends>;

        $i3 = $r14.<org.apache.lucene.util.automaton.BasicOperations$TransitionList: int count>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    void <init>(org.apache.lucene.util.automaton.BasicOperations$1)
    {
        org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet r0;
        org.apache.lucene.util.automaton.BasicOperations$1 r1;

        r0 := @this: org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet;

        r1 := @parameter0: org.apache.lucene.util.automaton.BasicOperations$1;

        specialinvoke r0.<org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: int HASHMAP_CUTOVER> = 30;

        $r0 = class "Lorg/apache/lucene/util/automaton/BasicOperations;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.automaton.BasicOperations$PointTransitionSet: boolean $assertionsDisabled> = $z1;

        return;
    }
}
