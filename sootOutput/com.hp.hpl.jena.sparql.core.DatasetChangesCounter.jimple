public class com.hp.hpl.jena.sparql.core.DatasetChangesCounter extends java.lang.Object implements com.hp.hpl.jena.sparql.core.DatasetChanges
{
    long countStart;
    long countFinish;
    long countAdd;
    long countDelete;
    long countNoAdd;
    long countNoDelete;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetChangesCounter r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesCounter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countStart> = 0L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countFinish> = 0L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countAdd> = 0L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countDelete> = 0L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoAdd> = 0L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoDelete> = 0L;

        return;
    }

    public void start()
    {
        long $l0, $l1;
        com.hp.hpl.jena.sparql.core.DatasetChangesCounter r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesCounter;

        $l0 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countStart>;

        $l1 = $l0 + 1L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countStart> = $l1;

        return;
    }

    public void change(com.hp.hpl.jena.sparql.core.QuadAction, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        long $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        com.hp.hpl.jena.graph.Node r3, r4, r5, r6;
        int[] $r1;
        com.hp.hpl.jena.sparql.core.QuadAction r0;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.core.DatasetChangesCounter r2;

        r2 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesCounter;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.QuadAction;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        r6 := @parameter4: com.hp.hpl.jena.graph.Node;

        $r1 = <com.hp.hpl.jena.sparql.core.DatasetChangesCounter$1: int[] $SwitchMap$com$hp$hpl$jena$sparql$core$QuadAction>;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.QuadAction: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $l8 = r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countAdd>;

        $l9 = $l8 + 1L;

        r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countAdd> = $l9;

        goto label5;

     label2:
        $l6 = r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countDelete>;

        $l7 = $l6 + 1L;

        r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countDelete> = $l7;

        goto label5;

     label3:
        $l4 = r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoAdd>;

        $l5 = $l4 + 1L;

        r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoAdd> = $l5;

        goto label5;

     label4:
        $l2 = r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoDelete>;

        $l3 = $l2 + 1L;

        r2.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countNoDelete> = $l3;

     label5:
        return;
    }

    public void finish()
    {
        long $l0, $l1;
        com.hp.hpl.jena.sparql.core.DatasetChangesCounter r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetChangesCounter;

        $l0 = r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countFinish>;

        $l1 = $l0 + 1L;

        r0.<com.hp.hpl.jena.sparql.core.DatasetChangesCounter: long countFinish> = $l1;

        return;
    }
}
