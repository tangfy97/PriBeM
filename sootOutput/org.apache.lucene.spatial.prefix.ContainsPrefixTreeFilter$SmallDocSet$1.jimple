class org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 extends org.apache.lucene.search.DocIdSetIterator
{
    int idx;
    final int val$size;
    final int[] val$docs;
    final org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet this$0;

    void <init>(org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet, int, int[])
    {
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 r0;
        int[] r2;
        int i0, $i2;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet r1;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet this$0> = r1;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int val$size> = i0;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int[] val$docs> = r2;

        specialinvoke r0.<org.apache.lucene.search.DocIdSetIterator: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx> = $i2;

        return;
    }

    public int docID()
    {
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1;

        $i0 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx>;

        if $i0 < 0 goto label1;

        $i2 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx>;

        $i1 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int val$size>;

        if $i2 >= $i1 goto label1;

        $r1 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int[] val$docs>;

        $i3 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx>;

        $i4 = $r1[$i3];

        return $i4;

     label1:
        $i6 = (int) -1;

        return $i6;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1;

        $i0 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx> = $i1;

        $i2 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int val$size>;

        if $i1 >= $i2 goto label1;

        $r1 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int[] val$docs>;

        $i3 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int idx>;

        $i4 = $r1[$i3];

        return $i4;

     label1:
        return 2147483647;
    }

    public int advance(int) throws java.io.IOException
    {
        int i0, $i1;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 r0;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int slowAdvance(int)>(i0);

        return $i1;
    }

    public long cost()
    {
        int $i0;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1 r0;
        long $l1;

        r0 := @this: org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1;

        $i0 = r0.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter$SmallDocSet$1: int val$size>;

        $l1 = (long) $i0;

        return $l1;
    }
}
