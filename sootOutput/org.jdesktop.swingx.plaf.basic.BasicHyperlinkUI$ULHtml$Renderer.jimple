class org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer extends javax.swing.text.View
{
    private int width;
    private javax.swing.text.View view;
    private javax.swing.text.ViewFactory factory;
    private javax.swing.JComponent host;

    void <init>(javax.swing.JComponent, javax.swing.text.ViewFactory, javax.swing.text.View)
    {
        javax.swing.JComponent r1;
        javax.swing.text.ViewFactory r2;
        javax.swing.text.View r3, $r4, $r5, $r6;
        float $f0, $f1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: javax.swing.text.ViewFactory;

        r3 := @parameter2: javax.swing.text.View;

        specialinvoke r0.<javax.swing.text.View: void <init>(javax.swing.text.Element)>(null);

        r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.JComponent host> = r1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.ViewFactory factory> = r2;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view> = r3;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        virtualinvoke $r4.<javax.swing.text.View: void setParent(javax.swing.text.View)>(r0);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $f0 = virtualinvoke $r5.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $f1 = virtualinvoke $r6.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: void setSize(float,float)>($f0, $f1);

        return;
    }

    public javax.swing.text.AttributeSet getAttributes()
    {
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        return null;
    }

    public float getPreferredSpan(int)
    {
        int i0, $i1;
        javax.swing.text.View $r1;
        float $f0, $f1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: int width>;

        $f1 = (float) $i1;

        return $f1;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $f0 = virtualinvoke $r1.<javax.swing.text.View: float getPreferredSpan(int)>(i0);

        return $f0;
    }

    public float getMinimumSpan(int)
    {
        int i0;
        javax.swing.text.View $r1;
        float $f0;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $f0 = virtualinvoke $r1.<javax.swing.text.View: float getMinimumSpan(int)>(i0);

        return $f0;
    }

    public float getMaximumSpan(int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        return 2.14748365E9F;
    }

    public void preferenceChanged(javax.swing.text.View, boolean, boolean)
    {
        javax.swing.JComponent $r1, $r2;
        javax.swing.text.View r3;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;
        boolean z0, z1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        r3 := @parameter0: javax.swing.text.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.JComponent host>;

        virtualinvoke $r1.<javax.swing.JComponent: void revalidate()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.JComponent host>;

        virtualinvoke $r2.<javax.swing.JComponent: void repaint()>();

        return;
    }

    public float getAlignment(int)
    {
        int i0;
        javax.swing.text.View $r1;
        float $f0;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $f0 = virtualinvoke $r1.<javax.swing.text.View: float getAlignment(int)>(i0);

        return $f0;
    }

    public void paint(java.awt.Graphics, java.awt.Shape)
    {
        java.awt.Shape r0;
        java.awt.Rectangle $r1;
        int $i0, $i1;
        java.awt.Graphics r4;
        float $f0, $f1;
        javax.swing.text.View $r3, $r5;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r2;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        r4 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: java.awt.Shape;

        $r1 = interfaceinvoke r0.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $i0 = $r1.<java.awt.Rectangle: int width>;

        $f1 = (float) $i0;

        $i1 = $r1.<java.awt.Rectangle: int height>;

        $f0 = (float) $i1;

        virtualinvoke $r3.<javax.swing.text.View: void setSize(float,float)>($f1, $f0);

        $r5 = r2.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        virtualinvoke $r5.<javax.swing.text.View: void paint(java.awt.Graphics,java.awt.Shape)>(r4, r0);

        return;
    }

    public void setParent(javax.swing.text.View)
    {
        java.lang.Error $r0;
        javax.swing.text.View r2;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        r2 := @parameter0: javax.swing.text.View;

        $r0 = new java.lang.Error;

        specialinvoke $r0.<java.lang.Error: void <init>(java.lang.String)>("Can\'t set parent on root view");

        throw $r0;
    }

    public int getViewCount()
    {
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        return 1;
    }

    public javax.swing.text.View getView(int)
    {
        int i0;
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        return $r1;
    }

    public java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException
    {
        java.awt.Shape r1, $r4;
        javax.swing.text.Position$Bias r2;
        int i0;
        javax.swing.text.View $r3;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Shape;

        r2 := @parameter2: javax.swing.text.Position$Bias;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $r4 = virtualinvoke $r3.<javax.swing.text.View: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, r1, r2);

        return $r4;
    }

    public java.awt.Shape modelToView(int, javax.swing.text.Position$Bias, int, javax.swing.text.Position$Bias, java.awt.Shape) throws javax.swing.text.BadLocationException
    {
        java.awt.Shape r3, $r5;
        javax.swing.text.Position$Bias r1, r2;
        int i0, i1;
        javax.swing.text.View $r4;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        i0 := @parameter0: int;

        r1 := @parameter1: javax.swing.text.Position$Bias;

        i1 := @parameter2: int;

        r2 := @parameter3: javax.swing.text.Position$Bias;

        r3 := @parameter4: java.awt.Shape;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $r5 = virtualinvoke $r4.<javax.swing.text.View: java.awt.Shape modelToView(int,javax.swing.text.Position$Bias,int,javax.swing.text.Position$Bias,java.awt.Shape)>(i0, r1, i1, r2, r3);

        return $r5;
    }

    public int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position$Bias[])
    {
        java.awt.Shape r1;
        javax.swing.text.Position$Bias[] r2;
        int $i0;
        float f0, f1;
        javax.swing.text.View $r3;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: java.awt.Shape;

        r2 := @parameter3: javax.swing.text.Position$Bias[];

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $i0 = virtualinvoke $r3.<javax.swing.text.View: int viewToModel(float,float,java.awt.Shape,javax.swing.text.Position$Bias[])>(f0, f1, r1, r2);

        return $i0;
    }

    public javax.swing.text.Document getDocument()
    {
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;
        javax.swing.text.Document $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $r2 = virtualinvoke $r1.<javax.swing.text.View: javax.swing.text.Document getDocument()>();

        return $r2;
    }

    public int getStartOffset()
    {
        int $i0;
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $i0 = virtualinvoke $r1.<javax.swing.text.View: int getStartOffset()>();

        return $i0;
    }

    public int getEndOffset()
    {
        int $i0;
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $i0 = virtualinvoke $r1.<javax.swing.text.View: int getEndOffset()>();

        return $i0;
    }

    public javax.swing.text.Element getElement()
    {
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;
        javax.swing.text.Element $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        $r2 = virtualinvoke $r1.<javax.swing.text.View: javax.swing.text.Element getElement()>();

        return $r2;
    }

    public void setSize(float, float)
    {
        int $i0;
        float f0, f1;
        javax.swing.text.View $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = (int) f0;

        r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: int width> = $i0;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.View view>;

        virtualinvoke $r1.<javax.swing.text.View: void setSize(float,float)>(f0, f1);

        return;
    }

    public java.awt.Container getContainer()
    {
        javax.swing.JComponent $r1;
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.JComponent host>;

        return $r1;
    }

    public javax.swing.text.ViewFactory getViewFactory()
    {
        org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer r0;
        javax.swing.text.ViewFactory $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer: javax.swing.text.ViewFactory factory>;

        return $r1;
    }
}
