public final class org.apache.cxf.helpers.MapNamespaceContext extends java.lang.Object implements javax.xml.namespace.NamespaceContext
{
    private java.util.Map namespaces;
    private org.w3c.dom.Node targetNode;

    public void <init>()
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.cxf.helpers.MapNamespaceContext: void <init>()>();

        r0.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces> = r1;

        return;
    }

    public void <init>(org.w3c.dom.Node)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.cxf.helpers.MapNamespaceContext: void <init>()>();

        r0.<org.apache.cxf.helpers.MapNamespaceContext: org.w3c.dom.Node targetNode> = r1;

        return;
    }

    public void setTargetNode(org.w3c.dom.Node)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: org.w3c.dom.Node;

        r0.<org.apache.cxf.helpers.MapNamespaceContext: org.w3c.dom.Node targetNode> = r1;

        return;
    }

    public void addNamespace(java.lang.String, java.lang.String)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.util.Map $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void addNamespaces(java.util.Map)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public java.lang.String getNamespaceURI(java.lang.String)
    {
        org.apache.cxf.helpers.MapNamespaceContext r3;
        java.lang.IllegalArgumentException $r10;
        org.w3c.dom.Node $r4, $r8;
        java.util.Map $r5;
        java.lang.Object $r6;
        java.lang.String r0, $r1, $r2, $r7, $r9;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r0 := @parameter0: java.lang.String;

        if null != r0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null prefix to getNamespaceURI");

        throw $r10;

     label1:
        $r1 = "xml";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return "http://www.w3.org/XML/1998/namespace";

     label2:
        $r2 = "xmlns";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return "http://www.w3.org/2000/xmlns/";

     label3:
        $r4 = r3.<org.apache.cxf.helpers.MapNamespaceContext: org.w3c.dom.Node targetNode>;

        if $r4 == null goto label4;

        $r8 = r3.<org.apache.cxf.helpers.MapNamespaceContext: org.w3c.dom.Node targetNode>;

        $r9 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>($r8, r0);

        if $r9 == null goto label4;

        return $r9;

     label4:
        $r5 = r3.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        org.apache.cxf.helpers.MapNamespaceContext r3;
        java.util.Map $r4;
        java.lang.String r0, $r1, $r2, $r10, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.lang.IllegalArgumentException $r13;
        java.lang.Object $r7, $r9, $r11;

        r3 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null namespace to getPrefix");

        throw $r13;

     label1:
        $r1 = "http://www.w3.org/XML/1998/namespace";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return "xml";

     label2:
        $r2 = "http://www.w3.org/2000/xmlns/";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return "xmlns";

     label3:
        $r4 = r3.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label5;

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        return $r12;

     label5:
        goto label4;

     label6:
        return null;
    }

    public java.util.Iterator getPrefixes(java.lang.String)
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.util.Map getUsedNamespaces()
    {
        org.apache.cxf.helpers.MapNamespaceContext r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.helpers.MapNamespaceContext;

        $r1 = r0.<org.apache.cxf.helpers.MapNamespaceContext: java.util.Map namespaces>;

        return $r1;
    }
}
