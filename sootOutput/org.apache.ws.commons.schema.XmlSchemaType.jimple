public abstract class org.apache.ws.commons.schema.XmlSchemaType extends org.apache.ws.commons.schema.XmlSchemaAnnotated implements org.apache.ws.commons.schema.utils.XmlSchemaNamed
{
    private org.apache.ws.commons.schema.XmlSchemaDerivationMethod deriveBy;
    private org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation;
    private org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalResolved;
    private boolean isMixed;
    private org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate;

    protected void <init>(org.apache.ws.commons.schema.XmlSchema, boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r2;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r3;
        org.apache.ws.commons.schema.XmlSchema r1;
        org.apache.ws.commons.schema.XmlSchemaType$1 $r4;
        boolean z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchema;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaAnnotated: void <init>()>();

        $r2 = new org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl;

        specialinvoke $r2.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: void <init>(org.apache.ws.commons.schema.XmlSchema,boolean)>(r1, z0);

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate> = $r2;

        $r3 = <org.apache.ws.commons.schema.XmlSchemaDerivationMethod: org.apache.ws.commons.schema.XmlSchemaDerivationMethod NONE>;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation> = $r3;

        if z0 == 0 goto label1;

        $r4 = new org.apache.ws.commons.schema.XmlSchemaType$1;

        specialinvoke $r4.<org.apache.ws.commons.schema.XmlSchemaType$1: void <init>(org.apache.ws.commons.schema.XmlSchemaType,org.apache.ws.commons.schema.XmlSchema)>(r0, r1);

        staticinvoke <org.apache.ws.commons.schema.utils.CollectionFactory: void withSchemaModifiable(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public org.apache.ws.commons.schema.XmlSchemaDerivationMethod getDeriveBy()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod deriveBy>;

        return $r1;
    }

    public org.apache.ws.commons.schema.XmlSchemaDerivationMethod getFinal()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation>;

        return $r1;
    }

    public void setFinal(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaDerivationMethod;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation> = r1;

        return;
    }

    public org.apache.ws.commons.schema.XmlSchemaDerivationMethod getFinalResolved()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalResolved>;

        return $r1;
    }

    public boolean isMixed()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $z0 = r0.<org.apache.ws.commons.schema.XmlSchemaType: boolean isMixed>;

        return $z0;
    }

    public void setMixed(boolean)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        boolean z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        z0 := @parameter0: boolean;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: boolean isMixed> = z0;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r2, $r9;
        org.apache.ws.commons.schema.XmlSchema $r3, $r10;
        java.lang.String $r1, $r4, $r6, $r11, $r14, $r17, $r19, $r22, $r25, $r27, $r30;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r24, $r26, $r28, $r29;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: java.lang.String getName()>();

        if $r1 != null goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaAnnotated: java.lang.String toString()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[anonymous]");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;

     label1:
        $r2 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r3 = virtualinvoke $r2.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: org.apache.ws.commons.schema.XmlSchema getParent()>();

        $r4 = virtualinvoke $r3.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        if $r4 != null goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaAnnotated: java.lang.String toString()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{}");

        $r22 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = specialinvoke r0.<org.apache.ws.commons.schema.XmlSchemaAnnotated: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[{");

        $r9 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: org.apache.ws.commons.schema.XmlSchema getParent()>();

        $r11 = virtualinvoke $r10.<org.apache.ws.commons.schema.XmlSchema: java.lang.String getLogicalTargetNamespace()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r14 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public java.lang.String getName()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r2 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: java.lang.String getName()>();

        return $r2;
    }

    public org.apache.ws.commons.schema.XmlSchema getParent()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchema $r2;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r2 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: org.apache.ws.commons.schema.XmlSchema getParent()>();

        return $r2;
    }

    public javax.xml.namespace.QName getQName()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r2 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: javax.xml.namespace.QName getQName()>();

        return $r2;
    }

    public boolean isAnonymous()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $z0 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: boolean isAnonymous()>();

        return $z0;
    }

    public boolean isTopLevel()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1;
        boolean $z0;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $z0 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: boolean isTopLevel()>();

        return $z0;
    }

    public void setName(java.lang.String)
    {
        org.apache.ws.commons.schema.XmlSchemaException $r13;
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl $r1, $r3, $r7, $r9, $r14, $r15;
        java.util.Map $r5, $r11;
        org.apache.ws.commons.schema.XmlSchema $r4, $r10;
        java.lang.String r2, $r8;
        boolean $z0, $z1, $z2;
        javax.xml.namespace.QName $r6, $r12;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: boolean isTopLevel()>();

        if $z0 == 0 goto label1;

        if r2 != null goto label1;

        $r13 = new org.apache.ws.commons.schema.XmlSchemaException;

        specialinvoke $r13.<org.apache.ws.commons.schema.XmlSchemaException: void <init>(java.lang.String)>("A non-top-level type may not be anonyous.");

        throw $r13;

     label1:
        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $z1 = virtualinvoke $r1.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: boolean isTopLevel()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r8 = virtualinvoke $r7.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: java.lang.String getName()>();

        if $r8 == null goto label2;

        $r9 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r10 = virtualinvoke $r9.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: org.apache.ws.commons.schema.XmlSchema getParent()>();

        $r11 = virtualinvoke $r10.<org.apache.ws.commons.schema.XmlSchema: java.util.Map getSchemaTypes()>();

        $r12 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r12);

     label2:
        $r14 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        virtualinvoke $r14.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: void setName(java.lang.String)>(r2);

        $r15 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $z2 = virtualinvoke $r15.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: boolean isTopLevel()>();

        if $z2 == 0 goto label3;

        $r3 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl namedDelegate>;

        $r4 = virtualinvoke $r3.<org.apache.ws.commons.schema.utils.XmlSchemaNamedImpl: org.apache.ws.commons.schema.XmlSchema getParent()>();

        $r5 = virtualinvoke $r4.<org.apache.ws.commons.schema.XmlSchema: java.util.Map getSchemaTypes()>();

        $r6 = virtualinvoke r0.<org.apache.ws.commons.schema.XmlSchemaType: javax.xml.namespace.QName getQName()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r0);

     label3:
        return;
    }

    void setFinalResolved(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaDerivationMethod;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalResolved> = r1;

        return;
    }

    public void setFinalDerivation(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaDerivationMethod;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation> = r1;

        return;
    }

    public org.apache.ws.commons.schema.XmlSchemaDerivationMethod getFinalDerivation()
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod $r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        $r1 = r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod finalDerivation>;

        return $r1;
    }

    public void setDeriveBy(org.apache.ws.commons.schema.XmlSchemaDerivationMethod)
    {
        org.apache.ws.commons.schema.XmlSchemaType r0;
        org.apache.ws.commons.schema.XmlSchemaDerivationMethod r1;

        r0 := @this: org.apache.ws.commons.schema.XmlSchemaType;

        r1 := @parameter0: org.apache.ws.commons.schema.XmlSchemaDerivationMethod;

        r0.<org.apache.ws.commons.schema.XmlSchemaType: org.apache.ws.commons.schema.XmlSchemaDerivationMethod deriveBy> = r1;

        return;
    }
}
