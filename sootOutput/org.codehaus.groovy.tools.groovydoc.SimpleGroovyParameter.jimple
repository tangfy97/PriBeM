public class org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter extends java.lang.Object implements org.codehaus.groovy.groovydoc.GroovyParameter
{
    private java.lang.String name;
    private java.lang.String typeName;
    private org.codehaus.groovy.groovydoc.GroovyType type;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String name> = r1;

        return;
    }

    public java.lang.String name()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String name>;

        return $r1;
    }

    public java.lang.String typeName()
    {
        org.codehaus.groovy.groovydoc.GroovyType $r1, $r2;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;
        java.lang.String $r3, $r4;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: org.codehaus.groovy.groovydoc.GroovyType type>;

        if $r1 != null goto label1;

        $r4 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String typeName>;

        return $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: org.codehaus.groovy.groovydoc.GroovyType type>;

        $r3 = interfaceinvoke $r2.<org.codehaus.groovy.groovydoc.GroovyType: java.lang.String simpleTypeName()>();

        return $r3;
    }

    public void setTypeName(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: java.lang.String typeName> = r1;

        return;
    }

    public org.codehaus.groovy.groovydoc.GroovyType type()
    {
        org.codehaus.groovy.groovydoc.GroovyType $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: org.codehaus.groovy.groovydoc.GroovyType type>;

        return $r1;
    }

    public void setType(org.codehaus.groovy.groovydoc.GroovyType)
    {
        org.codehaus.groovy.groovydoc.GroovyType r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        r1 := @parameter0: org.codehaus.groovy.groovydoc.GroovyType;

        r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: org.codehaus.groovy.groovydoc.GroovyType type> = r1;

        return;
    }

    public boolean isTypeAvailable()
    {
        org.codehaus.groovy.groovydoc.GroovyType $r1;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyParameter: org.codehaus.groovy.groovydoc.GroovyType type>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
