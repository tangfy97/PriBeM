public class com.jidesoft.plaf.vsnet.VsnetWindowsUtils extends com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension
{

    public void <init>()
    {
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils r0;

        r0 := @this: com.jidesoft.plaf.vsnet.VsnetWindowsUtils;

        specialinvoke r0.<com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void <init>()>();

        return;
    }

    public static void initClassDefaultsWithMenu(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void initClassDefaultsWithMenu(javax.swing.UIDefaults)>(r0);

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        return;
    }

    public static void initClassDefaults(javax.swing.UIDefaults)
    {
        javax.swing.UIDefaults r0;
        int $i0, $i1;

        r0 := @parameter0: javax.swing.UIDefaults;

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetLookAndFeelExtension: void initClassDefaults(javax.swing.UIDefaults)>(r0);

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("JidePopupMenuUI", "com.jidesoft.plaf.windows.WindowsJidePopupMenuUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("RangeSliderUI", "com.jidesoft.plaf.windows.WindowsRangeSliderUI");

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("CellStyleTableHeaderUI", "com.jidesoft.plaf.windows.WindowsCellStyleTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("SortableTableHeaderUI", "com.jidesoft.plaf.windows.WindowsSortableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("NestedTableHeaderUI", "com.jidesoft.plaf.windows.WindowsNestedTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("EditableTableHeaderUI", "com.jidesoft.plaf.windows.WindowsEditableTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("AutoFilterTableHeaderUI", "com.jidesoft.plaf.windows.WindowsAutoFilterTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("GroupTableHeaderUI", "com.jidesoft.plaf.windows.WindowsGroupTableHeaderUI");

        virtualinvoke r0.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("ExComboBoxUI", "com.jidesoft.plaf.windows.WindowsExComboBoxUI");

     label1:
        return;
    }

    public static void initComponentDefaults(javax.swing.UIDefaults)
    {
        java.awt.Color $r111, $r120, $r139, $r142, $r144, $r146, $r195, $r214, $r216, $r231, $r393, $r394;
        java.lang.Integer $r74, $r75, $r79, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r117, $r121, $r124, $r129, $r130, $r131, $r132, $r135, $r148, $r149, $r201, $r202, $r204, $r207, $r213, $r228, $r236, $r237, $r273, $r274, $r275, $r276, $r277, $r281, $r282, $r303, $r304, $r305, $r309;
        javax.swing.border.Border $r81, $r110, $r140, $r190, $r192, $r196, $r197, $r212, $r219, $r221, $r223, $r227, $r232, $r284, $r287, $r289, $r291;
        javax.swing.plaf.BorderUIResource $r346, $r348, $r358, $r372, $r373, $r374, $r375, $r379, $r380, $r381, $r382, $r383, $r385, $r388, $r389, $r390;
        java.awt.Toolkit $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Boolean $r115, $r122, $r123, $r134, $r168, $r179, $r208, $r235, $r278, $r279, $r280, $r300, $r301, $r302, $r306, $r310;
        com.jidesoft.plaf.ExtWindowsDesktopProperty $r327, $r329, $r331, $r333, $r335, $r337, $r339, $r341, $r364, $r366, $r368, $r370, $r387;
        javax.swing.border.CompoundBorder $r198;
        javax.swing.plaf.ColorUIResource $r347, $r352, $r353, $r359, $r360, $r361, $r362, $r377, $r384, $r397, $r398, $r399, $r400;
        com.jidesoft.plaf.WindowsDesktopProperty $r312, $r313, $r314, $r315, $r316, $r317, $r318, $r319, $r320, $r321, $r322, $r323, $r324, $r325;
        com.jidesoft.plaf.basic.ThemePainter $r171;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.UIDefaults r23;
        javax.swing.plaf.InsetsUIResource $r344, $r349, $r350, $r351, $r356, $r371, $r376, $r378;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$12 $r367;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$11 $r365;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$10 $r363;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$14 $r386;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$13 $r369;
        java.lang.Object[] $r29, $r37, $r42, $r47, $r52, $r57, $r62, $r67, $r72, $r77, $r126, $r128, $r137, $r172, $r173, $r178, $r182, $r185, $r188, $r200, $r210, $r240, $r248, $r256, $r264, $r271;
        javax.swing.plaf.basic.BasicBorders$MarginBorder $r343;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$1 $r326;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$2 $r328;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$3 $r330;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$4 $r332;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$5 $r334;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$6 $r336;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$7 $r338;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$8 $r340;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$9 $r342;
        com.jidesoft.plaf.vsnet.HeaderCellBorder $r395;
        javax.swing.UIDefaults$LazyInputMap $r345, $r354, $r355, $r357, $r391, $r396;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r25, $r26, $r30, $r31, $r32, $r33, $r38, $r43, $r48, $r53, $r58, $r63, $r68, $r112, $r169, $r170, $r186, $r194, $r215, $r217, $r241, $r242, $r243, $r244, $r249, $r250, $r251, $r252, $r257, $r258, $r259, $r260, $r265, $r266, $r267, $r268;
        javax.swing.ImageIcon $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r209, $r224, $r225, $r233, $r234, $r270, $r285, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299;
        javax.swing.plaf.DimensionUIResource $r392;
        javax.swing.Icon $r78;
        java.lang.String[] $r28, $r36, $r41, $r46, $r51, $r56, $r61, $r66, $r184, $r239, $r247, $r255, $r263;

        r23 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r315 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlText");

        specialinvoke $r315.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.button.textColor", $r2, $r0);

        $r316 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        specialinvoke $r316.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.backgroundColor", $r4, $r0);

        $r317 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        specialinvoke $r317.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.lightColor", $r6, $r0);

        $r318 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        specialinvoke $r318.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.highlightColor", $r8, $r0);

        $r319 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r10 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r319.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.shadowColor", $r10, $r0);

        $r320 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        specialinvoke $r320.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.3d.darkShadowColor", $r12, $r0);

        $r321 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaptionText");

        specialinvoke $r321.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.captionTextColor", $r14, $r0);

        $r322 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("activeCaption");

        specialinvoke $r322.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.frame.activeCaptionColor", $r16, $r0);

        $r323 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r18 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        specialinvoke $r323.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.mdi.backgroundColor", $r18, $r0);

        $r324 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        specialinvoke $r324.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.menu.textColor", $r20, $r0);

        $r325 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r22 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("highContrast");

        specialinvoke $r325.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.highContrast.on", $r22, $r0);

        $r24 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getControlFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r23);

        $r25 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r23);

        $r26 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getBoldFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r23);

        $r327 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r28 = newarray (java.lang.String)[4];

        $r28[0] = "win.3d.lightColor";

        $r28[1] = "win.3d.highlightColor";

        $r28[2] = "win.3d.shadowColor";

        $r28[3] = "win.3d.darkShadowColor";

        $r29 = newarray (java.lang.Object)[4];

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r29[0] = $r30;

        $r31 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r29[1] = $r31;

        $r32 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r29[2] = $r32;

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r29[3] = $r33;

        $r326 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$1;

        specialinvoke $r326.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$1: void <init>()>();

        specialinvoke $r327.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r28, $r29, $r0, $r326);

        $r329 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r36 = newarray (java.lang.String)[1];

        $r36[0] = "win.3d.backgroundColor";

        $r37 = newarray (java.lang.Object)[1];

        $r38 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r37[0] = $r38;

        $r328 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$2;

        specialinvoke $r328.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$2: void <init>()>();

        specialinvoke $r329.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r36, $r37, $r0, $r328);

        $r331 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r41 = newarray (java.lang.String)[1];

        $r41[0] = "win.item.highlightColor";

        $r42 = newarray (java.lang.Object)[1];

        $r43 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r42[0] = $r43;

        $r330 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$3;

        specialinvoke $r330.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$3: void <init>()>();

        specialinvoke $r331.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r41, $r42, $r0, $r330);

        $r333 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r46 = newarray (java.lang.String)[1];

        $r46[0] = "win.item.highlightColor";

        $r47 = newarray (java.lang.Object)[1];

        $r48 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r47[0] = $r48;

        $r332 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$4;

        specialinvoke $r332.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$4: void <init>()>();

        specialinvoke $r333.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r46, $r47, $r0, $r332);

        $r335 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r51 = newarray (java.lang.String)[1];

        $r51[0] = "win.item.highlightColor";

        $r52 = newarray (java.lang.Object)[1];

        $r53 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("textHighlight");

        $r52[0] = $r53;

        $r334 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$5;

        specialinvoke $r334.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$5: void <init>()>();

        specialinvoke $r335.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r51, $r52, $r0, $r334);

        $r337 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r56 = newarray (java.lang.String)[1];

        $r56[0] = "win.3d.shadowColor";

        $r57 = newarray (java.lang.Object)[1];

        $r58 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r57[0] = $r58;

        $r336 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$6;

        specialinvoke $r336.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$6: void <init>()>();

        specialinvoke $r337.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r56, $r57, $r0, $r336);

        $r339 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r61 = newarray (java.lang.String)[1];

        $r61[0] = "win.item.highlightColor";

        $r62 = newarray (java.lang.Object)[1];

        $r63 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r62[0] = $r63;

        $r338 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$7;

        specialinvoke $r338.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$7: void <init>()>();

        specialinvoke $r339.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r61, $r62, $r0, $r338);

        $r341 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r66 = newarray (java.lang.String)[1];

        $r66[0] = "win.3d.backgroundColor";

        $r67 = newarray (java.lang.Object)[1];

        $r68 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r67[0] = $r68;

        $r340 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$8;

        specialinvoke $r340.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$8: void <init>()>();

        specialinvoke $r341.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r66, $r67, $r0, $r340);

        $r342 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$9;

        specialinvoke $r342.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$9: void <init>()>();

        $r343 = new javax.swing.plaf.basic.BasicBorders$MarginBorder;

        specialinvoke $r343.<javax.swing.plaf.basic.BasicBorders$MarginBorder: void <init>()>();

        $r72 = newarray (java.lang.Object)[256];

        $r72[0] = "Theme.highContrast";

        $r72[1] = $r325;

        $r72[2] = "Content.background";

        $r72[3] = $r316;

        $r72[4] = "JideLabel.font";

        $r72[5] = $r24;

        $r72[6] = "JideLabel.background";

        $r72[7] = $r316;

        $r72[8] = "JideLabel.foreground";

        $r72[9] = $r315;

        $r72[10] = "JideButton.selectedAndFocusedBackground";

        $r72[11] = $r333;

        $r72[12] = "JideButton.focusedBackground";

        $r72[13] = $r331;

        $r72[14] = "JideButton.selectedBackground";

        $r72[15] = $r335;

        $r72[16] = "JideButton.borderColor";

        $r72[17] = $r339;

        $r72[18] = "JideButton.font";

        $r72[19] = $r24;

        $r72[20] = "JideButton.background";

        $r72[21] = $r316;

        $r72[22] = "JideButton.foreground";

        $r72[23] = $r315;

        $r72[24] = "JideButton.shadow";

        $r72[25] = $r319;

        $r72[26] = "JideButton.darkShadow";

        $r72[27] = $r320;

        $r72[28] = "JideButton.light";

        $r72[29] = $r317;

        $r72[30] = "JideButton.highlight";

        $r72[31] = $r318;

        $r72[32] = "JideButton.border";

        $r72[33] = $r343;

        $r72[34] = "JideButton.margin";

        $r344 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r344.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 3);

        $r72[35] = $r344;

        $r72[36] = "JideButton.textIconGap";

        $r74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[37] = $r74;

        $r72[38] = "JideButton.textShiftOffset";

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r72[39] = $r75;

        $r72[40] = "JideButton.focusInputMap";

        $r345 = new javax.swing.UIDefaults$LazyInputMap;

        $r77 = newarray (java.lang.Object)[8];

        $r77[0] = "SPACE";

        $r77[1] = "pressed";

        $r77[2] = "released SPACE";

        $r77[3] = "released";

        $r77[4] = "ENTER";

        $r77[5] = "pressed";

        $r77[6] = "released ENTER";

        $r77[7] = "released";

        specialinvoke $r345.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r77);

        $r72[41] = $r345;

        $r72[42] = "TristateCheckBox.icon";

        $r78 = staticinvoke <com.jidesoft.plaf.windows.WindowsIconFactory: javax.swing.Icon getCheckBoxIcon()>();

        $r72[43] = $r78;

        $r72[44] = "JideSplitPane.dividerSize";

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[45] = $r79;

        $r72[46] = "JideSplitPaneDivider.border";

        $r346 = new javax.swing.plaf.BorderUIResource;

        $r81 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        specialinvoke $r346.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r81);

        $r72[47] = $r346;

        $r72[48] = "JideSplitPaneDivider.background";

        $r72[49] = $r316;

        $r72[50] = "JideSplitPaneDivider.gripperPainter";

        $r72[51] = $r342;

        $r72[52] = "JideTabbedPane.defaultTabShape";

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[53] = $r82;

        $r72[54] = "JideTabbedPane.defaultResizeMode";

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r72[55] = $r83;

        $r72[56] = "JideTabbedPane.defaultTabColorTheme";

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r72[57] = $r84;

        $r72[58] = "JideTabbedPane.tabRectPadding";

        $r85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[59] = $r85;

        $r72[60] = "JideTabbedPane.closeButtonMarginHorizonal";

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r72[61] = $r86;

        $r72[62] = "JideTabbedPane.closeButtonMarginVertical";

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r72[63] = $r87;

        $r72[64] = "JideTabbedPane.textMarginVertical";

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[65] = $r88;

        $r72[66] = "JideTabbedPane.noIconMargin";

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[67] = $r89;

        $r72[68] = "JideTabbedPane.iconMargin";

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r72[69] = $r90;

        $r72[70] = "JideTabbedPane.textPadding";

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r72[71] = $r91;

        $r72[72] = "JideTabbedPane.buttonSize";

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r72[73] = $r92;

        $r72[74] = "JideTabbedPane.buttonMargin";

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r72[75] = $r93;

        $r72[76] = "JideTabbedPane.fitStyleBoundSize";

        $r94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r72[77] = $r94;

        $r72[78] = "JideTabbedPane.fitStyleFirstTabMargin";

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[79] = $r95;

        $r72[80] = "JideTabbedPane.fitStyleIconMinWidth";

        $r96 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r72[81] = $r96;

        $r72[82] = "JideTabbedPane.fitStyleTextMinWidth";

        $r97 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        $r72[83] = $r97;

        $r72[84] = "JideTabbedPane.compressedStyleNoIconRectSize";

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r72[85] = $r98;

        $r72[86] = "JideTabbedPane.compressedStyleIconMargin";

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        $r72[87] = $r99;

        $r72[88] = "JideTabbedPane.compressedStyleCloseButtonMarginHorizontal";

        $r100 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r72[89] = $r100;

        $r72[90] = "JideTabbedPane.compressedStyleCloseButtonMarginVertical";

        $r101 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r72[91] = $r101;

        $r72[92] = "JideTabbedPane.fixedStyleRectSize";

        $r102 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(60);

        $r72[93] = $r102;

        $r72[94] = "JideTabbedPane.closeButtonMargin";

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[95] = $r103;

        $r72[96] = "JideTabbedPane.gripLeftMargin";

        $r104 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[97] = $r104;

        $r72[98] = "JideTabbedPane.closeButtonMarginSize";

        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r72[99] = $r105;

        $r72[100] = "JideTabbedPane.closeButtonLeftMargin";

        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[101] = $r106;

        $r72[102] = "JideTabbedPane.closeButtonRightMargin";

        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[103] = $r107;

        $r72[104] = "JideTabbedPane.defaultTabBorderShadowColor";

        $r347 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r347.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(115, 109, 99);

        $r72[105] = $r347;

        $r72[106] = "JideTabbedPane.gripperPainter";

        $r72[107] = $r342;

        $r72[108] = "JideTabbedPane.border";

        $r348 = new javax.swing.plaf.BorderUIResource;

        $r110 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r348.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r110);

        $r72[109] = $r348;

        $r72[110] = "JideTabbedPane.background";

        $r72[111] = $r329;

        $r72[112] = "JideTabbedPane.foreground";

        $r72[113] = $r315;

        $r72[114] = "JideTabbedPane.light";

        $r111 = <java.awt.Color: java.awt.Color BLACK>;

        $r112 = virtualinvoke $r316.<com.jidesoft.plaf.WindowsDesktopProperty: java.lang.Object createValue(javax.swing.UIDefaults)>(r23);

        $z0 = virtualinvoke $r111.<java.awt.Color: boolean equals(java.lang.Object)>($r112);

        if $z0 == 0 goto label01;

        $r312 = $r316;

        goto label02;

     label01:
        $r312 = $r317;

     label02:
        $r72[115] = $r312;

        $r72[116] = "JideTabbedPane.highlight";

        $r72[117] = $r318;

        $r72[118] = "JideTabbedPane.shadow";

        $r72[119] = $r319;

        $r72[120] = "JideTabbedPane.darkShadow";

        $r72[121] = $r315;

        $r72[122] = "JideTabbedPane.tabInsets";

        $r349 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r349.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 4, 1, 4);

        $r72[123] = $r349;

        $r72[124] = "JideTabbedPane.contentBorderInsets";

        $r350 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r350.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 2, 2, 2);

        $r72[125] = $r350;

        $r72[126] = "JideTabbedPane.ignoreContentBorderInsetsIfNoTabs";

        $r115 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r72[127] = $r115;

        $r72[128] = "JideTabbedPane.tabAreaInsets";

        $r351 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r351.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 4, 0, 4);

        $r72[129] = $r351;

        $r72[130] = "JideTabbedPane.tabAreaBackground";

        $r72[131] = $r329;

        $r72[132] = "JideTabbedPane.tabAreaBackgroundLt";

        $r72[133] = $r318;

        $r72[134] = "JideTabbedPane.tabAreaBackgroundDk";

        $r72[135] = $r316;

        $r72[136] = "JideTabbedPane.tabRunOverlay";

        $r117 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[137] = $r117;

        $r72[138] = "JideTabbedPane.font";

        $r72[139] = $r24;

        $r72[140] = "JideTabbedPane.selectedTabFont";

        $r72[141] = $r24;

        $r72[142] = "JideTabbedPane.selectedTabTextForeground";

        $r72[143] = $r315;

        $r72[144] = "JideTabbedPane.unselectedTabTextForeground";

        $r72[145] = $r315;

        $r72[146] = "JideTabbedPane.selectedTabBackground";

        $r72[147] = $r316;

        $r72[148] = "JideTabbedPane.selectedTabBackgroundLt";

        $r352 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r352.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(230, 139, 44);

        $r72[149] = $r352;

        $r72[150] = "JideTabbedPane.selectedTabBackgroundDk";

        $r353 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r353.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 199, 60);

        $r72[151] = $r353;

        $r72[152] = "JideTabbedPane.tabListBackground";

        $r120 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("List.background");

        $r72[153] = $r120;

        $r72[154] = "JideTabbedPane.textIconGap";

        $r121 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[155] = $r121;

        $r72[156] = "JideTabbedPane.showIconOnTab";

        $r122 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r72[157] = $r122;

        $r72[158] = "JideTabbedPane.showCloseButtonOnTab";

        $r123 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r72[159] = $r123;

        $r72[160] = "JideTabbedPane.closeButtonAlignment";

        $r124 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r72[161] = $r124;

        $r72[162] = "JideTabbedPane.focusInputMap";

        $r354 = new javax.swing.UIDefaults$LazyInputMap;

        $r126 = newarray (java.lang.Object)[20];

        $r126[0] = "RIGHT";

        $r126[1] = "navigateRight";

        $r126[2] = "KP_RIGHT";

        $r126[3] = "navigateRight";

        $r126[4] = "LEFT";

        $r126[5] = "navigateLeft";

        $r126[6] = "KP_LEFT";

        $r126[7] = "navigateLeft";

        $r126[8] = "UP";

        $r126[9] = "navigateUp";

        $r126[10] = "KP_UP";

        $r126[11] = "navigateUp";

        $r126[12] = "DOWN";

        $r126[13] = "navigateDown";

        $r126[14] = "KP_DOWN";

        $r126[15] = "navigateDown";

        $r126[16] = "ctrl DOWN";

        $r126[17] = "requestFocusForVisibleComponent";

        $r126[18] = "ctrl KP_DOWN";

        $r126[19] = "requestFocusForVisibleComponent";

        specialinvoke $r354.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r126);

        $r72[163] = $r354;

        $r72[164] = "JideTabbedPane.ancestorInputMap";

        $r355 = new javax.swing.UIDefaults$LazyInputMap;

        $r128 = newarray (java.lang.Object)[8];

        $r128[0] = "ctrl PAGE_DOWN";

        $r128[1] = "navigatePageDown";

        $r128[2] = "ctrl PAGE_UP";

        $r128[3] = "navigatePageUp";

        $r128[4] = "ctrl UP";

        $r128[5] = "requestFocus";

        $r128[6] = "ctrl KP_UP";

        $r128[7] = "requestFocus";

        specialinvoke $r355.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r128);

        $r72[165] = $r355;

        $r72[166] = "Gripper.size";

        $r129 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r72[167] = $r129;

        $r72[168] = "Gripper.foreground";

        $r72[169] = $r341;

        $r72[170] = "Gripper.painter";

        $r72[171] = $r342;

        $r72[172] = "Resizable.resizeBorder";

        $r72[173] = $r327;

        $r72[174] = "ButtonPanel.order";

        $r72[175] = "ACO";

        $r72[176] = "ButtonPanel.oppositeOrder";

        $r72[177] = "H";

        $r72[178] = "ButtonPanel.buttonGap";

        $r130 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r72[179] = $r130;

        $r72[180] = "ButtonPanel.groupGap";

        $r131 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $r72[181] = $r131;

        $r72[182] = "ButtonPanel.minButtonWidth";

        $r132 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(75);

        $r72[183] = $r132;

        $r72[184] = "JideSplitButton.font";

        $r72[185] = $r24;

        $r72[186] = "JideSplitButton.margin";

        $r356 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r356.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 3, 3, 7);

        $r72[187] = $r356;

        $r72[188] = "JideSplitButton.border";

        $r72[189] = $r343;

        $r72[190] = "JideSplitButton.borderPainted";

        $r134 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r72[191] = $r134;

        $r72[192] = "JideSplitButton.textIconGap";

        $r135 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r72[193] = $r135;

        $r72[194] = "JideSplitButton.selectionForeground";

        $r72[195] = $r324;

        $r72[196] = "JideSplitButton.focusInputMap";

        $r357 = new javax.swing.UIDefaults$LazyInputMap;

        $r137 = newarray (java.lang.Object)[12];

        $r137[0] = "SPACE";

        $r137[1] = "pressed";

        $r137[2] = "released SPACE";

        $r137[3] = "released";

        $r137[4] = "ENTER";

        $r137[5] = "pressed";

        $r137[6] = "released ENTER";

        $r137[7] = "released";

        $r137[8] = "DOWN";

        $r137[9] = "downPressed";

        $r137[10] = "released DOWN";

        $r137[11] = "downReleased";

        specialinvoke $r357.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r137);

        $r72[197] = $r357;

        $r72[198] = "MeterProgressBar.border";

        $r358 = new javax.swing.plaf.BorderUIResource;

        $r139 = <java.awt.Color: java.awt.Color BLACK>;

        $r140 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r139);

        specialinvoke $r358.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r140);

        $r72[199] = $r358;

        $r72[200] = "MeterProgressBar.background";

        $r359 = new javax.swing.plaf.ColorUIResource;

        $r142 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke $r359.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r142);

        $r72[201] = $r359;

        $r72[202] = "MeterProgressBar.foreground";

        $r360 = new javax.swing.plaf.ColorUIResource;

        $r144 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r360.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r144);

        $r72[203] = $r360;

        $r72[204] = "MeterProgressBar.cellForeground";

        $r361 = new javax.swing.plaf.ColorUIResource;

        $r146 = <java.awt.Color: java.awt.Color GREEN>;

        specialinvoke $r361.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r146);

        $r72[205] = $r361;

        $r72[206] = "MeterProgressBar.cellBackground";

        $r362 = new javax.swing.plaf.ColorUIResource;

        $i7 = (int) 32768;

        specialinvoke $r362.<javax.swing.plaf.ColorUIResource: void <init>(int)>($i7);

        $r72[207] = $r362;

        $r72[208] = "MeterProgressBar.cellLength";

        $r148 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[209] = $r148;

        $r72[210] = "MeterProgressBar.cellSpacing";

        $r149 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r72[211] = $r149;

        $r72[212] = "Cursor.hsplit";

        $r150 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_h_split.gif");

        $r72[213] = $r150;

        $r72[214] = "Cursor.vsplit";

        $r151 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_v_split.gif");

        $r72[215] = $r151;

        $r72[216] = "Cursor.north";

        $r152 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_north.gif");

        $r72[217] = $r152;

        $r72[218] = "Cursor.south";

        $r153 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_south.gif");

        $r72[219] = $r153;

        $r72[220] = "Cursor.east";

        $r154 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_east.gif");

        $r72[221] = $r154;

        $r72[222] = "Cursor.west";

        $r155 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_west.gif");

        $r72[223] = $r155;

        $r72[224] = "Cursor.tab";

        $r156 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_tab.gif");

        $r72[225] = $r156;

        $r72[226] = "Cursor.float";

        $r157 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_float.gif");

        $r72[227] = $r157;

        $r72[228] = "Cursor.vertical";

        $r158 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_vertical.gif");

        $r72[229] = $r158;

        $r72[230] = "Cursor.horizontal";

        $r159 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_horizontal.gif");

        $r72[231] = $r159;

        $r72[232] = "Cursor.delete";

        $r160 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_delete.gif");

        $r72[233] = $r160;

        $r72[234] = "Cursor.drag";

        $r161 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag.gif");

        $r72[235] = $r161;

        $r72[236] = "Cursor.dragStop";

        $r162 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_stop.gif");

        $r72[237] = $r162;

        $r72[238] = "Cursor.dragText";

        $r163 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text.gif");

        $r72[239] = $r163;

        $r72[240] = "Cursor.dragTextStop";

        $r164 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_drag_text_stop.gif");

        $r72[241] = $r164;

        $r72[242] = "Cursor.percentage";

        $r165 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_percentage.gif");

        $r72[243] = $r165;

        $r72[244] = "Cursor.moveEast";

        $r166 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_east.gif");

        $r72[245] = $r166;

        $r72[246] = "Cursor.moveWest";

        $r167 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/cursor_move_west.gif");

        $r72[247] = $r167;

        $r72[248] = "HeaderBox.background";

        $r72[249] = $r316;

        $r72[250] = "Icon.floating";

        $r168 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r72[251] = $r168;

        $r72[252] = "JideScrollPane.border";

        $r72[253] = $r337;

        $r72[254] = "TextArea.font";

        $r72[255] = $r24;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r72);

        $i0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: int getProductsUsed()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label03;

        $r364 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r239 = newarray (java.lang.String)[4];

        $r239[0] = "win.3d.lightColor";

        $r239[1] = "win.3d.highlightColor";

        $r239[2] = "win.3d.shadowColor";

        $r239[3] = "win.3d.darkShadowColor";

        $r240 = newarray (java.lang.Object)[4];

        $r241 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r240[0] = $r241;

        $r242 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r240[1] = $r242;

        $r243 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r240[2] = $r243;

        $r244 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r240[3] = $r244;

        $r363 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$10;

        specialinvoke $r363.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$10: void <init>()>();

        specialinvoke $r364.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r239, $r240, $r0, $r363);

        $r366 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r247 = newarray (java.lang.String)[4];

        $r247[0] = "win.3d.lightColor";

        $r247[1] = "win.3d.highlightColor";

        $r247[2] = "win.3d.shadowColor";

        $r247[3] = "win.3d.darkShadowColor";

        $r248 = newarray (java.lang.Object)[4];

        $r249 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r248[0] = $r249;

        $r250 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r248[1] = $r250;

        $r251 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r248[2] = $r251;

        $r252 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r248[3] = $r252;

        $r365 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$11;

        specialinvoke $r365.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$11: void <init>()>();

        specialinvoke $r366.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r247, $r248, $r0, $r365);

        $r368 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r255 = newarray (java.lang.String)[4];

        $r255[0] = "win.3d.lightColor";

        $r255[1] = "win.3d.highlightColor";

        $r255[2] = "win.3d.shadowColor";

        $r255[3] = "win.3d.darkShadowColor";

        $r256 = newarray (java.lang.Object)[4];

        $r257 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r256[0] = $r257;

        $r258 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r256[1] = $r258;

        $r259 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r256[2] = $r259;

        $r260 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r256[3] = $r260;

        $r367 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$12;

        specialinvoke $r367.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$12: void <init>()>();

        specialinvoke $r368.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r255, $r256, $r0, $r367);

        $r370 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r263 = newarray (java.lang.String)[4];

        $r263[0] = "win.3d.lightColor";

        $r263[1] = "win.3d.highlightColor";

        $r263[2] = "win.3d.shadowColor";

        $r263[3] = "win.3d.darkShadowColor";

        $r264 = newarray (java.lang.Object)[4];

        $r265 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r264[0] = $r265;

        $r266 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlLtHighlight");

        $r264[1] = $r266;

        $r267 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r264[2] = $r267;

        $r268 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlDkShadow");

        $r264[3] = $r268;

        $r369 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$13;

        specialinvoke $r369.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$13: void <init>()>();

        specialinvoke $r370.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r263, $r264, $r0, $r369);

        $r270 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/vsnet/VsnetWindowsUtils;", "icons/title_buttons_windows.gif");

        $r271 = newarray (java.lang.Object)[118];

        $r271[0] = "Workspace.background";

        $r271[1] = $r323;

        $r271[2] = "SidePane.margin";

        $r371 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r371.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(1, 1, 1, 1);

        $r271[3] = $r371;

        $r271[4] = "SidePane.iconTextGap";

        $r273 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r271[5] = $r273;

        $r271[6] = "SidePane.textBorderGap";

        $r274 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r271[7] = $r274;

        $r271[8] = "SidePane.itemGap";

        $r275 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r271[9] = $r275;

        $r271[10] = "SidePane.groupGap";

        $r276 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        $r271[11] = $r276;

        $r271[12] = "SidePane.foreground";

        $r271[13] = $r320;

        $r271[14] = "SidePane.background";

        $r271[15] = $r329;

        $r271[16] = "SidePane.lineColor";

        $r271[17] = $r319;

        $r271[18] = "SidePane.buttonBackground";

        $r271[19] = $r316;

        $r271[20] = "SidePane.selectedButtonBackground";

        $r271[21] = $r335;

        $r271[22] = "SidePane.selectedButtonForeground";

        $r271[23] = $r315;

        $r271[24] = "SidePane.font";

        $r271[25] = $r24;

        $r271[26] = "SidePane.orientation";

        $r277 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r271[27] = $r277;

        $r271[28] = "SidePane.showSelectedTabText";

        $r278 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r271[29] = $r278;

        $r271[30] = "SidePane.alwaysShowTabText";

        $r279 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[31] = $r279;

        $r271[32] = "SidePane.highlighSelectedTab";

        $r280 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[33] = $r280;

        $r271[34] = "ContentContainer.background";

        $r271[35] = $r329;

        $r271[36] = "ContentContainer.vgap";

        $r281 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r271[37] = $r281;

        $r271[38] = "ContentContainer.hgap";

        $r282 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r271[39] = $r282;

        $r271[40] = "MainContainer.border";

        $r372 = new javax.swing.plaf.BorderUIResource;

        $r284 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r372.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r284);

        $r271[41] = $r372;

        $r271[42] = "DockableFrame.defaultIcon";

        $r285 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/dockableframe_blank.gif");

        $r271[43] = $r285;

        $r271[44] = "DockableFrame.background";

        $r271[45] = $r316;

        $r271[46] = "DockableFrame.border";

        $r373 = new javax.swing.plaf.BorderUIResource;

        $r287 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r373.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r287);

        $r271[47] = $r373;

        $r271[48] = "DockableFrame.floatingBorder";

        $r374 = new javax.swing.plaf.BorderUIResource;

        $r289 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r374.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r289);

        $r271[49] = $r374;

        $r271[50] = "DockableFrame.slidingEastBorder";

        $r271[51] = $r364;

        $r271[52] = "DockableFrame.slidingWestBorder";

        $r271[53] = $r366;

        $r271[54] = "DockableFrame.slidingNorthBorder";

        $r271[55] = $r368;

        $r271[56] = "DockableFrame.slidingSouthBorder";

        $r271[57] = $r370;

        $r271[58] = "DockableFrame.activeTitleBackground";

        $r271[59] = $r322;

        $r271[60] = "DockableFrame.activeTitleForeground";

        $r271[61] = $r321;

        $r271[62] = "DockableFrame.inactiveTitleBackground";

        $r271[63] = $r316;

        $r271[64] = "DockableFrame.inactiveTitleForeground";

        $r271[65] = $r315;

        $r271[66] = "DockableFrame.titleBorder";

        $r375 = new javax.swing.plaf.BorderUIResource;

        $r291 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 3, 0);

        specialinvoke $r375.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r291);

        $r271[67] = $r375;

        $r271[68] = "DockableFrame.activeTitleBorderColor";

        $r271[69] = $r322;

        $r271[70] = "DockableFrame.inactiveTitleBorderColor";

        $r271[71] = $r319;

        $r271[72] = "DockableFrame.font";

        $r271[73] = $r24;

        $r271[74] = "DockableFrameTitlePane.gripperPainter";

        $r271[75] = $r342;

        $r271[76] = "DockableFrameTitlePane.font";

        $r271[77] = $r24;

        $r271[78] = "DockableFrameTitlePane.hideIcon";

        $r292 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 0, 10, 10);

        $r271[79] = $r292;

        $r271[80] = "DockableFrameTitlePane.unfloatIcon";

        $r293 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 10, 10, 10);

        $r271[81] = $r293;

        $r271[82] = "DockableFrameTitlePane.floatIcon";

        $r294 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 20, 10, 10);

        $r271[83] = $r294;

        $r271[84] = "DockableFrameTitlePane.autohideIcon";

        $r295 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 30, 10, 10);

        $r271[85] = $r295;

        $r271[86] = "DockableFrameTitlePane.stopAutohideIcon";

        $r296 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 40, 10, 10);

        $r271[87] = $r296;

        $r271[88] = "DockableFrameTitlePane.hideAutohideIcon";

        $r297 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 50, 10, 10);

        $r271[89] = $r297;

        $r271[90] = "DockableFrameTitlePane.maximizeIcon";

        $r298 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 60, 10, 10);

        $r271[91] = $r298;

        $r271[92] = "DockableFrameTitlePane.restoreIcon";

        $r299 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r270, 0, 70, 10, 10);

        $r271[93] = $r299;

        $r271[94] = "DockableFrameTitlePane.titleBarComponent";

        $r300 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[95] = $r300;

        $r271[96] = "DockableFrameTitlePane.alwaysShowAllButtons";

        $r301 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[97] = $r301;

        $r271[98] = "DockableFrameTitlePane.use3dButtons";

        $r302 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r271[99] = $r302;

        $r271[100] = "DockableFrameTitlePane.buttonsAlignment";

        $r303 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r271[101] = $r303;

        $r271[102] = "DockableFrameTitlePane.titleAlignment";

        $r304 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $r271[103] = $r304;

        $r271[104] = "DockableFrameTitlePane.buttonGap";

        $r305 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r271[105] = $r305;

        $r271[106] = "DockableFrameTitlePane.showIcon";

        $r306 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[107] = $r306;

        $r271[108] = "DockableFrameTitlePane.margin";

        $r376 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r376.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 6, 0, 6);

        $r271[109] = $r376;

        $r271[110] = "Contour.color";

        $r377 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r377.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(136, 136, 136);

        $r271[111] = $r377;

        $r271[112] = "Contour.thickness";

        $r309 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r271[113] = $r309;

        $r271[114] = "DockingFramework.changeCursor";

        $r310 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r271[115] = $r310;

        $r271[116] = "FrameContainer.contentBorderInsets";

        $r378 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r378.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(2, 0, 0, 0);

        $r271[117] = $r378;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r271);

     label03:
        $i2 = $i0 & 2;

        if $i2 == 0 goto label08;

        $r209 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/vsnet/VsnetWindowsUtils;", "icons/collapsible_pane_windows.gif");

        $r210 = newarray (java.lang.Object)[52];

        $r210[0] = "CollapsiblePanes.border";

        $r379 = new javax.swing.plaf.BorderUIResource;

        $r212 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(12, 12, 12, 12);

        specialinvoke $r379.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r212);

        $r210[1] = $r379;

        $r210[2] = "CollapsiblePanes.gap";

        $r213 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        $r210[3] = $r213;

        $r210[4] = "CollapsiblePane.background";

        $r214 = <java.awt.Color: java.awt.Color BLACK>;

        $r215 = virtualinvoke $r316.<com.jidesoft.plaf.WindowsDesktopProperty: java.lang.Object createValue(javax.swing.UIDefaults)>(r23);

        $z2 = virtualinvoke $r214.<java.awt.Color: boolean equals(java.lang.Object)>($r215);

        if $z2 == 0 goto label04;

        $r313 = $r318;

        goto label05;

     label04:
        $r313 = $r316;

     label05:
        $r210[5] = $r313;

        $r210[6] = "CollapsiblePane.contentBackground";

        $r216 = <java.awt.Color: java.awt.Color BLACK>;

        $r217 = virtualinvoke $r316.<com.jidesoft.plaf.WindowsDesktopProperty: java.lang.Object createValue(javax.swing.UIDefaults)>(r23);

        $z3 = virtualinvoke $r216.<java.awt.Color: boolean equals(java.lang.Object)>($r217);

        if $z3 == 0 goto label06;

        $r314 = $r316;

        goto label07;

     label06:
        $r314 = $r318;

     label07:
        $r210[7] = $r314;

        $r210[8] = "CollapsiblePane.foreground";

        $r210[9] = $r315;

        $r210[10] = "CollapsiblePane.emphasizedBackground";

        $r210[11] = $r322;

        $r210[12] = "CollapsiblePane.emphasizedForeground";

        $r210[13] = $r321;

        $r210[14] = "CollapsiblePane.border";

        $r380 = new javax.swing.plaf.BorderUIResource;

        $r219 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke $r380.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r219);

        $r210[15] = $r380;

        $r210[16] = "CollapsiblePane.font";

        $r210[17] = $r24;

        $r210[18] = "CollapsiblePane.contentBorder";

        $r381 = new javax.swing.plaf.BorderUIResource;

        $r221 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(8, 10, 8, 10);

        specialinvoke $r381.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r221);

        $r210[19] = $r381;

        $r210[20] = "CollapsiblePane.titleBorder";

        $r382 = new javax.swing.plaf.BorderUIResource;

        $r223 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(3, 3, 3, 3);

        specialinvoke $r382.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r223);

        $r210[21] = $r382;

        $r210[22] = "CollapsiblePane.titleFont";

        $r210[23] = $r26;

        $r210[24] = "CollapsiblePane.downIcon";

        $r224 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r209, 0, 0, 12, 12);

        $r210[25] = $r224;

        $r210[26] = "CollapsiblePane.upIcon";

        $r225 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r209, 0, 12, 12, 12);

        $r210[27] = $r225;

        $r210[28] = "StatusBarItem.border";

        $r210[29] = $r337;

        $r210[30] = "StatusBar.border";

        $r383 = new javax.swing.plaf.BorderUIResource;

        $r227 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 0, 0, 0);

        specialinvoke $r383.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r227);

        $r210[31] = $r383;

        $r210[32] = "StatusBar.gap";

        $r228 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r210[33] = $r228;

        $r210[34] = "StatusBar.background";

        $r210[35] = $r316;

        $r210[36] = "StatusBar.font";

        $r210[37] = $r24;

        $r210[38] = "MemoryStatusBarItem.fillColor";

        $r384 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r384.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(236, 233, 176);

        $r210[39] = $r384;

        $r210[40] = "DocumentPane.groupBorder";

        $r385 = new javax.swing.plaf.BorderUIResource;

        $r231 = <java.awt.Color: java.awt.Color gray>;

        $r232 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r231);

        specialinvoke $r385.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r232);

        $r210[41] = $r385;

        $r210[42] = "DocumentPane.newHorizontalGroupIcon";

        $r233 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_horizontal_tab_group.png");

        $r210[43] = $r233;

        $r210[44] = "DocumentPane.newVerticalGroupIcon";

        $r234 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/windows_new_vertical_tab_group.png");

        $r210[45] = $r234;

        $r210[46] = "DocumentPane.boldActiveTab";

        $r235 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r210[47] = $r235;

        $r210[48] = "OutlookTabbedPane.buttonStyle";

        $r236 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r210[49] = $r236;

        $r210[50] = "FloorTabbedPane.buttonStyle";

        $r237 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r210[51] = $r237;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r210);

     label08:
        $i5 = $i0 & 16;

        if $i5 == 0 goto label09;

        $r387 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r184 = newarray (java.lang.String)[1];

        $r184[0] = "win.3d.backgroundColor";

        $r185 = newarray (java.lang.Object)[1];

        $r186 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r185[0] = $r186;

        $r386 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$14;

        specialinvoke $r386.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$14: void <init>()>();

        specialinvoke $r387.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r184, $r185, $r0, $r386);

        $r188 = newarray (java.lang.Object)[44];

        $r188[0] = "CommandBar.font";

        $r188[1] = $r25;

        $r188[2] = "CommandBar.background";

        $r188[3] = $r387;

        $r188[4] = "CommandBar.foreground";

        $r188[5] = $r315;

        $r188[6] = "CommandBar.shadow";

        $r188[7] = $r319;

        $r188[8] = "CommandBar.darkShadow";

        $r188[9] = $r320;

        $r188[10] = "CommandBar.light";

        $r188[11] = $r317;

        $r188[12] = "CommandBar.highlight";

        $r188[13] = $r318;

        $r188[14] = "CommandBar.border";

        $r388 = new javax.swing.plaf.BorderUIResource;

        $r190 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r388.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r190);

        $r188[15] = $r388;

        $r188[16] = "CommandBar.borderVert";

        $r389 = new javax.swing.plaf.BorderUIResource;

        $r192 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        specialinvoke $r389.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r192);

        $r188[17] = $r389;

        $r188[18] = "CommandBar.borderFloating";

        $r390 = new javax.swing.plaf.BorderUIResource;

        $r194 = virtualinvoke $r322.<com.jidesoft.plaf.WindowsDesktopProperty: java.lang.Object createValue(javax.swing.UIDefaults)>(r23);

        $r195 = (java.awt.Color) $r194;

        $r196 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r195, 2);

        $r197 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(1, 1, 1, 1);

        $r198 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r196, $r197);

        specialinvoke $r390.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r198);

        $r188[19] = $r390;

        $r188[20] = "CommandBar.ancestorInputMap";

        $r391 = new javax.swing.UIDefaults$LazyInputMap;

        $r200 = newarray (java.lang.Object)[16];

        $r200[0] = "UP";

        $r200[1] = "navigateUp";

        $r200[2] = "KP_UP";

        $r200[3] = "navigateUp";

        $r200[4] = "DOWN";

        $r200[5] = "navigateDown";

        $r200[6] = "KP_DOWN";

        $r200[7] = "navigateDown";

        $r200[8] = "LEFT";

        $r200[9] = "navigateLeft";

        $r200[10] = "KP_LEFT";

        $r200[11] = "navigateLeft";

        $r200[12] = "RIGHT";

        $r200[13] = "navigateRight";

        $r200[14] = "KP_RIGHT";

        $r200[15] = "navigateRight";

        specialinvoke $r391.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r200);

        $r188[21] = $r391;

        $r188[22] = "CommandBar.titleBarSize";

        $r201 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(17);

        $r188[23] = $r201;

        $r188[24] = "CommandBar.titleBarButtonGap";

        $r202 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r188[25] = $r202;

        $r188[26] = "CommandBar.titleBarBackground";

        $r188[27] = $r322;

        $r188[28] = "CommandBar.titleBarForeground";

        $r188[29] = $r321;

        $r188[30] = "CommandBar.titleBarFont";

        $r188[31] = $r26;

        $r188[32] = "CommandBar.minimumSize";

        $r392 = new javax.swing.plaf.DimensionUIResource;

        specialinvoke $r392.<javax.swing.plaf.DimensionUIResource: void <init>(int,int)>(20, 20);

        $r188[33] = $r392;

        $r188[34] = "CommandBar.separatorSize";

        $r204 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        $r188[35] = $r204;

        $r188[36] = "CommandBarSeparator.background";

        $r393 = new java.awt.Color;

        specialinvoke $r393.<java.awt.Color: void <init>(int,int,int)>(219, 216, 209);

        $r188[37] = $r393;

        $r188[38] = "CommandBarSeparator.foreground";

        $r394 = new java.awt.Color;

        specialinvoke $r394.<java.awt.Color: void <init>(int,int,int)>(166, 166, 166);

        $r188[39] = $r394;

        $r188[40] = "Chevron.size";

        $r207 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        $r188[41] = $r207;

        $r188[42] = "Chevron.alwaysVisible";

        $r208 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r188[43] = $r208;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r188);

     label09:
        $i3 = $i0 & 4;

        if $i3 == 0 goto label10;

        $r178 = newarray (java.lang.Object)[6];

        $r178[0] = "AbstractComboBox.useJButton";

        $r179 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r178[1] = $r179;

        $r178[2] = "NestedTableHeader.cellBorder";

        $r395 = new com.jidesoft.plaf.vsnet.HeaderCellBorder;

        specialinvoke $r395.<com.jidesoft.plaf.vsnet.HeaderCellBorder: void <init>()>();

        $r178[3] = $r395;

        $r178[4] = "GroupList.ancestorInputMap";

        $r396 = new javax.swing.UIDefaults$LazyInputMap;

        $r182 = newarray (java.lang.Object)[4];

        $r182[0] = "TAB";

        $r182[1] = "selectNextGroup";

        $r182[2] = "shift TAB";

        $r182[3] = "selectPreviousGroup";

        specialinvoke $r396.<javax.swing.UIDefaults$LazyInputMap: void <init>(java.lang.Object[])>($r182);

        $r178[5] = $r396;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r178);

     label10:
        $i4 = $i0 & 16384;

        if $i4 == 0 goto label11;

        $r173 = newarray (java.lang.Object)[8];

        $r173[0] = "DiffMerge.changed";

        $r397 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r397.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 196, 255);

        $r173[1] = $r397;

        $r173[2] = "DiffMerge.deleted";

        $r398 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r398.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(200, 200, 200);

        $r173[3] = $r398;

        $r173[4] = "DiffMerge.inserted";

        $r399 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r399.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(196, 255, 196);

        $r173[5] = $r399;

        $r173[6] = "DiffMerge.conflicted";

        $r400 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r400.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 153, 153);

        $r173[7] = $r400;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r173);

     label11:
        $z1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: boolean shouldUseSystemFont()>();

        if $z1 != 0 goto label12;

        $r172 = newarray (java.lang.Object)[28];

        $r172[0] = "TabbedPane.font";

        $r172[1] = $r24;

        $r172[2] = "TitledBorder.font";

        $r172[3] = $r26;

        $r172[4] = "TableHeader.font";

        $r172[5] = $r24;

        $r172[6] = "Table.font";

        $r172[7] = $r24;

        $r172[8] = "List.font";

        $r172[9] = $r24;

        $r172[10] = "Tree.font";

        $r172[11] = $r24;

        $r172[12] = "ToolTip.font";

        $r172[13] = $r24;

        $r172[14] = "CheckBox.font";

        $r172[15] = $r24;

        $r172[16] = "RadioButton.font";

        $r172[17] = $r24;

        $r172[18] = "Label.font";

        $r172[19] = $r24;

        $r172[20] = "Panel.font";

        $r172[21] = $r24;

        $r172[22] = "TextField.font";

        $r172[23] = $r24;

        $r172[24] = "ComboBox.font";

        $r172[25] = $r24;

        $r172[26] = "Button.font";

        $r172[27] = $r24;

        virtualinvoke r23.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r172);

     label12:
        $r169 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TextField.font");

        virtualinvoke r23.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("Spinner.font", $r169);

        $r170 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("TextField.font");

        virtualinvoke r23.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("FormattedTextField.font", $r170);

        $r171 = staticinvoke <com.jidesoft.plaf.basic.BasicPainter: com.jidesoft.plaf.basic.ThemePainter getInstance()>();

        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: void put(javax.swing.UIDefaults,java.lang.String,java.lang.Object)>(r23, "Theme.painter", $r171);

        return;
    }

    public static void initComponentDefaultsWithMenu(javax.swing.UIDefaults)
    {
        java.awt.Color $r7, $r41, $r48, $r55;
        java.lang.Integer $r44, $r51, $r60, $r61, $r62, $r65, $r66, $r67;
        javax.swing.border.Border $r42, $r49, $r53, $r56;
        com.jidesoft.icons.MenuCheckIcon $r38, $r45, $r58, $r63;
        com.jidesoft.plaf.WindowsDesktopProperty $r19;
        java.lang.Object[] $r4, $r11, $r16, $r24, $r29, $r34, $r37;
        javax.swing.plaf.BorderUIResource $r40, $r47, $r52, $r54;
        javax.swing.ImageIcon $r39, $r46, $r59, $r64;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$19 $r36;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$18 $r31;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$17 $r26;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$20 $r8;
        com.jidesoft.plaf.basic.ThemePainter $r6;
        boolean $z0;
        javax.swing.UIDefaults r1;
        javax.swing.plaf.InsetsUIResource $r43, $r50, $r57, $r68;
        java.awt.Toolkit $r0;
        java.lang.String[] $r3, $r10, $r15, $r23, $r28, $r33;
        com.jidesoft.plaf.ExtWindowsDesktopProperty $r2, $r9, $r14, $r22, $r27, $r32;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$16 $r18;
        com.jidesoft.plaf.vsnet.VsnetWindowsUtils$15 $r13;
        java.lang.Object $r5, $r12, $r17, $r20, $r21, $r25, $r30, $r35;

        r1 := @parameter0: javax.swing.UIDefaults;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        staticinvoke <com.jidesoft.plaf.vsnet.VsnetWindowsUtils: void initComponentDefaults(javax.swing.UIDefaults)>(r1);

        $z0 = staticinvoke <java.beans.Beans: boolean isDesignTime()>();

        if $z0 != 0 goto label1;

        $r9 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "win.3d.lightColor";

        $r11 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlHighlight");

        $r11[0] = $r12;

        $r13 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$15;

        specialinvoke $r13.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$15: void <init>()>();

        specialinvoke $r9.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r10, $r11, $r0, $r13);

        $r14 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "win.item.highlightColor";

        $r16 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r16[0] = $r17;

        $r18 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$16;

        specialinvoke $r18.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$16: void <init>()>();

        specialinvoke $r14.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r15, $r16, $r0, $r18);

        $r19 = new com.jidesoft.plaf.WindowsDesktopProperty;

        $r20 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        specialinvoke $r19.<com.jidesoft.plaf.WindowsDesktopProperty: void <init>(java.lang.String,java.lang.Object,java.awt.Toolkit)>("win.menu.textColor", $r20, $r0);

        $r21 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.Object getMenuFont(java.awt.Toolkit,javax.swing.UIDefaults)>($r0, r1);

        $r22 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r23 = newarray (java.lang.String)[1];

        $r23[0] = "win.3d.lightColor";

        $r24 = newarray (java.lang.Object)[1];

        $r25 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r24[0] = $r25;

        $r26 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$17;

        specialinvoke $r26.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$17: void <init>()>();

        specialinvoke $r22.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r23, $r24, $r0, $r26);

        $r27 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r28 = newarray (java.lang.String)[1];

        $r28[0] = "win.3d.backgroundColor";

        $r29 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("control");

        $r29[0] = $r30;

        $r31 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$18;

        specialinvoke $r31.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$18: void <init>()>();

        specialinvoke $r27.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r28, $r29, $r0, $r31);

        $r32 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r33 = newarray (java.lang.String)[1];

        $r33[0] = "win.3d.shadowColor";

        $r34 = newarray (java.lang.Object)[1];

        $r35 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("controlShadow");

        $r34[0] = $r35;

        $r36 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$19;

        specialinvoke $r36.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$19: void <init>()>();

        specialinvoke $r32.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r33, $r34, $r0, $r36);

        $r37 = newarray (java.lang.Object)[94];

        $r37[0] = "PopupMenuSeparator.foreground";

        $r37[1] = $r32;

        $r37[2] = "PopupMenuSeparator.background";

        $r37[3] = $r27;

        $r37[4] = "CheckBoxMenuItem.checkIcon";

        $r38 = new com.jidesoft.icons.MenuCheckIcon;

        $r39 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r38.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r39);

        $r37[5] = $r38;

        $r37[6] = "CheckBoxMenuItem.selectionBackground";

        $r37[7] = $r22;

        $r37[8] = "CheckBoxMenuItem.selectionForeground";

        $r37[9] = $r19;

        $r37[10] = "CheckBoxMenuItem.acceleratorSelectionForeground";

        $r37[11] = $r19;

        $r37[12] = "CheckBoxMenuItem.mouseHoverBackground";

        $r37[13] = $r22;

        $r37[14] = "CheckBoxMenuItem.mouseHoverBorder";

        $r40 = new javax.swing.plaf.BorderUIResource;

        $r41 = new java.awt.Color;

        specialinvoke $r41.<java.awt.Color: void <init>(int,int,int)>(10, 36, 106);

        $r42 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r41);

        specialinvoke $r40.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r42);

        $r37[15] = $r40;

        $r37[16] = "CheckBoxMenuItem.margin";

        $r43 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r43.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 0, 3, 0);

        $r37[17] = $r43;

        $r37[18] = "CheckBoxMenuItem.font";

        $r37[19] = $r21;

        $r37[20] = "CheckBoxMenuItem.acceleratorFont";

        $r37[21] = $r21;

        $r37[22] = "CheckBoxMenuItem.textIconGap";

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r37[23] = $r44;

        $r37[24] = "RadioButtonMenuItem.checkIcon";

        $r45 = new com.jidesoft.icons.MenuCheckIcon;

        $r46 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r45.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r46);

        $r37[25] = $r45;

        $r37[26] = "RadioButtonMenuItem.selectionBackground";

        $r37[27] = $r22;

        $r37[28] = "RadioButtonMenuItem.selectionForeground";

        $r37[29] = $r19;

        $r37[30] = "RadioButtonMenuItem.acceleratorSelectionForeground";

        $r37[31] = $r19;

        $r37[32] = "RadioButtonMenuItem.mouseHoverBackground";

        $r37[33] = $r22;

        $r37[34] = "RadioButtonMenuItem.mouseHoverBorder";

        $r47 = new javax.swing.plaf.BorderUIResource;

        $r48 = new java.awt.Color;

        specialinvoke $r48.<java.awt.Color: void <init>(int,int,int)>(10, 36, 106);

        $r49 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r48);

        specialinvoke $r47.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r49);

        $r37[35] = $r47;

        $r37[36] = "RadioButtonMenuItem.margin";

        $r50 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r50.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 0, 3, 0);

        $r37[37] = $r50;

        $r37[38] = "RadioButtonMenuItem.font";

        $r37[39] = $r21;

        $r37[40] = "RadioButtonMenuItem.acceleratorFont";

        $r37[41] = $r21;

        $r37[42] = "RadioButtonMenuItem.textIconGap";

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r37[43] = $r51;

        $r37[44] = "MenuBar.border";

        $r52 = new javax.swing.plaf.BorderUIResource;

        $r53 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(2, 2, 2, 2);

        specialinvoke $r52.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r53);

        $r37[45] = $r52;

        $r37[46] = "Menu.selectionBackground";

        $r37[47] = $r22;

        $r37[48] = "Menu.selectionForeground";

        $r37[49] = $r19;

        $r37[50] = "Menu.mouseHoverBackground";

        $r37[51] = $r22;

        $r37[52] = "Menu.mouseHoverBorder";

        $r54 = new javax.swing.plaf.BorderUIResource;

        $r55 = new java.awt.Color;

        specialinvoke $r55.<java.awt.Color: void <init>(int,int,int)>(10, 36, 106);

        $r56 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r55);

        specialinvoke $r54.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r56);

        $r37[53] = $r54;

        $r37[54] = "Menu.margin";

        $r57 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r57.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 7, 2, 7);

        $r37[55] = $r57;

        $r37[56] = "Menu.checkIcon";

        $r58 = new com.jidesoft.icons.MenuCheckIcon;

        $r59 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r58.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r59);

        $r37[57] = $r58;

        $r37[58] = "Menu.textIconGap";

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r37[59] = $r60;

        $r37[60] = "Menu.font";

        $r37[61] = $r21;

        $r37[62] = "Menu.acceleratorFont";

        $r37[63] = $r21;

        $r37[64] = "Menu.submenuPopupOffsetX";

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r37[65] = $r61;

        $r37[66] = "Menu.submenuPopupOffsetY";

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r37[67] = $r62;

        $r37[68] = "MenuItem.checkIcon";

        $r63 = new com.jidesoft.icons.MenuCheckIcon;

        $r64 = staticinvoke <com.jidesoft.icons.JideIconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.String)>("jide/menu_checkbox_vsnet.gif");

        specialinvoke $r63.<com.jidesoft.icons.MenuCheckIcon: void <init>(javax.swing.ImageIcon)>($r64);

        $r37[69] = $r63;

        $r37[70] = "MenuItem.selectionBackground";

        $r37[71] = $r22;

        $r37[72] = "MenuItem.selectionForeground";

        $r37[73] = $r19;

        $r37[74] = "MenuItem.acceleratorSelectionForeground";

        $r37[75] = $r19;

        $r37[76] = "MenuItem.background";

        $r37[77] = $r27;

        $r37[78] = "MenuItem.selectionBorderColor";

        $r37[79] = $r14;

        $r37[80] = "MenuItem.shadowWidth";

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(24);

        $r37[81] = $r65;

        $r37[82] = "MenuItem.shadowColor";

        $r37[83] = $r9;

        $r37[84] = "MenuItem.textIconGap";

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        $r37[85] = $r66;

        $r37[86] = "MenuItem.accelEndGap";

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(18);

        $r37[87] = $r67;

        $r37[88] = "MenuItem.margin";

        $r68 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r68.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(3, 0, 3, 0);

        $r37[89] = $r68;

        $r37[90] = "MenuItem.font";

        $r37[91] = $r21;

        $r37[92] = "MenuItem.acceleratorFont";

        $r37[93] = $r21;

        virtualinvoke r1.<javax.swing.UIDefaults: void putDefaults(java.lang.Object[])>($r37);

     label1:
        $r2 = new com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "null";

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r6 = (com.jidesoft.plaf.basic.ThemePainter) $r5;

        $r7 = interfaceinvoke $r6.<com.jidesoft.plaf.basic.ThemePainter: java.awt.Color getMenuItemBorderColor()>();

        $r4[0] = $r7;

        $r8 = new com.jidesoft.plaf.vsnet.VsnetWindowsUtils$20;

        specialinvoke $r8.<com.jidesoft.plaf.vsnet.VsnetWindowsUtils$20: void <init>()>();

        specialinvoke $r2.<com.jidesoft.plaf.ExtWindowsDesktopProperty: void <init>(java.lang.String[],java.lang.Object[],java.awt.Toolkit,com.jidesoft.plaf.vsnet.ConvertListener)>($r3, $r4, $r0, $r8);

        virtualinvoke r1.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>("PopupMenu.border", $r2);

        return;
    }
}
