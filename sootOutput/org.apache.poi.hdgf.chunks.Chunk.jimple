public final class org.apache.poi.hdgf.chunks.Chunk extends java.lang.Object
{
    private byte[] contents;
    private org.apache.poi.hdgf.chunks.ChunkHeader header;
    private org.apache.poi.hdgf.chunks.ChunkTrailer trailer;
    private org.apache.poi.hdgf.chunks.ChunkSeparator separator;
    protected org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions;
    private org.apache.poi.hdgf.chunks.Chunk$Command[] commands;
    private java.lang.String name;
    private org.apache.poi.util.POILogger logger;

    public void <init>(org.apache.poi.hdgf.chunks.ChunkHeader, org.apache.poi.hdgf.chunks.ChunkTrailer, org.apache.poi.hdgf.chunks.ChunkSeparator, byte[])
    {
        org.apache.poi.hdgf.chunks.ChunkHeader r2;
        org.apache.poi.hdgf.chunks.ChunkTrailer r3;
        byte[] r5;
        org.apache.poi.hdgf.chunks.ChunkSeparator r4;
        org.apache.poi.util.POILogger $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        r2 := @parameter0: org.apache.poi.hdgf.chunks.ChunkHeader;

        r3 := @parameter1: org.apache.poi.hdgf.chunks.ChunkTrailer;

        r4 := @parameter2: org.apache.poi.hdgf.chunks.ChunkSeparator;

        r5 := @parameter3: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hdgf/chunks/Chunk;");

        r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.util.POILogger logger> = $r1;

        r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkHeader header> = r2;

        r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkTrailer trailer> = r3;

        r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkSeparator separator> = r4;

        r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents> = r5;

        return;
    }

    public byte[] _getContents()
    {
        byte[] $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        return $r1;
    }

    public org.apache.poi.hdgf.chunks.ChunkHeader getHeader()
    {
        org.apache.poi.hdgf.chunks.ChunkHeader $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkHeader header>;

        return $r1;
    }

    public org.apache.poi.hdgf.chunks.ChunkSeparator getSeparator()
    {
        org.apache.poi.hdgf.chunks.ChunkSeparator $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkSeparator separator>;

        return $r1;
    }

    public org.apache.poi.hdgf.chunks.ChunkTrailer getTrailer()
    {
        org.apache.poi.hdgf.chunks.ChunkTrailer $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkTrailer trailer>;

        return $r1;
    }

    public org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] getCommandDefinitions()
    {
        org.apache.poi.hdgf.chunks.Chunk r0;
        org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] $r1;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        return $r1;
    }

    public org.apache.poi.hdgf.chunks.Chunk$Command[] getCommands()
    {
        org.apache.poi.hdgf.chunks.Chunk r0;
        org.apache.poi.hdgf.chunks.Chunk$Command[] $r1;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.Chunk$Command[] commands>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.poi.hdgf.chunks.Chunk r0;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: java.lang.String name>;

        return $r1;
    }

    public int getOnDiskSize()
    {
        byte[] $r2, $r6, $r8;
        org.apache.poi.hdgf.chunks.ChunkSeparator $r4, $r5;
        org.apache.poi.hdgf.chunks.Chunk r0;
        org.apache.poi.hdgf.chunks.ChunkHeader $r1;
        org.apache.poi.hdgf.chunks.ChunkTrailer $r3, $r7;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkHeader header>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hdgf.chunks.ChunkHeader: int getSizeInBytes()>();

        $r2 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i1 = lengthof $r2;

        i4 = $i0 + $i1;

        $r3 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkTrailer trailer>;

        if $r3 == null goto label1;

        $r7 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkTrailer trailer>;

        $r8 = $r7.<org.apache.poi.hdgf.chunks.ChunkTrailer: byte[] trailerData>;

        $i3 = lengthof $r8;

        i4 = i4 + $i3;

     label1:
        $r4 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkSeparator separator>;

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkSeparator separator>;

        $r6 = $r5.<org.apache.poi.hdgf.chunks.ChunkSeparator: byte[] separatorData>;

        $i2 = lengthof $r6;

        i4 = i4 + $i2;

     label2:
        return i4;
    }

    protected void processCommands()
    {
        byte[] $r14, $r16, $r18, $r19, $r22, $r25, $r26, $r27, $r28, $r29, $r32, $r33, $r35, $r49, $r66;
        java.lang.Integer $r15;
        byte $b10, $b12, $b17, $b19;
        java.lang.Exception $r59;
        java.lang.StringBuilder $r40, $r41, $r42, $r46, $r47, $r48, $r50, $r62, $r63, $r71, $r74, $r75;
        java.lang.Object[] $r5;
        java.lang.Double $r72;
        long $l15;
        java.util.ArrayList $r68;
        short $s5;
        java.lang.String $r24, $r43, $r51, $r57, $r64, $r73;
        org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand r30, $r69;
        java.lang.IllegalStateException $r67;
        org.apache.poi.hdgf.chunks.Chunk r0;
        org.apache.poi.hdgf.chunks.Chunk$Command[] $r4, $r6;
        java.lang.Short $r17;
        java.lang.Byte $r34;
        boolean $z0;
        org.apache.poi.hdgf.chunks.Chunk$Command $r37, r65, $r70;
        org.apache.poi.util.POILogger $r39, $r45, $r61;
        org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] $r1, $r3, $r7, $r9, $r12, $r53, $r55;
        org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition $r8, $r10, $r13, $r54, $r56;
        java.nio.charset.Charset $r23;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i13, $i14, i16, $i18, $i20, i21, i22, $i23, i24, i25, i26, $i28, $i29;
        java.lang.Boolean $r36;
        double $d0;
        org.apache.poi.hdgf.chunks.ChunkHeader $r21;

        r0 := @this: org.apache.poi.hdgf.chunks.Chunk;

        $r1 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        if $r1 != null goto label01;

        $r67 = new java.lang.IllegalStateException;

        specialinvoke $r67.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must supply the command definitions before calling processCommands!");

        throw $r67;

     label01:
        $r68 = new java.util.ArrayList;

        specialinvoke $r68.<java.util.ArrayList: void <init>()>();

        i21 = 0;

     label02:
        $r3 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $i0 = lengthof $r3;

        if i21 >= $i0 goto label31;

        $r7 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $r8 = $r7[i21];

        $i2 = virtualinvoke $r8.<org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition: int getType()>();

        $r9 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $r10 = $r9[i21];

        $i3 = virtualinvoke $r10.<org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition: int getOffset()>();

        i22 = $i3;

        if $i2 != 10 goto label03;

        $r55 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $r56 = $r55[i21];

        $r57 = virtualinvoke $r56.<org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition: java.lang.String getName()>();

        r0.<org.apache.poi.hdgf.chunks.Chunk: java.lang.String name> = $r57;

        goto label30;

     label03:
        if $i2 != 18 goto label04;

        goto label30;

     label04:
        if $i2 == 11 goto label05;

        if $i2 != 21 goto label06;

     label05:
        $r69 = new org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand;

        $r12 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $r13 = $r12[i21];

        specialinvoke $r69.<org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand: void <init>(org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition,org.apache.poi.hdgf.chunks.Chunk$1)>($r13, null);

        r65 = $r69;

        goto label07;

     label06:
        $r70 = new org.apache.poi.hdgf.chunks.Chunk$Command;

        $r53 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition[] commandDefinitions>;

        $r54 = $r53[i21];

        specialinvoke $r70.<org.apache.poi.hdgf.chunks.Chunk$Command: void <init>(org.apache.poi.hdgf.chunks.ChunkFactory$CommandDefinition,org.apache.poi.hdgf.chunks.Chunk$1)>($r54, null);

        r65 = $r70;

     label07:
        tableswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label09;
            case 10: goto label09;
            case 11: goto label08;
            case 12: goto label08;
            case 13: goto label09;
            case 14: goto label09;
            case 15: goto label09;
            case 16: goto label08;
            case 17: goto label08;
            case 18: goto label08;
            case 19: goto label09;
            case 20: goto label09;
            case 21: goto label08;
            case 22: goto label09;
            case 23: goto label09;
            case 24: goto label09;
            case 25: goto label09;
            case 26: goto label09;
            case 27: goto label09;
            case 28: goto label08;
            case 29: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
        if $i3 < 19 goto label10;

        $i28 = (int) -19;

        i22 = $i3 + $i28;

     label10:
        $r66 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i23 = lengthof $r66;

        if i22 < $i23 goto label11;

        $r45 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.util.POILogger logger>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Command offset ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" past end of data at ");

        $r49 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i20 = lengthof $r49;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r51);

        goto label30;

     label11:
        tableswitch($i2)
        {
            case 0: goto label12;
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label15;
            case 9: goto label16;
            case 10: goto label26;
            case 11: goto label25;
            case 12: goto label17;
            case 13: goto label26;
            case 14: goto label26;
            case 15: goto label26;
            case 16: goto label26;
            case 17: goto label26;
            case 18: goto label26;
            case 19: goto label26;
            case 20: goto label26;
            case 21: goto label25;
            case 22: goto label26;
            case 23: goto label26;
            case 24: goto label26;
            case 25: goto label23;
            case 26: goto label24;
            default: goto label26;
        };

     label12:
        $r35 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $b19 = $r35[i22];

        $i18 = 1 << $i2;

        $i29 = (int) $b19;

        i24 = $i29 & $i18;

        $r37 = r65;

        if i24 <= 0 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r37.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r36;

        goto label27;

     label15:
        $r33 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $b17 = $r33[i22];

        $r34 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b17);

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r34;

        goto label27;

     label16:
        $r72 = new java.lang.Double;

        $r32 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $d0 = staticinvoke <org.apache.poi.util.LittleEndian: double getDouble(byte[],int)>($r32, i22);

        specialinvoke $r72.<java.lang.Double: void <init>(double)>($d0);

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r72;

        goto label27;

     label17:
        $r18 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i6 = lengthof $r18;

        if $i6 >= 8 goto label18;

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = "";

        goto label27;

     label18:
        i25 = 8;

        i26 = 8;

     label19:
        $r19 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i7 = lengthof $r19;

        $i8 = $i7 - 1;

        if i26 >= $i8 goto label21;

        if i25 != 8 goto label21;

        $r26 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $b10 = $r26[i26];

        if $b10 != 0 goto label20;

        $r27 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i11 = i26 + 1;

        $b12 = $r27[$i11];

        if $b12 != 0 goto label20;

        i25 = i26;

     label20:
        i26 = i26 + 1;

        goto label19;

     label21:
        if i25 != 8 goto label22;

        $r25 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        i25 = lengthof $r25;

     label22:
        $i9 = i25 - 8;

        $r73 = new java.lang.String;

        $r22 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $r21 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.ChunkHeader header>;

        $r23 = virtualinvoke $r21.<org.apache.poi.hdgf.chunks.ChunkHeader: java.nio.charset.Charset getChunkCharset()>();

        $r24 = virtualinvoke $r23.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r73.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r22, 8, $i9, $r24);

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r73;

        goto label27;

     label23:
        $r16 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $s5 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r16, i22);

        $r17 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s5);

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r17;

        goto label27;

     label24:
        $r14 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>($r14, i22);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r65.<org.apache.poi.hdgf.chunks.Chunk$Command: java.lang.Object value> = $r15;

        goto label27;

     label25:
        $r28 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $i13 = lengthof $r28;

        $i14 = $i13 - 3;

        if i22 >= $i14 goto label27;

        $r29 = r0.<org.apache.poi.hdgf.chunks.Chunk: byte[] contents>;

        $l15 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>($r29, i22);

        i16 = (int) $l15;

        r30 = (org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand) r65;

        staticinvoke <org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand: void access$200(org.apache.poi.hdgf.chunks.Chunk$BlockOffsetCommand,int)>(r30, i16);

        goto label27;

     label26:
        $r39 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.util.POILogger logger>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Command of type ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not processed!");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(3, $r43);

     label27:
        goto label29;

     label28:
        $r59 := @caughtexception;

        $r61 = r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.util.POILogger logger>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error processing command, ignoring and continuing. Command: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(7, $r64, $r59);

     label29:
        virtualinvoke $r68.<java.util.ArrayList: boolean add(java.lang.Object)>(r65);

     label30:
        i21 = i21 + 1;

        goto label02;

     label31:
        $i1 = virtualinvoke $r68.<java.util.ArrayList: int size()>();

        $r4 = newarray (org.apache.poi.hdgf.chunks.Chunk$Command)[$i1];

        $r5 = virtualinvoke $r68.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.poi.hdgf.chunks.Chunk$Command[]) $r5;

        r0.<org.apache.poi.hdgf.chunks.Chunk: org.apache.poi.hdgf.chunks.Chunk$Command[] commands> = $r6;

        return;

        catch java.lang.Exception from label11 to label27 with label28;
    }
}
