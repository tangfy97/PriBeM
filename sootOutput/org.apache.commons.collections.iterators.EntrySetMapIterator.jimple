public class org.apache.commons.collections.iterators.EntrySetMapIterator extends java.lang.Object implements org.apache.commons.collections.MapIterator, org.apache.commons.collections.ResettableIterator
{
    private final java.util.Map map;
    private java.util.Iterator iterator;
    private java.util.Map$Entry last;
    private boolean canRemove;

    public void <init>(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Map r1;
        java.util.Set $r2;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map map> = r1;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Iterator iterator> = $r3;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.Map$Entry $r3, $r4;
        java.util.Iterator $r1;
        java.lang.Object $r2, $r5;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last> = $r3;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: boolean canRemove> = 1;

        $r4 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        $r5 = interfaceinvoke $r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r5;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r2;
        java.util.Iterator $r1;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $z0 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator remove() can only be called once after next()");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.IllegalStateException $r4;
        java.util.Map$Entry $r1, $r2;
        java.lang.Object $r3;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getKey() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r3;
    }

    public java.lang.Object getValue()
    {
        java.lang.IllegalStateException $r4;
        java.util.Map$Entry $r1, $r2;
        java.lang.Object $r3;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator getValue() can only be called after next() and before remove()");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r3;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        java.lang.IllegalStateException $r5;
        java.util.Map$Entry $r1, $r3;
        java.lang.Object r2, $r4;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator setValue() can only be called after next() and before remove()");

        throw $r5;

     label1:
        $r3 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(r2);

        return $r4;
    }

    public void reset()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map map>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Iterator iterator> = $r3;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: boolean canRemove> = 0;

        return;
    }

    public java.lang.String toString()
    {
        java.util.Map$Entry $r1;
        org.apache.commons.collections.iterators.EntrySetMapIterator r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9;
        java.lang.Object $r4, $r7;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.collections.iterators.EntrySetMapIterator;

        $r1 = r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.util.Map$Entry last>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MapIterator[");

        $r4 = virtualinvoke r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.lang.Object getKey()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r7 = virtualinvoke r0.<org.apache.commons.collections.iterators.EntrySetMapIterator: java.lang.Object getValue()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;

     label1:
        return "MapIterator[]";
    }
}
