public class com.google.wave.api.impl.Tuple extends java.lang.Object
{
    private final java.lang.Object[] elements;

    public static transient com.google.wave.api.impl.Tuple of(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.google.wave.api.impl.Tuple $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new com.google.wave.api.impl.Tuple;

        specialinvoke $r0.<com.google.wave.api.impl.Tuple: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }

    public transient void <init>(java.lang.Object[])
    {
        java.lang.Object[] r1;
        com.google.wave.api.impl.Tuple r0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements> = r1;

        return;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r1;
        int i0;
        java.lang.Object $r2;
        com.google.wave.api.impl.Tuple r0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        i0 := @parameter0: int;

        $r1 = r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int size()
    {
        int $i0;
        java.lang.Object[] $r1;
        com.google.wave.api.impl.Tuple r0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        $r1 = r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object[] $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        com.google.wave.api.impl.Tuple r0, r4;
        boolean $z0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.google.wave.api.impl.Tuple) r1;

        $r6 = r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $r5 = r4.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r5);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Object[] $r1;
        com.google.wave.api.impl.Tuple r0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        $r1 = r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1;
        java.lang.String $r2;
        com.google.wave.api.impl.Tuple r0;

        r0 := @this: com.google.wave.api.impl.Tuple;

        $r1 = r0.<com.google.wave.api.impl.Tuple: java.lang.Object[] elements>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r1);

        return $r2;
    }
}
