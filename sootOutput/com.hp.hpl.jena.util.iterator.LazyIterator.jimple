public abstract class com.hp.hpl.jena.util.iterator.LazyIterator extends java.lang.Object implements com.hp.hpl.jena.util.iterator.ExtendedIterator
{
    private com.hp.hpl.jena.util.iterator.ExtendedIterator it;

    public void <init>()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it> = null;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r1 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r1 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r1 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void remove()>();

        return;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(com.hp.hpl.jena.util.iterator.ClosableIterator)
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r3;
        com.hp.hpl.jena.util.iterator.ClosableIterator r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.ClosableIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r2 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r3;
        com.hp.hpl.jena.util.iterator.Filter r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Filter;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r2 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r3;
        com.hp.hpl.jena.util.iterator.Filter r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Filter;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r2 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>(r1);

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r3;
        com.hp.hpl.jena.util.iterator.Map1 r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        r1 := @parameter0: com.hp.hpl.jena.util.iterator.Map1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r2 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>(r1);

        return $r3;
    }

    public void close()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: void lazy()>();

        $r1 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        return;
    }

    private void lazy()
    {
        com.hp.hpl.jena.util.iterator.LazyIterator r0;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1, $r2;

        r0 := @this: com.hp.hpl.jena.util.iterator.LazyIterator;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create()>();

        r0.<com.hp.hpl.jena.util.iterator.LazyIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator it> = $r2;

     label1:
        return;
    }

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator create();
}
