class org.codehaus.groovy.tools.shell.Main$_main_closure2 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference code;
    private groovy.lang.Reference io;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Main;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$IO;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference, groovy.lang.Reference)
    {
        groovy.lang.Reference r5, $r6, r7, $r8;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 r2;
        java.lang.Class $r0, $r1, $r9, $r10;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Main$_main_closure2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        r7 := @parameter3: groovy.lang.Reference;

        $r0 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main$_main_closure2");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference code> = $r6;

        $r8 = (groovy.lang.Reference) r7;

        r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference io> = $r8;

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        boolean $z0;
        java.lang.Object[] $r30;
        groovy.lang.Reference $r3, $r6, $r20, $r27;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 r2;
        java.lang.Class $r0, $r1, $r5, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r31;
        java.lang.Object $r4, $r7, $r8, r14, $r21, $r22, $r28, $r29;

        r2 := @this: org.codehaus.groovy.tools.shell.Main$_main_closure2;

        r14 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main$_main_closure2");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0> = $r15;

        goto label02;

     label01:
        $r15 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

     label02:
        $r1 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label03;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label04;

     label03:
        $r16 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference code>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r4, null);

        if $z0 == 0 goto label13;

        $r9 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

        if $r9 != null goto label05;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        $r17 = $r13;

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main> = $r13;

        goto label06;

     label05:
        $r17 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

     label06:
        $r10 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

        if $r10 != null goto label07;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        $r19 = $r18;

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main> = $r18;

        goto label08;

     label07:
        $r19 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

     label08:
        $r20 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference io>;

        $r21 = virtualinvoke $r20.<groovy.lang.Reference: java.lang.Object get()>();

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r19, $r21, "err");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r17, $r22, "println");

        $r23 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

        if $r23 != null goto label09;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        $r24 = $r12;

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main> = $r12;

        goto label10;

     label09:
        $r24 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

     label10:
        $r11 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

        if $r11 != null goto label11;

        $r25 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        $r26 = $r25;

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main> = $r25;

        goto label12;

     label11:
        $r26 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

     label12:
        $r27 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference io>;

        $r28 = virtualinvoke $r27.<groovy.lang.Reference: java.lang.Object get()>();

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r26, $r28, "err");

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = "@|red WARNING:| Abnormal JVM shutdown detected";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r24, $r29, "println", $r30);

        goto label13;

     label13:
        $r5 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

        if $r5 != null goto label14;

        $r31 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main> = $r31;

        goto label15;

     label14:
        $r31 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Main>;

     label15:
        $r6 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference io>;

        $r7 = virtualinvoke $r6.<groovy.lang.Reference: java.lang.Object get()>();

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r31, $r7, "flush");

        return $r8;
    }

    public java.lang.Object getCode()
    {
        groovy.lang.Reference $r3;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: org.codehaus.groovy.tools.shell.Main$_main_closure2;

        $r0 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main$_main_closure2");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference code>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    public org.codehaus.groovy.tools.shell.IO getIo()
    {
        groovy.lang.Reference $r3;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 r2;
        org.codehaus.groovy.tools.shell.IO $r7;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;

        r2 := @this: org.codehaus.groovy.tools.shell.Main$_main_closure2;

        $r0 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main$_main_closure2");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<org.codehaus.groovy.tools.shell.Main$_main_closure2: groovy.lang.Reference io>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.IO");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$IO> = $r10;

        goto label6;

     label5:
        $r10 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$IO>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (org.codehaus.groovy.tools.shell.IO) $r6;

        return $r7;
    }

    public java.lang.Object doCall()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.Main$_main_closure2 r3;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        java.lang.Object $r5;

        r3 := @this: org.codehaus.groovy.tools.shell.Main$_main_closure2;

        $r0 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Main$_main_closure2");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.Main$_main_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = null;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "doCall", $r4);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
