public abstract class org.apache.jena.riot.writer.WriterStreamRDFBase extends java.lang.Object implements org.apache.jena.riot.system.StreamRDF
{
    protected boolean activeTripleData;
    protected boolean activeQuadData;
    protected boolean lastWasDirective;
    protected final org.apache.jena.riot.system.PrefixMap pMap;
    protected java.lang.String baseURI;
    protected final org.apache.jena.riot.out.NodeToLabel nodeToLabel;
    protected org.apache.jena.riot.out.NodeFormatterTTL fmt;
    protected final org.apache.jena.atlas.io.IndentedWriter out;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r2;
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = new org.apache.jena.atlas.io.IndentedWriter;

        specialinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void <init>(java.io.OutputStream)>(r2);

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void <init>(org.apache.jena.atlas.io.IndentedWriter)>($r1);

        return;
    }

    public void <init>(org.apache.jena.atlas.io.IndentedWriter)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.riot.out.NodeToLabel $r3;
        org.apache.jena.riot.system.PrefixMap $r2;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeTripleData> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeQuadData> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean lastWasDirective> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: java.lang.String baseURI> = null;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out> = r1;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: java.lang.String baseURI> = null;

        $r2 = staticinvoke <org.apache.jena.riot.system.PrefixMapFactory: org.apache.jena.riot.system.PrefixMap create()>();

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.system.PrefixMap pMap> = $r2;

        $r3 = staticinvoke <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel createScopeByDocument()>();

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.out.NodeToLabel nodeToLabel> = $r3;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void setFormatter()>();

        return;
    }

    private void setFormatter()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.riot.out.NodeToLabel $r2;
        org.apache.jena.riot.system.PrefixMap $r3;
        org.apache.jena.riot.out.NodeFormatterTTL $r1;
        java.lang.String $r4;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        $r1 = new org.apache.jena.riot.out.NodeFormatterTTL;

        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: java.lang.String baseURI>;

        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.system.PrefixMap pMap>;

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.out.NodeToLabel nodeToLabel>;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeFormatterTTL: void <init>(java.lang.String,org.apache.jena.riot.system.PrefixMap,org.apache.jena.riot.out.NodeToLabel)>($r4, $r3, $r2);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.out.NodeFormatterTTL fmt> = $r1;

        return;
    }

    public void <init>(java.io.Writer)
    {
        java.io.Writer r1;
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: java.io.Writer;

        $r2 = staticinvoke <org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter wrap(java.io.Writer)>(r1);

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void <init>(org.apache.jena.atlas.io.IndentedWriter)>($r2);

        return;
    }

    private static org.apache.jena.atlas.io.IndentedWriter wrap(java.io.Writer)
    {
        java.io.BufferedWriter $r3;
        java.io.Writer r2;
        int $i1;
        org.apache.jena.atlas.io.IndentedWriter $r0;
        boolean $z0;

        r2 := @parameter0: java.io.Writer;

        $z0 = r2 instanceof java.io.BufferedWriter;

        if $z0 != 0 goto label1;

        $r3 = new java.io.BufferedWriter;

        $i1 = (int) 32768;

        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r2, $i1);

        r2 = $r3;

     label1:
        $r0 = staticinvoke <org.apache.jena.riot.system.RiotLib: org.apache.jena.atlas.io.IndentedWriter create(java.io.Writer)>(r2);

        return $r0;
    }

    private void reset$()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeTripleData> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeQuadData> = 0;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean lastWasDirective> = 0;

        return;
    }

    public final void start()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void reset$()>();

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void startData()>();

        return;
    }

    public final void finish()
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void endData()>();

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void flush()>();

        return;
    }

    public final void triple(com.hp.hpl.jena.graph.Triple)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void print(com.hp.hpl.jena.graph.Triple)>(r1);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeTripleData> = 1;

        return;
    }

    public final void quad(com.hp.hpl.jena.sparql.core.Quad)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void print(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean activeQuadData> = 1;

        return;
    }

    public final void tuple(org.apache.jena.atlas.lib.Tuple)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.jena.riot.writer.WriterStreamRDFBase r1;
        org.apache.jena.atlas.lib.Tuple r2;

        r1 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r2 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Tuple<Node>");

        throw $r0;
    }

    public final void base(java.lang.String)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        java.lang.String r1;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: java.lang.String baseURI> = r1;

        specialinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void setFormatter()>();

        return;
    }

    public final void prefix(java.lang.String, java.lang.String)
    {
        org.apache.jena.atlas.io.IndentedWriter $r1, $r3, $r4, $r6, $r7;
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        org.apache.jena.riot.system.PrefixMap $r8;
        java.lang.String r2, r5;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: void endData()>();

        r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: boolean lastWasDirective> = 1;

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("@prefix ");

        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r2);

        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(":  <");

        $r6 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r5);

        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("> .");

        $r8 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.system.PrefixMap pMap>;

        interfaceinvoke $r8.<org.apache.jena.riot.system.PrefixMap: void add(java.lang.String,java.lang.String)>(r2, r5);

        return;
    }

    protected void outputNode(com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.riot.out.NodeFormatterTTL $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.riot.out.NodeFormatterTTL fmt>;

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.riot.out.NodeFormatterTTL: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r2, r1);

        return;
    }

    protected abstract void startData();

    protected abstract void endData();

    protected abstract void print(com.hp.hpl.jena.sparql.core.Quad);

    protected abstract void print(com.hp.hpl.jena.graph.Triple);

    protected abstract void reset();

    protected transient void DEBUG(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r6;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r2, $r3, $r4, $r7, $r9, $r10, $r11;
        org.apache.jena.riot.writer.WriterStreamRDFBase r0;
        int $i0, $i1;
        java.lang.String r5, $r8;

        r0 := @this: org.apache.jena.riot.writer.WriterStreamRDFBase;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        $i0 = virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: int getCol()>();

        $r2 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        $i1 = virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: int getAbsoluteIndent()>();

        $r3 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        $r4 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void setAbsoluteIndent(int)>(0);

        $r7 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r5, r6);

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>($r8);

        $r9 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void setAbsoluteIndent(int)>($i1);

        $r10 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

        $r11 = r0.<org.apache.jena.riot.writer.WriterStreamRDFBase: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void pad(int,boolean)>($i0, 1);

        return;
    }
}
