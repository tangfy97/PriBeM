final class org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 extends java.lang.Object implements org.waveprotocol.wave.model.adt.docbased.Factory
{

    void <init>()
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.conversation.ObservableManifestBlip adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r0;

        r3 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip create(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.String)
    {
        org.waveprotocol.wave.model.util.Serializer $r1;
        org.waveprotocol.wave.model.adt.docbased.Initializer $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 r3;
        java.lang.String r0;

        r3 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer STRING>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedBasicValue: org.waveprotocol.wave.model.adt.docbased.Initializer createInitialiser(org.waveprotocol.wave.model.util.Serializer,java.lang.String,java.lang.Object)>($r1, "id", r0);

        return $r2;
    }

    public volatile org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.Initializer $r3;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1: org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.String)>($r2);

        return $r3;
    }

    public volatile java.lang.Object adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.conversation.ObservableManifestBlip $r3;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1 r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$1: org.waveprotocol.wave.model.conversation.ObservableManifestBlip adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object)>(r1, r2);

        return $r3;
    }
}
