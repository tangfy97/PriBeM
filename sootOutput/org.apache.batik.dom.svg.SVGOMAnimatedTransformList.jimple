public class org.apache.batik.dom.svg.SVGOMAnimatedTransformList extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue implements org.w3c.dom.svg.SVGAnimatedTransformList
{
    protected org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal;
    protected org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal;
    protected boolean changing;
    protected java.lang.String defaultValue;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        java.lang.String r2, r3, r4;
        org.apache.batik.dom.svg.AbstractElement r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: java.lang.String defaultValue> = r4;

        return;
    }

    public org.w3c.dom.svg.SVGTransformList getBaseVal()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        return $r2;
    }

    public org.w3c.dom.svg.SVGTransformList getAnimVal()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal>;

        return $r2;
    }

    public void check()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        org.apache.batik.dom.svg.LiveAttributeException $r5, $r10;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList $r1, $r2, $r3, $r4, $r6, $r13;
        java.lang.String $r8, $r9, $r11;
        org.apache.batik.dom.svg.AbstractElement $r7, $r12;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 != 0 goto label3;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        if $r1 != null goto label1;

        $r13 = new org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList;

        specialinvoke $r13.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal> = $r13;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: void revalidate()>();

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        $z1 = $r3.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean missing>;

        if $z1 == 0 goto label2;

        $r10 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r12 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r11 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        specialinvoke $r10.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r12, $r11, 0, null);

        throw $r10;

     label2:
        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        $z2 = $r4.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: boolean malformed>;

        if $z2 == 0 goto label3;

        $r5 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r7 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r8 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r6 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        $r9 = virtualinvoke $r6.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList: java.lang.String getValueAsString()>();

        specialinvoke $r5.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r7, $r8, 1, $r9);

        throw $r5;

     label3:
        return;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.w3c.dom.svg.SVGTransform $r3;
        org.apache.batik.dom.anim.AnimationTarget r5;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        java.util.ArrayList $r2;
        org.apache.batik.anim.values.AnimatableTransformListValue $r4;
        org.w3c.dom.svg.SVGTransformList $r1;
        int $i0, i1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r5 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.w3c.dom.svg.SVGTransformList getBaseVal()>();

        $i0 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGTransformList: int getNumberOfItems()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGTransformList: org.w3c.dom.svg.SVGTransform getItem(int)>(i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        $r4 = new org.apache.batik.anim.values.AnimatableTransformListValue;

        specialinvoke $r4.<org.apache.batik.anim.values.AnimatableTransformListValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,java.util.List)>(r5, $r2);

        return $r4;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r1;
        org.apache.batik.anim.values.AnimatableTransformListValue r2;
        java.util.Iterator $r5;
        org.apache.batik.anim.values.AnimatableValue r0;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList $r3, $r4, $r6;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        if r0 != null goto label1;

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        goto label3;

     label1:
        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        r2 = (org.apache.batik.anim.values.AnimatableTransformListValue) r0;

        $r3 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal>;

        if $r3 != null goto label2;

        $r6 = new org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList;

        specialinvoke $r6.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedTransformList)>(r1);

        r1.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal> = $r6;

     label2:
        $r4 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList animVal>;

        $r5 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableTransformListValue: java.util.Iterator getTransforms()>();

        virtualinvoke $r4.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList$AnimSVGTransformList: void setAnimatedValue(java.util.Iterator)>($r5);

     label3:
        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        java.lang.String r4;
        org.w3c.dom.Attr r3;
        boolean $z0, $z1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList $r1, $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        org.w3c.dom.Attr r3;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList $r1, $r2;
        java.lang.String r4, r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList r0;
        java.lang.String r4;
        org.w3c.dom.Attr r3;
        boolean $z0, $z1;
        org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList $r1, $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedTransformList;

        r3 := @parameter0: org.w3c.dom.Attr;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedTransformList: org.apache.batik.dom.svg.SVGOMAnimatedTransformList$BaseSVGTransformList baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }
}
