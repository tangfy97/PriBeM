public class org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment extends java.lang.Object
{
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement;

    public void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement> = r1;

        return;
    }

    public org.apache.poi.ss.usermodel.VerticalAlignment getVertical()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum $r2, r5;
        org.apache.poi.ss.usermodel.VerticalAlignment $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.ss.usermodel.VerticalAlignment[] $r3;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum getVertical()>();

        r5 = $r2;

        if $r2 != null goto label1;

        r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum BOTTOM>;

     label1:
        $r3 = staticinvoke <org.apache.poi.ss.usermodel.VerticalAlignment: org.apache.poi.ss.usermodel.VerticalAlignment[] values()>();

        $i0 = virtualinvoke r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r4 = $r3[$i1];

        return $r4;
    }

    public void setVertical(org.apache.poi.ss.usermodel.VerticalAlignment)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum $r3;
        org.apache.poi.ss.usermodel.VerticalAlignment r1;
        int $i0, $i1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r2;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        r1 := @parameter0: org.apache.poi.ss.usermodel.VerticalAlignment;

        $r2 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.usermodel.VerticalAlignment: int ordinal()>();

        $i1 = $i0 + 1;

        $r3 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum: org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum forInt(int)>($i1);

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setVertical(org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignment$Enum)>($r3);

        return;
    }

    public org.apache.poi.ss.usermodel.HorizontalAlignment getHorizontal()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.ss.usermodel.HorizontalAlignment $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum $r2, r5;
        org.apache.poi.ss.usermodel.HorizontalAlignment[] $r3;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum getHorizontal()>();

        r5 = $r2;

        if $r2 != null goto label1;

        r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum GENERAL>;

     label1:
        $r3 = staticinvoke <org.apache.poi.ss.usermodel.HorizontalAlignment: org.apache.poi.ss.usermodel.HorizontalAlignment[] values()>();

        $i0 = virtualinvoke r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r4 = $r3[$i1];

        return $r4;
    }

    public void setHorizontal(org.apache.poi.ss.usermodel.HorizontalAlignment)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum $r3;
        int $i0, $i1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r2;
        org.apache.poi.ss.usermodel.HorizontalAlignment r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        r1 := @parameter0: org.apache.poi.ss.usermodel.HorizontalAlignment;

        $r2 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.usermodel.HorizontalAlignment: int ordinal()>();

        $i1 = $i0 + 1;

        $r3 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum: org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum forInt(int)>($i1);

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setHorizontal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STHorizontalAlignment$Enum)>($r3);

        return;
    }

    public long getIndent()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        long $l0;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $l0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: long getIndent()>();

        return $l0;
    }

    public void setIndent(long)
    {
        long l0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setIndent(long)>(l0);

        return;
    }

    public long getTextRotation()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        long $l0;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $l0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: long getTextRotation()>();

        return $l0;
    }

    public void setTextRotation(long)
    {
        long l0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setTextRotation(long)>(l0);

        return;
    }

    public boolean getWrapText()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: boolean getWrapText()>();

        return $z0;
    }

    public void setWrapText(boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setWrapText(boolean)>(z0);

        return;
    }

    public boolean getShrinkToFit()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: boolean getShrinkToFit()>();

        return $z0;
    }

    public void setShrinkToFit(boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment: void setShrinkToFit(boolean)>(z0);

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment getCTCellAlignment()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment $r1;
        org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment r0;

        r0 := @this: org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.extensions.XSSFCellAlignment: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellAlignment cellAlignement>;

        return $r1;
    }
}
