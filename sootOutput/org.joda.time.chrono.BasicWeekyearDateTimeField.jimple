final class org.joda.time.chrono.BasicWeekyearDateTimeField extends org.joda.time.field.ImpreciseDateTimeField
{
    private static final long serialVersionUID;
    private static final long WEEK_53;
    private final org.joda.time.chrono.BasicChronology iChronology;

    void <init>(org.joda.time.chrono.BasicChronology)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        org.joda.time.chrono.BasicChronology r2;
        org.joda.time.DateTimeFieldType $r1;
        long $l0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        r2 := @parameter0: org.joda.time.chrono.BasicChronology;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $l0 = virtualinvoke r2.<org.joda.time.chrono.BasicChronology: long getAverageMillisPerYear()>();

        specialinvoke r0.<org.joda.time.field.ImpreciseDateTimeField: void <init>(org.joda.time.DateTimeFieldType,long)>($r1, $l0);

        r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology> = r2;

        return;
    }

    public boolean isLenient()
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        return 0;
    }

    public int get(long)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;
        long l0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeekyear(long)>(l0);

        return $i1;
    }

    public long add(long, int)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int i0, $i2, $i3;
        long l1, $l4;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l1 := @parameter0: long;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return l1;

     label1:
        $i2 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int get(long)>(l1);

        $i3 = $i2 + i0;

        $l4 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long set(long,int)>(l1, $i3);

        return $l4;
    }

    public long add(long, long)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i2;
        long l0, l1, $l3;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l1);

        $l3 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long add(long,int)>(l0, $i2);

        return $l3;
    }

    public long addWrapField(long, int)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int i1;
        long l0, $l2;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long add(long,int)>(l0, i1);

        return $l2;
    }

    public long getDifferenceAsLong(long, long)
    {
        long l0, l1, $l5, $l6, $l8, $l12, l13;
        byte $b2, $b7, $b16;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i3, $i4, $i9, $i10, $i11, $i14, i15, $i17, $i18, $i19, $i21;
        org.joda.time.chrono.BasicChronology $r1;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp l1;

        $i17 = (int) $b2;

        if $i17 >= 0 goto label1;

        $i10 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int getDifference(long,long)>(l1, l0);

        $i11 = neg $i10;

        $l12 = (long) $i11;

        return $l12;

     label1:
        $i3 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int get(long)>(l0);

        $i4 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int get(long)>(l1);

        $l5 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long remainder(long)>(l0);

        $l6 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long remainder(long)>(l1);

        l13 = $l6;

        $b7 = $l6 cmp 31449600000L;

        $i18 = (int) $b7;

        if $i18 < 0 goto label2;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i9 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i3);

        if $i9 > 52 goto label2;

        l13 = $l6 - 604800000L;

     label2:
        $i14 = $i3 - $i4;

        i15 = $i14;

        $b16 = $l5 cmp l13;

        $i19 = (int) $b16;

        if $i19 >= 0 goto label3;

        $i21 = (int) -1;

        i15 = $i14 + $i21;

     label3:
        $l8 = (long) i15;

        return $l8;
    }

    public long set(long, int)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        org.joda.time.DateTimeField $r10;
        org.joda.time.chrono.BasicChronology $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        long l4, $l10, l14, $l17, $l18, $l19, $l20;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, $i15, $i16;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l4 := @parameter0: long;

        i0 := @parameter1: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getMinYear()>();

        $r2 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i3 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getMaxYear()>();

        staticinvoke <org.joda.time.field.FieldUtils: void verifyValueBounds(org.joda.time.DateTimeField,int,int,int)>(r0, $i1, $i2, $i3);

        $i5 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int get(long)>(l4);

        if $i5 != i0 goto label1;

        return l4;

     label1:
        $r3 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i6 = virtualinvoke $r3.<org.joda.time.chrono.BasicChronology: int getDayOfWeek(long)>(l4);

        $r4 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i7 = virtualinvoke $r4.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i5);

        $r5 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i8 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>(i0);

        if $i8 >= $i7 goto label2;

        $i12 = $i8;

        goto label3;

     label2:
        $i12 = $i7;

     label3:
        $r6 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i9 = virtualinvoke $r6.<org.joda.time.chrono.BasicChronology: int getWeekOfWeekyear(long)>(l4);

        i13 = $i9;

        if $i9 <= $i12 goto label4;

        i13 = $i12;

     label4:
        $r7 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $l10 = virtualinvoke $r7.<org.joda.time.chrono.BasicChronology: long setYear(long,int)>(l4, i0);

        l14 = $l10;

        $i11 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: int get(long)>($l10);

        if $i11 >= i0 goto label5;

        l14 = $l10 + 604800000L;

        goto label6;

     label5:
        if $i11 <= i0 goto label6;

        l14 = $l10 - 604800000L;

     label6:
        $r8 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i15 = virtualinvoke $r8.<org.joda.time.chrono.BasicChronology: int getWeekOfWeekyear(long)>(l14);

        $i16 = i13 - $i15;

        $l17 = (long) $i16;

        $l18 = $l17 * 604800000L;

        $l19 = l14 + $l18;

        $r9 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r10 = virtualinvoke $r9.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField dayOfWeek()>();

        $l20 = virtualinvoke $r10.<org.joda.time.DateTimeField: long set(long,int)>($l19, $i6);

        return $l20;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        return null;
    }

    public boolean isLeap(long)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i1, $i2;
        org.joda.time.chrono.BasicChronology $r1, $r2;
        long l0;
        boolean $z0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        $r2 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeekyear(long)>(l0);

        $i2 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i1);

        if $i2 <= 52 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getLeapAmount(long)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i1, $i2, $i3;
        org.joda.time.chrono.BasicChronology $r1, $r2;
        long l0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        $r2 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getWeekyear(long)>(l0);

        $i2 = virtualinvoke $r2.<org.joda.time.chrono.BasicChronology: int getWeeksInYear(int)>($i1);

        $i3 = $i2 - 52;

        return $i3;
    }

    public org.joda.time.DurationField getLeapDurationField()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.DurationField $r2;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DurationField weeks()>();

        return $r2;
    }

    public int getMinimumValue()
    {
        int $i0;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getMinYear()>();

        return $i0;
    }

    public int getMaximumValue()
    {
        int $i0;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getMaxYear()>();

        return $i0;
    }

    public long roundFloor(long)
    {
        long $l0, $l3, $l4, l5, l6;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        int $i1, $i2;
        org.joda.time.chrono.BasicChronology $r1, $r3;
        org.joda.time.DateTimeField $r2;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l5 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField weekOfWeekyear()>();

        $l0 = virtualinvoke $r2.<org.joda.time.DateTimeField: long roundFloor(long)>(l5);

        l6 = $l0;

        $r3 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r3.<org.joda.time.chrono.BasicChronology: int getWeekOfWeekyear(long)>($l0);

        if $i1 <= 1 goto label1;

        $i2 = $i1 - 1;

        $l3 = (long) $i2;

        $l4 = 604800000L * $l3;

        l6 = $l0 - $l4;

     label1:
        return l6;
    }

    public long remainder(long)
    {
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;
        long l0, $l1, $l2;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: long roundFloor(long)>(l0);

        $l2 = l0 - $l1;

        return $l2;
    }

    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.DateTimeField $r2;
        org.joda.time.chrono.BasicWeekyearDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicWeekyearDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicWeekyearDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField weekyear()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.BasicWeekyearDateTimeField: long WEEK_53> = 31449600000L;

        <org.joda.time.chrono.BasicWeekyearDateTimeField: long serialVersionUID> = 6215066916806820644L;

        return;
    }
}
