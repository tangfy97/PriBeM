public class com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver extends com.hp.hpl.jena.sparql.sse.lang.ParseHandlerForm
{
    private static final java.lang.String prefixTag;
    private static final java.lang.String baseTag;
    private com.hp.hpl.jena.shared.PrefixMapping topMap;
    private java.lang.String topBase;
    private com.hp.hpl.jena.sparql.core.Prologue prologue;
    private com.hp.hpl.jena.sparql.sse.ItemList declList;
    private java.util.Deque state;

    public void <init>(com.hp.hpl.jena.sparql.core.Prologue)
    {
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.util.ArrayDeque $r1;
        com.hp.hpl.jena.sparql.core.Prologue r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Prologue;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerForm: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.shared.PrefixMapping topMap> = null;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String topBase> = null;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue> = null;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.sse.ItemList declList> = null;

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.util.Deque state> = $r1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue> = r2;

        return;
    }

    protected void declItem(com.hp.hpl.jena.sparql.sse.ItemList, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.core.Prologue $r12, $r13, $r18, $r19;
        com.hp.hpl.jena.graph.Node $r15, $r16;
        java.lang.String $r7, $r9, $r17, $r20;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.sparql.sse.ItemList r0, $r2;
        com.hp.hpl.jena.sparql.sse.Item $r3, $r4, r10;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r1;
        java.lang.StringBuilder $r5, $r6, $r8;
        com.hp.hpl.jena.shared.PrefixMapping $r11, $r14;

        r1 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r10 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        $r2 = r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.sse.ItemList declList>;

        if r0 == $r2 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z0 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>("base");

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $z1 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>("prefix");

        if $z0 == 0 goto label5;

        $z2 = virtualinvoke r10.<com.hp.hpl.jena.sparql.sse.Item: boolean isNode()>();

        if $z2 != 0 goto label2;

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,com.hp.hpl.jena.sparql.sse.ItemLocation)>("(base ...): not an RDF node for the base.", r10);

     label2:
        $r15 = virtualinvoke r10.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $z3 = virtualinvoke $r15.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z3 != 0 goto label3;

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,com.hp.hpl.jena.sparql.sse.ItemLocation)>("(base ...): not an IRI for the base.", r10);

     label3:
        $r16 = virtualinvoke r10.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.graph.Node getNode()>();

        $r17 = virtualinvoke $r16.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r18 = r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r19 = virtualinvoke $r18.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.sparql.core.Prologue sub(java.lang.String)>($r17);

        r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue> = $r19;

        $r20 = r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String topBase>;

        if $r20 != null goto label4;

        r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String topBase> = $r17;

     label4:
        return;

     label5:
        if $z1 == 0 goto label7;

        $r11 = staticinvoke <com.hp.hpl.jena.sparql.sse.builders.BuilderPrefixMapping: com.hp.hpl.jena.shared.PrefixMapping build(com.hp.hpl.jena.sparql.sse.Item)>(r10);

        $r12 = r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r13 = virtualinvoke $r12.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.sparql.core.Prologue sub(com.hp.hpl.jena.shared.PrefixMapping)>($r11);

        r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue> = $r13;

        $r14 = r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.shared.PrefixMapping topMap>;

        if $r14 != null goto label6;

        r1.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.shared.PrefixMapping topMap> = $r11;

     label6:
        return;

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inconsistent: ");

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemList: java.lang.String shortString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,com.hp.hpl.jena.sparql.sse.ItemLocation)>($r9, r0);

        return;
    }

    protected boolean endOfDecl(com.hp.hpl.jena.sparql.sse.ItemList, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r1, $r2;
        int $i0;
        com.hp.hpl.jena.sparql.sse.Item r3;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r3 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.sse.ItemList declList>;

        if $r2 != r1 goto label1;

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 != 2 goto label1;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.sse.ItemList declList> = null;

        return 1;

     label1:
        return 0;
    }

    protected boolean isForm(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r1;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>("base");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: boolean isSymbol(java.lang.String)>("prefix");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void startForm(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r1;
        com.hp.hpl.jena.sparql.core.Prologue $r2;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.util.Deque $r3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.sse.ItemList declList> = r1;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.util.Deque state>;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        interfaceinvoke $r3.<java.util.Deque: void push(java.lang.Object)>($r2);

        return;
    }

    private void dump()
    {
        java.io.PrintStream $r6;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.Prologue r4;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.util.Deque $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r8, $r10;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.util.Deque state>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.sparql.core.Prologue) $r3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Prologue: ");

        $r8 = virtualinvoke r4.<com.hp.hpl.jena.sparql.core.Prologue: java.lang.String getBaseURI()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label1;

     label2:
        return;
    }

    protected void finishForm(com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList r4;
        com.hp.hpl.jena.sparql.core.Prologue $r3;
        int $i0;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.Item $r5;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.util.Deque $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r4 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemList;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.util.Deque state>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pop()>();

        $r3 = (com.hp.hpl.jena.sparql.core.Prologue) $r2;

        r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue> = $r3;

        $i0 = virtualinvoke r4.<com.hp.hpl.jena.sparql.sse.ItemList: int size()>();

        if $i0 <= 2 goto label1;

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item getLast()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerForm: void setFormResult(com.hp.hpl.jena.sparql.sse.Item)>($r5);

     label1:
        return;
    }

    public void emitIRI(int, int, java.lang.String)
    {
        int i0, i1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.lang.String $r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String resolveIRI(java.lang.String,int,int)>(r2, i0, i1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerForm: void emitIRI(int,int,java.lang.String)>(i0, i1, $r1);

        return;
    }

    public void emitPName(int, int, java.lang.String)
    {
        int i0, i1;
        com.hp.hpl.jena.sparql.sse.Item $r3;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: boolean inFormDecl()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createSymbol(java.lang.String,int,int)>(r1, i0, i1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void listAdd(com.hp.hpl.jena.sparql.sse.Item)>($r3);

        return;

     label1:
        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String resolvePrefixedName(java.lang.String,int,int)>(r1, i0, i1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerForm: void emitIRI(int,int,java.lang.String)>(i0, i1, $r2);

        return;
    }

    protected java.lang.String resolvePrefixedName(java.lang.String, int, int)
    {
        com.hp.hpl.jena.sparql.core.Prologue $r1, $r4;
        int i0, i1;
        java.lang.String r3, $r6, $r10, $r14, $r18;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17;
        com.hp.hpl.jena.shared.PrefixMapping $r2, $r5;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        if $r2 != null goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No prefix mapping for prefixed name: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,int,int)>($r18, i0, i1);

     label1:
        $z0 = staticinvoke <org.apache.jena.atlas.lib.StrUtils: boolean contains(java.lang.String,java.lang.String)>(r3, ":");

        if $z0 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prefixed name does not have a \':\': ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,int,int)>($r14, i0, i1);

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.shared.PrefixMapping: java.lang.String expandPrefix(java.lang.String)>(r3);

        if $r6 == null goto label3;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t resolve prefixed name: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: void throwException(java.lang.String,int,int)>($r10, i0, i1);

     label4:
        return $r6;
    }

    private java.lang.String resolveIRI(java.lang.String, int, int)
    {
        com.hp.hpl.jena.sparql.core.Prologue $r1, $r4;
        com.hp.hpl.jena.n3.IRIResolver $r2, $r5;
        com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver r0;
        int i0, i1;
        java.lang.String r3, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.n3.IRIResolver getResolver()>();

        if $r2 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.core.Prologue: com.hp.hpl.jena.n3.IRIResolver getResolver()>();

        $r6 = virtualinvoke $r5.<com.hp.hpl.jena.n3.IRIResolver: java.lang.String resolve(java.lang.String)>(r3);

        return $r6;

     label1:
        return r3;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String baseTag> = "base";

        <com.hp.hpl.jena.sparql.sse.lang.ParseHandlerResolver: java.lang.String prefixTag> = "prefix";

        return;
    }
}
