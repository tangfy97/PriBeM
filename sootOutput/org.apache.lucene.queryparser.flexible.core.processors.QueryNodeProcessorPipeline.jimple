public class org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline extends java.lang.Object implements org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor, java.util.List
{
    private java.util.LinkedList processors;
    private org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig;

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors> = $r1;

        return;
    }

    public void <init>(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r2 := @parameter0: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors> = $r1;

        r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig> = r2;

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        return $r1;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.Iterator $r2;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r4;
        java.lang.Object $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r5;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r5 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r3;

        r5 = interfaceinvoke r4.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r5);

        goto label1;

     label2:
        return r5;
    }

    public void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)
    {
        java.util.Iterator $r3;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler r1, $r6;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r5;
        java.lang.Object $r4;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler;

        r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig> = r1;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r4;

        $r6 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r5.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r6);

        goto label1;

     label2:
        return;
    }

    public boolean add(org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r3;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r3);

     label1:
        return $z0;
    }

    public void add(int, org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r3;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r1;
        int i0;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        virtualinvoke $r2.<java.util.LinkedList: void add(int,java.lang.Object)>(i0, r1);

        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r3);

        return;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Iterator $r3;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r6;
        java.util.Collection r1;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r5;
        java.lang.Object $r4;
        java.util.LinkedList $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r1);

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r4;

        $r6 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r5.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r6);

        goto label1;

     label2:
        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Iterator $r3;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r6;
        java.util.Collection r1;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r5;
        int i0;
        java.lang.Object $r4;
        java.util.LinkedList $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean addAll(int,java.util.Collection)>(i0, r1);

        $r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r4;

        $r6 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r5.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r6);

        goto label1;

     label2:
        return $z0;
    }

    public void clear()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        virtualinvoke $r1.<java.util.LinkedList: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.lang.Object r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.Collection r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor get(int)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r3;
        int i0;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r2;

        return $r3;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        int $i0;
        java.lang.Object r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

        return $r2;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        int $i0;
        java.lang.Object r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;
        java.util.ListIterator $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r2;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.ListIterator $r2;
        int i0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.ListIterator listIterator(int)>(i0);

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.lang.Object r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor remove(int)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r3;
        int i0;
        java.lang.Object $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object remove(int)>(i0);

        $r3 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r2;

        return $r3;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.Collection r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean removeAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.Collection r1;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor set(int, org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r5;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r1, r4;
        int i0;
        java.lang.Object $r3;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        r4 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) $r3;

        if r4 == r1 goto label1;

        $r5 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler queryConfig>;

        interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r5);

     label1:
        return r4;
    }

    public int size()
    {
        int $i0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        return $i0;
    }

    public java.util.List subList(int, int)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.util.List $r2;
        int i0, i1;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.List subList(int,int)>(i0, i1);

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.lang.Object[] r1, $r3;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        java.lang.Object[] $r2;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: java.util.LinkedList processors>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object[] toArray()>();

        return $r2;
    }

    public volatile java.lang.Object remove(int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor remove(int)>(i0);

        return $r1;
    }

    public volatile void add(int, java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r2;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) r1;

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: void add(int,org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)>(i0, $r2);

        return;
    }

    public volatile java.lang.Object set(int, java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r2, $r3;
        int i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) r1;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor set(int,org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)>(i0, $r2);

        return $r3;
    }

    public volatile java.lang.Object get(int)
    {
        int i0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor get(int)>(i0);

        return $r1;
    }

    public volatile boolean add(java.lang.Object)
    {
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor) r1;

        $z0 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline: boolean add(org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)>($r2);

        return $z0;
    }
}
