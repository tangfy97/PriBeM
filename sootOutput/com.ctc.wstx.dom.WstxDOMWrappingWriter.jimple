public class com.ctc.wstx.dom.WstxDOMWrappingWriter extends org.codehaus.stax2.ri.dom.DOMWrappingWriter
{
    protected static final java.lang.String ERR_NSDECL_WRONG_STATE;
    protected final com.ctc.wstx.api.WriterConfig mConfig;
    protected com.ctc.wstx.dom.DOMOutputElement mCurrElem;
    protected com.ctc.wstx.dom.DOMOutputElement mOpenElement;
    protected int[] mAutoNsSeq;
    protected java.lang.String mSuggestedDefNs;
    protected java.lang.String mAutomaticNsPrefix;
    java.util.HashMap mSuggestedPrefixes;

    private void <init>(com.ctc.wstx.api.WriterConfig, org.w3c.dom.Node) throws javax.xml.stream.XMLStreamException
    {
        short $s0;
        com.ctc.wstx.dom.DOMOutputElement $r3, $r4, $r6;
        java.lang.StringBuffer $r9, $r11, $r15;
        org.w3c.dom.Node r1;
        javax.xml.stream.XMLStreamException $r16;
        int $i1;
        java.lang.String $r12, $r14;
        boolean $z0, $z1, $z2;
        org.w3c.dom.Element r5;
        com.ctc.wstx.api.WriterConfig r2, $r13;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.Class $r10;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r2 := @parameter0: com.ctc.wstx.api.WriterConfig;

        r1 := @parameter1: org.w3c.dom.Node;

        $z0 = virtualinvoke r2.<com.ctc.wstx.api.WriterConfig: boolean willSupportNamespaces()>();

        $z1 = virtualinvoke r2.<com.ctc.wstx.api.WriterConfig: boolean automaticNamespacesEnabled()>();

        specialinvoke r0.<org.codehaus.stax2.ri.dom.DOMWrappingWriter: void <init>(org.w3c.dom.Node,boolean,boolean)>(r1, $z0, $z1);

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mSuggestedDefNs> = null;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes> = null;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig> = r2;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq> = null;

        $z2 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsRepairing>;

        if $z2 == 0 goto label1;

        $r13 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $r14 = virtualinvoke $r13.<com.ctc.wstx.api.WriterConfig: java.lang.String getAutomaticNsPrefix()>();

        goto label2;

     label1:
        $r14 = null;

     label2:
        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mAutomaticNsPrefix> = $r14;

        $s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 1: goto label4;
            case 9: goto label3;
            case 11: goto label3;
            default: goto label5;
        };

     label3:
        $r3 = staticinvoke <com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createRoot(org.w3c.dom.Node)>(r1);

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem> = $r3;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = null;

        goto label6;

     label4:
        $r4 = staticinvoke <com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createRoot(org.w3c.dom.Node)>(r1);

        r5 = (org.w3c.dom.Element) r1;

        $r6 = virtualinvoke $r4.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createChild(org.w3c.dom.Element)>(r5);

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem> = $r6;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = $r6;

        goto label6;

     label5:
        $r16 = new javax.xml.stream.XMLStreamException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not create an XMLStreamWriter for a DOM node of type ");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r12);

        throw $r16;

     label6:
        return;
    }

    public static com.ctc.wstx.dom.WstxDOMWrappingWriter createFrom(com.ctc.wstx.api.WriterConfig, javax.xml.transform.dom.DOMResult) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.WriterConfig r3;
        org.w3c.dom.Node $r1;
        com.ctc.wstx.dom.WstxDOMWrappingWriter $r2;
        javax.xml.transform.dom.DOMResult r0;

        r3 := @parameter0: com.ctc.wstx.api.WriterConfig;

        r0 := @parameter1: javax.xml.transform.dom.DOMResult;

        $r1 = virtualinvoke r0.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        $r2 = new com.ctc.wstx.dom.WstxDOMWrappingWriter;

        specialinvoke $r2.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void <init>(com.ctc.wstx.api.WriterConfig,org.w3c.dom.Node)>(r3, $r1);

        return $r2;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        com.ctc.wstx.dom.DOMOutputElement $r1;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        org.codehaus.stax2.ri.EmptyNamespaceContext $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        $z0 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <org.codehaus.stax2.ri.EmptyNamespaceContext: org.codehaus.stax2.ri.EmptyNamespaceContext getInstance()>();

        return $r2;

     label1:
        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        return $r1;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        com.ctc.wstx.dom.DOMOutputElement $r3;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        javax.xml.namespace.NamespaceContext $r1, $r5;
        java.lang.String r2, $r4, $r6;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: javax.xml.namespace.NamespaceContext mNsContext>;

        if $r1 == null goto label2;

        $r5 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: javax.xml.namespace.NamespaceContext mNsContext>;

        $r6 = interfaceinvoke $r5.<javax.xml.namespace.NamespaceContext: java.lang.String getPrefix(java.lang.String)>(r2);

        if $r6 == null goto label2;

        return $r6;

     label2:
        $r3 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getPrefix(java.lang.String)>(r2);

        return $r4;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.api.WriterConfig $r2;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public void setDefaultNamespace(java.lang.String)
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        int $i0;
        java.lang.String r1, $r2;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = null;

        goto label3;

     label2:
        $r2 = r1;

     label3:
        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mSuggestedDefNs> = $r2;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r3, $r4, $r11;
        java.lang.NullPointerException $r9, $r10;
        int $i0;
        java.lang.String r0, r1, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r2;

        r2 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can not pass null \'prefix\' value");

        throw $r10;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        virtualinvoke r2.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void setDefaultNamespace(java.lang.String)>(r1);

        return;

     label2:
        if r1 != null goto label3;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can not pass null \'uri\' value");

        throw $r9;

     label3:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label4;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z5 != 0 goto label8;

        $r8 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_NS_REDECL_XML>;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String,java.lang.Object)>($r8, r1);

        goto label8;

     label4:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label6;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z4 != 0 goto label5;

        $r7 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_NS_REDECL_XMLNS>;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String,java.lang.Object)>($r7, r1);

     label5:
        return;

     label6:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z2 == 0 goto label7;

        $r6 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_NS_REDECL_XML_URI>;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String,java.lang.Object)>($r6, r0);

        goto label8;

     label7:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z3 == 0 goto label8;

        $r5 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_NS_REDECL_XMLNS_URI>;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String,java.lang.Object)>($r5, r0);

     label8:
        $r11 = r2.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r11 != null goto label9;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(16);

        r2.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes> = $r4;

     label9:
        $r3 = r2.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r0);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, r1, r2);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, r3);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void writeDefaultNamespace(java.lang.String)
    {
        java.lang.IllegalStateException $r4;
        com.ctc.wstx.dom.DOMOutputElement $r1, $r3;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No currently open START_ELEMENT, cannot write attribute");

        throw $r4;

     label1:
        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void setDefaultNamespace(java.lang.String)>(r2);

        $r3 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        virtualinvoke $r3.<com.ctc.wstx.dom.DOMOutputElement: void addAttribute(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns", r2);

        return;
    }

    public void writeEmptyElement(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeEmptyElement(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, null, r2, 1);

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if r3 != null goto label1;

        r3 = "";

     label1:
        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r3, r2, 1);

        return;
    }

    public void writeEndDocument()
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = null;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem> = null;

        return;
    }

    public void writeEndElement()
    {
        java.lang.IllegalStateException $r2;
        com.ctc.wstx.dom.DOMOutputElement $r1, $r3, $r4, $r5;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.dom.DOMOutputElement: boolean isRoot()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No open start element to close");

        throw $r2;

     label2:
        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = null;

        $r4 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r5 = virtualinvoke $r4.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement getParent()>();

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem> = $r5;

        return;
    }

    public void writeNamespace(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMOutputElement $r3;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r1;
        int $i0;
        java.lang.String r0, r2;
        boolean $z0;

        r1 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeDefaultNamespace(java.lang.String)>(r2);

        return;

     label2:
        $z0 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label3;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String)>("Can not write namespaces with non-namespace writer.");

     label3:
        virtualinvoke r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void outputAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns", r0, r2);

        $r3 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        virtualinvoke $r3.<com.ctc.wstx.dom.DOMOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r0, r2);

        return;
    }

    public void writeStartElement(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeStartElement(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void writeStartElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, null, r2, 0);

        return;
    }

    public void writeStartElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void createStartElem(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.api.WriterConfig $r2;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.WriterConfig: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public boolean setProperty(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.api.WriterConfig $r3;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.Object r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.api.WriterConfig mConfig>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.api.WriterConfig: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public void writeDTD(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r2;
        com.ctc.wstx.dom.DOMOutputElement $r1;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.String r3, r4, r5, r6;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Operation only allowed to the document before adding root element");

        throw $r2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void reportUnsupported(java.lang.String)>("writeDTD()");

        return;
    }

    protected void appendLeaf(org.w3c.dom.Node) throws java.lang.IllegalStateException
    {
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        com.ctc.wstx.dom.DOMOutputElement $r2;
        org.w3c.dom.Node r1;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        virtualinvoke $r2.<com.ctc.wstx.dom.DOMOutputElement: void appendNode(org.w3c.dom.Node)>(r1);

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = null;

        return;
    }

    protected void createStartElem(java.lang.String, java.lang.String, java.lang.String, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.Document $r17, $r25, $r30, $r40, $r45;
        boolean $z0, $z1, z2, z3, $z5, $z6;
        java.util.HashMap $r5, $r6;
        com.ctc.wstx.dom.DOMOutputElement $r13, $r15, $r18, $r20, $r26, $r29, $r39, r42, $r44;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r21, $r22, $r23, $r24, $r28, $r31, $r32, $r33;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12, $r14, $r16, $r34, r36, r37, r38, $r43;
        org.w3c.dom.Element $r19, $r27, $r35, $r41, $r46;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;
        java.lang.Object $r7;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r36 := @parameter0: java.lang.String;

        r37 := @parameter1: java.lang.String;

        r38 := @parameter2: java.lang.String;

        z2 := @parameter3: boolean;

        $z0 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsAware>;

        if $z0 != 0 goto label02;

        if r36 == null goto label01;

        $i4 = virtualinvoke r36.<java.lang.String: int length()>();

        if $i4 <= 0 goto label01;

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String)>("Can not specify non-empty uri/prefix in non-namespace mode");

     label01:
        $r39 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r40 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r41 = interfaceinvoke $r40.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r38);

        r42 = virtualinvoke $r39.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createAndAttachChild(org.w3c.dom.Element)>($r41);

        goto label17;

     label02:
        $z1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsRepairing>;

        if $z1 == 0 goto label11;

        $r13 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r14 = specialinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String validateElemPrefix(java.lang.String,java.lang.String,com.ctc.wstx.dom.DOMOutputElement)>(r37, r36, $r13);

        if $r14 == null goto label04;

        $i3 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i3 == 0 goto label03;

        $r29 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r30 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = interfaceinvoke $r30.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r36, $r34);

        r42 = virtualinvoke $r29.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createAndAttachChild(org.w3c.dom.Element)>($r35);

        goto label10;

     label03:
        $r26 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r25 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r27 = interfaceinvoke $r25.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r36, r38);

        r42 = virtualinvoke $r26.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createAndAttachChild(org.w3c.dom.Element)>($r27);

        goto label10;

     label04:
        if r37 != null goto label05;

        r37 = "";

     label05:
        $r15 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r16 = virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String generateElemPrefix(java.lang.String,java.lang.String,com.ctc.wstx.dom.DOMOutputElement)>(r37, r36, $r15);

        $i2 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i2 == 0 goto label06;

        $z6 = 1;

        $z5 = 1;

        goto label07;

     label06:
        $z6 = 0;

        $z5 = 0;

     label07:
        z3 = $z5;

        if $z6 == 0 goto label08;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        r38 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        $r18 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r17 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r19 = interfaceinvoke $r17.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r36, r38);

        $r20 = virtualinvoke $r18.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createAndAttachChild(org.w3c.dom.Element)>($r19);

        r42 = $r20;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = $r20;

        if z3 == 0 goto label09;

        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeNamespace(java.lang.String,java.lang.String)>($r16, r36);

        virtualinvoke $r20.<com.ctc.wstx.dom.DOMOutputElement: void addPrefix(java.lang.String,java.lang.String)>($r16, r36);

        goto label10;

     label09:
        virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeDefaultNamespace(java.lang.String)>(r36);

        virtualinvoke $r20.<com.ctc.wstx.dom.DOMOutputElement: void setDefaultNsUri(java.lang.String)>(r36);

     label10:
        goto label17;

     label11:
        if r37 != null goto label15;

        if r36 == null goto label15;

        $i1 = virtualinvoke r36.<java.lang.String: int length()>();

        if $i1 <= 0 goto label15;

        if r36 != null goto label12;

        r36 = "";

     label12:
        $r5 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r5 != null goto label13;

        $r43 = null;

        goto label14;

     label13:
        $r6 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r36);

        $r43 = (java.lang.String) $r7;

     label14:
        r37 = $r43;

        if $r43 != null goto label15;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not find prefix for namespace \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r36);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <com.ctc.wstx.dom.WstxDOMWrappingWriter: void throwOutputError(java.lang.String)>($r12);

     label15:
        if r37 == null goto label16;

        $i0 = virtualinvoke r37.<java.lang.String: int length()>();

        if $i0 == 0 goto label16;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r37);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r38);

        r38 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label16:
        $r44 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r45 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: org.w3c.dom.Document mDocument>;

        $r46 = interfaceinvoke $r45.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r36, r38);

        r42 = virtualinvoke $r44.<com.ctc.wstx.dom.DOMOutputElement: com.ctc.wstx.dom.DOMOutputElement createAndAttachChild(org.w3c.dom.Element)>($r46);

     label17:
        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement> = r42;

        if z2 != 0 goto label18;

        r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem> = r42;

     label18:
        return;
    }

    protected void outputAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.IllegalStateException $r13;
        com.ctc.wstx.dom.DOMOutputElement $r1, $r12, $r16, $r17;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i0, $i1;
        java.lang.String r2, r7, r14, r15;
        boolean $z0, $z1;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r0;

        r0 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r7 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        if $r1 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No currently open START_ELEMENT, cannot write attribute");

        throw $r13;

     label1:
        $z0 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsAware>;

        if $z0 == 0 goto label4;

        $z1 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: boolean mNsRepairing>;

        if $z1 == 0 goto label2;

        $r12 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        r14 = virtualinvoke r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String findOrCreateAttrPrefix(java.lang.String,java.lang.String,com.ctc.wstx.dom.DOMOutputElement)>(r14, r7, $r12);

     label2:
        if r14 == null goto label3;

        $i1 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        r15 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r16 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        virtualinvoke $r16.<com.ctc.wstx.dom.DOMOutputElement: void addAttribute(java.lang.String,java.lang.String,java.lang.String)>(r7, r15, r2);

        goto label6;

     label4:
        if r14 == null goto label5;

        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        r15 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $r17 = r0.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mOpenElement>;

        virtualinvoke $r17.<com.ctc.wstx.dom.DOMOutputElement: void addAttribute(java.lang.String,java.lang.String)>(r15, r2);

     label6:
        return;
    }

    private final java.lang.String validateElemPrefix(java.lang.String, java.lang.String, com.ctc.wstx.dom.DOMOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMOutputElement r1;
        int $i0, $i1, $i2;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r4;
        java.lang.String r0, $r2, r3;

        r4 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: com.ctc.wstx.dom.DOMOutputElement;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label1:
        $r2 = virtualinvoke r1.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getDefaultNsUri()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        return "";

     label3:
        return null;

     label4:
        $i2 = virtualinvoke r1.<com.ctc.wstx.dom.DOMOutputElement: int isPrefixValid(java.lang.String,java.lang.String,boolean)>(r3, r0, 1);

        if $i2 != 1 goto label5;

        return r3;

     label5:
        return null;
    }

    protected final java.lang.String findElemPrefix(java.lang.String, com.ctc.wstx.dom.DOMOutputElement) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dom.DOMOutputElement r1, $r4;
        int $i0, $i1;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r3;
        java.lang.String r0, $r2, $r5;

        r3 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.ctc.wstx.dom.DOMOutputElement;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label1:
        $r2 = virtualinvoke r1.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getDefaultNsUri()>();

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        return null;

     label2:
        return "";

     label3:
        $r4 = r3.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r5 = virtualinvoke $r4.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getPrefix(java.lang.String)>(r0);

        return $r5;
    }

    protected final java.lang.String generateElemPrefix(java.lang.String, java.lang.String, com.ctc.wstx.dom.DOMOutputElement) throws javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r3, $r4;
        int[] $r6, $r8, $r10, $r11;
        com.ctc.wstx.dom.DOMOutputElement r7;
        int $i0;
        java.lang.String r0, $r2, $r9, $r12, r13, $r14;
        boolean $z0;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r1;
        java.lang.Object $r5;

        r1 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r13 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: com.ctc.wstx.dom.DOMOutputElement;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        if r13 != null goto label7;

        $r2 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mSuggestedDefNs>;

        if $r2 == null goto label3;

        $r12 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mSuggestedDefNs>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        r13 = "";

        goto label7;

     label3:
        $r3 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r3 != null goto label4;

        $r14 = null;

        goto label5;

     label4:
        $r4 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r14 = (java.lang.String) $r5;

     label5:
        r13 = $r14;

        if $r14 != null goto label7;

        $r6 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        if $r6 != null goto label6;

        $r10 = newarray (int)[1];

        r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq> = $r10;

        $r11 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        $r11[0] = 1;

     label6:
        $r9 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mAutomaticNsPrefix>;

        $r8 = r1.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        r13 = virtualinvoke r7.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String generateMapping(java.lang.String,java.lang.String,int[])>($r9, r0, $r8);

     label7:
        return r13;
    }

    protected final java.lang.String findOrCreateAttrPrefix(java.lang.String, java.lang.String, com.ctc.wstx.dom.DOMOutputElement) throws javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r5, $r13;
        com.ctc.wstx.dom.DOMOutputElement r2, $r9;
        int[] $r6, $r7, $r10, $r11;
        int $i0, $i1, $i2;
        java.lang.String r0, r1, $r3, $r8, $r12, r15;
        com.ctc.wstx.dom.WstxDOMWrappingWriter r4;
        java.lang.Object $r14;

        r4 := @this: com.ctc.wstx.dom.WstxDOMWrappingWriter;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: com.ctc.wstx.dom.DOMOutputElement;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        if r1 == null goto label04;

        $i2 = virtualinvoke r2.<com.ctc.wstx.dom.DOMOutputElement: int isPrefixValid(java.lang.String,java.lang.String,boolean)>(r1, r0, 0);

        if $i2 != 1 goto label03;

        return r1;

     label03:
        if $i2 != 0 goto label04;

        virtualinvoke r2.<com.ctc.wstx.dom.DOMOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r1, r0);

        virtualinvoke r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeNamespace(java.lang.String,java.lang.String)>(r1, r0);

        return r1;

     label04:
        $r3 = virtualinvoke r2.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getExplicitPrefix(java.lang.String)>(r0);

        r15 = $r3;

        if $r3 == null goto label05;

        return $r3;

     label05:
        if r1 == null goto label06;

        r15 = r1;

        goto label07;

     label06:
        $r5 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        if $r5 == null goto label07;

        $r13 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.util.HashMap mSuggestedPrefixes>;

        $r14 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r14;

     label07:
        if r15 == null goto label09;

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i1 == 0 goto label08;

        $r12 = virtualinvoke r2.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String getNamespaceURI(java.lang.String)>(r15);

        if $r12 == null goto label09;

     label08:
        r15 = null;

     label09:
        if r15 != null goto label11;

        $r6 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        if $r6 != null goto label10;

        $r10 = newarray (int)[1];

        r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq> = $r10;

        $r11 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        $r11[0] = 1;

     label10:
        $r9 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: com.ctc.wstx.dom.DOMOutputElement mCurrElem>;

        $r8 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String mAutomaticNsPrefix>;

        $r7 = r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: int[] mAutoNsSeq>;

        r15 = virtualinvoke $r9.<com.ctc.wstx.dom.DOMOutputElement: java.lang.String generateMapping(java.lang.String,java.lang.String,int[])>($r8, r0, $r7);

     label11:
        virtualinvoke r2.<com.ctc.wstx.dom.DOMOutputElement: void addPrefix(java.lang.String,java.lang.String)>(r15, r0);

        virtualinvoke r4.<com.ctc.wstx.dom.WstxDOMWrappingWriter: void writeNamespace(java.lang.String,java.lang.String)>(r15, r0);

        return r15;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.dom.WstxDOMWrappingWriter: java.lang.String ERR_NSDECL_WRONG_STATE> = "Trying to write a namespace declaration when there is no open start element.";

        return;
    }
}
