public class org.springframework.expression.spel.support.StandardTypeComparator extends java.lang.Object implements org.springframework.expression.TypeComparator
{

    public void <init>()
    {
        org.springframework.expression.spel.support.StandardTypeComparator r0;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object) throws org.springframework.expression.spel.SpelEvaluationException
    {
        java.lang.Integer $r11, $r12;
        byte $b9;
        java.lang.Long $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        float $f0, $f1;
        org.springframework.expression.spel.support.StandardTypeComparator r19;
        org.springframework.expression.spel.SpelEvaluationException $r21, $r22;
        java.lang.Object[] $r3, $r15;
        long $l3, $l4;
        java.lang.ClassCastException $r13;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i11;
        java.lang.Number r8, r20;
        double $d0, $d1;
        org.springframework.expression.spel.SpelMessage $r4, $r16;
        java.lang.Object r0, r1;
        java.lang.Class $r5, $r6, $r17, $r18;
        java.lang.Comparable $r7;

        r19 := @this: org.springframework.expression.spel.support.StandardTypeComparator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label03;

        if r1 != null goto label01;

        $b9 = 0;

        goto label02;

     label01:
        $b9 = 1;

     label02:
        return $b9;

     label03:
        if r1 != null goto label04;

        $i11 = (int) -1;

        return $i11;

     label04:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label11;

        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label11;

        r20 = (java.lang.Number) r0;

        r8 = (java.lang.Number) r1;

        $z3 = r20 instanceof java.lang.Double;

        if $z3 != 0 goto label05;

        $z4 = r8 instanceof java.lang.Double;

        if $z4 == 0 goto label06;

     label05:
        $d0 = virtualinvoke r20.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r8.<java.lang.Number: double doubleValue()>();

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        return $i1;

     label06:
        $z5 = r20 instanceof java.lang.Float;

        if $z5 != 0 goto label07;

        $z6 = r8 instanceof java.lang.Float;

        if $z6 == 0 goto label08;

     label07:
        $f0 = virtualinvoke r20.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r8.<java.lang.Number: float floatValue()>();

        $i2 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, $f1);

        return $i2;

     label08:
        $z7 = r20 instanceof java.lang.Long;

        if $z7 != 0 goto label09;

        $z8 = r8 instanceof java.lang.Long;

        if $z8 == 0 goto label10;

     label09:
        $l3 = virtualinvoke r20.<java.lang.Number: long longValue()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $l4 = virtualinvoke r8.<java.lang.Number: long longValue()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $i5 = virtualinvoke $r9.<java.lang.Long: int compareTo(java.lang.Long)>($r10);

        return $i5;

     label10:
        $i6 = virtualinvoke r20.<java.lang.Number: int intValue()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $i7 = virtualinvoke r8.<java.lang.Number: int intValue()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $i8 = virtualinvoke $r11.<java.lang.Integer: int compareTo(java.lang.Integer)>($r12);

        return $i8;

     label11:
        $z1 = r0 instanceof java.lang.Comparable;

        if $z1 == 0 goto label14;

        $r7 = (java.lang.Comparable) r0;

        $i0 = interfaceinvoke $r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

     label12:
        return $i0;

     label13:
        $r13 := @caughtexception;

        $r21 = new org.springframework.expression.spel.SpelEvaluationException;

        $r16 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage NOT_COMPARABLE>;

        $r15 = newarray (java.lang.Object)[2];

        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15[0] = $r17;

        $r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r15[1] = $r18;

        specialinvoke $r21.<org.springframework.expression.spel.SpelEvaluationException: void <init>(java.lang.Throwable,org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r13, $r16, $r15);

        throw $r21;

     label14:
        $r22 = new org.springframework.expression.spel.SpelEvaluationException;

        $r4 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage NOT_COMPARABLE>;

        $r3 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3[1] = $r6;

        specialinvoke $r22.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r4, $r3);

        throw $r22;

        catch java.lang.ClassCastException from label11 to label12 with label13;
    }

    public boolean canCompare(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1, $z2;
        org.springframework.expression.spel.support.StandardTypeComparator r2;

        r2 := @this: org.springframework.expression.spel.support.StandardTypeComparator;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 1;

     label2:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label3;

        $z2 = r1 instanceof java.lang.Number;

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z1 = r0 instanceof java.lang.Comparable;

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }
}
