class org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final org.waveprotocol.wave.model.util.StringSet val$interested;
    final org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic, org.waveprotocol.wave.model.util.StringSet)
    {
        org.waveprotocol.wave.model.util.StringSet r2;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4 r0;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic;

        r2 := @parameter1: org.waveprotocol.wave.model.util.StringSet;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4: org.waveprotocol.wave.model.util.StringSet val$interested> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.model.util.StringSet $r7;
        org.waveprotocol.wave.model.document.util.AnnotationRegistry $r2;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic $r1;
        org.waveprotocol.wave.model.document.AnnotationBehaviour$AnnotationFamily $r5, $r6;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.AnnotationBehaviour $r4;
        org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4: org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic: org.waveprotocol.wave.model.document.util.AnnotationRegistry access$100(org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic)>($r1);

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.util.AnnotationRegistry: org.waveprotocol.wave.model.document.AnnotationBehaviour getClosestBehaviour(java.lang.String)>(r3);

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.document.AnnotationBehaviour: org.waveprotocol.wave.model.document.AnnotationBehaviour$AnnotationFamily getAnnotationFamily()>();

        $r6 = <org.waveprotocol.wave.model.document.AnnotationBehaviour$AnnotationFamily: org.waveprotocol.wave.model.document.AnnotationBehaviour$AnnotationFamily CONTENT>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<org.waveprotocol.wave.client.editor.extract.PasteAnnotationLogic$4: org.waveprotocol.wave.model.util.StringSet val$interested>;

        interfaceinvoke $r7.<org.waveprotocol.wave.model.util.StringSet: void add(java.lang.String)>(r3);

     label1:
        return;
    }
}
