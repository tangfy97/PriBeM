public class org.codehaus.jackson.map.type.CollectionLikeType extends org.codehaus.jackson.map.type.TypeBase
{
    protected final org.codehaus.jackson.type.JavaType _elementType;

    protected void <init>(java.lang.Class, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        int $i0;
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $i0 = virtualinvoke r2.<org.codehaus.jackson.type.JavaType: int hashCode()>();

        specialinvoke r0.<org.codehaus.jackson.map.type.TypeBase: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object)>(r1, $i0, null, null);

        r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType> = r2;

        return;
    }

    protected void <init>(java.lang.Class, org.codehaus.jackson.type.JavaType, java.lang.Object, java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        int $i0;
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Class r1;
        java.lang.Object r3, r4;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $i0 = virtualinvoke r2.<org.codehaus.jackson.type.JavaType: int hashCode()>();

        specialinvoke r0.<org.codehaus.jackson.map.type.TypeBase: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object)>(r1, $i0, r3, r4);

        r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType> = r2;

        return;
    }

    protected org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0, r2;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class r1;
        java.lang.Object $r3, $r4;

        r2 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r5 = r2.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r4 = r2.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        $r3 = r2.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>(r1, $r5, $r4, $r3);

        return $r0;
    }

    public org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r1, $r4;
        org.codehaus.jackson.type.JavaType $r2, $r5, $r7;
        java.lang.Class r0, $r3, $r6;
        java.lang.Object $r8, $r9;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r0 := @parameter0: java.lang.Class;

        $r2 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if r0 != $r3 goto label1;

        return r1;

     label1:
        $r4 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class)>(r0);

        $r9 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        $r8 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r4.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r6, $r7, $r9, $r8);

        return $r4;
    }

    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r1, $r4;
        org.codehaus.jackson.type.JavaType $r2, $r5, $r7;
        java.lang.Class r0, $r3, $r6;
        java.lang.Object $r8, $r9;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r0 := @parameter0: java.lang.Class;

        $r2 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if r0 != $r3 goto label1;

        return r1;

     label1:
        $r4 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType widenBy(java.lang.Class)>(r0);

        $r9 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        $r8 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r4.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r6, $r7, $r9, $r8);

        return $r4;
    }

    public static org.codehaus.jackson.map.type.CollectionLikeType construct(java.lang.Class, org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0;
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>(r1, r2, null, null);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0, r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r2, $r3;
        java.lang.Class $r5;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r5, $r4, $r3, r2);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0, r1;
        org.codehaus.jackson.type.JavaType $r3, $r5;
        java.lang.Object r2, $r6, $r7;
        java.lang.Class $r4;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>(r2);

        $r7 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r6);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0, r1;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r2, $r3;
        java.lang.Class $r5;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r5 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r5, $r4, r2, $r3);

        return $r0;
    }

    public org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType $r0, r1;
        org.codehaus.jackson.type.JavaType $r3, $r5;
        java.lang.Object r2, $r6, $r7;
        java.lang.Class $r4;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.map.type.CollectionLikeType;

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r3 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object)>(r2);

        $r7 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _valueHandler>;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Object _typeHandler>;

        specialinvoke $r0.<org.codehaus.jackson.map.type.CollectionLikeType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,java.lang.Object,java.lang.Object)>($r4, $r5, $r7, $r6);

        return $r0;
    }

    public boolean isContainerType()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        return 1;
    }

    public boolean isCollectionLikeType()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        return 1;
    }

    public org.codehaus.jackson.type.JavaType getContentType()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        $r1 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        return $r1;
    }

    public int containedTypeCount()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        return 1;
    }

    public org.codehaus.jackson.type.JavaType containedType(int)
    {
        int i0;
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r1 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public java.lang.String containedTypeName(int)
    {
        int i0;
        org.codehaus.jackson.map.type.CollectionLikeType r0;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "E";

     label1:
        return null;
    }

    public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r3 = staticinvoke <org.codehaus.jackson.map.type.CollectionLikeType: java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)>($r2, r1, 1);

        return $r3;
    }

    public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.StringBuilder r1;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        staticinvoke <org.codehaus.jackson.map.type.CollectionLikeType: java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)>($r2, r1, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $r3 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>(r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">;");

        return r1;
    }

    protected java.lang.String buildCanonicalName()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r1;
        org.codehaus.jackson.type.JavaType $r4, $r6;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r7;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        if $r4 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.type.JavaType: java.lang.String toCanonical()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

     label1:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public boolean isTrueCollectionType()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        $r2 = class "Ljava/util/Collection;";

        $r1 = r0.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r1, r4;
        org.codehaus.jackson.type.JavaType $r7, $r8;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, $r5, $r6;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.codehaus.jackson.map.type.CollectionLikeType) r0;

        $r6 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r5 = r4.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        if $r6 != $r5 goto label4;

        $r8 = r1.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r7 = r4.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $z0 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.type.CollectionLikeType r2;
        org.codehaus.jackson.type.JavaType $r7;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9;
        java.lang.Class $r3;
        java.lang.String $r4, $r10;

        r2 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[collection-like type; class ");

        $r3 = r2.<org.codehaus.jackson.map.type.CollectionLikeType: java.lang.Class _class>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contains ");

        $r7 = r2.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.type.JavaType _elementType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public volatile org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withValueHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.map.type.CollectionLikeType withValueHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.map.type.CollectionLikeType withContentTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)
    {
        org.codehaus.jackson.map.type.CollectionLikeType r0, $r2;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.type.CollectionLikeType;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.type.CollectionLikeType: org.codehaus.jackson.map.type.CollectionLikeType withTypeHandler(java.lang.Object)>(r1);

        return $r2;
    }
}
