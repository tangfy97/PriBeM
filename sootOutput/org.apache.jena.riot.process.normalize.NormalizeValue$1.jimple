final class org.apache.jena.riot.process.normalize.NormalizeValue$1 extends java.lang.Object implements org.apache.jena.riot.process.normalize.DatatypeHandler
{

    void <init>()
    {
        org.apache.jena.riot.process.normalize.NormalizeValue$1 r0;

        r0 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.graph.Node handle(com.hp.hpl.jena.graph.Node, java.lang.String, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.graph.Node r1, $r2, $r3;
        org.apache.jena.riot.process.normalize.NormalizeValue$1 r4;
        com.hp.hpl.jena.datatypes.RDFDatatype r5;
        java.lang.String r0;
        boolean $z0, $z1;

        r4 := @this: org.apache.jena.riot.process.normalize.NormalizeValue$1;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: java.lang.String;

        r5 := @parameter2: com.hp.hpl.jena.datatypes.RDFDatatype;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label1;

        $r3 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeTrue>;

        return $r3;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z1 == 0 goto label2;

        $r2 = <com.hp.hpl.jena.sparql.graph.NodeConst: com.hp.hpl.jena.graph.Node nodeFalse>;

        return $r2;

     label2:
        return r1;
    }
}
