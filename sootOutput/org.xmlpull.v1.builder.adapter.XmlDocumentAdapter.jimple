public class org.xmlpull.v1.builder.adapter.XmlDocumentAdapter extends java.lang.Object implements org.xmlpull.v1.builder.XmlDocument
{
    private org.xmlpull.v1.builder.XmlDocument target;

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1, $r4;
        org.xmlpull.v1.builder.XmlDocument $r3, $r5;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0, r2;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.xmlpull.v1.builder.adapter.XmlDocumentAdapter) $r1;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: java.lang.Object clone()>();

        $r5 = (org.xmlpull.v1.builder.XmlDocument) $r4;

        r2.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target> = $r5;

        return r2;
    }

    public void <init>(org.xmlpull.v1.builder.XmlDocument)
    {
        org.xmlpull.v1.builder.XmlElement $r2;
        org.xmlpull.v1.builder.XmlDocument r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target> = r1;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement getDocumentElement()>();

        specialinvoke r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: void fixImportedChildParent(java.lang.Object)>($r2);

        return;
    }

    private void fixImportedChildParent(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.XmlContainer $r2;
        java.lang.Object r0;
        org.xmlpull.v1.builder.XmlDocument $r4;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r3;
        boolean $z0;

        r3 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 == 0 goto label1;

        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $r4 = r3.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        if $r2 != $r4 goto label1;

        interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: void setParent(org.xmlpull.v1.builder.XmlContainer)>(r3);

     label1:
        return;
    }

    public org.xmlpull.v1.builder.Iterable children()
    {
        org.xmlpull.v1.builder.Iterable $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.Iterable children()>();

        return $r2;
    }

    public org.xmlpull.v1.builder.XmlElement getDocumentElement()
    {
        org.xmlpull.v1.builder.XmlElement $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement getDocumentElement()>();

        return $r2;
    }

    public org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlElement $r4;
        org.xmlpull.v1.builder.XmlNamespace r1;
        java.lang.String r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlElement $r4;
        org.xmlpull.v1.builder.XmlNamespace r1;
        java.lang.String r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace, java.lang.String, boolean)
    {
        org.xmlpull.v1.builder.XmlElement $r4;
        org.xmlpull.v1.builder.XmlNamespace r1;
        java.lang.String r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;
        boolean z0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean)>(r1, r2, z0);

        return $r4;
    }

    public org.xmlpull.v1.builder.Iterable notations()
    {
        org.xmlpull.v1.builder.Iterable $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.Iterable notations()>();

        return $r2;
    }

    public org.xmlpull.v1.builder.Iterable unparsedEntities()
    {
        org.xmlpull.v1.builder.Iterable $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.Iterable unparsedEntities()>();

        return $r2;
    }

    public java.lang.String getBaseUri()
    {
        java.lang.String $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.String getBaseUri()>();

        return $r2;
    }

    public java.lang.String getCharacterEncodingScheme()
    {
        java.lang.String $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.String getCharacterEncodingScheme()>();

        return $r2;
    }

    public void setCharacterEncodingScheme(java.lang.String)
    {
        java.lang.String r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: void setCharacterEncodingScheme(java.lang.String)>(r1);

        return;
    }

    public java.lang.Boolean isStandalone()
    {
        java.lang.Boolean $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.Boolean isStandalone()>();

        return $r2;
    }

    public java.lang.String getVersion()
    {
        java.lang.String $r2;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: java.lang.String getVersion()>();

        return $r2;
    }

    public boolean isAllDeclarationsProcessed()
    {
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: boolean isAllDeclarationsProcessed()>();

        return $z0;
    }

    public void setDocumentElement(org.xmlpull.v1.builder.XmlElement)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: void setDocumentElement(org.xmlpull.v1.builder.XmlElement)>(r1);

        return;
    }

    public void addChild(java.lang.Object)
    {
        java.lang.Object r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: void addChild(java.lang.Object)>(r1);

        return;
    }

    public void insertChild(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: void insertChild(int,java.lang.Object)>(i0, r1);

        return;
    }

    public void removeAllChildren()
    {
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: void removeAllChildren()>();

        return;
    }

    public org.xmlpull.v1.builder.XmlComment newComment(java.lang.String)
    {
        org.xmlpull.v1.builder.XmlComment $r3;
        java.lang.String r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlComment newComment(java.lang.String)>(r1);

        return $r3;
    }

    public org.xmlpull.v1.builder.XmlComment addComment(java.lang.String)
    {
        org.xmlpull.v1.builder.XmlComment $r3;
        java.lang.String r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlComment addComment(java.lang.String)>(r1);

        return $r3;
    }

    public org.xmlpull.v1.builder.XmlDoctype newDoctype(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlDoctype $r4;
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlDoctype newDoctype(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlDoctype addDoctype(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlDoctype $r4;
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlDoctype addDoctype(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlElement addDocumentElement(java.lang.String)
    {
        org.xmlpull.v1.builder.XmlElement $r3;
        java.lang.String r1;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement addDocumentElement(java.lang.String)>(r1);

        return $r3;
    }

    public org.xmlpull.v1.builder.XmlElement addDocumentElement(org.xmlpull.v1.builder.XmlNamespace, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlElement $r4;
        org.xmlpull.v1.builder.XmlNamespace r1;
        java.lang.String r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: org.xmlpull.v1.builder.XmlNamespace;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlElement addDocumentElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlProcessingInstruction newProcessingInstruction(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.XmlProcessingInstruction $r4;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlProcessingInstruction newProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.xmlpull.v1.builder.XmlDocument $r3;
        org.xmlpull.v1.builder.XmlProcessingInstruction $r4;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void removeAllUnparsedEntities()
    {
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: void removeAllUnparsedEntities()>();

        return;
    }

    public org.xmlpull.v1.builder.XmlNotation addNotation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.builder.XmlNotation $r6;
        java.lang.String r1, r2, r3, r4;
        org.xmlpull.v1.builder.XmlDocument $r5;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.XmlNotation addNotation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $r6;
    }

    public void removeAllNotations()
    {
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.adapter.XmlDocumentAdapter r0;

        r0 := @this: org.xmlpull.v1.builder.adapter.XmlDocumentAdapter;

        $r1 = r0.<org.xmlpull.v1.builder.adapter.XmlDocumentAdapter: org.xmlpull.v1.builder.XmlDocument target>;

        interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: void removeAllNotations()>();

        return;
    }
}
