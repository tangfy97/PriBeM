public class org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter extends org.eclipse.jdt.internal.compiler.parser.TypeConverter
{
    public static final int FIELD;
    public static final int CONSTRUCTOR;
    public static final int METHOD;
    public static final int MEMBER_TYPE;
    public static final int FIELD_INITIALIZATION;
    public static final int FIELD_AND_METHOD;
    public static final int LOCAL_TYPE;
    public static final int NONE;
    private int flags;
    private org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit;
    private org.eclipse.jdt.internal.compiler.parser.Parser parser;
    private org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu;
    private char[] source;

    private void <init>(int, org.eclipse.jdt.internal.compiler.problem.ProblemReporter)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.TypeConverter: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,char)>(r1, 46);

        r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags> = i0;

        return;
    }

    public static org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration buildCompilationUnit(org.eclipse.jdt.internal.compiler.env.ISourceType[], int, org.eclipse.jdt.internal.compiler.problem.ProblemReporter, org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        java.lang.Throwable $r5;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter r1;
        org.eclipse.jdt.internal.compiler.env.ISourceType[] r2;
        int i0;
        org.eclipse.jdt.internal.compiler.CompilationResult r3;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter $r0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r4;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.env.ISourceType[];

        i0 := @parameter1: int;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.problem.ProblemReporter;

        r3 := @parameter3: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r0 = new org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: void <init>(int,org.eclipse.jdt.internal.compiler.problem.ProblemReporter)>(i0, r1);

     label1:
        $r4 = specialinvoke $r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration convert(org.eclipse.jdt.internal.compiler.env.ISourceType[],org.eclipse.jdt.internal.compiler.CompilationResult)>(r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch org.eclipse.jdt.core.JavaModelException from label1 to label2 with label3;
    }

    private org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration convert(org.eclipse.jdt.internal.compiler.env.ISourceType[], org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r2;
        org.eclipse.jdt.core.IType $r7, $r12, $r25;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r1, $r16, $r20, $r28, $r29, $r30, $r40, $r41, $r46;
        org.eclipse.jdt.internal.compiler.env.ISourceType[] r4;
        java.lang.String $r19;
        org.eclipse.jdt.internal.compiler.parser.Parser $r37, $r43;
        org.eclipse.jdt.internal.core.JavaElement $r33;
        org.eclipse.jdt.core.IImportDeclaration $r17;
        org.eclipse.jdt.internal.compiler.env.ISourceImport r48;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound $r42;
        org.eclipse.jdt.internal.compiler.ast.ImportReference[] $r15, $r21;
        org.eclipse.jdt.core.ICompilationUnit $r8, $r13;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r3, $r38, $r44;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.core.SourceTypeElementInfo r6, r50;
        org.eclipse.jdt.internal.core.CompilationUnitElementInfo $r35;
        org.eclipse.jdt.internal.core.ImportDeclaration r47;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r27;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r9, $r32, $r39, $r45;
        org.eclipse.jdt.internal.compiler.env.ISourceType $r5, $r24;
        java.lang.String[] $r22, $r36;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] r49;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        org.eclipse.jdt.internal.compiler.ast.ImportReference $r23, $r31;
        org.eclipse.jdt.internal.core.PackageFragment $r11;
        org.eclipse.jdt.core.IJavaElement $r10;
        org.eclipse.jdt.core.IImportDeclaration[] $r14;
        org.eclipse.jdt.internal.core.SourceType $r26;
        java.lang.Object $r18, $r34;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.env.ISourceType[];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r1 = new org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter>;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,org.eclipse.jdt.internal.compiler.CompilationResult,int)>($r3, r2, 0);

        r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit> = $r1;

        $i0 = lengthof r4;

        if $i0 != 0 goto label01;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        return $r41;

     label01:
        $r5 = r4[0];

        r6 = (org.eclipse.jdt.internal.core.SourceTypeElementInfo) $r5;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.core.IType getHandle()>();

        $r8 = interfaceinvoke $r7.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.ICompilationUnit getCompilationUnit()>();

        $r9 = (org.eclipse.jdt.internal.compiler.env.ICompilationUnit) $r8;

        r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu> = $r9;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: boolean has1_5Compliance>;

        if $z0 == 0 goto label02;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu>;

        $r33 = (org.eclipse.jdt.internal.core.JavaElement) $r32;

        $r34 = virtualinvoke $r33.<org.eclipse.jdt.internal.core.JavaElement: java.lang.Object getElementInfo()>();

        $r35 = (org.eclipse.jdt.internal.core.CompilationUnitElementInfo) $r34;

        $i9 = $r35.<org.eclipse.jdt.internal.core.CompilationUnitElementInfo: int annotationNumber>;

        if $i9 <= 10 goto label02;

        $r37 = new org.eclipse.jdt.internal.compiler.parser.Parser;

        $r38 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter>;

        specialinvoke $r37.<org.eclipse.jdt.internal.compiler.parser.Parser: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,boolean)>($r38, 1);

        $r39 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu>;

        $r40 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration dietParse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit,org.eclipse.jdt.internal.compiler.CompilationResult)>($r39, r2);

        return $r40;

     label02:
        $i1 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getNameSourceStart()>();

        $i2 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getNameSourceEnd()>();

        $r10 = interfaceinvoke $r8.<org.eclipse.jdt.core.ICompilationUnit: org.eclipse.jdt.core.IJavaElement getParent()>();

        $r11 = (org.eclipse.jdt.internal.core.PackageFragment) $r10;

        $r36 = $r11.<org.eclipse.jdt.internal.core.PackageFragment: java.lang.String[] names>;

        $i3 = lengthof $r36;

        if $i3 <= 0 goto label03;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        $r31 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.ImportReference createImportReference(java.lang.String[],int,int,boolean,int)>($r36, $i1, $i2, 0, 0);

        $r30.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference currentPackage> = $r31;

     label03:
        $r12 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.core.IType getHandle()>();

        $r13 = interfaceinvoke $r12.<org.eclipse.jdt.core.IType: org.eclipse.jdt.core.ICompilationUnit getCompilationUnit()>();

        $r14 = interfaceinvoke $r13.<org.eclipse.jdt.core.ICompilationUnit: org.eclipse.jdt.core.IImportDeclaration[] getImports()>();

        $i8 = lengthof $r14;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        $r15 = newarray (org.eclipse.jdt.internal.compiler.ast.ImportReference)[$i8];

        $r16.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports> = $r15;

        i10 = 0;

        goto label05;

     label04:
        $r17 = $r14[i10];

        r47 = (org.eclipse.jdt.internal.core.ImportDeclaration) $r17;

        $r18 = virtualinvoke r47.<org.eclipse.jdt.internal.core.ImportDeclaration: java.lang.Object getElementInfo()>();

        r48 = (org.eclipse.jdt.internal.compiler.env.ISourceImport) $r18;

        $r19 = virtualinvoke r47.<org.eclipse.jdt.internal.core.ImportDeclaration: java.lang.String getNameWithoutStar()>();

        $r20 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        $r21 = $r20.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.ImportReference[] imports>;

        $i4 = virtualinvoke $r19.<java.lang.String: int length()>();

        $r22 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: java.lang.String[] splitOn(char,java.lang.String,int,int)>(46, $r19, 0, $i4);

        $i5 = interfaceinvoke r48.<org.eclipse.jdt.internal.compiler.env.ISourceImport: int getDeclarationSourceStart()>();

        $i6 = interfaceinvoke r48.<org.eclipse.jdt.internal.compiler.env.ISourceImport: int getDeclarationSourceEnd()>();

        $z1 = virtualinvoke r47.<org.eclipse.jdt.internal.core.ImportDeclaration: boolean isOnDemand()>();

        $i7 = interfaceinvoke r48.<org.eclipse.jdt.internal.compiler.env.ISourceImport: int getModifiers()>();

        $r23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.ImportReference createImportReference(java.lang.String[],int,int,boolean,int)>($r22, $i5, $i6, $z1, $i7);

        $r21[i10] = $r23;

        i10 = i10 + 1;

     label05:
        if i10 < $i8 goto label04;

     label06:
        i11 = lengthof r4;

        r49 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)[i11];

        i12 = 0;

        goto label08;

     label07:
        $r24 = r4[i12];

        r50 = (org.eclipse.jdt.internal.core.SourceTypeElementInfo) $r24;

        $r25 = virtualinvoke r50.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.core.IType getHandle()>();

        $r26 = (org.eclipse.jdt.internal.core.SourceType) $r25;

        $r27 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType,org.eclipse.jdt.internal.compiler.CompilationResult)>($r26, r2);

        r49[i12] = $r27;

        i12 = i12 + 1;

     label08:
        if i12 < i11 goto label07;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        $r28.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] types> = r49;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

     label09:
        return $r29;

     label10:
        $r42 := @caughtexception;

        $r43 = new org.eclipse.jdt.internal.compiler.parser.Parser;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter>;

        specialinvoke $r43.<org.eclipse.jdt.internal.compiler.parser.Parser: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,boolean)>($r44, 1);

        $r45 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu>;

        $r46 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit,org.eclipse.jdt.internal.compiler.CompilationResult)>($r45, r2);

        return $r46;

        catch org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound from label06 to label09 with label10;
    }

    private org.eclipse.jdt.internal.compiler.ast.Initializer convert(org.eclipse.jdt.internal.core.InitializerElementInfo, org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.internal.compiler.ast.Statement[] r4;
        org.eclipse.jdt.core.IJavaElement[] $r3;
        org.eclipse.jdt.internal.compiler.ast.Block $r0;
        org.eclipse.jdt.internal.core.InitializerElementInfo r2;
        int $i0, $i1, $i2, i3, $i4, $i5, i6;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r7;
        org.eclipse.jdt.internal.compiler.CompilationResult r8;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r11;
        org.eclipse.jdt.core.IJavaElement $r5;
        org.eclipse.jdt.internal.core.SourceType r6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r9;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r10;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r1;

        r7 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r2 := @parameter0: org.eclipse.jdt.internal.core.InitializerElementInfo;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.Block;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.Block: void <init>(int)>(0);

        $r1 = new org.eclipse.jdt.internal.compiler.ast.Initializer;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: void <init>(org.eclipse.jdt.internal.compiler.ast.Block,int)>($r0, 0);

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.core.InitializerElementInfo: int getDeclarationSourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.core.InitializerElementInfo: int getDeclarationSourceEnd()>();

        $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceStart> = $i0;

        $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceStart> = $i0;

        $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: int declarationSourceEnd> = $i1;

        $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: int sourceEnd> = $i1;

        $i2 = virtualinvoke r2.<org.eclipse.jdt.internal.core.InitializerElementInfo: int getModifiers()>();

        $r1.<org.eclipse.jdt.internal.compiler.ast.Initializer: int modifiers> = $i2;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.core.InitializerElementInfo: org.eclipse.jdt.core.IJavaElement[] getChildren()>();

        i3 = lengthof $r3;

        if i3 <= 0 goto label5;

        r4 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[i3];

        i6 = 0;

        goto label4;

     label1:
        $r5 = $r3[i6];

        r6 = (org.eclipse.jdt.internal.core.SourceType) $r5;

        $r9 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType,org.eclipse.jdt.internal.compiler.CompilationResult)>(r6, r8);

        $i4 = $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i5 = $i4 & 512;

        if $i5 == 0 goto label2;

        $r10 = new org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        specialinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r9);

        $r11 = $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r10.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = $r11;

        $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass> = null;

        $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces> = null;

        $r9.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation> = $r10;

        r4[i6] = $r10;

        goto label3;

     label2:
        r4[i6] = $r9;

     label3:
        i6 = i6 + 1;

     label4:
        if i6 < i3 goto label1;

        $r0.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = r4;

     label5:
        return $r1;
    }

    private org.eclipse.jdt.internal.compiler.ast.FieldDeclaration convert(org.eclipse.jdt.internal.core.SourceField, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.core.IJavaElement[] $r9;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r23;
        org.eclipse.jdt.internal.compiler.ast.Expression[] r11;
        org.eclipse.jdt.internal.core.SourceFieldElementInfo r2;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r25, $r26, $r27;
        boolean z0, $z1, $z3, $z4;
        org.eclipse.jdt.internal.core.SourceField r0;
        org.eclipse.jdt.internal.compiler.CompilationResult r12;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r8;
        org.eclipse.jdt.core.IAnnotatable $r30;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r14, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r19;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r20;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, i13, $i15;
        java.lang.String $r4;
        org.eclipse.jdt.internal.compiler.parser.Parser $r18, $r21, $r28;
        org.eclipse.jdt.internal.compiler.ast.ArrayInitializer $r29;
        org.eclipse.jdt.core.IJavaElement $r13, $r15;
        char[] $r5, $r7, $r17;
        java.lang.Object $r1;

        r6 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r0 := @parameter0: org.eclipse.jdt.internal.core.SourceField;

        r19 := @parameter1: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r12 := @parameter2: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceField: java.lang.Object getElementInfo()>();

        r2 = (org.eclipse.jdt.internal.core.SourceFieldElementInfo) $r1;

        $r27 = new org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        specialinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void <init>()>();

        $i0 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: int getNameSourceStart()>();

        $i1 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: int getNameSourceEnd()>();

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceField: java.lang.String getElementName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name> = $r5;

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceStart> = $i0;

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int sourceEnd> = $i1;

        $i2 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: int getDeclarationSourceStart()>();

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceStart> = $i2;

        $i3 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: int getDeclarationSourceEnd()>();

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int declarationSourceEnd> = $i3;

        $i4 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: int getModifiers()>();

        $i5 = $i4 & 16384;

        if $i5 == 0 goto label01;

        $z4 = 1;

        $z3 = 1;

        goto label02;

     label01:
        $z4 = 0;

        $z3 = 0;

     label02:
        z0 = $z3;

        if $z4 == 0 goto label03;

        $i15 = (int) -16385;

        $i10 = $i4 & $i15;

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers> = $i10;

        goto label04;

     label03:
        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers> = $i4;

        $r7 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: char[] getTypeName()>();

        $r8 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(char[],int,int)>($r7, $i0, $i1);

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = $r8;

     label04:
        $z1 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: boolean has1_5Compliance>;

        if $z1 == 0 goto label05;

        $r30 = (org.eclipse.jdt.core.IAnnotatable) r0;

        $r24 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Annotation[] convertAnnotations(org.eclipse.jdt.core.IAnnotatable)>($r30);

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r24;

     label05:
        $i6 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i7 = $i6 & 16;

        if $i7 == 0 goto label07;

        $r17 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: char[] getInitializationSource()>();

        if $r17 == null goto label07;

        $r18 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        if $r18 != null goto label06;

        $r28 = new org.eclipse.jdt.internal.compiler.parser.Parser;

        $r23 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter>;

        specialinvoke $r28.<org.eclipse.jdt.internal.compiler.parser.Parser: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,boolean)>($r23, 1);

        r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser> = $r28;

     label06:
        $r21 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $r20 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.parser.Parser: void parse(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration,char[])>($r27, r19, $r20, $r17);

     label07:
        $i11 = r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i12 = $i11 & 32;

        if $i12 == 0 goto label15;

        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceFieldElementInfo: org.eclipse.jdt.core.IJavaElement[] getChildren()>();

        i8 = lengthof $r9;

        if i8 != 1 goto label10;

        $r15 = $r9[0];

        if z0 == 0 goto label08;

        $r25 = $r27;

        goto label09;

     label08:
        $r25 = null;

     label09:
        $r16 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression convert(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>($r15, $r25, r12);

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization> = $r16;

        goto label15;

     label10:
        if i8 <= 1 goto label15;

        $r29 = new org.eclipse.jdt.internal.compiler.ast.ArrayInitializer;

        specialinvoke $r29.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: void <init>()>();

        $r27.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization> = $r29;

        r11 = newarray (org.eclipse.jdt.internal.compiler.ast.Expression)[i8];

        $r29.<org.eclipse.jdt.internal.compiler.ast.ArrayInitializer: org.eclipse.jdt.internal.compiler.ast.Expression[] expressions> = r11;

        i13 = 0;

        goto label14;

     label11:
        $i9 = i13;

        $r13 = $r9[i13];

        if z0 == 0 goto label12;

        $r26 = $r27;

        goto label13;

     label12:
        $r26 = null;

     label13:
        $r14 = specialinvoke r6.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression convert(org.eclipse.jdt.core.IJavaElement,org.eclipse.jdt.internal.compiler.ast.FieldDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>($r13, $r26, r12);

        r11[$i9] = $r14;

        i13 = i13 + 1;

     label14:
        if i13 < i8 goto label11;

     label15:
        return $r27;
    }

    private org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression convert(org.eclipse.jdt.core.IJavaElement, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration, org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r6;
        org.eclipse.jdt.core.IJavaElement r1;
        org.eclipse.jdt.internal.core.SourceType $r3;
        int $i0, $i1, $i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r8;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r1 := @parameter0: org.eclipse.jdt.core.IJavaElement;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r3 = (org.eclipse.jdt.internal.core.SourceType) r1;

        $r4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType,org.eclipse.jdt.internal.compiler.CompilationResult)>($r3, r2);

        $r8 = new org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r4);

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r8.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = $r6;

        $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass> = null;

        $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces> = null;

        $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation> = $r8;

        if r7 == null goto label1;

        $i0 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i3 = (int) -16385;

        $i1 = $i0 & $i3;

        $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers> = $i1;

        $r8.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant> = r7;

        $r8.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = null;

     label1:
        return $r8;
    }

    private org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration convert(org.eclipse.jdt.internal.core.SourceMethod, org.eclipse.jdt.internal.core.SourceMethodElementInfo, org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.core.IJavaElement[] $r10;
        char[][] $r8, $r9, $r30, $r32;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r17, $r19;
        char[][][] $r31;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r44;
        org.eclipse.jdt.internal.compiler.CompilationResult r3;
        org.eclipse.jdt.internal.core.SourceMethod r6;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r16, $r20, $r23;
        long $l9, $l10, $l11, l31;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration r38, $r46;
        java.lang.String $r22, $r39;
        org.eclipse.jdt.internal.core.SourceMethodElementInfo r0;
        char[] $r4, $r18, $r26, $r27, $r33, $r40, $r43;
        org.eclipse.jdt.internal.compiler.ast.Statement[] r11;
        org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration $r45;
        org.eclipse.jdt.internal.compiler.ast.Expression $r28;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r21, $r41;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r1;
        boolean $z0, $z1, $z2, $z3, z5, $z6, z7, $z8, $z9;
        org.eclipse.jdt.internal.compiler.ast.Argument $r47;
        org.eclipse.jdt.core.IAnnotatable $r49;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r34;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r14;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression $r48;
        java.lang.String[] $r7;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, $i24, i25, $i26, $i27, $i28, $i29, i30, i32, $i33, i34, i35, i36, i37, $i39, $i41, $i43, $i45;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] r35;
        org.eclipse.jdt.core.IJavaElement $r12;
        org.eclipse.jdt.internal.core.SourceType r13;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r36;
        org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo r37;

        r1 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r6 := @parameter0: org.eclipse.jdt.internal.core.SourceMethod;

        r0 := @parameter1: org.eclipse.jdt.internal.core.SourceMethodElementInfo;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.CompilationResult;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getNameSourceStart()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getNameSourceEnd()>();

        r35 = (org.eclipse.jdt.internal.compiler.ast.TypeParameter[]) null;

        $z0 = r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: boolean has1_5Compliance>;

        if $z0 == 0 goto label03;

        $r30 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: char[][] getTypeParameterNames()>();

        if $r30 == null goto label03;

        i22 = lengthof $r30;

        if i22 <= 0 goto label03;

        $r31 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: char[][][] getTypeParameterBounds()>();

        r35 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeParameter)[i22];

        i23 = 0;

        goto label02;

     label01:
        $r33 = $r30[i23];

        $r32 = $r31[i23];

        $r34 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeParameter createTypeParameter(char[],char[][],int,int)>($r33, $r32, $i0, $i1);

        r35[i23] = $r34;

        i23 = i23 + 1;

     label02:
        if i23 < i22 goto label01;

     label03:
        $i24 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getModifiers()>();

        i25 = $i24;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: boolean isConstructor()>();

        if $z3 == 0 goto label04;

        $r44 = new org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        specialinvoke $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r3);

        $i20 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i39 = (int) -129;

        $i21 = $i20 & $i39;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits> = $i21;

        r36 = $r44;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters> = r35;

        goto label12;

     label04:
        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: boolean isAnnotationMethod()>();

        if $z1 == 0 goto label10;

        $r45 = new org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;

        specialinvoke $r45.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r3);

        r37 = (org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo) r0;

        $i15 = r37.<org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo: int defaultValueStart>;

        $i41 = (int) -1;

        if $i15 != $i41 goto label05;

        $i19 = r37.<org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo: int defaultValueEnd>;

        $i43 = (int) -1;

        if $i19 != $i43 goto label05;

        $z9 = 0;

        $z8 = 0;

        goto label06;

     label05:
        $z9 = 1;

        $z8 = 1;

     label06:
        z5 = $z8;

        $i26 = r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i27 = $i26 & 16;

        if $i27 == 0 goto label08;

        if $z9 == 0 goto label08;

        $r26 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: char[] getSource()>();

        $i18 = r37.<org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo: int defaultValueStart>;

        $i16 = r37.<org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo: int defaultValueEnd>;

        $i17 = $i16 + 1;

        $r27 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r26, $i18, $i17);

        if $r27 == null goto label07;

        $r28 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Expression parseMemberValue(char[])>($r27);

        if $r28 == null goto label08;

        $r45.<org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression defaultValue> = $r28;

        goto label08;

     label07:
        z5 = 0;

     label08:
        if z5 == 0 goto label09;

        i25 = $i24 | 131072;

     label09:
        r38 = $r45;

        goto label11;

     label10:
        $r46 = new org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        specialinvoke $r46.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r3);

        r38 = $r46;

     label11:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: char[] getReturnTypeName()>();

        $r5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(char[],int,int)>($r4, $i0, $i1);

        r38.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference returnType> = $r5;

        r38.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters> = r35;

        r36 = r38;

     label12:
        $r39 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceMethod: java.lang.String getElementName()>();

        $r40 = virtualinvoke $r39.<java.lang.String: char[] toCharArray()>();

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector> = $r40;

        $i28 = i25 & 128;

        if $i28 == 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        z7 = $z6;

        $i45 = (int) -129;

        $i2 = i25 & $i45;

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers> = $i2;

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceStart> = $i0;

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int sourceEnd> = $i1;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getDeclarationSourceStart()>();

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceStart> = $i3;

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getDeclarationSourceEnd()>();

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int declarationSourceEnd> = $i4;

        $z2 = r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: boolean has1_5Compliance>;

        if $z2 == 0 goto label15;

        $r49 = (org.eclipse.jdt.core.IAnnotatable) r6;

        $r24 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Annotation[] convertAnnotations(org.eclipse.jdt.core.IAnnotatable)>($r49);

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r24;

     label15:
        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.core.SourceMethod: java.lang.String[] getParameterTypes()>();

        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: char[][] getArgumentNames()>();

        if $r7 != null goto label16;

        $i29 = 0;

        goto label17;

     label16:
        $i29 = lengthof $r7;

     label17:
        i30 = $i29;

        if $i29 <= 0 goto label21;

        $l9 = (long) $i0;

        $l11 = $l9 << 32;

        $l10 = (long) $i1;

        l31 = $l11 + $l10;

        $r21 = newarray (org.eclipse.jdt.internal.compiler.ast.Argument)[$i29];

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments> = $r21;

        i32 = 0;

        goto label20;

     label18:
        $r22 = $r7[i32];

        $r23 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(java.lang.String,int,int)>($r22, $i0, $i1);

        if z7 == 0 goto label19;

        $i12 = i30 - 1;

        if i32 != $i12 goto label19;

        $i13 = $r23.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits>;

        $i14 = $i13 | 16384;

        $r23.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits> = $i14;

     label19:
        $r41 = r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments>;

        $r47 = new org.eclipse.jdt.internal.compiler.ast.Argument;

        $r43 = $r8[i32];

        specialinvoke $r47.<org.eclipse.jdt.internal.compiler.ast.Argument: void <init>(char[],long,org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>($r43, l31, $r23, 0);

        $r41[i32] = $r47;

        i32 = i32 + 1;

     label20:
        if i32 < i30 goto label18;

     label21:
        $r9 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: char[][] getExceptionTypeNames()>();

        if $r9 != null goto label22;

        $i33 = 0;

        goto label23;

     label22:
        $i33 = lengthof $r9;

     label23:
        i34 = $i33;

        if $i33 <= 0 goto label26;

        $r17 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeReference)[$i33];

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions> = $r17;

        i35 = 0;

        goto label25;

     label24:
        $r19 = r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] thrownExceptions>;

        $r18 = $r9[i35];

        $r20 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(char[],int,int)>($r18, $i0, $i1);

        $r19[i35] = $r20;

        i35 = i35 + 1;

     label25:
        if i35 < i34 goto label24;

     label26:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i6 = $i5 & 32;

        if $i6 == 0 goto label31;

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: org.eclipse.jdt.core.IJavaElement[] getChildren()>();

        i36 = lengthof $r10;

        if i36 == 0 goto label31;

        r11 = newarray (org.eclipse.jdt.internal.compiler.ast.Statement)[i36];

        i37 = 0;

        goto label30;

     label27:
        $r12 = $r10[i37];

        r13 = (org.eclipse.jdt.internal.core.SourceType) $r12;

        $r14 = specialinvoke r1.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType,org.eclipse.jdt.internal.compiler.CompilationResult)>(r13, r3);

        $i7 = $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i8 = $i7 & 512;

        if $i8 == 0 goto label28;

        $r48 = new org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        specialinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>($r14);

        $r16 = $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r48.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = $r16;

        $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass> = null;

        $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces> = null;

        $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation> = $r48;

        r11[i37] = $r48;

        goto label29;

     label28:
        r11[i37] = $r14;

     label29:
        i37 = i37 + 1;

     label30:
        if i37 < i36 goto label27;

        r36.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Statement[] statements> = r11;

     label31:
        return r36;
    }

    private org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType, org.eclipse.jdt.internal.compiler.CompilationResult) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r31, $r33, $r35;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r15;
        org.eclipse.jdt.internal.core.SourceField $r21;
        org.eclipse.jdt.internal.compiler.CompilationResult r4;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r34, $r36, $r38, $r39;
        org.eclipse.jdt.internal.core.SourceField[] $r24, r53;
        org.eclipse.jdt.internal.core.InitializerElementInfo $r18;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r14, $r54, $r55;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r17, $r19, $r22;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r7;
        org.eclipse.jdt.internal.core.SourceTypeElementInfo r2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r30, $r57;
        org.eclipse.jdt.internal.core.SourceMethod[] $r9;
        org.eclipse.jdt.internal.compiler.env.ISourceType $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r27, $r29;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41, $i42, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, $i54, $i55, i56, i57, $i58, $i59;
        java.lang.Object $r1, $r11;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r20;
        char[][] $r8, $r41, $r44;
        char[][][] $r42;
        org.eclipse.jdt.internal.core.SourceMethod r10, $r16;
        org.eclipse.jdt.internal.core.SourceType[] $r26;
        org.eclipse.jdt.internal.core.SourceMethodElementInfo r12;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound $r56;
        char[] $r6, $r32, $r37, $r45, $r48, $r49, $r51;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r23;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z11, z12, $z14, z15, $z16, $z17, $z18, $z19;
        org.eclipse.jdt.core.IAnnotatable $r58;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r47;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r43, $r46;
        org.eclipse.jdt.internal.core.SourceType r0, $r28;
        org.eclipse.jdt.internal.core.InitializerElementInfo[] $r25, r52;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r13;

        r7 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r0 := @parameter0: org.eclipse.jdt.internal.core.SourceType;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.CompilationResult;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceType: java.lang.Object getElementInfo()>();

        r2 = (org.eclipse.jdt.internal.core.SourceTypeElementInfo) $r1;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: boolean isAnonymousMember()>();

        if $z0 == 0 goto label01;

        $r56 = new org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound;

        specialinvoke $r56.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound: void <init>()>();

        throw $r56;

     label01:
        $r57 = new org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        specialinvoke $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>(r4);

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.internal.compiler.env.ISourceType getEnclosingType()>();

        if $r5 != null goto label03;

        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceType: boolean isAnonymous()>();

        if $z6 == 0 goto label02;

        $r49 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name> = $r49;

        $i36 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i37 = $i36 | 768;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i37;

        goto label04;

     label02:
        $z7 = virtualinvoke r0.<org.eclipse.jdt.internal.core.SourceType: boolean isLocal()>();

        if $z7 == 0 goto label04;

        $i34 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i35 = $i34 | 256;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i35;

        goto label04;

     label03:
        $i0 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 | 1024;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i1;

     label04:
        $i38 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i39 = $i38 & 512;

        if $i39 != 0 goto label05;

        $r48 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[] getName()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name> = $r48;

     label05:
        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[] getName()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name> = $r6;

        $i2 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getNameSourceStart()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart> = $i2;

        $i3 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getNameSourceEnd()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd> = $i3;

        $i4 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getModifiers()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers> = $i4;

        $i5 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getDeclarationSourceStart()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceStart> = $i5;

        $i6 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: int getDeclarationSourceEnd()>();

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd> = $i6;

        $i7 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int declarationSourceEnd>;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bodyEnd> = $i7;

        $z1 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: boolean has1_5Compliance>;

        if $z1 == 0 goto label08;

        $r58 = (org.eclipse.jdt.core.IAnnotatable) r0;

        $r40 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Annotation[] convertAnnotations(org.eclipse.jdt.core.IAnnotatable)>($r58);

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations> = $r40;

        $r41 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[][] getTypeParameterNames()>();

        $i33 = lengthof $r41;

        if $i33 <= 0 goto label08;

        i40 = lengthof $r41;

        $r42 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[][][] getTypeParameterBounds()>();

        $r43 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeParameter)[i40];

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters> = $r43;

        i41 = 0;

        goto label07;

     label06:
        $r46 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r45 = $r41[i41];

        $r44 = $r42[i41];

        $r47 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeParameter createTypeParameter(char[],char[][],int,int)>($r45, $r44, $i2, $i3);

        $r46[i41] = $r47;

        i41 = i41 + 1;

     label07:
        if i41 < i40 goto label06;

     label08:
        $r51 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[] getSuperclassName()>();

        if $r51 == null goto label09;

        $r37 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[] getSuperclassName()>();

        $r38 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(char[],int,int)>($r37, $i2, $i3);

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass> = $r38;

        $r39 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $i31 = $r39.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits>;

        $i32 = $i31 | 16;

        $r39.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits> = $i32;

     label09:
        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: char[][] getInterfaceNames()>();

        if $r8 != null goto label10;

        $i42 = 0;

        goto label11;

     label10:
        $i42 = lengthof $r8;

     label11:
        i43 = $i42;

        if $i42 <= 0 goto label14;

        $r31 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeReference)[$i42];

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces> = $r31;

        i44 = 0;

        goto label13;

     label12:
        $r33 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r32 = $r8[i44];

        $r34 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeReference createTypeReference(char[],int,int)>($r32, $i2, $i3);

        $r33[i44] = $r34;

        $r35 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r36 = $r35[i44];

        $i29 = $r36.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits>;

        $i30 = $i29 | 16;

        $r36.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits> = $i30;

        i44 = i44 + 1;

     label13:
        if i44 < i43 goto label12;

     label14:
        $i8 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i9 = $i8 & 8;

        if $i9 == 0 goto label17;

        $r26 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.internal.core.SourceType[] getMemberTypeHandles()>();

        i45 = lengthof $r26;

        $r27 = newarray (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)[i45];

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes> = $r27;

        i46 = 0;

        goto label16;

     label15:
        $r29 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r28 = $r26[i46];

        $r30 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration convert(org.eclipse.jdt.internal.core.SourceType,org.eclipse.jdt.internal.compiler.CompilationResult)>($r28, r4);

        $r29[i46] = $r30;

        i46 = i46 + 1;

     label16:
        if i46 < i45 goto label15;

     label17:
        r52 = (org.eclipse.jdt.internal.core.InitializerElementInfo[]) null;

        i47 = 0;

        $i10 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i11 = $i10 & 32;

        if $i11 == 0 goto label18;

        $r25 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.internal.core.InitializerElementInfo[] getInitializers()>();

        r52 = $r25;

        i47 = lengthof $r25;

     label18:
        r53 = (org.eclipse.jdt.internal.core.SourceField[]) null;

        i48 = 0;

        $i12 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i13 = $i12 & 1;

        if $i13 == 0 goto label19;

        $r24 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.internal.core.SourceField[] getFieldHandles()>();

        r53 = $r24;

        i48 = lengthof $r24;

     label19:
        $i28 = i47 + i48;

        if $i28 <= 0 goto label24;

        $r17 = newarray (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)[$i28];

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields> = $r17;

        i49 = 0;

        goto label21;

     label20:
        $r19 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r18 = r52[i49];

        $r20 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Initializer convert(org.eclipse.jdt.internal.core.InitializerElementInfo,org.eclipse.jdt.internal.compiler.CompilationResult)>($r18, r4);

        $r19[i49] = $r20;

        i49 = i49 + 1;

     label21:
        if i49 < i47 goto label20;

        i50 = 0;

        i51 = i47;

        goto label23;

     label22:
        $r22 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $i27 = i50;

        i50 = i50 + 1;

        $r21 = r53[$i27];

        $r23 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration convert(org.eclipse.jdt.internal.core.SourceField,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>($r21, $r57, r4);

        $r22[i51] = $r23;

        i51 = i51 + 1;

     label23:
        if i51 < $i28 goto label22;

     label24:
        $i14 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i15 = $i14 & 2;

        if $i15 == 0 goto label25;

        $z8 = 1;

        goto label26;

     label25:
        $z8 = 0;

     label26:
        z9 = $z8;

        $i16 = r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int flags>;

        $i17 = $i16 & 4;

        if $i17 == 0 goto label27;

        $z19 = 1;

        $z18 = 1;

        goto label28;

     label27:
        $z19 = 0;

        $z18 = 0;

     label28:
        z11 = $z19;

        if z9 != 0 goto label29;

        if $z18 == 0 goto label51;

     label29:
        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.core.SourceTypeElementInfo: org.eclipse.jdt.internal.core.SourceMethod[] getMethodHandles()>();

        $i26 = lengthof $r9;

        z12 = 0;

        i52 = 0;

        $i18 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i19 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i18);

        if $i19 == 2 goto label30;

        if $i19 == 4 goto label30;

        $z17 = 0;

        $z16 = 0;

        goto label31;

     label30:
        $z17 = 1;

        $z16 = 1;

     label31:
        z2 = $z17;

        if $z16 != 0 goto label38;

        if z9 == 0 goto label32;

        $z14 = 1;

        goto label33;

     label32:
        $z14 = 0;

     label33:
        z12 = $z14;

        i53 = 0;

        goto label37;

     label34:
        $r16 = $r9[i53];

        $z5 = virtualinvoke $r16.<org.eclipse.jdt.internal.core.SourceMethod: boolean isConstructor()>();

        if $z5 == 0 goto label35;

        if z9 == 0 goto label36;

        z12 = 0;

        i52 = i52 + 1;

        goto label36;

     label35:
        if z11 == 0 goto label36;

        i52 = i52 + 1;

     label36:
        i53 = i53 + 1;

     label37:
        if i53 < $i26 goto label34;

        goto label41;

     label38:
        if z11 == 0 goto label39;

        $i54 = $i26;

        goto label40;

     label39:
        $i54 = 0;

     label40:
        i52 = $i54;

     label41:
        $i55 = i52 + z12;

        $r54 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[$i55];

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = $r54;

        if z12 == 0 goto label42;

        $r14 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r15 = virtualinvoke $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration createDefaultConstructor(boolean,boolean)>(0, 0);

        $r14[0] = $r15;

     label42:
        i56 = 0;

        z15 = 0;

        i57 = 0;

        goto label50;

     label43:
        r10 = $r9[i57];

        $r11 = virtualinvoke r10.<org.eclipse.jdt.internal.core.SourceMethod: java.lang.Object getElementInfo()>();

        r12 = (org.eclipse.jdt.internal.core.SourceMethodElementInfo) $r11;

        $z3 = virtualinvoke r12.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: boolean isConstructor()>();

        $i20 = virtualinvoke r12.<org.eclipse.jdt.internal.core.SourceMethodElementInfo: int getModifiers()>();

        $i21 = $i20 & 1024;

        if $i21 == 0 goto label44;

        z15 = 1;

     label44:
        if $z3 == 0 goto label45;

        if z9 != 0 goto label46;

     label45:
        if $z3 != 0 goto label49;

        if z11 == 0 goto label49;

     label46:
        $r13 = specialinvoke r7.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration convert(org.eclipse.jdt.internal.core.SourceMethod,org.eclipse.jdt.internal.core.SourceMethodElementInfo,org.eclipse.jdt.internal.compiler.CompilationResult)>(r10, r12, r4);

        if z2 != 0 goto label47;

        $z4 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isAbstract()>();

        if $z4 == 0 goto label48;

     label47:
        $i22 = $r13.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers>;

        $i23 = $i22 | 16777216;

        $r13.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int modifiers> = $i23;

     label48:
        $r55 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i58 = i56;

        i56 = i56 + 1;

        $i59 = z12 + $i58;

        $r55[$i59] = $r13;

     label49:
        i57 = i57 + 1;

     label50:
        if i57 < $i26 goto label43;

        if z15 == 0 goto label51;

        $i24 = $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i25 = $i24 | 2048;

        $r57.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i25;

     label51:
        return $r57;
    }

    private org.eclipse.jdt.internal.compiler.ast.Annotation[] convertAnnotations(org.eclipse.jdt.core.IAnnotatable) throws org.eclipse.jdt.core.JavaModelException
    {
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r9, $r10, r11;
        org.eclipse.jdt.internal.compiler.ast.Expression $r7;
        int i0, $i1, $i2, i3, $i4, i5, i6;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        org.eclipse.jdt.core.IAnnotation[] $r3;
        boolean $z0;
        org.eclipse.jdt.core.ISourceRange $r5;
        org.eclipse.jdt.core.IAnnotation $r4;
        org.eclipse.jdt.core.IAnnotatable r2;
        char[] $r1, $r6;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r8;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r2 := @parameter0: org.eclipse.jdt.core.IAnnotatable;

        $r1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: char[] getSource()>();

        $r3 = interfaceinvoke r2.<org.eclipse.jdt.core.IAnnotatable: org.eclipse.jdt.core.IAnnotation[] getAnnotations()>();

        i0 = lengthof $r3;

        r11 = newarray (org.eclipse.jdt.internal.compiler.ast.Annotation)[i0];

        i5 = 0;

        i6 = 0;

        goto label3;

     label1:
        $r4 = $r3[i6];

        $r5 = interfaceinvoke $r4.<org.eclipse.jdt.core.IAnnotation: org.eclipse.jdt.core.ISourceRange getSourceRange()>();

        $i1 = interfaceinvoke $r5.<org.eclipse.jdt.core.ISourceRange: int getOffset()>();

        $i2 = interfaceinvoke $r5.<org.eclipse.jdt.core.ISourceRange: int getLength()>();

        i3 = $i1 + $i2;

        $r6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>($r1, $i1, i3);

        if $r6 == null goto label2;

        $r7 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.Expression parseMemberValue(char[])>($r6);

        $z0 = $r7 instanceof org.eclipse.jdt.internal.compiler.ast.Annotation;

        if $z0 == 0 goto label2;

        $i4 = i5;

        i5 = i5 + 1;

        $r8 = (org.eclipse.jdt.internal.compiler.ast.Annotation) $r7;

        r11[$i4] = $r8;

     label2:
        i6 = i6 + 1;

     label3:
        if i6 < i0 goto label1;

        if i0 == i5 goto label4;

        $r10 = r11;

        $r9 = newarray (org.eclipse.jdt.internal.compiler.ast.Annotation)[i5];

        r11 = $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i5);

     label4:
        return r11;
    }

    private char[] getSource()
    {
        char[] $r1, $r2, $r4;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        org.eclipse.jdt.internal.compiler.env.ICompilationUnit $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: char[] source>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.internal.compiler.env.ICompilationUnit: char[] getContents()>();

        r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: char[] source> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: char[] source>;

        return $r2;
    }

    private org.eclipse.jdt.internal.compiler.ast.Expression parseMemberValue(char[])
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r5;
        int $i0;
        char[] r2;
        org.eclipse.jdt.internal.compiler.parser.Parser $r1, $r4, $r6;
        org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter r0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        if $r1 != null goto label1;

        $r6 = new org.eclipse.jdt.internal.compiler.parser.Parser;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.parser.Parser: void <init>(org.eclipse.jdt.internal.compiler.problem.ProblemReporter,boolean)>($r7, 1);

        r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser> = $r6;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.parser.Parser parser>;

        $i0 = lengthof r2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.Expression parseMemberValue(char[],int,int,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)>(r2, 0, $i0, $r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int NONE> = 0;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int LOCAL_TYPE> = 32;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int FIELD_AND_METHOD> = 7;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int FIELD_INITIALIZATION> = 16;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int MEMBER_TYPE> = 8;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int METHOD> = 4;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int CONSTRUCTOR> = 2;

        <org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter: int FIELD> = 1;

        return;
    }
}
