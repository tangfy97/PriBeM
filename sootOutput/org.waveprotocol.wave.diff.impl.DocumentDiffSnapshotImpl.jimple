public class org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl extends java.lang.Object implements org.waveprotocol.wave.diff.DocumentDiffSnapshot
{
    private java.lang.String documentId;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state;
    private org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff;
    private java.lang.String author;
    private final java.util.List contributor;
    private final java.util.List addedContributor;
    private final java.util.List removedContributor;
    private java.lang.Double lastModifiedVersion;
    private java.lang.Double lastModifiedTime;

    public void <init>()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor> = $r3;

        return;
    }

    public void <init>(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r4;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r4 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor> = $r3;

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void copyFrom(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r4);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        java.lang.String $r2, $r3, r15, r16, r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1;
        java.util.Iterator $r5, $r7, $r9;
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r4, $r6, $r8;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r13, $r14;
        java.lang.Object $r10, $r11, $r12;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setDocumentId(java.lang.String)>($r2);

        $z0 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        if $z0 == 0 goto label01;

        $r14 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r14);

        goto label02;

     label01:
        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void clearState()>();

     label02:
        $z1 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        if $z1 == 0 goto label03;

        $r13 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r13);

        goto label04;

     label03:
        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void clearDiff()>();

     label04:
        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getAuthor()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setAuthor(java.lang.String)>($r3);

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void clearContributor()>();

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getContributor()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r12;

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void addContributor(java.lang.String)>(r15);

        goto label05;

     label06:
        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void clearAddedContributor()>();

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getAddedContributor()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r11;

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void addAddedContributor(java.lang.String)>(r16);

        goto label07;

     label08:
        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void clearRemovedContributor()>();

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getRemovedContributor()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r10;

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void addRemovedContributor(java.lang.String)>(r17);

        goto label09;

     label10:
        $d0 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedVersion()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setLastModifiedVersion(double)>($d0);

        $d1 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedTime()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: void setLastModifiedTime(double)>($d1);

        return;
    }

    public java.lang.String getDocumentId()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String documentId>;

        return $r1;
    }

    public void setDocumentId(java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String documentId> = r1;

        return;
    }

    public boolean hasState()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearState()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getState()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        $r2 = r1.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r2);

        return $r0;
    }

    public void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r2;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r2);

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state> = $r1;

        return;
    }

    public boolean hasDiff()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearDiff()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff> = null;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getDiff()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r1;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r0, $r2;

        r1 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        $r2 = r1.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r2);

        return $r0;
    }

    public void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r2;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r2);

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff> = $r1;

        return;
    }

    public java.lang.String getAuthor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String author>;

        return $r1;
    }

    public void setAuthor(java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String author> = r1;

        return;
    }

    public java.util.List getContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAllContributor(java.util.List)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.lang.String getContributor(int)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getContributorSize()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addContributor(java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void clearContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.util.List getAddedContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAllAddedContributor(java.util.List)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.lang.String getAddedContributor(int)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setAddedContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getAddedContributorSize()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addAddedContributor(java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void clearAddedContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public java.util.List getRemovedContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAllRemovedContributor(java.util.List)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.lang.String getRemovedContributor(int)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setRemovedContributor(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public int getRemovedContributorSize()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addRemovedContributor(java.lang.String)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void clearRemovedContributor()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public double getLastModifiedVersion()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.Double $r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedVersion>;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public void setLastModifiedVersion(double)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedVersion> = $r1;

        return;
    }

    public double getLastModifiedTime()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.Double $r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedTime>;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public void setLastModifiedTime(double)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedTime> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        java.util.List $r1, $r2, $r3;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String documentId> = null;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl state> = null;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl diff> = null;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.String author> = null;

        $r1 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List contributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.util.List removedContributor>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedVersion> = null;

        r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: java.lang.Double lastModifiedTime> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil: boolean isEqual(org.waveprotocol.wave.diff.DocumentDiffSnapshot,org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        int $i0;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil: int getHashCode(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getDiff()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()
    {
        org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl r0;
        org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.impl.DocumentDiffSnapshotImpl: org.waveprotocol.wave.federation.impl.ProtocolDocumentOperationImpl getState()>();

        return $r1;
    }
}
