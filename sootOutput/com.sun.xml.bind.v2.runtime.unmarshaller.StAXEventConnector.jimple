final class com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector extends com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector
{
    private final javax.xml.stream.XMLEventReader staxEventReader;
    private javax.xml.stream.events.XMLEvent event;
    private final org.xml.sax.helpers.AttributesImpl attrs;
    private final java.lang.StringBuilder buffer;
    private boolean seenText;

    public void <init>(javax.xml.stream.XMLEventReader, com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)
    {
        org.xml.sax.helpers.AttributesImpl $r2;
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        javax.xml.stream.XMLEventReader r4;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor r1;
        java.lang.StringBuilder $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r4 := @parameter0: javax.xml.stream.XMLEventReader;

        r1 := @parameter1: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXConnector: void <init>(com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor)>(r1);

        $r2 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r2.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: org.xml.sax.helpers.AttributesImpl attrs> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.StringBuilder buffer> = $r3;

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader> = r4;

        return;
    }

    public void bridge() throws javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        java.lang.IllegalStateException $r23;
        javax.xml.stream.events.XMLEvent $r2, $r3, $r4, $r7, $r8, $r10, $r12, $r14, $r19, $r20, $r22;
        javax.xml.stream.XMLStreamException $r24;
        int $i0, i1, $i3;
        javax.xml.namespace.NamespaceContext $r6;
        javax.xml.stream.events.EndElement $r11;
        javax.xml.stream.events.StartElement $r5, $r13;
        boolean $z0, $z1, $z2;
        javax.xml.stream.XMLEventReader $r1, $r18, $r21;
        javax.xml.stream.events.Characters $r9;
        org.xml.sax.SAXException $r16;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

     label01:
        i1 = 0;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event> = $r2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $z0 = interfaceinvoke $r3.<javax.xml.stream.events.XMLEvent: boolean isStartDocument()>();

        if $z0 != 0 goto label02;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $z1 = interfaceinvoke $r14.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z1 != 0 goto label02;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>()>();

        throw $r23;

     label02:
        $r18 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        $r19 = interfaceinvoke $r18.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event> = $r19;

        $r20 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $z2 = interfaceinvoke $r20.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z2 == 0 goto label02;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r5 = interfaceinvoke $r4.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r6 = interfaceinvoke $r5.<javax.xml.stream.events.StartElement: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void handleStartDocument(javax.xml.namespace.NamespaceContext)>($r6);

     label03:
        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $i0 = interfaceinvoke $r7.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label07;
            case 9: goto label07;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label06;
            default: goto label07;
        };

     label04:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r13 = interfaceinvoke $r12.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void handleStartElement(javax.xml.stream.events.StartElement)>($r13);

        i1 = i1 + 1;

        goto label07;

     label05:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r11 = interfaceinvoke $r10.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void handleEndElement(javax.xml.stream.events.EndElement)>($r11);

        if i1 != 0 goto label07;

        goto label08;

     label06:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r9 = interfaceinvoke $r8.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void handleCharacters(javax.xml.stream.events.Characters)>($r9);

     label07:
        $r21 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        $r22 = interfaceinvoke $r21.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event> = $r22;

        goto label03;

     label08:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: void handleEndDocument()>();

        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event> = null;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r24 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r24.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r16);

        throw $r24;

     label11:
        return;

        catch org.xml.sax.SAXException from label01 to label09 with label10;
    }

    protected javax.xml.stream.Location getCurrentLocation()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        javax.xml.stream.events.XMLEvent $r1;
        javax.xml.stream.Location $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        return $r2;
    }

    protected java.lang.String getCurrentQName()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        javax.xml.stream.events.XMLEvent $r1, $r2, $r7;
        javax.xml.stream.events.EndElement $r8;
        javax.xml.stream.events.StartElement $r3;
        java.lang.String $r4, $r5, $r6;
        javax.xml.namespace.QName r9;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r8 = interfaceinvoke $r7.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        r9 = interfaceinvoke $r8.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        goto label2;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.events.XMLEvent event>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        r9 = interfaceinvoke $r3.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

     label2:
        $r4 = virtualinvoke r9.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r5 = virtualinvoke r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r6 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String getQName(java.lang.String,java.lang.String)>($r4, $r5);

        return $r6;
    }

    private void handleCharacters(javax.xml.stream.events.Characters) throws org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        javax.xml.stream.events.XMLEvent $r3, $r19;
        java.lang.String $r7, $r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.xml.stream.XMLEventReader $r2, $r4, $r8, $r12, $r18;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor $r1;
        javax.xml.stream.events.Characters r5, $r10;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r14, $r16;
        java.lang.StringBuilder $r6, $r9, $r13, $r15;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r5 := @parameter0: javax.xml.stream.events.Characters;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor predictor>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor: boolean expectText()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean seenText> = 1;

     label2:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z1 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean isIgnorable(javax.xml.stream.events.XMLEvent)>($r3);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        interfaceinvoke $r4.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        goto label2;

     label4:
        $z2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean isTag(javax.xml.stream.events.XMLEvent)>($r3);

        if $z2 == 0 goto label5;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r17 = interfaceinvoke r5.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        interfaceinvoke $r16.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void text(java.lang.CharSequence)>($r17);

        return;

     label5:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.StringBuilder buffer>;

        $r7 = interfaceinvoke r5.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label6:
        $r18 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        $r19 = interfaceinvoke $r18.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z4 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean isIgnorable(javax.xml.stream.events.XMLEvent)>($r19);

        if $z4 != 0 goto label7;

        goto label8;

     label7:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        interfaceinvoke $r8.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        goto label6;

     label8:
        $z3 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean isTag(javax.xml.stream.events.XMLEvent)>($r19);

        if $z3 == 0 goto label9;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.StringBuilder buffer>;

        interfaceinvoke $r14.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void text(java.lang.CharSequence)>($r13);

        $r15 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.StringBuilder buffer>;

        virtualinvoke $r15.<java.lang.StringBuilder: void setLength(int)>(0);

        return;

     label9:
        $r9 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.StringBuilder buffer>;

        $r10 = interfaceinvoke $r19.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r11 = interfaceinvoke $r10.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: javax.xml.stream.XMLEventReader staxEventReader>;

        interfaceinvoke $r12.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        goto label6;
    }

    private boolean isTag(javax.xml.stream.events.XMLEvent)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r1;
        javax.xml.stream.events.XMLEvent r0;
        int $i0;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $i0 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        if $i0 == 1 goto label1;

        if $i0 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isIgnorable(javax.xml.stream.events.XMLEvent)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r1;
        javax.xml.stream.events.XMLEvent r0;
        int $i0;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $i0 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        if $i0 == 5 goto label1;

        if $i0 != 3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void handleEndElement(javax.xml.stream.events.EndElement) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName $r10, $r13, $r16;
        javax.xml.stream.events.EndElement r1;
        java.lang.String $r4, $r5, $r11, $r12, $r14;
        boolean $z0, $z1, $z2;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor $r7;
        java.util.Iterator $r17;
        javax.xml.stream.events.Namespace $r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r6, $r8, $r15;
        java.lang.Object $r2;
        javax.xml.namespace.QName $r9;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r1 := @parameter0: javax.xml.stream.events.EndElement;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean seenText>;

        if $z0 != 0 goto label1;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor predictor>;

        $z1 = interfaceinvoke $r7.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor$TextPredictor: boolean expectText()>();

        if $z1 == 0 goto label1;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        interfaceinvoke $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void text(java.lang.CharSequence)>("");

     label1:
        $r9 = interfaceinvoke r1.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        $r10 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r11 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r12 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r11);

        $r10.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri> = $r12;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r14 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local> = $r14;

        $r15 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        interfaceinvoke $r15.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void endElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r16);

        $r17 = interfaceinvoke r1.<javax.xml.stream.events.EndElement: java.util.Iterator getNamespaces()>();

     label2:
        $z2 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r2 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (javax.xml.stream.events.Namespace) $r2;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r5 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r4);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        interfaceinvoke $r6.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void endPrefixMapping(java.lang.String)>($r5);

        goto label2;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean seenText> = 0;

        return;
    }

    private void handleStartElement(javax.xml.stream.events.StartElement) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r3;
        com.sun.xml.bind.v2.runtime.unmarshaller.TagName $r4, $r8, $r11, $r12, $r14;
        org.xml.sax.Attributes $r13;
        javax.xml.stream.events.StartElement r0;
        java.lang.String $r5, $r6, $r7, $r9, $r10, $r18, $r19, $r20, $r21;
        boolean $z0;
        java.util.Iterator $r1;
        javax.xml.stream.events.Namespace r22;
        com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor $r15, $r17;
        java.lang.Object $r16;
        javax.xml.namespace.QName $r2;

        r3 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r0 := @parameter0: javax.xml.stream.events.StartElement;

        $r1 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r22 = (javax.xml.stream.events.Namespace) $r16;

        $r17 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r18 = interfaceinvoke r22.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r19 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r18);

        $r20 = interfaceinvoke r22.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        $r21 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r20);

        interfaceinvoke $r17.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void startPrefixMapping(java.lang.String,java.lang.String)>($r19, $r21);

        goto label1;

     label2:
        $r2 = interfaceinvoke r0.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r4 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r5 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r5);

        $r4.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri> = $r6;

        $r7 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r8 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r9 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r10 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r9);

        $r8.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String uri> = $r10;

        $r11 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r11.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: java.lang.String local> = $r7;

        $r12 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        $r13 = specialinvoke r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: org.xml.sax.Attributes getAttributes(javax.xml.stream.events.StartElement)>(r0);

        $r12.<com.sun.xml.bind.v2.runtime.unmarshaller.TagName: org.xml.sax.Attributes atts> = $r13;

        $r15 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor visitor>;

        $r14 = r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: com.sun.xml.bind.v2.runtime.unmarshaller.TagName tagName>;

        interfaceinvoke $r15.<com.sun.xml.bind.v2.runtime.unmarshaller.XmlVisitor: void startElement(com.sun.xml.bind.v2.runtime.unmarshaller.TagName)>($r14);

        r3.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: boolean seenText> = 0;

        return;
    }

    private org.xml.sax.Attributes getAttributes(javax.xml.stream.events.StartElement)
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector r0;
        javax.xml.stream.events.Attribute r6;
        int $i0;
        javax.xml.stream.events.StartElement r2;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r13, r19;
        boolean $z0;
        org.xml.sax.helpers.AttributesImpl $r1, $r4, $r14;
        java.util.Iterator $r3;
        java.lang.Object $r5;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;
        javax.xml.namespace.QName $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector;

        r2 := @parameter0: javax.xml.stream.events.StartElement;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: org.xml.sax.helpers.AttributesImpl attrs>;

        virtualinvoke $r1.<org.xml.sax.helpers.AttributesImpl: void clear()>();

        $r3 = interfaceinvoke r2.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.xml.stream.events.Attribute) $r5;

        $r7 = interfaceinvoke r6.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r8 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r9 = staticinvoke <com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: java.lang.String fixNull(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r11 = virtualinvoke $r7.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r11 == null goto label2;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        r19 = $r10;

        goto label4;

     label3:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r12 = interfaceinvoke r6.<javax.xml.stream.events.Attribute: java.lang.String getDTDType()>();

        $r13 = interfaceinvoke r6.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        $r14 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: org.xml.sax.helpers.AttributesImpl attrs>;

        virtualinvoke $r14.<org.xml.sax.helpers.AttributesImpl: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, r19, $r12, $r13);

        goto label1;

     label5:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.unmarshaller.StAXEventConnector: org.xml.sax.helpers.AttributesImpl attrs>;

        return $r4;
    }
}
