class groovy.util.FileNameByRegexFinder$_getFileNames_closure1 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference result;
    private groovy.lang.Reference pattern;
    private groovy.lang.Reference excludesPattern;
    static java.lang.Class class$groovy$util$FileNameByRegexFinder;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$String;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference, groovy.lang.Reference, groovy.lang.Reference)
    {
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r2;
        groovy.lang.Reference r5, $r6, r7, $r8, r9, $r10;
        java.lang.Class $r0, $r1, $r11, $r12;
        java.lang.Object r3, r4;

        r2 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        r7 := @parameter3: groovy.lang.Reference;

        r9 := @parameter4: groovy.lang.Reference;

        $r0 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r12 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference result> = $r6;

        $r8 = (groovy.lang.Reference) r7;

        r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference pattern> = $r8;

        $r10 = (groovy.lang.Reference) r9;

        r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference excludesPattern> = $r10;

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        java.util.regex.Matcher $r10, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object[] $r31;
        java.lang.Boolean $r26, $r28;
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r7;
        groovy.lang.Reference $r1, $r8, $r12, $r15, $r20;
        java.lang.Object r0, $r5, $r6, $r9, $r16, $r18, $r19, $r21, $r30, $r34, $r35;
        java.lang.Class $r2, $r3, $r4, $r11, $r13, $r14, $r17, $r23, $r24, $r25, $r27, $r29, $r32, $r33;

        r7 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r23 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r23;

        goto label02;

     label01:
        $r23 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label02:
        $r3 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r24 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r24;

        goto label04;

     label03:
        $r24 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

        if $r4 != null goto label05;

        $r25 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder> = $r25;

        goto label06;

     label05:
        $r25 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

     label06:
        $r5 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r25, $r5, "path");

        $r8 = r7.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference pattern>;

        $r9 = virtualinvoke $r8.<groovy.lang.Reference: java.lang.Object get()>();

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.regex.Matcher findRegex(java.lang.Object,java.lang.Object)>($r6, $r9);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r10);

        if $z0 == 0 goto label16;

        $r15 = r7.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference excludesPattern>;

        $r16 = virtualinvoke $r15.<groovy.lang.Reference: java.lang.Object get()>();

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r16);

        if $z1 != 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        if $z4 == 0 goto label10;

     label09:
        $r26 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label15;

     label10:
        $r17 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

        if $r17 != null goto label11;

        $r27 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder> = $r27;

        goto label12;

     label11:
        $r27 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

     label12:
        $r18 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r27, $r18, "path");

        $r20 = r7.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference excludesPattern>;

        $r21 = virtualinvoke $r20.<groovy.lang.Reference: java.lang.Object get()>();

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.regex.Matcher findRegex(java.lang.Object,java.lang.Object)>($r19, $r21);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r22);

        if $z2 != 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        if $z5 != 0 goto label09;

        $r26 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label15:
        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r26);

        if $z3 == 0 goto label16;

        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label17;

     label16:
        $r28 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label17:
        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r28);

        if $z6 == 0 goto label22;

        $r11 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

        if $r11 != null goto label18;

        $r14 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder");

        $r29 = $r14;

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder> = $r14;

        goto label19;

     label18:
        $r29 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

     label19:
        $r12 = r7.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference result>;

        $r30 = virtualinvoke $r12.<groovy.lang.Reference: java.lang.Object get()>();

        $r31 = newarray (java.lang.Object)[1];

        $r13 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

        if $r13 != null goto label20;

        $r32 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder");

        $r33 = $r32;

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder> = $r32;

        goto label21;

     label20:
        $r33 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$util$FileNameByRegexFinder>;

     label21:
        $r34 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r33, $r34, "absolutePath");

        $r31[0] = $r35;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r29, $r30, "leftShift", $r31);

        goto label22;

     label22:
        return null;
    }

    public java.lang.Object getResult()
    {
        groovy.lang.Reference $r3;
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        $r0 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference result>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    public java.lang.String getPattern()
    {
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.lang.String $r7;

        r2 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        $r0 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference pattern>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    public java.lang.String getExcludesPattern()
    {
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r8, $r9, $r10;
        java.lang.Object $r4, $r6;
        java.lang.String $r7;

        r2 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        $r0 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r8;

        goto label2;

     label1:
        $r8 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r9 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r9;

        goto label4;

     label3:
        $r9 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.util.FileNameByRegexFinder$_getFileNames_closure1: groovy.lang.Reference excludesPattern>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r5 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String>;

        if $r5 != null goto label5;

        $r10 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String> = $r10;

        goto label6;

     label5:
        $r10 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$java$lang$String>;

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r10);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    public java.lang.Object doCall()
    {
        java.lang.Object[] $r4;
        groovy.util.FileNameByRegexFinder$_getFileNames_closure1 r3;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        java.lang.Object $r5;

        r3 := @this: groovy.util.FileNameByRegexFinder$_getFileNames_closure1;

        $r0 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.util.FileNameByRegexFinder$_getFileNames_closure1");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.util.FileNameByRegexFinder$_getFileNames_closure1: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = null;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "doCall", $r4);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
