public final class com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple extends java.lang.Object
{
    public com.hp.hpl.jena.sparql.sse.Item subject;
    public com.hp.hpl.jena.sparql.sse.Item predicate;
    public com.hp.hpl.jena.sparql.sse.Item object;

    public static com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple parse(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.ItemList $r1;
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple $r2;
        com.hp.hpl.jena.sparql.sse.Item r0, $r3, $r4, $r5;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.ItemList getList()>();

        $r2 = new com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(0);

        $r4 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(1);

        $r5 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.sse.ItemList: com.hp.hpl.jena.sparql.sse.Item get(int)>(2);

        specialinvoke $r2.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: void <init>(com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item)>($r3, $r4, $r5);

        return $r2;
    }

    public void <init>(com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple r0;
        com.hp.hpl.jena.sparql.sse.Item r1, $r2, r3, $r4, r5, $r6;

        r0 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r3 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        r5 := @parameter2: com.hp.hpl.jena.sparql.sse.Item;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.sparql.sse.Item)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.sparql.sse.Item)>(r3);

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.sparql.sse.Item)>(r5);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: void set(com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item)>($r2, $r4, $r6);

        return;
    }

    private void set(com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple r0;
        com.hp.hpl.jena.sparql.sse.Item r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r2 := @parameter1: com.hp.hpl.jena.sparql.sse.Item;

        r3 := @parameter2: com.hp.hpl.jena.sparql.sse.Item;

        r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item subject> = r1;

        r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item predicate> = r2;

        r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item object> = r3;

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple r0;
        com.hp.hpl.jena.sparql.sse.Item $r2, $r4, $r6;
        com.hp.hpl.jena.graph.Node r1, r3, r5;

        r0 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r5 := @parameter2: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.graph.Node)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.graph.Node)>(r3);

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.graph.Node)>(r5);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: void set(com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.sparql.sse.Item)>($r2, $r4, $r6);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple r0;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getSubject()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Node getObject()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r4);

        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.sse.Item $r2, $r5, $r8;
        com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9;
        java.lang.String $r10;

        r1 := @this: com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item subject>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item predicate>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternTriple: com.hp.hpl.jena.sparql.sse.Item object>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private static com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r0, $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        if r0 == null goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item ANY>;

     label2:
        return $r1;
    }

    private static com.hp.hpl.jena.sparql.sse.Item normalize(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.graph.Node r0;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        if r0 == null goto label1;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createNode(com.hp.hpl.jena.graph.Node)>(r0);

        goto label2;

     label1:
        $r1 = <com.hp.hpl.jena.sparql.engine.optimizer.reorder.PatternElements: com.hp.hpl.jena.sparql.sse.Item ANY>;

     label2:
        return $r1;
    }
}
