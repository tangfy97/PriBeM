public class org.springframework.expression.spel.ast.OperatorPower extends org.springframework.expression.spel.ast.Operator
{

    public transient void <init>(int, org.springframework.expression.spel.ast.SpelNodeImpl[])
    {
        int i0;
        org.springframework.expression.spel.ast.OperatorPower r0;
        org.springframework.expression.spel.ast.SpelNodeImpl[] r1;

        r0 := @this: org.springframework.expression.spel.ast.OperatorPower;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.expression.spel.ast.SpelNodeImpl[];

        specialinvoke r0.<org.springframework.expression.spel.ast.Operator: void <init>(java.lang.String,int,org.springframework.expression.spel.ast.SpelNodeImpl[])>("^", i0, r1);

        return;
    }

    public org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState) throws org.springframework.expression.EvaluationException
    {
        java.lang.Integer $r17;
        byte $b5;
        java.lang.Long $r15, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.expression.spel.ExpressionState r3;
        org.springframework.expression.spel.ast.SpelNodeImpl $r1, $r2;
        java.lang.Double $r13;
        org.springframework.expression.Operation $r8;
        long $l0, $l1, $l2, $l3, $l4, $l7;
        int $i6, $i8;
        org.springframework.expression.TypedValue $r4, $r6, $r9, $r20, $r21, $r22, $r23;
        java.lang.Number r10, r11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        org.springframework.expression.spel.ast.OperatorPower r0;
        java.lang.Object $r5, $r7;

        r0 := @this: org.springframework.expression.spel.ast.OperatorPower;

        r3 := @parameter0: org.springframework.expression.spel.ExpressionState;

        $r1 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.spel.ast.SpelNodeImpl getLeftOperand()>();

        $r2 = virtualinvoke r0.<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()>();

        $r4 = virtualinvoke $r1.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r3);

        $r5 = virtualinvoke $r4.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r2.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r3);

        $r7 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $z0 = $r5 instanceof java.lang.Number;

        if $z0 == 0 goto label6;

        $z1 = $r7 instanceof java.lang.Number;

        if $z1 == 0 goto label6;

        r10 = (java.lang.Number) $r5;

        r11 = (java.lang.Number) $r7;

        $z2 = r10 instanceof java.lang.Double;

        if $z2 != 0 goto label1;

        $z3 = r11 instanceof java.lang.Double;

        if $z3 == 0 goto label2;

     label1:
        $r20 = new org.springframework.expression.TypedValue;

        $d0 = virtualinvoke r10.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r11.<java.lang.Number: double doubleValue()>();

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, $d1);

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        specialinvoke $r20.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r13);

        return $r20;

     label2:
        $z4 = r10 instanceof java.lang.Long;

        if $z4 != 0 goto label3;

        $z5 = r11 instanceof java.lang.Long;

        if $z5 == 0 goto label4;

     label3:
        $l0 = virtualinvoke r10.<java.lang.Number: long longValue()>();

        $d3 = (double) $l0;

        $l1 = virtualinvoke r11.<java.lang.Number: long longValue()>();

        $d4 = (double) $l1;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, $d4);

        $r21 = new org.springframework.expression.TypedValue;

        $l2 = (long) $d5;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        specialinvoke $r21.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r15);

        return $r21;

     label4:
        $l3 = virtualinvoke r10.<java.lang.Number: long longValue()>();

        $d6 = (double) $l3;

        $l4 = virtualinvoke r11.<java.lang.Number: long longValue()>();

        $d7 = (double) $l4;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, $d7);

        $b5 = $d8 cmpl 2.147483647E9;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label5;

        $r22 = new org.springframework.expression.TypedValue;

        $l7 = (long) $d8;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        specialinvoke $r22.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r19);

        return $r22;

     label5:
        $r23 = new org.springframework.expression.TypedValue;

        $i6 = (int) $d8;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        specialinvoke $r23.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r17);

        return $r23;

     label6:
        $r8 = <org.springframework.expression.Operation: org.springframework.expression.Operation POWER>;

        $r9 = virtualinvoke r3.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>($r8, $r5, $r7);

        return $r9;
    }
}
