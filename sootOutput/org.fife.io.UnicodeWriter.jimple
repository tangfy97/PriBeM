public class org.fife.io.UnicodeWriter extends java.io.Writer
{
    public static final java.lang.String PROPERTY_WRITE_UTF8_BOM;
    private java.io.OutputStreamWriter internalOut;
    private static final byte[] UTF8_BOM;
    private static final byte[] UTF16LE_BOM;
    private static final byte[] UTF16BE_BOM;
    private static final byte[] UTF32LE_BOM;
    private static final byte[] UTF32BE_BOM;

    public void <init>(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        org.fife.io.UnicodeWriter r0;
        java.io.FileOutputStream $r1;
        java.lang.String r2, r3;

        r0 := @this: org.fife.io.UnicodeWriter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.fife.io.UnicodeWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, r3);

        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        org.fife.io.UnicodeWriter r0;
        java.io.FileOutputStream $r1;
        java.lang.String r3;
        java.io.File r2;

        r0 := @this: org.fife.io.UnicodeWriter;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke r0.<org.fife.io.UnicodeWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, r3);

        return;
    }

    public void <init>(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.io.OutputStream r1;
        org.fife.io.UnicodeWriter r0;
        java.lang.String r2;

        r0 := @this: org.fife.io.UnicodeWriter;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        specialinvoke r0.<org.fife.io.UnicodeWriter: void init(java.io.OutputStream,java.lang.String)>(r1, r2);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStreamWriter $r1;
        org.fife.io.UnicodeWriter r0;

        r0 := @this: org.fife.io.UnicodeWriter;

        $r1 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        virtualinvoke $r1.<java.io.OutputStreamWriter: void close()>();

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStreamWriter $r1;
        org.fife.io.UnicodeWriter r0;

        r0 := @this: org.fife.io.UnicodeWriter;

        $r1 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        virtualinvoke $r1.<java.io.OutputStreamWriter: void flush()>();

        return;
    }

    public java.lang.String getEncoding()
    {
        java.io.OutputStreamWriter $r1;
        org.fife.io.UnicodeWriter r0;
        java.lang.String $r2;

        r0 := @this: org.fife.io.UnicodeWriter;

        $r1 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        $r2 = virtualinvoke $r1.<java.io.OutputStreamWriter: java.lang.String getEncoding()>();

        return $r2;
    }

    public static boolean getWriteUtf8BOM()
    {
        java.lang.Boolean $r1, $r2;
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("UnicodeWriter.writeUtf8BOM");

        if $r0 == null goto label1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private void init(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        byte[] $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.fife.io.UnicodeWriter r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.OutputStreamWriter $r1;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r8, $r11;
        java.io.OutputStream r2;

        r0 := @this: org.fife.io.UnicodeWriter;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r3);

        r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut> = $r1;

        $r4 = "UTF-8";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $z6 = staticinvoke <org.fife.io.UnicodeWriter: boolean getWriteUtf8BOM()>();

        if $z6 == 0 goto label6;

        $r19 = <org.fife.io.UnicodeWriter: byte[] UTF8_BOM>;

        $r18 = <org.fife.io.UnicodeWriter: byte[] UTF8_BOM>;

        $i4 = lengthof $r18;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r19, 0, $i4);

        goto label6;

     label1:
        $r5 = "UTF-16LE";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r17 = <org.fife.io.UnicodeWriter: byte[] UTF16LE_BOM>;

        $r16 = <org.fife.io.UnicodeWriter: byte[] UTF16LE_BOM>;

        $i3 = lengthof $r16;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r17, 0, $i3);

        goto label6;

     label2:
        $r6 = "UTF-16BE";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label3;

        $r15 = <org.fife.io.UnicodeWriter: byte[] UTF16BE_BOM>;

        $r14 = <org.fife.io.UnicodeWriter: byte[] UTF16BE_BOM>;

        $i2 = lengthof $r14;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r15, 0, $i2);

        goto label6;

     label3:
        $r7 = "UTF-32LE";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label4;

        $r13 = <org.fife.io.UnicodeWriter: byte[] UTF32LE_BOM>;

        $r12 = <org.fife.io.UnicodeWriter: byte[] UTF32LE_BOM>;

        $i1 = lengthof $r12;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r13, 0, $i1);

        goto label6;

     label4:
        $r8 = "UTF-32";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 != 0 goto label5;

        $r11 = "UTF-32BE";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label6;

     label5:
        $r10 = <org.fife.io.UnicodeWriter: byte[] UTF32BE_BOM>;

        $r9 = <org.fife.io.UnicodeWriter: byte[] UTF32BE_BOM>;

        $i0 = lengthof $r9;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r10, 0, $i0);

     label6:
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.fife.io.UnicodeWriter r0;
        int i0, i1;
        char[] r1;
        java.io.OutputStreamWriter $r2;

        r0 := @this: org.fife.io.UnicodeWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStreamWriter $r1;
        org.fife.io.UnicodeWriter r0;

        r0 := @this: org.fife.io.UnicodeWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        virtualinvoke $r1.<java.io.OutputStreamWriter: void write(int)>(i0);

        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.fife.io.UnicodeWriter r0;
        int i0, i1;
        java.io.OutputStreamWriter $r2;
        java.lang.String r1;

        r0 := @this: org.fife.io.UnicodeWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.fife.io.UnicodeWriter: java.io.OutputStreamWriter internalOut>;

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4;

        <org.fife.io.UnicodeWriter: java.lang.String PROPERTY_WRITE_UTF8_BOM> = "UnicodeWriter.writeUtf8BOM";

        $r0 = newarray (byte)[3];

        $r0[0] = -17;

        $r0[1] = -69;

        $r0[2] = -65;

        <org.fife.io.UnicodeWriter: byte[] UTF8_BOM> = $r0;

        $r1 = newarray (byte)[2];

        $r1[0] = -1;

        $r1[1] = -2;

        <org.fife.io.UnicodeWriter: byte[] UTF16LE_BOM> = $r1;

        $r2 = newarray (byte)[2];

        $r2[0] = -2;

        $r2[1] = -1;

        <org.fife.io.UnicodeWriter: byte[] UTF16BE_BOM> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = -1;

        $r3[1] = -2;

        $r3[2] = 0;

        $r3[3] = 0;

        <org.fife.io.UnicodeWriter: byte[] UTF32LE_BOM> = $r3;

        $r4 = newarray (byte)[4];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = -2;

        $r4[3] = -1;

        <org.fife.io.UnicodeWriter: byte[] UTF32BE_BOM> = $r4;

        return;
    }
}
