public abstract class org.apache.cxf.BusFactory extends java.lang.Object
{
    public static final java.lang.String BUS_FACTORY_PROPERTY_NAME;
    public static final java.lang.String DEFAULT_BUS_FACTORY;
    protected static org.apache.cxf.Bus defaultBus;
    protected static final java.util.Map THREAD_BUSSES;
    protected static final java.lang.ThreadLocal THREAD_BUS;
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.BusFactory r0;

        r0 := @this: org.apache.cxf.BusFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.apache.cxf.Bus createBus();

    public static synchronized org.apache.cxf.Bus getDefaultBus()
    {
        org.apache.cxf.Bus $r0;

        $r0 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getDefaultBus(boolean)>(1);

        return $r0;
    }

    public static synchronized org.apache.cxf.Bus getDefaultBus(boolean)
    {
        org.apache.cxf.Bus $r0, $r1, $r3, $r4;
        org.apache.cxf.BusFactory $r2;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus>;

        if $r0 != null goto label1;

        if z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory newInstance()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.BusFactory: org.apache.cxf.Bus createBus()>();

        <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus> = $r3;

     label1:
        $r4 = <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus>;

        if $r4 != null goto label2;

        return null;

     label2:
        $r1 = <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus>;

        return $r1;
    }

    private static org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)
    {
        java.lang.Throwable $r11, $r12;
        java.lang.Thread $r2;
        java.util.Map $r3, $r4, $r7, $r8;
        boolean z0, $z1, $z2;
        java.lang.ThreadLocal $r0, $r9;
        org.apache.cxf.BusFactory$BusHolder $r6, $r10, r13;
        java.lang.Object $r1, $r5;

        z0 := @parameter0: boolean;

        $r0 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r13 = (org.apache.cxf.BusFactory$BusHolder) $r1;

        if r13 == null goto label01;

        $z2 = r13.<org.apache.cxf.BusFactory$BusHolder: boolean stale>;

        if $z2 == 0 goto label13;

     label01:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r3;

     label02:
        $r4 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r10 = (org.apache.cxf.BusFactory$BusHolder) $r5;

        r13 = $r10;

        exitmonitor $r3;

     label03:
        goto label06;

     label04:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label05:
        throw $r12;

     label06:
        if $r10 == null goto label07;

        $z1 = $r10.<org.apache.cxf.BusFactory$BusHolder: boolean stale>;

        if $z1 == 0 goto label12;

     label07:
        $r6 = new org.apache.cxf.BusFactory$BusHolder;

        specialinvoke $r6.<org.apache.cxf.BusFactory$BusHolder: void <init>()>();

        r13 = $r6;

        $r7 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r7;

     label08:
        $r8 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r6);

        exitmonitor $r7;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        exitmonitor $r7;

     label11:
        throw $r11;

     label12:
        if z0 == 0 goto label13;

        $r9 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(r13);

     label13:
        return r13;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static synchronized void setDefaultBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r0;
        org.apache.cxf.BusFactory$BusHolder $r1;
        java.lang.ThreadLocal $r2;

        r0 := @parameter0: org.apache.cxf.Bus;

        <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus> = r0;

        $r1 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(0);

        $r1.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = r0;

        if r0 != null goto label1;

        $r1.<org.apache.cxf.BusFactory$BusHolder: boolean stale> = 1;

        $r2 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void remove()>();

     label1:
        return;
    }

    public static void setThreadDefaultBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r0;
        java.lang.Throwable $r9;
        java.lang.ThreadLocal $r2, $r4;
        java.lang.Thread $r5;
        java.util.Map $r6, $r7;
        org.apache.cxf.BusFactory$BusHolder $r1, r10;
        java.lang.Object $r3, $r8;

        r0 := @parameter0: org.apache.cxf.Bus;

        if r0 != null goto label7;

        $r2 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r10 = (org.apache.cxf.BusFactory$BusHolder) $r3;

        if r10 != null goto label5;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r6;

     label1:
        $r7 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r10 = (org.apache.cxf.BusFactory$BusHolder) $r8;

        exitmonitor $r6;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r6;

     label4:
        throw $r9;

     label5:
        if r10 == null goto label6;

        r10.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = null;

        r10.<org.apache.cxf.BusFactory$BusHolder: boolean stale> = 1;

        $r4 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void remove()>();

     label6:
        goto label8;

     label7:
        $r1 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(1);

        $r1.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = r0;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r0, r11, r12;
        java.lang.Throwable $r9;
        java.lang.ThreadLocal $r2, $r4;
        java.lang.Thread $r5;
        java.util.Map $r6, $r7;
        org.apache.cxf.BusFactory$BusHolder $r1, r10;
        java.lang.Object $r3, $r8;

        r0 := @parameter0: org.apache.cxf.Bus;

        if r0 != null goto label7;

        $r2 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        r10 = (org.apache.cxf.BusFactory$BusHolder) $r3;

        if r10 != null goto label5;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r6;

     label1:
        $r7 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r10 = (org.apache.cxf.BusFactory$BusHolder) $r8;

        exitmonitor $r6;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r6;

     label4:
        throw $r9;

     label5:
        if r10 == null goto label6;

        r11 = r10.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        r10.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = null;

        r10.<org.apache.cxf.BusFactory$BusHolder: boolean stale> = 1;

        $r4 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void remove()>();

        return r11;

     label6:
        return null;

     label7:
        $r1 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(1);

        r12 = $r1.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        $r1.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = r0;

        return r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static org.apache.cxf.Bus getThreadDefaultBus()
    {
        org.apache.cxf.Bus $r0;

        $r0 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus(boolean)>(1);

        return $r0;
    }

    public static org.apache.cxf.Bus getThreadDefaultBus(boolean)
    {
        org.apache.cxf.Bus $r7, $r8, $r9, $r12;
        java.lang.Throwable $r10;
        java.lang.Thread $r2;
        java.util.Map $r3, $r4;
        boolean z0, $z1, $z2;
        java.lang.ThreadLocal $r0;
        org.apache.cxf.BusFactory$BusHolder $r6, r11;
        java.lang.Object $r1, $r5;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label02;

        $r6 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(0);

        $r7 = $r6.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        if $r7 != null goto label01;

        $r9 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus createThreadBus()>();

        $r6.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = $r9;

     label01:
        $r8 = $r6.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        return $r8;

     label02:
        $r0 = <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r11 = (org.apache.cxf.BusFactory$BusHolder) $r1;

        if r11 == null goto label03;

        $z2 = r11.<org.apache.cxf.BusFactory$BusHolder: boolean stale>;

        if $z2 == 0 goto label08;

     label03:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r3;

     label04:
        $r4 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r11 = (org.apache.cxf.BusFactory$BusHolder) $r5;

        exitmonitor $r3;

     label05:
        goto label08;

     label06:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label07:
        throw $r10;

     label08:
        if r11 == null goto label09;

        $z1 = r11.<org.apache.cxf.BusFactory$BusHolder: boolean stale>;

        if $z1 == 0 goto label10;

     label09:
        $r12 = null;

        goto label11;

     label10:
        $r12 = r11.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

     label11:
        return $r12;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private static synchronized org.apache.cxf.Bus createThreadBus()
    {
        org.apache.cxf.Bus $r1, $r2, $r3;
        org.apache.cxf.BusFactory$BusHolder $r0;

        $r0 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(0);

        $r1 = $r0.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getDefaultBus(boolean)>(1);

        $r0.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = $r3;

     label1:
        $r2 = $r0.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        return $r2;
    }

    public static void clearDefaultBusForAnyThread(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r6, $r7, $r8;
        java.lang.Throwable $r9;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.Map $r0, $r1;
        org.apache.cxf.BusFactory$BusHolder r5;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;

        r6 := @parameter0: org.apache.cxf.Bus;

        $r0 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        entermonitor $r0;

     label01:
        $r1 = <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.cxf.BusFactory$BusHolder) $r4;

        if r6 == null goto label03;

        if r5 == null goto label03;

        $r7 = r5.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        if $r7 == null goto label03;

        $z1 = r5.<org.apache.cxf.BusFactory$BusHolder: boolean stale>;

        if $z1 != 0 goto label03;

        $r8 = r5.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        $z2 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label05;

     label03:
        if r5 == null goto label04;

        r5.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = null;

        r5.<org.apache.cxf.BusFactory$BusHolder: boolean stale> = 1;

     label04:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

     label05:
        goto label02;

     label06:
        exitmonitor $r0;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r9;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static synchronized boolean possiblySetDefaultBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus $r1, $r2, r3;
        org.apache.cxf.BusFactory$BusHolder $r0;

        r3 := @parameter0: org.apache.cxf.Bus;

        $r0 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)>(0);

        $r1 = $r0.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus>;

        if $r1 != null goto label1;

        $r0.<org.apache.cxf.BusFactory$BusHolder: org.apache.cxf.Bus bus> = r3;

     label1:
        $r2 = <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus>;

        if $r2 != null goto label2;

        <org.apache.cxf.BusFactory: org.apache.cxf.Bus defaultBus> = r3;

        return 1;

     label2:
        return 0;
    }

    public static org.apache.cxf.BusFactory newInstance()
    {
        org.apache.cxf.BusFactory $r0;

        $r0 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.BusFactory newInstance(java.lang.String)>(null);

        return $r0;
    }

    public static org.apache.cxf.BusFactory newInstance(java.lang.String)
    {
        java.util.logging.Level $r12;
        java.lang.Thread $r4;
        java.lang.String $r6, r15;
        java.lang.RuntimeException $r14;
        java.util.logging.Logger $r13;
        java.lang.Exception $r11;
        org.apache.cxf.BusFactory $r3;
        java.lang.Class $r0, $r1, $r7, $r9;
        java.lang.Object $r2;
        java.lang.ClassLoader $r5, $r8, $r10;

        r15 := @parameter0: java.lang.String;

        if r15 != null goto label1;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke $r4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r6 = staticinvoke <org.apache.cxf.BusFactory: java.lang.String getBusFactoryClass(java.lang.ClassLoader)>($r5);

        r15 = $r6;

        if $r6 != null goto label1;

        $r7 = class "Lorg/apache/cxf/BusFactory;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r5 == $r8 goto label1;

        $r9 = class "Lorg/apache/cxf/BusFactory;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r15 = staticinvoke <org.apache.cxf.BusFactory: java.lang.String getBusFactoryClass(java.lang.ClassLoader)>($r10);

     label1:
        if r15 != null goto label2;

        r15 = "org.apache.cxf.bus.CXFBusFactory";

     label2:
        $r0 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r15, class "Lorg/apache/cxf/BusFactory;");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/cxf/BusFactory;");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.apache.cxf.BusFactory) $r2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r13 = <org.apache.cxf.BusFactory: java.util.logging.Logger LOG>;

        $r12 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r13, $r12, "BUS_FACTORY_INSTANTIATION_EXC", $r11);

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r11);

        throw $r14;

     label5:
        return $r3;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void initializeBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.BusFactory r0;

        r0 := @this: org.apache.cxf.BusFactory;

        r1 := @parameter0: org.apache.cxf.Bus;

        return;
    }

    private static java.lang.String getBusFactoryClass(java.lang.ClassLoader)
    {
        java.lang.Throwable $r16;
        java.util.logging.Level $r12;
        java.lang.Thread $r9, $r10;
        int $i0, i1, $i3;
        java.lang.String $r0, $r5, $r6, r18, r19;
        java.lang.NoClassDefFoundError $r14;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r13;
        java.io.InputStreamReader $r22;
        java.lang.Exception $r11;
        java.lang.Class $r1, $r2;
        java.lang.ClassNotFoundException $r15;
        java.lang.ClassLoader $r3, $r4, r17;
        java.io.BufferedReader r21, $r23;
        java.io.InputStream r20;

        r17 := @parameter0: java.lang.ClassLoader;

        r18 = null;

        $r0 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getPropertyOrNull(java.lang.String)>("org.apache.cxf.bus.factory");

        r19 = $r0;

        $z0 = staticinvoke <org.apache.cxf.BusFactory: boolean isValidBusFactoryClass(java.lang.String)>($r0);

        if $z0 == 0 goto label01;

        return $r0;

     label01:
        if r17 != null goto label02;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r17 = virtualinvoke $r10.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label02:
        if r17 != null goto label03;

        r20 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("META-INF/services/org.apache.cxf.bus.factory");

        goto label04;

     label03:
        r20 = virtualinvoke r17.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("META-INF/services/org.apache.cxf.bus.factory");

     label04:
        if r20 != null goto label07;

        if r17 != null goto label05;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r17 = virtualinvoke $r9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label05:
        if r17 != null goto label06;

        r20 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("META-INF/cxf/org.apache.cxf.bus.factory");

        goto label07;

     label06:
        r20 = virtualinvoke r17.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("META-INF/cxf/org.apache.cxf.bus.factory");

     label07:
        if r20 == null goto label13;

        r21 = null;

     label08:
        $r23 = new java.io.BufferedReader;

        $r22 = new java.io.InputStreamReader;

        specialinvoke $r22.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r20, "UTF-8");

        specialinvoke $r23.<java.io.BufferedReader: void <init>(java.io.Reader)>($r22);

        r21 = $r23;

        r19 = virtualinvoke $r23.<java.io.BufferedReader: java.lang.String readLine()>();

        r18 = virtualinvoke $r23.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r23 == null goto label13;

        virtualinvoke $r23.<java.io.BufferedReader: void close()>();

        goto label13;

     label10:
        $r16 := @caughtexception;

     label11:
        if r21 == null goto label12;

        virtualinvoke r21.<java.io.BufferedReader: void close()>();

     label12:
        throw $r16;

     label13:
        $z2 = staticinvoke <org.apache.cxf.BusFactory: boolean isValidBusFactoryClass(java.lang.String)>(r19);

        if $z2 == 0 goto label21;

        if r18 == null goto label21;

     label14:
        $r1 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r19, class "Lorg/apache/cxf/BusFactory;");

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/cxf/BusFactory;");

        $z1 = virtualinvoke r18.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 == 0 goto label15;

        r18 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>(1);

     label15:
        i1 = virtualinvoke r18.<java.lang.String: int indexOf(int)>(44);

     label16:
        $i3 = (int) -1;

        if i1 == $i3 goto label17;

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r5);

        $i0 = i1 + 1;

        $r6 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>($i0);

        r18 = $r6;

        i1 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(44);

        goto label16;

     label17:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r18);

     label18:
        goto label21;

     label19:
        $r15 := @caughtexception;

        r19 = "org.apache.cxf.bus.CXFBusFactory";

        goto label21;

     label20:
        $r14 := @caughtexception;

        r19 = "org.apache.cxf.bus.CXFBusFactory";

     label21:
        return r19;

     label22:
        $r11 := @caughtexception;

        $r13 = <org.apache.cxf.BusFactory: java.util.logging.Logger LOG>;

        $r12 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r13, $r12, "FAILED_TO_DETERMINE_BUS_FACTORY_EXC", $r11);

        return r19;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.ClassNotFoundException from label14 to label18 with label19;
        catch java.lang.NoClassDefFoundError from label14 to label18 with label20;
        catch java.lang.Exception from label01 to label21 with label22;
    }

    private static boolean isValidBusFactoryClass(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r1;
        java.util.logging.Logger $r2;
        java.util.WeakHashMap $r0;

        <org.apache.cxf.BusFactory: java.lang.String DEFAULT_BUS_FACTORY> = "org.apache.cxf.bus.CXFBusFactory";

        <org.apache.cxf.BusFactory: java.lang.String BUS_FACTORY_PROPERTY_NAME> = "org.apache.cxf.bus.factory";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <org.apache.cxf.BusFactory: java.util.Map THREAD_BUSSES> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.cxf.BusFactory: java.lang.ThreadLocal THREAD_BUS> = $r1;

        $r2 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/BusFactory;");

        <org.apache.cxf.BusFactory: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
