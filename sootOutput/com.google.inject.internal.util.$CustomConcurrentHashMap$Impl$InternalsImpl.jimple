class com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl extends java.lang.Object implements com.google.inject.internal.util.$CustomConcurrentHashMap$Internals, java.io.Serializable
{
    static final long serialVersionUID;
    final com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0;

    void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Impl)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl r1;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl;

        r1 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getEntry(java.lang.Object)
    {
        java.lang.NullPointerException $r6;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl $r2, $r3;
        int $i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment $r4;
        java.lang.Object r0, $r5;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl r1;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key");

        throw $r6;

     label1:
        $r2 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $i0 = virtualinvoke $r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: int hash(java.lang.Object)>(r0);

        $r3 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment segmentFor(int)>($i0);

        $r5 = virtualinvoke $r4.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: java.lang.Object getEntry(java.lang.Object,int)>(r0, $i0);

        return $r5;
    }

    public boolean removeEntry(java.lang.Object, java.lang.Object)
    {
        java.lang.NullPointerException $r7;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy $r3;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl $r2, $r4;
        int $i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment $r5;
        java.lang.Object r0, r6;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl r1;
        boolean $z0;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("entry");

        throw $r7;

     label1:
        $r2 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r3 = $r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy strategy>;

        $i0 = interfaceinvoke $r3.<com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy: int getHash(java.lang.Object)>(r0);

        $r4 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r5 = virtualinvoke $r4.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment segmentFor(int)>($i0);

        $z0 = virtualinvoke $r5.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: boolean removeEntry(java.lang.Object,int,java.lang.Object)>(r0, $i0, r6);

        return $z0;
    }

    public boolean removeEntry(java.lang.Object)
    {
        java.lang.NullPointerException $r6;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy $r3;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl $r2, $r4;
        int $i0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment $r5;
        java.lang.Object r0;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl r1;
        boolean $z0;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("entry");

        throw $r6;

     label1:
        $r2 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r3 = $r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy strategy>;

        $i0 = interfaceinvoke $r3.<com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy: int getHash(java.lang.Object)>(r0);

        $r4 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r5 = virtualinvoke $r4.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment segmentFor(int)>($i0);

        $z0 = virtualinvoke $r5.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: boolean removeEntry(java.lang.Object,int)>(r0, $i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: long serialVersionUID> = 0L;

        return;
    }
}
