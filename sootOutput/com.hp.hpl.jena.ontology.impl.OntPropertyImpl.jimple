public class com.hp.hpl.jena.ontology.impl.OntPropertyImpl extends com.hp.hpl.jena.ontology.impl.OntResourceImpl implements com.hp.hpl.jena.ontology.OntProperty
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public boolean isProperty()
    {
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        return 1;
    }

    public int getOrdinal()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.Property $r2;
        int $i0;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Property;");

        $r2 = (com.hp.hpl.jena.rdf.model.Property) $r1;

        $i0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Property: int getOrdinal()>();

        return $i0;
    }

    public void setSuperProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_PROPERTY_OF", r3);

        return;
    }

    public void addSuperProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_PROPERTY_OF", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntProperty getSuperProperty()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.OntProperty objectAsProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "SUB_PROPERTY_OF");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperProperties()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperProperties(boolean)
    {
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter $r6;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDirectPropertyValues(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class,com.hp.hpl.jena.rdf.model.Property,boolean,boolean)>($r2, "SUB_PROPERTY_OF", class "Lcom/hp/hpl/jena/ontology/OntProperty;", $r4, z0, 0);

        $r6 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SingleEqualityFilter: void <init>(com.hp.hpl.jena.ontology.impl.OntResourceImpl,java.lang.Object)>(r0, r0);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        return $r7;
    }

    public boolean hasSuperProperty(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_PROPERTY_OF", r3);

        return $z0;
    }

    public void removeSuperProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "SUB_PROPERTY_OF", r3);

        return;
    }

    public void setSubProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r8;
        com.hp.hpl.jena.ontology.OntProperty $r9;
        com.hp.hpl.jena.ontology.Profile $r1, $r4;
        com.hp.hpl.jena.rdf.model.StmtIterator $r6;
        com.hp.hpl.jena.rdf.model.Property $r2, $r5, r7;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "SUB_PROPERTY_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r5, r0);

     label1:
        $z0 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: java.lang.Object removeNext()>();

        goto label1;

     label2:
        $r8 = interfaceinvoke r7.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r9 = (com.hp.hpl.jena.ontology.OntProperty) $r8;

        interfaceinvoke $r9.<com.hp.hpl.jena.ontology.OntProperty: void addSuperProperty(com.hp.hpl.jena.rdf.model.Property)>(r0);

        return;
    }

    public void addSubProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.Property r0;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r2;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = (com.hp.hpl.jena.ontology.OntProperty) $r1;

        interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntProperty: void addSuperProperty(com.hp.hpl.jena.rdf.model.Property)>(r2);

        return;
    }

    public com.hp.hpl.jena.ontology.OntProperty getSubProperty()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r9;
        com.hp.hpl.jena.ontology.OntProperty $r10;
        com.hp.hpl.jena.ontology.Profile $r1, $r4;
        com.hp.hpl.jena.rdf.model.Statement $r7;
        com.hp.hpl.jena.rdf.model.Resource $r8;
        com.hp.hpl.jena.rdf.model.StmtIterator $r6;
        com.hp.hpl.jena.rdf.model.Property $r2, $r5;
        com.hp.hpl.jena.rdf.model.Model $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void checkProfile(java.lang.Object,java.lang.String)>($r2, "SUB_PROPERTY_OF");

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r6 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r5, r0);

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Resource getSubject()>();

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r10 = (com.hp.hpl.jena.ontology.OntProperty) $r9;

        return $r10;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubProperties()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubProperties(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listSubProperties(boolean)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        com.hp.hpl.jena.rdf.model.Property $r2, $r4;
        com.hp.hpl.jena.ontology.Profile $r1, $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDirectPropertyValues(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class,com.hp.hpl.jena.rdf.model.Property,boolean,boolean)>($r2, "SUB_PROPERTY_OF", class "Lcom/hp/hpl/jena/ontology/OntProperty;", $r4, z0, 1);

        return $r5;
    }

    public boolean hasSubProperty(com.hp.hpl.jena.rdf.model.Property, boolean)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.Property r0;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r2;
        boolean z0, $z1;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        z0 := @parameter1: boolean;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = (com.hp.hpl.jena.ontology.OntProperty) $r1;

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntProperty: boolean hasSuperProperty(com.hp.hpl.jena.rdf.model.Property,boolean)>(r2, z0);

        return $z1;
    }

    public void removeSubProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.rdf.model.Property r0;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r2;

        r2 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r3 = (com.hp.hpl.jena.ontology.OntProperty) $r1;

        interfaceinvoke $r3.<com.hp.hpl.jena.ontology.OntProperty: void removeSuperProperty(com.hp.hpl.jena.rdf.model.Property)>(r2);

        return;
    }

    public void setDomain(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DOMAIN", r3);

        return;
    }

    public void addDomain(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DOMAIN", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getDomain()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "DOMAIN");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDomain()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "DOMAIN", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        return $r3;
    }

    public boolean hasDomain(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DOMAIN", r3);

        return $z0;
    }

    public void removeDomain(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property DOMAIN()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "DOMAIN", r3);

        return;
    }

    public void setRange(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "RANGE", r3);

        return;
    }

    public void addRange(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "RANGE", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntResource getRange()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.ontology.OntResource $r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.OntResource objectAsResource(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "RANGE");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listRange()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "RANGE", class "Lcom/hp/hpl/jena/ontology/OntClass;");

        return $r3;
    }

    public boolean hasRange(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "RANGE", r3);

        return $z0;
    }

    public void removeRange(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource r3;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property RANGE()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "RANGE", r3);

        return;
    }

    public void setEquivalentProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_PROPERTY", r3);

        return;
    }

    public void addEquivalentProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_PROPERTY", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntProperty getEquivalentProperty()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.OntProperty objectAsProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "EQUIVALENT_PROPERTY");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listEquivalentProperties()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "EQUIVALENT_PROPERTY", class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        return $r3;
    }

    public boolean hasEquivalentProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_PROPERTY", r3);

        return $z0;
    }

    public void removeEquivalentProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "EQUIVALENT_PROPERTY", r3);

        return;
    }

    public void setInverseOf(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INVERSE_OF", r3);

        return;
    }

    public void addInverseOf(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void addPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INVERSE_OF", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.OntProperty getInverseOf()
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.OntProperty objectAsProperty(com.hp.hpl.jena.rdf.model.Property,java.lang.String)>($r2, "INVERSE_OF");

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listInverseOf()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "INVERSE_OF", class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        return $r3;
    }

    public boolean isInverseOf(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INVERSE_OF", r3);

        return $z0;
    }

    public void removeInverseProperty(com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property $r2, r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: void removePropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "INVERSE_OF", r3);

        return;
    }

    public com.hp.hpl.jena.ontology.FunctionalProperty asFunctionalProperty()
    {
        com.hp.hpl.jena.ontology.FunctionalProperty $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/FunctionalProperty;");

        $r2 = (com.hp.hpl.jena.ontology.FunctionalProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.DatatypeProperty asDatatypeProperty()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.ontology.DatatypeProperty $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/DatatypeProperty;");

        $r2 = (com.hp.hpl.jena.ontology.DatatypeProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.ObjectProperty asObjectProperty()
    {
        com.hp.hpl.jena.ontology.ObjectProperty $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/ObjectProperty;");

        $r2 = (com.hp.hpl.jena.ontology.ObjectProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.TransitiveProperty asTransitiveProperty()
    {
        com.hp.hpl.jena.ontology.TransitiveProperty $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/TransitiveProperty;");

        $r2 = (com.hp.hpl.jena.ontology.TransitiveProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.InverseFunctionalProperty asInverseFunctionalProperty()
    {
        com.hp.hpl.jena.ontology.InverseFunctionalProperty $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/InverseFunctionalProperty;");

        $r2 = (com.hp.hpl.jena.ontology.InverseFunctionalProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.SymmetricProperty asSymmetricProperty()
    {
        com.hp.hpl.jena.ontology.SymmetricProperty $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode as(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/SymmetricProperty;");

        $r2 = (com.hp.hpl.jena.ontology.SymmetricProperty) $r1;

        return $r2;
    }

    public com.hp.hpl.jena.ontology.FunctionalProperty convertToFunctionalProperty()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.FunctionalProperty $r4;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "FUNCTIONAL_PROPERTY", class "Lcom/hp/hpl/jena/ontology/FunctionalProperty;");

        $r4 = (com.hp.hpl.jena.ontology.FunctionalProperty) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.DatatypeProperty convertToDatatypeProperty()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.DatatypeProperty $r4;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "DATATYPE_PROPERTY", class "Lcom/hp/hpl/jena/ontology/DatatypeProperty;");

        $r4 = (com.hp.hpl.jena.ontology.DatatypeProperty) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.ObjectProperty convertToObjectProperty()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.ObjectProperty $r4;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "OBJECT_PROPERTY", class "Lcom/hp/hpl/jena/ontology/ObjectProperty;");

        $r4 = (com.hp.hpl.jena.ontology.ObjectProperty) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.TransitiveProperty convertToTransitiveProperty()
    {
        com.hp.hpl.jena.ontology.TransitiveProperty $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "TRANSITIVE_PROPERTY", class "Lcom/hp/hpl/jena/ontology/TransitiveProperty;");

        $r4 = (com.hp.hpl.jena.ontology.TransitiveProperty) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty()
    {
        com.hp.hpl.jena.ontology.InverseFunctionalProperty $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "INVERSE_FUNCTIONAL_PROPERTY", class "Lcom/hp/hpl/jena/ontology/InverseFunctionalProperty;");

        $r4 = (com.hp.hpl.jena.ontology.InverseFunctionalProperty) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.ontology.SymmetricProperty convertToSymmetricProperty()
    {
        com.hp.hpl.jena.ontology.SymmetricProperty $r4;
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.RDFNode convertToType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.Class)>($r2, "SYMMETRIC_PROPERTY", class "Lcom/hp/hpl/jena/ontology/SymmetricProperty;");

        $r4 = (com.hp.hpl.jena.ontology.SymmetricProperty) $r3;

        return $r4;
    }

    public boolean isFunctionalProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "FUNCTIONAL_PROPERTY", 0);

        return $z0;
    }

    public boolean isDatatypeProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "DATATYPE_PROPERTY", 0);

        return $z0;
    }

    public boolean isObjectProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "OBJECT_PROPERTY", 0);

        return $z0;
    }

    public boolean isTransitiveProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "TRANSITIVE_PROPERTY", 0);

        return $z0;
    }

    public boolean isInverseFunctionalProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "INVERSE_FUNCTIONAL_PROPERTY", 0);

        return $z0;
    }

    public boolean isSymmetricProperty()
    {
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()>();

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: boolean hasRDFType(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,boolean)>($r2, "SYMMETRIC_PROPERTY", 0);

        return $z0;
    }

    public com.hp.hpl.jena.ontology.OntProperty getInverse()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        com.hp.hpl.jena.ontology.OntProperty $r3;
        java.lang.Object $r2;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listInverse()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: java.lang.Object next()>();

        $r3 = (com.hp.hpl.jena.ontology.OntProperty) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        return $r3;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listInverse()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.ontology.Profile $r2;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper $r5;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property INVERSE_OF()>();

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r3, r0);

        $r5 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper;

        specialinvoke $r5.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/OntProperty;");

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r5);

        return $r6;
    }

    public boolean hasInverse()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listInverse()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: boolean hasNext()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>();

        return $z0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaringClasses()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)>(0);

        return $r1;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean)
    {
        java.util.ArrayList $r15;
        java.util.HashSet $r0;
        com.hp.hpl.jena.ontology.OntClass r18;
        com.hp.hpl.jena.ontology.OntModel $r8, $r11;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl$2 $r13;
        java.util.Iterator $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass $r5;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r4, $r6, $r9, $r12, $r14, $r19;
        com.hp.hpl.jena.rdf.model.Model $r7, $r10;
        java.lang.Object $r16, $r17, $r20;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r1;

        r1 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        z2 := @parameter0: boolean;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.util.iterator.ExtendedIterator listDomain()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

     label2:
        $z3 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(0);

        r18 = (com.hp.hpl.jena.ontology.OntClass) $r17;

        $z4 = interfaceinvoke r18.<com.hp.hpl.jena.ontology.OntClass: boolean isOntLanguageTerm()>();

        if $z4 != 0 goto label4;

        $z5 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>(r18);

        if $z5 != 0 goto label4;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r18);

        $r19 = interfaceinvoke r18.<com.hp.hpl.jena.ontology.OntClass: com.hp.hpl.jena.util.iterator.ExtendedIterator listSubClasses()>();

     label3:
        $z6 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label4;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label3;

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        $z1 = interfaceinvoke $r0.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label8;

        if z2 != 0 goto label7;

        $r10 = virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r11 = (com.hp.hpl.jena.ontology.OntModel) $r10;

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.util.iterator.ExtendedIterator listClasses()>();

        $r13 = new com.hp.hpl.jena.ontology.impl.OntPropertyImpl$2;

        specialinvoke $r13.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl$2: void <init>(com.hp.hpl.jena.ontology.impl.OntPropertyImpl)>(r1);

        $r14 = interfaceinvoke $r12.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r13);

        return $r14;

     label7:
        $r7 = virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r8 = (com.hp.hpl.jena.ontology.OntModel) $r7;

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.ontology.OntModel: com.hp.hpl.jena.util.iterator.ExtendedIterator listHierarchyRootClasses()>();

        return $r9;

     label8:
        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r3);

        $r5 = new com.hp.hpl.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass;

        specialinvoke $r5.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl$FilterDeclaringClass: void <init>(com.hp.hpl.jena.ontology.impl.OntPropertyImpl,com.hp.hpl.jena.rdf.model.Property,boolean,com.hp.hpl.jena.ontology.impl.OntPropertyImpl$1)>(r1, r1, z2, null);

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterKeep(com.hp.hpl.jena.util.iterator.Filter)>($r5);

        return $r6;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listReferringRestrictions()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r6;
        com.hp.hpl.jena.rdf.model.StmtIterator $r4;
        com.hp.hpl.jena.rdf.model.Property $r3;
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.ontology.Profile $r2;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper $r5;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()>();

        $r4 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>(null, $r3, r0);

        $r5 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper;

        specialinvoke $r5.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$SubjectAsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/ontology/Restriction;");

        $r6 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r5);

        return $r6;
    }

    public com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Property $r4;
        com.hp.hpl.jena.rdf.model.Model $r1, r2;
        java.lang.String $r3;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Model getModel()>();

        if $r1 != r2 goto label1;

        $r4 = r0;

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: java.lang.String getURI()>();

        $r4 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>($r3);

     label2:
        return $r4;
    }

    public volatile com.hp.hpl.jena.rdf.model.Resource inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r2;
    }

    public volatile com.hp.hpl.jena.rdf.model.RDFNode inModel(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl r0;
        com.hp.hpl.jena.rdf.model.Property $r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntPropertyImpl;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.rdf.model.Property inModel(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.OntPropertyImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.OntPropertyImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.OntPropertyImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.OntPropertyImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
