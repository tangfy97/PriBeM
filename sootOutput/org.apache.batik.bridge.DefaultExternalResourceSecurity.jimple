public class org.apache.batik.bridge.DefaultExternalResourceSecurity extends java.lang.Object implements org.apache.batik.bridge.ExternalResourceSecurity
{
    public static final java.lang.String DATA_PROTOCOL;
    public static final java.lang.String ERROR_CANNOT_ACCESS_DOCUMENT_URL;
    public static final java.lang.String ERROR_EXTERNAL_RESOURCE_FROM_DIFFERENT_URL;
    protected java.lang.SecurityException se;

    public void checkLoadExternalResource()
    {
        org.apache.batik.bridge.DefaultExternalResourceSecurity r0;
        java.lang.SecurityException $r1, $r2, $r3;

        r0 := @this: org.apache.batik.bridge.DefaultExternalResourceSecurity;

        $r1 = r0.<org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.SecurityException se>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.SecurityException se>;

        virtualinvoke $r2.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        $r3 = r0.<org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.SecurityException se>;

        throw $r3;

     label1:
        return;
    }

    public void <init>(org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL)
    {
        java.lang.Object[] $r6, $r11;
        org.apache.batik.bridge.DefaultExternalResourceSecurity r0;
        org.apache.batik.util.ParsedURL r1, r3;
        java.lang.SecurityException $r5, $r10;
        java.lang.String $r2, $r4, $r7, $r8, $r9, $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.DefaultExternalResourceSecurity;

        r3 := @parameter0: org.apache.batik.util.ParsedURL;

        r1 := @parameter1: org.apache.batik.util.ParsedURL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r10 = new java.lang.SecurityException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r3;

        $r12 = staticinvoke <org.apache.batik.bridge.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("DefaultExternalResourceSecurity.error.cannot.access.document.url", $r11);

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        r0.<org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.SecurityException se> = $r10;

        goto label4;

     label1:
        $r2 = virtualinvoke r1.<org.apache.batik.util.ParsedURL: java.lang.String getHost()>();

        $r4 = virtualinvoke r3.<org.apache.batik.util.ParsedURL: java.lang.String getHost()>();

        if $r2 == $r4 goto label4;

        if $r2 == null goto label2;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

     label2:
        if r3 == null goto label3;

        $r8 = "data";

        $r9 = virtualinvoke r3.<org.apache.batik.util.ParsedURL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label4;

     label3:
        $r5 = new java.lang.SecurityException;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r7 = staticinvoke <org.apache.batik.bridge.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("DefaultExternalResourceSecurity.error.external.resource.from.different.url", $r6);

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r7);

        r0.<org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.SecurityException se> = $r5;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.String ERROR_EXTERNAL_RESOURCE_FROM_DIFFERENT_URL> = "DefaultExternalResourceSecurity.error.external.resource.from.different.url";

        <org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.String ERROR_CANNOT_ACCESS_DOCUMENT_URL> = "DefaultExternalResourceSecurity.error.cannot.access.document.url";

        <org.apache.batik.bridge.DefaultExternalResourceSecurity: java.lang.String DATA_PROTOCOL> = "data";

        return;
    }
}
