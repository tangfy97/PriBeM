public class org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl extends javax.swing.JPanel implements org.wiztools.restclient.ui.resheader.ResHeaderPanel
{
    private org.wiztools.restclient.ui.RESTView view;
    private javax.swing.JTable jt_res_headers;
    private org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel resHeaderTableModel;

    public void <init>()
    {
        javax.swing.JTable $r1;
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel $r2;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.JTable;

        specialinvoke $r1.<javax.swing.JTable: void <init>()>();

        r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers> = $r1;

        $r2 = new org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel;

        specialinvoke $r2.<org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel: void <init>()>();

        r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel resHeaderTableModel> = $r2;

        return;
    }

    protected void init()
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl$1 $r4;
        java.awt.GridLayout $r1, $r3;
        javax.swing.JScrollPane $r8;
        java.awt.Dimension $r10;
        int $i0, $i1;
        javax.swing.JTable $r5, $r7, $r9;
        org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel $r6;
        javax.swing.JPanel $r2;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        $r1 = new java.awt.GridLayout;

        specialinvoke $r1.<java.awt.GridLayout: void <init>()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: void setLayout(java.awt.LayoutManager)>($r1);

        $r2 = new javax.swing.JPanel;

        specialinvoke $r2.<javax.swing.JPanel: void <init>()>();

        $r3 = new java.awt.GridLayout;

        specialinvoke $r3.<java.awt.GridLayout: void <init>(int,int)>(1, 1);

        virtualinvoke $r2.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r3);

        $r5 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        $r4 = new org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl$1;

        specialinvoke $r4.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl$1: void <init>(org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl)>(r0);

        virtualinvoke $r5.<javax.swing.JTable: void addMouseListener(java.awt.event.MouseListener)>($r4);

        $r7 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        $r6 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel resHeaderTableModel>;

        virtualinvoke $r7.<javax.swing.JTable: void setModel(javax.swing.table.TableModel)>($r6);

        $r8 = new javax.swing.JScrollPane;

        $r9 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        specialinvoke $r8.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r9);

        $r10 = virtualinvoke $r8.<javax.swing.JScrollPane: java.awt.Dimension getPreferredSize()>();

        $i0 = $r10.<java.awt.Dimension: int height>;

        $i1 = $i0 / 2;

        $r10.<java.awt.Dimension: int height> = $i1;

        virtualinvoke $r8.<javax.swing.JScrollPane: void setPreferredSize(java.awt.Dimension)>($r10);

        virtualinvoke $r2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r8);

        virtualinvoke r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: java.awt.Component add(java.awt.Component)>($r2);

        return;
    }

    public org.wiztools.commons.MultiValueMap getHeaders()
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        java.lang.String[] $r6, $r7;
        org.wiztools.commons.MultiValueMapArrayList $r5;
        int $i0, i1;
        javax.swing.JTable $r1;
        java.lang.String $r8, $r9;
        org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel $r3;
        java.lang.String[][] $r4;
        org.wiztools.commons.MultiValueMap $r10;
        javax.swing.table.TableModel $r2;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        $r1 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        $r2 = virtualinvoke $r1.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        $r3 = (org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel) $r2;

        $r4 = virtualinvoke $r3.<org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel: java.lang.String[][] getHeaders()>();

        if $r4 != null goto label1;

        $r10 = <org.wiztools.commons.CollectionsUtil: org.wiztools.commons.MultiValueMap EMPTY_MULTI_VALUE_MAP>;

        return $r10;

     label1:
        $r5 = new org.wiztools.commons.MultiValueMapArrayList;

        specialinvoke $r5.<org.wiztools.commons.MultiValueMapArrayList: void <init>()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label3;

        $r6 = $r4[i1];

        $r9 = $r6[0];

        $r7 = $r4[i1];

        $r8 = $r7[1];

        interfaceinvoke $r5.<org.wiztools.commons.MultiValueMap: java.util.Collection put(java.lang.Object,java.lang.Object)>($r9, $r8);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r5;
    }

    public void setHeaders(org.wiztools.commons.MultiValueMap)
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel $r2;
        org.wiztools.commons.MultiValueMap r1;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        r1 := @parameter0: org.wiztools.commons.MultiValueMap;

        $r2 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel resHeaderTableModel>;

        virtualinvoke $r2.<org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel: void setHeaders(org.wiztools.commons.MultiValueMap)>(r1);

        return;
    }

    public java.awt.Component getComponent()
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        return r0;
    }

    public void clear()
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        javax.swing.JTable $r1;
        org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel r3;
        javax.swing.table.TableModel $r2;

        r0 := @this: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        $r1 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        $r2 = virtualinvoke $r1.<javax.swing.JTable: javax.swing.table.TableModel getModel()>();

        r3 = (org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel) $r2;

        virtualinvoke r3.<org.wiztools.restclient.ui.resheader.ResponseHeaderTableModel: void setHeaders(org.wiztools.commons.MultiValueMap)>(null);

        return;
    }

    static javax.swing.JTable access$000(org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl)
    {
        javax.swing.JTable $r1;
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;

        r0 := @parameter0: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        $r1 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: javax.swing.JTable jt_res_headers>;

        return $r1;
    }

    static org.wiztools.restclient.ui.RESTView access$100(org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl)
    {
        org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl r0;
        org.wiztools.restclient.ui.RESTView $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl;

        $r1 = r0.<org.wiztools.restclient.ui.resheader.ResHeaderPanelImpl: org.wiztools.restclient.ui.RESTView view>;

        return $r1;
    }
}
