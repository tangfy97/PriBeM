public class org.apache.http.entity.ByteArrayEntity extends org.apache.http.entity.AbstractHttpEntity implements java.lang.Cloneable
{
    protected final byte[] content;
    private final byte[] b;
    private final int off;
    private final int len;

    public void <init>(byte[], org.apache.http.entity.ContentType)
    {
        byte[] r1, $r2;
        int $i0;
        org.apache.http.entity.ContentType r3;
        java.lang.String $r4;
        org.apache.http.entity.ByteArrayEntity r0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        r1 := @parameter0: byte[];

        r3 := @parameter1: org.apache.http.entity.ContentType;

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source byte array may not be null");

        throw $r5;

     label1:
        r0.<org.apache.http.entity.ByteArrayEntity: byte[] content> = r1;

        r0.<org.apache.http.entity.ByteArrayEntity: byte[] b> = r1;

        r0.<org.apache.http.entity.ByteArrayEntity: int off> = 0;

        $r2 = r0.<org.apache.http.entity.ByteArrayEntity: byte[] b>;

        $i0 = lengthof $r2;

        r0.<org.apache.http.entity.ByteArrayEntity: int len> = $i0;

        if r3 == null goto label2;

        $r4 = virtualinvoke r3.<org.apache.http.entity.ContentType: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.http.entity.ByteArrayEntity: void setContentType(java.lang.String)>($r4);

     label2:
        return;
    }

    public void <init>(byte[], int, int, org.apache.http.entity.ContentType)
    {
        byte[] r1;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.http.entity.ByteArrayEntity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r3, $r13;
        org.apache.http.entity.ContentType r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.http.entity.ContentType;

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source byte array may not be null");

        throw $r4;

     label1:
        if i0 < 0 goto label2;

        $i2 = lengthof r1;

        if i0 > $i2 goto label2;

        if i1 < 0 goto label2;

        $i3 = i0 + i1;

        if $i3 < 0 goto label2;

        $i5 = i0 + i1;

        $i4 = lengthof r1;

        if $i5 <= $i4 goto label3;

     label2:
        $r5 = new java.lang.IndexOutOfBoundsException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("off: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" b.length: ");

        $i6 = lengthof r1;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label3:
        r0.<org.apache.http.entity.ByteArrayEntity: byte[] content> = r1;

        r0.<org.apache.http.entity.ByteArrayEntity: byte[] b> = r1;

        r0.<org.apache.http.entity.ByteArrayEntity: int off> = i0;

        r0.<org.apache.http.entity.ByteArrayEntity: int len> = i1;

        if r2 == null goto label4;

        $r3 = virtualinvoke r2.<org.apache.http.entity.ContentType: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.http.entity.ByteArrayEntity: void setContentType(java.lang.String)>($r3);

     label4:
        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[],org.apache.http.entity.ContentType)>(r1, null);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[],int,int,org.apache.http.entity.ContentType)>(r1, i0, i1, null);

        return;
    }

    public boolean isRepeatable()
    {
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        return 1;
    }

    public long getContentLength()
    {
        int $i0;
        long $l1;
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        $i0 = r0.<org.apache.http.entity.ByteArrayEntity: int len>;

        $l1 = (long) $i0;

        return $l1;
    }

    public java.io.InputStream getContent()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        int $i0, $i1;
        org.apache.http.entity.ByteArrayEntity r1;

        r1 := @this: org.apache.http.entity.ByteArrayEntity;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.apache.http.entity.ByteArrayEntity: byte[] b>;

        $i1 = r1.<org.apache.http.entity.ByteArrayEntity: int off>;

        $i0 = r1.<org.apache.http.entity.ByteArrayEntity: int len>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i1, $i0);

        return $r0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2;
        int $i0, $i1;
        org.apache.http.entity.ByteArrayEntity r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.entity.ByteArrayEntity;

        r0 := @parameter0: java.io.OutputStream;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r3;

     label1:
        $r2 = r1.<org.apache.http.entity.ByteArrayEntity: byte[] b>;

        $i1 = r1.<org.apache.http.entity.ByteArrayEntity: int off>;

        $i0 = r1.<org.apache.http.entity.ByteArrayEntity: int len>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, $i1, $i0);

        virtualinvoke r0.<java.io.OutputStream: void flush()>();

        return;
    }

    public boolean isStreaming()
    {
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        return 0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.http.entity.ByteArrayEntity r0;

        r0 := @this: org.apache.http.entity.ByteArrayEntity;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }
}
