public class org.springframework.remoting.support.DefaultRemoteInvocationExecutor extends java.lang.Object implements org.springframework.remoting.support.RemoteInvocationExecutor
{

    public void <init>()
    {
        org.springframework.remoting.support.DefaultRemoteInvocationExecutor r0;

        r0 := @this: org.springframework.remoting.support.DefaultRemoteInvocationExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object) throws java.lang.NoSuchMethodException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        org.springframework.remoting.support.DefaultRemoteInvocationExecutor r3;
        org.springframework.remoting.support.RemoteInvocation r0;
        java.lang.Object r1, $r2;

        r3 := @this: org.springframework.remoting.support.DefaultRemoteInvocationExecutor;

        r0 := @parameter0: org.springframework.remoting.support.RemoteInvocation;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "RemoteInvocation must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Target object must not be null");

        $r2 = virtualinvoke r0.<org.springframework.remoting.support.RemoteInvocation: java.lang.Object invoke(java.lang.Object)>(r1);

        return $r2;
    }
}
