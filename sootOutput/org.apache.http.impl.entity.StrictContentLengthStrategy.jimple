public class org.apache.http.impl.entity.StrictContentLengthStrategy extends java.lang.Object implements org.apache.http.entity.ContentLengthStrategy
{
    private final int implicitLen;

    public void <init>(int)
    {
        int i0;
        org.apache.http.impl.entity.StrictContentLengthStrategy r0;

        r0 := @this: org.apache.http.impl.entity.StrictContentLengthStrategy;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.entity.StrictContentLengthStrategy: int implicitLen> = i0;

        return;
    }

    public void <init>()
    {
        int $i1;
        org.apache.http.impl.entity.StrictContentLengthStrategy r0;

        r0 := @this: org.apache.http.impl.entity.StrictContentLengthStrategy;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>(int)>($i1);

        return;
    }

    public long determineLength(org.apache.http.HttpMessage) throws org.apache.http.HttpException
    {
        org.apache.http.ProtocolException $r35, $r37, $r39, $r41;
        org.apache.http.Header $r1, $r2;
        byte $b3;
        org.apache.http.HttpMessage r0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r15, $r16, $r22, $r24, $r30, $r31, $r34, $r36, $r38, $r40;
        org.apache.http.HttpVersion $r19;
        long $l1, $l2;
        int $i0, $i4;
        java.lang.String $r4, $r9, $r10, $r11, $r12, $r17, $r25, $r32;
        java.lang.NumberFormatException $r27;
        java.lang.IllegalArgumentException $r33;
        org.apache.http.ProtocolVersion $r18, $r23;
        org.apache.http.impl.entity.StrictContentLengthStrategy r3;

        r3 := @this: org.apache.http.impl.entity.StrictContentLengthStrategy;

        r0 := @parameter0: org.apache.http.HttpMessage;

        if r0 != null goto label1;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP message may not be null");

        throw $r33;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Transfer-Encoding");

        if $r1 == null goto label5;

        $r10 = interfaceinvoke $r1.<org.apache.http.Header: java.lang.String getValue()>();

        $r11 = "chunked";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke r0.<org.apache.http.HttpMessage: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r19 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z2 = virtualinvoke $r18.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r19);

        if $z2 == 0 goto label2;

        $r35 = new org.apache.http.ProtocolException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chunked transfer encoding not allowed for ");

        $r23 = interfaceinvoke r0.<org.apache.http.HttpMessage: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r25);

        throw $r35;

     label2:
        return -2L;

     label3:
        $r12 = "identity";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        if $z1 == 0 goto label4;

        return -1L;

     label4:
        $r37 = new org.apache.http.ProtocolException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported transfer encoding: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r17);

        throw $r37;

     label5:
        $r2 = interfaceinvoke r0.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Length");

        if $r2 == null goto label9;

        $r4 = interfaceinvoke $r2.<org.apache.http.Header: java.lang.String getValue()>();

     label6:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        $b3 = $l2 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label7;

        $r39 = new org.apache.http.ProtocolException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative content length: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r39;

     label7:
        return $l2;

     label8:
        $r27 := @caughtexception;

        $r41 = new org.apache.http.ProtocolException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r32);

        throw $r41;

     label9:
        $i0 = r3.<org.apache.http.impl.entity.StrictContentLengthStrategy: int implicitLen>;

        $l1 = (long) $i0;

        return $l1;

        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }
}
