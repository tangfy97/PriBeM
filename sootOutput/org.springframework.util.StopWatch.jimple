public class org.springframework.util.StopWatch extends java.lang.Object
{
    private final java.lang.String id;
    private boolean keepTaskList;
    private final java.util.List taskList;
    private long startTimeMillis;
    private boolean running;
    private java.lang.String currentTaskName;
    private org.springframework.util.StopWatch$TaskInfo lastTaskInfo;
    private int taskCount;
    private long totalTimeMillis;

    public void <init>()
    {
        org.springframework.util.StopWatch r0;
        java.util.LinkedList $r1;

        r0 := @this: org.springframework.util.StopWatch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.StopWatch: boolean keepTaskList> = 1;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.util.StopWatch: java.util.List taskList> = $r1;

        r0.<org.springframework.util.StopWatch: java.lang.String id> = "";

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.util.StopWatch r0;
        java.lang.String r2;
        java.util.LinkedList $r1;

        r0 := @this: org.springframework.util.StopWatch;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.StopWatch: boolean keepTaskList> = 1;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.util.StopWatch: java.util.List taskList> = $r1;

        r0.<org.springframework.util.StopWatch: java.lang.String id> = r2;

        return;
    }

    public void setKeepTaskList(boolean)
    {
        org.springframework.util.StopWatch r0;
        boolean z0;

        r0 := @this: org.springframework.util.StopWatch;

        z0 := @parameter0: boolean;

        r0.<org.springframework.util.StopWatch: boolean keepTaskList> = z0;

        return;
    }

    public void start() throws java.lang.IllegalStateException
    {
        org.springframework.util.StopWatch r0;

        r0 := @this: org.springframework.util.StopWatch;

        virtualinvoke r0.<org.springframework.util.StopWatch: void start(java.lang.String)>("");

        return;
    }

    public void start(java.lang.String) throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r2;
        org.springframework.util.StopWatch r0;
        long $l0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.util.StopWatch;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.springframework.util.StopWatch: boolean running>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t start StopWatch: it\'s already running");

        throw $r2;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.springframework.util.StopWatch: long startTimeMillis> = $l0;

        r0.<org.springframework.util.StopWatch: boolean running> = 1;

        r0.<org.springframework.util.StopWatch: java.lang.String currentTaskName> = r1;

        return;
    }

    public void stop() throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r5;
        org.springframework.util.StopWatch r0;
        long $l0, $l1, l2, $l3, $l4;
        org.springframework.util.StopWatch$TaskInfo $r1, $r3;
        java.util.List $r4;
        int $i5, $i6;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.util.StopWatch;

        $z0 = r0.<org.springframework.util.StopWatch: boolean running>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t stop StopWatch: it\'s not running");

        throw $r5;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<org.springframework.util.StopWatch: long startTimeMillis>;

        l2 = $l0 - $l1;

        $l3 = r0.<org.springframework.util.StopWatch: long totalTimeMillis>;

        $l4 = $l3 + l2;

        r0.<org.springframework.util.StopWatch: long totalTimeMillis> = $l4;

        $r1 = new org.springframework.util.StopWatch$TaskInfo;

        $r2 = r0.<org.springframework.util.StopWatch: java.lang.String currentTaskName>;

        specialinvoke $r1.<org.springframework.util.StopWatch$TaskInfo: void <init>(java.lang.String,long)>($r2, l2);

        r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo> = $r1;

        $z1 = r0.<org.springframework.util.StopWatch: boolean keepTaskList>;

        if $z1 == 0 goto label2;

        $r4 = r0.<org.springframework.util.StopWatch: java.util.List taskList>;

        $r3 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $i5 = r0.<org.springframework.util.StopWatch: int taskCount>;

        $i6 = $i5 + 1;

        r0.<org.springframework.util.StopWatch: int taskCount> = $i6;

        r0.<org.springframework.util.StopWatch: boolean running> = 0;

        r0.<org.springframework.util.StopWatch: java.lang.String currentTaskName> = null;

        return;
    }

    public boolean isRunning()
    {
        org.springframework.util.StopWatch r0;
        boolean $z0;

        r0 := @this: org.springframework.util.StopWatch;

        $z0 = r0.<org.springframework.util.StopWatch: boolean running>;

        return $z0;
    }

    public long getLastTaskTimeMillis() throws java.lang.IllegalStateException
    {
        org.springframework.util.StopWatch$TaskInfo $r1, $r2;
        java.lang.IllegalStateException $r3;
        org.springframework.util.StopWatch r0;
        long $l0;

        r0 := @this: org.springframework.util.StopWatch;

        $r1 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tasks run: can\'t get last task interval");

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        $l0 = virtualinvoke $r2.<org.springframework.util.StopWatch$TaskInfo: long getTimeMillis()>();

        return $l0;
    }

    public java.lang.String getLastTaskName() throws java.lang.IllegalStateException
    {
        org.springframework.util.StopWatch$TaskInfo $r1, $r2;
        java.lang.IllegalStateException $r4;
        org.springframework.util.StopWatch r0;
        java.lang.String $r3;

        r0 := @this: org.springframework.util.StopWatch;

        $r1 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tasks run: can\'t get last task name");

        throw $r4;

     label1:
        $r2 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        $r3 = virtualinvoke $r2.<org.springframework.util.StopWatch$TaskInfo: java.lang.String getTaskName()>();

        return $r3;
    }

    public org.springframework.util.StopWatch$TaskInfo getLastTaskInfo() throws java.lang.IllegalStateException
    {
        org.springframework.util.StopWatch$TaskInfo $r1, $r2;
        java.lang.IllegalStateException $r3;
        org.springframework.util.StopWatch r0;

        r0 := @this: org.springframework.util.StopWatch;

        $r1 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tasks run: can\'t get last task info");

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo lastTaskInfo>;

        return $r2;
    }

    public long getTotalTimeMillis()
    {
        org.springframework.util.StopWatch r0;
        long $l0;

        r0 := @this: org.springframework.util.StopWatch;

        $l0 = r0.<org.springframework.util.StopWatch: long totalTimeMillis>;

        return $l0;
    }

    public double getTotalTimeSeconds()
    {
        org.springframework.util.StopWatch r0;
        long $l0;
        double $d0, $d1;

        r0 := @this: org.springframework.util.StopWatch;

        $l0 = r0.<org.springframework.util.StopWatch: long totalTimeMillis>;

        $d0 = (double) $l0;

        $d1 = $d0 / 1000.0;

        return $d1;
    }

    public int getTaskCount()
    {
        int $i0;
        org.springframework.util.StopWatch r0;

        r0 := @this: org.springframework.util.StopWatch;

        $i0 = r0.<org.springframework.util.StopWatch: int taskCount>;

        return $i0;
    }

    public org.springframework.util.StopWatch$TaskInfo[] getTaskInfo()
    {
        java.lang.UnsupportedOperationException $r6;
        java.lang.Object[] $r4;
        org.springframework.util.StopWatch r0;
        java.util.List $r1, $r2;
        int $i0;
        org.springframework.util.StopWatch$TaskInfo[] $r3, $r5;
        boolean $z0;

        r0 := @this: org.springframework.util.StopWatch;

        $z0 = r0.<org.springframework.util.StopWatch: boolean keepTaskList>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Task info is not being kept!");

        throw $r6;

     label1:
        $r2 = r0.<org.springframework.util.StopWatch: java.util.List taskList>;

        $r1 = r0.<org.springframework.util.StopWatch: java.util.List taskList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.springframework.util.StopWatch$TaskInfo)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.springframework.util.StopWatch$TaskInfo[]) $r4;

        return $r5;
    }

    public java.lang.String shortSummary()
    {
        org.springframework.util.StopWatch r1;
        long $l0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.String $r2, $r6;

        r1 := @this: org.springframework.util.StopWatch;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("StopWatch \'");

        $r2 = r1.<org.springframework.util.StopWatch: java.lang.String id>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': running time (millis) = ");

        $l0 = virtualinvoke r1.<org.springframework.util.StopWatch: long getTotalTimeMillis()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String prettyPrint()
    {
        long $l1;
        java.text.NumberFormat $r3, $r4;
        int i0, i2;
        java.lang.String $r2, $r7, $r9, $r11, $r13;
        boolean $z0;
        double $d0, $d1, $d2;
        org.springframework.util.StopWatch r1;
        org.springframework.util.StopWatch$TaskInfo r6;
        java.lang.StringBuilder $r0, $r8, $r10, $r12;
        org.springframework.util.StopWatch$TaskInfo[] $r5;

        r1 := @this: org.springframework.util.StopWatch;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<org.springframework.util.StopWatch: java.lang.String shortSummary()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $z0 = r1.<org.springframework.util.StopWatch: boolean keepTaskList>;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No task info kept");

        goto label4;

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----------------------------------------\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms     %     Task name\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-----------------------------------------\n");

        $r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>();

        virtualinvoke $r3.<java.text.NumberFormat: void setMinimumIntegerDigits(int)>(5);

        virtualinvoke $r3.<java.text.NumberFormat: void setGroupingUsed(boolean)>(0);

        $r4 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getPercentInstance()>();

        virtualinvoke $r4.<java.text.NumberFormat: void setMinimumIntegerDigits(int)>(3);

        virtualinvoke $r4.<java.text.NumberFormat: void setGroupingUsed(boolean)>(0);

        $r5 = virtualinvoke r1.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo[] getTaskInfo()>();

        i0 = lengthof $r5;

        i2 = 0;

        goto label3;

     label2:
        r6 = $r5[i2];

        $l1 = virtualinvoke r6.<org.springframework.util.StopWatch$TaskInfo: long getTimeMillis()>();

        $r7 = virtualinvoke $r3.<java.text.NumberFormat: java.lang.String format(long)>($l1);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $d0 = virtualinvoke r6.<org.springframework.util.StopWatch$TaskInfo: double getTimeSeconds()>();

        $d1 = virtualinvoke r1.<org.springframework.util.StopWatch: double getTotalTimeSeconds()>();

        $d2 = $d0 / $d1;

        $r9 = virtualinvoke $r4.<java.text.NumberFormat: java.lang.String format(double)>($d2);

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke r6.<org.springframework.util.StopWatch$TaskInfo: java.lang.String getTaskName()>();

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label2;

     label4:
        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String toString()
    {
        long $l1, $l2;
        int i0, i3;
        java.lang.String $r2, $r3, $r7;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        org.springframework.util.StopWatch r1;
        org.springframework.util.StopWatch$TaskInfo r5;
        java.lang.StringBuilder $r0, $r6, $r8, $r9, $r10, $r11;
        org.springframework.util.StopWatch$TaskInfo[] $r4;

        r1 := @this: org.springframework.util.StopWatch;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<org.springframework.util.StopWatch: java.lang.String shortSummary()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $z0 = r1.<org.springframework.util.StopWatch: boolean keepTaskList>;

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r1.<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo[] getTaskInfo()>();

        i0 = lengthof $r4;

        i3 = 0;

        goto label2;

     label1:
        r5 = $r4[i3];

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; [");

        $r7 = virtualinvoke r5.<org.springframework.util.StopWatch$TaskInfo: java.lang.String getTaskName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] took ");

        $l1 = virtualinvoke r5.<org.springframework.util.StopWatch$TaskInfo: long getTimeMillis()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $d0 = virtualinvoke r5.<org.springframework.util.StopWatch$TaskInfo: double getTimeSeconds()>();

        $d1 = 100.0 * $d0;

        $d2 = virtualinvoke r1.<org.springframework.util.StopWatch: double getTotalTimeSeconds()>();

        $d3 = $d1 / $d2;

        $l2 = staticinvoke <java.lang.Math: long round(double)>($d3);

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; no task info kept");

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
