final class org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2 extends java.lang.Object implements org.waveprotocol.wave.model.experimental.schema.CharacterValidator$Predicate
{
    final java.util.Set val$allowedCharacters;

    void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2 r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2;

        r1 := @parameter0: java.util.Set;

        r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2: java.util.Set val$allowedCharacters> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(int)
    {
        int i0;
        java.util.Set $r1;
        java.lang.Integer $r2;
        org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2 r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.CharacterValidator$2: java.util.Set val$allowedCharacters>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        return $z0;
    }
}
