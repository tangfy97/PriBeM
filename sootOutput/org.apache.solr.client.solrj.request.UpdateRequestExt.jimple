public class org.apache.solr.client.solrj.request.UpdateRequestExt extends org.apache.solr.client.solrj.request.AbstractUpdateRequest
{
    private java.util.List documents;
    private java.util.Map deleteById;
    private java.util.List deleteQuery;

    public void <init>()
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.request.AbstractUpdateRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, "/update");

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.lang.String r1;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r2;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD POST>;

        specialinvoke r0.<org.apache.solr.client.solrj.request.AbstractUpdateRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r2, r1);

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById> = null;

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery> = null;

        return;
    }

    public void clear()
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.List $r1, $r3, $r4, $r6;
        java.util.Map $r2, $r5;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

     label2:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

     label3:
        return;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt add(org.apache.solr.common.SolrInputDocument)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.List $r1, $r4;
        org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc $r7;
        int $i1;
        org.apache.solr.common.SolrInputDocument r3;
        java.util.ArrayList $r6;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r3 := @parameter0: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(2);

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents> = $r6;

     label1:
        $r7 = new org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc;

        specialinvoke $r7.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: void <init>(org.apache.solr.client.solrj.request.UpdateRequestExt,org.apache.solr.client.solrj.request.UpdateRequestExt$1)>(r0, null);

        $r7.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: org.apache.solr.common.SolrInputDocument document> = r3;

        $i1 = (int) -1;

        $r7.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin> = $i1;

        $r7.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: boolean overwrite> = 1;

        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt add(org.apache.solr.common.SolrInputDocument, int, boolean)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.ArrayList $r5;
        java.util.List $r1, $r4;
        org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc $r2;
        int i0;
        org.apache.solr.common.SolrInputDocument r3;
        boolean z0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r3 := @parameter0: org.apache.solr.common.SolrInputDocument;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        if $r1 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(2);

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents> = $r5;

     label1:
        $r2 = new org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc;

        specialinvoke $r2.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: void <init>(org.apache.solr.client.solrj.request.UpdateRequestExt,org.apache.solr.client.solrj.request.UpdateRequestExt$1)>(r0, null);

        $r2.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: org.apache.solr.common.SolrInputDocument document> = r3;

        $r2.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin> = i0;

        $r2.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: boolean overwrite> = z0;

        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt deleteById(java.lang.String)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.Map $r1, $r3;
        java.util.HashMap $r4;
        java.lang.String r2;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        if $r1 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, null);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt deleteById(java.lang.String, java.lang.Long)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.lang.Long r3;
        java.util.Map $r1, $r4;
        java.util.HashMap $r5;
        java.lang.String r2;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Long;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById> = $r5;

     label1:
        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt deleteById(java.util.List)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.Iterator $r3;
        java.util.HashMap $r7;
        java.util.List r2;
        java.util.Map $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        if $r1 != null goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById> = $r7;

        goto label3;

     label1:
        $r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, null);

        goto label2;

     label3:
        return r0;
    }

    public org.apache.solr.client.solrj.request.UpdateRequestExt deleteByQuery(java.lang.String)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.List $r1, $r3;
        java.lang.String r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery> = $r4;

     label1:
        $r3 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public java.util.Collection getContentStreams() throws java.io.IOException
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.lang.String $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.lang.String getXML()>();

        $r2 = staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: java.util.Collection toContentStreams(java.lang.String,java.lang.String)>($r1, "application/xml; charset=UTF-8");

        return $r2;
    }

    public java.lang.String getXML() throws java.io.IOException
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r1;
        java.io.StringWriter $r0;
        int $i0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequestExt: void writeXML(java.io.Writer)>($r0);

        virtualinvoke $r0.<java.io.StringWriter: void flush()>();

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void writeXML(java.io.Writer) throws java.io.IOException
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc r37, r40;
        java.lang.Long r43;
        java.util.Map $r4, $r9, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z8, $z9, $z10;
        java.util.Set $r10;
        java.util.List $r1, $r2, $r6, $r21, $r33, $r34, r39, $r41;
        java.io.Writer r5;
        java.lang.StringBuilder $r17, $r18, $r19, $r26, $r27, $r28, $r29, $r30, $r31, $r45, $r46;
        org.apache.solr.common.SolrInputDocument $r38;
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i9;
        java.lang.String $r15, $r20, $r32, r44;
        java.util.Map$Entry r42;
        java.util.Iterator $r3, $r7, $r11, $r35;
        java.lang.Object $r8, $r12, $r13, $r14, $r23, $r24, $r36;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r5 := @parameter0: java.io.Writer;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        $r2 = specialinvoke r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List getDocLists(java.util.List)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r23 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.util.List) $r23;

        if r39 == null goto label10;

        $i2 = interfaceinvoke r39.<java.util.List: int size()>();

        if $i2 <= 0 goto label10;

        $r24 = interfaceinvoke r39.<java.util.List: java.lang.Object get(int)>(0);

        r40 = (org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc) $r24;

        $i3 = r40.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin>;

        $i7 = (int) -1;

        if $i3 == $i7 goto label02;

        $i4 = r40.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin>;

        goto label03;

     label02:
        $i4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: int commitWithin>;

     label03:
        i5 = $i4;

        $z4 = r40.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: boolean overwrite>;

        $i9 = (int) -1;

        if $i4 > $i9 goto label04;

        if $z4 == 1 goto label05;

     label04:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<add commitWithin=\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overwrite=\"");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>($r32);

        goto label06;

     label05:
        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("<add>");

     label06:
        $r33 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        if $r33 == null goto label09;

        $r34 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        $r35 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc) $r36;

        if r37 == null goto label08;

        $r38 = r37.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: org.apache.solr.common.SolrInputDocument document>;

        staticinvoke <org.apache.solr.client.solrj.util.ClientUtils: void writeXML(org.apache.solr.common.SolrInputDocument,java.io.Writer)>($r38, r5);

     label08:
        goto label07;

     label09:
        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("</add>");

     label10:
        goto label01;

     label11:
        $r4 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        if $r4 == null goto label12;

        $r22 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        $i1 = interfaceinvoke $r22.<java.util.Map: int size()>();

        if $i1 <= 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z6 = $z5;

        $r41 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        if $r41 == null goto label14;

        $r21 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        $i0 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i0 <= 0 goto label14;

        $z10 = 1;

        $z9 = 1;

        goto label15;

     label14:
        $z10 = 0;

        $z9 = 0;

     label15:
        z8 = $z9;

        if z6 != 0 goto label16;

        if $z10 == 0 goto label22;

     label16:
        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<delete>");

        if z6 == 0 goto label19;

        $r9 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.util.Map$Entry) $r12;

        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<id");

        $r13 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        r43 = (java.lang.Long) $r13;

        if r43 == null goto label18;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version=\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r20);

     label18:
        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(">");

        $r14 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        staticinvoke <org.apache.solr.common.util.XML: void escapeCharData(java.lang.String,java.io.Writer)>($r15, r5);

        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</id>");

        goto label17;

     label19:
        if z8 == 0 goto label21;

        $r6 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label21;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.lang.String) $r8;

        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("<query>");

        staticinvoke <org.apache.solr.common.util.XML: void escapeCharData(java.lang.String,java.io.Writer)>(r44, r5);

        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</query>");

        goto label20;

     label21:
        virtualinvoke r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("</delete>");

     label22:
        return;
    }

    private java.util.List getDocLists(java.util.List)
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r1;
        java.util.ArrayList r8, $r10, $r11;
        org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc r6;
        int $i0, $i1, i2, $i4;
        boolean $z0, $z1, z2;
        java.util.Iterator $r4;
        java.util.List $r2, $r3, r7;
        java.lang.Object $r5;

        r1 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        r7 := @parameter0: java.util.List;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        if $r2 != null goto label1;

        return $r10;

     label1:
        z2 = 1;

        $i4 = (int) -1;

        i2 = $i4;

        r8 = null;

        $r3 = r1.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc) $r5;

        $z1 = r6.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: boolean overwrite>;

        if $z1 != z2 goto label3;

        $i0 = r6.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin>;

        if $i0 != i2 goto label3;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 != 0 goto label4;

     label3:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r8 = $r11;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

     label4:
        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>(r6);

        i2 = r6.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: int commitWithin>;

        z2 = r6.<org.apache.solr.client.solrj.request.UpdateRequestExt$SolrDoc: boolean overwrite>;

        goto label2;

     label5:
        return $r10;
    }

    public java.util.Map getDeleteById()
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        return $r1;
    }

    public java.util.List getDeleteQuery()
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r0;
        java.util.List $r1;

        r0 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r1 = r0.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.solr.client.solrj.request.UpdateRequestExt r2;
        java.util.List $r3, $r9;
        java.util.Map $r6;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r12;

        r2 := @this: org.apache.solr.client.solrj.request.UpdateRequestExt;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UpdateRequestExt [documents=");

        $r3 = r2.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List documents>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deleteById=");

        $r6 = r2.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.Map deleteById>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deleteQuery=");

        $r9 = r2.<org.apache.solr.client.solrj.request.UpdateRequestExt: java.util.List deleteQuery>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
