class com.google.inject.internal.DefaultConstructionProxyFactory$2 extends java.lang.Object implements com.google.inject.internal.ConstructionProxy
{
    final java.lang.reflect.Constructor val$constructor;
    final com.google.inject.internal.DefaultConstructionProxyFactory this$0;

    void <init>(com.google.inject.internal.DefaultConstructionProxyFactory, java.lang.reflect.Constructor)
    {
        com.google.inject.internal.DefaultConstructionProxyFactory r1;
        java.lang.reflect.Constructor r2;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 r0;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$2;

        r1 := @parameter0: com.google.inject.internal.DefaultConstructionProxyFactory;

        r2 := @parameter1: java.lang.reflect.Constructor;

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory$2: com.google.inject.internal.DefaultConstructionProxyFactory this$0> = r1;

        r0.<com.google.inject.internal.DefaultConstructionProxyFactory$2: java.lang.reflect.Constructor val$constructor> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Object newInstance(java.lang.Object[]) throws java.lang.reflect.InvocationTargetException
    {
        java.lang.IllegalAccessException $r4;
        java.lang.Object[] r1;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 r0;
        java.lang.AssertionError $r5, $r7;
        java.lang.reflect.Constructor $r2;
        java.lang.InstantiationException $r6;
        java.lang.Object $r3;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$2;

        r1 := @parameter0: java.lang.Object[];

     label1:
        $r2 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$2: java.lang.reflect.Constructor val$constructor>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r1);

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public com.google.inject.spi.InjectionPoint getInjectionPoint()
    {
        com.google.inject.internal.DefaultConstructionProxyFactory $r1;
        com.google.inject.spi.InjectionPoint $r2;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 r0;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$2;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$2: com.google.inject.internal.DefaultConstructionProxyFactory this$0>;

        $r2 = staticinvoke <com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint access$000(com.google.inject.internal.DefaultConstructionProxyFactory)>($r1);

        return $r2;
    }

    public java.lang.reflect.Constructor getConstructor()
    {
        java.lang.reflect.Constructor $r1;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 r0;

        r0 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$2;

        $r1 = r0.<com.google.inject.internal.DefaultConstructionProxyFactory$2: java.lang.reflect.Constructor val$constructor>;

        return $r1;
    }

    public com.google.inject.internal.util.$ImmutableMap getMethodInterceptors()
    {
        com.google.inject.internal.util.$ImmutableMap $r0;
        com.google.inject.internal.DefaultConstructionProxyFactory$2 r1;

        r1 := @this: com.google.inject.internal.DefaultConstructionProxyFactory$2;

        $r0 = staticinvoke <com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>();

        return $r0;
    }
}
