public abstract class org.apache.batik.dom.util.DOMUtilitiesSupport extends java.lang.Object
{

    public void <init>()
    {
        org.apache.batik.dom.util.DOMUtilitiesSupport r0;

        r0 := @this: org.apache.batik.dom.util.DOMUtilitiesSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.lang.String getModifiersList(int, int)
    {
        java.lang.String[] $r0, $r1, $r6;
        java.lang.StringBuffer $r3, $r4, $r5, $r8;
        int $i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r2, $r7, $r9, $r10;

        i1 := @parameter0: int;

        i5 := @parameter1: int;

        $i0 = i5 & 32;

        if $i0 == 0 goto label1;

        $i4 = i5 & 15;

        i6 = 16 | $i4;

        goto label2;

     label1:
        i6 = i5 & 15;

     label2:
        $r0 = <org.apache.batik.dom.util.DOMUtilities: java.lang.String[] LOCK_STRINGS>;

        $i2 = i1 & 15;

        $r10 = $r0[$i2];

        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i3 == 0 goto label3;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = <org.apache.batik.dom.util.DOMUtilities: java.lang.String[] MODIFIER_STRINGS>;

        $r7 = $r6[i6];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label3:
        $r1 = <org.apache.batik.dom.util.DOMUtilities: java.lang.String[] MODIFIER_STRINGS>;

        $r2 = $r1[i6];

        return $r2;
    }
}
