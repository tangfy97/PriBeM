public class org.jdesktop.swingx.JXTree$TreeAdapter extends org.jdesktop.swingx.decorator.ComponentAdapter
{
    private final org.jdesktop.swingx.JXTree tree;

    public void <init>(org.jdesktop.swingx.JXTree)
    {
        org.jdesktop.swingx.JXTree r1;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        r1 := @parameter0: org.jdesktop.swingx.JXTree;

        specialinvoke r0.<org.jdesktop.swingx.decorator.ComponentAdapter: void <init>(javax.swing.JComponent)>(r1);

        r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree> = r1;

        return;
    }

    public org.jdesktop.swingx.JXTree getTree()
    {
        org.jdesktop.swingx.JXTree $r1;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        return $r1;
    }

    public boolean hasFocus()
    {
        org.jdesktop.swingx.JXTree $r1, $r2;
        int $i0, $i1;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: boolean isFocusOwner()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = virtualinvoke $r2.<org.jdesktop.swingx.JXTree: int getLeadSelectionRow()>();

        $i1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        if $i0 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object getValueAt(int, int)
    {
        org.jdesktop.swingx.JXTree $r1;
        javax.swing.tree.TreePath $r2;
        int i0, i1;
        java.lang.Object $r3;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: javax.swing.tree.TreePath getPathForRow(int)>(i0);

        $r3 = virtualinvoke $r2.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        return $r3;
    }

    public java.lang.String getStringAt(int, int)
    {
        org.jdesktop.swingx.JXTree $r1;
        int i0, i1;
        java.lang.String $r2;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: java.lang.String getStringAt(int)>(i0);

        return $r2;
    }

    public java.awt.Rectangle getCellBounds()
    {
        java.awt.Rectangle $r2;
        org.jdesktop.swingx.JXTree $r1;
        int $i0;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: java.awt.Rectangle getRowBounds(int)>($i0);

        return $r2;
    }

    public boolean isEditable()
    {
        org.jdesktop.swingx.JXTree $r1, $r2;
        javax.swing.tree.TreePath $r3;
        int $i0;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r2 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        $r3 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: javax.swing.tree.TreePath getPathForRow(int)>($i0);

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.JXTree: boolean isPathEditable(javax.swing.tree.TreePath)>($r3);

        return $z0;
    }

    public boolean isSelected()
    {
        org.jdesktop.swingx.JXTree $r1;
        int $i0;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: boolean isRowSelected(int)>($i0);

        return $z0;
    }

    public boolean isExpanded()
    {
        org.jdesktop.swingx.JXTree $r1;
        int $i0;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: boolean isExpanded(int)>($i0);

        return $z0;
    }

    public int getDepth()
    {
        org.jdesktop.swingx.JXTree $r1;
        javax.swing.tree.TreePath $r2;
        int $i0, $i1, $i2;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $i0 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: int row>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: javax.swing.tree.TreePath getPathForRow(int)>($i0);

        $i1 = virtualinvoke $r2.<javax.swing.tree.TreePath: int getPathCount()>();

        $i2 = $i1 - 1;

        return $i2;
    }

    public boolean isHierarchical()
    {
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        return 1;
    }

    public boolean isLeaf()
    {
        org.jdesktop.swingx.JXTree $r1;
        javax.swing.tree.TreeModel $r2;
        java.lang.Object $r3;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        $r1 = r0.<org.jdesktop.swingx.JXTree$TreeAdapter: org.jdesktop.swingx.JXTree tree>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXTree: javax.swing.tree.TreeModel getModel()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXTree$TreeAdapter: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r2.<javax.swing.tree.TreeModel: boolean isLeaf(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isCellEditable(int, int)
    {
        int i0, i1;
        org.jdesktop.swingx.JXTree$TreeAdapter r0;

        r0 := @this: org.jdesktop.swingx.JXTree$TreeAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return 0;
    }
}
