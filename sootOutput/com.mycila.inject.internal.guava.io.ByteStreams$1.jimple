final class com.mycila.inject.internal.guava.io.ByteStreams$1 extends java.lang.Object implements com.mycila.inject.internal.guava.io.InputSupplier
{
    final byte[] val$b;
    final int val$off;
    final int val$len;

    void <init>(byte[], int, int)
    {
        byte[] r1;
        com.mycila.inject.internal.guava.io.ByteStreams$1 r0;
        int i0, i1;

        r0 := @this: com.mycila.inject.internal.guava.io.ByteStreams$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.mycila.inject.internal.guava.io.ByteStreams$1: byte[] val$b> = r1;

        r0.<com.mycila.inject.internal.guava.io.ByteStreams$1: int val$off> = i0;

        r0.<com.mycila.inject.internal.guava.io.ByteStreams$1: int val$len> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.ByteArrayInputStream getInput()
    {
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        com.mycila.inject.internal.guava.io.ByteStreams$1 r1;
        int $i0, $i1;

        r1 := @this: com.mycila.inject.internal.guava.io.ByteStreams$1;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<com.mycila.inject.internal.guava.io.ByteStreams$1: byte[] val$b>;

        $i1 = r1.<com.mycila.inject.internal.guava.io.ByteStreams$1: int val$off>;

        $i0 = r1.<com.mycila.inject.internal.guava.io.ByteStreams$1: int val$len>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r2, $i1, $i0);

        return $r0;
    }

    public volatile java.lang.Object getInput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.ByteStreams$1 r0;
        java.io.ByteArrayInputStream $r1;

        r0 := @this: com.mycila.inject.internal.guava.io.ByteStreams$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.ByteStreams$1: java.io.ByteArrayInputStream getInput()>();

        return $r1;
    }
}
