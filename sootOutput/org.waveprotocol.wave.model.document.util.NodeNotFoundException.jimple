public class org.waveprotocol.wave.model.document.util.NodeNotFoundException extends java.lang.Exception
{

    public void <init>(java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.NodeNotFoundException r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.NodeNotFoundException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.waveprotocol.wave.model.document.util.NodeNotFoundException r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.NodeNotFoundException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        org.waveprotocol.wave.model.document.util.NodeNotFoundException r2;
        java.lang.String $r3, $r6;

        r2 := @this: org.waveprotocol.wave.model.document.util.NodeNotFoundException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NodeNotFoundException[");

        $r3 = specialinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void throwAsRuntime(java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.NodeNotFoundException r2;
        java.lang.RuntimeException $r0;
        java.lang.String r1;

        r2 := @this: org.waveprotocol.wave.model.document.util.NodeNotFoundException;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        throw $r0;
    }
}
