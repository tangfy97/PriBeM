final class kodkod.util.ints.ArraySequence$AscendingIterator extends java.lang.Object implements java.util.Iterator
{
    final int endIndex;
    kodkod.util.ints.IndexedEntry lastReturned;
    int cursor;
    final kodkod.util.ints.ArraySequence this$0;

    void <init>(kodkod.util.ints.ArraySequence, int, int)
    {
        kodkod.util.ints.ArraySequence$AscendingIterator r0;
        kodkod.util.ints.ArraySequence r1;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i9;

        r0 := @this: kodkod.util.ints.ArraySequence$AscendingIterator;

        r1 := @parameter0: kodkod.util.ints.ArraySequence;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.ArraySequence this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry lastReturned> = null;

        $i1 = staticinvoke <kodkod.util.ints.ArraySequence: int access$1(kodkod.util.ints.ArraySequence,int)>(r1, i0);

        $i3 = staticinvoke <kodkod.util.ints.ArraySequence: int access$1(kodkod.util.ints.ArraySequence,int)>(r1, i2);

        if $i1 >= 0 goto label1;

        $i5 = neg $i1;

        $i6 = $i5 - 1;

        goto label2;

     label1:
        $i6 = $i1;

     label2:
        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor> = $i6;

        $i9 = (int) -1;

        if $i3 >= $i9 goto label3;

        $i4 = neg $i3;

        $i7 = $i4 - 2;

        goto label4;

     label3:
        $i7 = $i3;

     label4:
        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int endIndex> = $i7;

        return;
    }

    public boolean hasNext()
    {
        kodkod.util.ints.EntryView[] $r2, $r4;
        kodkod.util.ints.ArraySequence$AscendingIterator r0;
        kodkod.util.ints.ArraySequence $r1, $r3;
        kodkod.util.ints.EntryView $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r6;

        r0 := @this: kodkod.util.ints.ArraySequence$AscendingIterator;

        goto label2;

     label1:
        $i5 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor>;

        $i6 = $i5 + 1;

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor> = $i6;

     label2:
        $i0 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor>;

        $r1 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.ArraySequence this$0>;

        $r2 = staticinvoke <kodkod.util.ints.ArraySequence: kodkod.util.ints.EntryView[] access$2(kodkod.util.ints.ArraySequence)>($r1);

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r3 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.ArraySequence this$0>;

        $r4 = staticinvoke <kodkod.util.ints.ArraySequence: kodkod.util.ints.EntryView[] access$2(kodkod.util.ints.ArraySequence)>($r3);

        $i4 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor>;

        $r5 = $r4[$i4];

        $r6 = virtualinvoke $r5.<kodkod.util.ints.EntryView: java.lang.Object value()>();

        if $r6 == null goto label1;

     label3:
        $i3 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor>;

        $i2 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int endIndex>;

        if $i3 > $i2 goto label4;

        return 1;

     label4:
        return 0;
    }

    public kodkod.util.ints.IndexedEntry next()
    {
        kodkod.util.ints.EntryView[] $r2;
        kodkod.util.ints.ArraySequence$AscendingIterator r0;
        kodkod.util.ints.ArraySequence $r1;
        kodkod.util.ints.EntryView $r3;
        int $i0, $i1;
        java.util.NoSuchElementException $r4;
        boolean $z0;

        r0 := @this: kodkod.util.ints.ArraySequence$AscendingIterator;

        $z0 = virtualinvoke r0.<kodkod.util.ints.ArraySequence$AscendingIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.ArraySequence this$0>;

        $r2 = staticinvoke <kodkod.util.ints.ArraySequence: kodkod.util.ints.EntryView[] access$2(kodkod.util.ints.ArraySequence)>($r1);

        $i0 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor>;

        $i1 = $i0 + 1;

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: int cursor> = $i1;

        $r3 = $r2[$i0];

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry lastReturned> = $r3;

        return $r3;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r6;
        kodkod.util.ints.EntryView[] $r3;
        kodkod.util.ints.ArraySequence$AscendingIterator r0;
        kodkod.util.ints.ArraySequence $r2;
        kodkod.util.ints.IndexedEntry $r1, $r4;
        kodkod.util.ints.EntryView $r5;
        int $i0;

        r0 := @this: kodkod.util.ints.ArraySequence$AscendingIterator;

        $r1 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry lastReturned>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.ArraySequence this$0>;

        $r3 = staticinvoke <kodkod.util.ints.ArraySequence: kodkod.util.ints.EntryView[] access$2(kodkod.util.ints.ArraySequence)>($r2);

        $r4 = r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry lastReturned>;

        $i0 = interfaceinvoke $r4.<kodkod.util.ints.IndexedEntry: int index()>();

        $r5 = $r3[$i0];

        virtualinvoke $r5.<kodkod.util.ints.EntryView: java.lang.Object setValue(java.lang.Object)>(null);

        r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry lastReturned> = null;

        return;
    }

    public volatile java.lang.Object next()
    {
        kodkod.util.ints.ArraySequence$AscendingIterator r0;
        kodkod.util.ints.IndexedEntry $r1;

        r0 := @this: kodkod.util.ints.ArraySequence$AscendingIterator;

        $r1 = virtualinvoke r0.<kodkod.util.ints.ArraySequence$AscendingIterator: kodkod.util.ints.IndexedEntry next()>();

        return $r1;
    }
}
