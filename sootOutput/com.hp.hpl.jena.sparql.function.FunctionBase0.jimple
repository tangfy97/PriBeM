public abstract class com.hp.hpl.jena.sparql.function.FunctionBase0 extends com.hp.hpl.jena.sparql.function.FunctionBase
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.FunctionBase0 r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.FunctionBase0;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionBase: void <init>()>();

        return;
    }

    public void checkBuild(java.lang.String, com.hp.hpl.jena.sparql.expr.ExprList)
    {
        com.hp.hpl.jena.query.QueryBuildException $r1;
        com.hp.hpl.jena.sparql.function.FunctionBase0 r4;
        com.hp.hpl.jena.sparql.expr.ExprList r0;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.String $r5, $r8, r9;

        r4 := @this: com.hp.hpl.jena.sparql.function.FunctionBase0;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.sparql.expr.ExprList;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprList: int size()>();

        if $i0 == 0 goto label1;

        $r1 = new com.hp.hpl.jena.query.QueryBuildException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Function \'");

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' takes no arguments");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    public final com.hp.hpl.jena.sparql.expr.NodeValue exec(java.util.List)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r2;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r3;
        int $i0, $i1;
        java.lang.String $r6, $r10, $r14, $r17;
        java.util.List r0;
        com.hp.hpl.jena.sparql.function.FunctionBase0 r1;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r11;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r12, $r13, $r15, $r16;

        r1 := @this: com.hp.hpl.jena.sparql.function.FunctionBase0;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r11 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Function \'");

        $r14 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Null args list");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 == 0 goto label2;

        $r3 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Function \'");

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Wanted 0, got ");

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label2:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.function.FunctionBase0: com.hp.hpl.jena.sparql.expr.NodeValue exec()>();

        return $r2;
    }

    public abstract com.hp.hpl.jena.sparql.expr.NodeValue exec();
}
