public class org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder extends org.apache.batik.parser.DefaultPathHandler
{
    protected org.apache.batik.dom.svg.ListHandler listHandler;
    private final org.apache.batik.dom.svg.AbstractSVGPathSegList this$0;

    public void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList, org.apache.batik.dom.svg.ListHandler)
    {
        org.apache.batik.dom.svg.ListHandler r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGPathSegList;

        r2 := @parameter1: org.apache.batik.dom.svg.ListHandler;

        specialinvoke r0.<org.apache.batik.parser.DefaultPathHandler: void <init>()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0> = r1;

        r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler> = r2;

        return;
    }

    public void startPath() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r1.<org.apache.batik.dom.svg.ListHandler: void startList()>();

        return;
    }

    public void endPath() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r1.<org.apache.batik.dom.svg.ListHandler: void endList()>();

        return;
    }

    public void movetoRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 3, "m", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void movetoAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 2, "M", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void closePath() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String)>($r2, 1, "z");

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 5, "l", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 4, "L", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoHorizontalRel(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>($r2, 13, "h", f0);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoHorizontalAbs(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>($r2, 12, "H", f0);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoVerticalRel(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>($r2, 15, "v", f0);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void linetoVerticalAbs(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>($r2, 14, "V", f0);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoCubicRel(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem $r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float,float,float)>($r2, 7, "c", f0, f1, f2, f3, f4, f5);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoCubicAbs(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem $r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float,float,float)>($r2, 6, "C", f0, f1, f2, f3, f4, f5);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoCubicSmoothRel(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>($r2, 17, "s", f0, f1, f2, f3);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoCubicSmoothAbs(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>($r2, 16, "S", f0, f1, f2, f3);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoQuadraticRel(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>($r2, 9, "q", f0, f1, f2, f3);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoQuadraticAbs(float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        float f0, f1, f2, f3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem $r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>($r2, 8, "Q", f0, f1, f2, f3);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoQuadraticSmoothRel(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 19, "t", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void curvetoQuadraticSmoothAbs(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem $r1;
        org.apache.batik.dom.svg.ListHandler $r3;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>($r2, 18, "T", f0, f1);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void arcRel(float, float, float, boolean, boolean, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem $r1;
        float f0, f1, f2, f3, f4;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        f3 := @parameter5: float;

        f4 := @parameter6: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,boolean,boolean,float,float)>($r2, 11, "a", f0, f1, f2, z0, z1, f3, f4);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }

    public void arcAbs(float, float, float, boolean, boolean, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGPathSegList $r2;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem $r1;
        float f0, f1, f2, f3, f4;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        f3 := @parameter5: float;

        f4 := @parameter6: float;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList$PathSegListBuilder: org.apache.batik.dom.svg.AbstractSVGPathSegList this$0>;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,boolean,boolean,float,float)>($r2, 10, "A", f0, f1, f2, z0, z1, f3, f4);

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r1);

        return;
    }
}
