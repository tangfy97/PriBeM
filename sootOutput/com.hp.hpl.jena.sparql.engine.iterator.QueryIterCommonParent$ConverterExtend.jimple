class com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend extends java.lang.Object implements com.hp.hpl.jena.sparql.engine.iterator.QueryIterConvert$Converter
{
    private com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding;

    void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding convert(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend r0;
        com.hp.hpl.jena.graph.Node $r9, $r10;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r5;
        java.lang.String $r15, $r20, $r25;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r6;
        com.hp.hpl.jena.sparql.core.Var r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1, r2, $r3, $r4;
        com.hp.hpl.jena.sparql.ARQInternalErrorException $r16;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r21, $r22, $r23, $r24;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding>;

        if $r1 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return r2;

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterCommonParent$ConverterExtend: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingFactory: com.hp.hpl.jena.sparql.engine.binding.BindingMap create(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r4);

        $r6 = interfaceinvoke r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.sparql.core.Var) $r7;

        $r9 = interfaceinvoke r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r8);

        $z2 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: boolean contains(com.hp.hpl.jena.sparql.core.Var)>(r8);

        if $z2 == 0 goto label5;

        $r10 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r8);

        $z3 = virtualinvoke $r10.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label4;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding already for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (same value)");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r25);

        goto label5;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding already for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (different values)");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void fatal(java.lang.Object,java.lang.String)>(r0, $r15);

        $r16 = new com.hp.hpl.jena.sparql.ARQInternalErrorException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible bindings for ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.hp.hpl.jena.sparql.ARQInternalErrorException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label5:
        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: void add(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>(r8, $r9);

        goto label3;

     label6:
        return $r5;
    }
}
