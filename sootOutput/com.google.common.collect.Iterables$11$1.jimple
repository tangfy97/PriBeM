class com.google.common.collect.Iterables$11$1 extends java.lang.Object implements java.util.Iterator
{
    boolean atStart;
    final java.util.Iterator val$iterator;
    final com.google.common.collect.Iterables$11 this$0;

    void <init>(com.google.common.collect.Iterables$11, java.util.Iterator)
    {
        com.google.common.collect.Iterables$11 r1;
        java.util.Iterator r2;
        com.google.common.collect.Iterables$11$1 r0;

        r0 := @this: com.google.common.collect.Iterables$11$1;

        r1 := @parameter0: com.google.common.collect.Iterables$11;

        r2 := @parameter1: java.util.Iterator;

        r0.<com.google.common.collect.Iterables$11$1: com.google.common.collect.Iterables$11 this$0> = r1;

        r0.<com.google.common.collect.Iterables$11$1: java.util.Iterator val$iterator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.Iterables$11$1: boolean atStart> = 1;

        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        com.google.common.collect.Iterables$11$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Iterables$11$1;

        $r1 = r0.<com.google.common.collect.Iterables$11$1: java.util.Iterator val$iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Throwable $r4;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;
        com.google.common.collect.Iterables$11$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Iterables$11$1;

        $z0 = virtualinvoke r0.<com.google.common.collect.Iterables$11$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<com.google.common.collect.Iterables$11$1: java.util.Iterator val$iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

     label2:
        r0.<com.google.common.collect.Iterables$11$1: boolean atStart> = 0;

        return $r2;

     label3:
        $r4 := @caughtexception;

     label4:
        r0.<com.google.common.collect.Iterables$11$1: boolean atStart> = 0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r2;
        java.util.Iterator $r1;
        com.google.common.collect.Iterables$11$1 r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.Iterables$11$1;

        $z0 = r0.<com.google.common.collect.Iterables$11$1: boolean atStart>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.google.common.collect.Iterables$11$1: java.util.Iterator val$iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }
}
