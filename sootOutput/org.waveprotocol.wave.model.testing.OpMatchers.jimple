public class org.waveprotocol.wave.model.testing.OpMatchers extends java.lang.Object
{

    public static org.hamcrest.Matcher addParticipantOperation()
    {
        org.waveprotocol.wave.model.testing.OpMatchers$1 $r1;
        org.hamcrest.Matcher $r2;

        $r1 = new org.waveprotocol.wave.model.testing.OpMatchers$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.testing.OpMatchers$1: void <init>()>();

        $r2 = (org.hamcrest.Matcher) $r1;

        return $r2;
    }

    public static org.hamcrest.Matcher opBy(java.lang.String)
    {
        org.waveprotocol.wave.model.testing.OpMatchers$2 $r2;
        java.lang.String r1;
        org.hamcrest.Matcher $r3;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.waveprotocol.wave.model.testing.OpMatchers$2;

        specialinvoke $r2.<org.waveprotocol.wave.model.testing.OpMatchers$2: void <init>(java.lang.String)>(r1);

        $r3 = (org.hamcrest.Matcher) $r2;

        return $r3;
    }

    public static org.hamcrest.Matcher waveletBlipOperation()
    {
        org.waveprotocol.wave.model.testing.OpMatchers$3 $r1;
        org.hamcrest.Matcher $r2;

        $r1 = new org.waveprotocol.wave.model.testing.OpMatchers$3;

        specialinvoke $r1.<org.waveprotocol.wave.model.testing.OpMatchers$3: void <init>()>();

        $r2 = (org.hamcrest.Matcher) $r1;

        return $r2;
    }

    private void <init>()
    {
        org.waveprotocol.wave.model.testing.OpMatchers r0;

        r0 := @this: org.waveprotocol.wave.model.testing.OpMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
