public abstract class org.eclipse.jetty.server.session.AbstractSessionManager extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.server.SessionManager
{
    static final org.eclipse.jetty.util.log.Logger __log;
    public java.util.Set __defaultSessionTrackingModes;
    public static final java.lang.String SESSION_KNOWN_ONLY_TO_AUTHENTICATED;
    public static final int __distantFuture;
    static final javax.servlet.http.HttpSessionContext __nullSessionContext;
    private boolean _usingCookies;
    protected int _dftMaxIdleSecs;
    protected org.eclipse.jetty.server.session.SessionHandler _sessionHandler;
    protected boolean _httpOnly;
    protected org.eclipse.jetty.server.SessionIdManager _sessionIdManager;
    protected boolean _secureCookies;
    protected boolean _secureRequestOnly;
    protected final java.util.List _sessionAttributeListeners;
    protected final java.util.List _sessionListeners;
    protected java.lang.ClassLoader _loader;
    protected org.eclipse.jetty.server.handler.ContextHandler$Context _context;
    protected java.lang.String _sessionCookie;
    protected java.lang.String _sessionIdPathParameterName;
    protected java.lang.String _sessionIdPathParameterNamePrefix;
    protected java.lang.String _sessionDomain;
    protected java.lang.String _sessionPath;
    protected int _maxCookieAge;
    protected int _refreshCookieAge;
    protected boolean _nodeIdInSessionId;
    protected boolean _checkingRemoteSessionIdEncoding;
    protected java.lang.String _sessionComment;
    public java.util.Set _sessionTrackingModes;
    private boolean _usingURLs;
    protected final org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats;
    protected final org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats;
    private javax.servlet.SessionCookieConfig _cookieConfig;

    public static javax.servlet.http.HttpSession renewSession(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpSession, boolean)
    {
        java.util.Enumeration $r1;
        java.util.HashMap $r0;
        javax.servlet.http.HttpServletRequest r2;
        java.lang.Boolean $r10;
        java.lang.String $r8, r14;
        boolean $z0, z1, $z2;
        javax.servlet.http.HttpSession $r3, r13;
        java.util.Map$Entry r15;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r7, $r9, $r11, $r12;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        r13 := @parameter1: javax.servlet.http.HttpSession;

        z1 := @parameter2: boolean;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = interfaceinvoke r13.<javax.servlet.http.HttpSession: java.util.Enumeration getAttributeNames()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r14 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r13.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>(r14);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r12);

        interfaceinvoke r13.<javax.servlet.http.HttpSession: void removeAttribute(java.lang.String)>(r14);

        goto label1;

     label2:
        interfaceinvoke r13.<javax.servlet.http.HttpSession: void invalidate()>();

        $r3 = interfaceinvoke r2.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(1);

        if z1 == 0 goto label3;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r3.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.security.sessionKnownOnlytoAuthenticated", $r10);

     label3:
        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $r9 = interfaceinvoke r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r3.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>($r8, $r9);

        goto label4;

     label5:
        return $r3;
    }

    public void <init>()
    {
        javax.servlet.SessionTrackingMode[] $r2;
        java.util.HashSet $r19;
        int $i1, $i3;
        java.lang.String $r11, $r14;
        org.eclipse.jetty.server.session.AbstractSessionManager$2 $r25;
        java.util.Set $r6, $r18;
        javax.servlet.SessionTrackingMode $r3, $r4;
        java.util.List $r5;
        org.eclipse.jetty.util.statistic.CounterStatistic $r23;
        org.eclipse.jetty.util.statistic.SampleStatistic $r24;
        java.lang.StringBuilder $r10, $r12, $r13, $r22;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        java.util.concurrent.CopyOnWriteArrayList $r20, $r21;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        $r19 = new java.util.HashSet;

        $r2 = newarray (javax.servlet.SessionTrackingMode)[2];

        $r3 = <javax.servlet.SessionTrackingMode: javax.servlet.SessionTrackingMode COOKIE>;

        $r2[0] = $r3;

        $r4 = <javax.servlet.SessionTrackingMode: javax.servlet.SessionTrackingMode URL>;

        $r2[1] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r19.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r19);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set __defaultSessionTrackingModes> = $r6;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingCookies> = 1;

        $i1 = (int) -1;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs> = $i1;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _httpOnly> = 0;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _secureCookies> = 0;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _secureRequestOnly> = 1;

        $r20 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners> = $r20;

        $r21 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners> = $r21;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie> = "JSESSIONID";

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterName> = "jsessionid";

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r11 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterNamePrefix> = $r14;

        $i3 = (int) -1;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _maxCookieAge> = $i3;

        $r23 = new org.eclipse.jetty.util.statistic.CounterStatistic;

        specialinvoke $r23.<org.eclipse.jetty.util.statistic.CounterStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats> = $r23;

        $r24 = new org.eclipse.jetty.util.statistic.SampleStatistic;

        specialinvoke $r24.<org.eclipse.jetty.util.statistic.SampleStatistic: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats> = $r24;

        $r25 = new org.eclipse.jetty.server.session.AbstractSessionManager$2;

        specialinvoke $r25.<org.eclipse.jetty.server.session.AbstractSessionManager$2: void <init>(org.eclipse.jetty.server.session.AbstractSessionManager)>(r0);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig> = $r25;

        $r18 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set __defaultSessionTrackingModes>;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void setSessionTrackingModes(java.util.Set)>($r18);

        return;
    }

    public org.eclipse.jetty.server.handler.ContextHandler$Context getContext()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        return $r1;
    }

    public org.eclipse.jetty.server.handler.ContextHandler getContextHandler()
    {
        org.eclipse.jetty.server.handler.ContextHandler $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.handler.ContextHandler$Context: org.eclipse.jetty.server.handler.ContextHandler getContextHandler()>();

        return $r2;
    }

    public java.lang.String getSessionPath()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionPath>;

        return $r1;
    }

    public int getMaxCookieAge()
    {
        int $i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _maxCookieAge>;

        return $i0;
    }

    public org.eclipse.jetty.http.HttpCookie access(javax.servlet.http.HttpSession, boolean)
    {
        javax.servlet.SessionCookieConfig $r7;
        long $l0, $l3, $l4, $l5, $l7;
        byte $b8;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r4, $r5;
        int $i1, $i2, $i6, $i9;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, z3;
        javax.servlet.http.HttpSession r0;
        org.eclipse.jetty.http.HttpCookie $r6;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r3;

        r3 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        z3 := @parameter1: boolean;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: boolean access(long)>($l0);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean isUsingCookies()>();

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: boolean isIdChanged()>();

        if $z2 != 0 goto label1;

        $r7 = virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig getSessionCookieConfig()>();

        $i1 = interfaceinvoke $r7.<javax.servlet.SessionCookieConfig: int getMaxAge()>();

        if $i1 <= 0 goto label4;

        $i2 = virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: int getRefreshCookieAge()>();

        if $i2 <= 0 goto label4;

        $l3 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: long getCookieSetTime()>();

        $l4 = $l0 - $l3;

        $l5 = $l4 / 1000L;

        $i6 = virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: int getRefreshCookieAge()>();

        $l7 = (long) $i6;

        $b8 = $l5 cmp $l7;

        $i9 = (int) $b8;

        if $i9 <= 0 goto label4;

     label1:
        $r4 = r3.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r4 != null goto label2;

        $r8 = "/";

        goto label3;

     label2:
        $r5 = r3.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r8 = virtualinvoke $r5.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getContextPath()>();

     label3:
        $r6 = virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.http.HttpCookie getSessionCookie(javax.servlet.http.HttpSession,java.lang.String,boolean)>(r0, $r8, z3);

        virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: void cookieSet()>();

        virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: void setIdChanged(boolean)>(0);

        return $r6;

     label4:
        return null;
    }

    public void addEventListener(java.util.EventListener)
    {
        javax.servlet.http.HttpSessionListener $r2;
        java.util.EventListener r0;
        javax.servlet.http.HttpSessionAttributeListener $r4;
        java.util.List $r3, $r5;
        org.eclipse.jetty.server.session.AbstractSessionManager r1;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: java.util.EventListener;

        $z0 = r0 instanceof javax.servlet.http.HttpSessionAttributeListener;

        if $z0 == 0 goto label1;

        $r5 = r1.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners>;

        $r4 = (javax.servlet.http.HttpSessionAttributeListener) r0;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        $z1 = r0 instanceof javax.servlet.http.HttpSessionListener;

        if $z1 == 0 goto label2;

        $r3 = r1.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        $r2 = (javax.servlet.http.HttpSessionListener) r0;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public void clearEventListeners()
    {
        java.util.List $r1, $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public void complete(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r3;

        r3 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: void complete()>();

        return;
    }

    public void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.server.handler.ContextHandler$Context $r1, $r6, $r7, $r9, $r12, $r14, $r16, $r18;
        java.lang.Thread $r2;
        org.eclipse.jetty.server.Server $r23;
        boolean $z0, $z1;
        java.lang.ClassLoader $r3;
        java.lang.Throwable $r28;
        org.eclipse.jetty.server.SessionIdManager $r4, $r5, $r21, $r24, $r25, $r27;
        int $i0, $i1, $i3;
        java.lang.String $r8, $r10, $r11, $r13, $r15, $r17, $r19, $r20, $r29;
        org.eclipse.jetty.server.session.HashSessionIdManager $r30;
        org.eclipse.jetty.server.session.SessionHandler $r22;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = staticinvoke <org.eclipse.jetty.server.handler.ContextHandler: org.eclipse.jetty.server.handler.ContextHandler$Context getCurrentContext()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context> = $r1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.ClassLoader _loader> = $r3;

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        if $r4 != null goto label06;

        $r22 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.session.SessionHandler getSessionHandler()>();

        $r23 = virtualinvoke $r22.<org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.server.Server getServer()>();

        entermonitor $r23;

     label01:
        $r24 = virtualinvoke $r23.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.SessionIdManager getSessionIdManager()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager> = $r24;

        $r25 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        if $r25 != null goto label02;

        $r30 = new org.eclipse.jetty.server.session.HashSessionIdManager;

        specialinvoke $r30.<org.eclipse.jetty.server.session.HashSessionIdManager: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager> = $r30;

        $r27 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        virtualinvoke $r23.<org.eclipse.jetty.server.Server: void setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)>($r27);

     label02:
        exitmonitor $r23;

     label03:
        goto label06;

     label04:
        $r28 := @caughtexception;

        exitmonitor $r23;

     label05:
        throw $r28;

     label06:
        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        $z0 = interfaceinvoke $r5.<org.eclipse.jetty.server.SessionIdManager: boolean isStarted()>();

        if $z0 != 0 goto label07;

        $r21 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        interfaceinvoke $r21.<org.eclipse.jetty.server.SessionIdManager: void start()>();

     label07:
        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        if $r6 == null goto label13;

        $r7 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r8 = virtualinvoke $r7.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.SessionCookie");

        if $r8 == null goto label08;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie> = $r8;

     label08:
        $r9 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r10 = virtualinvoke $r9.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.SessionIdPathParameterName");

        if $r10 == null goto label09;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void setSessionIdPathParameterName(java.lang.String)>($r10);

     label09:
        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _maxCookieAge>;

        $i3 = (int) -1;

        if $i0 != $i3 goto label10;

        $r18 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r19 = virtualinvoke $r18.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.MaxAge");

        if $r19 == null goto label10;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _maxCookieAge> = $i1;

     label10:
        $r29 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionDomain>;

        if $r29 != null goto label11;

        $r16 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r17 = virtualinvoke $r16.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.SessionDomain");

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionDomain> = $r17;

     label11:
        $r11 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionPath>;

        if $r11 != null goto label12;

        $r14 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.SessionPath");

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionPath> = $r15;

     label12:
        $r12 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        $r13 = virtualinvoke $r12.<org.eclipse.jetty.server.handler.ContextHandler$Context: java.lang.String getInitParameter(java.lang.String)>("org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding");

        if $r13 == null goto label13;

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r13);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _checkingRemoteSessionIdEncoding> = $z1;

     label13:
        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStart()>();

        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    public void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStop()>();

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void invalidateSessions()>();

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.ClassLoader _loader> = null;

        return;
    }

    public boolean getHttpOnly()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _httpOnly>;

        return $z0;
    }

    public javax.servlet.http.HttpSession getHttpSession(java.lang.String)
    {
        org.eclipse.jetty.server.SessionIdManager $r1;
        java.lang.String r2, $r3, $r5;
        org.eclipse.jetty.server.session.AbstractSession $r4;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager getSessionIdManager()>();

        $r3 = interfaceinvoke $r1.<org.eclipse.jetty.server.SessionIdManager: java.lang.String getClusterId(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.session.AbstractSession getSession(java.lang.String)>($r3);

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getNodeId()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        virtualinvoke $r4.<org.eclipse.jetty.server.session.AbstractSession: void setIdChanged(boolean)>(1);

     label1:
        return $r4;
    }

    public org.eclipse.jetty.server.SessionIdManager getIdManager()
    {
        org.eclipse.jetty.server.SessionIdManager $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager getSessionIdManager()>();

        return $r1;
    }

    public org.eclipse.jetty.server.SessionIdManager getSessionIdManager()
    {
        org.eclipse.jetty.server.SessionIdManager $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        return $r1;
    }

    public int getMaxInactiveInterval()
    {
        int $i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        return $i0;
    }

    public int getMaxSessions()
    {
        int $i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int getSessionsMax()>();

        return $i0;
    }

    public int getSessionsMax()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        int $i1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getMax()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public int getSessionsTotal()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        int $i1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getTotal()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public org.eclipse.jetty.server.SessionIdManager getMetaManager()
    {
        org.eclipse.jetty.server.SessionIdManager $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager getSessionIdManager()>();

        return $r1;
    }

    public int getMinSessions()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        return 0;
    }

    public int getRefreshCookieAge()
    {
        int $i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _refreshCookieAge>;

        return $i0;
    }

    public boolean getSecureCookies()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _secureCookies>;

        return $z0;
    }

    public boolean isSecureRequestOnly()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _secureRequestOnly>;

        return $z0;
    }

    public void setSecureRequestOnly(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _secureRequestOnly> = z0;

        return;
    }

    public java.lang.String getSessionCookie()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie>;

        return $r1;
    }

    public org.eclipse.jetty.http.HttpCookie getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)
    {
        javax.servlet.SessionCookieConfig $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.servlet.http.HttpSession r2;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r4, r11, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r22, $r23;
        org.eclipse.jetty.http.HttpCookie $r14, r18, $r19;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r2 := @parameter0: javax.servlet.http.HttpSession;

        r11 := @parameter1: java.lang.String;

        z3 := @parameter2: boolean;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean isUsingCookies()>();

        if $z0 == 0 goto label14;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionPath>;

        if $r1 != null goto label01;

        $r12 = r11;

        goto label02;

     label01:
        $r12 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionPath>;

     label02:
        if $r12 == null goto label03;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 != 0 goto label04;

     label03:
        $r13 = "/";

        goto label05;

     label04:
        $r13 = $r12;

     label05:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String getNodeId(javax.servlet.http.HttpSession)>(r2);

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionComment>;

        if $r4 != null goto label09;

        $r14 = new org.eclipse.jetty.http.HttpCookie;

        $r15 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie>;

        $r16 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionDomain>;

        $r17 = $r13;

        $r8 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $i1 = interfaceinvoke $r8.<javax.servlet.SessionCookieConfig: int getMaxAge()>();

        $r9 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $z6 = interfaceinvoke $r9.<javax.servlet.SessionCookieConfig: boolean isHttpOnly()>();

        $r10 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $z4 = interfaceinvoke $r10.<javax.servlet.SessionCookieConfig: boolean isSecure()>();

        if $z4 != 0 goto label06;

        $z5 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean isSecureRequestOnly()>();

        if $z5 == 0 goto label07;

        if z3 == 0 goto label07;

     label06:
        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        specialinvoke $r14.<org.eclipse.jetty.http.HttpCookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>($r15, $r3, $r16, $r17, $i1, $z6, $z7);

        r18 = $r14;

        goto label13;

     label09:
        $r19 = new org.eclipse.jetty.http.HttpCookie;

        $r20 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie>;

        $r21 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionDomain>;

        $r22 = $r13;

        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $i2 = interfaceinvoke $r5.<javax.servlet.SessionCookieConfig: int getMaxAge()>();

        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $z8 = interfaceinvoke $r6.<javax.servlet.SessionCookieConfig: boolean isHttpOnly()>();

        $r7 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        $z1 = interfaceinvoke $r7.<javax.servlet.SessionCookieConfig: boolean isSecure()>();

        if $z1 != 0 goto label10;

        $z2 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean isSecureRequestOnly()>();

        if $z2 == 0 goto label11;

        if z3 == 0 goto label11;

     label10:
        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        $r23 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionComment>;

        specialinvoke $r19.<org.eclipse.jetty.http.HttpCookie: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,java.lang.String,int)>($r20, $r3, $r21, $r22, $i2, $z8, $z9, $r23, 1);

        r18 = $r19;

     label13:
        return r18;

     label14:
        return null;
    }

    public java.lang.String getSessionDomain()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionDomain>;

        return $r1;
    }

    public org.eclipse.jetty.server.session.SessionHandler getSessionHandler()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        org.eclipse.jetty.server.session.SessionHandler $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.session.SessionHandler _sessionHandler>;

        return $r1;
    }

    public java.util.Map getSessionMap()
    {
        java.lang.UnsupportedOperationException $r0;
        org.eclipse.jetty.server.session.AbstractSessionManager r1;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int getSessions()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        int $i1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: long getCurrent()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.String getSessionIdPathParameterName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterName>;

        return $r1;
    }

    public java.lang.String getSessionIdPathParameterNamePrefix()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterNamePrefix>;

        return $r1;
    }

    public boolean isUsingCookies()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingCookies>;

        return $z0;
    }

    public boolean isValid(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r3;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: boolean isValid()>();

        return $z0;
    }

    public java.lang.String getClusterId(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        java.lang.String $r3;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r4;

        r4 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getClusterId()>();

        return $r3;
    }

    public java.lang.String getNodeId(javax.servlet.http.HttpSession)
    {
        javax.servlet.http.HttpSession r0;
        java.lang.String $r3;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r4;

        r4 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getNodeId()>();

        return $r3;
    }

    public javax.servlet.http.HttpSession newHttpSession(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r1;
        int $i0;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.session.AbstractSession newSession(javax.servlet.http.HttpServletRequest)>(r1);

        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        virtualinvoke $r2.<org.eclipse.jetty.server.session.AbstractSession: void setMaxInactiveInterval(int)>($i0);

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void addSession(org.eclipse.jetty.server.session.AbstractSession,boolean)>($r2, 1);

        return $r2;
    }

    public void removeEventListener(java.util.EventListener)
    {
        java.util.EventListener r0;
        java.util.List $r2, $r3;
        org.eclipse.jetty.server.session.AbstractSessionManager r1;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: java.util.EventListener;

        $z0 = r0 instanceof javax.servlet.http.HttpSessionAttributeListener;

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r0);

     label1:
        $z1 = r0 instanceof javax.servlet.http.HttpSessionListener;

        if $z1 == 0 goto label2;

        $r2 = r1.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

     label2:
        return;
    }

    public void resetStats()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void statsReset()>();

        return;
    }

    public void statsReset()
    {
        org.eclipse.jetty.util.statistic.CounterStatistic $r1;
        int $i0;
        org.eclipse.jetty.util.statistic.SampleStatistic $r2;
        long $l1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int getSessions()>();

        $l1 = (long) $i0;

        virtualinvoke $r1.<org.eclipse.jetty.util.statistic.CounterStatistic: void reset(long)>($l1);

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        virtualinvoke $r2.<org.eclipse.jetty.util.statistic.SampleStatistic: void reset()>();

        return;
    }

    public void setHttpOnly(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _httpOnly> = z0;

        return;
    }

    public void setIdManager(org.eclipse.jetty.server.SessionIdManager)
    {
        org.eclipse.jetty.server.SessionIdManager r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: org.eclipse.jetty.server.SessionIdManager;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)>(r1);

        return;
    }

    public void setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)
    {
        org.eclipse.jetty.server.SessionIdManager r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: org.eclipse.jetty.server.SessionIdManager;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager> = r1;

        return;
    }

    public void setMaxInactiveInterval(int)
    {
        int i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs> = i0;

        return;
    }

    public void setRefreshCookieAge(int)
    {
        int i0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: int _refreshCookieAge> = i0;

        return;
    }

    public void setSessionCookie(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionCookie> = r1;

        return;
    }

    public void setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        org.eclipse.jetty.server.session.SessionHandler r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: org.eclipse.jetty.server.session.SessionHandler;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.session.SessionHandler _sessionHandler> = r1;

        return;
    }

    public void setSessionIdPathParameterName(java.lang.String)
    {
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String r1, $r2, $r5, $r8, $r9, $r10;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r8 = "none";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r9 = null;

        goto label3;

     label2:
        $r9 = r1;

     label3:
        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterName> = $r9;

        if r1 == null goto label4;

        $r2 = "none";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

     label4:
        $r10 = null;

        goto label6;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String _sessionIdPathParameterNamePrefix> = $r10;

        return;
    }

    public void setUsingCookies(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingCookies> = z0;

        return;
    }

    protected abstract void addSession(org.eclipse.jetty.server.session.AbstractSession);

    protected void addSession(org.eclipse.jetty.server.session.AbstractSession, boolean)
    {
        java.lang.Throwable $r11;
        java.util.Iterator $r8;
        javax.servlet.http.HttpSessionListener r10;
        org.eclipse.jetty.server.SessionIdManager $r1, $r3;
        org.eclipse.jetty.server.session.AbstractSession r2;
        java.util.List $r5, $r7;
        org.eclipse.jetty.util.statistic.CounterStatistic $r4;
        javax.servlet.http.HttpSessionEvent $r6;
        java.lang.Object $r9;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r2 := @parameter0: org.eclipse.jetty.server.session.AbstractSession;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        interfaceinvoke $r3.<org.eclipse.jetty.server.SessionIdManager: void addSession(javax.servlet.http.HttpSession)>(r2);

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: void addSession(org.eclipse.jetty.server.session.AbstractSession)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r11;

     label5:
        if z0 == 0 goto label7;

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        virtualinvoke $r4.<org.eclipse.jetty.util.statistic.CounterStatistic: void increment()>();

        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        if $r5 == null goto label7;

        $r6 = new javax.servlet.http.HttpSessionEvent;

        specialinvoke $r6.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>(r2);

        $r7 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (javax.servlet.http.HttpSessionListener) $r9;

        interfaceinvoke r10.<javax.servlet.http.HttpSessionListener: void sessionCreated(javax.servlet.http.HttpSessionEvent)>($r6);

        goto label6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public abstract org.eclipse.jetty.server.session.AbstractSession getSession(java.lang.String);

    protected abstract void invalidateSessions() throws java.lang.Exception;

    protected abstract org.eclipse.jetty.server.session.AbstractSession newSession(javax.servlet.http.HttpServletRequest);

    public boolean isNodeIdInSessionId()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _nodeIdInSessionId>;

        return $z0;
    }

    public void setNodeIdInSessionId(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _nodeIdInSessionId> = z0;

        return;
    }

    public void removeSession(javax.servlet.http.HttpSession, boolean)
    {
        javax.servlet.http.HttpSession r0;
        org.eclipse.jetty.server.session.AbstractSession $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r3;
        boolean z0;

        r3 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r0 := @parameter0: javax.servlet.http.HttpSession;

        z0 := @parameter1: boolean;

        $r1 = (org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf) r0;

        $r2 = interfaceinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf: org.eclipse.jetty.server.session.AbstractSession getSession()>();

        virtualinvoke r3.<org.eclipse.jetty.server.session.AbstractSessionManager: void removeSession(org.eclipse.jetty.server.session.AbstractSession,boolean)>($r2, z0);

        return;
    }

    public void removeSession(org.eclipse.jetty.server.session.AbstractSession, boolean)
    {
        org.eclipse.jetty.server.SessionIdManager $r5, $r12;
        long $l0, $l1, $l2, $l3;
        javax.servlet.http.HttpSessionEvent $r7;
        java.lang.String $r2, $r13;
        boolean $z0, z1, $z2;
        double $d0, $d1;
        java.util.Iterator $r9;
        javax.servlet.http.HttpSessionListener r11;
        org.eclipse.jetty.server.session.AbstractSession r1;
        java.util.List $r6, $r8;
        org.eclipse.jetty.util.statistic.CounterStatistic $r3;
        org.eclipse.jetty.util.statistic.SampleStatistic $r4;
        java.lang.Object $r10;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r1 := @parameter0: org.eclipse.jetty.server.session.AbstractSession;

        z1 := @parameter1: boolean;

        $r2 = virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getClusterId()>();

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean removeSession(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $r3 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.CounterStatistic _sessionsStats>;

        virtualinvoke $r3.<org.eclipse.jetty.util.statistic.CounterStatistic: void decrement()>();

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: long getCreationTime()>();

        $l2 = $l0 - $l1;

        $d0 = (double) $l2;

        $d1 = $d0 / 1000.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d1);

        virtualinvoke $r4.<org.eclipse.jetty.util.statistic.SampleStatistic: void set(long)>($l3);

        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        interfaceinvoke $r5.<org.eclipse.jetty.server.SessionIdManager: void removeSession(javax.servlet.http.HttpSession)>(r1);

        if z1 == 0 goto label1;

        $r12 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        $r13 = virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getClusterId()>();

        interfaceinvoke $r12.<org.eclipse.jetty.server.SessionIdManager: void invalidateAll(java.lang.String)>($r13);

     label1:
        if z1 == 0 goto label3;

        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        if $r6 == null goto label3;

        $r7 = new javax.servlet.http.HttpSessionEvent;

        specialinvoke $r7.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>(r1);

        $r8 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionListeners>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (javax.servlet.http.HttpSessionListener) $r10;

        interfaceinvoke r11.<javax.servlet.http.HttpSessionListener: void sessionDestroyed(javax.servlet.http.HttpSessionEvent)>($r7);

        goto label2;

     label3:
        return;
    }

    protected abstract boolean removeSession(java.lang.String);

    public long getSessionTimeMax()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getMax()>();

        return $l0;
    }

    public java.util.Set getDefaultSessionTrackingModes()
    {
        java.util.Set $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set __defaultSessionTrackingModes>;

        return $r1;
    }

    public java.util.Set getEffectiveSessionTrackingModes()
    {
        java.util.Set $r1, $r2;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set _sessionTrackingModes>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public void setSessionTrackingModes(java.util.Set)
    {
        java.util.Set r2, $r4, $r6;
        javax.servlet.SessionTrackingMode $r3, $r5;
        java.util.HashSet $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r2 := @parameter0: java.util.Set;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set _sessionTrackingModes> = $r1;

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set _sessionTrackingModes>;

        $r3 = <javax.servlet.SessionTrackingMode: javax.servlet.SessionTrackingMode COOKIE>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingCookies> = $z0;

        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.Set _sessionTrackingModes>;

        $r5 = <javax.servlet.SessionTrackingMode: javax.servlet.SessionTrackingMode URL>;

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingURLs> = $z1;

        return;
    }

    public boolean isUsingURLs()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _usingURLs>;

        return $z0;
    }

    public javax.servlet.SessionCookieConfig getSessionCookieConfig()
    {
        javax.servlet.SessionCookieConfig $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.SessionCookieConfig _cookieConfig>;

        return $r1;
    }

    public long getSessionTimeTotal()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        $l0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: long getTotal()>();

        return $l0;
    }

    public double getSessionTimeMean()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getMean()>();

        return $d0;
    }

    public double getSessionTimeStdDev()
    {
        org.eclipse.jetty.util.statistic.SampleStatistic $r1;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        double $d0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.statistic.SampleStatistic _sessionTimeStats>;

        $d0 = virtualinvoke $r1.<org.eclipse.jetty.util.statistic.SampleStatistic: double getStdDev()>();

        return $d0;
    }

    public boolean isCheckingRemoteSessionIdEncoding()
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _checkingRemoteSessionIdEncoding>;

        return $z0;
    }

    public void setCheckingRemoteSessionIdEncoding(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _checkingRemoteSessionIdEncoding> = z0;

        return;
    }

    public void doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession, java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.util.Iterator $r7;
        org.eclipse.jetty.server.session.AbstractSession r3;
        javax.servlet.http.HttpSessionAttributeListener r9;
        java.util.List $r1, $r6;
        javax.servlet.http.HttpSessionBindingEvent $r2;
        java.lang.Object r5, $r8, r10, $r11;
        java.lang.String r4;
        org.eclipse.jetty.server.session.AbstractSessionManager r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSessionManager;

        r3 := @parameter0: org.eclipse.jetty.server.session.AbstractSession;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Object;

        r10 := @parameter3: java.lang.Object;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r2 = new javax.servlet.http.HttpSessionBindingEvent;

        if r5 != null goto label1;

        $r11 = r10;

        goto label2;

     label1:
        $r11 = r5;

     label2:
        specialinvoke $r2.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>(r3, r4, $r11);

        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSessionManager: java.util.List _sessionAttributeListeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (javax.servlet.http.HttpSessionAttributeListener) $r8;

        if r5 != null goto label4;

        interfaceinvoke r9.<javax.servlet.http.HttpSessionAttributeListener: void attributeAdded(javax.servlet.http.HttpSessionBindingEvent)>($r2);

        goto label6;

     label4:
        if r10 != null goto label5;

        interfaceinvoke r9.<javax.servlet.http.HttpSessionAttributeListener: void attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)>($r2);

        goto label6;

     label5:
        interfaceinvoke r9.<javax.servlet.http.HttpSessionAttributeListener: void attributeReplaced(javax.servlet.http.HttpSessionBindingEvent)>($r2);

     label6:
        goto label3;

     label7:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;
        org.eclipse.jetty.server.session.AbstractSessionManager$1 $r1;

        <org.eclipse.jetty.server.session.AbstractSessionManager: int __distantFuture> = 628992000;

        <org.eclipse.jetty.server.session.AbstractSessionManager: java.lang.String SESSION_KNOWN_ONLY_TO_AUTHENTICATED> = "org.eclipse.jetty.security.sessionKnownOnlytoAuthenticated";

        $r0 = <org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.util.log.Logger LOG>;

        <org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.util.log.Logger __log> = $r0;

        $r1 = new org.eclipse.jetty.server.session.AbstractSessionManager$1;

        specialinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager$1: void <init>()>();

        <org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.http.HttpSessionContext __nullSessionContext> = $r1;

        return;
    }
}
