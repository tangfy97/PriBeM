public class org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper extends java.lang.Object implements javax.ws.rs.ext.ExceptionMapper
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String ERROR_MESSAGE_START;
    private boolean printStackTrace;
    private boolean addMessageToResponse;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: boolean printStackTrace> = 1;

        return;
    }

    public javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)
    {
        java.util.logging.Level $r20;
        org.apache.cxf.logging.FaultListener r18;
        java.lang.String r5, $r7, $r14, $r19;
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r3;
        boolean z0, $z1, $z2, $z3;
        org.apache.cxf.message.Message $r4, $r12;
        java.util.logging.Logger $r6;
        javax.ws.rs.core.Response $r1, $r8, r17;
        javax.ws.rs.core.Response$ResponseBuilder $r9, $r10, $r11, $r16;
        javax.ws.rs.WebApplicationException r0;
        java.lang.Object $r2, $r15;
        java.lang.Class $r13;

        r3 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        r0 := @parameter0: javax.ws.rs.WebApplicationException;

        $r1 = virtualinvoke r0.<javax.ws.rs.WebApplicationException: javax.ws.rs.core.Response getResponse()>();

        r17 = $r1;

        if $r1 != null goto label01;

        $r16 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder serverError()>();

        r17 = virtualinvoke $r16.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label01:
        $r2 = virtualinvoke r17.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        if $r2 == null goto label02;

        $z3 = 0;

        goto label03;

     label02:
        $z3 = r3.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: boolean addMessageToResponse>;

     label03:
        z0 = $z3;

        $r4 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        r18 = null;

        if $r4 == null goto label04;

        $r12 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        $r13 = class "Lorg/apache/cxf/logging/FaultListener;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = interfaceinvoke $r12.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r14);

        r18 = (org.apache.cxf.logging.FaultListener) $r15;

     label04:
        if z0 != 0 goto label05;

        if r18 == null goto label06;

     label05:
        $r19 = virtualinvoke r3.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: java.lang.String buildErrorMessage(javax.ws.rs.core.Response,javax.ws.rs.WebApplicationException)>(r17, r0);

        goto label07;

     label06:
        $r19 = null;

     label07:
        r5 = $r19;

        if r18 == null goto label08;

        $z2 = interfaceinvoke r18.<org.apache.cxf.logging.FaultListener: boolean faultOccurred(java.lang.Exception,java.lang.String,org.apache.cxf.message.Message)>(r0, $r19, $r4);

        if $z2 != 0 goto label11;

     label08:
        $z1 = r3.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: boolean printStackTrace>;

        if $z1 == 0 goto label09;

        $r20 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        goto label10;

     label09:
        $r20 = <java.util.logging.Level: java.util.logging.Level FINE>;

     label10:
        $r6 = <org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: java.util.logging.Logger LOG>;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: java.lang.String getStackTrace(java.lang.Exception)>(r0);

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r20, $r7);

     label11:
        if z0 == 0 goto label12;

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response copyResponseIfNeeded(javax.ws.rs.core.Response)>(r17);

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response$ResponseBuilder fromResponse(javax.ws.rs.core.Response)>($r8);

        $r10 = virtualinvoke $r9.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r5);

        $r11 = virtualinvoke $r10.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>("text/plain");

        r17 = virtualinvoke $r11.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label12:
        return r17;
    }

    protected java.lang.String buildErrorMessage(javax.ws.rs.core.Response, javax.ws.rs.WebApplicationException)
    {
        java.lang.Throwable $r4;
        int $i0;
        java.lang.String $r5, $r10, $r13, r14;
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r12;
        javax.ws.rs.core.Response r2;
        javax.ws.rs.WebApplicationException r3;
        java.lang.StringBuilder $r0, $r1, $r6, $r7, $r8, $r11;
        java.lang.Class $r9;

        r12 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        r2 := @parameter0: javax.ws.rs.core.Response;

        r3 := @parameter1: javax.ws.rs.WebApplicationException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WebApplicationException has been caught, status: ");

        $i0 = virtualinvoke r2.<javax.ws.rs.core.Response: int getStatus()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke r3.<javax.ws.rs.WebApplicationException: java.lang.Throwable getCause()>();

        if $r4 != null goto label1;

        $r13 = virtualinvoke r3.<javax.ws.rs.WebApplicationException: java.lang.String getMessage()>();

        goto label2;

     label1:
        $r13 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

     label2:
        r14 = $r13;

        if $r13 != null goto label3;

        if $r4 == null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception cause class: ");

        $r9 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        if r14 == null goto label4;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

     label4:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String getStackTrace(java.lang.Exception)
    {
        java.io.PrintWriter $r2;
        java.io.StringWriter $r0;
        java.lang.String $r3;
        java.lang.Exception r1;

        r1 := @parameter0: java.lang.Exception;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        virtualinvoke r1.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r2);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public void setPrintStackTrace(boolean)
    {
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: boolean printStackTrace> = z0;

        return;
    }

    public void setAddMessageToResponse(boolean)
    {
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: boolean addMessageToResponse> = z0;

        return;
    }

    public volatile javax.ws.rs.core.Response toResponse(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        javax.ws.rs.core.Response $r3;
        javax.ws.rs.WebApplicationException $r2;
        org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = (javax.ws.rs.WebApplicationException) r1;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: java.lang.String ERROR_MESSAGE_START> = "WebApplicationException has been caught, status: ";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/impl/WebApplicationExceptionMapper;");

        <org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
