class jena.spatialindexer$ProgressMonitor extends java.lang.Object
{
    java.lang.String progressMessage;
    long startTime;
    long progressCount;
    long intervalStartTime;
    long progressAtStartOfInterval;
    long reportingInterval;

    void <init>(java.lang.String)
    {
        jena.spatialindexer$ProgressMonitor r0;
        java.lang.String r1;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jena.spatialindexer$ProgressMonitor: long reportingInterval> = 10000L;

        r0.<jena.spatialindexer$ProgressMonitor: java.lang.String progressMessage> = r1;

        virtualinvoke r0.<jena.spatialindexer$ProgressMonitor: void start()>();

        return;
    }

    void start()
    {
        jena.spatialindexer$ProgressMonitor r0;
        long $l0;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<jena.spatialindexer$ProgressMonitor: long startTime> = $l0;

        r0.<jena.spatialindexer$ProgressMonitor: long progressCount> = 0L;

        specialinvoke r0.<jena.spatialindexer$ProgressMonitor: void startInterval()>();

        return;
    }

    private void startInterval()
    {
        jena.spatialindexer$ProgressMonitor r0;
        long $l0, $l1;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<jena.spatialindexer$ProgressMonitor: long intervalStartTime> = $l0;

        $l1 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        r0.<jena.spatialindexer$ProgressMonitor: long progressAtStartOfInterval> = $l1;

        return;
    }

    void progressByOne()
    {
        jena.spatialindexer$ProgressMonitor r0;
        long $l0, $l1, $l2;
        boolean $z0;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        $l0 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $l1 = $l0 + 1L;

        r0.<jena.spatialindexer$ProgressMonitor: long progressCount> = $l1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z0 = virtualinvoke r0.<jena.spatialindexer$ProgressMonitor: boolean reportDue(long)>($l2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<jena.spatialindexer$ProgressMonitor: void report(long)>($l2);

        specialinvoke r0.<jena.spatialindexer$ProgressMonitor: void startInterval()>();

     label1:
        return;
    }

    boolean reportDue(long)
    {
        long l0, $l1, $l2, $l3;
        byte $b4;
        int $i5;
        jena.spatialindexer$ProgressMonitor r0;
        boolean $z0;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        l0 := @parameter0: long;

        $l1 = r0.<jena.spatialindexer$ProgressMonitor: long intervalStartTime>;

        $l3 = l0 - $l1;

        $l2 = r0.<jena.spatialindexer$ProgressMonitor: long reportingInterval>;

        $b4 = $l3 cmp $l2;

        $i5 = (int) $b4;

        if $i5 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void report(long)
    {
        long $l0, $l1, l2, l3, $l4, l5, $l6, l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14;
        java.lang.String $r6, $r11;
        org.slf4j.Logger $r12;
        jena.spatialindexer$ProgressMonitor r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        l3 := @parameter0: long;

        $l1 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $l0 = r0.<jena.spatialindexer$ProgressMonitor: long progressAtStartOfInterval>;

        l2 = $l1 - $l0;

        $l4 = r0.<jena.spatialindexer$ProgressMonitor: long intervalStartTime>;

        l5 = l3 - $l4;

        $l6 = r0.<jena.spatialindexer$ProgressMonitor: long startTime>;

        l7 = l3 - $l6;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $l8 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l9 = l5 / 1000L;

        $l10 = l2 / $l9;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" per second)");

        $r6 = r0.<jena.spatialindexer$ProgressMonitor: java.lang.String progressMessage>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l12 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $l11 = l7 / 1000L;

        $l13 = staticinvoke <java.lang.Math: long max(long,long)>($l11, 1L);

        $l14 = $l12 / $l13;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" per second overall)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <jena.spatialindexer: org.slf4j.Logger access$000()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r11);

        return;
    }

    void close()
    {
        long $l0, $l1, l2, $l3, $l4, $l5, $l6, $l7;
        java.lang.String $r6, $r8;
        org.slf4j.Logger $r9;
        jena.spatialindexer$ProgressMonitor r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7;

        r0 := @this: jena.spatialindexer$ProgressMonitor;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<jena.spatialindexer$ProgressMonitor: long startTime>;

        l2 = $l0 - $l1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $l3 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l5 = r0.<jena.spatialindexer$ProgressMonitor: long progressCount>;

        $l4 = l2 / 1000L;

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>($l4, 1L);

        $l7 = $l5 / $l6;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" per second) ");

        $r6 = r0.<jena.spatialindexer$ProgressMonitor: java.lang.String progressMessage>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <jena.spatialindexer: org.slf4j.Logger access$000()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r8);

        return;
    }
}
