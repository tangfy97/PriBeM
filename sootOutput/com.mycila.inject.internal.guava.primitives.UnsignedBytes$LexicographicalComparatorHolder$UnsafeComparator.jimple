final enum class com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator extends java.lang.Enum implements java.util.Comparator
{
    public static final enum com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator INSTANCE;
    static final boolean littleEndian;
    static final sun.misc.Unsafe theUnsafe;
    static final int BYTE_ARRAY_BASE_OFFSET;
    private static final com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $VALUES;

    public static com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values()
    {
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[]) $r1;

        return $r2;
    }

    public static com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/mycila/inject/internal/guava/primitives/UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;", r0);

        $r2 = (com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator r0;

        r0 := @this: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public int compare(byte[], byte[])
    {
        byte[] r0, r1;
        byte $b8, $b9, $b22;
        boolean $z0;
        sun.misc.Unsafe $r2, $r3;
        long $l12, $l13, $l14, $l15, $l17, $l18, $l19, $l20, l21, $l23, $l24, $l25, $l26, $l27, $l30;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i10, $i11, $i16, $i28, $i29, $i31, $i32, i33, i34, i35, i36;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator r4;

        r4 := @this: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        i3 = $i2 / 8;

        i33 = 0;

     label01:
        $i4 = i3 * 8;

        if i33 >= $i4 goto label08;

        $r2 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: sun.misc.Unsafe theUnsafe>;

        $i11 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: int BYTE_ARRAY_BASE_OFFSET>;

        $l13 = (long) $i11;

        $l12 = (long) i33;

        $l14 = $l13 + $l12;

        $l15 = virtualinvoke $r2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r0, $l14);

        $r3 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: sun.misc.Unsafe theUnsafe>;

        $i16 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: int BYTE_ARRAY_BASE_OFFSET>;

        $l18 = (long) $i16;

        $l17 = (long) i33;

        $l19 = $l18 + $l17;

        $l20 = virtualinvoke $r3.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(r1, $l19);

        l21 = $l15 ^ $l20;

        $b22 = l21 cmp 0L;

        if $b22 == 0 goto label07;

        $z0 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: boolean littleEndian>;

        if $z0 != 0 goto label02;

        $i32 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int compare(long,long)>($l15, $l20);

        return $i32;

     label02:
        i34 = 0;

        i35 = (int) l21;

        if i35 != 0 goto label03;

        $l30 = l21 >>> 32;

        i35 = (int) $l30;

        i34 = 32;

     label03:
        $i31 = i35 << 16;

        if $i31 != 0 goto label04;

        i34 = i34 + 16;

        goto label05;

     label04:
        i35 = $i31;

     label05:
        $i29 = i35 << 8;

        if $i29 != 0 goto label06;

        i34 = i34 + 8;

     label06:
        $l23 = $l15 >>> i34;

        $l26 = $l23 & 255L;

        $l24 = $l20 >>> i34;

        $l25 = $l24 & 255L;

        $l27 = $l26 - $l25;

        $i28 = (int) $l27;

        return $i28;

     label07:
        i33 = i33 + 8;

        goto label01;

     label08:
        i36 = i3 * 8;

     label09:
        if i36 >= $i2 goto label11;

        $b9 = r0[i36];

        $b8 = r1[i36];

        $i10 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedBytes: int compare(byte,byte)>($b9, $b8);

        if $i10 == 0 goto label10;

        return $i10;

     label10:
        i36 = i36 + 1;

        goto label09;

     label11:
        $i6 = lengthof r0;

        $i5 = lengthof r1;

        $i7 = $i6 - $i5;

        return $i7;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        byte[] $r3, $r4;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator r0;
        int $i0;
        java.lang.Object r1, r2;

        r0 := @this: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (byte[]) r1;

        $r3 = (byte[]) r2;

        $i0 = virtualinvoke r0.<com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: int compare(byte[],byte[])>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $r1;
        sun.misc.Unsafe $r7, $r8, $r9;
        java.lang.AssertionError $r10;
        java.nio.ByteOrder $r3, $r4;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator $r0, $r2;
        int $i0, $i1;
        com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 $r5;
        java.lang.Object $r6;
        boolean $z0;

        $r0 = new com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: void <init>(java.lang.String,int)>("INSTANCE", 0);

        <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator INSTANCE> = $r0;

        $r1 = newarray (com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator)[1];

        $r2 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator INSTANCE>;

        $r1[0] = $r2;

        <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $VALUES> = $r1;

        $r3 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r4 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: boolean littleEndian> = $z0;

        $r5 = new com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1;

        specialinvoke $r5.<com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1: void <init>()>();

        $r6 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r5);

        $r7 = (sun.misc.Unsafe) $r6;

        <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: sun.misc.Unsafe theUnsafe> = $r7;

        $r8 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: sun.misc.Unsafe theUnsafe>;

        $i0 = virtualinvoke $r8.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(class "[B");

        <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: int BYTE_ARRAY_BASE_OFFSET> = $i0;

        $r9 = <com.mycila.inject.internal.guava.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator: sun.misc.Unsafe theUnsafe>;

        $i1 = virtualinvoke $r9.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[B");

        if $i1 == 1 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        return;
    }
}
