public class org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted extends org.waveprotocol.wave.client.editor.extract.InconsistencyException
{
    final org.waveprotocol.wave.model.document.util.Point$El contentPoint;
    final org.waveprotocol.wave.model.document.util.Point$El htmlPoint;

    public void <init>(org.waveprotocol.wave.model.document.util.Point$El, org.waveprotocol.wave.model.document.util.Point$El)
    {
        org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted r0;
        com.google.gwt.core.client.JavaScriptObject $r4;
        com.google.gwt.dom.client.Element $r5;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.util.Point$El r1, r6;
        com.google.gwt.dom.client.Node $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted;

        r6 := @parameter0: org.waveprotocol.wave.model.document.util.Point$El;

        r1 := @parameter1: org.waveprotocol.wave.model.document.util.Point$El;

        $r2 = virtualinvoke r1.<org.waveprotocol.wave.model.document.util.Point$El: java.lang.Object getContainer()>();

        $r3 = (com.google.gwt.dom.client.Node) $r2;

        $r4 = virtualinvoke $r3.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r5 = (com.google.gwt.dom.client.Element) $r4;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.extract.InconsistencyException: void <init>(com.google.gwt.dom.client.Element)>($r5);

        r0.<org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted: org.waveprotocol.wave.model.document.util.Point$El contentPoint> = r6;

        r0.<org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted: org.waveprotocol.wave.model.document.util.Point$El htmlPoint> = r1;

        return;
    }

    public org.waveprotocol.wave.model.document.util.Point$El getContentPoint()
    {
        org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted r0;
        org.waveprotocol.wave.model.document.util.Point$El $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted: org.waveprotocol.wave.model.document.util.Point$El contentPoint>;

        return $r1;
    }

    public org.waveprotocol.wave.model.document.util.Point$El getHtmlPoint()
    {
        org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted r0;
        org.waveprotocol.wave.model.document.util.Point$El $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted: org.waveprotocol.wave.model.document.util.Point$El htmlPoint>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.util.Point$El $r3;

        r2 := @this: org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HtmlInserted: ");

        $r3 = r2.<org.waveprotocol.wave.client.editor.extract.InconsistencyException$HtmlInserted: org.waveprotocol.wave.model.document.util.Point$El contentPoint>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
