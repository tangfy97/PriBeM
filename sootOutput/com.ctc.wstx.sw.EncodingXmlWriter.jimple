public abstract class com.ctc.wstx.sw.EncodingXmlWriter extends com.ctc.wstx.sw.XmlWriter
{
    static final int DEFAULT_BUFFER_SIZE;
    static final byte BYTE_SPACE;
    static final byte BYTE_COLON;
    static final byte BYTE_SEMICOLON;
    static final byte BYTE_LBRACKET;
    static final byte BYTE_RBRACKET;
    static final byte BYTE_QMARK;
    static final byte BYTE_EQ;
    static final byte BYTE_SLASH;
    static final byte BYTE_HASH;
    static final byte BYTE_HYPHEN;
    static final byte BYTE_LT;
    static final byte BYTE_GT;
    static final byte BYTE_AMP;
    static final byte BYTE_QUOT;
    static final byte BYTE_APOS;
    static final byte BYTE_A;
    static final byte BYTE_G;
    static final byte BYTE_L;
    static final byte BYTE_M;
    static final byte BYTE_O;
    static final byte BYTE_P;
    static final byte BYTE_Q;
    static final byte BYTE_S;
    static final byte BYTE_T;
    static final byte BYTE_U;
    static final byte BYTE_X;
    protected final java.io.OutputStream mOut;
    protected final byte[] mOutputBuffer;
    protected int mOutputPtr;
    protected int mSurrogate;

    public void <init>(java.io.OutputStream, com.ctc.wstx.api.WriterConfig, java.lang.String, boolean) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r4;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        com.ctc.wstx.api.WriterConfig r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r3 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: com.ctc.wstx.api.WriterConfig;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.ctc.wstx.sw.XmlWriter: void <init>(com.ctc.wstx.api.WriterConfig,java.lang.String,boolean)>(r1, r2, z0);

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate> = 0;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.OutputStream mOut> = r3;

        $r4 = newarray (byte)[4000];

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer> = $r4;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = 0;

        return;
    }

    protected int getOutputPtr()
    {
        int $i0;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        return $i0;
    }

    protected final java.io.OutputStream getOutputStream()
    {
        java.io.OutputStream $r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.OutputStream mOut>;

        return $r1;
    }

    protected final java.io.Writer getWriter()
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        return null;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flush()>();

        $z0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: boolean mAutoCloseOutput>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.OutputStream mOut>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label1:
        return;
    }

    public final void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flushBuffer()>();

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.OutputStream mOut>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public abstract void writeRaw(char[], int, int) throws java.io.IOException;

    public abstract void writeRaw(java.lang.String, int, int) throws java.io.IOException;

    public final void writeCDataStart() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<![CDATA[");

        return;
    }

    public final void writeCDataEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("]]>");

        return;
    }

    public final void writeCommentStart() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<!--");

        return;
    }

    public final void writeCommentEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("-->");

        return;
    }

    public final void writePIStart(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(60, 63);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

     label1:
        return;
    }

    public final void writePIEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(63, 62);

        return;
    }

    public int writeCData(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<![CDATA[");

        $i0 = virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: int writeCDataContent(java.lang.String)>(r1);

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("]]>");

        $i2 = (int) -1;

        return $i2;
    }

    public int writeCData(char[], int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int i0, i1, $i2, $i4;
        char[] r1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<![CDATA[");

        $i2 = virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: int writeCDataContent(char[],int,int)>(r1, i0, i1);

        if $i2 < 0 goto label1;

        return $i2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("]]>");

        $i4 = (int) -1;

        return $i4;
    }

    public final void writeCharacters(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        java.io.Writer $r1, $r3;
        java.lang.String r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mTextWriter>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mTextWriter>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r2);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeTextContent(java.lang.String)>(r2);

     label2:
        return;
    }

    public final void writeCharacters(char[], int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        java.io.Writer $r1, $r3;
        int i0, i1;
        char[] r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mTextWriter>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mTextWriter>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r2, i0, i1);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeTextContent(char[],int,int)>(r2, i0, i1);

     label2:
        return;
    }

    public int writeComment(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<!--");

        $i0 = virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: int writeCommentContent(java.lang.String)>(r1);

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("-->");

        $i2 = (int) -1;

        return $i2;
    }

    public void writeDTD(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i1;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate()>();

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i1);

        return;
    }

    public void writeDTD(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<!DOCTYPE ");

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(r1);

        if r2 == null goto label3;

        if r4 == null goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(" PUBLIC \"");

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r4, 0, $i3);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("\" \"");

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(" SYSTEM \"");

     label2:
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r2, 0, $i2);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(34);

     label3:
        if r3 == null goto label4;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(32, 91);

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r3, 0, $i1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(93);

     label4:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(62);

        return;
    }

    public void writeEntityReference(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0;
        java.lang.String r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate()>();

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(38);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(59);

        return;
    }

    public void writeXmlDeclaration(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i1;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>("<?xml version=\'");

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(39);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(" encoding=\'");

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r2, 0, $i1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(39);

     label1:
        if r3 == null goto label2;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(" standalone=\'");

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(r3);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(39);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(63, 62);

        return;
    }

    public int writePI(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i1, $i3;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(60, 63);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

        $i1 = virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: int writePIData(java.lang.String)>(r2);

        if $i1 < 0 goto label1;

        return $i1;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(63, 62);

        $i3 = (int) -1;

        return $i3;
    }

    public void writeStartTagStart(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(60);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        return;
    }

    public void writeStartTagStart(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r1;
        int $i0;
        java.lang.String r0, r2;

        r1 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        virtualinvoke r1.<com.ctc.wstx.sw.EncodingXmlWriter: void writeStartTagStart(java.lang.String)>(r2);

        return;

     label2:
        virtualinvoke r1.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(60);

        virtualinvoke r1.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r0);

        virtualinvoke r1.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(58);

        virtualinvoke r1.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r2);

        return;
    }

    public void writeStartTagEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(62);

        return;
    }

    public void writeStartTagEmptyEnd() throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(java.lang.String)>(" />");

        return;
    }

    public void writeEndTag(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(60, 47);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeNameUnchecked(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(62);

        return;
    }

    public void writeEndTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(60, 47);

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeNameUnchecked(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(58);

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeNameUnchecked(java.lang.String)>(r2);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(62);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0;
        java.io.Writer $r3, $r4;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(61, 34);

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r3 == null goto label1;

        $r4 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String,int,int)>(r2, 0, $i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAttrValue(java.lang.String)>(r2);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, char[], int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int i0, i1;
        java.io.Writer $r2, $r4;
        char[] r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: char[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(61, 34);

        if i0 <= 0 goto label2;

        $r2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r2 == null goto label1;

        $r4 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r3, i1, i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAttrValue(char[],int,int)>(r3, i1, i0);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0;
        java.io.Writer $r4, $r5;
        java.lang.String r1, r2, r3;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(58);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r2);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(61, 34);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r4 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r4 == null goto label1;

        $r5 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String,int,int)>(r3, 0, $i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAttrValue(java.lang.String)>(r3);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(34);

        return;
    }

    public void writeAttribute(java.lang.String, java.lang.String, char[], int, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int i0, i1;
        java.io.Writer $r3, $r5;
        char[] r4;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: char[];

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(32);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r1);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(58);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeName(java.lang.String)>(r2);

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte,byte)>(61, 34);

        if i0 <= 0 goto label2;

        $r3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        if $r3 == null goto label1;

        $r5 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.Writer mAttrValueWriter>;

        virtualinvoke $r5.<java.io.Writer: void write(char[],int,int)>(r4, i1, i0);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAttrValue(char[],int,int)>(r4, i1, i0);

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeAscii(byte)>(34);

        return;
    }

    protected final void flushBuffer() throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, i1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        if $i0 <= 0 goto label1;

        i1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = 0;

        $r2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: java.io.OutputStream mOut>;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, i1);

     label1:
        return;
    }

    protected final void writeAscii(byte) throws java.io.IOException
    {
        byte[] $r1, $r2;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        byte b5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        b5 := @parameter0: byte;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate()>();

     label1:
        $i2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label2;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flushBuffer()>();

     label2:
        $r2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = $i4;

        $r2[$i3] = b5;

        return;
    }

    protected final void writeAscii(byte, byte) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        byte b6, b9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        b6 := @parameter0: byte;

        b9 := @parameter1: byte;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate()>();

     label1:
        $i1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i3 = $i1 + 1;

        $r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flushBuffer()>();

     label2:
        $r2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i4 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = $i5;

        $r2[$i4] = b6;

        $r3 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i7 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i8 = $i7 + 1;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = $i8;

        $r3[$i7] = b9;

        return;
    }

    protected final void writeAscii(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, i11, i12;
        java.lang.String r1;
        char $c7;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate()>();

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i10 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        i11 = $i10;

        $r2 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        $i3 = $i10 + $i1;

        $i2 = lengthof $r2;

        if $i3 < $i2 goto label3;

        $i9 = lengthof $r2;

        if $i1 <= $i9 goto label2;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i1);

        return;

     label2:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flushBuffer()>();

        i11 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

     label3:
        $i4 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i5 = $i4 + $i1;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = $i5;

        i12 = 0;

     label4:
        if i12 >= $i1 goto label5;

        $i6 = i11;

        i11 = i11 + 1;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i12);

        $b8 = (byte) $c7;

        $r2[$i6] = $b8;

        i12 = i12 + 1;

        goto label4;

     label5:
        return;
    }

    protected final int writeAsEntity(int) throws java.io.IOException
    {
        byte[] r1;
        byte $b5, $b8, $b10, $b12;
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0, $i1, i2, $i3, $i4, $i6, $i7, $i9, $i11, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31, i32, i33, i34, $i35, i36, $i37, i38, $i40;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        i13 := @parameter0: int;

        r1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: byte[] mOutputBuffer>;

        i14 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

        $i1 = i14 + 10;

        $i0 = lengthof r1;

        if $i1 < $i0 goto label01;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flushBuffer()>();

        i14 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr>;

     label01:
        i15 = i14 + 1;

        r1[i14] = 38;

        if i13 >= 256 goto label12;

        if i13 != 38 goto label02;

        i16 = i15 + 1;

        r1[i15] = 97;

        i17 = i16 + 1;

        r1[i16] = 109;

        i18 = i17 + 1;

        r1[i17] = 112;

        goto label20;

     label02:
        if i13 != 60 goto label03;

        i19 = i15 + 1;

        r1[i15] = 108;

        i18 = i19 + 1;

        r1[i19] = 116;

        goto label20;

     label03:
        if i13 != 62 goto label04;

        i20 = i15 + 1;

        r1[i15] = 103;

        i18 = i20 + 1;

        r1[i20] = 116;

        goto label20;

     label04:
        if i13 != 39 goto label05;

        i21 = i15 + 1;

        r1[i15] = 97;

        i22 = i21 + 1;

        r1[i21] = 112;

        i23 = i22 + 1;

        r1[i22] = 111;

        i18 = i23 + 1;

        r1[i23] = 115;

        goto label20;

     label05:
        if i13 != 34 goto label06;

        i24 = i15 + 1;

        r1[i15] = 113;

        i25 = i24 + 1;

        r1[i24] = 117;

        i26 = i25 + 1;

        r1[i25] = 111;

        i18 = i26 + 1;

        r1[i26] = 116;

        goto label20;

     label06:
        i27 = i15 + 1;

        r1[i15] = 35;

        i28 = i27 + 1;

        r1[i27] = 120;

        if i13 < 16 goto label09;

        i29 = i13 >> 4;

        $i11 = i28;

        i28 = i28 + 1;

        if i29 >= 10 goto label07;

        $i30 = 48 + i29;

        goto label08;

     label07:
        $i30 = 87 + i29;

     label08:
        $b12 = (byte) $i30;

        r1[$i11] = $b12;

        i13 = i13 & 15;

     label09:
        $i9 = i28;

        i18 = i28 + 1;

        if i13 >= 10 goto label10;

        $i31 = 48 + i13;

        goto label11;

     label10:
        $i31 = 87 + i13;

     label11:
        $b10 = (byte) $i31;

        r1[$i9] = $b10;

        goto label20;

     label12:
        i32 = i15 + 1;

        r1[i15] = 35;

        i33 = i32 + 1;

        r1[i32] = 120;

        i34 = 20;

        i2 = i33;

     label13:
        $i3 = i13 >> i34;

        $i6 = $i3 & 15;

        if $i6 > 0 goto label14;

        if i33 == i2 goto label17;

     label14:
        $i4 = i33;

        i33 = i33 + 1;

        if $i6 >= 10 goto label15;

        $i35 = 48 + $i6;

        goto label16;

     label15:
        $i35 = 87 + $i6;

     label16:
        $b5 = (byte) $i35;

        r1[$i4] = $b5;

     label17:
        $i40 = (int) -4;

        i34 = i34 + $i40;

        if i34 > 0 goto label13;

        i36 = i13 & 15;

        $i7 = i33;

        i18 = i33 + 1;

        if i36 >= 10 goto label18;

        $i37 = 48 + i36;

        goto label19;

     label18:
        $i37 = 87 + i36;

     label19:
        $b8 = (byte) $i37;

        r1[$i7] = $b8;

     label20:
        i38 = i18 + 1;

        r1[i18] = 59;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mOutputPtr> = i38;

        return i38;
    }

    protected final void writeName(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        int $i0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: boolean mCheckNames>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: boolean mNsAware>;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void verifyNameValidity(java.lang.String,boolean)>(r1, $z1);

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }

    protected final void writeNameUnchecked(java.lang.String) throws java.io.IOException
    {
        int $i0;
        java.lang.String r1;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }

    protected final int calcSurrogate(int) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        java.lang.StringBuffer $r3, $r5, $r6, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12, $i14, $i16, $i18;
        java.lang.String $r4, $r7;
        java.io.IOException $r9;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        i1 := @parameter0: int;

        i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate> = 0;

        $i8 = (int) 55296;

        if i0 < $i8 goto label1;

        $i10 = (int) 56319;

        if i0 <= $i10 goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate(int)>(i0);

     label2:
        $i12 = (int) 56320;

        if i1 < $i12 goto label3;

        $i14 = (int) 57343;

        if i1 <= $i14 goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate(int)>(i1);

     label4:
        $i16 = (int) 55296;

        $i2 = i0 - $i16;

        $i3 = $i2 << 10;

        $i4 = 65536 + $i3;

        $i18 = (int) 56320;

        $i5 = i1 - $i18;

        $i6 = $i4 + $i5;

        if $i6 <= 1114111 goto label5;

        $r9 = new java.io.IOException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal surrogate character pair, resulting code 0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" above legal XML character range");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r9;

     label5:
        return $i6;
    }

    protected final void throwUnpairedSurrogate() throws java.io.IOException
    {
        int i0;
        com.ctc.wstx.sw.EncodingXmlWriter r0;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        i0 = r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate>;

        r0.<com.ctc.wstx.sw.EncodingXmlWriter: int mSurrogate> = 0;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void throwUnpairedSurrogate(int)>(i0);

        return;
    }

    protected final void throwUnpairedSurrogate(int) throws java.io.IOException
    {
        com.ctc.wstx.sw.EncodingXmlWriter r0;
        java.io.IOException $r1;
        java.lang.StringBuffer $r2, $r3, $r5, $r6;
        int i0;
        java.lang.String $r4, $r7;

        r0 := @this: com.ctc.wstx.sw.EncodingXmlWriter;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.ctc.wstx.sw.EncodingXmlWriter: void flush()>();

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unpaired surrogate character (0x");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    protected abstract void writeAttrValue(java.lang.String) throws java.io.IOException;

    protected abstract void writeAttrValue(char[], int, int) throws java.io.IOException;

    protected abstract int writeCDataContent(java.lang.String) throws java.io.IOException;

    protected abstract int writeCDataContent(char[], int, int) throws java.io.IOException;

    protected abstract int writeCommentContent(java.lang.String) throws java.io.IOException;

    protected abstract int writePIData(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException;

    protected abstract void writeTextContent(java.lang.String) throws java.io.IOException;

    protected abstract void writeTextContent(char[], int, int) throws java.io.IOException;

    public static void <clinit>()
    {
        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_X> = 120;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_U> = 117;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_T> = 116;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_S> = 115;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_Q> = 113;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_P> = 112;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_O> = 111;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_M> = 109;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_L> = 108;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_G> = 103;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_A> = 97;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_APOS> = 39;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_QUOT> = 34;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_AMP> = 38;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_GT> = 62;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_LT> = 60;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_HYPHEN> = 45;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_HASH> = 35;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_SLASH> = 47;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_EQ> = 61;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_QMARK> = 63;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_RBRACKET> = 93;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_LBRACKET> = 91;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_SEMICOLON> = 59;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_COLON> = 58;

        <com.ctc.wstx.sw.EncodingXmlWriter: byte BYTE_SPACE> = 32;

        <com.ctc.wstx.sw.EncodingXmlWriter: int DEFAULT_BUFFER_SIZE> = 4000;

        return;
    }
}
