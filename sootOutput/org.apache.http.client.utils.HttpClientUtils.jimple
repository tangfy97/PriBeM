public class org.apache.http.client.utils.HttpClientUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.http.client.utils.HttpClientUtils r0;

        r0 := @this: org.apache.http.client.utils.HttpClientUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void closeQuietly(org.apache.http.HttpResponse)
    {
        org.apache.http.HttpEntity $r1;
        org.apache.http.HttpResponse r0;
        java.io.IOException $r2;

        r0 := @parameter0: org.apache.http.HttpResponse;

        if r0 == null goto label4;

        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r1 == null goto label4;

     label1:
        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(org.apache.http.client.HttpClient)
    {
        org.apache.http.client.HttpClient r0;
        org.apache.http.conn.ClientConnectionManager $r1;

        r0 := @parameter0: org.apache.http.client.HttpClient;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r1.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label1:
        return;
    }
}
