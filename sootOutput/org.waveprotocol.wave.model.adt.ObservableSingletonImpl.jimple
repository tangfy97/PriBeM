public final class org.waveprotocol.wave.model.adt.ObservableSingletonImpl extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableSingleton
{
    private final org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory factory;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    private java.lang.Object value;

    public void <init>(org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory)
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory r2;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r2 := @parameter0: org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r1;

        r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value> = null;

        r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory factory> = r2;

        return;
    }

    public boolean hasValue()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        $r1 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object get()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        $r1 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        return $r1;
    }

    public java.lang.Object set(java.lang.Object)
    {
        java.lang.Object r1, r2, $r4, $r5, $r6;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory $r3;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r2 := @parameter0: java.lang.Object;

        r1 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        $r3 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory factory>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl$Factory: java.lang.Object create(java.lang.Object)>(r2);

        r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value> = $r4;

        $r5 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        specialinvoke r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: void maybeTriggerOnValueChanged(java.lang.Object,java.lang.Object)>(r1, $r5);

        $r6 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        return $r6;
    }

    public void clear()
    {
        java.lang.Object r1, $r2;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r1 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value> = null;

        $r2 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: java.lang.Object value>;

        specialinvoke r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: void maybeTriggerOnValueChanged(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public void addListener(org.waveprotocol.wave.model.adt.ObservableSingleton$Listener)
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableSingleton$Listener r1;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableSingleton$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.adt.ObservableSingleton$Listener)
    {
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.adt.ObservableSingleton$Listener r1;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableSingleton$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private void maybeTriggerOnValueChanged(java.lang.Object, java.lang.Object)
    {
        java.util.Iterator $r4;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r2;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r3;
        java.lang.Object r0, r1, $r5;
        org.waveprotocol.wave.model.adt.ObservableSingleton$Listener r6;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean notEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 == 0 goto label2;

        $r3 = r2.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.waveprotocol.wave.model.adt.ObservableSingleton$Listener) $r5;

        interfaceinvoke r6.<org.waveprotocol.wave.model.adt.ObservableSingleton$Listener: void onValueChanged(java.lang.Object,java.lang.Object)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableSingleton$Listener $r2;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableSingleton$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: void removeListener(org.waveprotocol.wave.model.adt.ObservableSingleton$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableSingleton$Listener $r2;
        org.waveprotocol.wave.model.adt.ObservableSingletonImpl r0;

        r0 := @this: org.waveprotocol.wave.model.adt.ObservableSingletonImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableSingleton$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.ObservableSingletonImpl: void addListener(org.waveprotocol.wave.model.adt.ObservableSingleton$Listener)>($r2);

        return;
    }
}
