public class org.bouncycastle.crypto.engines.RC2WrapEngine extends java.lang.Object implements org.bouncycastle.crypto.Wrapper
{
    private org.bouncycastle.crypto.modes.CBCBlockCipher engine;
    private org.bouncycastle.crypto.CipherParameters param;
    private org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV;
    private byte[] iv;
    private boolean forWrapping;
    private java.security.SecureRandom sr;
    private static final byte[] IV2;
    org.bouncycastle.crypto.Digest sha1;
    byte[] digest;

    public void <init>()
    {
        byte[] $r2;
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;
        org.bouncycastle.crypto.digests.SHA1Digest $r1;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r1.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.Digest sha1> = $r1;

        $r2 = newarray (byte)[20];

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] digest> = $r2;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r4, $r5, $r8, $r12, $r16, $r18;
        org.bouncycastle.crypto.params.ParametersWithIV $r7, $r10, $r11, $r13;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r1;
        java.security.SecureRandom $r3, $r6, $r20;
        org.bouncycastle.crypto.params.ParametersWithRandom r19;
        int $i0;
        boolean z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.CipherParameters $r9, $r14, r21;
        java.lang.IllegalArgumentException $r15, $r17;
        org.bouncycastle.crypto.engines.RC2Engine $r2;
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        z0 := @parameter0: boolean;

        r21 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean forWrapping> = z0;

        $r1 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r2 = new org.bouncycastle.crypto.engines.RC2Engine;

        specialinvoke $r2.<org.bouncycastle.crypto.engines.RC2Engine: void <init>()>();

        specialinvoke $r1.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r2);

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine> = $r1;

        $z1 = r21 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r19 = (org.bouncycastle.crypto.params.ParametersWithRandom) r21;

        $r20 = virtualinvoke r19.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr> = $r20;

        r21 = virtualinvoke r19.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        goto label2;

     label1:
        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr> = $r3;

     label2:
        $z2 = r21 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z2 == 0 goto label5;

        $r10 = (org.bouncycastle.crypto.params.ParametersWithIV) r21;

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r10;

        $r11 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r12 = virtualinvoke $r11.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r12;

        $r13 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        $r14 = virtualinvoke $r13.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param> = $r14;

        $z4 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z4 == 0 goto label4;

        $r16 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        if $r16 == null goto label3;

        $r18 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i0 = lengthof $r18;

        if $i0 == 8 goto label6;

     label3:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IV is not 8 octets");

        throw $r17;

     label4:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You should not supply an IV for unwrapping");

        throw $r15;

     label5:
        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param> = r21;

        $z3 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z3 == 0 goto label6;

        $r4 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r4;

        $r6 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr>;

        $r5 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r5);

        $r7 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r9 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param>;

        $r8 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        specialinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r9, $r8);

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r7;

     label6:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        return "RC2";
    }

    public byte[] wrap(byte[], int, int)
    {
        byte[] r1, $r2, $r7, $r8, $r9, $r10, $r12, $r21, $r22, $r23, $r24, r26, r27;
        java.security.SecureRandom $r20;
        byte $b2, $b34;
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r3, $r4, $r6, $r14, $r15, $r16, $r17, $r18;
        java.lang.IllegalStateException $r19, $r25;
        org.bouncycastle.crypto.params.ParametersWithIV $r5, $r11;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r13;
        int i0, $i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, i44, i45, i46;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        r1 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 != 0 goto label01;

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not initialized for wrapping");

        throw $r25;

     label01:
        i42 = i0 + 1;

        $i1 = i42 % 8;

        if $i1 == 0 goto label02;

        $i40 = i42 % 8;

        $i41 = 8 - $i40;

        i42 = i42 + $i41;

     label02:
        $r23 = newarray (byte)[i42];

        $b2 = (byte) i0;

        $r23[0] = $b2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, $r23, 1, i0);

        $i4 = lengthof $r23;

        $i5 = $i4 - i0;

        $i6 = $i5 - 1;

        $r24 = newarray (byte)[$i6];

        $i7 = lengthof $r24;

        if $i7 <= 0 goto label03;

        $r20 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: java.security.SecureRandom sr>;

        virtualinvoke $r20.<java.security.SecureRandom: void nextBytes(byte[])>($r24);

        $i37 = i0 + 1;

        $i36 = lengthof $r24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r24, 0, $r23, $i37, $i36);

     label03:
        $r2 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] calculateCMSKeyChecksum(byte[])>($r23);

        $i9 = lengthof $r23;

        $i8 = lengthof $r2;

        $i10 = $i9 + $i8;

        $r21 = newarray (byte)[$i10];

        $i11 = lengthof $r23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, $r21, 0, $i11);

        $i13 = lengthof $r23;

        $i12 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r21, $i13, $i12);

        $i14 = lengthof $r21;

        $r22 = newarray (byte)[$i14];

        $i15 = lengthof $r21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, $r22, 0, $i15);

        $i16 = lengthof $r21;

        $r3 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i17 = virtualinvoke $r3.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i38 = $i16 / $i17;

        $i18 = lengthof $r21;

        $r4 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i19 = virtualinvoke $r4.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i39 = $i18 % $i19;

        if $i39 == 0 goto label04;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not multiple of block length");

        throw $r19;

     label04:
        $r6 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r5 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r5);

        i43 = 0;

     label05:
        if i43 >= $i38 goto label06;

        $r17 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i35 = virtualinvoke $r17.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i44 = i43 * $i35;

        $r18 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r18.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>($r22, i44, $r22, i44);

        i43 = i43 + 1;

        goto label05;

     label06:
        $r7 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i21 = lengthof $r7;

        $i20 = lengthof $r22;

        $i22 = $i21 + $i20;

        r26 = newarray (byte)[$i22];

        $r9 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $r8 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i23 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r26, 0, $i23);

        $r10 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        $i25 = lengthof $r10;

        $i24 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, r26, $i25, $i24);

        $i26 = lengthof r26;

        r27 = newarray (byte)[$i26];

        i45 = 0;

     label07:
        $i27 = lengthof r26;

        if i45 >= $i27 goto label08;

        $i32 = lengthof r26;

        $i31 = i45 + 1;

        $i33 = $i32 - $i31;

        $b34 = r26[$i33];

        r27[i45] = $b34;

        i45 = i45 + 1;

        goto label07;

     label08:
        $r11 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r13 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param>;

        $r12 = <org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] IV2>;

        specialinvoke $r11.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r13, $r12);

        $r14 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r14.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, $r11);

        i46 = 0;

     label09:
        $i28 = $i38 + 1;

        if i46 >= $i28 goto label10;

        $r15 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i29 = virtualinvoke $r15.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i30 = i46 * $i29;

        $r16 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r16.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r27, i30, r27, i30);

        i46 = i46 + 1;

        goto label09;

     label10:
        return r27;
    }

    public byte[] unwrap(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r4, r7, $r9, $r10, $r12, r16, r18, r38, r39, r40, r41;
        byte $b24, $b29, $b31, $b40;
        java.lang.StringBuilder $r21, $r22, $r23, $r32, $r34, $r44, $r49;
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r2, $r6, $r8, $r15, $r17, $r26, $r27, $r28, $r29, $r33;
        org.bouncycastle.crypto.InvalidCipherTextException $r43, $r45, $r48, $r50;
        short $s25, $s32, $s48, $s50;
        java.lang.String $r24, $r35;
        java.lang.IllegalStateException $r42;
        org.bouncycastle.crypto.params.ParametersWithIV $r14, $r46, $r47;
        boolean $z0, $z1;
        org.bouncycastle.crypto.CipherParameters $r5, $r13;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i26, $i27, $i28, $i30, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i42, i43, i44, i45, i46, i47, $i49, $i51, $i52;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        r1 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean forWrapping>;

        if $z0 == 0 goto label01;

        $r42 = new java.lang.IllegalStateException;

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not set for unwrapping");

        throw $r42;

     label01:
        if r1 != null goto label02;

        $r43 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r43.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Null pointer as ciphertext");

        throw $r43;

     label02:
        $r2 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i1 = virtualinvoke $r2.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i2 = i0 % $i1;

        if $i2 == 0 goto label03;

        $r45 = new org.bouncycastle.crypto.InvalidCipherTextException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ciphertext not multiple of ");

        $r33 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i42 = virtualinvoke $r33.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r35);

        throw $r45;

     label03:
        $r46 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r5 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param>;

        $r4 = <org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] IV2>;

        specialinvoke $r46.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r5, $r4);

        $r6 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r6.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r46);

        r7 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r7, 0, i0);

        i43 = 0;

     label04:
        $i4 = lengthof r7;

        $r8 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i5 = virtualinvoke $r8.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i6 = $i4 / $i5;

        if i43 >= $i6 goto label05;

        $r28 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i41 = virtualinvoke $r28.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i44 = i43 * $i41;

        $r29 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r29.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r7, i44, r7, i44);

        i43 = i43 + 1;

        goto label04;

     label05:
        $i7 = lengthof r7;

        r38 = newarray (byte)[$i7];

        i45 = 0;

     label06:
        $i8 = lengthof r7;

        if i45 >= $i8 goto label07;

        $i38 = lengthof r7;

        $i37 = i45 + 1;

        $i39 = $i38 - $i37;

        $b40 = r7[$i39];

        r38[i45] = $b40;

        i45 = i45 + 1;

        goto label06;

     label07:
        $r9 = newarray (byte)[8];

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv> = $r9;

        $i9 = lengthof r38;

        $i10 = $i9 - 8;

        r39 = newarray (byte)[$i10];

        $r10 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r38, 0, $r10, 0, 8);

        $i11 = lengthof r38;

        $i12 = $i11 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r38, 8, r39, 0, $i12);

        $r47 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r13 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.CipherParameters param>;

        $r12 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] iv>;

        specialinvoke $r47.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r13, $r12);

        r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV> = $r47;

        $r15 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $r14 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.params.ParametersWithIV paramPlusIV>;

        virtualinvoke $r15.<org.bouncycastle.crypto.modes.CBCBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, $r14);

        $i13 = lengthof r39;

        r16 = newarray (byte)[$i13];

        $i14 = lengthof r39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r39, 0, r16, 0, $i14);

        i46 = 0;

     label08:
        $i15 = lengthof r16;

        $r17 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i16 = virtualinvoke $r17.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        $i17 = $i15 / $i16;

        if i46 >= $i17 goto label09;

        $r26 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        $i36 = virtualinvoke $r26.<org.bouncycastle.crypto.modes.CBCBlockCipher: int getBlockSize()>();

        i47 = i46 * $i36;

        $r27 = r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.modes.CBCBlockCipher engine>;

        virtualinvoke $r27.<org.bouncycastle.crypto.modes.CBCBlockCipher: int processBlock(byte[],int,byte[],int)>(r16, i47, r16, i47);

        i46 = i46 + 1;

        goto label08;

     label09:
        $i18 = lengthof r16;

        $i19 = $i18 - 8;

        r40 = newarray (byte)[$i19];

        r41 = newarray (byte)[8];

        $i20 = lengthof r16;

        $i21 = $i20 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, 0, r40, 0, $i21);

        $i22 = lengthof r16;

        $i23 = $i22 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r16, $i23, r41, 0, 8);

        $z1 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: boolean checkCMSKeyChecksum(byte[],byte[])>(r40, r41);

        if $z1 != 0 goto label10;

        $r48 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r48.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("Checksum inside ciphertext is corrupted");

        throw $r48;

     label10:
        $i27 = lengthof r40;

        $b24 = r40[0];

        $s48 = (short) $b24;

        $s25 = $s48 & 255;

        $i49 = (int) $s25;

        $i26 = $i49 + 1;

        $i28 = $i27 - $i26;

        if $i28 <= 7 goto label11;

        $r50 = new org.bouncycastle.crypto.InvalidCipherTextException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too many pad bytes (");

        $i34 = lengthof r40;

        $b31 = r40[0];

        $s50 = (short) $b31;

        $s32 = $s50 & 255;

        $i51 = (int) $s32;

        $i33 = $i51 + 1;

        $i35 = $i34 - $i33;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r50.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>($r24);

        throw $r50;

     label11:
        $b29 = r40[0];

        $i52 = (int) $b29;

        r18 = newarray (byte)[$i52];

        $i30 = lengthof r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r40, 1, r18, 0, $i30);

        return r18;
    }

    private byte[] calculateCMSKeyChecksum(byte[])
    {
        byte[] r0, r2, $r4, $r6;
        org.bouncycastle.crypto.Digest $r3, $r5;
        int $i0;
        org.bouncycastle.crypto.engines.RC2WrapEngine r1;

        r1 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        r2 := @parameter0: byte[];

        r0 = newarray (byte)[8];

        $r3 = r1.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $i0 = lengthof r2;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r2, 0, $i0);

        $r5 = r1.<org.bouncycastle.crypto.engines.RC2WrapEngine: org.bouncycastle.crypto.Digest sha1>;

        $r4 = r1.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] digest>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r4, 0);

        $r6 = r1.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] digest>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r0, 0, 8);

        return r0;
    }

    private boolean checkCMSKeyChecksum(byte[], byte[])
    {
        byte[] r1, $r2, r3;
        org.bouncycastle.crypto.engines.RC2WrapEngine r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.RC2WrapEngine;

        r1 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        $r2 = specialinvoke r0.<org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] calculateCMSKeyChecksum(byte[])>(r1);

        $z0 = staticinvoke <org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r2, r3);

        return $z0;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[8];

        $r0[0] = 74;

        $r0[1] = -35;

        $r0[2] = -94;

        $r0[3] = 44;

        $r0[4] = 121;

        $r0[5] = -24;

        $r0[6] = 33;

        $r0[7] = 5;

        <org.bouncycastle.crypto.engines.RC2WrapEngine: byte[] IV2> = $r0;

        return;
    }
}
