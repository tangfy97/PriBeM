abstract class org.apache.lucene.search.DisjunctionScorer extends org.apache.lucene.search.Scorer
{
    protected final org.apache.lucene.search.Scorer[] subScorers;
    protected int numScorers;

    protected void <init>(org.apache.lucene.search.Weight, org.apache.lucene.search.Scorer[], int)
    {
        org.apache.lucene.search.Scorer[] r2;
        org.apache.lucene.search.DisjunctionScorer r0;
        org.apache.lucene.search.Weight r1;
        int i0;

        r0 := @this: org.apache.lucene.search.DisjunctionScorer;

        r1 := @parameter0: org.apache.lucene.search.Weight;

        r2 := @parameter1: org.apache.lucene.search.Scorer[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.lucene.search.Scorer: void <init>(org.apache.lucene.search.Weight)>(r1);

        r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers> = r2;

        r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers> = i0;

        virtualinvoke r0.<org.apache.lucene.search.DisjunctionScorer: void heapify()>();

        return;
    }

    protected final void heapify()
    {
        org.apache.lucene.search.DisjunctionScorer r0;
        int $i0, $i1, i2, $i4;

        r0 := @this: org.apache.lucene.search.DisjunctionScorer;

        $i0 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        $i1 = $i0 >> 1;

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label2;

        virtualinvoke r0.<org.apache.lucene.search.DisjunctionScorer: void heapAdjust(int)>(i2);

        $i4 = (int) -1;

        i2 = i2 + $i4;

        goto label1;

     label2:
        return;
    }

    protected final void heapAdjust(int)
    {
        org.apache.lucene.search.DisjunctionScorer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9, $i10, i11, i12;
        org.apache.lucene.search.Scorer r2, r4, r12;
        org.apache.lucene.search.Scorer[] $r1, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.lucene.search.DisjunctionScorer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        r2 = $r1[i0];

        $i1 = virtualinvoke r2.<org.apache.lucene.search.Scorer: int docID()>();

        i11 = i0;

     label1:
        $i2 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        $i3 = $i2 >> 1;

        $i4 = $i3 - 1;

        if i11 > $i4 goto label7;

        $i5 = i11 << 1;

        i6 = $i5 + 1;

        $r3 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        r4 = $r3[i6];

        $i7 = virtualinvoke r4.<org.apache.lucene.search.Scorer: int docID()>();

        i12 = 2147483647;

        $i8 = i11 << 1;

        i9 = $i8 + 2;

        r12 = null;

        $i10 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        if i9 >= $i10 goto label2;

        $r11 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        r12 = $r11[i9];

        i12 = virtualinvoke r12.<org.apache.lucene.search.Scorer: int docID()>();

     label2:
        if $i7 >= $i1 goto label4;

        if i12 >= $i7 goto label3;

        $r9 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r9[i11] = r12;

        $r10 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r10[i9] = r2;

        i11 = i9;

        goto label6;

     label3:
        $r7 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r7[i11] = r4;

        $r8 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r8[i6] = r2;

        i11 = i6;

        goto label6;

     label4:
        if i12 >= $i1 goto label5;

        $r5 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r5[i11] = r12;

        $r6 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r6[i9] = r2;

        i11 = i9;

        goto label6;

     label5:
        return;

     label6:
        goto label1;

     label7:
        return;
    }

    protected final void heapRemoveRoot()
    {
        org.apache.lucene.search.Scorer $r2;
        org.apache.lucene.search.Scorer[] $r1, $r3, $r4, $r5;
        org.apache.lucene.search.DisjunctionScorer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.lucene.search.DisjunctionScorer;

        $i0 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        if $i0 != 1 goto label1;

        $r5 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r5[0] = null;

        r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers> = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r1 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $i1 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        $i2 = $i1 - 1;

        $r2 = $r1[$i2];

        $r3[0] = $r2;

        $r4 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $i3 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        $i4 = $i3 - 1;

        $r4[$i4] = null;

        $i5 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        $i6 = $i5 - 1;

        r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers> = $i6;

        virtualinvoke r0.<org.apache.lucene.search.DisjunctionScorer: void heapAdjust(int)>(0);

     label2:
        return;
    }

    public final java.util.Collection getChildren()
    {
        org.apache.lucene.search.Scorer $r4;
        java.util.ArrayList $r0;
        org.apache.lucene.search.Scorer[] $r3;
        org.apache.lucene.search.Scorer$ChildScorer $r2;
        org.apache.lucene.search.DisjunctionScorer r1;
        int $i0, $i1, i2;

        r1 := @this: org.apache.lucene.search.DisjunctionScorer;

        $r0 = new java.util.ArrayList;

        $i0 = r1.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = r1.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        if i2 >= $i1 goto label2;

        $r2 = new org.apache.lucene.search.Scorer$ChildScorer;

        $r3 = r1.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r4 = $r3[i2];

        specialinvoke $r2.<org.apache.lucene.search.Scorer$ChildScorer: void <init>(org.apache.lucene.search.Scorer,java.lang.String)>($r4, "SHOULD");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public long cost()
    {
        org.apache.lucene.search.Scorer[] $r1;
        org.apache.lucene.search.DisjunctionScorer r0;
        org.apache.lucene.search.Scorer $r2;
        int $i0, i3;
        long $l1, l2;

        r0 := @this: org.apache.lucene.search.DisjunctionScorer;

        l2 = 0L;

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.search.DisjunctionScorer: int numScorers>;

        if i3 >= $i0 goto label2;

        $r1 = r0.<org.apache.lucene.search.DisjunctionScorer: org.apache.lucene.search.Scorer[] subScorers>;

        $r2 = $r1[i3];

        $l1 = virtualinvoke $r2.<org.apache.lucene.search.Scorer: long cost()>();

        l2 = l2 + $l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }
}
