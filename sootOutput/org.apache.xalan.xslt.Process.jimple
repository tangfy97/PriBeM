public class org.apache.xalan.xslt.Process extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xalan.xslt.Process r0;

        r0 := @this: org.apache.xalan.xslt.Process;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void printArgOptions(java.util.ResourceBundle)
    {
        java.util.ResourceBundle r0;
        java.lang.StringBuffer $r3, $r5, $r7, $r8, $r42, $r44, $r46, $r47, $r69, $r71, $r73, $r74;
        java.lang.String $r2, $r6, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r45, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r72, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89;
        java.io.PrintStream $r1, $r4, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r43, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r70, $r76, $r78, $r80, $r82, $r84, $r86, $r88;

        r0 := @parameter0: java.util.ResourceBundle;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_option");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t\t\t");

        $r6 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_common_options");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r11 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXSLTC");

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionIN");

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r15 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXSL");

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r17 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionOUT");

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r19 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionV");

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r21 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionEDUMP");

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r23 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXML");

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r25 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTEXT");

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r27 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionHTML");

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r29 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionPARAM");

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r31 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionMEDIA");

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r33 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionFLAVOR");

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r35 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionDIAG");

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r37 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionURIRESOLVER");

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r37);

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r39 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionENTITYRESOLVER");

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r39);

        staticinvoke <org.apache.xalan.xslt.Process: void waitForReturnKey(java.util.ResourceBundle)>(r0);

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r41 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionCONTENTHANDLER");

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t\t\t");

        $r45 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_xalan_options");

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r48);

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r50 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionQC");

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r50);

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r52 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTT");

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r52);

        $r53 = <java.lang.System: java.io.PrintStream out>;

        $r54 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTG");

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r54);

        $r55 = <java.lang.System: java.io.PrintStream out>;

        $r56 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTS");

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r56);

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r58 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTTC");

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r58);

        $r59 = <java.lang.System: java.io.PrintStream out>;

        $r60 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionTCLASS");

        virtualinvoke $r59.<java.io.PrintStream: void println(java.lang.String)>($r60);

        $r61 = <java.lang.System: java.io.PrintStream out>;

        $r62 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionLINENUMBERS");

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r62);

        $r63 = <java.lang.System: java.io.PrintStream out>;

        $r64 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionINCREMENTAL");

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r65 = <java.lang.System: java.io.PrintStream out>;

        $r66 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionNOOPTIMIMIZE");

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r66);

        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r68 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionRL");

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r68);

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t\t\t");

        $r72 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_xsltc_options");

        $r73 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r75 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r75);

        $r76 = <java.lang.System: java.io.PrintStream out>;

        $r77 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXO");

        virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r77);

        $r78 = <java.lang.System: java.io.PrintStream out>;

        $r79 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXD");

        virtualinvoke $r78.<java.io.PrintStream: void println(java.lang.String)>($r79);

        staticinvoke <org.apache.xalan.xslt.Process: void waitForReturnKey(java.util.ResourceBundle)>(r0);

        $r80 = <java.lang.System: java.io.PrintStream out>;

        $r81 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXJ");

        virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r81);

        $r82 = <java.lang.System: java.io.PrintStream out>;

        $r83 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXP");

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>($r83);

        $r84 = <java.lang.System: java.io.PrintStream out>;

        $r85 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXN");

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r85);

        $r86 = <java.lang.System: java.io.PrintStream out>;

        $r87 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXX");

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r87);

        $r88 = <java.lang.System: java.io.PrintStream out>;

        $r89 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("optionXT");

        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>($r89);

        return;
    }

    public static void main(java.lang.String[])
    {
        javax.xml.transform.stream.StreamResult r293, $r315, $r316;
        org.xml.sax.ErrorHandler $r193;
        java.util.Vector $r303;
        org.w3c.dom.Document $r198, $r199, $r226;
        org.xml.sax.EntityResolver r289;
        javax.xml.parsers.DocumentBuilderFactory $r195, $r223;
        java.lang.StringBuffer $r130, $r132, $r133, $r135, $r237, $r238, $r241, $r242, $r244, $r308, $r342;
        java.io.StringReader $r339;
        javax.xml.transform.TransformerFactory r280;
        org.apache.xalan.trace.PrintTraceListener r285, $r304, $r305, $r306, $r307;
        javax.xml.transform.sax.SAXTransformerFactory $r221;
        org.xml.sax.SAXNotRecognizedException $r256;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i25, $i26, $i27, $i29, $i30, $i31, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i57, $i58, $i59, $i61, $i62, $i63, $i64, $i65, $i67, $i68, $i69, $i71, i72, $i73, i74, i75, i76, $i77, $i79, i80, i81, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i94, $i96, $i98, $i100, $i102, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i115, $i117, $i119;
        java.lang.Boolean $r107, $r108, $r194, $r209, $r218;
        java.io.PrintStream $r1, $r79, $r83, $r89, $r95, $r104, $r110, $r116, $r122, $r138, $r142, $r145, $r149, $r153, $r156, $r166, $r230, $r266, $r270, $r274;
        javax.xml.parsers.FactoryConfigurationError $r249, $r259;
        javax.xml.transform.sax.SAXSource $r333, $r335;
        java.lang.Class $r239;
        java.lang.String $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r78, $r80, $r81, $r84, $r85, $r86, $r87, $r90, $r91, $r92, $r93, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r105, $r106, $r111, $r112, $r117, $r118, $r123, $r124, $r127, $r129, $r131, $r134, $r136, $r139, r140, $r143, $r146, $r147, $r150, $r151, $r154, $r157, $r158, $r159, $r160, $r167, $r170, $r174, $r176, $r214, $r217, $r231, $r236, $r240, $r243, $r245, $r251, $r261, $r267, $r271, $r275, $r277, r279, r281, r282, r283, r284, r286, r287, r291, r300, r301;
        java.util.Properties $r204, $r232;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70;
        org.xml.sax.SAXException $r254, $r326, $r327, $r329, $r330;
        java.io.Writer $r172;
        javax.xml.transform.TransformerFactoryConfigurationError $r276;
        java.io.OutputStream $r171;
        java.util.ListResourceBundle $r2;
        javax.xml.parsers.ParserConfigurationException $r252, $r262;
        javax.xml.transform.dom.DOMResult $r322;
        java.lang.AbstractMethodError $r247, $r257;
        javax.xml.transform.sax.SAXResult $r323, $r331, $r336;
        java.lang.Long $r341;
        javax.xml.parsers.SAXParser $r183, $r190;
        java.lang.ClassLoader $r113, $r119, $r125;
        javax.xml.transform.dom.DOMSource $r312, $r321, $r324, $r325;
        java.lang.Object[] $r77, $r82, $r88, $r94, $r103, $r109, $r115, $r121, $r137, $r141, $r144, $r148, $r152, $r155, $r168, $r213, $r216, $r265, $r269, $r273;
        javax.xml.transform.TransformerException $r318, $r319;
        javax.xml.transform.stream.StreamSource $r313, $r317, $r337, $r338, $r340;
        javax.xml.transform.URIResolver r288;
        long $l78, $l82, $l83;
        org.apache.xml.utils.WrappedRuntimeException $r234;
        java.lang.NoSuchMethodError $r248, $r258;
        java.io.IOException $r246;
        javax.xml.transform.sax.TransformerHandler $r191;
        org.xml.sax.SAXNotSupportedException $r255;
        org.xml.sax.InputSource $r311, $r320, $r328, $r332, $r334;
        java.lang.Object $r114, $r120, $r126, $r173, $r175;
        org.apache.xalan.trace.TraceManager $r208;
        java.io.PrintWriter r278, $r302, $r310;
        org.w3c.dom.DocumentFragment $r200;
        java.lang.Throwable $r233, r299;
        javax.xml.transform.Source $r211;
        org.xml.sax.XMLReader r297, r298;
        java.io.FileOutputStream $r314;
        javax.xml.parsers.DocumentBuilder $r196, $r224;
        javax.xml.transform.Transformer $r203, $r294, r295;
        javax.xml.transform.Templates r292;
        javax.xml.parsers.SAXParserFactory $r182, $r189;
        java.lang.String[] r3;
        org.xml.sax.ContentHandler r290;
        org.apache.xalan.xslt.ObjectFactory$ConfigurationError $r264, $r268, $r272;
        java.io.FileWriter $r309;
        char $c4, $c8, $c12, $c16, $c20, $c24, $c28, $c32, $c36, $c48, $c56, $c60, $c66, $c70;
        org.apache.xalan.transformer.TransformerImpl r296;

        r3 := @parameter0: java.lang.String[];

        z45 = 0;

        z46 = 0;

        $r302 = new java.io.PrintWriter;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r302.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r1, 1);

        r278 = $r302;

        $r2 = staticinvoke <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)>("org.apache.xalan.res.XSLTErrorResources");

        r279 = "s2s";

        $i0 = lengthof r3;

        if $i0 >= 1 goto label001;

        staticinvoke <org.apache.xalan.xslt.Process: void printArgOptions(java.util.ResourceBundle)>($r2);

        goto label174;

     label001:
        z47 = 0;

        z68 = 0;

        z67 = 0;

        z66 = 0;

        z65 = 0;

        z64 = 0;

        z63 = 0;

        z62 = 0;

        z61 = 0;

        z60 = 0;

        z59 = 0;

        z58 = 0;

        z57 = 0;

        z56 = 0;

        z55 = 0;

        z54 = 0;

        z53 = 0;

        z52 = 0;

        z51 = 0;

        z50 = 0;

        i72 = 0;

        goto label004;

     label002:
        $r5 = "-XSLTC";

        $r4 = r3[i72];

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label003;

        z47 = 1;

        z68 = 1;

        z67 = 1;

        z66 = 1;

        z65 = 1;

        z64 = 1;

        z63 = 1;

        z62 = 1;

        z61 = 1;

        z60 = 1;

        z59 = 1;

        z58 = 1;

        z57 = 1;

        z56 = 1;

        z55 = 1;

        z54 = 1;

        z53 = 1;

        z52 = 1;

        z51 = 1;

        z50 = 1;

     label003:
        i72 = i72 + 1;

     label004:
        $i73 = lengthof r3;

        if i72 < $i73 goto label002;

        if z54 == 0 goto label005;

        $r232 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        virtualinvoke $r232.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("javax.xml.transform.TransformerFactory", "org.apache.xalan.xsltc.trax.TransformerFactoryImpl");

        staticinvoke <java.lang.System: void setProperties(java.util.Properties)>($r232);

     label005:
        r280 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

     label006:
        goto label008;

     label007:
        $r276 := @caughtexception;

        virtualinvoke $r276.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r302);

        $r277 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUCCESSFUL", null);

        virtualinvoke $r302.<java.io.PrintWriter: void println(java.lang.String)>($r277);

        r280 = null;

        $i85 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i85);

     label008:
        z48 = 0;

        z70 = 0;

        z69 = 0;

        r281 = null;

        r282 = null;

        r283 = null;

        r284 = null;

        r285 = null;

        r286 = null;

        r301 = null;

        r300 = null;

        r287 = null;

        $r303 = new java.util.Vector;

        specialinvoke $r303.<java.util.Vector: void <init>()>();

        z49 = 0;

        r288 = null;

        r289 = null;

        r290 = null;

        $i87 = (int) -1;

        i74 = $i87;

        i75 = 0;

        goto label098;

     label009:
        $r8 = "-XSLTC";

        $r7 = r3[i75];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label010;

        goto label097;

     label010:
        $r10 = "-TT";

        $r9 = r3[i75];

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z2 == 0 goto label013;

        if z63 != 0 goto label012;

        if null != r285 goto label011;

        $r304 = new org.apache.xalan.trace.PrintTraceListener;

        specialinvoke $r304.<org.apache.xalan.trace.PrintTraceListener: void <init>(java.io.PrintWriter)>($r302);

        r285 = $r304;

     label011:
        r285.<org.apache.xalan.trace.PrintTraceListener: boolean m_traceTemplates> = 1;

        goto label097;

     label012:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-TT");

        goto label097;

     label013:
        $r12 = "-TG";

        $r11 = r3[i75];

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z3 == 0 goto label016;

        if z56 != 0 goto label015;

        if null != r285 goto label014;

        $r305 = new org.apache.xalan.trace.PrintTraceListener;

        specialinvoke $r305.<org.apache.xalan.trace.PrintTraceListener: void <init>(java.io.PrintWriter)>($r302);

        r285 = $r305;

     label014:
        r285.<org.apache.xalan.trace.PrintTraceListener: boolean m_traceGeneration> = 1;

        goto label097;

     label015:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-TG");

        goto label097;

     label016:
        $r14 = "-TS";

        $r13 = r3[i75];

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13);

        if $z4 == 0 goto label019;

        if z64 != 0 goto label018;

        if null != r285 goto label017;

        $r306 = new org.apache.xalan.trace.PrintTraceListener;

        specialinvoke $r306.<org.apache.xalan.trace.PrintTraceListener: void <init>(java.io.PrintWriter)>($r302);

        r285 = $r306;

     label017:
        r285.<org.apache.xalan.trace.PrintTraceListener: boolean m_traceSelection> = 1;

        goto label097;

     label018:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-TS");

        goto label097;

     label019:
        $r16 = "-TTC";

        $r15 = r3[i75];

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);

        if $z5 == 0 goto label022;

        if z65 != 0 goto label021;

        if null != r285 goto label020;

        $r307 = new org.apache.xalan.trace.PrintTraceListener;

        specialinvoke $r307.<org.apache.xalan.trace.PrintTraceListener: void <init>(java.io.PrintWriter)>($r302);

        r285 = $r307;

     label020:
        r285.<org.apache.xalan.trace.PrintTraceListener: boolean m_traceElements> = 1;

        goto label097;

     label021:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-TTC");

        goto label097;

     label022:
        $r18 = "-INDENT";

        $r17 = r3[i75];

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z6 == 0 goto label024;

        $i68 = i75 + 1;

        $i67 = lengthof r3;

        if $i68 >= $i67 goto label023;

        $i69 = i75 + 1;

        $r159 = r3[$i69];

        $c70 = virtualinvoke $r159.<java.lang.String: char charAt(int)>(0);

        $i88 = (int) $c70;

        if $i88 == 45 goto label023;

        i75 = i75 + 1;

        $r160 = r3[i75];

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r160);

        goto label023;

     label023:
        goto label097;

     label024:
        $r20 = "-IN";

        $r19 = r3[i75];

        $z7 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r19);

        if $z7 == 0 goto label026;

        $i64 = i75 + 1;

        $i63 = lengthof r3;

        if $i64 >= $i63 goto label025;

        $i65 = i75 + 1;

        $r158 = r3[$i65];

        $c66 = virtualinvoke $r158.<java.lang.String: char charAt(int)>(0);

        $i89 = (int) $c66;

        if $i89 == 45 goto label025;

        i75 = i75 + 1;

        r281 = r3[i75];

        goto label097;

     label025:
        $r156 = <java.lang.System: java.io.PrintStream err>;

        $r155 = newarray (java.lang.Object)[1];

        $r155[0] = "-IN";

        $r157 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r155);

        virtualinvoke $r156.<java.io.PrintStream: void println(java.lang.String)>($r157);

        goto label097;

     label026:
        $r22 = "-MEDIA";

        $r21 = r3[i75];

        $z8 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r21);

        if $z8 == 0 goto label028;

        $i62 = i75 + 1;

        $i61 = lengthof r3;

        if $i62 >= $i61 goto label027;

        i75 = i75 + 1;

        r287 = r3[i75];

        goto label097;

     label027:
        $r153 = <java.lang.System: java.io.PrintStream err>;

        $r152 = newarray (java.lang.Object)[1];

        $r152[0] = "-MEDIA";

        $r154 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r152);

        virtualinvoke $r153.<java.io.PrintStream: void println(java.lang.String)>($r154);

        goto label097;

     label028:
        $r24 = "-OUT";

        $r23 = r3[i75];

        $z9 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r23);

        if $z9 == 0 goto label030;

        $i58 = i75 + 1;

        $i57 = lengthof r3;

        if $i58 >= $i57 goto label029;

        $i59 = i75 + 1;

        $r151 = r3[$i59];

        $c60 = virtualinvoke $r151.<java.lang.String: char charAt(int)>(0);

        $i90 = (int) $c60;

        if $i90 == 45 goto label029;

        i75 = i75 + 1;

        r282 = r3[i75];

        goto label097;

     label029:
        $r149 = <java.lang.System: java.io.PrintStream err>;

        $r148 = newarray (java.lang.Object)[1];

        $r148[0] = "-OUT";

        $r150 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r148);

        virtualinvoke $r149.<java.io.PrintStream: void println(java.lang.String)>($r150);

        goto label097;

     label030:
        $r26 = "-XSL";

        $r25 = r3[i75];

        $z10 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r25);

        if $z10 == 0 goto label032;

        $i54 = i75 + 1;

        $i53 = lengthof r3;

        if $i54 >= $i53 goto label031;

        $i55 = i75 + 1;

        $r147 = r3[$i55];

        $c56 = virtualinvoke $r147.<java.lang.String: char charAt(int)>(0);

        $i91 = (int) $c56;

        if $i91 == 45 goto label031;

        i75 = i75 + 1;

        r284 = r3[i75];

        goto label097;

     label031:
        $r145 = <java.lang.System: java.io.PrintStream err>;

        $r144 = newarray (java.lang.Object)[1];

        $r144[0] = "-XSL";

        $r146 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r144);

        virtualinvoke $r145.<java.io.PrintStream: void println(java.lang.String)>($r146);

        goto label097;

     label032:
        $r28 = "-FLAVOR";

        $r27 = r3[i75];

        $z11 = virtualinvoke $r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r27);

        if $z11 == 0 goto label034;

        $i52 = i75 + 1;

        $i51 = lengthof r3;

        if $i52 >= $i51 goto label033;

        i75 = i75 + 1;

        r279 = r3[i75];

        goto label097;

     label033:
        $r142 = <java.lang.System: java.io.PrintStream err>;

        $r141 = newarray (java.lang.Object)[1];

        $r141[0] = "-FLAVOR";

        $r143 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r141);

        virtualinvoke $r142.<java.io.PrintStream: void println(java.lang.String)>($r143);

        goto label097;

     label034:
        $r30 = "-PARAM";

        $r29 = r3[i75];

        $z12 = virtualinvoke $r30.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r29);

        if $z12 == 0 goto label036;

        $i50 = i75 + 2;

        $i49 = lengthof r3;

        if $i50 >= $i49 goto label035;

        i76 = i75 + 1;

        r291 = r3[i76];

        virtualinvoke $r303.<java.util.Vector: void addElement(java.lang.Object)>(r291);

        i75 = i76 + 1;

        r140 = r3[i75];

        virtualinvoke $r303.<java.util.Vector: void addElement(java.lang.Object)>(r140);

        goto label097;

     label035:
        $r138 = <java.lang.System: java.io.PrintStream err>;

        $r137 = newarray (java.lang.Object)[1];

        $r137[0] = "-PARAM";

        $r139 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r137);

        virtualinvoke $r138.<java.io.PrintStream: void println(java.lang.String)>($r139);

        goto label097;

     label036:
        $r32 = "-E";

        $r31 = r3[i75];

        $z13 = virtualinvoke $r32.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r31);

        if $z13 == 0 goto label037;

        goto label097;

     label037:
        $r34 = "-V";

        $r33 = r3[i75];

        $z14 = virtualinvoke $r34.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r33);

        if $z14 == 0 goto label038;

        $r308 = new java.lang.StringBuffer;

        specialinvoke $r308.<java.lang.StringBuffer: void <init>()>();

        $r129 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("version");

        $r130 = virtualinvoke $r308.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r129);

        $r131 = staticinvoke <org.apache.xalan.Version: java.lang.String getVersion()>();

        $r132 = virtualinvoke $r130.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r134 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("version2");

        $r135 = virtualinvoke $r133.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r134);

        $r136 = virtualinvoke $r135.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r302.<java.io.PrintWriter: void println(java.lang.String)>($r136);

        goto label097;

     label038:
        $r36 = "-QC";

        $r35 = r3[i75];

        $z15 = virtualinvoke $r36.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r35);

        if $z15 == 0 goto label040;

        if z67 != 0 goto label039;

        z49 = 1;

        goto label097;

     label039:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-QC");

        goto label097;

     label040:
        $r38 = "-Q";

        $r37 = r3[i75];

        $z16 = virtualinvoke $r38.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r37);

        if $z16 == 0 goto label041;

        goto label097;

     label041:
        $r40 = "-DIAG";

        $r39 = r3[i75];

        $z17 = virtualinvoke $r40.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r39);

        if $z17 == 0 goto label042;

        z46 = 1;

        goto label097;

     label042:
        $r42 = "-XML";

        $r41 = r3[i75];

        $z18 = virtualinvoke $r42.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r41);

        if $z18 == 0 goto label043;

        r286 = "xml";

        r301 = "xml";

        r300 = "xml";

        goto label097;

     label043:
        $r44 = "-TEXT";

        $r43 = r3[i75];

        $z19 = virtualinvoke $r44.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r43);

        if $z19 == 0 goto label044;

        r286 = "text";

        r301 = "text";

        r300 = "text";

        goto label097;

     label044:
        $r46 = "-HTML";

        $r45 = r3[i75];

        $z20 = virtualinvoke $r46.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r45);

        if $z20 == 0 goto label045;

        r286 = "html";

        r301 = "html";

        r300 = "html";

        goto label097;

     label045:
        $r48 = "-EDUMP";

        $r47 = r3[i75];

        $z21 = virtualinvoke $r48.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r47);

        if $z21 == 0 goto label046;

        z45 = 1;

        $i46 = i75 + 1;

        $i45 = lengthof r3;

        if $i46 >= $i45 goto label097;

        $i47 = i75 + 1;

        $r127 = r3[$i47];

        $c48 = virtualinvoke $r127.<java.lang.String: char charAt(int)>(0);

        $i92 = (int) $c48;

        if $i92 == 45 goto label097;

        i75 = i75 + 1;

        r283 = r3[i75];

        goto label097;

     label046:
        $r50 = "-URIRESOLVER";

        $r49 = r3[i75];

        $z22 = virtualinvoke $r50.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r49);

        if $z22 == 0 goto label052;

        $i44 = i75 + 1;

        $i43 = lengthof r3;

        if $i44 >= $i43 goto label051;

     label047:
        i75 = i75 + 1;

        $r124 = r3[i75];

        $r125 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r126 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r124, $r125, 1);

        r288 = (javax.xml.transform.URIResolver) $r126;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setURIResolver(javax.xml.transform.URIResolver)>(r288);

     label048:
        goto label050;

     label049:
        $r272 := @caughtexception;

        $r274 = <java.lang.System: java.io.PrintStream err>;

        $r273 = newarray (java.lang.Object)[1];

        $r273[0] = "-URIResolver";

        $r275 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CLASS_NOT_FOUND_FOR_OPTION", $r273);

        virtualinvoke $r274.<java.io.PrintStream: void println(java.lang.String)>($r275);

        $i94 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i94);

     label050:
        goto label097;

     label051:
        $r122 = <java.lang.System: java.io.PrintStream err>;

        $r121 = newarray (java.lang.Object)[1];

        $r121[0] = "-URIResolver";

        $r123 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r121);

        virtualinvoke $r122.<java.io.PrintStream: void println(java.lang.String)>($r123);

        $i96 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i96);

        goto label097;

     label052:
        $r52 = "-ENTITYRESOLVER";

        $r51 = r3[i75];

        $z23 = virtualinvoke $r52.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r51);

        if $z23 == 0 goto label058;

        $i42 = i75 + 1;

        $i41 = lengthof r3;

        if $i42 >= $i41 goto label057;

     label053:
        i75 = i75 + 1;

        $r118 = r3[i75];

        $r119 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r120 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r118, $r119, 1);

        r289 = (org.xml.sax.EntityResolver) $r120;

     label054:
        goto label056;

     label055:
        $r268 := @caughtexception;

        $r270 = <java.lang.System: java.io.PrintStream err>;

        $r269 = newarray (java.lang.Object)[1];

        $r269[0] = "-EntityResolver";

        $r271 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CLASS_NOT_FOUND_FOR_OPTION", $r269);

        virtualinvoke $r270.<java.io.PrintStream: void println(java.lang.String)>($r271);

        $i98 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i98);

     label056:
        goto label097;

     label057:
        $r116 = <java.lang.System: java.io.PrintStream err>;

        $r115 = newarray (java.lang.Object)[1];

        $r115[0] = "-EntityResolver";

        $r117 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r115);

        virtualinvoke $r116.<java.io.PrintStream: void println(java.lang.String)>($r117);

        $i100 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i100);

        goto label097;

     label058:
        $r54 = "-CONTENTHANDLER";

        $r53 = r3[i75];

        $z24 = virtualinvoke $r54.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r53);

        if $z24 == 0 goto label064;

        $i40 = i75 + 1;

        $i39 = lengthof r3;

        if $i40 >= $i39 goto label063;

     label059:
        i75 = i75 + 1;

        $r112 = r3[i75];

        $r113 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        $r114 = staticinvoke <org.apache.xalan.xslt.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r112, $r113, 1);

        r290 = (org.xml.sax.ContentHandler) $r114;

     label060:
        goto label062;

     label061:
        $r264 := @caughtexception;

        $r266 = <java.lang.System: java.io.PrintStream err>;

        $r265 = newarray (java.lang.Object)[1];

        $r265[0] = "-ContentHandler";

        $r267 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CLASS_NOT_FOUND_FOR_OPTION", $r265);

        virtualinvoke $r266.<java.io.PrintStream: void println(java.lang.String)>($r267);

        $i102 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i102);

     label062:
        goto label097;

     label063:
        $r110 = <java.lang.System: java.io.PrintStream err>;

        $r109 = newarray (java.lang.Object)[1];

        $r109[0] = "-ContentHandler";

        $r111 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r109);

        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>($r111);

        $i104 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i104);

        goto label097;

     label064:
        $r56 = "-L";

        $r55 = r3[i75];

        $z25 = virtualinvoke $r56.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r55);

        if $z25 == 0 goto label066;

        if z57 != 0 goto label065;

        z48 = 1;

        z70 = 1;

        z69 = 1;

        goto label097;

     label065:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-L");

        goto label097;

     label066:
        $r58 = "-INCREMENTAL";

        $r57 = r3[i75];

        $z26 = virtualinvoke $r58.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r57);

        if $z26 == 0 goto label068;

        if z50 != 0 goto label067;

        $r108 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("http://xml.apache.org/xalan/features/incremental", $r108);

        goto label097;

     label067:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-INCREMENTAL");

        goto label097;

     label068:
        $r60 = "-NOOPTIMIZE";

        $r59 = r3[i75];

        $z27 = virtualinvoke $r60.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r59);

        if $z27 == 0 goto label070;

        if z53 != 0 goto label069;

        $r107 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("http://xml.apache.org/xalan/features/optimize", $r107);

        goto label097;

     label069:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-NOOPTIMIZE");

        goto label097;

     label070:
        $r62 = "-RL";

        $r61 = r3[i75];

        $z28 = virtualinvoke $r62.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r61);

        if $z28 == 0 goto label074;

        if z59 != 0 goto label072;

        $i38 = i75 + 1;

        $i37 = lengthof r3;

        if $i38 >= $i37 goto label071;

        i75 = i75 + 1;

        $r106 = r3[i75];

        i74 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r106);

        goto label097;

     label071:
        $r104 = <java.lang.System: java.io.PrintStream err>;

        $r103 = newarray (java.lang.Object)[1];

        $r103[0] = "-rl";

        $r105 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r103);

        virtualinvoke $r104.<java.io.PrintStream: void println(java.lang.String)>($r105);

        goto label097;

     label072:
        $i34 = i75 + 1;

        $i33 = lengthof r3;

        if $i34 >= $i33 goto label073;

        $i35 = i75 + 1;

        $r102 = r3[$i35];

        $c36 = virtualinvoke $r102.<java.lang.String: char charAt(int)>(0);

        $i105 = (int) $c36;

        if $i105 == 45 goto label073;

        i75 = i75 + 1;

     label073:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXSLTCOption(java.lang.String)>("-RL");

        goto label097;

     label074:
        $r64 = "-XO";

        $r63 = r3[i75];

        $z29 = virtualinvoke $r64.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r63);

        if $z29 == 0 goto label078;

        if z58 == 0 goto label076;

        $i30 = i75 + 1;

        $i29 = lengthof r3;

        if $i30 >= $i29 goto label075;

        $i31 = i75 + 1;

        $r100 = r3[$i31];

        $c32 = virtualinvoke $r100.<java.lang.String: char charAt(int)>(0);

        $i106 = (int) $c32;

        if $i106 == 45 goto label075;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("generate-translet", "true");

        i75 = i75 + 1;

        $r101 = r3[i75];

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("translet-name", $r101);

        goto label097;

     label075:
        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("generate-translet", "true");

        goto label097;

     label076:
        $i26 = i75 + 1;

        $i25 = lengthof r3;

        if $i26 >= $i25 goto label077;

        $i27 = i75 + 1;

        $r99 = r3[$i27];

        $c28 = virtualinvoke $r99.<java.lang.String: char charAt(int)>(0);

        $i107 = (int) $c28;

        if $i107 == 45 goto label077;

        i75 = i75 + 1;

     label077:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XO");

        goto label097;

     label078:
        $r66 = "-XD";

        $r65 = r3[i75];

        $z30 = virtualinvoke $r66.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r65);

        if $z30 == 0 goto label082;

        if z60 == 0 goto label080;

        $i22 = i75 + 1;

        $i21 = lengthof r3;

        if $i22 >= $i21 goto label079;

        $i23 = i75 + 1;

        $r97 = r3[$i23];

        $c24 = virtualinvoke $r97.<java.lang.String: char charAt(int)>(0);

        $i108 = (int) $c24;

        if $i108 == 45 goto label079;

        i75 = i75 + 1;

        $r98 = r3[i75];

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("destination-directory", $r98);

        goto label097;

     label079:
        $r95 = <java.lang.System: java.io.PrintStream err>;

        $r94 = newarray (java.lang.Object)[1];

        $r94[0] = "-XD";

        $r96 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r94);

        virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>($r96);

        goto label097;

     label080:
        $i18 = i75 + 1;

        $i17 = lengthof r3;

        if $i18 >= $i17 goto label081;

        $i19 = i75 + 1;

        $r93 = r3[$i19];

        $c20 = virtualinvoke $r93.<java.lang.String: char charAt(int)>(0);

        $i109 = (int) $c20;

        if $i109 == 45 goto label081;

        i75 = i75 + 1;

     label081:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XD");

        goto label097;

     label082:
        $r68 = "-XJ";

        $r67 = r3[i75];

        $z31 = virtualinvoke $r68.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r67);

        if $z31 == 0 goto label086;

        if z55 == 0 goto label084;

        $i14 = i75 + 1;

        $i13 = lengthof r3;

        if $i14 >= $i13 goto label083;

        $i15 = i75 + 1;

        $r91 = r3[$i15];

        $c16 = virtualinvoke $r91.<java.lang.String: char charAt(int)>(0);

        $i110 = (int) $c16;

        if $i110 == 45 goto label083;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("generate-translet", "true");

        i75 = i75 + 1;

        $r92 = r3[i75];

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("jar-name", $r92);

        goto label097;

     label083:
        $r89 = <java.lang.System: java.io.PrintStream err>;

        $r88 = newarray (java.lang.Object)[1];

        $r88[0] = "-XJ";

        $r90 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r88);

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r90);

        goto label097;

     label084:
        $i10 = i75 + 1;

        $i9 = lengthof r3;

        if $i10 >= $i9 goto label085;

        $i11 = i75 + 1;

        $r87 = r3[$i11];

        $c12 = virtualinvoke $r87.<java.lang.String: char charAt(int)>(0);

        $i111 = (int) $c12;

        if $i111 == 45 goto label085;

        i75 = i75 + 1;

     label085:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XJ");

        goto label097;

     label086:
        $r70 = "-XP";

        $r69 = r3[i75];

        $z32 = virtualinvoke $r70.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r69);

        if $z32 == 0 goto label090;

        if z61 == 0 goto label088;

        $i6 = i75 + 1;

        $i5 = lengthof r3;

        if $i6 >= $i5 goto label087;

        $i7 = i75 + 1;

        $r85 = r3[$i7];

        $c8 = virtualinvoke $r85.<java.lang.String: char charAt(int)>(0);

        $i112 = (int) $c8;

        if $i112 == 45 goto label087;

        i75 = i75 + 1;

        $r86 = r3[i75];

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("package-name", $r86);

        goto label097;

     label087:
        $r83 = <java.lang.System: java.io.PrintStream err>;

        $r82 = newarray (java.lang.Object)[1];

        $r82[0] = "-XP";

        $r84 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MISSING_ARG_FOR_OPTION", $r82);

        virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r84);

        goto label097;

     label088:
        $i2 = i75 + 1;

        $i1 = lengthof r3;

        if $i2 >= $i1 goto label089;

        $i3 = i75 + 1;

        $r81 = r3[$i3];

        $c4 = virtualinvoke $r81.<java.lang.String: char charAt(int)>(0);

        $i113 = (int) $c4;

        if $i113 == 45 goto label089;

        i75 = i75 + 1;

     label089:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XP");

        goto label097;

     label090:
        $r72 = "-XN";

        $r71 = r3[i75];

        $z33 = virtualinvoke $r72.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r71);

        if $z33 == 0 goto label092;

        if z68 == 0 goto label091;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("enable-inlining", "true");

        goto label097;

     label091:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XN");

        goto label097;

     label092:
        $r74 = "-XX";

        $r73 = r3[i75];

        $z34 = virtualinvoke $r74.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r73);

        if $z34 == 0 goto label094;

        if z51 == 0 goto label093;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("debug", "true");

        goto label097;

     label093:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XX");

        goto label097;

     label094:
        $r76 = "-XT";

        $r75 = r3[i75];

        $z35 = virtualinvoke $r76.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r75);

        if $z35 == 0 goto label096;

        if z52 == 0 goto label095;

        virtualinvoke r280.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("auto-translet", "true");

        goto label097;

     label095:
        staticinvoke <org.apache.xalan.xslt.Process: void printInvalidXalanOption(java.lang.String)>("-XT");

        goto label097;

     label096:
        $r79 = <java.lang.System: java.io.PrintStream err>;

        $r77 = newarray (java.lang.Object)[1];

        $r78 = r3[i75];

        $r77[0] = $r78;

        $r80 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_OPTION", $r77);

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r80);

     label097:
        i75 = i75 + 1;

     label098:
        $i77 = lengthof r3;

        if i75 < $i77 goto label009;

        if r281 != null goto label099;

        if r284 != null goto label099;

        $r230 = <java.lang.System: java.io.PrintStream err>;

        $r231 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_no_input");

        virtualinvoke $r230.<java.io.PrintStream: void println(java.lang.String)>($r231);

        $i115 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i115);

     label099:
        $l78 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if null == r283 goto label100;

        $r310 = new java.io.PrintWriter;

        $r309 = new java.io.FileWriter;

        specialinvoke $r309.<java.io.FileWriter: void <init>(java.lang.String)>(r283);

        specialinvoke $r310.<java.io.PrintWriter: void <init>(java.io.Writer)>($r309);

        r278 = $r310;

     label100:
        r292 = null;

        if null == r284 goto label102;

        $z41 = virtualinvoke r279.<java.lang.String: boolean equals(java.lang.Object)>("d2d");

        if $z41 == 0 goto label101;

        $r223 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r223.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r224 = virtualinvoke $r223.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r311 = new org.xml.sax.InputSource;

        specialinvoke $r311.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r284);

        $r226 = virtualinvoke $r224.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r311);

        $r312 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r312.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node,java.lang.String)>($r226, r284);

        r292 = virtualinvoke r280.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r312);

        goto label102;

     label101:
        $r313 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r313.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r284);

        r292 = virtualinvoke r280.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r313);

     label102:
        if null == r282 goto label103;

        $r315 = new javax.xml.transform.stream.StreamResult;

        $r314 = new java.io.FileOutputStream;

        specialinvoke $r314.<java.io.FileOutputStream: void <init>(java.lang.String)>(r282);

        specialinvoke $r315.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r314);

        r293 = $r315;

        virtualinvoke $r315.<javax.xml.transform.stream.StreamResult: void setSystemId(java.lang.String)>(r282);

        goto label104;

     label103:
        $r316 = new javax.xml.transform.stream.StreamResult;

        $r166 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r316.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r166);

        r293 = $r316;

     label104:
        $r221 = (javax.xml.transform.sax.SAXTransformerFactory) r280;

        if z66 != 0 goto label105;

        if z69 == 0 goto label105;

        $r218 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r221.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location", $r218);

     label105:
        if null != r292 goto label108;

        $r317 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r317.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r281);

        $r211 = virtualinvoke $r221.<javax.xml.transform.TransformerFactory: javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)>($r317, r287, null, null);

        if null == $r211 goto label106;

        r292 = virtualinvoke r280.<javax.xml.transform.TransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r211);

        goto label108;

     label106:
        if null == r287 goto label107;

        $r318 = new javax.xml.transform.TransformerException;

        $r216 = newarray (java.lang.Object)[2];

        $r216[0] = r281;

        $r216[1] = r287;

        $r217 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_STYLESHEET_IN_MEDIA", $r216);

        specialinvoke $r318.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r217);

        throw $r318;

     label107:
        $r319 = new javax.xml.transform.TransformerException;

        $r213 = newarray (java.lang.Object)[1];

        $r213[0] = r281;

        $r214 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_STYLESHEET_PI", $r213);

        specialinvoke $r319.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r214);

        throw $r319;

     label108:
        if null == r292 goto label156;

        $z36 = virtualinvoke r279.<java.lang.String: boolean equals(java.lang.Object)>("th");

        if $z36 == 0 goto label109;

        $r294 = null;

        goto label110;

     label109:
        $r294 = interfaceinvoke r292.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

     label110:
        r295 = $r294;

        if null == r301 goto label111;

        virtualinvoke $r294.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("method", r300);

     label111:
        $z37 = r295 instanceof org.apache.xalan.transformer.TransformerImpl;

        if $z37 == 0 goto label114;

        r296 = (org.apache.xalan.transformer.TransformerImpl) r295;

        $r208 = virtualinvoke r296.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        if null == r285 goto label112;

        virtualinvoke $r208.<org.apache.xalan.trace.TraceManager: void addTraceListener(org.apache.xalan.trace.TraceListener)>(r285);

     label112:
        virtualinvoke r296.<org.apache.xalan.transformer.TransformerImpl: void setQuietConflictWarnings(boolean)>(z49);

        if z70 == 0 goto label113;

        $r209 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r296.<org.apache.xalan.transformer.TransformerImpl: void setProperty(java.lang.String,java.lang.Object)>("http://xml.apache.org/xalan/properties/source-location", $r209);

     label113:
        if i74 <= 0 goto label114;

        virtualinvoke r296.<org.apache.xalan.transformer.TransformerImpl: void setRecursionLimit(int)>(i74);

     label114:
        $i79 = virtualinvoke $r303.<java.util.Vector: int size()>();

        i80 = 0;

        goto label116;

     label115:
        $r173 = virtualinvoke $r303.<java.util.Vector: java.lang.Object elementAt(int)>(i80);

        $r174 = (java.lang.String) $r173;

        $i71 = i80 + 1;

        $r175 = virtualinvoke $r303.<java.util.Vector: java.lang.Object elementAt(int)>($i71);

        $r176 = (java.lang.String) $r175;

        virtualinvoke r295.<javax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)>($r174, $r176);

        i80 = i80 + 2;

     label116:
        if i80 < $i79 goto label115;

        if r288 == null goto label117;

        virtualinvoke r295.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>(r288);

     label117:
        if null == r281 goto label154;

        $z38 = virtualinvoke r279.<java.lang.String: boolean equals(java.lang.Object)>("d2d");

        if $z38 == 0 goto label121;

        $r195 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r195.<javax.xml.parsers.DocumentBuilderFactory: void setCoalescing(boolean)>(1);

        virtualinvoke $r195.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r196 = virtualinvoke $r195.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        if r289 == null goto label118;

        virtualinvoke $r196.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>(r289);

     label118:
        $r320 = new org.xml.sax.InputSource;

        specialinvoke $r320.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r281);

        $r198 = virtualinvoke $r196.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r320);

        $r199 = virtualinvoke $r196.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        $r200 = interfaceinvoke $r199.<org.w3c.dom.Document: org.w3c.dom.DocumentFragment createDocumentFragment()>();

        $r321 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r321.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node,java.lang.String)>($r198, r281);

        $r322 = new javax.xml.transform.dom.DOMResult;

        specialinvoke $r322.<javax.xml.transform.dom.DOMResult: void <init>(org.w3c.dom.Node)>($r200);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r321, $r322);

        $r203 = virtualinvoke $r221.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        $r204 = interfaceinvoke r292.<javax.xml.transform.Templates: java.util.Properties getOutputProperties()>();

        virtualinvoke $r203.<javax.xml.transform.Transformer: void setOutputProperties(java.util.Properties)>($r204);

        if r290 == null goto label119;

        $r323 = new javax.xml.transform.sax.SAXResult;

        specialinvoke $r323.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r290);

        $r324 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r324.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r200);

        virtualinvoke $r203.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r324, $r323);

        goto label120;

     label119:
        $r325 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r325.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r200);

        virtualinvoke $r203.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r325, r293);

     label120:
        goto label155;

     label121:
        $z39 = virtualinvoke r279.<java.lang.String: boolean equals(java.lang.Object)>("th");

        if $z39 == 0 goto label141;

        i81 = 0;

        goto label140;

     label122:
        r297 = null;

     label123:
        $r189 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r189.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r190 = virtualinvoke $r189.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r297 = virtualinvoke $r190.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label124:
        goto label129;

     label125:
        $r262 := @caughtexception;

        $r326 = new org.xml.sax.SAXException;

        specialinvoke $r326.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r262);

        throw $r326;

     label126:
        $r259 := @caughtexception;

        $r327 = new org.xml.sax.SAXException;

        $r261 = virtualinvoke $r259.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r327.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r261);

        throw $r327;

     label127:
        $r258 := @caughtexception;

        goto label129;

     label128:
        $r257 := @caughtexception;

     label129:
        if null != r297 goto label130;

        r297 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label130:
        if z62 != 0 goto label131;

        $r194 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r221.<javax.xml.transform.TransformerFactory: void setAttribute(java.lang.String,java.lang.Object)>("http://xml.apache.org/xalan/features/incremental", $r194);

     label131:
        $r191 = virtualinvoke $r221.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>(r292);

        interfaceinvoke r297.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r191);

        interfaceinvoke r297.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>($r191);

        $z40 = $r191 instanceof org.xml.sax.ErrorHandler;

        if $z40 == 0 goto label132;

        $r193 = (org.xml.sax.ErrorHandler) $r191;

        interfaceinvoke r297.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r193);

     label132:
        interfaceinvoke r297.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", $r191);

     label133:
        goto label136;

     label134:
        $r256 := @caughtexception;

        goto label136;

     label135:
        $r255 := @caughtexception;

     label136:
        interfaceinvoke r297.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 1);

     label137:
        goto label139;

     label138:
        $r254 := @caughtexception;

     label139:
        interfaceinvoke $r191.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>(r293);

        $r328 = new org.xml.sax.InputSource;

        specialinvoke $r328.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r281);

        interfaceinvoke r297.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r328);

        i81 = i81 + 1;

     label140:
        if i81 < 1 goto label122;

        goto label155;

     label141:
        if r289 == null goto label152;

        r298 = null;

     label142:
        $r182 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r182.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r183 = virtualinvoke $r182.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r298 = virtualinvoke $r183.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label143:
        goto label148;

     label144:
        $r252 := @caughtexception;

        $r329 = new org.xml.sax.SAXException;

        specialinvoke $r329.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r252);

        throw $r329;

     label145:
        $r249 := @caughtexception;

        $r330 = new org.xml.sax.SAXException;

        $r251 = virtualinvoke $r249.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke $r330.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r251);

        throw $r330;

     label146:
        $r248 := @caughtexception;

        goto label148;

     label147:
        $r247 := @caughtexception;

     label148:
        if null != r298 goto label149;

        r298 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label149:
        interfaceinvoke r298.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r289);

        if r290 == null goto label150;

        $r331 = new javax.xml.transform.sax.SAXResult;

        specialinvoke $r331.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r290);

        $r333 = new javax.xml.transform.sax.SAXSource;

        $r332 = new org.xml.sax.InputSource;

        specialinvoke $r332.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r281);

        specialinvoke $r333.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>(r298, $r332);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r333, $r331);

        goto label151;

     label150:
        $r335 = new javax.xml.transform.sax.SAXSource;

        $r334 = new org.xml.sax.InputSource;

        specialinvoke $r334.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r281);

        specialinvoke $r335.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>(r298, $r334);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r335, r293);

     label151:
        goto label155;

     label152:
        if r290 == null goto label153;

        $r336 = new javax.xml.transform.sax.SAXResult;

        specialinvoke $r336.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r290);

        $r337 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r337.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r281);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r337, $r336);

        goto label155;

     label153:
        $r338 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r338.<javax.xml.transform.stream.StreamSource: void <init>(java.lang.String)>(r281);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r338, r293);

        goto label155;

     label154:
        $r339 = new java.io.StringReader;

        specialinvoke $r339.<java.io.StringReader: void <init>(java.lang.String)>("<?xml version=\"1.0\"?> <doc/>");

        $r340 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r340.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r339);

        virtualinvoke r295.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r340, r293);

     label155:
        goto label157;

     label156:
        $r167 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NOT_SUCCESSFUL", null);

        virtualinvoke $r302.<java.io.PrintWriter: void println(java.lang.String)>($r167);

        $i117 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i117);

     label157:
        if null == r282 goto label162;

        if r293 == null goto label162;

        $r171 = virtualinvoke r293.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        $r172 = virtualinvoke r293.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

     label158:
        if $r171 == null goto label159;

        virtualinvoke $r171.<java.io.OutputStream: void close()>();

     label159:
        if $r172 == null goto label160;

        virtualinvoke $r172.<java.io.Writer: void close()>();

     label160:
        goto label162;

     label161:
        $r246 := @caughtexception;

     label162:
        $l82 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l83 = $l82 - $l78;

        if z46 == 0 goto label163;

        $r168 = newarray (java.lang.Object)[3];

        $r168[0] = r281;

        $r168[1] = r284;

        $r341 = new java.lang.Long;

        specialinvoke $r341.<java.lang.Long: void <init>(long)>($l83);

        $r168[2] = $r341;

        $r170 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("diagTiming", $r168);

        virtualinvoke $r302.<java.io.PrintWriter: void println(char)>(10);

        virtualinvoke $r302.<java.io.PrintWriter: void println(java.lang.String)>($r170);

     label163:
        goto label172;

     label164:
        $r233 := @caughtexception;

        r299 = $r233;

        goto label166;

     label165:
        $r234 = (org.apache.xml.utils.WrappedRuntimeException) r299;

        r299 = virtualinvoke $r234.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label166:
        $z42 = r299 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z42 != 0 goto label165;

        $z43 = r299 instanceof java.lang.NullPointerException;

        if $z43 != 0 goto label167;

        $z44 = r299 instanceof java.lang.ClassCastException;

        if $z44 == 0 goto label168;

     label167:
        z45 = 1;

     label168:
        virtualinvoke $r302.<java.io.PrintWriter: void println()>();

        if z45 == 0 goto label169;

        virtualinvoke r299.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r278);

        goto label170;

     label169:
        staticinvoke <org.apache.xml.utils.DefaultErrorHandler: void printLocation(java.io.PrintWriter,java.lang.Throwable)>($r302, r299);

        $r342 = new java.lang.StringBuffer;

        specialinvoke $r342.<java.lang.StringBuffer: void <init>()>();

        $r236 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_XSLT_ERROR", null);

        $r237 = virtualinvoke $r342.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r236);

        $r238 = virtualinvoke $r237.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r239 = virtualinvoke r299.<java.lang.Object: java.lang.Class getClass()>();

        $r240 = virtualinvoke $r239.<java.lang.Class: java.lang.String getName()>();

        $r241 = virtualinvoke $r238.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r240);

        $r242 = virtualinvoke $r241.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): ");

        $r243 = virtualinvoke r299.<java.lang.Throwable: java.lang.String getMessage()>();

        $r244 = virtualinvoke $r242.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r243);

        $r245 = virtualinvoke $r244.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r302.<java.io.PrintWriter: void println(java.lang.String)>($r245);

     label170:
        if null == r283 goto label171;

        virtualinvoke r278.<java.io.PrintWriter: void close()>();

     label171:
        $i119 = (int) -1;

        staticinvoke <org.apache.xalan.xslt.Process: void doExit(int)>($i119);

     label172:
        if null == r283 goto label173;

        virtualinvoke r278.<java.io.PrintWriter: void close()>();

     label173:
        if null == $r302 goto label174;

     label174:
        return;

        catch javax.xml.transform.TransformerFactoryConfigurationError from label005 to label006 with label007;
        catch org.apache.xalan.xslt.ObjectFactory$ConfigurationError from label047 to label048 with label049;
        catch org.apache.xalan.xslt.ObjectFactory$ConfigurationError from label053 to label054 with label055;
        catch org.apache.xalan.xslt.ObjectFactory$ConfigurationError from label059 to label060 with label061;
        catch javax.xml.parsers.ParserConfigurationException from label123 to label124 with label125;
        catch javax.xml.parsers.FactoryConfigurationError from label123 to label124 with label126;
        catch java.lang.NoSuchMethodError from label123 to label124 with label127;
        catch java.lang.AbstractMethodError from label123 to label124 with label128;
        catch org.xml.sax.SAXNotRecognizedException from label132 to label133 with label134;
        catch org.xml.sax.SAXNotSupportedException from label132 to label133 with label135;
        catch org.xml.sax.SAXException from label136 to label137 with label138;
        catch javax.xml.parsers.ParserConfigurationException from label142 to label143 with label144;
        catch javax.xml.parsers.FactoryConfigurationError from label142 to label143 with label145;
        catch java.lang.NoSuchMethodError from label142 to label143 with label146;
        catch java.lang.AbstractMethodError from label142 to label143 with label147;
        catch java.io.IOException from label158 to label160 with label161;
        catch java.lang.Throwable from label099 to label163 with label164;
    }

    static void doExit(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <java.lang.System: void exit(int)>(i0);

        return;
    }

    private static void waitForReturnKey(java.util.ResourceBundle)
    {
        java.io.PrintStream $r1;
        java.util.ResourceBundle r0;
        int $i0;
        java.io.IOException $r4;
        java.lang.String $r2;
        java.io.InputStream $r3;

        r0 := @parameter0: java.util.ResourceBundle;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("xslProc_return_to_continue");

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label1:
        goto label2;

     label2:
        $r3 = <java.lang.System: java.io.InputStream in>;

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        if $i0 != 10 goto label2;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private static void printInvalidXSLTCOption(java.lang.String)
    {
        java.io.PrintStream $r2;
        java.lang.Object[] $r0;
        java.lang.String r1, $r3;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("xslProc_invalid_xsltc_option", $r0);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }

    private static void printInvalidXalanOption(java.lang.String)
    {
        java.io.PrintStream $r2;
        java.lang.Object[] $r0;
        java.lang.String r1, $r3;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("xslProc_invalid_xalan_option", $r0);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;
    }
}
