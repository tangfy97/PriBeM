public abstract class org.springframework.util.Log4jConfigurer extends java.lang.Object
{
    public static final java.lang.String CLASSPATH_URL_PREFIX;
    public static final java.lang.String XML_FILE_EXTENSION;

    public void <init>()
    {
        org.springframework.util.Log4jConfigurer r0;

        r0 := @this: org.springframework.util.Log4jConfigurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void initLogging(java.lang.String) throws java.io.FileNotFoundException
    {
        java.net.URL $r2;
        java.lang.String r0, $r1, $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)>(r0);

        $r2 = staticinvoke <org.springframework.util.ResourceUtils: java.net.URL getURL(java.lang.String)>($r1);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configure(java.net.URL)>($r2);

        goto label2;

     label1:
        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.net.URL)>($r2);

     label2:
        return;
    }

    public static void initLogging(java.lang.String, long) throws java.io.FileNotFoundException
    {
        long l0;
        java.io.File $r2;
        java.io.FileNotFoundException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r0, $r1, $r3, $r4, $r5, $r10;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)>(r0);

        $r2 = staticinvoke <org.springframework.util.ResourceUtils: java.io.File getFile(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r6 = new java.io.FileNotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Log4j config file [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <org.apache.log4j.xml.DOMConfigurator: void configureAndWatch(java.lang.String,long)>($r5, l0);

        goto label3;

     label2:
        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>($r4, l0);

     label3:
        return;
    }

    public static void shutdownLogging()
    {
        staticinvoke <org.apache.log4j.LogManager: void shutdown()>();

        return;
    }

    public static void setWorkingDirSystemProperty(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.File $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("");

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(r0, $r2);

        return;
    }

    public static void <clinit>()
    {
        <org.springframework.util.Log4jConfigurer: java.lang.String XML_FILE_EXTENSION> = ".xml";

        <org.springframework.util.Log4jConfigurer: java.lang.String CLASSPATH_URL_PREFIX> = "classpath:";

        return;
    }
}
