class org.mozilla.javascript.SecureCaller$2 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    private final java.lang.ClassLoader val$classLoader;
    private final java.security.CodeSource val$codeSource;

    void <init>(java.lang.ClassLoader, java.security.CodeSource) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.ClassNotFoundException
    {
        java.lang.ClassLoader r1;
        java.security.CodeSource r2;
        org.mozilla.javascript.SecureCaller$2 r0;

        r0 := @this: org.mozilla.javascript.SecureCaller$2;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.security.CodeSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.SecureCaller$2: java.lang.ClassLoader val$classLoader> = r1;

        r0.<org.mozilla.javascript.SecureCaller$2: java.security.CodeSource val$codeSource> = r2;

        return;
    }

    public java.lang.Object run() throws java.lang.Exception
    {
        byte[] $r12;
        java.lang.StringBuffer $r6, $r9, $r10;
        java.lang.String $r3, $r8, $r11;
        org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl $r5;
        org.mozilla.javascript.SecureCaller$2 r0;
        java.lang.Class $r1, $r4, $r7, $r14, $r17;
        java.lang.Object $r15;
        java.lang.ClassLoader $r2, r16;
        java.security.CodeSource $r13;

        r0 := @this: org.mozilla.javascript.SecureCaller$2;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = r0.<org.mozilla.javascript.SecureCaller$2: java.lang.ClassLoader val$classLoader>;

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r3);

        if $r4 == $r1 goto label1;

        r16 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label2;

     label1:
        r16 = r0.<org.mozilla.javascript.SecureCaller$2: java.lang.ClassLoader val$classLoader>;

     label2:
        $r5 = new org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl;

        specialinvoke $r5.<org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl: void <init>(java.lang.ClassLoader)>(r16);

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = <org.mozilla.javascript.SecureCaller: java.lang.Class class$org$mozilla$javascript$SecureCaller>;

        if $r7 != null goto label3;

        $r17 = staticinvoke <org.mozilla.javascript.SecureCaller: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.SecureCaller");

        <org.mozilla.javascript.SecureCaller: java.lang.Class class$org$mozilla$javascript$SecureCaller> = $r17;

        goto label4;

     label3:
        $r17 = <org.mozilla.javascript.SecureCaller: java.lang.Class class$org$mozilla$javascript$SecureCaller>;

     label4:
        $r8 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Impl");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = staticinvoke <org.mozilla.javascript.SecureCaller: byte[] access$000()>();

        $r13 = r0.<org.mozilla.javascript.SecureCaller$2: java.security.CodeSource val$codeSource>;

        $r14 = virtualinvoke $r5.<org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl: java.lang.Class defineAndLinkClass(java.lang.String,byte[],java.security.CodeSource)>($r11, $r12, $r13);

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.Object newInstance()>();

        return $r15;
    }
}
