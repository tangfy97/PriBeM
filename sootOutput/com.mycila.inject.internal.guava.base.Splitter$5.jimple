class com.mycila.inject.internal.guava.base.Splitter$5 extends java.lang.Object implements java.lang.Iterable
{
    final java.lang.CharSequence val$sequence;
    final com.mycila.inject.internal.guava.base.Splitter this$0;

    void <init>(com.mycila.inject.internal.guava.base.Splitter, java.lang.CharSequence)
    {
        java.lang.CharSequence r2;
        com.mycila.inject.internal.guava.base.Splitter$5 r0;
        com.mycila.inject.internal.guava.base.Splitter r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$5;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Splitter;

        r2 := @parameter1: java.lang.CharSequence;

        r0.<com.mycila.inject.internal.guava.base.Splitter$5: com.mycila.inject.internal.guava.base.Splitter this$0> = r1;

        r0.<com.mycila.inject.internal.guava.base.Splitter$5: java.lang.CharSequence val$sequence> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.lang.CharSequence $r1;
        java.util.Iterator $r3;
        com.mycila.inject.internal.guava.base.Splitter$5 r0;
        com.mycila.inject.internal.guava.base.Splitter $r2;

        r0 := @this: com.mycila.inject.internal.guava.base.Splitter$5;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Splitter$5: com.mycila.inject.internal.guava.base.Splitter this$0>;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Splitter$5: java.lang.CharSequence val$sequence>;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.base.Splitter: java.util.Iterator access$000(com.mycila.inject.internal.guava.base.Splitter,java.lang.CharSequence)>($r2, $r1);

        return $r3;
    }
}
