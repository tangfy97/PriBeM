public class org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory extends java.lang.Object implements org.eclipse.jetty.util.ajax.JSON$Convertor
{
    private final org.eclipse.jetty.util.ajax.JSON _json;
    private final boolean _fromJson;

    public void <init>(org.eclipse.jetty.util.ajax.JSON)
    {
        org.eclipse.jetty.util.ajax.JSON r1;
        org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory;

        r1 := @parameter0: org.eclipse.jetty.util.ajax.JSON;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json> = r1;

        r0.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: boolean _fromJson> = 1;

        return;
    }

    public void <init>(org.eclipse.jetty.util.ajax.JSON, boolean)
    {
        org.eclipse.jetty.util.ajax.JSON r1;
        org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory r0;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory;

        r1 := @parameter0: org.eclipse.jetty.util.ajax.JSON;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json> = r1;

        r0.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: boolean _fromJson> = z0;

        return;
    }

    public void toJSON(java.lang.Object, org.eclipse.jetty.util.ajax.JSON$Output)
    {
        org.eclipse.jetty.util.ajax.JSON$Output r6;
        org.eclipse.jetty.util.ajax.JSON$Convertor $r5, r12;
        org.eclipse.jetty.util.ajax.JSON $r4, $r9;
        java.lang.Object r0;
        java.lang.Class $r1, $r7;
        java.lang.ClassNotFoundException $r10;
        java.lang.String $r2;
        org.eclipse.jetty.util.ajax.JSONPojoConvertor $r8;
        org.eclipse.jetty.util.log.Logger $r11;
        org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory r3;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: org.eclipse.jetty.util.ajax.JSON$Output;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.ajax.JSON: org.eclipse.jetty.util.ajax.JSON$Convertor getConvertorFor(java.lang.String)>($r2);

        r12 = $r5;

        if $r5 != null goto label4;

     label1:
        $r7 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>(class "Lorg/eclipse/jetty/util/ajax/JSON;", $r2);

        $r8 = new org.eclipse.jetty.util.ajax.JSONPojoConvertor;

        $z0 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: boolean _fromJson>;

        specialinvoke $r8.<org.eclipse.jetty.util.ajax.JSONPojoConvertor: void <init>(java.lang.Class,boolean)>($r7, $z0);

        r12 = $r8;

        $r9 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json>;

        virtualinvoke $r9.<org.eclipse.jetty.util.ajax.JSON: void addConvertorFor(java.lang.String,org.eclipse.jetty.util.ajax.JSON$Convertor)>($r2, $r8);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.util.ajax.JSON: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r10);

     label4:
        if r12 == null goto label5;

        interfaceinvoke r12.<org.eclipse.jetty.util.ajax.JSON$Convertor: void toJSON(java.lang.Object,org.eclipse.jetty.util.ajax.JSON$Output)>(r0, r6);

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Object fromJSON(java.util.Map)
    {
        org.eclipse.jetty.util.ajax.JSON$Convertor $r5, r12;
        org.eclipse.jetty.util.ajax.JSON $r4, $r9;
        java.util.Map r0;
        java.lang.Object $r1, $r6;
        java.lang.Class $r7;
        java.lang.ClassNotFoundException $r10;
        java.lang.String r2;
        org.eclipse.jetty.util.ajax.JSONPojoConvertor $r8;
        org.eclipse.jetty.util.log.Logger $r11;
        org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory r3;
        boolean $z0;

        r3 := @this: org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label5;

        $r4 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.ajax.JSON: org.eclipse.jetty.util.ajax.JSON$Convertor getConvertorFor(java.lang.String)>(r2);

        r12 = $r5;

        if $r5 != null goto label4;

     label1:
        $r7 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>(class "Lorg/eclipse/jetty/util/ajax/JSON;", r2);

        $r8 = new org.eclipse.jetty.util.ajax.JSONPojoConvertor;

        $z0 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: boolean _fromJson>;

        specialinvoke $r8.<org.eclipse.jetty.util.ajax.JSONPojoConvertor: void <init>(java.lang.Class,boolean)>($r7, $z0);

        r12 = $r8;

        $r9 = r3.<org.eclipse.jetty.util.ajax.JSONPojoConvertorFactory: org.eclipse.jetty.util.ajax.JSON _json>;

        virtualinvoke $r9.<org.eclipse.jetty.util.ajax.JSON: void addConvertorFor(java.lang.String,org.eclipse.jetty.util.ajax.JSON$Convertor)>(r2, $r8);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.util.ajax.JSON: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r10);

     label4:
        if r12 == null goto label5;

        $r6 = interfaceinvoke r12.<org.eclipse.jetty.util.ajax.JSON$Convertor: java.lang.Object fromJSON(java.util.Map)>(r0);

        return $r6;

     label5:
        return r0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
