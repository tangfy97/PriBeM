public class org.apache.commons.lang.exception.NestableDelegate extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final transient java.lang.String MUST_BE_THROWABLE;
    private java.lang.Throwable nestable;
    public static boolean topDown;
    public static boolean trimStackFrames;
    public static boolean matchSubclasses;
    static java.lang.Class class$org$apache$commons$lang$exception$Nestable;

    public void <init>(org.apache.commons.lang.exception.Nestable)
    {
        java.lang.Throwable $r3;
        org.apache.commons.lang.exception.NestableDelegate r0;
        org.apache.commons.lang.exception.Nestable r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r1 := @parameter0: org.apache.commons.lang.exception.Nestable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable> = null;

        $z0 = r1 instanceof java.lang.Throwable;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Throwable) r1;

        r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable> = $r3;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Nestable implementation passed to the NestableDelegate(Nestable) constructor must extend java.lang.Throwable");

        throw $r2;

     label2:
        return;
    }

    public java.lang.String getMessage(int)
    {
        java.lang.Throwable $r1;
        org.apache.commons.lang.exception.NestableDelegate r0;
        org.apache.commons.lang.exception.Nestable $r4;
        int i0;
        java.lang.Class $r2, $r6;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable getThrowable(int)>(i0);

        $r2 = <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.exception.Nestable");

        <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable>;

     label2:
        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r4 = (org.apache.commons.lang.exception.Nestable) $r1;

        $r5 = interfaceinvoke $r4.<org.apache.commons.lang.exception.Nestable: java.lang.String getMessage(int)>(0);

        return $r5;

     label3:
        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        return $r3;
    }

    public java.lang.String getMessage(java.lang.String)
    {
        java.lang.Throwable $r1, $r2;
        org.apache.commons.lang.exception.NestableDelegate r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r3, $r8, $r9;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        $r2 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.Throwable getCause(java.lang.Throwable)>($r1);

        if $r2 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

     label2:
        if $r2 == null goto label3;

        if $r9 != null goto label4;

     label3:
        return r3;

     label4:
        if r3 != null goto label5;

        return $r9;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String[] getMessages()
    {
        java.lang.Throwable $r4, $r5, $r6;
        java.lang.String[] r2;
        org.apache.commons.lang.exception.NestableDelegate r0;
        org.apache.commons.lang.exception.Nestable $r7;
        java.lang.Throwable[] $r1;
        int $i0, $i1, $i2, i3;
        java.lang.Class $r3, $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        $r1 = virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable[] getThrowables()>();

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.String)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof $r1;

        if i3 >= $i1 goto label6;

        $i2 = i3;

        $r3 = <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable>;

        if $r3 != null goto label2;

        $r8 = staticinvoke <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$(java.lang.String)>("org.apache.commons.lang.exception.Nestable");

        <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable> = $r8;

        goto label3;

     label2:
        $r8 = <org.apache.commons.lang.exception.NestableDelegate: java.lang.Class class$org$apache$commons$lang$exception$Nestable>;

     label3:
        $r4 = $r1[i3];

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isInstance(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r6 = $r1[i3];

        $r7 = (org.apache.commons.lang.exception.Nestable) $r6;

        $r9 = interfaceinvoke $r7.<org.apache.commons.lang.exception.Nestable: java.lang.String getMessage(int)>(0);

        goto label5;

     label4:
        $r5 = $r1[i3];

        $r9 = virtualinvoke $r5.<java.lang.Throwable: java.lang.String getMessage()>();

     label5:
        r2[$i2] = $r9;

        i3 = i3 + 1;

        goto label1;

     label6:
        return r2;
    }

    public java.lang.Throwable getThrowable(int)
    {
        java.lang.Throwable $r2, $r3;
        org.apache.commons.lang.exception.NestableDelegate r0;
        java.lang.Throwable[] $r1;
        int i0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r3 = r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable[] getThrowables()>();

        $r2 = $r1[i0];

        return $r2;
    }

    public int getThrowableCount()
    {
        java.lang.Throwable $r1;
        int $i0;
        org.apache.commons.lang.exception.NestableDelegate r0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        $r1 = r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        $i0 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: int getThrowableCount(java.lang.Throwable)>($r1);

        return $i0;
    }

    public java.lang.Throwable[] getThrowables()
    {
        java.lang.Throwable $r1;
        org.apache.commons.lang.exception.NestableDelegate r0;
        java.lang.Throwable[] $r2;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        $r1 = r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        $r2 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.Throwable[] getThrowables(java.lang.Throwable)>($r1);

        return $r2;
    }

    public int indexOfThrowable(java.lang.Class, int)
    {
        java.lang.IndexOutOfBoundsException $r21, $r23;
        org.apache.commons.lang.exception.NestableDelegate r1;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r2, $r4, $r6;
        java.lang.StringBuffer $r10, $r11, $r12, $r13, $r17, $r18, $r20, $r22;
        int i0, $i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.lang.String $r14, $r19;
        java.lang.Throwable[] $r3;
        java.lang.Class r0, $r5, $r7;

        r1 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        if r0 != null goto label01;

        $i8 = (int) -1;

        return $i8;

     label01:
        if i0 >= 0 goto label02;

        $r21 = new java.lang.IndexOutOfBoundsException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The start index was out of bounds: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r21;

     label02:
        $r2 = r1.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        $r3 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.Throwable[] getThrowables(java.lang.Throwable)>($r2);

        $i1 = lengthof $r3;

        if i0 < $i1 goto label03;

        $r23 = new java.lang.IndexOutOfBoundsException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The start index was out of bounds: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >= ");

        $i4 = lengthof $r3;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r23;

     label03:
        $z0 = <org.apache.commons.lang.exception.NestableDelegate: boolean matchSubclasses>;

        if $z0 == 0 goto label07;

        i5 = i0;

     label04:
        $i3 = lengthof $r3;

        if i5 >= $i3 goto label06;

        $r6 = $r3[i5];

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z2 == 0 goto label05;

        return i5;

     label05:
        i5 = i5 + 1;

        goto label04;

     label06:
        goto label10;

     label07:
        i6 = i0;

     label08:
        $i2 = lengthof $r3;

        if i6 >= $i2 goto label10;

        $r4 = $r3[i6];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label09;

        return i6;

     label09:
        i6 = i6 + 1;

        goto label08;

     label10:
        $i10 = (int) -1;

        return $i10;
    }

    public void printStackTrace()
    {
        java.io.PrintStream $r1;
        org.apache.commons.lang.exception.NestableDelegate r0;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: void printStackTrace(java.io.PrintStream)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        java.io.PrintWriter $r1;
        java.lang.Throwable $r3;
        org.apache.commons.lang.exception.NestableDelegate r2;

        r2 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r0 := @parameter0: java.io.PrintStream;

        entermonitor r0;

     label1:
        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>(r0, 0);

        virtualinvoke r2.<org.apache.commons.lang.exception.NestableDelegate: void printStackTrace(java.io.PrintWriter)>($r1);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.lang.Throwable $r9, r10;
        java.lang.String[] r5, $r7;
        java.util.ArrayList $r1;
        org.apache.commons.lang.exception.NestableDelegate r0;
        int i0, i1;
        java.lang.String $r6, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintWriter r2;
        java.util.Iterator $r3;
        org.apache.commons.lang.exception.Nestable $r8;
        java.lang.Object $r4;

        r0 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r2 := @parameter0: java.io.PrintWriter;

        r10 = r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.Throwable nestable>;

        $z0 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: boolean isThrowableNested()>();

        if $z0 == 0 goto label03;

        $z4 = r10 instanceof org.apache.commons.lang.exception.Nestable;

        if $z4 == 0 goto label01;

        $r8 = (org.apache.commons.lang.exception.Nestable) r10;

        interfaceinvoke $r8.<org.apache.commons.lang.exception.Nestable: void printPartialStackTrace(java.io.PrintWriter)>(r2);

        goto label02;

     label01:
        virtualinvoke r10.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

     label02:
        return;

     label03:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label04:
        if r10 == null goto label05;

        $r7 = virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: java.lang.String[] getStackFrames(java.lang.Throwable)>(r10);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        r10 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.Throwable getCause(java.lang.Throwable)>(r10);

        goto label04;

     label05:
        r11 = "Caused by: ";

        $z1 = <org.apache.commons.lang.exception.NestableDelegate: boolean topDown>;

        if $z1 != 0 goto label06;

        r11 = "Rethrown as: ";

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r1);

     label06:
        $z2 = <org.apache.commons.lang.exception.NestableDelegate: boolean trimStackFrames>;

        if $z2 == 0 goto label07;

        virtualinvoke r0.<org.apache.commons.lang.exception.NestableDelegate: void trimStackFrames(java.util.List)>($r1);

     label07:
        entermonitor r2;

     label08:
        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String[]) $r4;

        i1 = 0;

        i0 = lengthof r5;

     label10:
        if i1 >= i0 goto label11;

        $r6 = r5[i1];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        i1 = i1 + 1;

        goto label10;

     label11:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r11);

     label12:
        goto label09;

     label13:
        exitmonitor r2;

     label14:
        goto label17;

     label15:
        $r9 := @caughtexception;

        exitmonitor r2;

     label16:
        throw $r9;

     label17:
        return;

        catch java.lang.Throwable from label08 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected java.lang.String[] getStackFrames(java.lang.Throwable)
    {
        java.io.PrintWriter $r1;
        java.lang.Throwable r2;
        java.io.StringWriter $r0;
        java.lang.String[] $r5;
        org.apache.commons.lang.exception.Nestable $r6;
        org.apache.commons.lang.exception.NestableDelegate r7;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;
        boolean $z0;

        r7 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r2 := @parameter0: java.lang.Throwable;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r0, 1);

        $z0 = r2 instanceof org.apache.commons.lang.exception.Nestable;

        if $z0 == 0 goto label1;

        $r6 = (org.apache.commons.lang.exception.Nestable) r2;

        interfaceinvoke $r6.<org.apache.commons.lang.exception.Nestable: void printPartialStackTrace(java.io.PrintWriter)>($r1);

        goto label2;

     label1:
        virtualinvoke r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

     label2:
        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getStackFrames(java.lang.String)>($r4);

        return $r5;
    }

    protected void trimStackFrames(java.util.List)
    {
        java.lang.Object[] $r15;
        java.lang.String[] r2, r4, $r14;
        java.util.ArrayList $r17, $r18;
        org.apache.commons.lang.exception.NestableDelegate r16;
        java.lang.StringBuffer $r10, $r11, $r12, $r19;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, $i8;
        java.lang.String $r13;
        java.util.List r0, $r6, $r8;
        java.lang.Object $r1, $r3;

        r16 := @this: org.apache.commons.lang.exception.NestableDelegate;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i6 = $i0 - 1;

     label1:
        if i6 <= 0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        r2 = (java.lang.String[]) $r1;

        $i1 = i6 - 1;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        r4 = (java.lang.String[]) $r3;

        $r17 = new java.util.ArrayList;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r18 = new java.util.ArrayList;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);

        specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: void removeCommonFrames(java.util.List,java.util.List)>($r17, $r18);

        $i2 = lengthof r2;

        $i3 = interfaceinvoke $r17.<java.util.List: int size()>();

        i4 = $i2 - $i3;

        if i4 <= 0 goto label2;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t... ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" more");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r13);

        $i5 = interfaceinvoke $r17.<java.util.List: int size()>();

        $r14 = newarray (java.lang.String)[$i5];

        $r15 = interfaceinvoke $r17.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i6, $r15);

     label2:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label3:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <org.apache.commons.lang.exception.NestableDelegate: java.lang.String MUST_BE_THROWABLE> = "The Nestable implementation passed to the NestableDelegate(Nestable) constructor must extend java.lang.Throwable";

        <org.apache.commons.lang.exception.NestableDelegate: long serialVersionUID> = 1L;

        <org.apache.commons.lang.exception.NestableDelegate: boolean topDown> = 1;

        <org.apache.commons.lang.exception.NestableDelegate: boolean trimStackFrames> = 1;

        <org.apache.commons.lang.exception.NestableDelegate: boolean matchSubclasses> = 1;

        return;
    }
}
