public class org.apache.solr.common.util.FastInputStream extends java.io.InputStream implements java.io.DataInput
{
    protected final java.io.InputStream in;
    protected final byte[] buf;
    protected int pos;
    protected int end;
    protected long readFromStream;

    public void <init>(java.io.InputStream)
    {
        byte[] $r2;
        org.apache.solr.common.util.FastInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (byte)[8192];

        specialinvoke r0.<org.apache.solr.common.util.FastInputStream: void <init>(java.io.InputStream,byte[],int,int)>(r1, $r2, 0, 0);

        return;
    }

    public void <init>(java.io.InputStream, byte[], int, int)
    {
        byte[] r2;
        int i0, i1;
        org.apache.solr.common.util.FastInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.solr.common.util.FastInputStream: java.io.InputStream in> = r1;

        r0.<org.apache.solr.common.util.FastInputStream: byte[] buf> = r2;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = i0;

        r0.<org.apache.solr.common.util.FastInputStream: int end> = i1;

        return;
    }

    public static org.apache.solr.common.util.FastInputStream wrap(java.io.InputStream)
    {
        org.apache.solr.common.util.FastInputStream $r1;
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        $z0 = r0 instanceof org.apache.solr.common.util.FastInputStream;

        if $z0 == 0 goto label1;

        $r1 = (org.apache.solr.common.util.FastInputStream) r0;

        goto label2;

     label1:
        $r1 = new org.apache.solr.common.util.FastInputStream;

        specialinvoke $r1.<org.apache.solr.common.util.FastInputStream: void <init>(java.io.InputStream)>(r0);

     label2:
        return $r1;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1;
        short $s5, $s10;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i9, $i11;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i7 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i6 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i7 < $i6 goto label1;

        $i9 = (int) -1;

        return $i9;

     label1:
        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i2 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i3 = $i2 + 1;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i3;

        $b4 = $r1[$i2];

        $s10 = (short) $b4;

        $s5 = $s10 & 255;

        $i11 = (int) $s5;

        return $i11;
    }

    public int peek() throws java.io.IOException
    {
        byte[] $r1;
        short $s4, $s9;
        byte $b3;
        int $i0, $i1, $i2, $i5, $i6, $i8, $i10;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i6 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i5 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i6 < $i5 goto label1;

        $i8 = (int) -1;

        return $i8;

     label1:
        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i2 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $b3 = $r1[$i2];

        $s9 = (short) $b3;

        $s4 = $s9 & 255;

        $i10 = (int) $s4;

        return $i10;
    }

    public int readUnsignedByte() throws java.io.IOException
    {
        byte[] $r1;
        java.io.EOFException $r3;
        short $s5, $s8;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i9;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i7 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i6 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i7 < $i6 goto label1;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i2 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i3 = $i2 + 1;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i3;

        $b4 = $r1[$i2];

        $s8 = (short) $b4;

        $s5 = $s8 & 255;

        $i9 = (int) $s5;

        return $i9;
    }

    public int readWrappedStream(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1, $i2;
        org.apache.solr.common.util.FastInputStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.solr.common.util.FastInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public long position()
    {
        int $i0, $i1, $i2;
        long $l3, $l4, $l5;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $l4 = r0.<org.apache.solr.common.util.FastInputStream: long readFromStream>;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i2 = $i1 - $i0;

        $l3 = (long) $i2;

        $l5 = $l4 - $l3;

        return $l5;
    }

    public void refill() throws java.io.IOException
    {
        byte[] $r1, $r2;
        long $l4, $l5, $l6;
        int $i0, $i1, $i2, $i3;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $r2 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i0 = lengthof $r1;

        $i1 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readWrappedStream(byte[],int,int)>($r2, 0, $i0);

        r0.<org.apache.solr.common.util.FastInputStream: int end> = $i1;

        $i2 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i2 <= 0 goto label1;

        $l5 = r0.<org.apache.solr.common.util.FastInputStream: long readFromStream>;

        $i3 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        r0.<org.apache.solr.common.util.FastInputStream: long readFromStream> = $l6;

     label1:
        r0.<org.apache.solr.common.util.FastInputStream: int pos> = 0;

        return;
    }

    public int available() throws java.io.IOException
    {
        int $i0, $i1, $i2;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, r2, $r3, $r4;
        long $l22, $l23, $l24;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, $i34, i35, $i36, $i38, $i40;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r2 := @parameter0: byte[];

        i14 := @parameter1: int;

        i3 := @parameter2: int;

        i32 = 0;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i2 = $i1 - $i0;

        if $i2 <= 0 goto label1;

        $i26 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i25 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i27 = $i26 - $i25;

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i27, i3);

        i32 = $i28;

        $r4 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i29 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i29, r2, i14, $i28);

        $i30 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i31 = $i30 + $i28;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i31;

     label1:
        if i32 != i3 goto label2;

        return i32;

     label2:
        $i5 = i3 - i32;

        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label6;

        $i20 = i14 + i32;

        $i19 = i3 - i32;

        $i21 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readWrappedStream(byte[],int,int)>(r2, $i20, $i19);

        if $i21 < 0 goto label3;

        $l23 = r0.<org.apache.solr.common.util.FastInputStream: long readFromStream>;

        $l22 = (long) $i21;

        $l24 = $l23 + $l22;

        r0.<org.apache.solr.common.util.FastInputStream: long readFromStream> = $l24;

        i33 = i32 + $i21;

        return i33;

     label3:
        if i32 <= 0 goto label4;

        $i34 = i32;

        goto label5;

     label4:
        $i38 = (int) -1;

        $i34 = $i38;

     label5:
        return $i34;

     label6:
        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i7 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i6 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i8 = $i7 - $i6;

        if $i8 <= 0 goto label7;

        $i10 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i9 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i12 = $i10 - $i9;

        $i11 = i3 - i32;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        $r3 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i16 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i15 = i14 + i32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i16, r2, $i15, $i13);

        $i17 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i18 = $i17 + $i13;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i18;

        i35 = i32 + $i13;

        return i35;

     label7:
        if i32 <= 0 goto label8;

        $i36 = i32;

        goto label9;

     label8:
        $i40 = (int) -1;

        $i36 = $i40;

     label9:
        return $i36;
    }

    public void close() throws java.io.IOException
    {
        org.apache.solr.common.util.FastInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $r1 = r0.<org.apache.solr.common.util.FastInputStream: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public void readFully(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void readFully(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void readFully(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int $i0, i1, i2, $i4;
        org.apache.solr.common.util.FastInputStream r0;
        java.io.EOFException $r3;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

     label1:
        if i2 <= 0 goto label3;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int read(byte[],int,int)>(r1, i1, i2);

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label2:
        i1 = i1 + $i0;

        i2 = i2 - $i0;

        goto label1;

     label3:
        return;
    }

    public int skipBytes(int) throws java.io.IOException
    {
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i24;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        i2 := @parameter0: int;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i3 = $i1 - $i0;

        if $i3 < i2 goto label1;

        $i20 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i21 = $i20 + i2;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i21;

        return i2;

     label1:
        $i5 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i4 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i6 = $i5 - $i4;

        if $i6 >= 0 goto label2;

        $i24 = (int) -1;

        return $i24;

     label2:
        $i8 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i7 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        i22 = $i8 - $i7;

        $i9 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i9;

     label3:
        if i22 >= i2 goto label5;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i11 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i10 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i12 = $i11 - $i10;

        if $i12 > 0 goto label4;

        return i22;

     label4:
        $i14 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        $i13 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i16 = $i14 - $i13;

        $i15 = i2 - i22;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        i22 = i22 + $i17;

        $i18 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i19 = $i18 + $i17;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i19;

        goto label3;

     label5:
        return i22;
    }

    public boolean readBoolean() throws java.io.IOException
    {
        org.apache.solr.common.util.FastInputStream r0;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $b0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: byte readByte()>();

        if $b0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public byte readByte() throws java.io.IOException
    {
        byte[] $r1;
        java.io.EOFException $r2;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i1 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i0 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: void refill()>();

        $i6 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i5 = r0.<org.apache.solr.common.util.FastInputStream: int end>;

        if $i6 < $i5 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.solr.common.util.FastInputStream: byte[] buf>;

        $i2 = r0.<org.apache.solr.common.util.FastInputStream: int pos>;

        $i3 = $i2 + 1;

        r0.<org.apache.solr.common.util.FastInputStream: int pos> = $i3;

        $b4 = $r1[$i2];

        return $b4;
    }

    public short readShort() throws java.io.IOException
    {
        short $s4;
        int $i0, $i1, $i2, $i3;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i1 = $i0 << 8;

        $i2 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i3 = $i1 | $i2;

        $s4 = (short) $i3;

        return $s4;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i1 = $i0 << 8;

        $i2 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i3 = $i1 | $i2;

        return $i3;
    }

    public char readChar() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3;
        char $c4;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i1 = $i0 << 8;

        $i2 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i3 = $i1 | $i2;

        $c4 = (char) $i3;

        return $c4;
    }

    public int readInt() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i1 = $i0 << 24;

        $i2 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i3 = $i2 << 16;

        $i4 = $i1 | $i3;

        $i5 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i6 = $i5 << 8;

        $i7 = $i4 | $i6;

        $i8 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i9 = $i7 | $i8;

        return $i9;
    }

    public long readLong() throws java.io.IOException
    {
        long $l1, $l2, $l4, $l5, $l6, $l8, $l9, $l10, $l12, $l13, $l14, $l16, $l17, $l18, $l21, $l22, $l25, $l26, $l28, $l29;
        int $i0, $i3, $i7, $i11, $i15, $i19, $i20, $i23, $i24, $i27;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l1 = (long) $i0;

        $l2 = $l1 << 56;

        $i3 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l4 = (long) $i3;

        $l5 = $l4 << 48;

        $l6 = $l2 | $l5;

        $i7 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l8 = (long) $i7;

        $l9 = $l8 << 40;

        $l10 = $l6 | $l9;

        $i11 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l12 = (long) $i11;

        $l13 = $l12 << 32;

        $l14 = $l10 | $l13;

        $i15 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l16 = (long) $i15;

        $l17 = $l16 << 24;

        $l18 = $l14 | $l17;

        $i19 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i20 = $i19 << 16;

        $l21 = (long) $i20;

        $l22 = $l18 | $l21;

        $i23 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $i24 = $i23 << 8;

        $l25 = (long) $i24;

        $l26 = $l22 | $l25;

        $i27 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readUnsignedByte()>();

        $l28 = (long) $i27;

        $l29 = $l26 | $l28;

        return $l29;
    }

    public float readFloat() throws java.io.IOException
    {
        int $i0;
        float $f0;
        org.apache.solr.common.util.FastInputStream r0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $i0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public double readDouble() throws java.io.IOException
    {
        long $l0;
        org.apache.solr.common.util.FastInputStream r0;
        double $d0;

        r0 := @this: org.apache.solr.common.util.FastInputStream;

        $l0 = virtualinvoke r0.<org.apache.solr.common.util.FastInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.solr.common.util.FastInputStream r1;

        r1 := @this: org.apache.solr.common.util.FastInputStream;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.String readUTF() throws java.io.IOException
    {
        java.io.DataInputStream $r0;
        java.lang.String $r2;
        org.apache.solr.common.util.FastInputStream r1;

        r1 := @this: org.apache.solr.common.util.FastInputStream;

        $r0 = new java.io.DataInputStream;

        specialinvoke $r0.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = virtualinvoke $r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        return $r2;
    }
}
