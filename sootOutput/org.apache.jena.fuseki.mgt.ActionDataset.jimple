public class org.apache.jena.fuseki.mgt.ActionDataset extends javax.servlet.http.HttpServlet
{

    public void <init>()
    {
        org.apache.jena.fuseki.mgt.ActionDataset r0;

        r0 := @this: org.apache.jena.fuseki.mgt.ActionDataset;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        return;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        javax.servlet.http.HttpSession $r2;
        org.apache.jena.fuseki.mgt.ActionDataset r9;
        javax.servlet.http.HttpServletResponse r4;
        org.apache.jena.fuseki.server.DatasetRegistry $r3;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r1, $r8;
        boolean $z0;

        r9 := @this: org.apache.jena.fuseki.mgt.ActionDataset;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = staticinvoke <org.apache.jena.fuseki.FusekiLib: java.lang.String safeParameter(javax.servlet.http.HttpServletRequest,java.lang.String)>(r0, "dataset");

        $r2 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(1);

        interfaceinvoke $r2.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>("dataset", $r1);

        interfaceinvoke $r2.<javax.servlet.http.HttpSession: void setMaxInactiveInterval(int)>(900);

        $r3 = staticinvoke <org.apache.jena.fuseki.server.DatasetRegistry: org.apache.jena.fuseki.server.DatasetRegistry get()>();

        $z0 = virtualinvoke $r3.<org.apache.jena.fuseki.server.DatasetRegistry: boolean isRegistered(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such dataset: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r8);

        return;

     label1:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Location", "/sparql.tpl");

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(303);

        return;
    }

    private boolean authenticate(javax.servlet.http.HttpServletRequest)
    {
        byte[] $r3;
        org.apache.jena.fuseki.mgt.ActionDataset r8;
        javax.servlet.http.HttpServletRequest r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r4, $r5, $r6, r9;
        java.io.UnsupportedEncodingException $r7;
        boolean $z0, $z1;

        r8 := @this: org.apache.jena.fuseki.mgt.ActionDataset;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Authorization");

        if $r1 == null goto label5;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(6);

        $r3 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(java.lang.String)>($r2);

     label1:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "ascii");

        r9 = $r4;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        r9 = null;

     label4:
        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(":");

        $r5 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i2 = $i1 + 1;

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i2);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z0 == 0 goto label5;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("pass");

        if $z1 == 0 goto label5;

        return 1;

     label5:
        return 0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
