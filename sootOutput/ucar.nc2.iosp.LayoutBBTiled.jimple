public class ucar.nc2.iosp.LayoutBBTiled extends java.lang.Object implements ucar.nc2.iosp.LayoutBB
{
    private ucar.ma2.Section want;
    private int[] chunkSize;
    private int elemSize;
    private ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator chunkIterator;
    private ucar.nc2.iosp.IndexChunkerTiled index;
    private long totalNelems;
    private long totalNelemsDone;
    private boolean debug;
    private boolean debugIntersection;
    private ucar.nc2.iosp.LayoutBBTiled$Chunk next;

    public void <init>(ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator, int[], int, ucar.ma2.Section) throws ucar.ma2.InvalidRangeException, java.io.IOException
    {
        java.io.PrintStream $r6;
        ucar.ma2.Section r3, $r4, $r8;
        ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator r1;
        long $l1;
        ucar.nc2.iosp.LayoutBBTiled r0;
        int[] r2;
        int i0;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        r1 := @parameter0: ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        r3 := @parameter3: ucar.ma2.Section;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.IndexChunkerTiled index> = null;

        r0.<ucar.nc2.iosp.LayoutBBTiled: boolean debug> = 0;

        r0.<ucar.nc2.iosp.LayoutBBTiled: boolean debugIntersection> = 0;

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator chunkIterator> = r1;

        r0.<ucar.nc2.iosp.LayoutBBTiled: int[] chunkSize> = r2;

        r0.<ucar.nc2.iosp.LayoutBBTiled: int elemSize> = i0;

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want> = r3;

        $z0 = r0.<ucar.nc2.iosp.LayoutBBTiled: boolean debug>;

        if $z0 == 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" want section=");

        $r8 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label1:
        $r4 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $l1 = virtualinvoke $r4.<ucar.ma2.Section: long computeSize()>();

        r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelems> = $l1;

        r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelemsDone> = 0L;

        return;
    }

    public long getTotalNelems()
    {
        long $l0;
        ucar.nc2.iosp.LayoutBBTiled r0;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $l0 = r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelems>;

        return $l0;
    }

    public int getElemSize()
    {
        int $i0;
        ucar.nc2.iosp.LayoutBBTiled r0;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $i0 = r0.<ucar.nc2.iosp.LayoutBBTiled: int elemSize>;

        return $i0;
    }

    public boolean hasNext()
    {
        java.lang.IllegalStateException $r44, $r45;
        ucar.nc2.iosp.IndexChunkerTiled $r1, $r12, $r32, $r42;
        java.nio.ByteBuffer $r11;
        byte $b2;
        ucar.nc2.iosp.LayoutBBTiled r0;
        int[] $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.LayoutBBTiled$DataChunk $r3;
        ucar.nc2.iosp.IndexChunker$Chunk $r13;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r26, $r27, $r28, $r30, $r40, $r41;
        ucar.ma2.Section $r7, $r9, $r20, $r21, $r29, $r39;
        long $l0, $l1, $l3, $l5, $l6;
        ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator $r2, $r38;
        int $i4, $i7;
        java.lang.String $r23, $r31;
        ucar.nc2.iosp.LayoutBBTiled$Chunk $r14, $r43;
        java.io.PrintStream $r16, $r25;
        java.io.IOException $r33, $r37;
        ucar.ma2.InvalidRangeException $r35;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $l1 = r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelemsDone>;

        $l0 = r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelems>;

        $b2 = $l1 cmp $l0;

        $i7 = (int) $b2;

        if $i7 < 0 goto label01;

        return 0;

     label01:
        $r1 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.IndexChunkerTiled index>;

        if $r1 == null goto label02;

        $r32 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.IndexChunkerTiled index>;

        $z3 = virtualinvoke $r32.<ucar.nc2.iosp.IndexChunkerTiled: boolean hasNext()>();

        if $z3 != 0 goto label15;

     label02:
        $r38 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator chunkIterator>;

        $z4 = interfaceinvoke $r38.<ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator: boolean hasNext()>();

        if $z4 != 0 goto label04;

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$Chunk next> = null;

     label03:
        return 0;

     label04:
        $r2 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator chunkIterator>;

        $r3 = interfaceinvoke $r2.<ucar.nc2.iosp.LayoutBBTiled$DataChunkIterator: ucar.nc2.iosp.LayoutBBTiled$DataChunk next()>();

     label05:
        goto label08;

     label06:
        $r37 := @caughtexception;

        virtualinvoke $r37.<java.io.IOException: void printStackTrace()>();

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$Chunk next> = null;

     label07:
        return 0;

     label08:
        $r39 = new ucar.ma2.Section;

        $r5 = interfaceinvoke $r3.<ucar.nc2.iosp.LayoutBBTiled$DataChunk: int[] getOffset()>();

        $r6 = r0.<ucar.nc2.iosp.LayoutBBTiled: int[] chunkSize>;

        specialinvoke $r39.<ucar.ma2.Section: void <init>(int[],int[])>($r5, $r6);

        $z0 = r0.<ucar.nc2.iosp.LayoutBBTiled: boolean debugIntersection>;

        if $z0 == 0 goto label09;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" test intersecting: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" want: ");

        $r29 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label09:
        $r7 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $z1 = virtualinvoke $r39.<ucar.ma2.Section: boolean intersects(ucar.ma2.Section)>($r7);

        if $z1 == 0 goto label02;

        goto label10;

     label10:
        $z2 = r0.<ucar.nc2.iosp.LayoutBBTiled: boolean debug>;

        if $z2 == 0 goto label11;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found intersecting dataSection: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" intersect= ");

        $r20 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $r21 = virtualinvoke $r39.<ucar.ma2.Section: ucar.ma2.Section intersect(ucar.ma2.Section)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label11:
        $r42 = new ucar.nc2.iosp.IndexChunkerTiled;

        $r9 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        specialinvoke $r42.<ucar.nc2.iosp.IndexChunkerTiled: void <init>(ucar.ma2.Section,ucar.ma2.Section)>($r39, $r9);

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.IndexChunkerTiled index> = $r42;

        $r43 = new ucar.nc2.iosp.LayoutBBTiled$Chunk;

        $r11 = interfaceinvoke $r3.<ucar.nc2.iosp.LayoutBBTiled$DataChunk: java.nio.ByteBuffer getByteBuffer()>();

        specialinvoke $r43.<ucar.nc2.iosp.LayoutBBTiled$Chunk: void <init>(java.nio.ByteBuffer)>($r11);

        r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$Chunk next> = $r43;

     label12:
        goto label15;

     label13:
        $r35 := @caughtexception;

        $r44 = new java.lang.IllegalStateException;

        specialinvoke $r44.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r35);

        throw $r44;

     label14:
        $r33 := @caughtexception;

        $r45 = new java.lang.IllegalStateException;

        specialinvoke $r45.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r33);

        throw $r45;

     label15:
        $r12 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.IndexChunkerTiled index>;

        $r13 = virtualinvoke $r12.<ucar.nc2.iosp.IndexChunkerTiled: ucar.nc2.iosp.IndexChunker$Chunk next()>();

        $l3 = r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelemsDone>;

        $i4 = virtualinvoke $r13.<ucar.nc2.iosp.IndexChunker$Chunk: int getNelems()>();

        $l5 = (long) $i4;

        $l6 = $l3 + $l5;

        r0.<ucar.nc2.iosp.LayoutBBTiled: long totalNelemsDone> = $l6;

        $r14 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$Chunk next>;

        virtualinvoke $r14.<ucar.nc2.iosp.LayoutBBTiled$Chunk: void setDelegate(ucar.nc2.iosp.IndexChunker$Chunk)>($r13);

        return 1;

        catch java.io.IOException from label04 to label05 with label06;
        catch ucar.ma2.InvalidRangeException from label02 to label03 with label13;
        catch ucar.ma2.InvalidRangeException from label04 to label07 with label13;
        catch ucar.ma2.InvalidRangeException from label08 to label12 with label13;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.io.IOException from label04 to label07 with label14;
        catch java.io.IOException from label08 to label12 with label14;
    }

    public ucar.nc2.iosp.LayoutBB$Chunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.LayoutBBTiled r0;
        ucar.nc2.iosp.LayoutBBTiled$Chunk $r1;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $r1 = r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBBTiled$Chunk next>;

        return $r1;
    }

    public java.lang.String toString()
    {
        ucar.ma2.Section $r3;
        long $l1;
        ucar.nc2.iosp.LayoutBBTiled r2;
        int[] $r5, $r9;
        int $i0, $i2, $i3, i4;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("want=");

        $r3 = r2.<ucar.nc2.iosp.LayoutBBTiled: ucar.ma2.Section want>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chunkSize=[");

        i4 = 0;

     label1:
        $r5 = r2.<ucar.nc2.iosp.LayoutBBTiled: int[] chunkSize>;

        $i0 = lengthof $r5;

        if i4 >= $i0 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $r9 = r2.<ucar.nc2.iosp.LayoutBBTiled: int[] chunkSize>;

        $i3 = $r9[i4];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] totalNelems=");

        $l1 = r2.<ucar.nc2.iosp.LayoutBBTiled: long totalNelems>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elemSize=");

        $i2 = r2.<ucar.nc2.iosp.LayoutBBTiled: int elemSize>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public volatile ucar.nc2.iosp.Layout$Chunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.LayoutBBTiled r0;
        ucar.nc2.iosp.LayoutBB$Chunk $r1;

        r0 := @this: ucar.nc2.iosp.LayoutBBTiled;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.LayoutBBTiled: ucar.nc2.iosp.LayoutBB$Chunk next()>();

        return $r1;
    }
}
