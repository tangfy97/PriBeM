abstract class thredds.catalog2.xml.parser.stax.AbstractElementParser extends java.lang.Object
{
    org.slf4j.Logger log;
    final javax.xml.namespace.QName elementName;
    final javax.xml.stream.XMLEventReader reader;
    final thredds.catalog2.builder.ThreddsBuilderFactory builderFactory;

    void <init>(javax.xml.namespace.QName, javax.xml.stream.XMLEventReader, thredds.catalog2.builder.ThreddsBuilderFactory)
    {
        javax.xml.stream.XMLEventReader r4;
        org.slf4j.Logger $r2;
        thredds.catalog2.builder.ThreddsBuilderFactory r5;
        java.lang.Class $r1;
        thredds.catalog2.xml.parser.stax.AbstractElementParser r0;
        javax.xml.namespace.QName r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: thredds.catalog2.xml.parser.stax.AbstractElementParser;

        r3 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: javax.xml.stream.XMLEventReader;

        r5 := @parameter2: thredds.catalog2.builder.ThreddsBuilderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log> = $r2;

        if r3 == null goto label1;

        if r4 == null goto label1;

        if r5 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Element name, XMLEventReader, and/or BuilderFactory may not be null.");

        throw $r6;

     label2:
        r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName> = r3;

        r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader> = r4;

        r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: thredds.catalog2.builder.ThreddsBuilderFactory builderFactory> = r5;

        return;
    }

    boolean isSelfElement(javax.xml.stream.events.XMLEvent)
    {
        javax.xml.stream.events.XMLEvent r0;
        thredds.catalog2.xml.parser.stax.AbstractElementParser r1;
        javax.xml.namespace.QName $r2;
        boolean $z0;

        r1 := @this: thredds.catalog2.xml.parser.stax.AbstractElementParser;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $r2 = r1.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName>;

        $z0 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: boolean isEventStartOrEndElementWithMatchingName(javax.xml.stream.events.XMLEvent,javax.xml.namespace.QName)>(r0, $r2);

        return $z0;
    }

    abstract void parseStartElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException;

    abstract void handleChildStartElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException;

    abstract void postProcessingAfterEndElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException;

    abstract thredds.catalog2.builder.ThreddsBuilder getSelfBuilder();

    final thredds.catalog2.builder.ThreddsBuilder parse() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r36, $r65;
        javax.xml.stream.XMLStreamException $r55;
        thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity $r25, $r46;
        java.lang.StringBuilder $r3, $r7, $r8, $r10, $r11, $r12, $r13, $r17, $r18, $r21, $r22, $r27, $r31, $r32, $r34, $r38, $r39, $r42, $r43, $r48, $r50, $r52, $r56, $r58, $r60, $r61, $r63, $r66, $r67, $r69, $r70, $r72;
        javax.xml.namespace.QName $r20, $r41, $r59, $r68;
        javax.xml.stream.events.EndElement $r16, $r19, $r40;
        java.lang.String $r6, $r14, $r23, $r30, $r33, $r35, $r44, $r51, $r53, $r62, $r64, $r71, $r73;
        javax.xml.stream.events.XMLEvent $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        thredds.catalog2.xml.parser.ThreddsXmlParserIssue $r26, $r47;
        thredds.catalog2.xml.parser.stax.AbstractElementParser r0;
        thredds.catalog2.builder.ThreddsBuilder $r75;
        javax.xml.stream.XMLEventReader $r1, $r15, $r24, $r45, $r54, $r74;
        org.slf4j.Logger $r4, $r28, $r37, $r49, $r57;
        javax.xml.stream.Location $r9;
        java.lang.Class $r5, $r29;

        r0 := @this: thredds.catalog2.xml.parser.stax.AbstractElementParser;

     label01:
        virtualinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: void parseStartElement()>();

     label02:
        $r74 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $z5 = interfaceinvoke $r74.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r1 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z0 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z0 == 0 goto label03;

        virtualinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: void handleChildStartElement()>();

        goto label07;

     label03:
        $z1 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

        if $z1 == 0 goto label06;

        $r16 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        $z2 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: boolean isSelfElement(javax.xml.stream.events.XMLEvent)>($r16);

        if $z2 == 0 goto label04;

        $r54 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        interfaceinvoke $r54.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label08;

     label04:
        $z3 = r0 instanceof thredds.catalog2.xml.parser.stax.ThreddsMetadataElementParser;

        if $z3 == 0 goto label05;

        $r37 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r37.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label08;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End element probably parent of ThreddsMetadata [");

        $r40 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        $r41 = interfaceinvoke $r40.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = <thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity: thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity WARNING>;

        $r45 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r47 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForUnexpectedEvent(java.lang.String,thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity,javax.xml.stream.XMLEventReader,javax.xml.stream.events.XMLEvent)>($r44, $r46, $r45, $r2);

        $r49 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse(): ");

        $r51 = virtualinvoke $r47.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<org.slf4j.Logger: void debug(java.lang.String)>($r53);

        goto label08;

     label05:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized end element [");

        $r19 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        $r20 = interfaceinvoke $r19.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = <thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity: thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity FATAL>;

        $r24 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r26 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForUnexpectedEvent(java.lang.String,thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity,javax.xml.stream.XMLEventReader,javax.xml.stream.events.XMLEvent)>($r23, $r25, $r24, $r2);

        $r28 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".parse(): ");

        $r33 = virtualinvoke $r26.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>($r35);

        $r36 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r36.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r26);

        throw $r36;

     label06:
        $r4 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".parse(): Unhandled event [");

        $r9 = interfaceinvoke $r2.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

        $r15 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        interfaceinvoke $r15.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label02;

     label07:
        goto label02;

     label08:
        virtualinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: void postProcessingAfterEndElement()>();

        $r75 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: thredds.catalog2.builder.ThreddsBuilder getSelfBuilder()>();

     label09:
        return $r75;

     label10:
        $r55 := @caughtexception;

        $r57 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse(): Failed to parse ");

        $r59 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" element: ");

        $r62 = virtualinvoke $r55.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r64, $r55);

        $r65 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

        $r68 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" element: ");

        $r71 = virtualinvoke $r55.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>($r73, $r55);

        throw $r65;

        catch javax.xml.stream.XMLStreamException from label01 to label09 with label10;
    }

    javax.xml.stream.events.StartElement getNextEventIfStartElementIsMine() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r10, $r18, $r19, $r21;
        javax.xml.stream.events.XMLEvent $r3, $r8;
        javax.xml.stream.XMLStreamException $r20;
        thredds.catalog2.xml.parser.stax.AbstractElementParser r0;
        javax.xml.stream.events.StartElement $r4, $r9;
        java.lang.String $r14, $r17;
        boolean $z0, $z1, $z2;
        javax.xml.stream.XMLEventReader $r1, $r2, $r7;
        java.lang.StringBuilder $r11, $r12, $r15, $r16;
        javax.xml.namespace.QName $r5, $r6, $r13;

        r0 := @this: thredds.catalog2.xml.parser.stax.AbstractElementParser;

        $r1 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r19 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r19.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String)>("XMLEventReader has no further events.");

        throw $r19;

     label1:
        $r2 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z1 = interfaceinvoke $r3.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z1 != 0 goto label2;

        $r18 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r18.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String)>("Next event must be StartElement.");

        throw $r18;

     label2:
        $r4 = interfaceinvoke $r3.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r5 = interfaceinvoke $r4.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r6 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName>;

        $z2 = virtualinvoke $r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label3;

        $r10 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start element must be an \'");

        $r13 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.namespace.QName elementName>;

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' element.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label3:
        $r7 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r8 = interfaceinvoke $r7.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        $r9 = interfaceinvoke $r8.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

     label4:
        goto label6;

     label5:
        $r20 := @caughtexception;

        $r21 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r21.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String)>("Problem reading from XMLEventReader.");

        throw $r21;

     label6:
        return $r9;

        catch javax.xml.stream.XMLStreamException from label1 to label4 with label5;
    }

    javax.xml.stream.events.StartElement peekAtNextEventIfStartElement() throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r21, $r24, $r34;
        javax.xml.stream.events.XMLEvent $r4;
        javax.xml.stream.XMLStreamException $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        thredds.catalog2.xml.parser.ThreddsXmlParserIssue $r14, $r27;
        thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity $r13;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r15, $r17, $r19, $r28, $r30, $r32;
        thredds.catalog2.xml.parser.stax.AbstractElementParser r0;
        java.lang.String $r8, $r11, $r18, $r20, $r31, $r33;
        javax.xml.stream.events.StartElement r35;
        javax.xml.stream.XMLEventReader $r1, $r2, $r3, $r12, $r23, $r26;
        org.slf4j.Logger $r16, $r29;
        javax.xml.stream.events.Characters $r22;
        java.lang.Class $r7;

        r0 := @this: thredds.catalog2.xml.parser.stax.AbstractElementParser;

        $r1 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z0 != 0 goto label01;

        $r24 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r24.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String)>("XMLEventReader has no further events.");

        throw $r24;

     label01:
        r35 = null;

     label02:
        $r2 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $z1 = interfaceinvoke $r2.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z1 == 0 goto label10;

     label03:
        $r3 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

     label04:
        goto label06;

     label05:
        $r25 := @caughtexception;

        $r26 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r27 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForException(java.lang.String,javax.xml.stream.XMLEventReader,java.lang.Exception)>("Problem reading from XMLEventReader.", $r26, $r25);

        $r29 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("peekAtNextEventIfStartElement(): ");

        $r31 = virtualinvoke $r27.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void error(java.lang.String)>($r33);

        $r34 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r34.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r27);

        throw $r34;

     label06:
        $z2 = interfaceinvoke $r4.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z2 == 0 goto label07;

        r35 = interfaceinvoke $r4.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        goto label10;

     label07:
        $z3 = interfaceinvoke $r4.<javax.xml.stream.events.XMLEvent: boolean isCharacters()>();

        if $z3 == 0 goto label08;

        $r22 = interfaceinvoke $r4.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $z4 = interfaceinvoke $r22.<javax.xml.stream.events.Characters: boolean isWhiteSpace()>();

        if $z4 == 0 goto label08;

        $r23 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        interfaceinvoke $r23.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label09;

     label08:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting StartElement for next event [");

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = <thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity: thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity FATAL>;

        $r12 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: javax.xml.stream.XMLEventReader reader>;

        $r14 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: thredds.catalog2.xml.parser.ThreddsXmlParserIssue createIssueForUnexpectedEvent(java.lang.String,thredds.catalog2.xml.parser.ThreddsXmlParserIssue$Severity,javax.xml.stream.XMLEventReader,javax.xml.stream.events.XMLEvent)>($r11, $r13, $r12, $r4);

        $r16 = r0.<thredds.catalog2.xml.parser.stax.AbstractElementParser: org.slf4j.Logger log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("peekAtNextEventIfStartElement(): ");

        $r18 = virtualinvoke $r14.<thredds.catalog2.xml.parser.ThreddsXmlParserIssue: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>($r20);

        $r21 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r21.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(thredds.catalog2.xml.parser.ThreddsXmlParserIssue)>($r14);

        throw $r21;

     label09:
        goto label02;

     label10:
        return r35;

        catch javax.xml.stream.XMLStreamException from label03 to label04 with label05;
    }
}
