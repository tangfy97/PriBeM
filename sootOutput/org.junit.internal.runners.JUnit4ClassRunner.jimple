public class org.junit.internal.runners.JUnit4ClassRunner extends org.junit.runner.Runner implements org.junit.runner.manipulation.Filterable, org.junit.runner.manipulation.Sortable
{
    private final java.util.List fTestMethods;
    private org.junit.internal.runners.TestClass fTestClass;

    public void <init>(java.lang.Class) throws org.junit.internal.runners.InitializationError
    {
        java.util.List $r3;
        org.junit.internal.runners.JUnit4ClassRunner r0;
        org.junit.internal.runners.TestClass $r1;
        java.lang.Class r2;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.junit.runner.Runner: void <init>()>();

        $r1 = new org.junit.internal.runners.TestClass;

        specialinvoke $r1.<org.junit.internal.runners.TestClass: void <init>(java.lang.Class)>(r2);

        r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass> = $r1;

        $r3 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List getTestMethods()>();

        r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods> = $r3;

        virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: void validate()>();

        return;
    }

    protected java.util.List getTestMethods()
    {
        org.junit.internal.runners.TestClass $r1;
        java.util.List $r2;
        org.junit.internal.runners.JUnit4ClassRunner r0;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.util.List getTestMethods()>();

        return $r2;
    }

    protected void validate() throws org.junit.internal.runners.InitializationError
    {
        org.junit.internal.runners.TestClass $r2;
        org.junit.internal.runners.JUnit4ClassRunner r1;
        org.junit.internal.runners.MethodValidator $r0;

        r1 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r0 = new org.junit.internal.runners.MethodValidator;

        $r2 = r1.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        specialinvoke $r0.<org.junit.internal.runners.MethodValidator: void <init>(org.junit.internal.runners.TestClass)>($r2);

        virtualinvoke $r0.<org.junit.internal.runners.MethodValidator: java.util.List validateMethodsForDefaultRunner()>();

        virtualinvoke $r0.<org.junit.internal.runners.MethodValidator: void assertValid()>();

        return;
    }

    public void run(org.junit.runner.notification.RunNotifier)
    {
        org.junit.internal.runners.ClassRoadie $r0;
        org.junit.internal.runners.JUnit4ClassRunner r2;
        org.junit.internal.runners.TestClass $r3;
        org.junit.runner.Description $r4;
        org.junit.runner.notification.RunNotifier r1;
        org.junit.internal.runners.JUnit4ClassRunner$1 $r5;

        r2 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        $r0 = new org.junit.internal.runners.ClassRoadie;

        $r3 = r2.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        $r4 = virtualinvoke r2.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.runner.Description getDescription()>();

        $r5 = new org.junit.internal.runners.JUnit4ClassRunner$1;

        specialinvoke $r5.<org.junit.internal.runners.JUnit4ClassRunner$1: void <init>(org.junit.internal.runners.JUnit4ClassRunner,org.junit.runner.notification.RunNotifier)>(r2, r1);

        specialinvoke $r0.<org.junit.internal.runners.ClassRoadie: void <init>(org.junit.runner.notification.RunNotifier,org.junit.internal.runners.TestClass,org.junit.runner.Description,java.lang.Runnable)>(r1, $r3, $r4, $r5);

        virtualinvoke $r0.<org.junit.internal.runners.ClassRoadie: void runProtected()>();

        return;
    }

    protected void runMethods(org.junit.runner.notification.RunNotifier)
    {
        java.util.List $r1;
        org.junit.internal.runners.JUnit4ClassRunner r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.junit.runner.notification.RunNotifier r5;
        java.lang.reflect.Method r4;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r5 := @parameter0: org.junit.runner.notification.RunNotifier;

        $r1 = r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.reflect.Method) $r3;

        virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: void invokeTestMethod(java.lang.reflect.Method,org.junit.runner.notification.RunNotifier)>(r4, r5);

        goto label1;

     label2:
        return;
    }

    public org.junit.runner.Description getDescription()
    {
        org.junit.internal.runners.JUnit4ClassRunner r0;
        java.util.Iterator $r5;
        org.junit.runner.Description $r3, $r8;
        java.lang.'annotation'.Annotation[] $r2;
        java.util.List r4;
        java.lang.Object $r6;
        java.lang.String $r1;
        java.lang.reflect.Method r7;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.lang.String getName()>();

        $r2 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.lang.'annotation'.Annotation[] classAnnotations()>();

        $r3 = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createSuiteDescription(java.lang.String,java.lang.'annotation'.Annotation[])>($r1, $r2);

        r4 = r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods>;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.reflect.Method) $r6;

        $r8 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.runner.Description methodDescription(java.lang.reflect.Method)>(r7);

        virtualinvoke $r3.<org.junit.runner.Description: void addChild(org.junit.runner.Description)>($r8);

        goto label1;

     label2:
        return $r3;
    }

    protected java.lang.'annotation'.Annotation[] classAnnotations()
    {
        org.junit.internal.runners.JUnit4ClassRunner r0;
        org.junit.internal.runners.TestClass $r1;
        java.lang.Class $r2;
        java.lang.'annotation'.Annotation[] $r3;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.lang.Class getJavaClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r3;
    }

    protected java.lang.String getName()
    {
        org.junit.internal.runners.TestClass $r1;
        org.junit.internal.runners.JUnit4ClassRunner r0;
        java.lang.String $r2;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.lang.String getName()>();

        return $r2;
    }

    protected java.lang.Object createTest() throws java.lang.Exception
    {
        org.junit.internal.runners.JUnit4ClassRunner r0;
        java.lang.Object[] $r3;
        org.junit.internal.runners.TestClass $r1;
        java.lang.Object $r4;
        java.lang.reflect.Constructor $r2;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.lang.reflect.Constructor getConstructor()>();

        $r3 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        return $r4;
    }

    protected void invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)
    {
        java.lang.Throwable $r9;
        org.junit.internal.runners.TestMethod $r4;
        org.junit.internal.runners.JUnit4ClassRunner r0;
        org.junit.runner.Description $r2;
        java.lang.Exception $r7;
        java.lang.reflect.InvocationTargetException $r8;
        org.junit.internal.runners.MethodRoadie $r5;
        java.lang.Object $r3;
        org.junit.runner.notification.RunNotifier r6;
        java.lang.reflect.Method r1;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r1 := @parameter0: java.lang.reflect.Method;

        r6 := @parameter1: org.junit.runner.notification.RunNotifier;

        $r2 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.runner.Description methodDescription(java.lang.reflect.Method)>(r1);

     label1:
        $r3 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.lang.Object createTest()>();

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: void testAborted(org.junit.runner.notification.RunNotifier,org.junit.runner.Description,java.lang.Throwable)>(r6, $r2, $r9);

        return;

     label4:
        $r7 := @caughtexception;

        specialinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: void testAborted(org.junit.runner.notification.RunNotifier,org.junit.runner.Description,java.lang.Throwable)>(r6, $r2, $r7);

        return;

     label5:
        $r4 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestMethod wrapMethod(java.lang.reflect.Method)>(r1);

        $r5 = new org.junit.internal.runners.MethodRoadie;

        specialinvoke $r5.<org.junit.internal.runners.MethodRoadie: void <init>(java.lang.Object,org.junit.internal.runners.TestMethod,org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>($r3, $r4, r6, $r2);

        virtualinvoke $r5.<org.junit.internal.runners.MethodRoadie: void run()>();

        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        org.junit.internal.runners.JUnit4ClassRunner r4;
        org.junit.runner.Description r1;
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.Failure $r2;

        r4 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r0 := @parameter0: org.junit.runner.notification.RunNotifier;

        r1 := @parameter1: org.junit.runner.Description;

        r3 := @parameter2: java.lang.Throwable;

        virtualinvoke r0.<org.junit.runner.notification.RunNotifier: void fireTestStarted(org.junit.runner.Description)>(r1);

        $r2 = new org.junit.runner.notification.Failure;

        specialinvoke $r2.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>(r1, r3);

        virtualinvoke r0.<org.junit.runner.notification.RunNotifier: void fireTestFailure(org.junit.runner.notification.Failure)>($r2);

        virtualinvoke r0.<org.junit.runner.notification.RunNotifier: void fireTestFinished(org.junit.runner.Description)>(r1);

        return;
    }

    protected org.junit.internal.runners.TestMethod wrapMethod(java.lang.reflect.Method)
    {
        org.junit.internal.runners.TestMethod $r0;
        org.junit.internal.runners.JUnit4ClassRunner r2;
        org.junit.internal.runners.TestClass $r3;
        java.lang.reflect.Method r1;

        r2 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r1 := @parameter0: java.lang.reflect.Method;

        $r0 = new org.junit.internal.runners.TestMethod;

        $r3 = r2.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        specialinvoke $r0.<org.junit.internal.runners.TestMethod: void <init>(java.lang.reflect.Method,org.junit.internal.runners.TestClass)>(r1, $r3);

        return $r0;
    }

    protected java.lang.String testName(java.lang.reflect.Method)
    {
        java.lang.String $r1;
        org.junit.internal.runners.JUnit4ClassRunner r2;
        java.lang.reflect.Method r0;

        r2 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r1;
    }

    protected org.junit.runner.Description methodDescription(java.lang.reflect.Method)
    {
        org.junit.internal.runners.JUnit4ClassRunner r0;
        org.junit.internal.runners.TestClass $r1;
        java.lang.Class $r2;
        org.junit.runner.Description $r6;
        java.lang.String $r4;
        java.lang.'annotation'.Annotation[] $r5;
        java.lang.reflect.Method r3;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r3 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass getTestClass()>();

        $r2 = virtualinvoke $r1.<org.junit.internal.runners.TestClass: java.lang.Class getJavaClass()>();

        $r4 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.lang.String testName(java.lang.reflect.Method)>(r3);

        $r5 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: java.lang.'annotation'.Annotation[] testAnnotations(java.lang.reflect.Method)>(r3);

        $r6 = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createTestDescription(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r2, $r4, $r5);

        return $r6;
    }

    protected java.lang.'annotation'.Annotation[] testAnnotations(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation[] $r1;
        org.junit.internal.runners.JUnit4ClassRunner r2;
        java.lang.reflect.Method r0;

        r2 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r1;
    }

    public void filter(org.junit.runner.manipulation.Filter) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        org.junit.internal.runners.JUnit4ClassRunner r0;
        java.util.Iterator $r2;
        org.junit.runner.manipulation.Filter r7;
        org.junit.runner.Description $r8;
        org.junit.runner.manipulation.NoTestsRemainException $r4;
        java.util.List $r1, $r3;
        java.lang.Object $r5;
        java.lang.reflect.Method r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r7 := @parameter0: org.junit.runner.manipulation.Filter;

        $r1 = r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.reflect.Method) $r5;

        $r8 = virtualinvoke r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.runner.Description methodDescription(java.lang.reflect.Method)>(r6);

        $z2 = virtualinvoke r7.<org.junit.runner.manipulation.Filter: boolean shouldRun(org.junit.runner.Description)>($r8);

        if $z2 != 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r3 = r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r4 = new org.junit.runner.manipulation.NoTestsRemainException;

        specialinvoke $r4.<org.junit.runner.manipulation.NoTestsRemainException: void <init>()>();

        throw $r4;

     label4:
        return;
    }

    public void sort(org.junit.runner.manipulation.Sorter)
    {
        java.util.List $r3;
        org.junit.internal.runners.JUnit4ClassRunner r0;
        org.junit.internal.runners.JUnit4ClassRunner$2 $r1;
        org.junit.runner.manipulation.Sorter r2;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        r2 := @parameter0: org.junit.runner.manipulation.Sorter;

        $r3 = r0.<org.junit.internal.runners.JUnit4ClassRunner: java.util.List fTestMethods>;

        $r1 = new org.junit.internal.runners.JUnit4ClassRunner$2;

        specialinvoke $r1.<org.junit.internal.runners.JUnit4ClassRunner$2: void <init>(org.junit.internal.runners.JUnit4ClassRunner,org.junit.runner.manipulation.Sorter)>(r0, r2);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r1);

        return;
    }

    protected org.junit.internal.runners.TestClass getTestClass()
    {
        org.junit.internal.runners.TestClass $r1;
        org.junit.internal.runners.JUnit4ClassRunner r0;

        r0 := @this: org.junit.internal.runners.JUnit4ClassRunner;

        $r1 = r0.<org.junit.internal.runners.JUnit4ClassRunner: org.junit.internal.runners.TestClass fTestClass>;

        return $r1;
    }
}
