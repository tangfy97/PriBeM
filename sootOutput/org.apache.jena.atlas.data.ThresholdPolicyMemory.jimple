public class org.apache.jena.atlas.data.ThresholdPolicyMemory extends java.lang.Object implements org.apache.jena.atlas.data.ThresholdPolicy
{
    protected final org.apache.jena.atlas.data.SerializationFactory serializerFactory;
    protected final long threshold;
    protected long count;
    protected long size;

    public void <init>(long, org.apache.jena.atlas.data.SerializationFactory)
    {
        byte $b1;
        org.apache.jena.atlas.data.SerializationFactory r1;
        int $i2;
        long l0;
        java.lang.IllegalArgumentException $r3;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.jena.atlas.data.SerializationFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Threshold must be greater than or equal to zero");

        throw $r3;

     label1:
        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long threshold> = l0;

        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: org.apache.jena.atlas.data.SerializationFactory serializerFactory> = r1;

        virtualinvoke r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: void reset()>();

        return;
    }

    public void increment(java.lang.Object)
    {
        org.apache.jena.atlas.data.SerializationFactory $r2;
        long $l0, $l1, $l2, $l3, $l4;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;
        java.lang.Object r1;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        r1 := @parameter0: java.lang.Object;

        $l0 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long count>;

        $l1 = $l0 + 1L;

        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long count> = $l1;

        $l2 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size>;

        $r2 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: org.apache.jena.atlas.data.SerializationFactory serializerFactory>;

        $l3 = interfaceinvoke $r2.<org.apache.jena.atlas.data.SerializationFactory: long getEstimatedMemorySize(java.lang.Object)>(r1);

        $l4 = $l2 + $l3;

        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size> = $l4;

        return;
    }

    public boolean isThresholdExceeded()
    {
        byte $b2;
        int $i3;
        long $l0, $l1;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        $l1 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size>;

        $l0 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long threshold>;

        $b2 = $l1 cmp $l0;

        $i3 = (int) $b2;

        if $i3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void reset()
    {
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long count> = 0L;

        r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size> = 0L;

        return;
    }

    public long getThreshold()
    {
        long $l0;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        $l0 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long threshold>;

        return $l0;
    }

    public long getCount()
    {
        long $l0;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        $l0 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long count>;

        return $l0;
    }

    public long getMemorySize()
    {
        long $l0;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r0;

        r0 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        $l0 = r0.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size>;

        return $l0;
    }

    public java.lang.String toString()
    {
        long $l0, $l1, $l2;
        org.apache.jena.atlas.data.ThresholdPolicyMemory r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: org.apache.jena.atlas.data.ThresholdPolicyMemory;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThresholdPolicyMemory:  Threshold (bytes)=");

        $l0 = r2.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long threshold>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Memory Size (bytes)=");

        $l1 = r2.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long size>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Count=");

        $l2 = r2.<org.apache.jena.atlas.data.ThresholdPolicyMemory: long count>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
