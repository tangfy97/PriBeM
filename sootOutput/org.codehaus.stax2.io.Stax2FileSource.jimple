public class org.codehaus.stax2.io.Stax2FileSource extends org.codehaus.stax2.io.Stax2ReferentialSource
{
    final java.io.File mFile;

    public void <init>(java.io.File)
    {
        org.codehaus.stax2.io.Stax2FileSource r0;
        java.io.File r1;

        r0 := @this: org.codehaus.stax2.io.Stax2FileSource;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.codehaus.stax2.io.Stax2ReferentialSource: void <init>()>();

        r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile> = r1;

        return;
    }

    public java.net.URL getReference()
    {
        java.net.URL $r2;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r12, $r13, $r14;
        java.lang.String $r11, $r15;
        org.codehaus.stax2.io.Stax2FileSource r0;
        java.net.MalformedURLException $r3;
        java.lang.IllegalArgumentException $r4;
        java.io.File $r1, $r10;
        java.lang.Class $r7;

        r0 := @this: org.codehaus.stax2.io.Stax2FileSource;

     label1:
        $r1 = r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.net.URL toURL()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(was ");

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") Could not convert File \'");

        $r10 = r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile>;

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' to URL: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r4;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.io.Reader constructReader() throws java.io.IOException
    {
        int $i0;
        java.lang.String $r1;
        java.io.FileReader $r2;
        org.codehaus.stax2.io.Stax2FileSource r0;
        java.io.InputStreamReader $r4;
        java.io.File $r3;
        java.io.InputStream $r5;

        r0 := @this: org.codehaus.stax2.io.Stax2FileSource;

        $r1 = virtualinvoke r0.<org.codehaus.stax2.io.Stax2FileSource: java.lang.String getEncoding()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.io.InputStreamReader;

        $r5 = virtualinvoke r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.InputStream constructInputStream()>();

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, $r1);

        return $r4;

     label1:
        $r2 = new java.io.FileReader;

        $r3 = r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile>;

        specialinvoke $r2.<java.io.FileReader: void <init>(java.io.File)>($r3);

        return $r2;
    }

    public java.io.InputStream constructInputStream() throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        org.codehaus.stax2.io.Stax2FileSource r1;
        java.io.File $r2;

        r1 := @this: org.codehaus.stax2.io.Stax2FileSource;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r0;
    }

    public java.io.File getFile()
    {
        org.codehaus.stax2.io.Stax2FileSource r0;
        java.io.File $r1;

        r0 := @this: org.codehaus.stax2.io.Stax2FileSource;

        $r1 = r0.<org.codehaus.stax2.io.Stax2FileSource: java.io.File mFile>;

        return $r1;
    }
}
