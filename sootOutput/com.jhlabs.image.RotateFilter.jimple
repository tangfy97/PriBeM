public class com.jhlabs.image.RotateFilter extends com.jhlabs.image.TransformFilter
{
    static final long serialVersionUID;
    private float angle;
    private float cos;
    private float sin;
    private boolean resize;

    public void <init>()
    {
        com.jhlabs.image.RotateFilter r0;

        r0 := @this: com.jhlabs.image.RotateFilter;

        specialinvoke r0.<com.jhlabs.image.RotateFilter: void <init>(float)>(3.1415927F);

        return;
    }

    public void <init>(float)
    {
        float f0;
        com.jhlabs.image.RotateFilter r0;

        r0 := @this: com.jhlabs.image.RotateFilter;

        f0 := @parameter0: float;

        specialinvoke r0.<com.jhlabs.image.RotateFilter: void <init>(float,boolean)>(f0, 1);

        return;
    }

    public void <init>(float, boolean)
    {
        float f0;
        com.jhlabs.image.RotateFilter r0;
        boolean z0;

        r0 := @this: com.jhlabs.image.RotateFilter;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.RotateFilter: boolean resize> = 1;

        virtualinvoke r0.<com.jhlabs.image.RotateFilter: void setAngle(float)>(f0);

        r0.<com.jhlabs.image.RotateFilter: boolean resize> = z0;

        return;
    }

    public void setAngle(float)
    {
        com.jhlabs.image.RotateFilter r0;
        float f0, $f1, $f2, $f3, $f4;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.jhlabs.image.RotateFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.RotateFilter: float angle> = f0;

        $f1 = r0.<com.jhlabs.image.RotateFilter: float angle>;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f2 = (float) $d1;

        r0.<com.jhlabs.image.RotateFilter: float cos> = $f2;

        $f3 = r0.<com.jhlabs.image.RotateFilter: float angle>;

        $d2 = (double) $f3;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $f4 = (float) $d3;

        r0.<com.jhlabs.image.RotateFilter: float sin> = $f4;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.RotateFilter r0;

        r0 := @this: com.jhlabs.image.RotateFilter;

        $f0 = r0.<com.jhlabs.image.RotateFilter: float angle>;

        return $f0;
    }

    protected void transformSpace(java.awt.Rectangle)
    {
        java.awt.Rectangle r2;
        com.jhlabs.image.RotateFilter r0;
        java.awt.Point $r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, $i17, $i18, $i19, $i20;
        boolean $z0;

        r0 := @this: com.jhlabs.image.RotateFilter;

        r2 := @parameter0: java.awt.Rectangle;

        $z0 = r0.<com.jhlabs.image.RotateFilter: boolean resize>;

        if $z0 == 0 goto label8;

        $r1 = new java.awt.Point;

        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>(0, 0);

        i12 = 2147483647;

        i13 = 2147483647;

        i14 = -2147483648;

        i15 = -2147483648;

        i0 = r2.<java.awt.Rectangle: int width>;

        i1 = r2.<java.awt.Rectangle: int height>;

        i2 = r2.<java.awt.Rectangle: int x>;

        i3 = r2.<java.awt.Rectangle: int y>;

        i16 = 0;

     label1:
        if i16 >= 4 goto label7;

        tableswitch(i16)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        virtualinvoke r0.<com.jhlabs.image.RotateFilter: void transform(int,int,java.awt.Point)>(i2, i3, $r1);

        goto label6;

     label3:
        $i11 = i2 + i0;

        virtualinvoke r0.<com.jhlabs.image.RotateFilter: void transform(int,int,java.awt.Point)>($i11, i3, $r1);

        goto label6;

     label4:
        $i10 = i3 + i1;

        virtualinvoke r0.<com.jhlabs.image.RotateFilter: void transform(int,int,java.awt.Point)>(i2, $i10, $r1);

        goto label6;

     label5:
        $i9 = i2 + i0;

        $i8 = i3 + i1;

        virtualinvoke r0.<com.jhlabs.image.RotateFilter: void transform(int,int,java.awt.Point)>($i9, $i8, $r1);

     label6:
        $i17 = $r1.<java.awt.Point: int x>;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>(i12, $i17);

        $i18 = $r1.<java.awt.Point: int y>;

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i13, $i18);

        $i19 = $r1.<java.awt.Point: int x>;

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(i14, $i19);

        $i20 = $r1.<java.awt.Point: int y>;

        i15 = staticinvoke <java.lang.Math: int max(int,int)>(i15, $i20);

        i16 = i16 + 1;

        goto label1;

     label7:
        r2.<java.awt.Rectangle: int x> = i12;

        r2.<java.awt.Rectangle: int y> = i13;

        $i4 = r2.<java.awt.Rectangle: int x>;

        $i5 = i14 - $i4;

        r2.<java.awt.Rectangle: int width> = $i5;

        $i6 = r2.<java.awt.Rectangle: int y>;

        $i7 = i15 - $i6;

        r2.<java.awt.Rectangle: int height> = $i7;

     label8:
        return;
    }

    protected void transform(int, int, java.awt.Point)
    {
        com.jhlabs.image.RotateFilter r1;
        java.awt.Point r0;
        int i0, i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;

        r1 := @this: com.jhlabs.image.RotateFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.awt.Point;

        $f1 = (float) i0;

        $f0 = r1.<com.jhlabs.image.RotateFilter: float cos>;

        $f5 = $f1 * $f0;

        $f3 = (float) i1;

        $f2 = r1.<com.jhlabs.image.RotateFilter: float sin>;

        $f4 = $f3 * $f2;

        $f6 = $f5 + $f4;

        $i2 = (int) $f6;

        r0.<java.awt.Point: int x> = $i2;

        $f8 = (float) i1;

        $f7 = r1.<com.jhlabs.image.RotateFilter: float cos>;

        $f12 = $f8 * $f7;

        $f10 = (float) i0;

        $f9 = r1.<com.jhlabs.image.RotateFilter: float sin>;

        $f11 = $f10 * $f9;

        $f13 = $f12 - $f11;

        $i3 = (int) $f13;

        r0.<java.awt.Point: int y> = $i3;

        return;
    }

    protected void transformInverse(int, int, float[])
    {
        com.jhlabs.image.RotateFilter r1;
        float[] r0;
        int i0, i1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;

        r1 := @this: com.jhlabs.image.RotateFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: float[];

        $f1 = (float) i0;

        $f0 = r1.<com.jhlabs.image.RotateFilter: float cos>;

        $f5 = $f1 * $f0;

        $f3 = (float) i1;

        $f2 = r1.<com.jhlabs.image.RotateFilter: float sin>;

        $f4 = $f3 * $f2;

        $f6 = $f5 - $f4;

        r0[0] = $f6;

        $f8 = (float) i1;

        $f7 = r1.<com.jhlabs.image.RotateFilter: float cos>;

        $f12 = $f8 * $f7;

        $f10 = (float) i0;

        $f9 = r1.<com.jhlabs.image.RotateFilter: float sin>;

        $f11 = $f10 * $f9;

        $f13 = $f12 + $f11;

        r0[1] = $f13;

        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.RotateFilter r2;
        java.lang.StringBuffer $r0, $r1, $r3;
        int $i0;
        float $f0, $f1;
        java.lang.String $r4;
        double $d0, $d1;

        r2 := @this: com.jhlabs.image.RotateFilter;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rotate ");

        $f0 = r2.<com.jhlabs.image.RotateFilter: float angle>;

        $f1 = $f0 * 180.0F;

        $d0 = (double) $f1;

        $d1 = $d0 / 3.141592653589793;

        $i0 = (int) $d1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <com.jhlabs.image.RotateFilter: long serialVersionUID> = 1166374736665848180L;

        return;
    }
}
