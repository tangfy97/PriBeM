public class org.apache.lucene.search.PhraseQuery extends org.apache.lucene.search.Query
{
    private java.lang.String field;
    private java.util.ArrayList terms;
    private java.util.ArrayList positions;
    private int maxPosition;
    private int slop;

    public void <init>()
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        specialinvoke r0.<org.apache.lucene.search.Query: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(4);

        r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(4);

        r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions> = $r2;

        r0.<org.apache.lucene.search.PhraseQuery: int maxPosition> = 0;

        r0.<org.apache.lucene.search.PhraseQuery: int slop> = 0;

        return;
    }

    public void setSlop(int)
    {
        int i0;
        org.apache.lucene.search.PhraseQuery r0;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.search.PhraseQuery: int slop> = i0;

        return;
    }

    public int getSlop()
    {
        int $i0;
        org.apache.lucene.search.PhraseQuery r0;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        $i0 = r0.<org.apache.lucene.search.PhraseQuery: int slop>;

        return $i0;
    }

    public void add(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.Term r2;
        org.apache.lucene.search.PhraseQuery r0;
        java.lang.Integer $r6;
        java.util.ArrayList $r1, $r3, $r4;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r5;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        r2 := @parameter0: org.apache.lucene.index.Term;

        i4 = 0;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $r3 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r6 = (java.lang.Integer) $r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        i4 = $i3 + 1;

     label1:
        virtualinvoke r0.<org.apache.lucene.search.PhraseQuery: void add(org.apache.lucene.index.Term,int)>(r2, i4);

        return;
    }

    public void add(org.apache.lucene.index.Term, int)
    {
        org.apache.lucene.index.Term r2;
        org.apache.lucene.search.PhraseQuery r0;
        java.lang.Integer $r7;
        java.util.ArrayList $r1, $r5, $r6;
        int $i0, i1, $i2;
        java.lang.String $r3, $r4, $r12, $r13;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        r2 := @parameter0: org.apache.lucene.index.Term;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r13 = virtualinvoke r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        r0.<org.apache.lucene.search.PhraseQuery: java.lang.String field> = $r13;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r4 = r0.<org.apache.lucene.search.PhraseQuery: java.lang.String field>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All phrase terms must be in the same field: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $r5 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i2 = r0.<org.apache.lucene.search.PhraseQuery: int maxPosition>;

        if i1 <= $i2 goto label3;

        r0.<org.apache.lucene.search.PhraseQuery: int maxPosition> = i1;

     label3:
        return;
    }

    public org.apache.lucene.index.Term[] getTerms()
    {
        java.lang.Object[] $r3;
        org.apache.lucene.search.PhraseQuery r0;
        org.apache.lucene.index.Term[] $r1, $r4;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        $r2 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $r1 = newarray (org.apache.lucene.index.Term)[0];

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r4 = (org.apache.lucene.index.Term[]) $r3;

        return $r4;
    }

    public int[] getPositions()
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.lang.Integer $r6;
        java.util.ArrayList $r1, $r3, $r4;
        int[] r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r5;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        r2 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $r3 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label2;

        $r4 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r2[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r4;
        org.apache.lucene.index.Term $r8;
        org.apache.lucene.search.PhraseQuery r0;
        java.util.ArrayList $r1, $r2, $r6;
        org.apache.lucene.search.TermQuery $r5;
        org.apache.lucene.search.BooleanQuery $r9;
        int $i0;
        float $f0, $f1;
        java.lang.Object $r7;
        org.apache.lucene.index.IndexReader r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        r3 := @parameter0: org.apache.lucene.index.IndexReader;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r9 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r9.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $f1 = virtualinvoke r0.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        virtualinvoke $r9.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f1);

        return $r9;

     label1:
        $r2 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label2;

        $r5 = new org.apache.lucene.search.TermQuery;

        $r6 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r8 = (org.apache.lucene.index.Term) $r7;

        specialinvoke $r5.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>($r8);

        $f0 = virtualinvoke r0.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        virtualinvoke $r5.<org.apache.lucene.search.TermQuery: void setBoost(float)>($f0);

        return $r5;

     label2:
        $r4 = specialinvoke r0.<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>(r3);

        return $r4;
    }

    public org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.PhraseQuery r1;
        org.apache.lucene.search.PhraseQuery$PhraseWeight $r0;
        org.apache.lucene.search.IndexSearcher r2;

        r1 := @this: org.apache.lucene.search.PhraseQuery;

        r2 := @parameter0: org.apache.lucene.search.IndexSearcher;

        $r0 = new org.apache.lucene.search.PhraseQuery$PhraseWeight;

        specialinvoke $r0.<org.apache.lucene.search.PhraseQuery$PhraseWeight: void <init>(org.apache.lucene.search.PhraseQuery,org.apache.lucene.search.IndexSearcher)>(r1, r2);

        return $r0;
    }

    public void extractTerms(java.util.Set)
    {
        java.util.Set r0;
        org.apache.lucene.search.PhraseQuery r1;
        java.util.ArrayList $r2;

        r1 := @this: org.apache.lucene.search.PhraseQuery;

        r0 := @parameter0: java.util.Set;

        $r2 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.index.Term $r14, $r19;
        org.apache.lucene.search.PhraseQuery r1;
        java.lang.Integer $r8;
        boolean $z0;
        float $f0;
        java.lang.StringBuilder $r0, $r9, $r10, $r11, $r16;
        java.lang.String[] $r23;
        java.util.ArrayList $r6, $r12, $r17, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8;
        java.lang.String $r2, $r3, $r4, $r5, $r15, r20, $r21, $r22, r25, r26;
        java.lang.Object $r7, $r13, $r18;

        r1 := @this: org.apache.lucene.search.PhraseQuery;

        r20 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.search.PhraseQuery: java.lang.String field>;

        if $r2 == null goto label01;

        $r21 = r1.<org.apache.lucene.search.PhraseQuery: java.lang.String field>;

        $z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r20);

        if $z0 != 0 goto label01;

        $r22 = r1.<org.apache.lucene.search.PhraseQuery: java.lang.String field>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label01:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $i4 = r1.<org.apache.lucene.search.PhraseQuery: int maxPosition>;

        $i5 = $i4 + 1;

        $r23 = newarray (java.lang.String)[$i5];

        i6 = 0;

     label02:
        $r24 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $i7 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if i6 >= $i7 goto label05;

        $r6 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r8 = (java.lang.Integer) $r7;

        $i3 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        r25 = $r23[$i3];

        if r25 != null goto label03;

        $r17 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r19 = (org.apache.lucene.index.Term) $r18;

        r26 = virtualinvoke $r19.<org.apache.lucene.index.Term: java.lang.String text()>();

        goto label04;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r12 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r14 = (org.apache.lucene.index.Term) $r13;

        $r15 = virtualinvoke $r14.<org.apache.lucene.index.Term: java.lang.String text()>();

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r26 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r23[$i3] = r26;

        i6 = i6 + 1;

        goto label02;

     label05:
        i8 = 0;

     label06:
        $i0 = lengthof $r23;

        if i8 >= $i0 goto label10;

        if i8 <= 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label07:
        $r5 = $r23[i8];

        if $r5 != null goto label08;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        goto label09;

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label09:
        i8 = i8 + 1;

        goto label06;

     label10:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $i1 = r1.<org.apache.lucene.search.PhraseQuery: int slop>;

        if $i1 == 0 goto label11;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~");

        $i2 = r1.<org.apache.lucene.search.PhraseQuery: int slop>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label11:
        $f0 = virtualinvoke r1.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        $r3 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.PhraseQuery r1, r2;
        java.util.ArrayList $r3, $r4, $r5, $r6;
        byte $b0;
        int $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1;
        java.lang.Object r0;

        r2 := @this: org.apache.lucene.search.PhraseQuery;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.search.PhraseQuery;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.lucene.search.PhraseQuery) r0;

        $f0 = virtualinvoke r2.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        $f1 = virtualinvoke r1.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label2;

        $i2 = r2.<org.apache.lucene.search.PhraseQuery: int slop>;

        $i1 = r1.<org.apache.lucene.search.PhraseQuery: int slop>;

        if $i2 != $i1 goto label2;

        $r4 = r2.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $r3 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r2.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $r5 = r1.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $z2 = virtualinvoke $r6.<java.util.ArrayList: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public int hashCode()
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0;

        r0 := @this: org.apache.lucene.search.PhraseQuery;

        $f0 = virtualinvoke r0.<org.apache.lucene.search.PhraseQuery: float getBoost()>();

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i1 = r0.<org.apache.lucene.search.PhraseQuery: int slop>;

        $i2 = $i0 ^ $i1;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        $i3 = virtualinvoke $r1.<java.util.ArrayList: int hashCode()>();

        $i4 = $i2 ^ $i3;

        $r2 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        $i5 = virtualinvoke $r2.<java.util.ArrayList: int hashCode()>();

        $i6 = $i4 ^ $i5;

        return $i6;
    }

    static java.util.ArrayList access$000(org.apache.lucene.search.PhraseQuery)
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.apache.lucene.search.PhraseQuery;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList terms>;

        return $r1;
    }

    static java.lang.String access$100(org.apache.lucene.search.PhraseQuery)
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.lucene.search.PhraseQuery;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.lang.String field>;

        return $r1;
    }

    static java.util.ArrayList access$200(org.apache.lucene.search.PhraseQuery)
    {
        org.apache.lucene.search.PhraseQuery r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.apache.lucene.search.PhraseQuery;

        $r1 = r0.<org.apache.lucene.search.PhraseQuery: java.util.ArrayList positions>;

        return $r1;
    }

    static int access$300(org.apache.lucene.search.PhraseQuery)
    {
        int $i0;
        org.apache.lucene.search.PhraseQuery r0;

        r0 := @parameter0: org.apache.lucene.search.PhraseQuery;

        $i0 = r0.<org.apache.lucene.search.PhraseQuery: int slop>;

        return $i0;
    }
}
