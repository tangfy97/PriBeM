public final class org.apache.poi.xssf.usermodel.charts.XSSFManualLayout extends java.lang.Object implements org.apache.poi.ss.usermodel.charts.ManualLayout
{
    private org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout;
    private static final org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode;
    private static final org.apache.poi.ss.usermodel.charts.LayoutTarget defaultLayoutTarget;

    public void <init>(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout r1;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: void initLayout(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout)>(r1);

        return;
    }

    public void <init>(org.apache.poi.xssf.usermodel.XSSFChart)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout $r4;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.apache.poi.xssf.usermodel.XSSFChart r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTChart $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFChart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTChart getCTChart()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTChart: org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea getPlotArea()>();

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: boolean isSetLayout()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout getLayout()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTPlotArea: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout addNewLayout()>();

     label2:
        specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: void initLayout(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout)>($r4);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout getCTManualLayout()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        return $r1;
    }

    public void setWidthRatio(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetW()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewW()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getW()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        return;
    }

    public double getWidthRatio()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetW()>();

        if $z0 != 0 goto label1;

        return 0.0;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getW()>();

        $d0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;
    }

    public void setHeightRatio(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetH()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewH()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getH()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        return;
    }

    public double getHeightRatio()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetH()>();

        if $z0 != 0 goto label1;

        return 0.0;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getH()>();

        $d0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;
    }

    public org.apache.poi.ss.usermodel.charts.LayoutTarget getTarget()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.apache.poi.ss.usermodel.charts.LayoutTarget $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetLayoutTarget()>();

        if $z0 != 0 goto label1;

        $r5 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutTarget defaultLayoutTarget>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget getLayoutTarget()>();

        $r4 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutTarget toLayoutTarget(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget)>($r3);

        return $r4;
    }

    public void setTarget(org.apache.poi.ss.usermodel.charts.LayoutTarget)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r6;
        org.apache.poi.ss.usermodel.charts.LayoutTarget r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r4 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutTarget;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetLayoutTarget()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget addNewLayoutTarget()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget getLayoutTarget()>();

        $r5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum fromLayoutTarget(org.apache.poi.ss.usermodel.charts.LayoutTarget)>(r4);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum)>($r5);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.LayoutMode getXMode()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetXMode()>();

        if $z0 != 0 goto label1;

        $r5 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getXMode()>();

        $r4 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode toLayoutMode(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode)>($r3);

        return $r4;
    }

    public void setXMode(org.apache.poi.ss.usermodel.charts.LayoutMode)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r4 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutMode;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetXMode()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode addNewXMode()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getXMode()>();

        $r5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum fromLayoutMode(org.apache.poi.ss.usermodel.charts.LayoutMode)>(r4);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum)>($r5);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.LayoutMode getYMode()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetYMode()>();

        if $z0 != 0 goto label1;

        $r5 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getYMode()>();

        $r4 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode toLayoutMode(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode)>($r3);

        return $r4;
    }

    public void setYMode(org.apache.poi.ss.usermodel.charts.LayoutMode)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r4 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutMode;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetYMode()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode addNewYMode()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getYMode()>();

        $r5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum fromLayoutMode(org.apache.poi.ss.usermodel.charts.LayoutMode)>(r4);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum)>($r5);

        return;
    }

    public double getX()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetX()>();

        if $z0 != 0 goto label1;

        return 0.0;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getX()>();

        $d0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;
    }

    public void setX(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetX()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewX()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getX()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        return;
    }

    public double getY()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetY()>();

        if $z0 != 0 goto label1;

        return 0.0;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getY()>();

        $d0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;
    }

    public void setY(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetY()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewY()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getY()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.LayoutMode getWidthMode()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetWMode()>();

        if $z0 != 0 goto label1;

        $r5 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getWMode()>();

        $r4 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode toLayoutMode(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode)>($r3);

        return $r4;
    }

    public void setWidthMode(org.apache.poi.ss.usermodel.charts.LayoutMode)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r4 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutMode;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetWMode()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode addNewWMode()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getWMode()>();

        $r5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum fromLayoutMode(org.apache.poi.ss.usermodel.charts.LayoutMode)>(r4);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum)>($r5);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.LayoutMode getHeightMode()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetHMode()>();

        if $z0 != 0 goto label1;

        $r5 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getHMode()>();

        $r4 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode toLayoutMode(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode)>($r3);

        return $r4;
    }

    public void setHeightMode(org.apache.poi.ss.usermodel.charts.LayoutMode)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r1, $r2, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode $r3;
        org.apache.poi.ss.usermodel.charts.LayoutMode r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r4 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutMode;

        $r1 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: boolean isSetHMode()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode addNewHMode()>();

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode getHMode()>();

        $r5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum fromLayoutMode(org.apache.poi.ss.usermodel.charts.LayoutMode)>(r4);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum)>($r5);

        return;
    }

    private void initLayout(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout $r2, $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r1;
        boolean $z0;

        r1 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout;

        $z0 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout: boolean isSetManualLayout()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout getManualLayout()>();

        r1.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout> = $r3;

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout addNewManualLayout()>();

        r1.<org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.openxmlformats.schemas.drawingml.x2006.chart.CTManualLayout layout> = $r2;

     label2:
        return;
    }

    private org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum fromLayoutMode(org.apache.poi.ss.usermodel.charts.LayoutMode)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r5;
        java.lang.IllegalArgumentException $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r2, $r3;
        int[] $r1;
        int $i0, $i1;
        org.apache.poi.ss.usermodel.charts.LayoutMode r0;

        r5 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutMode;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$LayoutMode>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.LayoutMode: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum EDGE>;

        return $r3;

     label2:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum FACTOR>;

        return $r2;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    private org.apache.poi.ss.usermodel.charts.LayoutMode toLayoutMode(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode)
    {
        int $i0;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode r0;
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.ss.usermodel.charts.LayoutMode $r2, $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum $r1;

        r5 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutMode: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutMode$Enum: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.apache.poi.ss.usermodel.charts.LayoutMode: org.apache.poi.ss.usermodel.charts.LayoutMode EDGE>;

        return $r3;

     label2:
        $r2 = <org.apache.poi.ss.usermodel.charts.LayoutMode: org.apache.poi.ss.usermodel.charts.LayoutMode FACTOR>;

        return $r2;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    private org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum fromLayoutTarget(org.apache.poi.ss.usermodel.charts.LayoutTarget)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r5;
        java.lang.IllegalArgumentException $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum $r2, $r3;
        int[] $r1;
        int $i0, $i1;
        org.apache.poi.ss.usermodel.charts.LayoutTarget r0;

        r5 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.LayoutTarget;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$LayoutTarget>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.LayoutTarget: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum INNER>;

        return $r3;

     label2:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum OUTER>;

        return $r2;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    private org.apache.poi.ss.usermodel.charts.LayoutTarget toLayoutTarget(org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget r0;
        int $i0;
        org.apache.poi.xssf.usermodel.charts.XSSFManualLayout r5;
        java.lang.IllegalArgumentException $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum $r1;
        org.apache.poi.ss.usermodel.charts.LayoutTarget $r2, $r3;

        r5 := @this: org.apache.poi.xssf.usermodel.charts.XSSFManualLayout;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLayoutTarget: org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STLayoutTarget$Enum: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.apache.poi.ss.usermodel.charts.LayoutTarget: org.apache.poi.ss.usermodel.charts.LayoutTarget INNER>;

        return $r3;

     label2:
        $r2 = <org.apache.poi.ss.usermodel.charts.LayoutTarget: org.apache.poi.ss.usermodel.charts.LayoutTarget OUTER>;

        return $r2;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.usermodel.charts.LayoutMode $r0;
        org.apache.poi.ss.usermodel.charts.LayoutTarget $r1;

        $r0 = <org.apache.poi.ss.usermodel.charts.LayoutMode: org.apache.poi.ss.usermodel.charts.LayoutMode EDGE>;

        <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutMode defaultLayoutMode> = $r0;

        $r1 = <org.apache.poi.ss.usermodel.charts.LayoutTarget: org.apache.poi.ss.usermodel.charts.LayoutTarget INNER>;

        <org.apache.poi.xssf.usermodel.charts.XSSFManualLayout: org.apache.poi.ss.usermodel.charts.LayoutTarget defaultLayoutTarget> = $r1;

        return;
    }
}
