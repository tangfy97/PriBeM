class org.joda.time.format.DateTimeFormatterBuilder$Composite extends java.lang.Object implements org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser
{
    private final org.joda.time.format.DateTimePrinter[] iPrinters;
    private final org.joda.time.format.DateTimeParser[] iParsers;
    private final int iPrintedLengthEstimate;
    private final int iParsedLengthEstimate;

    void <init>(java.util.List)
    {
        org.joda.time.format.DateTimeParser r11;
        java.util.ArrayList $r1, $r2;
        org.joda.time.format.DateTimePrinter[] $r4, $r9;
        org.joda.time.format.DateTimeParser[] $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        java.util.List r3;
        org.joda.time.format.DateTimePrinter r10;
        java.lang.Object $r6, $r8;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r3 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void decompose(java.util.List,java.util.List,java.util.List)>(r3, $r1, $r2);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = 0;

        goto label4;

     label1:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r4 = newarray (org.joda.time.format.DateTimePrinter)[$i1];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters> = $r4;

        i6 = 0;

        i7 = 0;

     label2:
        if i7 >= $i1 goto label3;

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i7);

        r10 = (org.joda.time.format.DateTimePrinter) $r8;

        $i5 = interfaceinvoke r10.<org.joda.time.format.DateTimePrinter: int estimatePrintedLength()>();

        i6 = i6 + $i5;

        $r9 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        $r9[i7] = r10;

        i7 = i7 + 1;

        goto label2;

     label3:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate> = i6;

     label4:
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 > 0 goto label5;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers> = null;

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = 0;

        goto label8;

     label5:
        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r5 = newarray (org.joda.time.format.DateTimeParser)[$i3];

        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers> = $r5;

        i8 = 0;

        i9 = 0;

     label6:
        if i9 >= $i3 goto label7;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i9);

        r11 = (org.joda.time.format.DateTimeParser) $r6;

        $i4 = interfaceinvoke r11.<org.joda.time.format.DateTimeParser: int estimateParsedLength()>();

        i8 = i8 + $i4;

        $r7 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers>;

        $r7[i9] = r11;

        i9 = i9 + 1;

        goto label6;

     label7:
        r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate> = i8;

     label8:
        return;
    }

    public int estimatePrintedLength()
    {
        int $i0;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iPrintedLengthEstimate>;

        return $i0;
    }

    public void printTo(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale)
    {
        java.lang.UnsupportedOperationException $r6;
        org.joda.time.DateTimeZone r4;
        org.joda.time.Chronology r3;
        long l0;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimePrinter[] r1;
        java.lang.StringBuffer r2;
        java.util.Locale r7;
        org.joda.time.format.DateTimePrinter $r5;
        int i1, $i2, i3;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r2 := @parameter0: java.lang.StringBuffer;

        l0 := @parameter1: long;

        r3 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r4 := @parameter4: org.joda.time.DateTimeZone;

        r7 := @parameter5: java.util.Locale;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        if r1 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        if r7 != null goto label2;

        r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i2 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= $i2 goto label4;

        $r5 = r1[i3];

        interfaceinvoke $r5.<org.joda.time.format.DateTimePrinter: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>(r2, l0, r3, i1, r4, r7);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void printTo(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r6;
        org.joda.time.DateTimeZone r4;
        org.joda.time.Chronology r3;
        long l0;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimePrinter[] r1;
        java.util.Locale r7;
        org.joda.time.format.DateTimePrinter $r5;
        java.io.Writer r2;
        int i1, $i2, i3;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r2 := @parameter0: java.io.Writer;

        l0 := @parameter1: long;

        r3 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r4 := @parameter4: org.joda.time.DateTimeZone;

        r7 := @parameter5: java.util.Locale;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        if r1 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        if r7 != null goto label2;

        r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i2 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= $i2 goto label4;

        $r5 = r1[i3];

        interfaceinvoke $r5.<org.joda.time.format.DateTimePrinter: void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>(r2, l0, r3, i1, r4, r7);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale)
    {
        java.lang.UnsupportedOperationException $r5;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimePrinter[] r1;
        java.lang.StringBuffer r2;
        java.util.Locale r6;
        org.joda.time.format.DateTimePrinter $r4;
        org.joda.time.ReadablePartial r3;
        int $i0, i1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r2 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: org.joda.time.ReadablePartial;

        r6 := @parameter2: java.util.Locale;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        if r1 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        if r6 != null goto label2;

        r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        $r4 = r1[i1];

        interfaceinvoke $r4.<org.joda.time.format.DateTimePrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)>(r2, r3, r6);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r5;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimePrinter[] r1;
        java.util.Locale r6;
        org.joda.time.format.DateTimePrinter $r4;
        java.io.Writer r2;
        org.joda.time.ReadablePartial r3;
        int $i0, i1;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r2 := @parameter0: java.io.Writer;

        r3 := @parameter1: org.joda.time.ReadablePartial;

        r6 := @parameter2: java.util.Locale;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        if r1 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        if r6 != null goto label2;

        r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        $r4 = r1[i1];

        interfaceinvoke $r4.<org.joda.time.format.DateTimePrinter: void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)>(r2, r3, r6);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public int estimateParsedLength()
    {
        int $i0;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $i0 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: int iParsedLengthEstimate>;

        return $i0;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int)
    {
        java.lang.UnsupportedOperationException $r5;
        org.joda.time.format.DateTimeParser $r4;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimeParser[] r1;
        int i0, i1, i2;
        org.joda.time.format.DateTimeParserBucket r2;
        java.lang.String r3;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r2 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r3 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers>;

        if r1 != null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;

     label1:
        i0 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        if i1 < 0 goto label3;

        $r4 = r1[i2];

        i1 = interfaceinvoke $r4.<org.joda.time.format.DateTimeParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>(r2, r3, i1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    boolean isPrinter()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimePrinter[] $r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isParser()
    {
        org.joda.time.format.DateTimeFormatterBuilder$Composite r0;
        org.joda.time.format.DateTimeParser[] $r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        $r1 = r0.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void decompose(java.util.List, java.util.List, java.util.List)
    {
        org.joda.time.format.DateTimePrinter[] $r8;
        org.joda.time.format.DateTimeParser[] $r5;
        int $i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r3, $r4, $r7;
        java.util.List r0, r2, r6;
        java.lang.Object $r1, $r9;

        r3 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r0 := @parameter0: java.util.List;

        r6 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label6;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = $r1 instanceof org.joda.time.format.DateTimePrinter;

        if $z0 == 0 goto label3;

        $z2 = $r1 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z2 == 0 goto label2;

        $r7 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) $r1;

        $r8 = $r7.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimePrinter[] iPrinters>;

        specialinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>(r6, $r8);

        goto label3;

     label2:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r1);

     label3:
        $i2 = i1 + 1;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        $z3 = $r9 instanceof org.joda.time.format.DateTimeParser;

        if $z3 == 0 goto label5;

        $z1 = $r9 instanceof org.joda.time.format.DateTimeFormatterBuilder$Composite;

        if $z1 == 0 goto label4;

        $r4 = (org.joda.time.format.DateTimeFormatterBuilder$Composite) $r9;

        $r5 = $r4.<org.joda.time.format.DateTimeFormatterBuilder$Composite: org.joda.time.format.DateTimeParser[] iParsers>;

        specialinvoke r3.<org.joda.time.format.DateTimeFormatterBuilder$Composite: void addArrayToList(java.util.List,java.lang.Object[])>(r2, $r5);

        goto label5;

     label4:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);

     label5:
        i1 = i1 + 2;

        goto label1;

     label6:
        return;
    }

    private void addArrayToList(java.util.List, java.lang.Object[])
    {
        java.util.List r1;
        java.lang.Object[] r0;
        int $i0, i1;
        java.lang.Object $r2;
        org.joda.time.format.DateTimeFormatterBuilder$Composite r3;

        r3 := @this: org.joda.time.format.DateTimeFormatterBuilder$Composite;

        r1 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.Object[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
