public class com.hp.hpl.jena.sparql.graph.GraphSPARQLService extends com.hp.hpl.jena.graph.impl.GraphBase implements com.hp.hpl.jena.graph.Graph
{
    private static org.slf4j.Logger log;
    private java.lang.String serviceURI;
    private java.lang.String graphIRI;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.sparql.graph.GraphSPARQLService r0;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphSPARQLService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String graphIRI> = null;

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String serviceURI> = r1;

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String graphIRI> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.hp.hpl.jena.sparql.graph.GraphSPARQLService r0;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphSPARQLService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.GraphBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String graphIRI> = null;

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String serviceURI> = r1;

        r0.<com.hp.hpl.jena.sparql.graph.GraphSPARQLService: java.lang.String graphIRI> = r2;

        return;
    }

    protected com.hp.hpl.jena.util.iterator.ExtendedIterator graphBaseFind(com.hp.hpl.jena.graph.TripleMatch)
    {
        com.hp.hpl.jena.sparql.core.BasicPattern $r5;
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3, r8, r9, r10;
        com.hp.hpl.jena.graph.Triple $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpBGP $r6;
        com.hp.hpl.jena.sparql.graph.GraphSPARQLService r7;
        com.hp.hpl.jena.graph.TripleMatch r0;

        r7 := @this: com.hp.hpl.jena.sparql.graph.GraphSPARQLService;

        r0 := @parameter0: com.hp.hpl.jena.graph.TripleMatch;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchSubject()>();

        r8 = $r1;

        if $r1 != null goto label1;

        r8 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>("s");

     label1:
        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchPredicate()>();

        r9 = $r2;

        if $r2 != null goto label2;

        r9 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>("p");

     label2:
        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchObject()>();

        r10 = $r3;

        if $r3 != null goto label3;

        r10 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>("o");

     label3:
        $r4 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r4.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r8, r9, r10);

        $r5 = new com.hp.hpl.jena.sparql.core.BasicPattern;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.core.BasicPattern: void <init>()>();

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.core.BasicPattern: void add(com.hp.hpl.jena.graph.Triple)>($r4);

        $r6 = new com.hp.hpl.jena.sparql.algebra.op.OpBGP;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.algebra.op.OpBGP: void <init>(com.hp.hpl.jena.sparql.core.BasicPattern)>($r5);

        return null;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/sparql/graph/GraphSPARQLService;");

        <com.hp.hpl.jena.sparql.graph.GraphSPARQLService: org.slf4j.Logger log> = $r0;

        return;
    }
}
