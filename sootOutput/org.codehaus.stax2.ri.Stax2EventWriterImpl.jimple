public class org.codehaus.stax2.ri.Stax2EventWriterImpl extends java.lang.Object implements javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLStreamConstants
{
    final org.codehaus.stax2.XMLStreamWriter2 mWriter;

    public void <init>(org.codehaus.stax2.XMLStreamWriter2)
    {
        org.codehaus.stax2.XMLStreamWriter2 r1;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r1 := @parameter0: org.codehaus.stax2.XMLStreamWriter2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter> = r1;

        return;
    }

    public void add(javax.xml.stream.events.XMLEvent) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamException $r47;
        javax.xml.stream.events.StartDocument r56;
        javax.xml.namespace.QName $r11, $r38;
        javax.xml.stream.events.EntityReference $r17;
        java.lang.StringBuffer $r48, $r49, $r50;
        java.lang.String $r3, $r4, $r7, $r10, $r13, $r14, $r15, $r16, $r19, $r22, $r23, $r25, $r28, $r30, $r34, $r35, $r40, $r41, $r42, $r51;
        javax.xml.stream.events.DTD $r8;
        javax.xml.stream.events.XMLEvent r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.stax2.XMLStreamWriter2 $r2, $r5, $r9, $r12, $r18, $r20, $r21, $r24, $r27, $r31, $r32, $r33, $r36, $r39, $r52;
        javax.xml.stream.events.Namespace r55, r57;
        javax.xml.stream.events.Comment $r26;
        org.codehaus.stax2.evt.XMLEvent2 $r53;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r1;
        javax.xml.stream.events.Attribute r54, r58;
        javax.xml.stream.events.ProcessingInstruction r59;
        int $i0;
        javax.xml.stream.events.StartElement $r37;
        java.util.Iterator $r43, $r44;
        javax.xml.stream.events.Characters $r6, $r29;
        java.lang.Object $r45, $r46;

        r1 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $i0 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label03;
            case 3: goto label20;
            case 4: goto label13;
            case 5: goto label17;
            case 6: goto label21;
            case 7: goto label05;
            case 8: goto label02;
            case 9: goto label19;
            case 10: goto label01;
            case 11: goto label18;
            case 12: goto label16;
            case 13: goto label04;
            case 14: goto label21;
            case 15: goto label21;
            default: goto label21;
        };

     label01:
        r54 = (javax.xml.stream.events.Attribute) r0;

        $r11 = interfaceinvoke r54.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r12 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r13 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r14 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r15 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r16 = interfaceinvoke r54.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        interfaceinvoke $r12.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, $r15, $r16);

        goto label23;

     label02:
        $r20 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r20.<org.codehaus.stax2.XMLStreamWriter2: void writeEndDocument()>();

        goto label23;

     label03:
        $r36 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r36.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>();

        goto label23;

     label04:
        r55 = (javax.xml.stream.events.Namespace) r0;

        $r2 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r3 = interfaceinvoke r55.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r4 = interfaceinvoke r55.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamWriter2: void writeNamespace(java.lang.String,java.lang.String)>($r3, $r4);

        goto label23;

     label05:
        r56 = (javax.xml.stream.events.StartDocument) r0;

        $z0 = interfaceinvoke r56.<javax.xml.stream.events.StartDocument: boolean encodingSet()>();

        if $z0 != 0 goto label06;

        $r24 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r25 = interfaceinvoke r56.<javax.xml.stream.events.StartDocument: java.lang.String getVersion()>();

        interfaceinvoke $r24.<org.codehaus.stax2.XMLStreamWriter2: void writeStartDocument(java.lang.String)>($r25);

        goto label07;

     label06:
        $r21 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r22 = interfaceinvoke r56.<javax.xml.stream.events.StartDocument: java.lang.String getCharacterEncodingScheme()>();

        $r23 = interfaceinvoke r56.<javax.xml.stream.events.StartDocument: java.lang.String getVersion()>();

        interfaceinvoke $r21.<org.codehaus.stax2.XMLStreamWriter2: void writeStartDocument(java.lang.String,java.lang.String)>($r22, $r23);

     label07:
        goto label23;

     label08:
        $r37 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r38 = interfaceinvoke $r37.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r39 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r40 = virtualinvoke $r38.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r41 = virtualinvoke $r38.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r42 = virtualinvoke $r38.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r39.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r40, $r41, $r42);

        $r43 = interfaceinvoke $r37.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label09:
        $z2 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r46 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r57 = (javax.xml.stream.events.Namespace) $r46;

        virtualinvoke r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: void add(javax.xml.stream.events.XMLEvent)>(r57);

        goto label09;

     label10:
        $r44 = interfaceinvoke $r37.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label11:
        $z3 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r45 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r58 = (javax.xml.stream.events.Attribute) $r45;

        virtualinvoke r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: void add(javax.xml.stream.events.XMLEvent)>(r58);

        goto label11;

     label12:
        goto label23;

     label13:
        $r29 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r30 = interfaceinvoke $r29.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        $z1 = interfaceinvoke $r29.<javax.xml.stream.events.Characters: boolean isCData()>();

        if $z1 == 0 goto label14;

        $r32 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r32.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(java.lang.String)>($r30);

        goto label15;

     label14:
        $r31 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r31.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>($r30);

     label15:
        goto label23;

     label16:
        $r5 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r6 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r7 = interfaceinvoke $r6.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        interfaceinvoke $r5.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(java.lang.String)>($r7);

        goto label23;

     label17:
        $r27 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r26 = (javax.xml.stream.events.Comment) r0;

        $r28 = interfaceinvoke $r26.<javax.xml.stream.events.Comment: java.lang.String getText()>();

        interfaceinvoke $r27.<org.codehaus.stax2.XMLStreamWriter2: void writeComment(java.lang.String)>($r28);

        goto label23;

     label18:
        $r9 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r8 = (javax.xml.stream.events.DTD) r0;

        $r10 = interfaceinvoke $r8.<javax.xml.stream.events.DTD: java.lang.String getDocumentTypeDeclaration()>();

        interfaceinvoke $r9.<org.codehaus.stax2.XMLStreamWriter2: void writeDTD(java.lang.String)>($r10);

        goto label23;

     label19:
        $r18 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r17 = (javax.xml.stream.events.EntityReference) r0;

        $r19 = interfaceinvoke $r17.<javax.xml.stream.events.EntityReference: java.lang.String getName()>();

        interfaceinvoke $r18.<org.codehaus.stax2.XMLStreamWriter2: void writeEntityRef(java.lang.String)>($r19);

        goto label23;

     label20:
        r59 = (javax.xml.stream.events.ProcessingInstruction) r0;

        $r33 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r34 = interfaceinvoke r59.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getTarget()>();

        $r35 = interfaceinvoke r59.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getData()>();

        interfaceinvoke $r33.<org.codehaus.stax2.XMLStreamWriter2: void writeProcessingInstruction(java.lang.String,java.lang.String)>($r34, $r35);

        goto label23;

     label21:
        $z4 = r0 instanceof org.codehaus.stax2.evt.XMLEvent2;

        if $z4 == 0 goto label22;

        $r53 = (org.codehaus.stax2.evt.XMLEvent2) r0;

        $r52 = r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r53.<org.codehaus.stax2.evt.XMLEvent2: void writeUsing(org.codehaus.stax2.XMLStreamWriter2)>($r52);

        goto label23;

     label22:
        $r47 = new javax.xml.stream.XMLStreamException;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Don\'t know how to output event ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r47.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r51);

        throw $r47;

     label23:
        return;
    }

    public void add(javax.xml.stream.XMLEventReader) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader r0;
        javax.xml.stream.events.XMLEvent $r2;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r1;
        boolean $z0;

        r1 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r0 := @parameter0: javax.xml.stream.XMLEventReader;

     label1:
        $z0 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        virtualinvoke r1.<org.codehaus.stax2.ri.Stax2EventWriterImpl: void add(javax.xml.stream.events.XMLEvent)>($r2);

        goto label1;

     label2:
        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamWriter2 $r1;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        $r1 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamWriter2: void close()>();

        return;
    }

    public void flush() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamWriter2 $r1;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        $r1 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamWriter2: void flush()>();

        return;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        javax.xml.namespace.NamespaceContext $r2;
        org.codehaus.stax2.XMLStreamWriter2 $r1;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        $r1 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r2 = interfaceinvoke $r1.<org.codehaus.stax2.XMLStreamWriter2: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;
        java.lang.String r1, $r3;
        org.codehaus.stax2.XMLStreamWriter2 $r2;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        $r3 = interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamWriter2: java.lang.String getPrefix(java.lang.String)>(r1);

        return $r3;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.stax2.XMLStreamWriter2 $r2;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamWriter2: void setDefaultNamespace(java.lang.String)>(r1);

        return;
    }

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.namespace.NamespaceContext r1;
        org.codehaus.stax2.XMLStreamWriter2 $r2;
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        $r2 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r2.<org.codehaus.stax2.XMLStreamWriter2: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>(r1);

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.Stax2EventWriterImpl r0;
        java.lang.String r1, r2;
        org.codehaus.stax2.XMLStreamWriter2 $r3;

        r0 := @this: org.codehaus.stax2.ri.Stax2EventWriterImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.stax2.ri.Stax2EventWriterImpl: org.codehaus.stax2.XMLStreamWriter2 mWriter>;

        interfaceinvoke $r3.<org.codehaus.stax2.XMLStreamWriter2: void setPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }
}
