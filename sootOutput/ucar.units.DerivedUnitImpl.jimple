public class ucar.units.DerivedUnitImpl extends ucar.units.UnitImpl implements ucar.units.DerivedUnit, ucar.units.DerivableUnit
{
    private static final long serialVersionUID;
    public static final ucar.units.DerivedUnitImpl DIMENSIONLESS;
    private ucar.units.UnitDimension dimension;

    protected void <init>()
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitName $r2;
        ucar.units.UnitDimension $r1;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = new ucar.units.UnitDimension;

        specialinvoke $r1.<ucar.units.UnitDimension: void <init>()>();

        $r2 = staticinvoke <ucar.units.DerivedUnitImpl: ucar.units.UnitName dimensionlessID()>();

        specialinvoke r0.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension,ucar.units.UnitName)>($r1, $r2);

        return;
    }

    private static ucar.units.UnitName dimensionlessID()
    {
        ucar.units.NameException $r0;
        ucar.units.UnitName r1;

     label1:
        r1 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("1", "1", "1");

     label2:
        goto label4;

     label3:
        $r0 := @caughtexception;

        r1 = null;

     label4:
        return r1;

        catch ucar.units.NameException from label1 to label2 with label3;
    }

    protected void <init>(ucar.units.UnitDimension)
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension r1;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: ucar.units.UnitDimension;

        specialinvoke r0.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension,ucar.units.UnitName)>(r1, null);

        return;
    }

    protected void <init>(ucar.units.UnitName)
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitName r1;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: ucar.units.UnitName;

        specialinvoke r0.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension,ucar.units.UnitName)>(null, r1);

        return;
    }

    protected void <init>(ucar.units.UnitDimension, ucar.units.UnitName)
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitName r1;
        ucar.units.UnitDimension r2;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r2 := @parameter0: ucar.units.UnitDimension;

        r1 := @parameter1: ucar.units.UnitName;

        specialinvoke r0.<ucar.units.UnitImpl: void <init>(ucar.units.UnitName)>(r1);

        r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension> = r2;

        return;
    }

    protected void setDimension(ucar.units.UnitDimension)
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension r1;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: ucar.units.UnitDimension;

        r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension> = r1;

        return;
    }

    public final ucar.units.UnitDimension getDimension()
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension $r1;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        return $r1;
    }

    public final ucar.units.QuantityDimension getQuantityDimension()
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension $r1;
        ucar.units.QuantityDimension $r2;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = virtualinvoke r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension getDimension()>();

        $r2 = virtualinvoke $r1.<ucar.units.UnitDimension: ucar.units.QuantityDimension getQuantityDimension()>();

        return $r2;
    }

    public final boolean isReciprocalOf(ucar.units.DerivedUnit)
    {
        ucar.units.DerivedUnit r1;
        ucar.units.UnitDimension $r2, $r3;
        ucar.units.DerivedUnitImpl r0;
        boolean $z0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: ucar.units.DerivedUnit;

        $r2 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r3 = interfaceinvoke r1.<ucar.units.DerivedUnit: ucar.units.UnitDimension getDimension()>();

        $z0 = virtualinvoke $r2.<ucar.units.UnitDimension: boolean isReciprocalOf(ucar.units.Dimension)>($r3);

        return $z0;
    }

    public final ucar.units.DerivedUnit getDerivedUnit()
    {
        ucar.units.DerivedUnitImpl r0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        return r0;
    }

    public final ucar.units.Unit clone(ucar.units.UnitName)
    {
        ucar.units.UnitName r2;
        ucar.units.UnitDimension $r3;
        ucar.units.DerivedUnitImpl $r0, r1;

        r1 := @this: ucar.units.DerivedUnitImpl;

        r2 := @parameter0: ucar.units.UnitName;

        $r0 = new ucar.units.DerivedUnitImpl;

        $r3 = r1.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        specialinvoke $r0.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension,ucar.units.UnitName)>($r3, r2);

        return $r0;
    }

    protected ucar.units.Unit myMultiplyBy(ucar.units.Unit) throws ucar.units.MultiplyException
    {
        ucar.units.DerivedUnit $r3;
        ucar.units.UnitDimension $r1, $r4, $r5, $r6;
        ucar.units.Unit r2, r7;
        int $i0, $i1;
        ucar.units.DerivedUnitImpl r0, $r8;
        boolean $z0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r2 := @parameter0: ucar.units.Unit;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $i0 = virtualinvoke $r1.<ucar.units.UnitDimension: int getRank()>();

        if $i0 != 0 goto label1;

        r7 = r2;

        goto label5;

     label1:
        $z0 = r2 instanceof ucar.units.DerivedUnit;

        if $z0 != 0 goto label2;

        r7 = interfaceinvoke r2.<ucar.units.Unit: ucar.units.Unit multiplyBy(ucar.units.Unit)>(r0);

        goto label5;

     label2:
        $r3 = (ucar.units.DerivedUnit) r2;

        $r4 = interfaceinvoke $r3.<ucar.units.DerivedUnit: ucar.units.UnitDimension getDimension()>();

        $i1 = virtualinvoke $r4.<ucar.units.UnitDimension: int getRank()>();

        if $i1 != 0 goto label3;

        $r8 = r0;

        goto label4;

     label3:
        $r8 = new ucar.units.DerivedUnitImpl;

        $r5 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r6 = virtualinvoke $r5.<ucar.units.UnitDimension: ucar.units.UnitDimension multiplyBy(ucar.units.UnitDimension)>($r4);

        specialinvoke $r8.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension)>($r6);

     label4:
        r7 = $r8;

     label5:
        return r7;
    }

    protected ucar.units.Unit myDivideBy(ucar.units.Unit) throws ucar.units.OperationException
    {
        ucar.units.DerivedUnit $r3;
        ucar.units.UnitDimension $r1, $r4, $r5, $r6;
        ucar.units.Unit r2, r7;
        int $i0, $i1, $i3;
        ucar.units.DerivedUnitImpl r0, $r8, $r9;
        boolean $z0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r2 := @parameter0: ucar.units.Unit;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $i0 = virtualinvoke $r1.<ucar.units.UnitDimension: int getRank()>();

        if $i0 != 0 goto label1;

        $i3 = (int) -1;

        r7 = interfaceinvoke r2.<ucar.units.Unit: ucar.units.Unit raiseTo(int)>($i3);

        goto label5;

     label1:
        $z0 = r2 instanceof ucar.units.DerivedUnit;

        if $z0 != 0 goto label2;

        r7 = interfaceinvoke r2.<ucar.units.Unit: ucar.units.Unit divideInto(ucar.units.Unit)>(r0);

        goto label5;

     label2:
        $r3 = (ucar.units.DerivedUnit) r2;

        $r4 = interfaceinvoke $r3.<ucar.units.DerivedUnit: ucar.units.UnitDimension getDimension()>();

        $i1 = virtualinvoke $r4.<ucar.units.UnitDimension: int getRank()>();

        if $i1 != 0 goto label3;

        $r8 = r0;

        goto label4;

     label3:
        $r9 = new ucar.units.DerivedUnitImpl;

        $r8 = $r9;

        $r5 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r6 = virtualinvoke $r5.<ucar.units.UnitDimension: ucar.units.UnitDimension divideBy(ucar.units.UnitDimension)>($r4);

        specialinvoke $r9.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension)>($r6);

     label4:
        r7 = $r8;

     label5:
        return r7;
    }

    protected ucar.units.Unit myDivideInto(ucar.units.Unit) throws ucar.units.OperationException
    {
        ucar.units.Unit r0, $r2;
        ucar.units.DerivedUnitImpl r1;

        r1 := @this: ucar.units.DerivedUnitImpl;

        r0 := @parameter0: ucar.units.Unit;

        $r2 = interfaceinvoke r0.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>(r1);

        return $r2;
    }

    protected ucar.units.Unit myRaiseTo(int)
    {
        ucar.units.UnitDimension $r1, $r2;
        int i0;
        ucar.units.DerivedUnitImpl r0, $r3;

        r0 := @this: ucar.units.DerivedUnitImpl;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r3 = r0;

        goto label2;

     label1:
        $r3 = new ucar.units.DerivedUnitImpl;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r2 = virtualinvoke $r1.<ucar.units.UnitDimension: ucar.units.UnitDimension raiseTo(int)>(i0);

        specialinvoke $r3.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitDimension)>($r2);

     label2:
        return $r3;
    }

    public final float toDerivedUnit(float)
    {
        float f0;
        ucar.units.DerivedUnitImpl r0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        f0 := @parameter0: float;

        return f0;
    }

    public final double toDerivedUnit(double)
    {
        ucar.units.DerivedUnitImpl r0;
        double d0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        d0 := @parameter0: double;

        return d0;
    }

    public final float[] toDerivedUnit(float[], float[])
    {
        int $i0;
        ucar.units.DerivedUnitImpl r2;
        float[] r0, r1;

        r2 := @this: ucar.units.DerivedUnitImpl;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        if r0 == r1 goto label1;

        $i0 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i0);

     label1:
        return r1;
    }

    public final double[] toDerivedUnit(double[], double[])
    {
        double[] r0, r1;
        int $i0;
        ucar.units.DerivedUnitImpl r2;

        r2 := @this: ucar.units.DerivedUnitImpl;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        if r0 == r1 goto label1;

        $i0 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i0);

     label1:
        return r1;
    }

    public final float fromDerivedUnit(float)
    {
        float f0;
        ucar.units.DerivedUnitImpl r0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        f0 := @parameter0: float;

        return f0;
    }

    public final double fromDerivedUnit(double)
    {
        ucar.units.DerivedUnitImpl r0;
        double d0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        d0 := @parameter0: double;

        return d0;
    }

    public final float[] fromDerivedUnit(float[], float[])
    {
        ucar.units.DerivedUnitImpl r0;
        float[] r1, r2, $r3;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: float[];

        r2 := @parameter1: float[];

        $r3 = virtualinvoke r0.<ucar.units.DerivedUnitImpl: float[] toDerivedUnit(float[],float[])>(r1, r2);

        return $r3;
    }

    public final double[] fromDerivedUnit(double[], double[])
    {
        double[] r1, r2, $r3;
        ucar.units.DerivedUnitImpl r0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = virtualinvoke r0.<ucar.units.DerivedUnitImpl: double[] toDerivedUnit(double[],double[])>(r1, r2);

        return $r3;
    }

    public final boolean isCompatible(ucar.units.Unit)
    {
        ucar.units.DerivedUnit $r1;
        ucar.units.Unit r0;
        ucar.units.DerivedUnitImpl r2;
        boolean $z0, $z1, $z2;

        r2 := @this: ucar.units.DerivedUnitImpl;

        r0 := @parameter0: ucar.units.Unit;

        $r1 = interfaceinvoke r0.<ucar.units.Unit: ucar.units.DerivedUnit getDerivedUnit()>();

        $z0 = virtualinvoke r2.<ucar.units.DerivedUnitImpl: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<ucar.units.DerivedUnitImpl: boolean isReciprocalOf(ucar.units.DerivedUnit)>($r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.units.DerivedUnit r2;
        ucar.units.UnitDimension $r3, $r4;
        ucar.units.DerivedUnitImpl r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.units.DerivedUnitImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.units.DerivedUnit;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (ucar.units.DerivedUnit) r1;

        $z1 = r0 instanceof ucar.units.BaseUnit;

        if $z1 == 0 goto label3;

        $z2 = r2 instanceof ucar.units.BaseUnit;

        if $z2 == 0 goto label3;

        $z3 = 0;

        goto label4;

     label3:
        $r3 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r4 = interfaceinvoke r2.<ucar.units.DerivedUnit: ucar.units.UnitDimension getDimension()>();

        $z3 = virtualinvoke $r3.<ucar.units.UnitDimension: boolean equals(java.lang.Object)>($r4);

     label4:
        return $z3;
    }

    public int hashCode()
    {
        ucar.units.UnitDimension $r1;
        int $i0;
        ucar.units.DerivedUnitImpl r0;
        boolean $z0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $z0 = r0 instanceof ucar.units.BaseUnit;

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $i0 = virtualinvoke $r1.<ucar.units.UnitDimension: int hashCode()>();

     label2:
        return $i0;
    }

    public boolean isDimensionless()
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension $r1;
        boolean $z0;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $z0 = virtualinvoke $r1.<ucar.units.UnitDimension: boolean isDimensionless()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        ucar.units.DerivedUnitImpl r0;
        java.lang.String $r1, $r2;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = specialinvoke r0.<ucar.units.UnitImpl: java.lang.String toString()>();

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<ucar.units.DerivedUnitImpl: java.lang.String getCanonicalString()>();

     label2:
        return $r2;
    }

    public java.lang.String getCanonicalString()
    {
        ucar.units.DerivedUnitImpl r0;
        ucar.units.UnitDimension $r1;
        java.lang.String $r2;

        r0 := @this: ucar.units.DerivedUnitImpl;

        $r1 = r0.<ucar.units.DerivedUnitImpl: ucar.units.UnitDimension dimension>;

        $r2 = virtualinvoke $r1.<ucar.units.UnitDimension: java.lang.String toString()>();

        return $r2;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r12, $r14, $r15, $r16, $r20, $r22, $r23, $r24, $r28, $r30, $r31, $r32, $r36, $r38, $r39, $r40, $r42, $r44, $r45, $r47, $r49, $r50, $r52, $r54, $r58, $r60, $r62, $r63, $r65, $r67, $r71, $r73, $r75, $r76, $r78, $r80, $r81, $r83, $r85, $r86, $r88, $r90, $r91, $r93, $r95, $r96, $r99, $r101, $r102, $r103, $r105, $r107, $r108;
        ucar.units.RegularBaseQuantity $r1, $r10;
        double[] $r55, $r56, $r57, $r68, $r69, $r70;
        java.lang.String $r8, $r17, $r25, $r33, $r41, $r46, $r51, $r59, $r64, $r72, $r77, $r82, $r87, $r92, $r97, $r104, $r109;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        ucar.units.UnitName $r0, $r9;
        ucar.units.Unit $r18, $r26, $r34, $r98;
        java.lang.String[] r110;
        ucar.units.DerivedUnitImpl r19, r27, r35;
        double $d0, $d1, $d2, $d3;
        java.io.PrintStream $r4, $r13, $r21, $r29, $r37, $r43, $r48, $r53, $r61, $r66, $r74, $r79, $r84, $r89, $r94, $r100, $r106;
        ucar.units.BaseUnit $r2, $r11;

        r110 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("second", null, "s");

        $r1 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity TIME>;

        $r2 = staticinvoke <ucar.units.BaseUnit: ucar.units.BaseUnit getOrCreate(ucar.units.UnitName,ucar.units.BaseQuantity)>($r0, $r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("second = \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("meter", null, "m");

        $r10 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r11 = staticinvoke <ucar.units.BaseUnit: ucar.units.BaseUnit getOrCreate(ucar.units.UnitName,ucar.units.BaseQuantity)>($r9, $r10);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter = \"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = virtualinvoke $r11.<ucar.units.BaseUnit: ucar.units.Unit myMultiplyBy(ucar.units.Unit)>($r2);

        r19 = (ucar.units.DerivedUnitImpl) $r18;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meterSecond = \"");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r26 = virtualinvoke $r11.<ucar.units.BaseUnit: ucar.units.Unit myDivideBy(ucar.units.Unit)>($r2);

        r27 = (ucar.units.DerivedUnitImpl) $r26;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meterPerSecond = \"");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = virtualinvoke $r2.<ucar.units.BaseUnit: ucar.units.Unit myDivideBy(ucar.units.Unit)>($r11);

        r35 = (ucar.units.DerivedUnitImpl) $r34;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("secondPerMeter = \"");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meterPerSecond.isReciprocalOf(secondPerMeter)=");

        $z0 = virtualinvoke r27.<ucar.units.DerivedUnitImpl: boolean isReciprocalOf(ucar.units.DerivedUnit)>(r35);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r46);

        $r48 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.toDerivedUnit(1.0)=");

        $d0 = virtualinvoke $r11.<ucar.units.BaseUnit: double toDerivedUnit(double)>(1.0);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r51);

        $r53 = <java.lang.System: java.io.PrintStream out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.toDerivedUnit(new double[] {1,2,3}, new double[3])[1]=");

        $r55 = newarray (double)[3];

        $r55[0] = 1.0;

        $r55[1] = 2.0;

        $r55[2] = 3.0;

        $r56 = newarray (double)[3];

        $r57 = virtualinvoke $r11.<ucar.units.BaseUnit: double[] toDerivedUnit(double[],double[])>($r55, $r56);

        $d1 = $r57[1];

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>($r59);

        $r61 = <java.lang.System: java.io.PrintStream out>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.fromDerivedUnit(1.0)=");

        $d2 = virtualinvoke $r11.<ucar.units.BaseUnit: double fromDerivedUnit(double)>(1.0);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r66 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.fromDerivedUnit(new double[] {1,2,3}, new double[3])[2]=");

        $r68 = newarray (double)[3];

        $r68[0] = 1.0;

        $r68[1] = 2.0;

        $r68[2] = 3.0;

        $r69 = newarray (double)[3];

        $r70 = virtualinvoke $r11.<ucar.units.BaseUnit: double[] fromDerivedUnit(double[],double[])>($r68, $r69);

        $d3 = $r70[2];

        $r71 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r66.<java.io.PrintStream: void println(java.lang.String)>($r72);

        $r74 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isCompatible(meter)=");

        $z1 = virtualinvoke $r11.<ucar.units.BaseUnit: boolean isCompatible(ucar.units.Unit)>($r11);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>($r77);

        $r79 = <java.lang.System: java.io.PrintStream out>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isCompatible(second)=");

        $z2 = virtualinvoke $r11.<ucar.units.BaseUnit: boolean isCompatible(ucar.units.Unit)>($r2);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r79.<java.io.PrintStream: void println(java.lang.String)>($r82);

        $r84 = <java.lang.System: java.io.PrintStream out>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.equals(meter)=");

        $z3 = virtualinvoke $r11.<ucar.units.BaseUnit: boolean equals(java.lang.Object)>($r11);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r84.<java.io.PrintStream: void println(java.lang.String)>($r87);

        $r89 = <java.lang.System: java.io.PrintStream out>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.equals(second)=");

        $z4 = virtualinvoke $r11.<ucar.units.BaseUnit: boolean equals(java.lang.Object)>($r2);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r92);

        $r94 = <java.lang.System: java.io.PrintStream out>;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isDimensionless()=");

        $z5 = virtualinvoke $r11.<ucar.units.BaseUnit: boolean isDimensionless()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r97);

        $r98 = virtualinvoke $r2.<ucar.units.BaseUnit: ucar.units.Unit myDivideBy(ucar.units.Unit)>($r2);

        $r100 = <java.lang.System: java.io.PrintStream out>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sPerS = \"");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>($r104);

        $r106 = <java.lang.System: java.io.PrintStream out>;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sPerS.isDimensionless()=");

        $z6 = interfaceinvoke $r98.<ucar.units.Unit: boolean isDimensionless()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r106.<java.io.PrintStream: void println(java.lang.String)>($r109);

        virtualinvoke r27.<ucar.units.DerivedUnitImpl: ucar.units.Unit raiseTo(int)>(2);

        virtualinvoke $r11.<ucar.units.BaseUnit: ucar.units.Unit myDivideBy(ucar.units.Unit)>(r27);

        return;
    }

    static void <clinit>()
    {
        ucar.units.DerivedUnitImpl $r0;

        <ucar.units.DerivedUnitImpl: long serialVersionUID> = 1L;

        $r0 = new ucar.units.DerivedUnitImpl;

        specialinvoke $r0.<ucar.units.DerivedUnitImpl: void <init>()>();

        <ucar.units.DerivedUnitImpl: ucar.units.DerivedUnitImpl DIMENSIONLESS> = $r0;

        return;
    }
}
