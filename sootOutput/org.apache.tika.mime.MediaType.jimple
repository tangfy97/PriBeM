public final class org.apache.tika.mime.MediaType extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.util.regex.Pattern SPECIAL;
    private static final java.util.regex.Pattern SPECIAL_OR_WHITESPACE;
    private static final java.lang.String VALID_CHARS;
    private static final java.util.regex.Pattern TYPE_PATTERN;
    private static final java.util.regex.Pattern CHARSET_FIRST_PATTERN;
    private static final java.util.Map SIMPLE_TYPES;
    public static final org.apache.tika.mime.MediaType OCTET_STREAM;
    public static final org.apache.tika.mime.MediaType TEXT_PLAIN;
    public static final org.apache.tika.mime.MediaType TEXT_HTML;
    public static final org.apache.tika.mime.MediaType APPLICATION_XML;
    public static final org.apache.tika.mime.MediaType APPLICATION_ZIP;
    private final java.lang.String string;
    private final int slash;
    private final int semicolon;
    private final java.util.Map parameters;
    static final boolean $assertionsDisabled;

    public static org.apache.tika.mime.MediaType application(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        org.apache.tika.mime.MediaType $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        return $r5;
    }

    public static org.apache.tika.mime.MediaType audio(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        org.apache.tika.mime.MediaType $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audio/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        return $r5;
    }

    public static org.apache.tika.mime.MediaType image(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        org.apache.tika.mime.MediaType $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        return $r5;
    }

    public static org.apache.tika.mime.MediaType text(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        org.apache.tika.mime.MediaType $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        return $r5;
    }

    public static org.apache.tika.mime.MediaType video(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        org.apache.tika.mime.MediaType $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("video/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        return $r5;
    }

    public static transient java.util.Set set(org.apache.tika.mime.MediaType[])
    {
        java.util.HashSet $r0;
        int i0, i1;
        org.apache.tika.mime.MediaType[] r1;
        java.util.Set $r2;
        org.apache.tika.mime.MediaType r3;

        r1 := @parameter0: org.apache.tika.mime.MediaType[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        if r3 == null goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r2;
    }

    public static transient java.util.Set set(java.lang.String[])
    {
        java.util.HashSet $r0;
        int i0, i1;
        java.util.Set $r2;
        java.lang.String[] r1;
        java.lang.String r3;
        org.apache.tika.mime.MediaType $r4;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $r4 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>(r3);

        if $r4 == null goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r2;
    }

    public static org.apache.tika.mime.MediaType parse(java.lang.String)
    {
        java.util.regex.Matcher $r5, $r7;
        java.util.Map $r1, $r2, $r12, $r17, $r18, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.util.regex.Pattern $r4, $r6;
        java.lang.Throwable $r23;
        org.apache.tika.mime.MediaType r24, $r25, $r26, $r27;
        int $i0, $i1, $i2, $i4;
        java.lang.String r0, $r9, $r10, $r11, $r14, $r15, $r16, $r19, $r20;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = <org.apache.tika.mime.MediaType: java.util.Map SIMPLE_TYPES>;

        entermonitor $r1;

     label02:
        $r2 = <org.apache.tika.mime.MediaType: java.util.Map SIMPLE_TYPES>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r24 = (org.apache.tika.mime.MediaType) $r3;

        if r24 != null goto label05;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i4 = (int) -1;

        if $i0 != $i4 goto label04;

        exitmonitor $r1;

     label03:
        return null;

     label04:
        $r18 = <org.apache.tika.mime.MediaType: java.util.Map SIMPLE_TYPES>;

        $i1 = interfaceinvoke $r18.<java.util.Map: int size()>();

        if $i1 >= 10000 goto label05;

        $r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $z2 = staticinvoke <org.apache.tika.mime.MediaType: boolean isSimpleName(java.lang.String)>($r19);

        if $z2 == 0 goto label05;

        $i2 = $i0 + 1;

        $r20 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $z3 = staticinvoke <org.apache.tika.mime.MediaType: boolean isSimpleName(java.lang.String)>($r20);

        if $z3 == 0 goto label05;

        $r25 = new org.apache.tika.mime.MediaType;

        specialinvoke $r25.<org.apache.tika.mime.MediaType: void <init>(java.lang.String,int)>(r0, $i0);

        r24 = $r25;

        $r22 = <org.apache.tika.mime.MediaType: java.util.Map SIMPLE_TYPES>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r25);

     label05:
        if r24 == null goto label07;

        exitmonitor $r1;

     label06:
        return r24;

     label07:
        exitmonitor $r1;

     label08:
        goto label11;

     label09:
        $r23 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r23;

     label11:
        $r4 = <org.apache.tika.mime.MediaType: java.util.regex.Pattern TYPE_PATTERN>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label12;

        $r26 = new org.apache.tika.mime.MediaType;

        $r14 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r15 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r16 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r17 = staticinvoke <org.apache.tika.mime.MediaType: java.util.Map parseParameters(java.lang.String)>($r16);

        specialinvoke $r26.<org.apache.tika.mime.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r14, $r15, $r17);

        return $r26;

     label12:
        $r6 = <org.apache.tika.mime.MediaType: java.util.regex.Pattern CHARSET_FIRST_PATTERN>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label13;

        $r27 = new org.apache.tika.mime.MediaType;

        $r9 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r10 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r11 = virtualinvoke $r7.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r12 = staticinvoke <org.apache.tika.mime.MediaType: java.util.Map parseParameters(java.lang.String)>($r11);

        specialinvoke $r27.<org.apache.tika.mime.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r9, $r10, $r12);

        return $r27;

     label13:
        return null;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static boolean isSimpleName(java.lang.String)
    {
        char $c2;
        int $i0, $i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i4 == 45 goto label4;

        $i5 = (int) $c2;

        if $i5 == 43 goto label4;

        $i6 = (int) $c2;

        if $i6 == 46 goto label4;

        $i7 = (int) $c2;

        if $i7 == 95 goto label4;

        $i8 = (int) $c2;

        if 48 > $i8 goto label2;

        $i9 = (int) $c2;

        if $i9 <= 57 goto label4;

     label2:
        $i10 = (int) $c2;

        if 97 > $i10 goto label3;

        $i11 = (int) $c2;

        if $i11 <= 122 goto label4;

     label3:
        return 0;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label6;

        $z0 = 1;

        goto label7;

     label6:
        $z0 = 0;

     label7:
        return $z0;
    }

    private static java.util.Map parseParameters(java.lang.String)
    {
        java.util.HashMap $r8;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10;
        java.lang.String $r1, $r2, $r3, r5, r6, r7;

        r5 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r4;

     label1:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

     label2:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label7;

        r6 = r5;

        r7 = "";

        $i2 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(59);

        $i8 = (int) -1;

        if $i2 == $i8 goto label3;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i6 = $i2 + 1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i6);

        goto label4;

     label3:
        r5 = "";

     label4:
        $i3 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(61);

        $i10 = (int) -1;

        if $i3 == $i10 goto label5;

        $i5 = $i3 + 1;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i5);

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label5:
        $r1 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i4 <= 0 goto label6;

        $r2 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <org.apache.tika.mime.MediaType: java.lang.String unquote(java.lang.String)>($r2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label6:
        goto label2;

     label7:
        return $r8;
    }

    private static java.lang.String unquote(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z1 == 0 goto label3;

     label2:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        goto label1;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z3 == 0 goto label5;

     label4:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label3;

     label5:
        return r0;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.Map)
    {
        java.util.regex.Matcher $r21, $r23;
        java.util.Locale $r2, $r5, $r29;
        java.util.Map r7, $r32;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r10, $r12;
        java.lang.StringBuilder $r8, $r33, $r34, $r35, $r36;
        java.util.regex.Pattern $r20, $r22;
        java.util.SortedMap $r15;
        org.apache.tika.mime.MediaType r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r3, $r4, $r6, $r14, $r18, $r24, $r27, $r28, $r30, $r37, r38, r39, r42;
        java.util.Map$Entry r40, r41;
        java.util.Iterator $r11, $r13;
        java.util.TreeMap $r9;
        java.lang.Object $r16, $r17, $r19, $r25, $r26, $r31;

        r0 := @this: org.apache.tika.mime.MediaType;

        r38 := @parameter0: java.lang.String;

        r39 := @parameter1: java.lang.String;

        r7 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r38.<java.lang.String: java.lang.String trim()>();

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r4 = virtualinvoke r39.<java.lang.String: java.lang.String trim()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r0.<org.apache.tika.mime.MediaType: int slash> = $i0;

        $i1 = r0.<org.apache.tika.mime.MediaType: int slash>;

        $i2 = $i1 + 1;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        r0.<org.apache.tika.mime.MediaType: int semicolon> = $i4;

        $z0 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r32 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.tika.mime.MediaType: java.util.Map parameters> = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.mime.MediaType: java.lang.String string> = $r37;

        goto label8;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = new java.util.TreeMap;

        specialinvoke $r9.<java.util.TreeMap: void <init>()>();

        $r10 = interfaceinvoke r7.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r25 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r26;

        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String trim()>();

        $r29 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r30 = virtualinvoke $r28.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r29);

        $r31 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r9.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        goto label2;

     label3:
        $r12 = interfaceinvoke $r9.<java.util.SortedMap: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r16 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.util.Map$Entry) $r16;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r17 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = (java.lang.String) $r17;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r19 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>();

        r42 = (java.lang.String) $r19;

        $r20 = <org.apache.tika.mime.MediaType: java.util.regex.Pattern SPECIAL_OR_WHITESPACE>;

        $r21 = virtualinvoke $r20.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r42);

        $z3 = virtualinvoke $r21.<java.util.regex.Matcher: boolean find()>();

        if $z3 == 0 goto label5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r22 = <org.apache.tika.mime.MediaType: java.util.regex.Pattern SPECIAL>;

        $r23 = virtualinvoke $r22.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r42);

        $r24 = virtualinvoke $r23.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\\\\$0");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label6;

     label5:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

     label6:
        goto label4;

     label7:
        $r14 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.mime.MediaType: java.lang.String string> = $r14;

        $r15 = staticinvoke <java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)>($r9);

        r0.<org.apache.tika.mime.MediaType: java.util.Map parameters> = $r15;

     label8:
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        java.lang.String r1, r2;
        org.apache.tika.mime.MediaType r0;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        specialinvoke r0.<org.apache.tika.mime.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, $r3);

        return;
    }

    private void <init>(java.lang.String, int)
    {
        java.lang.AssertionError $r9, $r10, $r11, $r12;
        org.apache.tika.mime.MediaType r0;
        java.util.Map $r2;
        int i0, $i1, $i2, $i5, $i6;
        java.lang.String r1, $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        char $c3;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.apache.tika.mime.MediaType: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i5 = (int) -1;

        if i0 != $i5 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = <org.apache.tika.mime.MediaType: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i6 = (int) $c3;

        if $i6 == 47 goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        $z2 = <org.apache.tika.mime.MediaType: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $z5 = staticinvoke <org.apache.tika.mime.MediaType: boolean isSimpleName(java.lang.String)>($r5);

        if $z5 != 0 goto label3;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label3:
        $z3 = <org.apache.tika.mime.MediaType: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $i2 = i0 + 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);

        $z4 = staticinvoke <org.apache.tika.mime.MediaType: boolean isSimpleName(java.lang.String)>($r3);

        if $z4 != 0 goto label4;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label4:
        r0.<org.apache.tika.mime.MediaType: java.lang.String string> = r1;

        r0.<org.apache.tika.mime.MediaType: int slash> = i0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.apache.tika.mime.MediaType: int semicolon> = $i1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.tika.mime.MediaType: java.util.Map parameters> = $r2;

        return;
    }

    private static java.util.Map union(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r1;
        java.util.HashMap $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r0);

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return $r2;
    }

    public void <init>(org.apache.tika.mime.MediaType, java.util.Map)
    {
        java.util.Map r4, $r5, $r6;
        java.lang.String $r2, $r3;
        org.apache.tika.mime.MediaType r0, r1;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        r4 := @parameter1: java.util.Map;

        $r2 = virtualinvoke r1.<org.apache.tika.mime.MediaType: java.lang.String getType()>();

        $r3 = virtualinvoke r1.<org.apache.tika.mime.MediaType: java.lang.String getSubtype()>();

        $r5 = r1.<org.apache.tika.mime.MediaType: java.util.Map parameters>;

        $r6 = staticinvoke <org.apache.tika.mime.MediaType: java.util.Map union(java.util.Map,java.util.Map)>($r5, r4);

        specialinvoke r0.<org.apache.tika.mime.MediaType: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r2, $r3, $r6);

        return;
    }

    public void <init>(org.apache.tika.mime.MediaType, java.lang.String, java.lang.String)
    {
        java.util.Map $r4;
        java.lang.String r2, r3;
        org.apache.tika.mime.MediaType r0, r1;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3);

        specialinvoke r0.<org.apache.tika.mime.MediaType: void <init>(org.apache.tika.mime.MediaType,java.util.Map)>(r1, $r4);

        return;
    }

    public void <init>(org.apache.tika.mime.MediaType, java.nio.charset.Charset)
    {
        java.nio.charset.Charset r2;
        java.lang.String $r3;
        org.apache.tika.mime.MediaType r0, r1;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        r2 := @parameter1: java.nio.charset.Charset;

        $r3 = virtualinvoke r2.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke r0.<org.apache.tika.mime.MediaType: void <init>(org.apache.tika.mime.MediaType,java.lang.String,java.lang.String)>(r1, "charset", $r3);

        return;
    }

    public org.apache.tika.mime.MediaType getBaseType()
    {
        java.util.Map $r1;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.tika.mime.MediaType r0, $r4;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.util.Map parameters>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $i0 = r0.<org.apache.tika.mime.MediaType: int semicolon>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r3);

        return $r4;
    }

    public java.lang.String getType()
    {
        int $i0;
        java.lang.String $r1, $r2;
        org.apache.tika.mime.MediaType r0;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $i0 = r0.<org.apache.tika.mime.MediaType: int slash>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r2;
    }

    public java.lang.String getSubtype()
    {
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2;
        org.apache.tika.mime.MediaType r0;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $i0 = r0.<org.apache.tika.mime.MediaType: int slash>;

        $i2 = $i0 + 1;

        $i1 = r0.<org.apache.tika.mime.MediaType: int semicolon>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        return $r2;
    }

    public boolean hasParameters()
    {
        java.util.Map $r1;
        org.apache.tika.mime.MediaType r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.util.Map parameters>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.util.Map getParameters()
    {
        org.apache.tika.mime.MediaType r0;
        java.util.Map $r1;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.util.Map parameters>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.tika.mime.MediaType r0;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        org.apache.tika.mime.MediaType r1, r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.tika.mime.MediaType;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.tika.mime.MediaType;

        if $z0 == 0 goto label1;

        r1 = (org.apache.tika.mime.MediaType) r0;

        $r4 = r2.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $r3 = r1.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.tika.mime.MediaType r0;

        r0 := @this: org.apache.tika.mime.MediaType;

        $r1 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public int compareTo(org.apache.tika.mime.MediaType)
    {
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.tika.mime.MediaType r0, r1;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: org.apache.tika.mime.MediaType;

        $r3 = r0.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $r2 = r1.<org.apache.tika.mime.MediaType: java.lang.String string>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.tika.mime.MediaType r0, $r2;

        r0 := @this: org.apache.tika.mime.MediaType;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.tika.mime.MediaType) r1;

        $i0 = virtualinvoke r0.<org.apache.tika.mime.MediaType: int compareTo(org.apache.tika.mime.MediaType)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r5;
        org.apache.tika.mime.MediaType $r6, $r7, $r8, $r9, $r10;
        java.lang.Class $r0;
        java.util.regex.Pattern $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        <org.apache.tika.mime.MediaType: java.lang.String VALID_CHARS> = "([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)";

        <org.apache.tika.mime.MediaType: long serialVersionUID> = -3831000556189036392L;

        $r0 = class "Lorg/apache/tika/mime/MediaType;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.tika.mime.MediaType: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\(\\)<>@,;:\\\\\"/\\[\\]\\?=]");

        <org.apache.tika.mime.MediaType: java.util.regex.Pattern SPECIAL> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]");

        <org.apache.tika.mime.MediaType: java.util.regex.Pattern SPECIAL_OR_WHITESPACE> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?s)\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*/\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*($|;.*)");

        <org.apache.tika.mime.MediaType: java.util.regex.Pattern TYPE_PATTERN> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?is)\\s*(charset\\s*=\\s*[^\\c;\\s]+)\\s*;\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*/\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*");

        <org.apache.tika.mime.MediaType: java.util.regex.Pattern CHARSET_FIRST_PATTERN> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <org.apache.tika.mime.MediaType: java.util.Map SIMPLE_TYPES> = $r5;

        $r6 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>("application/octet-stream");

        <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM> = $r6;

        $r7 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>("text/plain");

        <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_PLAIN> = $r7;

        $r8 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>("text/html");

        <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType TEXT_HTML> = $r8;

        $r9 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>("application/xml");

        <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType APPLICATION_XML> = $r9;

        $r10 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>("application/zip");

        <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType APPLICATION_ZIP> = $r10;

        return;
    }
}
