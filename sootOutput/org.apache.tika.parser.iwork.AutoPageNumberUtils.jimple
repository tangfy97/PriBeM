class org.apache.tika.parser.iwork.AutoPageNumberUtils extends java.lang.Object
{
    private static final java.lang.String[] ALPHABET;
    private static final int MAX;

    void <init>()
    {
        org.apache.tika.parser.iwork.AutoPageNumberUtils r0;

        r0 := @this: org.apache.tika.parser.iwork.AutoPageNumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String asAlphaNumeric(int)
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r4;
        int i0, $i1, i2, i3, i4, $i6;
        java.lang.String $r1, $r3;

        i0 := @parameter0: int;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i2 = i0 % 26;

        i3 = i0 / 26;

        if i2 != 0 goto label1;

        $i6 = (int) -1;

        i3 = i3 + $i6;

        i2 = 26;

     label1:
        i4 = 0;

     label2:
        if i4 > i3 goto label3;

        $r2 = <org.apache.tika.parser.iwork.AutoPageNumberUtils: java.lang.String[] ALPHABET>;

        $i1 = i2 - 1;

        $r3 = $r2[$i1];

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String asAlphaNumericLower(int)
    {
        java.util.Locale $r1;
        int i0;
        java.lang.String $r0, $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.tika.parser.iwork.AutoPageNumberUtils: java.lang.String asAlphaNumeric(int)>(i0);

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r2;
    }

    public static java.lang.String asRomanNumerals(int)
    {
        java.lang.StringBuffer $r18;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String $r1, $r7, $r13;
        java.lang.NumberFormatException $r15, $r17;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12, $r14, $r16;

        i2 := @parameter0: int;

        if i2 > 0 goto label1;

        $r15 = new java.lang.NumberFormatException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Roman numerals are 1-3999 (");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label1:
        if i2 <= 3999 goto label2;

        $r17 = new java.lang.NumberFormatException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Roman numerals are 1-3999 (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r7);

        throw $r17;

     label2:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $i0 = staticinvoke <org.apache.tika.parser.iwork.AutoPageNumberUtils: int i2r(java.lang.StringBuffer,int,java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,int)>($r18, i2, "M", 1000, "CM", 900, "D", 500, "CD", 400);

        $i1 = staticinvoke <org.apache.tika.parser.iwork.AutoPageNumberUtils: int i2r(java.lang.StringBuffer,int,java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,int)>($r18, $i0, "C", 100, "XC", 90, "L", 50, "XL", 40);

        i3 = staticinvoke <org.apache.tika.parser.iwork.AutoPageNumberUtils: int i2r(java.lang.StringBuffer,int,java.lang.String,int,java.lang.String,int,java.lang.String,int,java.lang.String,int)>($r18, $i1, "X", 10, "IX", 9, "V", 5, "IV", 4);

     label3:
        if i3 < 1 goto label4;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("I");

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label3;

     label4:
        $r1 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String asRomanNumeralsLower(int)
    {
        java.util.Locale $r1;
        int i0;
        java.lang.String $r0, $r2;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.tika.parser.iwork.AutoPageNumberUtils: java.lang.String asRomanNumerals(int)>(i0);

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r2;
    }

    private static int i2r(java.lang.StringBuffer, int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)
    {
        java.lang.StringBuffer r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2, r3, r4;

        r0 := @parameter0: java.lang.StringBuffer;

        i4 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        i2 := @parameter7: int;

        r1 := @parameter8: java.lang.String;

        i3 := @parameter9: int;

     label1:
        if i4 < i0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        i4 = i4 - i0;

        goto label1;

     label2:
        if i4 < i1 goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        i4 = i4 - i1;

     label3:
        if i4 < i2 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        i4 = i4 - i2;

     label4:
        if i4 < i3 goto label5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        i4 = i4 - i3;

     label5:
        return i4;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.apache.tika.parser.iwork.AutoPageNumberUtils: int MAX> = 26;

        $r0 = newarray (java.lang.String)[26];

        $r0[0] = "A";

        $r0[1] = "B";

        $r0[2] = "C";

        $r0[3] = "D";

        $r0[4] = "E";

        $r0[5] = "F";

        $r0[6] = "G";

        $r0[7] = "H";

        $r0[8] = "I";

        $r0[9] = "J";

        $r0[10] = "K";

        $r0[11] = "L";

        $r0[12] = "M";

        $r0[13] = "N";

        $r0[14] = "O";

        $r0[15] = "P";

        $r0[16] = "Q";

        $r0[17] = "R";

        $r0[18] = "S";

        $r0[19] = "T";

        $r0[20] = "U";

        $r0[21] = "V";

        $r0[22] = "W";

        $r0[23] = "X";

        $r0[24] = "Y";

        $r0[25] = "Z";

        <org.apache.tika.parser.iwork.AutoPageNumberUtils: java.lang.String[] ALPHABET> = $r0;

        return;
    }
}
