public final class org.joda.time.chrono.AssembledChronology$Fields extends java.lang.Object
{
    public org.joda.time.DurationField millis;
    public org.joda.time.DurationField seconds;
    public org.joda.time.DurationField minutes;
    public org.joda.time.DurationField hours;
    public org.joda.time.DurationField halfdays;
    public org.joda.time.DurationField days;
    public org.joda.time.DurationField weeks;
    public org.joda.time.DurationField weekyears;
    public org.joda.time.DurationField months;
    public org.joda.time.DurationField years;
    public org.joda.time.DurationField centuries;
    public org.joda.time.DurationField eras;
    public org.joda.time.DateTimeField millisOfSecond;
    public org.joda.time.DateTimeField millisOfDay;
    public org.joda.time.DateTimeField secondOfMinute;
    public org.joda.time.DateTimeField secondOfDay;
    public org.joda.time.DateTimeField minuteOfHour;
    public org.joda.time.DateTimeField minuteOfDay;
    public org.joda.time.DateTimeField hourOfDay;
    public org.joda.time.DateTimeField clockhourOfDay;
    public org.joda.time.DateTimeField hourOfHalfday;
    public org.joda.time.DateTimeField clockhourOfHalfday;
    public org.joda.time.DateTimeField halfdayOfDay;
    public org.joda.time.DateTimeField dayOfWeek;
    public org.joda.time.DateTimeField dayOfMonth;
    public org.joda.time.DateTimeField dayOfYear;
    public org.joda.time.DateTimeField weekOfWeekyear;
    public org.joda.time.DateTimeField weekyear;
    public org.joda.time.DateTimeField weekyearOfCentury;
    public org.joda.time.DateTimeField monthOfYear;
    public org.joda.time.DateTimeField year;
    public org.joda.time.DateTimeField yearOfEra;
    public org.joda.time.DateTimeField yearOfCentury;
    public org.joda.time.DateTimeField centuryOfEra;
    public org.joda.time.DateTimeField era;

    void <init>()
    {
        org.joda.time.chrono.AssembledChronology$Fields r0;

        r0 := @this: org.joda.time.chrono.AssembledChronology$Fields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void copyFieldsFrom(org.joda.time.Chronology)
    {
        org.joda.time.DateTimeField $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        org.joda.time.chrono.AssembledChronology$Fields r36;
        org.joda.time.DurationField $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.joda.time.Chronology r0;

        r36 := @this: org.joda.time.chrono.AssembledChronology$Fields;

        r0 := @parameter0: org.joda.time.Chronology;

        $r1 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField millis()>();

        $z0 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r1);

        if $z0 == 0 goto label01;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField millis> = $r1;

     label01:
        $r2 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField seconds()>();

        $z1 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r2);

        if $z1 == 0 goto label02;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField seconds> = $r2;

     label02:
        $r3 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField minutes()>();

        $z2 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r3);

        if $z2 == 0 goto label03;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField minutes> = $r3;

     label03:
        $r4 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField hours()>();

        $z3 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r4);

        if $z3 == 0 goto label04;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField hours> = $r4;

     label04:
        $r5 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField halfdays()>();

        $z4 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r5);

        if $z4 == 0 goto label05;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField halfdays> = $r5;

     label05:
        $r6 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField days()>();

        $z5 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r6);

        if $z5 == 0 goto label06;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField days> = $r6;

     label06:
        $r7 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField weeks()>();

        $z6 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r7);

        if $z6 == 0 goto label07;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField weeks> = $r7;

     label07:
        $r8 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField weekyears()>();

        $z7 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r8);

        if $z7 == 0 goto label08;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField weekyears> = $r8;

     label08:
        $r9 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField months()>();

        $z8 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r9);

        if $z8 == 0 goto label09;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField months> = $r9;

     label09:
        $r10 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField years()>();

        $z9 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r10);

        if $z9 == 0 goto label10;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField years> = $r10;

     label10:
        $r11 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField centuries()>();

        $z10 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r11);

        if $z10 == 0 goto label11;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField centuries> = $r11;

     label11:
        $r12 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DurationField eras()>();

        $z11 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DurationField)>($r12);

        if $z11 == 0 goto label12;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DurationField eras> = $r12;

     label12:
        $r13 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfSecond()>();

        $z12 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r13);

        if $z12 == 0 goto label13;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond> = $r13;

     label13:
        $r14 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField millisOfDay()>();

        $z13 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r14);

        if $z13 == 0 goto label14;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay> = $r14;

     label14:
        $r15 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfMinute()>();

        $z14 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r15);

        if $z14 == 0 goto label15;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute> = $r15;

     label15:
        $r16 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField secondOfDay()>();

        $z15 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r16);

        if $z15 == 0 goto label16;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay> = $r16;

     label16:
        $r17 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfHour()>();

        $z16 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r17);

        if $z16 == 0 goto label17;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour> = $r17;

     label17:
        $r18 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField minuteOfDay()>();

        $z17 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r18);

        if $z17 == 0 goto label18;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay> = $r18;

     label18:
        $r19 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfDay()>();

        $z18 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r19);

        if $z18 == 0 goto label19;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay> = $r19;

     label19:
        $r20 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfDay()>();

        $z19 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r20);

        if $z19 == 0 goto label20;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay> = $r20;

     label20:
        $r21 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField hourOfHalfday()>();

        $z20 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r21);

        if $z20 == 0 goto label21;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday> = $r21;

     label21:
        $r22 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField clockhourOfHalfday()>();

        $z21 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r22);

        if $z21 == 0 goto label22;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday> = $r22;

     label22:
        $r23 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField halfdayOfDay()>();

        $z22 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r23);

        if $z22 == 0 goto label23;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay> = $r23;

     label23:
        $r24 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfWeek()>();

        $z23 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r24);

        if $z23 == 0 goto label24;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek> = $r24;

     label24:
        $r25 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfMonth()>();

        $z24 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r25);

        if $z24 == 0 goto label25;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth> = $r25;

     label25:
        $r26 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>();

        $z25 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r26);

        if $z25 == 0 goto label26;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear> = $r26;

     label26:
        $r27 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekOfWeekyear()>();

        $z26 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r27);

        if $z26 == 0 goto label27;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear> = $r27;

     label27:
        $r28 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyear()>();

        $z27 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r28);

        if $z27 == 0 goto label28;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r28;

     label28:
        $r29 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField weekyearOfCentury()>();

        $z28 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r29);

        if $z28 == 0 goto label29;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r29;

     label29:
        $r30 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField monthOfYear()>();

        $z29 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r30);

        if $z29 == 0 goto label30;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear> = $r30;

     label30:
        $r31 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>();

        $z30 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r31);

        if $z30 == 0 goto label31;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r31;

     label31:
        $r32 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfEra()>();

        $z31 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r32);

        if $z31 == 0 goto label32;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r32;

     label32:
        $r33 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField yearOfCentury()>();

        $z32 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r33);

        if $z32 == 0 goto label33;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r33;

     label33:
        $r34 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField centuryOfEra()>();

        $z33 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r34);

        if $z33 == 0 goto label34;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r34;

     label34:
        $r35 = virtualinvoke r0.<org.joda.time.Chronology: org.joda.time.DateTimeField era()>();

        $z34 = staticinvoke <org.joda.time.chrono.AssembledChronology$Fields: boolean isSupported(org.joda.time.DateTimeField)>($r35);

        if $z34 == 0 goto label35;

        r36.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r35;

     label35:
        return;
    }

    private static boolean isSupported(org.joda.time.DurationField)
    {
        org.joda.time.DurationField r0;
        boolean $z0;

        r0 := @parameter0: org.joda.time.DurationField;

        if r0 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<org.joda.time.DurationField: boolean isSupported()>();

     label2:
        return $z0;
    }

    private static boolean isSupported(org.joda.time.DateTimeField)
    {
        org.joda.time.DateTimeField r0;
        boolean $z0;

        r0 := @parameter0: org.joda.time.DateTimeField;

        if r0 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<org.joda.time.DateTimeField: boolean isSupported()>();

     label2:
        return $z0;
    }
}
