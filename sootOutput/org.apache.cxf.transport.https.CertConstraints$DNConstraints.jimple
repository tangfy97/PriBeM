class org.apache.cxf.transport.https.CertConstraints$DNConstraints extends java.lang.Object
{
    private final org.apache.cxf.transport.https.CertConstraints$Combinator combinator;
    private final java.util.Collection dnPatterns;

    void <init>(java.util.List, org.apache.cxf.transport.https.CertConstraints$Combinator) throws java.util.regex.PatternSyntaxException
    {
        org.apache.cxf.transport.https.CertConstraints$Combinator r3, $r9;
        java.util.Iterator $r4;
        java.util.Collection $r7;
        org.apache.cxf.transport.https.CertConstraints$DNConstraints r0;
        java.util.ArrayList $r1;
        java.util.List r2;
        java.lang.Object $r5;
        java.lang.String r6;
        java.util.regex.Pattern $r8;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraints$DNConstraints;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: org.apache.cxf.transport.https.CertConstraints$Combinator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: java.util.Collection dnPatterns> = $r1;

        if r2 != null goto label1;

        $r9 = <org.apache.cxf.transport.https.CertConstraints$Combinator: org.apache.cxf.transport.https.CertConstraints$Combinator ALL>;

        r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: org.apache.cxf.transport.https.CertConstraints$Combinator combinator> = $r9;

        return;

     label1:
        r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: org.apache.cxf.transport.https.CertConstraints$Combinator combinator> = r3;

        $r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: java.util.Collection dnPatterns>;

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r6);

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return;
    }

    final boolean matches(javax.security.auth.x500.X500Principal)
    {
        javax.security.auth.x500.X500Principal r6;
        org.apache.cxf.transport.https.CertConstraints$DNConstraints r0;
        java.util.regex.Matcher $r8;
        int[] $r13;
        int $i0, $i1;
        java.lang.String $r7;
        boolean $z0, $z1, z2, z3, $z4;
        java.util.Iterator $r2;
        org.apache.cxf.transport.https.CertConstraints$Combinator $r9, $r10, $r11, $r12, $r14;
        java.util.Collection $r1;
        java.lang.RuntimeException $r3;
        java.lang.Object $r4;
        java.util.regex.Pattern r5;

        r0 := @this: org.apache.cxf.transport.https.CertConstraints$DNConstraints;

        r6 := @parameter0: javax.security.auth.x500.X500Principal;

        z2 = 0;

        z3 = 0;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: java.util.Collection dnPatterns>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.regex.Pattern) $r4;

        $r7 = virtualinvoke r6.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        $r8 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z1 = virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label2;

        z2 = 1;

        $r12 = r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: org.apache.cxf.transport.https.CertConstraints$Combinator combinator>;

        $r11 = <org.apache.cxf.transport.https.CertConstraints$Combinator: org.apache.cxf.transport.https.CertConstraints$Combinator ANY>;

        if $r12 != $r11 goto label3;

        goto label4;

     label2:
        z3 = 1;

        $r10 = r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: org.apache.cxf.transport.https.CertConstraints$Combinator combinator>;

        $r9 = <org.apache.cxf.transport.https.CertConstraints$Combinator: org.apache.cxf.transport.https.CertConstraints$Combinator ALL>;

        if $r10 != $r9 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        $r13 = <org.apache.cxf.transport.https.CertConstraints$1: int[] $SwitchMap$org$apache$cxf$transport$https$CertConstraints$Combinator>;

        $r14 = r0.<org.apache.cxf.transport.https.CertConstraints$DNConstraints: org.apache.cxf.transport.https.CertConstraints$Combinator combinator>;

        $i0 = virtualinvoke $r14.<org.apache.cxf.transport.https.CertConstraints$Combinator: int ordinal()>();

        $i1 = $r13[$i0];

        lookupswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label8;
            default: goto label9;
        };

     label5:
        if z3 != 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;

     label8:
        return z2;

     label9:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("LOGIC ERROR: Unreachable code");

        throw $r3;
    }
}
