public class org.apache.xmlbeans.impl.values.JavaIntegerHolderEx extends org.apache.xmlbeans.impl.values.JavaIntegerHolder
{
    private org.apache.xmlbeans.SchemaType _schemaType;

    public void <init>(org.apache.xmlbeans.SchemaType, boolean)
    {
        org.apache.xmlbeans.impl.values.JavaIntegerHolderEx r0;
        org.apache.xmlbeans.SchemaType r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntegerHolderEx;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType _schemaType> = r1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void initComplexType(boolean,boolean)>(z0, 0);

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.values.JavaIntegerHolderEx r0;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntegerHolderEx;

        $r1 = r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        return $r1;
    }

    protected void set_text(java.lang.String)
    {
        org.apache.xmlbeans.impl.common.ValidationContext $r1, $r4, $r6;
        org.apache.xmlbeans.impl.values.JavaIntegerHolderEx r3;
        java.math.BigInteger $r2;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r5, $r7;
        boolean $z0, $z1;

        r3 := @this: org.apache.xmlbeans.impl.values.JavaIntegerHolderEx;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger lex(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r1);

        $z0 = virtualinvoke r3.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r7 = r3.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r6 = <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void validateValue(java.math.BigInteger,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($r2, $r7, $r6);

     label1:
        $z1 = virtualinvoke r3.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: boolean _validateOnSet()>();

        if $z1 == 0 goto label2;

        $r5 = r3.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r4 = <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r5, $r4);

     label2:
        specialinvoke r3.<org.apache.xmlbeans.impl.values.JavaIntegerHolder: void set_BigInteger(java.math.BigInteger)>($r2);

        return;
    }

    protected void set_BigInteger(java.math.BigInteger)
    {
        org.apache.xmlbeans.impl.common.ValidationContext $r2;
        org.apache.xmlbeans.impl.values.JavaIntegerHolderEx r0;
        java.math.BigInteger r1;
        org.apache.xmlbeans.SchemaType $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.JavaIntegerHolderEx;

        r1 := @parameter0: java.math.BigInteger;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: boolean _validateOnSet()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType _schemaType>;

        $r2 = <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.impl.common.ValidationContext _voorVc>;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void validateValue(java.math.BigInteger,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r1, $r3, $r2);

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.JavaIntegerHolder: void set_BigInteger(java.math.BigInteger)>(r1);

        return;
    }

    public static void validateLexical(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Object[] $r3, $r5;
        org.apache.xmlbeans.impl.common.ValidationContext r1;
        int $i0;
        java.lang.String r0, $r4;
        org.apache.xmlbeans.SchemaType r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        staticinvoke <org.apache.xmlbeans.impl.values.JavaDecimalHolder: void validateLexical(java.lang.String,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, r1);

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 < 0 goto label1;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r0;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("integer", $r5);

     label1:
        $z0 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean hasPatternFacet()>();

        if $z0 == 0 goto label2;

        $z1 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean matchPatternFacet(java.lang.String)>(r0);

        if $z1 != 0 goto label2;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = "integer";

        $r3[1] = r0;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r2);

        $r3[2] = $r4;

        interfaceinvoke r1.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.1", $r3);

     label2:
        return;
    }

    private static void validateValue(java.math.BigInteger, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        java.lang.Integer $r33, $r34;
        java.math.BigInteger r10, $r13, $r14, $r17, $r20, $r23, $r30, $r32;
        org.apache.xmlbeans.SchemaType r0;
        boolean $z0;
        org.apache.xmlbeans.XmlAnySimpleType $r1, $r3, $r4, $r5, $r6, $r12;
        java.lang.Object[] $r9, $r15, $r18, $r21, $r24, $r27;
        org.apache.xmlbeans.XmlAnySimpleType[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, $i9, i10, $i11, $i13;
        java.lang.String $r11, $r16, $r19, $r22, $r25, $r26, $r31;
        char $c7;
        org.apache.xmlbeans.XmlPositiveInteger r2;
        org.apache.xmlbeans.impl.common.ValidationContext r8;

        r10 := @parameter0: java.math.BigInteger;

        r0 := @parameter1: org.apache.xmlbeans.SchemaType;

        r8 := @parameter2: org.apache.xmlbeans.impl.common.ValidationContext;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(7);

        r2 = (org.apache.xmlbeans.XmlPositiveInteger) $r1;

        if r2 == null goto label02;

        $r26 = virtualinvoke r10.<java.math.BigInteger: java.lang.String toString()>();

        $i5 = virtualinvoke $r26.<java.lang.String: int length()>();

        i8 = $i5;

        if $i5 <= 0 goto label01;

        $c7 = virtualinvoke $r26.<java.lang.String: char charAt(int)>(0);

        $i11 = (int) $c7;

        if $i11 != 45 goto label01;

        $i13 = (int) -1;

        i8 = $i5 + $i13;

     label01:
        $r32 = interfaceinvoke r2.<org.apache.xmlbeans.XmlPositiveInteger: java.math.BigInteger getBigIntegerValue()>();

        $i9 = virtualinvoke $r32.<java.math.BigInteger: int intValue()>();

        if i8 <= $i9 goto label02;

        $r27 = newarray (java.lang.Object)[4];

        $r33 = new java.lang.Integer;

        specialinvoke $r33.<java.lang.Integer: void <init>(int)>(i8);

        $r27[0] = $r33;

        $r27[1] = $r26;

        $r34 = new java.lang.Integer;

        $r30 = interfaceinvoke r2.<org.apache.xmlbeans.XmlPositiveInteger: java.math.BigInteger getBigIntegerValue()>();

        $i6 = virtualinvoke $r30.<java.math.BigInteger: int intValue()>();

        specialinvoke $r34.<java.lang.Integer: void <init>(int)>($i6);

        $r27[2] = $r34;

        $r31 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r27[3] = $r31;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-totalDigits-valid", $r27);

        return;

     label02:
        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(3);

        if $r3 == null goto label03;

        $r23 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)>($r3);

        $i4 = virtualinvoke r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r23);

        if $i4 > 0 goto label03;

        $r24 = newarray (java.lang.Object)[4];

        $r24[0] = "integer";

        $r24[1] = r10;

        $r24[2] = $r23;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r24[3] = $r25;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minExclusive-valid", $r24);

        return;

     label03:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(4);

        if $r4 == null goto label04;

        $r20 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)>($r4);

        $i3 = virtualinvoke r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r20);

        if $i3 >= 0 goto label04;

        $r21 = newarray (java.lang.Object)[4];

        $r21[0] = "integer";

        $r21[1] = r10;

        $r21[2] = $r20;

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r21[3] = $r22;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-minInclusive-valid", $r21);

        return;

     label04:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(5);

        if $r5 == null goto label05;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)>($r5);

        $i2 = virtualinvoke r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r17);

        if $i2 <= 0 goto label05;

        $r18 = newarray (java.lang.Object)[4];

        $r18[0] = "integer";

        $r18[1] = r10;

        $r18[2] = $r17;

        $r19 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r18[3] = $r19;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxInclusive-valid", $r18);

        return;

     label05:
        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType getFacet(int)>(6);

        if $r6 == null goto label06;

        $r14 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)>($r6);

        $i1 = virtualinvoke r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r14);

        if $i1 < 0 goto label06;

        $r15 = newarray (java.lang.Object)[4];

        $r15[0] = "integer";

        $r15[1] = r10;

        $r15[2] = $r14;

        $r16 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r15[3] = $r16;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-maxExclusive-valid", $r15);

        return;

     label06:
        $r7 = interfaceinvoke r0.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.XmlAnySimpleType[] getEnumerationValues()>();

        if $r7 == null goto label10;

        i10 = 0;

     label07:
        $i0 = lengthof $r7;

        if i10 >= $i0 goto label09;

        $r12 = $r7[i10];

        $r13 = staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)>($r12);

        $z0 = virtualinvoke r10.<java.math.BigInteger: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label08;

        return;

     label08:
        i10 = i10 + 1;

        goto label07;

     label09:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "integer";

        $r9[1] = r10;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String readable(org.apache.xmlbeans.SchemaType)>(r0);

        $r9[2] = $r11;

        interfaceinvoke r8.<org.apache.xmlbeans.impl.common.ValidationContext: void invalid(java.lang.String,java.lang.Object[])>("cvc-enumeration-valid", $r9);

     label10:
        return;
    }

    private static java.math.BigInteger getBigIntegerValue(org.apache.xmlbeans.XmlObject)
    {
        java.lang.IllegalStateException $r7;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r2, $r5;
        java.math.BigDecimal $r3;
        java.lang.StringBuffer $r8, $r9, $r10;
        int $i0;
        java.math.BigInteger $r4, $r6;
        org.apache.xmlbeans.XmlObject r0;
        java.lang.String $r11;
        org.apache.xmlbeans.SchemaType $r1;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: int getDecimalSize()>();

        lookupswitch($i0)
        {
            case 1000000: goto label2;
            case 1000001: goto label1;
            default: goto label3;
        };

     label1:
        $r2 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigDecimal bigDecimalValue()>();

        $r4 = virtualinvoke $r3.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();

        return $r4;

     label2:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r0;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.math.BigInteger bigIntegerValue()>();

        return $r6;

     label3:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad facet type for Big Int: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    protected void validate_simpleval(java.lang.String, org.apache.xmlbeans.impl.common.ValidationContext)
    {
        org.apache.xmlbeans.impl.common.ValidationContext r3;
        org.apache.xmlbeans.impl.values.JavaIntegerHolderEx r1;
        java.math.BigInteger $r4;
        java.lang.String r0;
        org.apache.xmlbeans.SchemaType $r2, $r5;

        r1 := @this: org.apache.xmlbeans.impl.values.JavaIntegerHolderEx;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.impl.common.ValidationContext;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void validateLexical(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>(r0, $r2, r3);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: java.math.BigInteger getBigIntegerValue()>();

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: org.apache.xmlbeans.SchemaType schemaType()>();

        staticinvoke <org.apache.xmlbeans.impl.values.JavaIntegerHolderEx: void validateValue(java.math.BigInteger,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.impl.common.ValidationContext)>($r4, $r5, r3);

        return;
    }
}
