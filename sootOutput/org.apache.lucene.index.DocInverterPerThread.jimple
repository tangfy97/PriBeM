final class org.apache.lucene.index.DocInverterPerThread extends org.apache.lucene.index.DocFieldConsumerPerThread
{
    final org.apache.lucene.index.DocInverter docInverter;
    final org.apache.lucene.index.InvertedDocConsumerPerThread consumer;
    final org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer;
    final org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource singleToken;
    final org.apache.lucene.index.DocumentsWriter$DocState docState;
    final org.apache.lucene.index.FieldInvertState fieldState;
    final org.apache.lucene.index.ReusableStringReader stringReader;

    public void <init>(org.apache.lucene.index.DocFieldProcessorPerThread, org.apache.lucene.index.DocInverter)
    {
        org.apache.lucene.index.ReusableStringReader $r3;
        org.apache.lucene.index.DocumentsWriter$DocState $r6;
        org.apache.lucene.index.InvertedDocEndConsumer $r9;
        org.apache.lucene.index.DocInverter r4;
        org.apache.lucene.index.InvertedDocConsumer $r7;
        org.apache.lucene.index.DocFieldProcessorPerThread r5;
        org.apache.lucene.index.InvertedDocEndConsumerPerThread $r10;
        org.apache.lucene.index.FieldInvertState $r2;
        org.apache.lucene.index.DocInverterPerThread r0;
        org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource $r1;
        org.apache.lucene.index.InvertedDocConsumerPerThread $r8;

        r0 := @this: org.apache.lucene.index.DocInverterPerThread;

        r5 := @parameter0: org.apache.lucene.index.DocFieldProcessorPerThread;

        r4 := @parameter1: org.apache.lucene.index.DocInverter;

        specialinvoke r0.<org.apache.lucene.index.DocFieldConsumerPerThread: void <init>()>();

        $r1 = new org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource;

        specialinvoke $r1.<org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource: void <init>(org.apache.lucene.index.DocInverterPerThread$1)>(null);

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.DocInverterPerThread$SingleTokenAttributeSource singleToken> = $r1;

        $r2 = new org.apache.lucene.index.FieldInvertState;

        specialinvoke $r2.<org.apache.lucene.index.FieldInvertState: void <init>()>();

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.FieldInvertState fieldState> = $r2;

        $r3 = new org.apache.lucene.index.ReusableStringReader;

        specialinvoke $r3.<org.apache.lucene.index.ReusableStringReader: void <init>()>();

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.ReusableStringReader stringReader> = $r3;

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.DocInverter docInverter> = r4;

        $r6 = r5.<org.apache.lucene.index.DocFieldProcessorPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState>;

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.DocumentsWriter$DocState docState> = $r6;

        $r7 = r4.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocConsumer consumer>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.InvertedDocConsumer: org.apache.lucene.index.InvertedDocConsumerPerThread addThread(org.apache.lucene.index.DocInverterPerThread)>(r0);

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocConsumerPerThread consumer> = $r8;

        $r9 = r4.<org.apache.lucene.index.DocInverter: org.apache.lucene.index.InvertedDocEndConsumer endConsumer>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.InvertedDocEndConsumer: org.apache.lucene.index.InvertedDocEndConsumerPerThread addThread(org.apache.lucene.index.DocInverterPerThread)>(r0);

        r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer> = $r10;

        return;
    }

    public void startDocument() throws java.io.IOException
    {
        org.apache.lucene.index.InvertedDocEndConsumerPerThread $r2;
        org.apache.lucene.index.InvertedDocConsumerPerThread $r1;
        org.apache.lucene.index.DocInverterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocInverterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocConsumerPerThread consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocConsumerPerThread: void startDocument()>();

        $r2 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocEndConsumerPerThread: void startDocument()>();

        return;
    }

    public org.apache.lucene.index.DocumentsWriter$DocWriter finishDocument() throws java.io.IOException
    {
        org.apache.lucene.index.InvertedDocEndConsumerPerThread $r1;
        org.apache.lucene.index.DocumentsWriter$DocWriter $r3;
        org.apache.lucene.index.DocInverterPerThread r0;
        org.apache.lucene.index.InvertedDocConsumerPerThread $r2;

        r0 := @this: org.apache.lucene.index.DocInverterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocEndConsumerPerThread: void finishDocument()>();

        $r2 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocConsumerPerThread consumer>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.InvertedDocConsumerPerThread: org.apache.lucene.index.DocumentsWriter$DocWriter finishDocument()>();

        return $r3;
    }

    void abort()
    {
        org.apache.lucene.index.InvertedDocEndConsumerPerThread $r2, $r4;
        java.lang.Throwable $r3;
        org.apache.lucene.index.DocInverterPerThread r0;
        org.apache.lucene.index.InvertedDocConsumerPerThread $r1;

        r0 := @this: org.apache.lucene.index.DocInverterPerThread;

     label1:
        $r1 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocConsumerPerThread consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.InvertedDocConsumerPerThread: void abort()>();

        goto label6;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        goto label7;

     label4:
        throw $r3;

     label5:
        return;

     label6:
        $r2 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer>;

        virtualinvoke $r2.<org.apache.lucene.index.InvertedDocEndConsumerPerThread: void abort()>();

        goto label2;

     label7:
        $r4 = r0.<org.apache.lucene.index.DocInverterPerThread: org.apache.lucene.index.InvertedDocEndConsumerPerThread endConsumer>;

        virtualinvoke $r4.<org.apache.lucene.index.InvertedDocEndConsumerPerThread: void abort()>();

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.lucene.index.DocFieldConsumerPerField addField(org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.index.FieldInfo r2;
        org.apache.lucene.index.DocInverterPerThread r1;
        org.apache.lucene.index.DocInverterPerField $r0;

        r1 := @this: org.apache.lucene.index.DocInverterPerThread;

        r2 := @parameter0: org.apache.lucene.index.FieldInfo;

        $r0 = new org.apache.lucene.index.DocInverterPerField;

        specialinvoke $r0.<org.apache.lucene.index.DocInverterPerField: void <init>(org.apache.lucene.index.DocInverterPerThread,org.apache.lucene.index.FieldInfo)>(r1, r2);

        return $r0;
    }
}
