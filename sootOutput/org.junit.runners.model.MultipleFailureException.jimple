public class org.junit.runners.model.MultipleFailureException extends java.lang.Exception
{
    private static final long serialVersionUID;
    private final java.util.List fErrors;

    public void <init>(java.util.List)
    {
        java.util.List r2;
        org.junit.runners.model.MultipleFailureException r0;
        java.util.ArrayList $r1;

        r0 := @this: org.junit.runners.model.MultipleFailureException;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors> = $r1;

        return;
    }

    public java.util.List getFailures()
    {
        java.util.List $r1, $r2;
        org.junit.runners.model.MultipleFailureException r0;

        r0 := @this: org.junit.runners.model.MultipleFailureException;

        $r1 = r0.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.lang.String getMessage()
    {
        java.lang.Throwable r10;
        java.lang.Object[] $r1, $r11;
        org.junit.runners.model.MultipleFailureException r2;
        java.lang.Integer $r4;
        int $i0;
        java.lang.String $r5, $r8, $r13, $r14, $r15;
        boolean $z0;
        java.util.Iterator $r7;
        java.util.List $r3, $r6;
        java.lang.StringBuilder $r0;
        java.lang.Object $r9;
        java.lang.Class $r12;

        r2 := @this: org.junit.runners.model.MultipleFailureException;

        $r0 = new java.lang.StringBuilder;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("There were %d errors:", $r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = r2.<org.junit.runners.model.MultipleFailureException: java.util.List fErrors>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.Throwable) $r9;

        $r11 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r11[0] = $r13;

        $r14 = virtualinvoke r10.<java.lang.Throwable: java.lang.String getMessage()>();

        $r11[1] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n  %s(%s)", $r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label1;

     label2:
        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void assertEmpty(java.util.List) throws java.lang.Throwable
    {
        java.lang.Throwable $r3;
        org.junit.internal.runners.model.MultipleFailureException $r1;
        java.util.List r0;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;

     label2:
        $r1 = new org.junit.internal.runners.model.MultipleFailureException;

        specialinvoke $r1.<org.junit.internal.runners.model.MultipleFailureException: void <init>(java.util.List)>(r0);

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.junit.runners.model.MultipleFailureException: long serialVersionUID> = 1L;

        return;
    }
}
