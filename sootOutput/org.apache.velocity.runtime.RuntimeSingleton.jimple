public class org.apache.velocity.runtime.RuntimeSingleton extends java.lang.Object implements org.apache.velocity.runtime.RuntimeConstants
{
    private static org.apache.velocity.runtime.RuntimeInstance ri;

    public void <init>()
    {
        org.apache.velocity.runtime.RuntimeSingleton r0;

        r0 := @this: org.apache.velocity.runtime.RuntimeSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized void init()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: void init()>();

        return;
    }

    public static boolean isInitialized()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;
        boolean $z0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: boolean isInitialized()>();

        return $z0;
    }

    public static org.apache.velocity.runtime.RuntimeServices getRuntimeServices()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        return $r0;
    }

    public static void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void setProperty(java.lang.String,java.lang.Object)>(r0, r1);

        return;
    }

    public static void setConfiguration(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void setConfiguration(org.apache.commons.collections.ExtendedProperties)>(r0);

        return;
    }

    public static void addProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: void addProperty(java.lang.String,java.lang.Object)>(r0, r1);

        return;
    }

    public static void clearProperty(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void clearProperty(java.lang.String)>(r0);

        return;
    }

    public static java.lang.Object getProperty(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r2;
    }

    public static void init(java.util.Properties)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.util.Properties r0;

        r0 := @parameter0: java.util.Properties;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void init(java.util.Properties)>(r0);

        return;
    }

    public static void init(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void init(java.lang.String)>(r0);

        return;
    }

    public static org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader, java.lang.String) throws org.apache.velocity.runtime.parser.ParseException
    {
        org.apache.velocity.runtime.parser.node.SimpleNode $r3;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.io.Reader r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader, java.lang.String, boolean) throws org.apache.velocity.runtime.parser.ParseException
    {
        org.apache.velocity.runtime.parser.node.SimpleNode $r3;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.io.Reader r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.parser.node.SimpleNode parse(java.io.Reader,java.lang.String,boolean)>(r0, r1, z0);

        return $r3;
    }

    public static org.apache.velocity.Template getTemplate(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;
        org.apache.velocity.Template $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String)>(r0);

        return $r2;
    }

    public static org.apache.velocity.Template getTemplate(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0, r1;
        org.apache.velocity.Template $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.Template getTemplate(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;
        org.apache.velocity.runtime.resource.ContentResource $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String)>(r0);

        return $r2;
    }

    public static org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.ContentResource $r3;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.resource.ContentResource getContent(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static java.lang.String getLoaderNameForResource(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getLoaderNameForResource(java.lang.String)>(r0);

        return $r2;
    }

    public static org.apache.velocity.runtime.log.Log getLog()
    {
        org.apache.velocity.runtime.log.Log $r1;
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r1 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.log.Log getLog()>();

        return $r1;
    }

    public static void warn(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r0.<org.apache.velocity.runtime.log.Log: void warn(java.lang.Object)>(r1);

        return;
    }

    public static void info(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r0.<org.apache.velocity.runtime.log.Log: void info(java.lang.Object)>(r1);

        return;
    }

    public static void error(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r0.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>(r1);

        return;
    }

    public static void debug(java.lang.Object)
    {
        org.apache.velocity.runtime.log.Log $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r0.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>(r1);

        return;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0, r1, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.directive.Directive $r3;
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static boolean addVelocimacro(java.lang.String, org.apache.velocity.runtime.parser.node.Node, java.lang.String[], java.lang.String)
    {
        java.lang.String[] r2;
        org.apache.velocity.runtime.RuntimeInstance $r4;
        java.lang.String r0, r3;
        org.apache.velocity.runtime.parser.node.Node r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.velocity.runtime.parser.node.Node;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        $r4 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r4.<org.apache.velocity.runtime.RuntimeInstance: boolean addVelocimacro(java.lang.String,org.apache.velocity.runtime.parser.node.Node,java.lang.String[],java.lang.String)>(r0, r1, r2, r3);

        return $z0;
    }

    public static boolean addVelocimacro(java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        java.lang.String[] r2;
        org.apache.velocity.runtime.RuntimeInstance $r4;
        java.lang.String r0, r1, r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        $r4 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r4.<org.apache.velocity.runtime.RuntimeInstance: boolean addVelocimacro(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)>(r0, r1, r2, r3);

        return $z0;
    }

    public static boolean isVelocimacro(java.lang.String, java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r2.<org.apache.velocity.runtime.RuntimeInstance: boolean isVelocimacro(java.lang.String,java.lang.String)>(r0, r1);

        return $z0;
    }

    public static boolean dumpVMNamespace(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z0 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: boolean dumpVMNamespace(java.lang.String)>(r0);

        return $z0;
    }

    public static java.lang.String getString(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.String getString(java.lang.String)>(r0);

        return $r2;
    }

    public static int getInt(java.lang.String)
    {
        int $i0;
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $i0 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: int getInt(java.lang.String)>(r0);

        return $i0;
    }

    public static int getInt(java.lang.String, int)
    {
        int i0, $i1;
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $i1 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: int getInt(java.lang.String,int)>(r0, i0);

        return $i1;
    }

    public static boolean getBoolean(java.lang.String, boolean)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;
        boolean z0, $z1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $z1 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: boolean getBoolean(java.lang.String,boolean)>(r0, z0);

        return $z1;
    }

    public static org.apache.commons.collections.ExtendedProperties getConfiguration()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;
        org.apache.commons.collections.ExtendedProperties $r1;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r1 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.commons.collections.ExtendedProperties getConfiguration()>();

        return $r1;
    }

    public static org.apache.velocity.util.introspection.Introspector getIntrospector()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;
        org.apache.velocity.util.introspection.Introspector $r1;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r1 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Introspector getIntrospector()>();

        return $r1;
    }

    public org.apache.velocity.app.event.EventCartridge getEventCartridge()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;
        org.apache.velocity.runtime.RuntimeSingleton r2;
        org.apache.velocity.app.event.EventCartridge $r1;

        r2 := @this: org.apache.velocity.runtime.RuntimeSingleton;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r1 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.app.event.EventCartridge getApplicationEventCartridge()>();

        return $r1;
    }

    public static java.lang.Object getApplicationAttribute(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        org.apache.velocity.runtime.RuntimeInstance $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r2 = virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: java.lang.Object getApplicationAttribute(java.lang.Object)>(r0);

        return $r2;
    }

    public static org.apache.velocity.util.introspection.Uberspect getUberspect()
    {
        org.apache.velocity.util.introspection.Uberspect $r1;
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        $r1 = virtualinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: org.apache.velocity.util.introspection.Uberspect getUberspect()>();

        return $r1;
    }

    public static org.apache.velocity.runtime.RuntimeInstance getRuntimeInstance()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        return $r0;
    }

    public static void removeDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void removeDirective(java.lang.String)>(r0);

        return;
    }

    public static void loadDirective(java.lang.String)
    {
        org.apache.velocity.runtime.RuntimeInstance $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri>;

        virtualinvoke $r1.<org.apache.velocity.runtime.RuntimeInstance: void loadDirective(java.lang.String)>(r0);

        return;
    }

    static void <clinit>()
    {
        org.apache.velocity.runtime.RuntimeInstance $r0;

        $r0 = new org.apache.velocity.runtime.RuntimeInstance;

        specialinvoke $r0.<org.apache.velocity.runtime.RuntimeInstance: void <init>()>();

        <org.apache.velocity.runtime.RuntimeSingleton: org.apache.velocity.runtime.RuntimeInstance ri> = $r0;

        return;
    }
}
