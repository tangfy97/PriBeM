abstract class org.apache.log4j.helpers.PatternParser$NamedPatternConverter extends org.apache.log4j.helpers.PatternConverter
{
    int precision;

    void <init>(org.apache.log4j.helpers.FormattingInfo, int)
    {
        org.apache.log4j.helpers.PatternParser$NamedPatternConverter r0;
        int i0;
        org.apache.log4j.helpers.FormattingInfo r1;

        r0 := @this: org.apache.log4j.helpers.PatternParser$NamedPatternConverter;

        r1 := @parameter0: org.apache.log4j.helpers.FormattingInfo;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.log4j.helpers.PatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo)>(r1);

        r0.<org.apache.log4j.helpers.PatternParser$NamedPatternConverter: int precision> = i0;

        return;
    }

    abstract java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent);

    public java.lang.String convert(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.helpers.PatternParser$NamedPatternConverter r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.log4j.helpers.PatternParser$NamedPatternConverter;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r2 = virtualinvoke r0.<org.apache.log4j.helpers.PatternParser$NamedPatternConverter: java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent)>(r1);

        $i0 = r0.<org.apache.log4j.helpers.PatternParser$NamedPatternConverter: int precision>;

        if $i0 > 0 goto label1;

        return $r2;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i5 = $i1 - 1;

        i6 = r0.<org.apache.log4j.helpers.PatternParser$NamedPatternConverter: int precision>;

     label2:
        if i6 <= 0 goto label4;

        $i3 = i5 - 1;

        $i4 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int,int)>(46, $i3);

        i5 = $i4;

        $i8 = (int) -1;

        if $i4 != $i8 goto label3;

        return $r2;

     label3:
        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label2;

     label4:
        $i2 = i5 + 1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        return $r3;
    }
}
