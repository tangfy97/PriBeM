public class org.apache.solr.client.solrj.response.AnalysisResponseBase extends org.apache.solr.client.solrj.response.SolrResponseBase
{

    public void <init>()
    {
        org.apache.solr.client.solrj.response.AnalysisResponseBase r0;

        r0 := @this: org.apache.solr.client.solrj.response.AnalysisResponseBase;

        specialinvoke r0.<org.apache.solr.client.solrj.response.SolrResponseBase: void <init>()>();

        return;
    }

    protected java.util.List buildPhases(org.apache.solr.common.util.NamedList)
    {
        org.apache.solr.client.solrj.response.AnalysisResponseBase r13;
        java.util.ArrayList $r0;
        org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase $r5;
        int $i0;
        java.lang.String $r7;
        boolean $z0, $z1;
        java.util.Map$Entry r4;
        java.util.Iterator $r2, $r10;
        org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo $r14;
        org.apache.solr.common.util.NamedList r1, r12;
        java.util.List r9;
        java.lang.Object $r3, $r6, $r8, $r11;

        r13 := @this: org.apache.solr.client.solrj.response.AnalysisResponseBase;

        r1 := @parameter0: org.apache.solr.common.util.NamedList;

        $r0 = new java.util.ArrayList;

        $i0 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = new org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        specialinvoke $r5.<org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase: void <init>(java.lang.String)>($r7);

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.util.List) $r8;

        $r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.solr.common.util.NamedList) $r11;

        $r14 = virtualinvoke r13.<org.apache.solr.client.solrj.response.AnalysisResponseBase: org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo buildTokenInfo(org.apache.solr.common.util.NamedList)>(r12);

        staticinvoke <org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase: void access$000(org.apache.solr.client.solrj.response.AnalysisResponseBase$AnalysisPhase,org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo)>($r5, $r14);

        goto label2;

     label3:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label4:
        return $r0;
    }

    protected org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo buildTokenInfo(org.apache.solr.common.util.NamedList)
    {
        org.apache.solr.client.solrj.response.AnalysisResponseBase r16;
        java.lang.Integer $r8, $r10, $r12;
        int $i0, $i1, $i2;
        java.lang.Boolean r14;
        java.lang.String r2, r4, r6;
        boolean $z0;
        org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo $r15;
        org.apache.solr.common.util.NamedList r0;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        r16 := @this: org.apache.solr.client.solrj.response.AnalysisResponseBase;

        r0 := @parameter0: org.apache.solr.common.util.NamedList;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("text");

        r2 = (java.lang.String) $r1;

        $r3 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("rawText");

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("type");

        r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("start");

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("end");

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $r11 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("position");

        $r12 = (java.lang.Integer) $r11;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("match");

        r14 = (java.lang.Boolean) $r13;

        $r15 = new org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo;

        if r14 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r14.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        specialinvoke $r15.<org.apache.solr.client.solrj.response.AnalysisResponseBase$TokenInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int,boolean)>(r2, r4, r6, $i0, $i1, $i2, $z0);

        return $r15;
    }
}
