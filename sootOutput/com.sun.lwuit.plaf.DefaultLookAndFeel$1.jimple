class com.sun.lwuit.plaf.DefaultLookAndFeel$1 extends com.sun.lwuit.Label
{
    final com.sun.lwuit.TabbedPane val$tp;
    final boolean val$isSelected;
    final boolean val$cellHasFocus;
    final com.sun.lwuit.plaf.Style val$cellSelectedStyle;
    final com.sun.lwuit.plaf.Style val$cellStyle;
    final com.sun.lwuit.plaf.Style val$tabbedPaneStyle;
    final int val$cellOffsetX;
    final com.sun.lwuit.geom.Dimension val$contentPaneSize;
    final com.sun.lwuit.geom.Dimension val$cellsPreferredSize;
    final int val$cellOffsetY;
    final com.sun.lwuit.plaf.DefaultLookAndFeel this$0;

    void <init>(com.sun.lwuit.plaf.DefaultLookAndFeel, java.lang.String, com.sun.lwuit.TabbedPane, boolean, boolean, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, com.sun.lwuit.plaf.Style, int, com.sun.lwuit.geom.Dimension, com.sun.lwuit.geom.Dimension, int)
    {
        com.sun.lwuit.plaf.Style r3, r4, r5;
        com.sun.lwuit.geom.Dimension r6, r7;
        com.sun.lwuit.plaf.DefaultLookAndFeel r1;
        int i0, i1;
        com.sun.lwuit.plaf.DefaultLookAndFeel$1 r0;
        com.sun.lwuit.TabbedPane r2;
        java.lang.String r8;
        boolean z0, z1;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel$1;

        r1 := @parameter0: com.sun.lwuit.plaf.DefaultLookAndFeel;

        r8 := @parameter1: java.lang.String;

        r2 := @parameter2: com.sun.lwuit.TabbedPane;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: com.sun.lwuit.plaf.Style;

        r4 := @parameter6: com.sun.lwuit.plaf.Style;

        r5 := @parameter7: com.sun.lwuit.plaf.Style;

        i0 := @parameter8: int;

        r6 := @parameter9: com.sun.lwuit.geom.Dimension;

        r7 := @parameter10: com.sun.lwuit.geom.Dimension;

        i1 := @parameter11: int;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.DefaultLookAndFeel this$0> = r1;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.TabbedPane val$tp> = r2;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected> = z0;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$cellHasFocus> = z1;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$cellSelectedStyle> = r3;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$cellStyle> = r4;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$tabbedPaneStyle> = r5;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetX> = i0;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$contentPaneSize> = r6;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$cellsPreferredSize> = r7;

        r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetY> = i1;

        specialinvoke r0.<com.sun.lwuit.Label: void <init>(java.lang.String)>(r8);

        return;
    }

    public void paint(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.Style $r3, $r4, $r6, $r7, $r11, $r12, $r18, $r19;
        com.sun.lwuit.TabbedPane $r1, $r2, $r16, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, i93, $i94, $i95, $i96, $i97, $i98, $i99;
        com.sun.lwuit.Graphics r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.sun.lwuit.geom.Dimension $r8, $r9, $r10, $r13, $r14, $r15, $r17, $r20;
        com.sun.lwuit.plaf.DefaultLookAndFeel$1 r0;

        r0 := @this: com.sun.lwuit.plaf.DefaultLookAndFeel$1;

        r5 := @parameter0: com.sun.lwuit.Graphics;

        $r1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.TabbedPane val$tp>;

        $i0 = virtualinvoke $r1.<com.sun.lwuit.TabbedPane: int getTabbedPaneBorderWidth()>();

        i93 = $i0 * 2;

        $r2 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.TabbedPane val$tp>;

        $i1 = virtualinvoke $r2.<com.sun.lwuit.TabbedPane: int getTabPlacement()>();

        $z0 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected>;

        if $z0 == 0 goto label01;

        $z5 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$cellHasFocus>;

        if $z5 == 0 goto label01;

        i93 = $i0 * 3;

        $r18 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style getStyle()>();

        $r19 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$cellSelectedStyle>;

        $i92 = virtualinvoke $r19.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke $r18.<com.sun.lwuit.plaf.Style: void setFgColor(int)>($i92);

        goto label02;

     label01:
        $r3 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style getStyle()>();

        $r4 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$cellStyle>;

        $i2 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke $r3.<com.sun.lwuit.plaf.Style: void setFgColor(int)>($i2);

     label02:
        specialinvoke r0.<com.sun.lwuit.Label: void paint(com.sun.lwuit.Graphics)>(r5);

        $z6 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected>;

        if $z6 != 0 goto label03;

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setColor(int)>(0);

        $i88 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i89 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i90 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        $i91 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int,byte)>($i88, $i89, $i90, $i91, 47);

     label03:
        $r6 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style getStyle()>();

        $i3 = virtualinvoke $r6.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setColor(int)>($i3);

        if $i1 == 0 goto label04;

        if $i1 != 2 goto label11;

     label04:
        if $i1 != 0 goto label06;

        $z2 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected>;

        if $z2 == 0 goto label05;

        $i44 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i45 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i46 = $i45 + $i0;

        $i47 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i44, $i46, $i47, i93);

     label05:
        $r11 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$tabbedPaneStyle>;

        $i37 = virtualinvoke $r11.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setColor(int)>($i37);

        $i38 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i39 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i40 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i38, $i39, $i40, $i0);

        $i41 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i42 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i43 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i41, $i42, $i0, $i43);

        goto label08;

     label06:
        $z1 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected>;

        if $z1 == 0 goto label07;

        $i31 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i32 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i33 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        $i34 = $i32 + $i33;

        $i35 = $i34 - i93;

        $i36 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i31, $i35, $i36, i93);

     label07:
        $r7 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$tabbedPaneStyle>;

        $i4 = virtualinvoke $r7.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setColor(int)>($i4);

        $i5 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i6 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i7 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        $i8 = $i6 + $i7;

        $i9 = $i8 - $i0;

        $i10 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i5, $i9, $i10, $i0);

        $i11 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i12 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i13 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i11, $i12, $i0, $i13);

     label08:
        $i94 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i95 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetX>;

        $i96 = $i94 - $i95;

        $i97 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        $i98 = $i96 + $i97;

        $r20 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$contentPaneSize>;

        $i99 = virtualinvoke $r20.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        if $i98 != $i99 goto label09;

        $i26 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetX>;

        $i27 = $i98 + $i26;

        $i28 = $i27 - $i0;

        $i29 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i30 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i28, $i29, $i0, $i30);

     label09:
        $r8 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$cellsPreferredSize>;

        $i14 = virtualinvoke $r8.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r9 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$contentPaneSize>;

        $i15 = virtualinvoke $r9.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        if $i14 >= $i15 goto label10;

        $i16 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i17 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        $i18 = $i16 + $i17;

        $r10 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$cellsPreferredSize>;

        $i19 = virtualinvoke $r10.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        if $i18 != $i19 goto label10;

        $i20 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i21 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        $i22 = $i20 + $i21;

        $i23 = $i22 - $i0;

        $i24 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i25 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i23, $i24, $i0, $i25);

     label10:
        goto label18;

     label11:
        $z3 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: boolean val$isSelected>;

        if $z3 == 0 goto label12;

        $i83 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i84 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i85 = $i84 + $i0;

        $i86 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i83, $i85, $i86, i93);

     label12:
        $r12 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.plaf.Style val$tabbedPaneStyle>;

        $i48 = virtualinvoke $r12.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void setColor(int)>($i48);

        $i49 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i50 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i51 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i49, $i50, $i51, $i0);

        $i52 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i53 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetY>;

        $i54 = $i52 - $i53;

        $i55 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        $i87 = $i54 + $i55;

        $r13 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$contentPaneSize>;

        $i56 = virtualinvoke $r13.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        if $i87 != $i56 goto label13;

        $i78 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i79 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int val$cellOffsetY>;

        $i80 = $i87 + $i79;

        $i81 = $i80 - $i0;

        $i82 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i78, $i81, $i82, $i0);

     label13:
        $r14 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$cellsPreferredSize>;

        $i57 = virtualinvoke $r14.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $r15 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$contentPaneSize>;

        $i58 = virtualinvoke $r15.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        if $i57 >= $i58 goto label14;

        $i68 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i69 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        $i70 = $i68 + $i69;

        $r17 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.geom.Dimension val$cellsPreferredSize>;

        $i71 = virtualinvoke $r17.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        if $i70 != $i71 goto label14;

        $i72 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i73 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i74 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        $i75 = $i73 + $i74;

        $i76 = $i75 - $i0;

        $i77 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i72, $i76, $i77, $i0);

     label14:
        $r21 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.TabbedPane val$tp>;

        $z7 = virtualinvoke $r21.<com.sun.lwuit.TabbedPane: boolean isRTL()>();

        if $z7 != 0 goto label15;

        if $i1 == 1 goto label16;

     label15:
        $r16 = r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: com.sun.lwuit.TabbedPane val$tp>;

        $z4 = virtualinvoke $r16.<com.sun.lwuit.TabbedPane: boolean isRTL()>();

        if $z4 == 0 goto label17;

        if $i1 != 3 goto label17;

     label16:
        $i65 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i66 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i67 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i65, $i66, $i0, $i67);

        goto label18;

     label17:
        $i59 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getX()>();

        $i60 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getWidth()>();

        $i61 = $i59 + $i60;

        $i62 = $i61 - $i0;

        $i63 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getY()>();

        $i64 = virtualinvoke r0.<com.sun.lwuit.plaf.DefaultLookAndFeel$1: int getHeight()>();

        virtualinvoke r5.<com.sun.lwuit.Graphics: void fillRect(int,int,int,int)>($i62, $i63, $i0, $i64);

     label18:
        return;
    }
}
