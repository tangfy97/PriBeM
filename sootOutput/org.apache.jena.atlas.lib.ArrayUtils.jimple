public class org.apache.jena.atlas.lib.ArrayUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.jena.atlas.lib.ArrayUtils r0;

        r0 := @this: org.apache.jena.atlas.lib.ArrayUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object[] alloc(java.lang.Class, int)
    {
        java.lang.Object[] $r2, $r3;
        int i0;
        java.lang.Class r0;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, i0);

        $r2 = (java.lang.Object[]) $r1;

        $r3 = (java.lang.Object[]) $r2;

        return $r3;
    }

    public static java.lang.Object[] copy(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r0, $r1;

        r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.ArrayUtils: java.lang.Object[] copy(java.lang.Object[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.Object[] copy(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0, $r1;
        int i0, i1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }
}
