public final enum class org.codehaus.jackson.annotate.JsonMethod extends java.lang.Enum
{
    public static final enum org.codehaus.jackson.annotate.JsonMethod GETTER;
    public static final enum org.codehaus.jackson.annotate.JsonMethod SETTER;
    public static final enum org.codehaus.jackson.annotate.JsonMethod CREATOR;
    public static final enum org.codehaus.jackson.annotate.JsonMethod FIELD;
    public static final enum org.codehaus.jackson.annotate.JsonMethod IS_GETTER;
    public static final enum org.codehaus.jackson.annotate.JsonMethod NONE;
    public static final enum org.codehaus.jackson.annotate.JsonMethod ALL;
    private static final org.codehaus.jackson.annotate.JsonMethod[] $VALUES;

    public static org.codehaus.jackson.annotate.JsonMethod[] values()
    {
        java.lang.Object $r1;
        org.codehaus.jackson.annotate.JsonMethod[] $r0, $r2;

        $r0 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.codehaus.jackson.annotate.JsonMethod[]) $r1;

        return $r2;
    }

    public static org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.codehaus.jackson.annotate.JsonMethod $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/annotate/JsonMethod;", r0);

        $r2 = (org.codehaus.jackson.annotate.JsonMethod) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.codehaus.jackson.annotate.JsonMethod r0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean creatorEnabled()
    {
        org.codehaus.jackson.annotate.JsonMethod r0, $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        $r1 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod CREATOR>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        if r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean getterEnabled()
    {
        org.codehaus.jackson.annotate.JsonMethod r0, $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        $r1 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod GETTER>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        if r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isGetterEnabled()
    {
        org.codehaus.jackson.annotate.JsonMethod r0, $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        $r1 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod IS_GETTER>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        if r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean setterEnabled()
    {
        org.codehaus.jackson.annotate.JsonMethod r0, $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        $r1 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod SETTER>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        if r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean fieldEnabled()
    {
        org.codehaus.jackson.annotate.JsonMethod r0, $r1, $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.annotate.JsonMethod;

        $r1 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod FIELD>;

        if r0 == $r1 goto label1;

        $r2 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        if r0 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.annotate.JsonMethod[] $r7;
        org.codehaus.jackson.annotate.JsonMethod $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r0.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("GETTER", 0);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod GETTER> = $r0;

        $r1 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r1.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("SETTER", 1);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod SETTER> = $r1;

        $r2 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r2.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("CREATOR", 2);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod CREATOR> = $r2;

        $r3 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r3.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("FIELD", 3);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod FIELD> = $r3;

        $r4 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r4.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("IS_GETTER", 4);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod IS_GETTER> = $r4;

        $r5 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r5.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("NONE", 5);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod NONE> = $r5;

        $r6 = new org.codehaus.jackson.annotate.JsonMethod;

        specialinvoke $r6.<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>("ALL", 6);

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL> = $r6;

        $r7 = newarray (org.codehaus.jackson.annotate.JsonMethod)[7];

        $r8 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod GETTER>;

        $r7[0] = $r8;

        $r9 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod SETTER>;

        $r7[1] = $r9;

        $r10 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod CREATOR>;

        $r7[2] = $r10;

        $r11 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod FIELD>;

        $r7[3] = $r11;

        $r12 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod IS_GETTER>;

        $r7[4] = $r12;

        $r13 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod NONE>;

        $r7[5] = $r13;

        $r14 = <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod ALL>;

        $r7[6] = $r14;

        <org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod[] $VALUES> = $r7;

        return;
    }
}
