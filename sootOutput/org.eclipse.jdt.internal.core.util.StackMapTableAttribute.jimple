public class org.eclipse.jdt.internal.core.util.StackMapTableAttribute extends org.eclipse.jdt.internal.core.util.ClassFileAttribute implements org.eclipse.jdt.core.util.IStackMapTableAttribute
{
    private static final org.eclipse.jdt.core.util.IStackMapFrame[] NO_FRAMES;
    private static final byte[] NO_ENTRIES;
    private int numberOfEntries;
    private org.eclipse.jdt.core.util.IStackMapFrame[] frames;
    private byte[] bytes;

    static void <clinit>()
    {
        org.eclipse.jdt.core.util.IStackMapFrame[] $r0;
        byte[] $r1;

        $r0 = newarray (org.eclipse.jdt.core.util.IStackMapFrame)[0];

        <org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] NO_FRAMES> = $r0;

        $r1 = newarray (byte)[0];

        <org.eclipse.jdt.internal.core.util.StackMapTableAttribute: byte[] NO_ENTRIES> = $r1;

        return;
    }

    public void <init>(byte[], org.eclipse.jdt.core.util.IConstantPool, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        byte[] r1, $r4, $r5;
        org.eclipse.jdt.internal.core.util.StackMapTableAttribute r0;
        java.lang.Object[] $r8;
        long $l2;
        org.eclipse.jdt.core.util.IStackMapFrame[] $r3, $r6;
        int i0, $i1, $i3, $i4, $i5, $i6, i7, i8;
        org.eclipse.jdt.core.util.IConstantPool r2;
        org.eclipse.jdt.internal.core.util.StackMapFrame $r7;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapTableAttribute;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.eclipse.jdt.core.util.IConstantPool;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, i0);

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: int u2At(byte[],int,int)>(r1, 6, i0);

        r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: int numberOfEntries> = $i1;

        if $i1 == 0 goto label3;

        i7 = 8;

        $r6 = newarray (org.eclipse.jdt.core.util.IStackMapFrame)[$i1];

        r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] frames> = $r6;

        i8 = 0;

        goto label2;

     label1:
        $r7 = new org.eclipse.jdt.internal.core.util.StackMapFrame;

        $i4 = i0 + i7;

        specialinvoke $r7.<org.eclipse.jdt.internal.core.util.StackMapFrame: void <init>(byte[],org.eclipse.jdt.core.util.IConstantPool,int)>(r1, r2, $i4);

        $r8 = r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] frames>;

        $r8[i8] = $r7;

        $i5 = virtualinvoke $r7.<org.eclipse.jdt.internal.core.util.StackMapFrame: int sizeInBytes()>();

        i7 = i7 + $i5;

        i8 = i8 + 1;

     label2:
        if i8 < $i1 goto label1;

        goto label4;

     label3:
        $r3 = <org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] NO_FRAMES>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] frames> = $r3;

     label4:
        $l2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: long u4At(byte[],int,int)>(r1, 2, i0);

        $i6 = (int) $l2;

        if $i1 == 0 goto label5;

        $i3 = i0 + 6;

        $r5 = newarray (byte)[$i6];

        r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: byte[] bytes> = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i3, $r5, 0, $i6);

        goto label6;

     label5:
        $r4 = <org.eclipse.jdt.internal.core.util.StackMapTableAttribute: byte[] NO_ENTRIES>;

        r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: byte[] bytes> = $r4;

     label6:
        return;
    }

    public int getNumberOfEntries()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.StackMapTableAttribute r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapTableAttribute;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: int numberOfEntries>;

        return $i0;
    }

    public org.eclipse.jdt.core.util.IStackMapFrame[] getStackMapFrame()
    {
        org.eclipse.jdt.core.util.IStackMapFrame[] $r1;
        org.eclipse.jdt.internal.core.util.StackMapTableAttribute r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapTableAttribute;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: org.eclipse.jdt.core.util.IStackMapFrame[] frames>;

        return $r1;
    }

    public byte[] getBytes()
    {
        byte[] $r1;
        org.eclipse.jdt.internal.core.util.StackMapTableAttribute r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.StackMapTableAttribute;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.StackMapTableAttribute: byte[] bytes>;

        return $r1;
    }
}
