public class org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader extends org.springframework.instrument.classloading.ShadowingClassLoader
{
    private static final java.util.Enumeration EMPTY_URL_ENUMERATION;
    private java.util.Map overrides;

    static void <clinit>()
    {
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader$1 $r0;

        $r0 = new org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader$1;

        specialinvoke $r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader$1: void <init>()>();

        <org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Enumeration EMPTY_URL_ENUMERATION> = $r0;

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.util.HashMap $r2;
        java.lang.ClassLoader r1;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: void <init>(java.lang.ClassLoader)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides> = $r2;

        return;
    }

    public void override(java.lang.String, java.lang.String)
    {
        java.util.Map $r3;
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void suppress(java.lang.String)
    {
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public void copyOverrides(org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader)
    {
        java.util.Map $r2, $r3;
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0, r1;

        r1 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r0 := @parameter0: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Other ClassLoader must not be null");

        $r3 = r1.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $r2 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r2);

        return;
    }

    public java.net.URL getResource(java.lang.String)
    {
        java.net.URL $r3, $r7;
        java.util.Map $r2, $r4;
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.lang.Object $r5;
        java.lang.String r1, r6;
        boolean $z0;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r4 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.String) $r5;

        if r6 == null goto label1;

        $r7 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.net.URL getResource(java.lang.String)>(r6);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;

     label3:
        $r3 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        return $r3;
    }

    public java.io.InputStream getResourceAsStream(java.lang.String)
    {
        java.util.Map $r2, $r4;
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.lang.Object $r5;
        java.lang.String r1, r6;
        boolean $z0;
        java.io.InputStream $r3, $r7;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r4 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.String) $r5;

        if r6 == null goto label1;

        $r7 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r6);

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;

     label3:
        $r3 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Enumeration getResources(java.lang.String) throws java.io.IOException
    {
        java.util.Enumeration $r3, $r7;
        java.util.Map $r2, $r4;
        org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader r0;
        java.lang.Object $r5;
        java.lang.String r1, r6;
        boolean $z0;

        r0 := @this: org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r4 = r0.<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Map overrides>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.lang.String) $r5;

        if r6 == null goto label1;

        $r7 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.util.Enumeration getResources(java.lang.String)>(r6);

        goto label2;

     label1:
        $r7 = <org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Enumeration EMPTY_URL_ENUMERATION>;

     label2:
        return $r7;

     label3:
        $r3 = specialinvoke r0.<org.springframework.instrument.classloading.ShadowingClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1);

        return $r3;
    }
}
