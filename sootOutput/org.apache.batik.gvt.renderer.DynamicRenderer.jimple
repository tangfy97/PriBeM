public class org.apache.batik.gvt.renderer.DynamicRenderer extends org.apache.batik.gvt.renderer.StaticRenderer
{
    static final int COPY_OVERHEAD;
    static final int COPY_LINE_OVERHEAD;
    org.apache.batik.ext.awt.geom.RectListManager damagedAreas;

    public void <init>()
    {
        org.apache.batik.gvt.renderer.DynamicRenderer r0;

        r0 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        specialinvoke r0.<org.apache.batik.gvt.renderer.StaticRenderer: void <init>()>();

        return;
    }

    public void <init>(java.awt.RenderingHints, java.awt.geom.AffineTransform)
    {
        org.apache.batik.gvt.renderer.DynamicRenderer r0;
        java.awt.RenderingHints r1;
        java.awt.geom.AffineTransform r2;

        r0 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        r1 := @parameter0: java.awt.RenderingHints;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<org.apache.batik.gvt.renderer.StaticRenderer: void <init>(java.awt.RenderingHints,java.awt.geom.AffineTransform)>(r1, r2);

        return;
    }

    protected org.apache.batik.ext.awt.image.rendered.CachableRed setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed)
    {
        org.apache.batik.gvt.renderer.DynamicRenderer r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed r0;

        r1 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        return r0;
    }

    public void flush(java.awt.Rectangle)
    {
        org.apache.batik.gvt.renderer.DynamicRenderer r0;
        java.awt.Rectangle r1;

        r0 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        r1 := @parameter0: java.awt.Rectangle;

        return;
    }

    public void flush(java.util.Collection)
    {
        org.apache.batik.gvt.renderer.DynamicRenderer r0;
        java.util.Collection r1;

        r0 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        r1 := @parameter0: java.util.Collection;

        return;
    }

    protected void updateWorkingBuffers()
    {
        java.awt.Point $r15;
        java.awt.image.SampleModel $r5, $r14;
        int i0, i1, $i2, $i3;
        org.apache.batik.gvt.renderer.DynamicRenderer r0;
        boolean $z0, $z1;
        java.awt.image.BufferedImage $r7, $r19;
        org.apache.batik.gvt.GraphicsNode $r12;
        org.apache.batik.ext.awt.image.renderable.Filter $r1, $r13;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r2, $r3, $r4, $r20, $r23;
        java.awt.image.ColorModel $r21, $r24;
        java.awt.image.WritableRaster $r6, $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r22;

        r0 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        $r1 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.renderable.Filter rootFilter>;

        if $r1 != null goto label1;

        $r12 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.gvt.GraphicsNode rootGN>;

        $r13 = interfaceinvoke $r12.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.renderable.Filter rootFilter> = $r13;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR> = null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed renderGNR()>();

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR> = $r2;

        $r3 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        if $r3 != null goto label2;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster> = null;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage workingOffScreen> = null;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster> = null;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage currentOffScreen> = null;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentBaseRaster> = null;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster> = null;

        return;

     label2:
        $r4 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        $r5 = interfaceinvoke $r4.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        i0 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: int offScreenWidth>;

        i1 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: int offScreenHeight>;

        $r6 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        if $r6 == null goto label3;

        $r10 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        $i2 = virtualinvoke $r10.<java.awt.image.Raster: int getWidth()>();

        if $i2 < i0 goto label3;

        $r11 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        $i3 = virtualinvoke $r11.<java.awt.image.Raster: int getHeight()>();

        if $i3 >= i1 goto label4;

     label3:
        $r14 = virtualinvoke $r5.<java.awt.image.SampleModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>(i0, i1);

        $r15 = new java.awt.Point;

        specialinvoke $r15.<java.awt.Point: void <init>(int,int)>(0, 0);

        $r16 = staticinvoke <java.awt.image.Raster: java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel,java.awt.Point)>($r14, $r15);

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster> = $r16;

        $r17 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        $r18 = virtualinvoke $r17.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>(0, 0, i0, i1, 0, 0, null);

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster> = $r18;

        $r19 = new java.awt.image.BufferedImage;

        $r20 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        $r21 = interfaceinvoke $r20.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r22 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster>;

        $r23 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        $r24 = interfaceinvoke $r23.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $z0 = virtualinvoke $r24.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        specialinvoke $r19.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r21, $r22, $z0, null);

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage workingOffScreen> = $r19;

     label4:
        $z1 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: boolean isDoubleBuffered>;

        if $z1 != 0 goto label5;

        $r7 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage workingOffScreen>;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage currentOffScreen> = $r7;

        $r8 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentBaseRaster> = $r8;

        $r9 = r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster>;

        r0.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster> = $r9;

     label5:
        return;
    }

    public void repaint(org.apache.batik.ext.awt.geom.RectListManager)
    {
        java.awt.Color $r20, $r21, $r34, $r35;
        org.apache.batik.ext.awt.geom.RectListManager r0, $r17, $r18, $r19, $r22;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r2, $r6, r29;
        java.lang.Throwable $r28;
        org.apache.batik.ext.awt.image.PadMode $r31;
        org.apache.batik.gvt.renderer.DynamicRenderer r1;
        java.lang.NullPointerException r39, r40, r41, r42, r43, r44, r45, r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.awt.image.BufferedImage $r15, r38;
        java.awt.Rectangle $r7, $r9, $r11, $r25, $r32, r33, r37;
        org.apache.batik.ext.awt.image.rendered.PadRed $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.util.Iterator $r23, $r36;
        java.awt.image.WritableRaster $r3, r4, r5, $r8, $r12, $r13, $r14, $r16, $r26, $r27;
        java.lang.Object $r10, $r24;

        r1 := @this: org.apache.batik.gvt.renderer.DynamicRenderer;

        r0 := @parameter0: org.apache.batik.ext.awt.geom.RectListManager;

        if r0 != null goto label01;

        return;

     label01:
        virtualinvoke r1.<org.apache.batik.gvt.renderer.DynamicRenderer: void updateWorkingBuffers()>();

        $r2 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        if $r2 == null goto label02;

        $r3 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        if $r3 != null goto label03;

     label02:
        return;

     label03:
        r29 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        r4 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster>;

        r5 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster>;

        $r6 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: org.apache.batik.ext.awt.image.rendered.CachableRed rootCR>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r8 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster>;

        $r9 = virtualinvoke $r8.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        $i1 = $r9.<java.awt.Rectangle: int x>;

        $i0 = $r7.<java.awt.Rectangle: int x>;

        if $i1 < $i0 goto label04;

        $i15 = $r9.<java.awt.Rectangle: int y>;

        $i14 = $r7.<java.awt.Rectangle: int y>;

        if $i15 < $i14 goto label04;

        $i17 = $r9.<java.awt.Rectangle: int x>;

        $i16 = $r9.<java.awt.Rectangle: int width>;

        $i21 = $i17 + $i16;

        $i19 = $r7.<java.awt.Rectangle: int x>;

        $i18 = $r7.<java.awt.Rectangle: int width>;

        $i20 = $i19 + $i18;

        if $i21 > $i20 goto label04;

        $i23 = $r9.<java.awt.Rectangle: int y>;

        $i22 = $r9.<java.awt.Rectangle: int height>;

        $i27 = $i23 + $i22;

        $i25 = $r7.<java.awt.Rectangle: int y>;

        $i24 = $r7.<java.awt.Rectangle: int height>;

        $i26 = $i25 + $i24;

        if $i27 <= $i26 goto label05;

     label04:
        $r30 = new org.apache.batik.ext.awt.image.rendered.PadRed;

        $r31 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r30.<org.apache.batik.ext.awt.image.rendered.PadRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,org.apache.batik.ext.awt.image.PadMode,java.awt.RenderingHints)>(r29, $r9, $r31, null);

        r29 = $r30;

     label05:
        $r32 = virtualinvoke r5.<java.awt.image.Raster: java.awt.Rectangle getBounds()>();

        entermonitor r4;

     label06:
        if 0 == 0 goto label07;

        interfaceinvoke r29.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>(r5);

        goto label15;

     label07:
        $z0 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: boolean isDoubleBuffered>;

        if $z0 == 0 goto label11;

        $r16 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster>;

        if $r16 == null goto label11;

        $r17 = r1.<org.apache.batik.gvt.renderer.DynamicRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        if $r17 == null goto label11;

        $r18 = r1.<org.apache.batik.gvt.renderer.DynamicRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        virtualinvoke $r18.<org.apache.batik.ext.awt.geom.RectListManager: void subtract(org.apache.batik.ext.awt.geom.RectListManager,int,int)>(r0, 1000, 10);

        $r19 = r1.<org.apache.batik.gvt.renderer.DynamicRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        virtualinvoke $r19.<org.apache.batik.ext.awt.geom.RectListManager: void mergeRects(int,int)>(1000, 10);

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 255, 50);

        $r21 = new java.awt.Color;

        specialinvoke $r21.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 50);

        $r22 = r1.<org.apache.batik.gvt.renderer.DynamicRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas>;

        $r23 = virtualinvoke $r22.<org.apache.batik.ext.awt.geom.RectListManager: java.util.Iterator iterator()>();

        goto label10;

     label08:
        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.awt.Rectangle) $r24;

        $z3 = virtualinvoke $r32.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r33);

        if $z3 != 0 goto label09;

        goto label10;

     label09:
        $r25 = virtualinvoke $r32.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>(r33);

        $r26 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster>;

        $i13 = $r25.<java.awt.Rectangle: int x>;

        $i12 = $r25.<java.awt.Rectangle: int y>;

        $i11 = $r25.<java.awt.Rectangle: int width>;

        $i10 = $r25.<java.awt.Rectangle: int height>;

        $i9 = $r25.<java.awt.Rectangle: int x>;

        $i8 = $r25.<java.awt.Rectangle: int y>;

        $r27 = virtualinvoke $r26.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>($i13, $i12, $i11, $i10, $i9, $i8, null);

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: void copyData(java.awt.image.Raster,java.awt.image.WritableRaster)>($r27, r5);

        if null == null goto label10;

        r39 = new java.lang.NullPointerException;

        specialinvoke r39.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke g2d#24_1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack64)");

        throw r39;

     label10:
        $z4 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label08;

     label11:
        $r34 = new java.awt.Color;

        specialinvoke $r34.<java.awt.Color: void <init>(int,int,int,int)>(255, 0, 0, 50);

        $r35 = new java.awt.Color;

        specialinvoke $r35.<java.awt.Color: void <init>(int,int,int,int)>(0, 0, 0, 50);

        $r36 = virtualinvoke r0.<org.apache.batik.ext.awt.geom.RectListManager: java.util.Iterator iterator()>();

        goto label14;

     label12:
        $r10 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.awt.Rectangle) $r10;

        $z1 = virtualinvoke $r32.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>(r37);

        if $z1 != 0 goto label13;

        goto label14;

     label13:
        $r11 = virtualinvoke $r32.<java.awt.Rectangle: java.awt.Rectangle intersection(java.awt.Rectangle)>(r37);

        $i7 = $r11.<java.awt.Rectangle: int x>;

        $i6 = $r11.<java.awt.Rectangle: int y>;

        $i5 = $r11.<java.awt.Rectangle: int width>;

        $i4 = $r11.<java.awt.Rectangle: int height>;

        $i3 = $r11.<java.awt.Rectangle: int x>;

        $i2 = $r11.<java.awt.Rectangle: int y>;

        $r12 = virtualinvoke r5.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableChild(int,int,int,int,int,int,int[])>($i7, $i6, $i5, $i4, $i3, $i2, null);

        interfaceinvoke r29.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>($r12);

        if null == null goto label14;

        r43 = new java.lang.NullPointerException;

        specialinvoke r43.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke g2d#24_7.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack30#35)");

        throw r43;

     label14:
        $z5 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label12;

     label15:
        exitmonitor r4;

        goto label17;

     label16:
        $r28 := @caughtexception;

        exitmonitor r4;

        throw $r28;

     label17:
        $z2 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted()>();

        if $z2 == 0 goto label18;

        return;

     label18:
        r38 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage workingOffScreen>;

        $r13 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentBaseRaster>;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingBaseRaster> = $r13;

        $r14 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster>;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster workingRaster> = $r14;

        $r15 = r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage currentOffScreen>;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage workingOffScreen> = $r15;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentRaster> = r5;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.WritableRaster currentBaseRaster> = r4;

        r1.<org.apache.batik.gvt.renderer.StaticRenderer: java.awt.image.BufferedImage currentOffScreen> = r38;

        r1.<org.apache.batik.gvt.renderer.DynamicRenderer: org.apache.batik.ext.awt.geom.RectListManager damagedAreas> = r0;

        return;

        catch java.lang.Throwable from label06 to label16 with label16;
    }

    public static void <clinit>()
    {
        <org.apache.batik.gvt.renderer.DynamicRenderer: int COPY_LINE_OVERHEAD> = 10;

        <org.apache.batik.gvt.renderer.DynamicRenderer: int COPY_OVERHEAD> = 1000;

        return;
    }
}
