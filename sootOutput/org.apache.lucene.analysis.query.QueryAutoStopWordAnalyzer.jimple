public final class org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer extends org.apache.lucene.analysis.AnalyzerWrapper
{
    private final org.apache.lucene.analysis.Analyzer delegate;
    private final java.util.Map stopWordsPerField;
    public static final float defaultMaxDocFreqPercent;
    private final org.apache.lucene.util.Version matchVersion;

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        org.apache.lucene.analysis.Analyzer r2;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r3 := @parameter2: org.apache.lucene.index.IndexReader;

        specialinvoke r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexReader,float)>(r1, r2, r3, 0.4F);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexReader, int) throws java.io.IOException
    {
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        org.apache.lucene.analysis.Analyzer r2;
        java.util.Collection $r4;
        int i0;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r3 := @parameter2: org.apache.lucene.index.IndexReader;

        i0 := @parameter3: int;

        $r4 = staticinvoke <org.apache.lucene.index.MultiFields: java.util.Collection getIndexedFields(org.apache.lucene.index.IndexReader)>(r3);

        specialinvoke r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexReader,java.util.Collection,int)>(r1, r2, r3, $r4, i0);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexReader, float) throws java.io.IOException
    {
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        org.apache.lucene.analysis.Analyzer r2;
        java.util.Collection $r4;
        float f0;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r3 := @parameter2: org.apache.lucene.index.IndexReader;

        f0 := @parameter3: float;

        $r4 = staticinvoke <org.apache.lucene.index.MultiFields: java.util.Collection getIndexedFields(org.apache.lucene.index.IndexReader)>(r3);

        specialinvoke r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexReader,java.util.Collection,float)>(r1, r2, r3, $r4, f0);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexReader, java.util.Collection, float) throws java.io.IOException
    {
        org.apache.lucene.analysis.Analyzer r2;
        java.util.Collection r4;
        org.apache.lucene.util.Version r1;
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        int $i0, $i1;
        float f0, $f1, $f2;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r3 := @parameter2: org.apache.lucene.index.IndexReader;

        r4 := @parameter3: java.util.Collection;

        f0 := @parameter4: float;

        $i0 = virtualinvoke r3.<org.apache.lucene.index.IndexReader: int numDocs()>();

        $f1 = (float) $i0;

        $f2 = $f1 * f0;

        $i1 = (int) $f2;

        specialinvoke r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.Analyzer,org.apache.lucene.index.IndexReader,java.util.Collection,int)>(r1, r2, r3, r4, $i1);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.IndexReader, java.util.Collection, int) throws java.io.IOException
    {
        java.util.HashMap $r1;
        java.util.HashSet $r8;
        org.apache.lucene.index.TermsEnum $r13;
        java.util.Map $r12;
        int $i0, i1;
        java.lang.String r7, $r14;
        boolean $z0;
        org.apache.lucene.index.Terms $r10;
        java.util.Iterator $r5;
        org.apache.lucene.util.BytesRef $r15;
        org.apache.lucene.analysis.Analyzer r3;
        java.util.Collection r4;
        org.apache.lucene.util.Version r2;
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        org.apache.lucene.util.CharsRef $r11;
        java.lang.Object $r6;
        org.apache.lucene.index.IndexReader r9;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r2 := @parameter0: org.apache.lucene.util.Version;

        r3 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r9 := @parameter2: org.apache.lucene.index.IndexReader;

        r4 := @parameter3: java.util.Collection;

        i1 := @parameter4: int;

        specialinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField> = $r1;

        r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: org.apache.lucene.util.Version matchVersion> = r2;

        r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: org.apache.lucene.analysis.Analyzer delegate> = r3;

        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        $r10 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.Terms getTerms(org.apache.lucene.index.IndexReader,java.lang.String)>(r9, r7);

        $r11 = new org.apache.lucene.util.CharsRef;

        specialinvoke $r11.<org.apache.lucene.util.CharsRef: void <init>()>();

        if $r10 == null goto label3;

        $r13 = virtualinvoke $r10.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

     label2:
        $r15 = virtualinvoke $r13.<org.apache.lucene.index.TermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r15 == null goto label3;

        $i0 = virtualinvoke $r13.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        if $i0 <= i1 goto label2;

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF8toUTF16(org.apache.lucene.util.BytesRef,org.apache.lucene.util.CharsRef)>($r15, $r11);

        $r14 = virtualinvoke $r11.<org.apache.lucene.util.CharsRef: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r14);

        goto label2;

     label3:
        $r12 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8);

        goto label1;

     label4:
        return;
    }

    protected org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)
    {
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        java.lang.String r2;
        org.apache.lucene.analysis.Analyzer $r1;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: org.apache.lucene.analysis.Analyzer delegate>;

        return $r1;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents wrapComponents(java.lang.String, org.apache.lucene.analysis.Analyzer$TokenStreamComponents)
    {
        org.apache.lucene.analysis.Tokenizer $r12;
        org.apache.lucene.analysis.TokenStream $r8;
        java.util.Set r4;
        org.apache.lucene.util.Version $r7, $r10;
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        org.apache.lucene.analysis.core.StopFilter $r5;
        java.util.Map $r2;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents r6, $r11;
        org.apache.lucene.analysis.util.CharArraySet $r9;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        $r2 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r3;

        if r4 != null goto label1;

        return r6;

     label1:
        $r5 = new org.apache.lucene.analysis.core.StopFilter;

        $r7 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r8 = virtualinvoke r6.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: org.apache.lucene.analysis.TokenStream getTokenStream()>();

        $r9 = new org.apache.lucene.analysis.util.CharArraySet;

        $r10 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r9.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.util.Version,java.util.Collection,boolean)>($r10, r4, 0);

        specialinvoke $r5.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r7, $r8, $r9);

        $r11 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        $r12 = virtualinvoke r6.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: org.apache.lucene.analysis.Tokenizer getTokenizer()>();

        specialinvoke $r11.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r12, $r5);

        return $r11;
    }

    public java.lang.String[] getStopWords(java.lang.String)
    {
        java.lang.Object[] $r6;
        java.util.Set r4;
        java.lang.String[] $r5, $r7;
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r3;

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.Set: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (java.lang.String[]) $r6;

        goto label2;

     label1:
        $r7 = newarray (java.lang.String)[0];

     label2:
        return $r7;
    }

    public org.apache.lucene.index.Term[] getStopWords()
    {
        java.lang.Object[] $r6;
        org.apache.lucene.index.Term $r16;
        java.util.ArrayList $r0;
        java.util.Map $r2, $r10;
        int $i0;
        org.apache.lucene.index.Term[] $r5, $r7;
        java.lang.String r9, r15;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r13;
        java.util.Set $r3, r12;
        org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer r1;
        java.lang.Object $r8, $r11, $r14;

        r1 := @this: org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = r1.<org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: java.util.Map stopWordsPerField>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r12 = (java.util.Set) $r11;

        $r13 = interfaceinvoke r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r14;

        $r16 = new org.apache.lucene.index.Term;

        specialinvoke $r16.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>(r9, r15);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r5 = newarray (org.apache.lucene.index.Term)[$i0];

        $r6 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.lucene.index.Term[]) $r6;

        return $r7;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer: float defaultMaxDocFreqPercent> = 0.4F;

        return;
    }
}
