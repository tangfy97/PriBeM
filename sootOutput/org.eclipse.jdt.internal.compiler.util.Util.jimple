public class org.eclipse.jdt.internal.compiler.util.Util extends java.lang.Object implements org.eclipse.jdt.internal.compiler.util.SuffixConstants
{
    private static final int DEFAULT_READING_SIZE;
    private static final int DEFAULT_WRITING_SIZE;
    public static final java.lang.String UTF_8;
    public static final java.lang.String LINE_SEPARATOR;
    public static final java.lang.String EMPTY_STRING;
    public static final int[] EMPTY_INT_ARRAY;

    static void <clinit>()
    {
        int[] $r3;
        char[] $r2;
        java.lang.String $r0, $r1;

        <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String UTF_8> = "UTF-8";

        <org.eclipse.jdt.internal.compiler.util.Util: int DEFAULT_WRITING_SIZE> = 1024;

        <org.eclipse.jdt.internal.compiler.util.Util: int DEFAULT_READING_SIZE> = 8192;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String LINE_SEPARATOR> = $r0;

        $r1 = new java.lang.String;

        $r2 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING> = $r1;

        $r3 = newarray (int)[0];

        <org.eclipse.jdt.internal.compiler.util.Util: int[] EMPTY_INT_ARRAY> = $r3;

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.Util r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String buildAllDirectoriesInto(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuffer $r5, $r7, $r10, $r11, $r16, $r17, $r27, $r40, $r43, $r46, $r47, $r50, $r58, $r59, $r60, $r61, $r62, $r63, $r68;
        java.util.StringTokenizer $r69;
        java.lang.String r0, $r1, $r2, $r4, $r6, $r9, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r38, $r39, $r42, $r45, $r49, r51, r52, r53, r54, r55, r57;
        java.io.IOException $r66, $r67, $r71, $r72;
        java.io.File $r64, $r65, $r70;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, $z14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        char c0;

        r51 := @parameter0: java.lang.String;

        r52 := @parameter1: java.lang.String;

        c0 = <java.io.File: char separatorChar>;

        r0 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke r51.<java.lang.String: java.lang.String replace(char,char)>(47, c0);

        r53 = $r1;

        $r2 = virtualinvoke r52.<java.lang.String: java.lang.String replace(char,char)>(47, c0);

        $i10 = (int) c0;

        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>($i10);

        $i12 = (int) -1;

        if $i1 != $i12 goto label02;

        $z10 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z10 == 0 goto label01;

        $i8 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i9 = $i8 - 1;

        r54 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $r58 = new java.lang.StringBuffer;

        $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r58.<java.lang.StringBuffer: void <init>(java.lang.String)>($r49);

        $r50 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r55 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label01:
        r54 = $r1;

        $r59 = new java.lang.StringBuffer;

        $r45 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r59.<java.lang.StringBuffer: void <init>(java.lang.String)>($r45);

        $r46 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r55 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label02:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z0 == 0 goto label03;

        $r60 = new java.lang.StringBuffer;

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r60.<java.lang.StringBuffer: void <init>(java.lang.String)>($r38);

        $r39 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r40 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        r54 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        $r61 = new java.lang.StringBuffer;

        $r42 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r61.<java.lang.StringBuffer: void <init>(java.lang.String)>($r42);

        $r43 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r55 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label03:
        $r62 = new java.lang.StringBuffer;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r62.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r54 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r63 = new java.lang.StringBuffer;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r63.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r55 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $r64 = new java.io.File;

        specialinvoke $r64.<java.io.File: void <init>(java.lang.String)>(r54);

        virtualinvoke $r64.<java.io.File: boolean mkdirs()>();

        $z11 = virtualinvoke $r64.<java.io.File: boolean isDirectory()>();

        if $z11 == 0 goto label05;

        return r55;

     label05:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z1 == 0 goto label06;

        $i6 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        r53 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

     label06:
        $r65 = new java.io.File;

        specialinvoke $r65.<java.io.File: void <init>(java.lang.String)>(r53);

        z12 = 0;

        $z2 = virtualinvoke $r65.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label07;

        z12 = 1;

        goto label09;

     label07:
        $z3 = virtualinvoke $r65.<java.io.File: boolean mkdirs()>();

        if $z3 != 0 goto label09;

        $z9 = virtualinvoke $r65.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label08;

        z12 = 1;

        goto label09;

     label08:
        $r66 = new java.io.IOException;

        $r34 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String output_notValidAll>;

        $r35 = virtualinvoke $r65.<java.io.File: java.lang.String getAbsolutePath()>();

        $r36 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r34, $r35);

        specialinvoke $r66.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r66;

     label09:
        if z12 == 0 goto label10;

        $z8 = virtualinvoke $r65.<java.io.File: boolean isDirectory()>();

        if $z8 != 0 goto label10;

        $r67 = new java.io.IOException;

        $r30 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String output_isFile>;

        $r31 = virtualinvoke $r65.<java.io.File: java.lang.String getAbsolutePath()>();

        $r32 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r30, $r31);

        specialinvoke $r67.<java.io.IOException: void <init>(java.lang.String)>($r32);

        throw $r67;

     label10:
        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>(java.lang.String)>(r53);

        virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r69 = new java.util.StringTokenizer;

        specialinvoke $r69.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, r0);

        r57 = virtualinvoke $r69.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label16;

     label11:
        $r70 = new java.io.File;

        $r16 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r57);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r70.<java.io.File: void <init>(java.lang.String)>($r18);

        z13 = 0;

        $z4 = virtualinvoke $r70.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label12;

        z13 = 1;

        goto label14;

     label12:
        $z5 = virtualinvoke $r70.<java.io.File: boolean mkdir()>();

        if $z5 != 0 goto label14;

        $z7 = virtualinvoke $r70.<java.io.File: boolean exists()>();

        if $z7 == 0 goto label13;

        z13 = 1;

        goto label14;

     label13:
        $r71 = new java.io.IOException;

        $r24 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String output_notValid>;

        $i2 = virtualinvoke r53.<java.lang.String: int length()>();

        $i3 = $i2 + 1;

        $i4 = virtualinvoke $r68.<java.lang.StringBuffer: int length()>();

        $i5 = $i4 - 1;

        $r25 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.String substring(int,int)>($i3, $i5);

        $r26 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object,java.lang.Object)>($r24, $r25, r53);

        specialinvoke $r71.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r71;

     label14:
        if z13 == 0 goto label15;

        $z6 = virtualinvoke $r70.<java.io.File: boolean isDirectory()>();

        if $z6 != 0 goto label15;

        $r72 = new java.io.IOException;

        $r20 = <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String output_isFile>;

        $r21 = virtualinvoke $r70.<java.io.File: java.lang.String getAbsolutePath()>();

        $r22 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Messages: java.lang.String bind(java.lang.String,java.lang.Object)>($r20, $r21);

        specialinvoke $r72.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r72;

     label15:
        r57 = virtualinvoke $r69.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label16:
        $z14 = virtualinvoke $r69.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z14 != 0 goto label11;

        $r27 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r57);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r28;
    }

    public static char[] bytesToChar(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r1;
        java.io.ByteArrayInputStream $r0;
        int $i0;
        char[] $r3;
        java.lang.String r2;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $i0 = lengthof r1;

        $r3 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: char[] getInputStreamAsCharArray(java.io.InputStream,int,java.lang.String)>($r0, $i0, r2);

        return $r3;
    }

    public static int computeOuterMostVisibility(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, int)
    {
        int $i0, $i1, i2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i2 := @parameter1: int;

        goto label6;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label4;
            default: goto label5;
        };

     label2:
        i2 = 2;

        goto label5;

     label3:
        if i2 == 2 goto label5;

        i2 = 0;

        goto label5;

     label4:
        if i2 != 1 goto label5;

        i2 = 4;

     label5:
        r0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingType>;

     label6:
        if r0 != null goto label1;

        return i2;
    }

    public static byte[] getFileByteContent(java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        long $l0;
        java.io.IOException $r3, $r5;
        java.io.FileInputStream $r0, r6;
        java.io.File r1;
        int $i1;

        r1 := @parameter0: java.io.File;

        r6 = null;

     label01:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r6 = $r0;

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: byte[] getInputStreamAsByteArray(java.io.InputStream,int)>($r0, $i1);

     label02:
        if $r0 == null goto label06;

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r5 := @caughtexception;

     label06:
        return $r2;

     label07:
        $r4 := @caughtexception;

        if r6 == null goto label11;

     label08:
        virtualinvoke r6.<java.io.InputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r3 := @caughtexception;

     label11:
        throw $r4;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static char[] getFileCharContent(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        long $l0;
        java.io.IOException $r4, $r6;
        java.io.FileInputStream $r0, r7;
        java.io.File r1;
        int $i1;
        char[] $r3;
        java.lang.String r2;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        r7 = null;

     label01:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r7 = $r0;

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $r3 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: char[] getInputStreamAsCharArray(java.io.InputStream,int,java.lang.String)>($r0, $i1, r2);

     label02:
        if $r0 == null goto label06;

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r6 := @caughtexception;

     label06:
        return $r3;

     label07:
        $r5 := @caughtexception;

        if r7 == null goto label11;

     label08:
        virtualinvoke r7.<java.io.InputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r4 := @caughtexception;

     label11:
        throw $r5;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private static java.io.FileOutputStream getFileOutputStream(boolean, java.lang.String, java.lang.String) throws java.io.IOException
    {
        boolean z0, $z1, $z2;
        java.lang.StringBuffer $r5, $r7, $r11, $r14, $r15, $r18, $r28, $r29, $r30, $r31;
        int $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.String r0, $r1, r2, $r4, $r6, $r9, $r10, $r13, $r17, $r21, r22, r23;
        java.io.FileOutputStream $r27, $r33;
        char c0;
        java.io.File $r26, $r32;

        z0 := @parameter0: boolean;

        r22 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if z0 == 0 goto label1;

        $r27 = new java.io.FileOutputStream;

        $r26 = new java.io.File;

        $r21 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String buildAllDirectoriesInto(java.lang.String,java.lang.String)>(r22, r2);

        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>($r21);

        specialinvoke $r27.<java.io.FileOutputStream: void <init>(java.io.File)>($r26);

        return $r27;

     label1:
        c0 = <java.io.File: char separatorChar>;

        r0 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke r22.<java.lang.String: java.lang.String replace(char,char)>(47, c0);

        $i5 = (int) c0;

        $i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>($i5);

        $i7 = (int) -1;

        if $i1 != $i7 goto label3;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z2 == 0 goto label2;

        $r28 = new java.lang.StringBuffer;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r28.<java.lang.StringBuffer: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r23 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label2:
        $r29 = new java.lang.StringBuffer;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r29.<java.lang.StringBuffer: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r23 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label3:
        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z1 == 0 goto label4;

        $r30 = new java.lang.StringBuffer;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r30.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);

        $i4 = $i1 + 1;

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i4, $i2);

        $r11 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r23 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label4:
        $r31 = new java.lang.StringBuffer;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r31.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $i3 = $i1 + 1;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r23 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $r33 = new java.io.FileOutputStream;

        $r32 = new java.io.File;

        specialinvoke $r32.<java.io.File: void <init>(java.lang.String)>(r23);

        specialinvoke $r33.<java.io.FileOutputStream: void <init>(java.io.File)>($r32);

        return $r33;
    }

    public static byte[] getInputStreamAsByteArray(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r3, $r4, r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i13, $i15, $i17;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $i13 = (int) -1;

        if i0 != $i13 goto label4;

        r5 = newarray (byte)[0];

        i9 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.io.InputStream: int available()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 8192);

        $i5 = i9 + $i3;

        $i4 = lengthof r5;

        if $i5 <= $i4 goto label2;

        $r4 = r5;

        $i8 = i9 + $i3;

        $r3 = newarray (byte)[$i8];

        r5 = $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, i9);

     label2:
        $i6 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r5, i9, $i3);

        if $i6 <= 0 goto label3;

        i9 = i9 + $i6;

     label3:
        $i15 = (int) -1;

        if $i6 != $i15 goto label1;

        $i7 = lengthof r5;

        if i9 >= $i7 goto label7;

        $r2 = r5;

        $r1 = newarray (byte)[i9];

        r5 = $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, i9);

        goto label7;

     label4:
        r5 = newarray (byte)[i0];

        i10 = 0;

        i11 = 0;

        goto label6;

     label5:
        i10 = i10 + i11;

        $i1 = i0 - i10;

        i11 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r5, i10, $i1);

     label6:
        $i17 = (int) -1;

        if i11 == $i17 goto label7;

        if i10 != i0 goto label5;

     label7:
        return r5;
    }

    public static char[] getInputStreamAsCharArray(java.io.InputStream, int, java.lang.String) throws java.io.IOException
    {
        byte b15;
        boolean $z0;
        java.io.UnsupportedEncodingException $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, i12, i13, $i14, $i16, $i18, $i19, $i21, $i23;
        java.lang.String r0, $r4;
        char $c8, $c9;
        java.io.InputStreamReader $r9, r10, $r12, $r13, $r14;
        char[] $r2, $r3, $r5, $r6, r11;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

     label01:
        if r0 != null goto label02;

        $r12 = new java.io.InputStreamReader;

        $r9 = $r12;

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        goto label03;

     label02:
        $r13 = new java.io.InputStreamReader;

        $r9 = $r13;

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, r0);

     label03:
        r10 = $r9;

     label04:
        goto label06;

     label05:
        $r7 := @caughtexception;

        $r14 = new java.io.InputStreamReader;

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        r10 = $r14;

     label06:
        i12 = 0;

        $i18 = (int) -1;

        if i0 != $i18 goto label07;

        r11 = <org.eclipse.jdt.core.compiler.CharOperation: char[] NO_CHAR>;

        goto label08;

     label07:
        r11 = newarray (char)[i0];

     label08:
        if i12 >= i0 goto label09;

        i13 = i0 - i12;

        goto label12;

     label09:
        $i1 = virtualinvoke r10.<java.io.InputStreamReader: int read()>();

        if $i1 >= 0 goto label10;

        goto label14;

     label10:
        $i2 = virtualinvoke r1.<java.io.InputStream: int available()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 8192);

        i13 = $i3;

        $i4 = i12 + 1;

        $i6 = $i4 + $i3;

        $i5 = lengthof r11;

        if $i6 <= $i5 goto label11;

        $r6 = r11;

        $i10 = i12 + 1;

        $i11 = $i10 + $i3;

        $r5 = newarray (char)[$i11];

        r11 = $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i12);

     label11:
        $i7 = i12;

        i12 = i12 + 1;

        $c8 = (char) $i1;

        r11[$i7] = $c8;

     label12:
        $i14 = virtualinvoke r10.<java.io.InputStreamReader: int read(char[],int,int)>(r11, i12, i13);

        if $i14 >= 0 goto label13;

        goto label14;

     label13:
        i12 = i12 + $i14;

        goto label08;

     label14:
        b15 = 0;

        if i12 <= 0 goto label15;

        $r4 = "UTF-8";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label15;

        $c9 = r11[0];

        $i19 = (int) $c9;

        $i21 = (int) 65279;

        if $i19 != $i21 goto label15;

        $i23 = (int) -1;

        i12 = i12 + $i23;

        b15 = 1;

     label15:
        $i16 = lengthof r11;

        if i12 >= $i16 goto label16;

        $r3 = r11;

        $r2 = newarray (char)[i12];

        r11 = $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, b15, $r2, 0, i12);

     label16:
        return r11;

        catch java.io.UnsupportedEncodingException from label01 to label04 with label05;
    }

    public static int getLineNumber(int, int[], int, int)
    {
        int[] r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i12;

        i2 := @parameter0: int;

        r0 := @parameter1: int[];

        i8 := @parameter2: int;

        i9 := @parameter3: int;

        if r0 != null goto label1;

        return 1;

     label1:
        $i12 = (int) -1;

        if i9 != $i12 goto label2;

        return 1;

     label2:
        i10 = i8;

        goto label6;

     label3:
        $i0 = i9 - i8;

        $i1 = $i0 / 2;

        i10 = i8 + $i1;

        $i3 = r0[i10];

        if i2 >= $i3 goto label4;

        i9 = i10 - 1;

        goto label6;

     label4:
        if i2 <= $i3 goto label5;

        i8 = i10 + 1;

        goto label6;

     label5:
        $i4 = i10 + 1;

        return $i4;

     label6:
        if i8 <= i9 goto label3;

        $i5 = r0[i10];

        if i2 >= $i5 goto label7;

        $i7 = i10 + 1;

        return $i7;

     label7:
        $i6 = i10 + 2;

        return $i6;
    }

    public static byte[] getZipEntryByteContent(java.util.zip.ZipEntry, java.util.zip.ZipFile) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        byte[] $r3;
        long $l0;
        java.io.IOException $r4, $r9, $r11;
        java.lang.StringBuffer $r5, $r7;
        int $i1;
        java.util.zip.ZipFile r0;
        java.lang.String $r6, $r8;
        java.util.zip.ZipEntry r1;
        java.io.InputStream $r2, r12;

        r1 := @parameter0: java.util.zip.ZipEntry;

        r0 := @parameter1: java.util.zip.ZipFile;

        r12 = null;

     label01:
        $r2 = virtualinvoke r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        r12 = $r2;

        if $r2 != null goto label02;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("Invalid zip entry name : ");

        $r6 = virtualinvoke r1.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label02:
        $l0 = virtualinvoke r1.<java.util.zip.ZipEntry: long getSize()>();

        $i1 = (int) $l0;

        $r3 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: byte[] getInputStreamAsByteArray(java.io.InputStream,int)>($r2, $i1);

     label03:
        if $r2 == null goto label07;

     label04:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

     label07:
        return $r3;

     label08:
        $r10 := @caughtexception;

        if r12 == null goto label12;

     label09:
        virtualinvoke r12.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        throw $r10;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public static final boolean isPotentialZipArchive(java.lang.String)
    {
        int $i0, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i12, $i13, i17, $i18, i19, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i30;
        java.lang.String r0, $r1, $r2, $r3, $r4;
        char $c1, $c9, $c10, $c11, $c14, $c15, $c16;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i21 = (int) -1;

        if $i0 != $i21 goto label01;

        return 0;

     label01:
        $c1 = <java.io.File: char separatorChar>;

        $i22 = (int) $c1;

        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>($i22);

        if $i2 <= $i0 goto label02;

        return 0;

     label02:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - $i0;

        i5 = $i4 - 1;

        $r1 = "java";

        $i6 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i5 != $i6 goto label07;

        i17 = i5 - 1;

        goto label06;

     label03:
        $i12 = $i3 - i5;

        $i13 = $i12 + i17;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i13);

        $c15 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c14);

        $r3 = "java";

        $c16 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i17);

        $i23 = (int) $c15;

        $i24 = (int) $c16;

        if $i23 == $i24 goto label04;

        goto label07;

     label04:
        if i17 != 0 goto label05;

        return 0;

     label05:
        $i26 = (int) -1;

        i17 = i17 + $i26;

     label06:
        if i17 >= 0 goto label03;

     label07:
        $r4 = "class";

        $i18 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i5 != $i18 goto label11;

        i19 = i5 - 1;

        goto label10;

     label08:
        $i7 = $i3 - i5;

        $i8 = $i7 + i19;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $c10 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c9);

        $r2 = "class";

        $c11 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i19);

        $i27 = (int) $c10;

        $i28 = (int) $c11;

        if $i27 == $i28 goto label09;

        return 1;

     label09:
        $i30 = (int) -1;

        i19 = i19 + $i30;

     label10:
        if i19 >= 0 goto label08;

        return 0;

     label11:
        return 1;
    }

    public static final boolean isClassFileName(char[])
    {
        int i0, $i1, $i5, $i6, i7, $i8, $i9, $i10, $i11;
        char c2, $c3, $c4;
        char[] r0, $r1, $r2, $r3;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = lengthof r0;

     label2:
        $r1 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_CLASS>;

        $i5 = lengthof $r1;

        if $i6 >= $i5 goto label3;

        return 0;

     label3:
        i7 = 0;

        i0 = $i6 - $i5;

        goto label6;

     label4:
        $i1 = i0 + i7;

        c2 = r0[$i1];

        $r2 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_class>;

        $c3 = $r2[i7];

        $i8 = (int) c2;

        $i9 = (int) $c3;

        if $i8 == $i9 goto label5;

        $r3 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_CLASS>;

        $c4 = $r3[i7];

        $i10 = (int) c2;

        $i11 = (int) $c4;

        if $i10 == $i11 goto label5;

        return 0;

     label5:
        i7 = i7 + 1;

     label6:
        if i7 < $i5 goto label4;

        return 1;
    }

    public static final boolean isClassFileName(java.lang.String)
    {
        int i0, $i1, $i2, $i4, i5, $i8, $i9, i10, $i11, $i12, $i13, $i14;
        java.lang.String r0;
        char $c3, $c6, $c7;
        char[] $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $i9 = 0;

        goto label2;

     label1:
        $i9 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        i0 = $i9;

        $r1 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_CLASS>;

        $i8 = lengthof $r1;

        if $i9 >= $i8 goto label3;

        return 0;

     label3:
        i10 = 0;

        goto label6;

     label4:
        $i1 = i0 - i10;

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = $i8 - i10;

        i5 = $i4 - 1;

        $r2 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_class>;

        $c6 = $r2[i5];

        $i11 = (int) $c3;

        $i12 = (int) $c6;

        if $i11 == $i12 goto label5;

        $r3 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_CLASS>;

        $c7 = $r3[i5];

        $i13 = (int) $c3;

        $i14 = (int) $c7;

        if $i13 == $i14 goto label5;

        return 0;

     label5:
        i10 = i10 + 1;

     label6:
        if i10 < $i8 goto label4;

        return 1;
    }

    public static final boolean isExcluded(char[], char[][], char[][], boolean)
    {
        char[][] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10, i11, $i13, $i15, $i16;
        boolean z0, $z1, $z2;
        char $c7;
        char[] $r2, $r3, r4, r5, r6;

        r5 := @parameter0: char[];

        r0 := @parameter1: char[][];

        r1 := @parameter2: char[][];

        z0 := @parameter3: boolean;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 0;

     label01:
        if r0 == null goto label07;

        i8 = 0;

        i9 = lengthof r0;

        goto label06;

     label02:
        r4 = r0[i8];

        r6 = r4;

        if z0 == 0 goto label04;

        $i0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int lastIndexOf(char,char[])>(47, r4);

        $i13 = (int) -1;

        if $i0 == $i13 goto label04;

        $i1 = lengthof r4;

        $i2 = $i1 - 1;

        if $i0 == $i2 goto label04;

        $i3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(42, r4, $i0);

        $i15 = (int) -1;

        if $i3 == $i15 goto label03;

        $i4 = lengthof r4;

        $i5 = $i4 - 1;

        if $i3 >= $i5 goto label03;

        $i6 = $i3 + 1;

        $c7 = r4[$i6];

        $i16 = (int) $c7;

        if $i16 == 42 goto label04;

     label03:
        r6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] subarray(char[],int,int)>(r4, 0, $i0);

     label04:
        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean pathMatch(char[],char[],boolean,char)>(r6, r5, 1, 47);

        if $z2 == 0 goto label05;

        goto label07;

     label05:
        i8 = i8 + 1;

     label06:
        if i8 < i9 goto label02;

        return 1;

     label07:
        if z0 == 0 goto label08;

        $r3 = newarray (char)[1];

        $r3[0] = 42;

        r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[],char)>(r5, $r3, 47);

     label08:
        if r1 == null goto label12;

        i10 = 0;

        i11 = lengthof r1;

        goto label11;

     label09:
        $r2 = r1[i10];

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean pathMatch(char[],char[],boolean,char)>($r2, r5, 1, 47);

        if $z1 == 0 goto label10;

        return 1;

     label10:
        i10 = i10 + 1;

     label11:
        if i10 < i11 goto label09;

     label12:
        return 0;
    }

    public static final boolean isJavaFileName(char[])
    {
        int i0, $i1, $i5, $i6, i7, $i8, $i9, $i10, $i11;
        char c2, $c3, $c4;
        char[] r0, $r1, $r2, $r3;

        r0 := @parameter0: char[];

        if r0 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i6 = lengthof r0;

     label2:
        $r1 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_JAVA>;

        $i5 = lengthof $r1;

        if $i6 >= $i5 goto label3;

        return 0;

     label3:
        i7 = 0;

        i0 = $i6 - $i5;

        goto label6;

     label4:
        $i1 = i0 + i7;

        c2 = r0[$i1];

        $r2 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_java>;

        $c3 = $r2[i7];

        $i8 = (int) c2;

        $i9 = (int) $c3;

        if $i8 == $i9 goto label5;

        $r3 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_JAVA>;

        $c4 = $r3[i7];

        $i10 = (int) c2;

        $i11 = (int) $c4;

        if $i10 == $i11 goto label5;

        return 0;

     label5:
        i7 = i7 + 1;

     label6:
        if i7 < $i5 goto label4;

        return 1;
    }

    public static final boolean isJavaFileName(java.lang.String)
    {
        int i0, $i1, $i2, $i4, i5, $i8, $i9, i10, $i11, $i12, $i13, $i14;
        java.lang.String r0;
        char $c3, $c6, $c7;
        char[] $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $i9 = 0;

        goto label2;

     label1:
        $i9 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        i0 = $i9;

        $r1 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_JAVA>;

        $i8 = lengthof $r1;

        if $i9 >= $i8 goto label3;

        return 0;

     label3:
        i10 = 0;

        goto label6;

     label4:
        $i1 = i0 - i10;

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = $i8 - i10;

        i5 = $i4 - 1;

        $r2 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_java>;

        $c6 = $r2[i5];

        $i11 = (int) $c3;

        $i12 = (int) $c6;

        if $i11 == $i12 goto label5;

        $r3 = <org.eclipse.jdt.internal.compiler.util.Util: char[] SUFFIX_JAVA>;

        $c7 = $r3[i5];

        $i13 = (int) $c3;

        $i14 = (int) $c7;

        if $i13 == $i14 goto label5;

        return 0;

     label5:
        i10 = i10 + 1;

     label6:
        if i10 < $i8 goto label4;

        return 1;
    }

    public static void reverseQuickSort(char[][], int, int)
    {
        char[][] r0;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, $i9, $i11;
        char[] r1, $r2, r3, $r4, $r5;

        r0 := @parameter0: char[][];

        i5 := @parameter1: int;

        i6 := @parameter2: int;

        i0 = i5;

        i1 = i6;

        $i2 = i6 + i5;

        $i3 = $i2 / 2;

        r1 = r0[$i3];

        goto label2;

     label1:
        i5 = i5 + 1;

     label2:
        $r5 = r0[i5];

        $i7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int compareTo(char[],char[])>($r5, r1);

        if $i7 > 0 goto label1;

        goto label4;

     label3:
        $i9 = (int) -1;

        i6 = i6 + $i9;

     label4:
        $r2 = r0[i6];

        $i4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int compareTo(char[],char[])>(r1, $r2);

        if $i4 > 0 goto label3;

        if i5 > i6 goto label5;

        r3 = r0[i5];

        $r4 = r0[i6];

        r0[i5] = $r4;

        r0[i6] = r3;

        i5 = i5 + 1;

        $i11 = (int) -1;

        i6 = i6 + $i11;

     label5:
        if i5 <= i6 goto label2;

        if i0 >= i6 goto label6;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int)>(r0, i0, i6);

     label6:
        if i5 >= i1 goto label7;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int)>(r0, i5, i1);

     label7:
        return;
    }

    public static void reverseQuickSort(char[][], int, int, int[])
    {
        char[][] r0;
        int[] r3;
        int i0, i1, $i2, $i3, $i4, i5, $i6, i7, i8, $i9, $i11, $i13;
        char[] r1, $r2, r4, $r5, $r6;

        r0 := @parameter0: char[][];

        i7 := @parameter1: int;

        i8 := @parameter2: int;

        r3 := @parameter3: int[];

        i0 = i7;

        i1 = i8;

        $i2 = i8 + i7;

        $i3 = $i2 / 2;

        r1 = r0[$i3];

        goto label2;

     label1:
        i7 = i7 + 1;

     label2:
        $r6 = r0[i7];

        $i9 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int compareTo(char[],char[])>($r6, r1);

        if $i9 > 0 goto label1;

        goto label4;

     label3:
        $i11 = (int) -1;

        i8 = i8 + $i11;

     label4:
        $r2 = r0[i8];

        $i4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int compareTo(char[],char[])>(r1, $r2);

        if $i4 > 0 goto label3;

        if i7 > i8 goto label5;

        r4 = r0[i7];

        $r5 = r0[i8];

        r0[i7] = $r5;

        r0[i8] = r4;

        i5 = r3[i7];

        $i6 = r3[i8];

        r3[i7] = $i6;

        r3[i8] = i5;

        i7 = i7 + 1;

        $i13 = (int) -1;

        i8 = i8 + $i13;

     label5:
        if i7 <= i8 goto label2;

        if i0 >= i8 goto label6;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int,int[])>(r0, i0, i8, r3);

     label6:
        if i7 >= i1 goto label7;

        staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: void reverseQuickSort(char[][],int,int,int[])>(r0, i7, i1, r3);

     label7:
        return;
    }

    public static final int searchColumnNumber(int[], int, int)
    {
        int[] r0;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $i4 = i1 + 1;

        return $i4;

     label2:
        $i2 = r0[0];

        $i3 = i1 - $i2;

        return $i3;

     label3:
        i5 = i0 - 2;

        i6 = lengthof r0;

        if i5 < i6 goto label4;

        $i9 = i6 - 1;

        $i10 = r0[$i9];

        $i11 = i1 - $i10;

        return $i11;

     label4:
        $i7 = r0[i5];

        $i8 = i1 - $i7;

        return $i8;
    }

    public static java.lang.Boolean toBoolean(boolean)
    {
        java.lang.Boolean $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r1;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r0;
    }

    public static java.lang.String toString(java.lang.Object[])
    {
        org.eclipse.jdt.internal.compiler.util.Util$1 $r1;
        java.lang.Object[] r0;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.eclipse.jdt.internal.compiler.util.Util$1;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.util.Util$1: void <init>()>();

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String toString(java.lang.Object[],org.eclipse.jdt.internal.compiler.util.Util$Displayable)>(r0, $r1);

        return $r2;
    }

    public static java.lang.String toString(java.lang.Object[], org.eclipse.jdt.internal.compiler.util.Util$Displayable)
    {
        java.lang.Object[] r0;
        org.eclipse.jdt.internal.compiler.util.Util$Displayable r2;
        java.lang.StringBuffer $r1;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.lang.Object[];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.util.Util$Displayable;

        if r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(10);

        i0 = 0;

        goto label4;

     label2:
        if i0 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r3 = r0[i0];

        $r4 = interfaceinvoke r2.<org.eclipse.jdt.internal.compiler.util.Util$Displayable: java.lang.String displayString(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i0 = i0 + 1;

     label4:
        $i1 = lengthof r0;

        if i0 < $i1 goto label2;

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void writeToDisk(boolean, java.lang.String, java.lang.String, org.eclipse.jdt.internal.compiler.ClassFile) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        byte[] $r5, $r6;
        org.eclipse.jdt.internal.compiler.ClassFile r4;
        java.io.FileOutputStream $r2;
        java.io.IOException $r8;
        java.io.BufferedOutputStream $r3;
        int $i0, $i1;
        java.lang.String r0, r1;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: org.eclipse.jdt.internal.compiler.ClassFile;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: java.io.FileOutputStream getFileOutputStream(boolean,java.lang.String,java.lang.String)>(z0, r0, r1);

        $r3 = new java.io.BufferedOutputStream;

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r2, 1024);

     label1:
        $r5 = r4.<org.eclipse.jdt.internal.compiler.ClassFile: byte[] header>;

        $i0 = r4.<org.eclipse.jdt.internal.compiler.ClassFile: int headerOffset>;

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r5, 0, $i0);

        $r6 = r4.<org.eclipse.jdt.internal.compiler.ClassFile: byte[] contents>;

        $i1 = r4.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r6, 0, $i1);

        virtualinvoke $r3.<java.io.BufferedOutputStream: void flush()>();

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        throw $r8;

     label4:
        $r7 := @caughtexception;

        virtualinvoke $r3.<java.io.BufferedOutputStream: void close()>();

        throw $r7;

     label5:
        virtualinvoke $r3.<java.io.BufferedOutputStream: void close()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label4;
    }
}
