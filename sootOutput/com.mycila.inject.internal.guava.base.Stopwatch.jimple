public final class com.mycila.inject.internal.guava.base.Stopwatch extends java.lang.Object
{
    private final com.mycila.inject.internal.guava.base.Ticker ticker;
    private boolean isRunning;
    private long elapsedNanos;
    private long startTick;

    public void <init>()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        com.mycila.inject.internal.guava.base.Ticker $r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.base.Ticker: com.mycila.inject.internal.guava.base.Ticker systemTicker()>();

        specialinvoke r0.<com.mycila.inject.internal.guava.base.Stopwatch: void <init>(com.mycila.inject.internal.guava.base.Ticker)>($r1);

        return;
    }

    public void <init>(com.mycila.inject.internal.guava.base.Ticker)
    {
        com.mycila.inject.internal.guava.base.Ticker r1, $r3;
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        java.lang.Object $r2;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Ticker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.mycila.inject.internal.guava.base.Ticker) $r2;

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: com.mycila.inject.internal.guava.base.Ticker ticker> = $r3;

        return;
    }

    public boolean isRunning()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $z0 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning>;

        return $z0;
    }

    public com.mycila.inject.internal.guava.base.Stopwatch start()
    {
        com.mycila.inject.internal.guava.base.Ticker $r1;
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        long $l0;
        boolean $z0, $z1;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $z0 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkState(boolean)>($z1);

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning> = 1;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: com.mycila.inject.internal.guava.base.Ticker ticker>;

        $l0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.base.Ticker: long read()>();

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: long startTick> = $l0;

        return r0;
    }

    public com.mycila.inject.internal.guava.base.Stopwatch stop()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        long $l0, $l1, $l2, $l3, $l4;
        com.mycila.inject.internal.guava.base.Ticker $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: com.mycila.inject.internal.guava.base.Ticker ticker>;

        $l0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.base.Ticker: long read()>();

        $z0 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning>;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkState(boolean)>($z0);

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning> = 0;

        $l3 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos>;

        $l1 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: long startTick>;

        $l2 = $l0 - $l1;

        $l4 = $l3 + $l2;

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos> = $l4;

        return r0;
    }

    public com.mycila.inject.internal.guava.base.Stopwatch reset()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos> = 0L;

        r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning> = 0;

        return r0;
    }

    private long elapsedNanos()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        long $l0, $l1, $l2, $l3, $l4;
        com.mycila.inject.internal.guava.base.Ticker $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $z0 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: boolean isRunning>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: com.mycila.inject.internal.guava.base.Ticker ticker>;

        $l0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.base.Ticker: long read()>();

        $l1 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: long startTick>;

        $l3 = $l0 - $l1;

        $l2 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos>;

        $l4 = $l3 + $l2;

        goto label2;

     label1:
        $l4 = r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos>;

     label2:
        return $l4;
    }

    public long elapsedTime(java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r0, $r2;
        com.mycila.inject.internal.guava.base.Stopwatch r1;
        long $l0, $l1;

        r1 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        r0 := @parameter0: java.util.concurrent.TimeUnit;

        $l0 = specialinvoke r1.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos()>();

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l0, $r2);

        return $l1;
    }

    public long elapsedMillis()
    {
        java.util.concurrent.TimeUnit $r1;
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        long $l0;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l0 = virtualinvoke r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedTime(java.util.concurrent.TimeUnit)>($r1);

        return $l0;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        java.lang.String $r1;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.base.Stopwatch: java.lang.String toString(int)>(4);

        return $r1;
    }

    public java.lang.String toString(int)
    {
        java.lang.Object[] $r8;
        java.lang.Double $r9;
        com.mycila.inject.internal.guava.base.Stopwatch r0;
        long $l0, $l1;
        int i2;
        java.lang.String $r7, $r10, $r11;
        double $d0, $d1, d2;
        java.util.concurrent.TimeUnit $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: com.mycila.inject.internal.guava.base.Stopwatch;

        i2 := @parameter0: int;

        $l0 = specialinvoke r0.<com.mycila.inject.internal.guava.base.Stopwatch: long elapsedNanos()>();

        $r1 = staticinvoke <com.mycila.inject.internal.guava.base.Stopwatch: java.util.concurrent.TimeUnit chooseUnit(long)>($l0);

        $d0 = (double) $l0;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r1);

        $d1 = (double) $l1;

        d2 = $d0 / $d1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g %s");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r8[0] = $r9;

        $r10 = staticinvoke <com.mycila.inject.internal.guava.base.Stopwatch: java.lang.String abbreviate(java.util.concurrent.TimeUnit)>($r1);

        $r8[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        return $r11;
    }

    private static java.util.concurrent.TimeUnit chooseUnit(long)
    {
        long l0, $l1, $l3, $l5;
        byte $b2, $b4, $b6;
        int $i7, $i8, $i9;
        java.util.concurrent.TimeUnit $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        l0 := @parameter0: long;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, $r0);

        $b2 = $l1 cmp 0L;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label1;

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        return $r9;

     label1:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l3 = virtualinvoke $r3.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, $r2);

        $b4 = $l3 cmp 0L;

        $i8 = (int) $b4;

        if $i8 <= 0 goto label2;

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        return $r8;

     label2:
        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l5 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, $r4);

        $b6 = $l5 cmp 0L;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label3;

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;

        return $r7;

     label3:
        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        return $r6;
    }

    private static java.lang.String abbreviate(java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.AssertionError $r2;

        r0 := @parameter0: java.util.concurrent.TimeUnit;

        $r1 = <com.mycila.inject.internal.guava.base.Stopwatch$1: int[] $SwitchMap$java$util$concurrent$TimeUnit>;

        $i0 = virtualinvoke r0.<java.util.concurrent.TimeUnit: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        return "ns";

     label2:
        return "\u03bcs";

     label3:
        return "ms";

     label4:
        return "s";

     label5:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;
    }
}
