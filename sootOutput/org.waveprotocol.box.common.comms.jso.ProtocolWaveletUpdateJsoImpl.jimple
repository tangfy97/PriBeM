public final class org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl extends org.waveprotocol.wave.communication.gwt.JsonMessage implements org.waveprotocol.box.common.comms.ProtocolWaveletUpdate
{
    private static final java.lang.String keyWaveletName;
    private static final java.lang.String keyAppliedDelta;
    private static final java.lang.String keyCommitNotice;
    private static final java.lang.String keyResultingVersion;
    private static final java.lang.String keySnapshot;
    private static final java.lang.String keyMarker;
    private static final java.lang.String keyChannelId;

    protected void <init>()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void <init>()>();

        return;
    }

    public static org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl create()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage $r0;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r1;

        $r0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage()>();

        r1 = (org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl) $r0;

        virtualinvoke r1.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: void clearAppliedDelta()>();

        return r1;
    }

    public void copyFrom(org.waveprotocol.box.common.comms.ProtocolWaveletUpdate)
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0, $r2;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate r1;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.ProtocolWaveletUpdate;

        $r2 = (org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl) r1;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void copyFrom(org.waveprotocol.wave.communication.gwt.JsonMessage)>($r2);

        return;
    }

    public java.lang.String getWaveletName()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: java.lang.String getPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setWaveletName(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String,java.lang.String)>(r0, "1", r1);

        return;
    }

    public java.util.List getAppliedDelta()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        int $i0, i1;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void initArray(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: int getAppliedDeltaSize()>();

        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl getAppliedDelta(int)>(i1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllAppliedDelta(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r3;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r4;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.federation.ProtocolWaveletDelta) $r2;

        virtualinvoke r4.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: void addAppliedDelta(org.waveprotocol.wave.federation.ProtocolWaveletDelta)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl getAppliedDelta(int)
    {
        int i0, $i1, $i2;
        java.lang.String $r12, $r18;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl $r5;
        com.google.gwt.core.client.JavaScriptObject $r1, $r2, $r4;
        java.lang.IllegalArgumentException $r6, $r13;
        com.google.gwt.core.client.JsArray r3;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        i0 := @parameter0: int;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void initArray(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r2 = virtualinvoke $r1.<com.google.gwt.core.client.JavaScriptObject: com.google.gwt.core.client.JavaScriptObject cast()>();

        r3 = (com.google.gwt.core.client.JsArray) $r2;

        if i0 >= 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        $i1 = virtualinvoke r3.<com.google.gwt.core.client.JsArray: int length()>();

        if $i1 > i0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">= array length ");

        $i2 = virtualinvoke r3.<com.google.gwt.core.client.JsArray: int length()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        $r4 = virtualinvoke r3.<com.google.gwt.core.client.JsArray: com.google.gwt.core.client.JavaScriptObject get(int)>(i0);

        $r5 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl) $r4;

        return $r5;
    }

    public void setAppliedDelta(int, org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r2;
        com.google.gwt.core.client.JavaScriptObject $r1;
        java.lang.IllegalArgumentException $r5;
        com.google.gwt.core.client.JsArray $r4;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        int i0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl $r3;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        if i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void initArray(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r4 = (com.google.gwt.core.client.JsArray) $r1;

        $r3 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl) r2;

        virtualinvoke $r4.<com.google.gwt.core.client.JsArray: void set(int,com.google.gwt.core.client.JavaScriptObject)>(i0, $r3);

        return;
    }

    public int getAppliedDeltaSize()
    {
        com.google.gwt.core.client.JsArray $r2;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r2 = (com.google.gwt.core.client.JsArray) $r1;

        $i0 = virtualinvoke $r2.<com.google.gwt.core.client.JsArray: int length()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void addAppliedDelta(org.waveprotocol.wave.federation.ProtocolWaveletDelta)
    {
        com.google.gwt.core.client.JsArray $r4;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta r2;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl $r3;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletDelta;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void initArray(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r4 = (com.google.gwt.core.client.JsArray) $r1;

        $r3 = (org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl) r2;

        virtualinvoke $r4.<com.google.gwt.core.client.JsArray: void push(com.google.gwt.core.client.JavaScriptObject)>($r3);

        return;
    }

    public void clearAppliedDelta()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void clearArray(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        return;
    }

    public boolean hasCommitNotice()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        return $z0;
    }

    public void clearCommitNotice()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

     label1:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersion getCommitNotice()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setCommitNotice(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "3", $r2);

        return;
    }

    public boolean hasResultingVersion()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        return $z0;
    }

    public void clearResultingVersion()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

     label1:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersion getResultingVersion()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setResultingVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "4", $r2);

        return;
    }

    public boolean hasSnapshot()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "5");

        return $z0;
    }

    public void clearSnapshot()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "5");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "5");

     label1:
        return;
    }

    public org.waveprotocol.box.common.comms.WaveletSnapshot getSnapshot()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.box.common.comms.jso.WaveletSnapshotJsoImpl $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "5");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "5");

        $r2 = (org.waveprotocol.box.common.comms.jso.WaveletSnapshotJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setSnapshot(org.waveprotocol.box.common.comms.WaveletSnapshot)
    {
        org.waveprotocol.box.common.comms.WaveletSnapshot r1;
        org.waveprotocol.box.common.comms.jso.WaveletSnapshotJsoImpl $r2;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletSnapshot;

        $r2 = (org.waveprotocol.box.common.comms.jso.WaveletSnapshotJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "5", $r2);

        return;
    }

    public boolean hasMarker()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "6");

        return $z0;
    }

    public void clearMarker()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "6");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "6");

     label1:
        return;
    }

    public boolean getMarker()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "6");

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean getPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "6");

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setMarker(boolean)
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        z0 := @parameter0: boolean;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsBoolean(com.google.gwt.core.client.JavaScriptObject,java.lang.String,boolean)>(r0, "6", z0);

        return;
    }

    public boolean hasChannelId()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "7");

        return $z0;
    }

    public void clearChannelId()
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "7");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "7");

     label1:
        return;
    }

    public java.lang.String getChannelId()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "7");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: java.lang.String getPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "7");

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setChannelId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsString(com.google.gwt.core.client.JavaScriptObject,java.lang.String,java.lang.String)>(r0, "7", r1);

        return;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r1;
        org.waveprotocol.box.common.comms.ProtocolWaveletUpdate $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: boolean nativeIsEqualTo(java.lang.Object)>(r0);

        return $z3;

     label1:
        $z1 = r0 instanceof org.waveprotocol.box.common.comms.ProtocolWaveletUpdate;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.box.common.comms.ProtocolWaveletUpdate) r0;

        $z2 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolWaveletUpdateUtil: boolean isEqual(org.waveprotocol.box.common.comms.ProtocolWaveletUpdate,org.waveprotocol.box.common.comms.ProtocolWaveletUpdate)>(r1, $r2);

        return $z2;

     label2:
        return 0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolWaveletDelta getAppliedDelta(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl r0;
        org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl $r1;

        r0 := @this: org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: org.waveprotocol.wave.federation.jso.ProtocolWaveletDeltaJsoImpl getAppliedDelta(int)>(i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyChannelId> = "7";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyMarker> = "6";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keySnapshot> = "5";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyResultingVersion> = "4";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyCommitNotice> = "3";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyAppliedDelta> = "2";

        <org.waveprotocol.box.common.comms.jso.ProtocolWaveletUpdateJsoImpl: java.lang.String keyWaveletName> = "1";

        return;
    }
}
