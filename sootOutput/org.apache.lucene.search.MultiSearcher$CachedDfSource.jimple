class org.apache.lucene.search.MultiSearcher$CachedDfSource extends org.apache.lucene.search.Searcher
{
    private final java.util.Map dfMap;
    private final int maxDoc;

    public void <init>(java.util.Map, int, org.apache.lucene.search.Similarity)
    {
        org.apache.lucene.search.MultiSearcher$CachedDfSource r0;
        org.apache.lucene.search.Similarity r2;
        java.util.Map r1;
        int i0;

        r0 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.search.Similarity;

        specialinvoke r0.<org.apache.lucene.search.Searcher: void <init>()>();

        r0.<org.apache.lucene.search.MultiSearcher$CachedDfSource: java.util.Map dfMap> = r1;

        r0.<org.apache.lucene.search.MultiSearcher$CachedDfSource: int maxDoc> = i0;

        virtualinvoke r0.<org.apache.lucene.search.MultiSearcher$CachedDfSource: void setSimilarity(org.apache.lucene.search.Similarity)>(r2);

        return;
    }

    public int docFreq(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.Term r1;
        java.lang.IllegalArgumentException $r6;
        java.lang.Integer $r4;
        java.lang.NullPointerException $r5;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r9, $r12;

        r0 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r1 := @parameter0: org.apache.lucene.index.Term;

     label1:
        $r2 = r0.<org.apache.lucene.search.MultiSearcher$CachedDfSource: java.util.Map dfMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("df for term ");

        $r9 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String text()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not available");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label4:
        return $i0;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public int[] docFreqs(org.apache.lucene.index.Term[])
    {
        org.apache.lucene.index.Term $r3;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r2;
        int[] r1;
        int $i0, $i1, $i2, i3;
        org.apache.lucene.index.Term[] r0;

        r2 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r0 := @parameter0: org.apache.lucene.index.Term[];

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $r3 = r0[i3];

        $i2 = virtualinvoke r2.<org.apache.lucene.search.MultiSearcher$CachedDfSource: int docFreq(org.apache.lucene.index.Term)>($r3);

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int maxDoc()
    {
        int $i0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r0;

        r0 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        $i0 = r0.<org.apache.lucene.search.MultiSearcher$CachedDfSource: int maxDoc>;

        return $i0;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)
    {
        org.apache.lucene.search.Query r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r0 := @parameter0: org.apache.lucene.search.Query;

        return r0;
    }

    public void close()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.document.Document doc(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.document.Document doc(int, org.apache.lucene.document.FieldSelector)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;
        org.apache.lucene.document.FieldSelector r2;
        int i0;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.document.FieldSelector;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Weight, int)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;
        org.apache.lucene.search.Weight r2;
        int i0;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r2 := @parameter0: org.apache.lucene.search.Weight;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector)
    {
        org.apache.lucene.search.Filter r3;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;
        org.apache.lucene.search.Weight r2;
        org.apache.lucene.search.Collector r4;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r2 := @parameter0: org.apache.lucene.search.Weight;

        r3 := @parameter1: org.apache.lucene.search.Filter;

        r4 := @parameter2: org.apache.lucene.search.Collector;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int)
    {
        org.apache.lucene.search.Filter r3;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;
        org.apache.lucene.search.Weight r2;
        int i0;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r2 := @parameter0: org.apache.lucene.search.Weight;

        r3 := @parameter1: org.apache.lucene.search.Filter;

        i0 := @parameter2: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort)
    {
        org.apache.lucene.search.Filter r3;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.MultiSearcher$CachedDfSource r1;
        org.apache.lucene.search.Sort r4;
        org.apache.lucene.search.Weight r2;
        int i0;

        r1 := @this: org.apache.lucene.search.MultiSearcher$CachedDfSource;

        r2 := @parameter0: org.apache.lucene.search.Weight;

        r3 := @parameter1: org.apache.lucene.search.Filter;

        i0 := @parameter2: int;

        r4 := @parameter3: org.apache.lucene.search.Sort;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
