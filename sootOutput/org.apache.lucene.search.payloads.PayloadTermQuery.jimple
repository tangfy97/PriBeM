public class org.apache.lucene.search.payloads.PayloadTermQuery extends org.apache.lucene.search.spans.SpanTermQuery
{
    protected org.apache.lucene.search.payloads.PayloadFunction function;
    private boolean includeSpanScore;

    public void <init>(org.apache.lucene.index.Term, org.apache.lucene.search.payloads.PayloadFunction)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.search.payloads.PayloadFunction r2;

        r0 := @this: org.apache.lucene.search.payloads.PayloadTermQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: org.apache.lucene.search.payloads.PayloadFunction;

        specialinvoke r0.<org.apache.lucene.search.payloads.PayloadTermQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.search.payloads.PayloadFunction,boolean)>(r1, r2, 1);

        return;
    }

    public void <init>(org.apache.lucene.index.Term, org.apache.lucene.search.payloads.PayloadFunction, boolean)
    {
        org.apache.lucene.search.payloads.PayloadFunction r2;
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        org.apache.lucene.index.Term r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.payloads.PayloadTermQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: org.apache.lucene.search.payloads.PayloadFunction;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.search.spans.SpanTermQuery: void <init>(org.apache.lucene.index.Term)>(r1);

        r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function> = r2;

        r0.<org.apache.lucene.search.payloads.PayloadTermQuery: boolean includeSpanScore> = z0;

        return;
    }

    public org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r1;
        org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight $r0;
        org.apache.lucene.search.IndexSearcher r2;

        r1 := @this: org.apache.lucene.search.payloads.PayloadTermQuery;

        r2 := @parameter0: org.apache.lucene.search.IndexSearcher;

        $r0 = new org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight;

        specialinvoke $r0.<org.apache.lucene.search.payloads.PayloadTermQuery$PayloadTermWeight: void <init>(org.apache.lucene.search.payloads.PayloadTermQuery,org.apache.lucene.search.payloads.PayloadTermQuery,org.apache.lucene.search.IndexSearcher)>(r1, r1, r2);

        return $r0;
    }

    public int hashCode()
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        short $s6;
        org.apache.lucene.search.payloads.PayloadFunction $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.payloads.PayloadTermQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.spans.SpanTermQuery: int hashCode()>();

        $i1 = 31 * $i0;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r1 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $i5 = virtualinvoke $r2.<org.apache.lucene.search.payloads.PayloadFunction: int hashCode()>();

     label2:
        $i4 = $i1 + $i5;

        $i2 = 31 * $i4;

        $z0 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: boolean includeSpanScore>;

        if $z0 == 0 goto label3;

        $s6 = 1231;

        goto label4;

     label3:
        $s6 = 1237;

     label4:
        $i3 = $i2 + $s6;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0, r4;
        org.apache.lucene.search.payloads.PayloadFunction $r5, $r6, $r7, $r8;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.lucene.search.payloads.PayloadTermQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.search.spans.SpanTermQuery: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.payloads.PayloadTermQuery) r1;

        $r5 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r5 != null goto label4;

        $r8 = r4.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $r6 = r4.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.search.payloads.PayloadFunction function>;

        $z1 = virtualinvoke $r7.<org.apache.lucene.search.payloads.PayloadFunction: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $z3 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: boolean includeSpanScore>;

        $z2 = r4.<org.apache.lucene.search.payloads.PayloadTermQuery: boolean includeSpanScore>;

        if $z3 == $z2 goto label6;

        return 0;

     label6:
        return 1;
    }

    static org.apache.lucene.index.Term access$100(org.apache.lucene.search.payloads.PayloadTermQuery)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        org.apache.lucene.index.Term $r1;

        r0 := @parameter0: org.apache.lucene.search.payloads.PayloadTermQuery;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term term>;

        return $r1;
    }

    static org.apache.lucene.index.Term access$200(org.apache.lucene.search.payloads.PayloadTermQuery)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        org.apache.lucene.index.Term $r1;

        r0 := @parameter0: org.apache.lucene.search.payloads.PayloadTermQuery;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term term>;

        return $r1;
    }

    static boolean access$300(org.apache.lucene.search.payloads.PayloadTermQuery)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.search.payloads.PayloadTermQuery;

        $z0 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: boolean includeSpanScore>;

        return $z0;
    }

    static org.apache.lucene.index.Term access$400(org.apache.lucene.search.payloads.PayloadTermQuery)
    {
        org.apache.lucene.search.payloads.PayloadTermQuery r0;
        org.apache.lucene.index.Term $r1;

        r0 := @parameter0: org.apache.lucene.search.payloads.PayloadTermQuery;

        $r1 = r0.<org.apache.lucene.search.payloads.PayloadTermQuery: org.apache.lucene.index.Term term>;

        return $r1;
    }
}
