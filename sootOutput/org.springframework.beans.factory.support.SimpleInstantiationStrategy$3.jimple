final class org.springframework.beans.factory.support.SimpleInstantiationStrategy$3 extends java.lang.Object implements java.security.PrivilegedAction
{
    final org.springframework.beans.factory.support.SimpleInstantiationStrategy this$0;
    private final java.lang.reflect.Method val$factoryMethod;

    void <init>(org.springframework.beans.factory.support.SimpleInstantiationStrategy, java.lang.reflect.Method)
    {
        org.springframework.beans.factory.support.SimpleInstantiationStrategy r1;
        java.lang.reflect.Method r2;
        org.springframework.beans.factory.support.SimpleInstantiationStrategy$3 r0;

        r0 := @this: org.springframework.beans.factory.support.SimpleInstantiationStrategy$3;

        r1 := @parameter0: org.springframework.beans.factory.support.SimpleInstantiationStrategy;

        r2 := @parameter1: java.lang.reflect.Method;

        r0.<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: org.springframework.beans.factory.support.SimpleInstantiationStrategy this$0> = r1;

        r0.<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: java.lang.reflect.Method val$factoryMethod> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        java.lang.reflect.Method $r1;
        org.springframework.beans.factory.support.SimpleInstantiationStrategy$3 r0;

        r0 := @this: org.springframework.beans.factory.support.SimpleInstantiationStrategy$3;

        $r1 = r0.<org.springframework.beans.factory.support.SimpleInstantiationStrategy$3: java.lang.reflect.Method val$factoryMethod>;

        staticinvoke <org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Method)>($r1);

        return null;
    }
}
