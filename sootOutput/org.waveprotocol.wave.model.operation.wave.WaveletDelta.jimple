public final class org.waveprotocol.wave.model.operation.wave.WaveletDelta extends java.util.AbstractList
{
    private final org.waveprotocol.wave.model.wave.ParticipantId author;
    private final org.waveprotocol.wave.model.version.HashedVersion targetVersion;
    private final java.util.List ops;

    public void <init>(org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.version.HashedVersion, java.lang.Iterable)
    {
        java.util.List $r5;
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        org.waveprotocol.wave.model.version.HashedVersion r2;
        org.waveprotocol.wave.model.wave.ParticipantId r1;
        java.lang.Iterable r3;
        java.util.ArrayList $r4;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        r2 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        r3 := @parameter2: java.lang.Iterable;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author> = r1;

        r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion> = r2;

        $r4 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.ArrayList newArrayList(java.lang.Iterable)>(r3);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops> = $r5;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getAuthor()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author>;

        return $r1;
    }

    public org.waveprotocol.wave.model.version.HashedVersion getTargetVersion()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        org.waveprotocol.wave.model.version.HashedVersion $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        return $r1;
    }

    public long getResultingVersion()
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        org.waveprotocol.wave.model.version.HashedVersion $r1;
        int $i1;
        long $l0, $l2, $l3;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $r2 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        return $l3;
    }

    public int size()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public org.waveprotocol.wave.model.operation.wave.WaveletOperation get(int)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperation $r3;
        java.util.List $r1;
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.waveprotocol.wave.model.operation.wave.WaveletOperation) $r2;

        return $r3;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperation r6;
        java.util.Iterator $r4;
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        org.waveprotocol.wave.model.version.HashedVersion $r2;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: int hashCode()>();

        i5 = 527 + $i0;

        $i1 = 31 * i5;

        $r2 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        $i2 = virtualinvoke $r2.<org.waveprotocol.wave.model.version.HashedVersion: int hashCode()>();

        i6 = $i1 + $i2;

        $r3 = r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.waveprotocol.wave.model.operation.wave.WaveletOperation) $r5;

        $i3 = 31 * i6;

        $i4 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        i6 = $i3 + $i4;

        goto label1;

     label2:
        return i6;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r1, r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r4;
        java.util.List $r7, $r8;
        org.waveprotocol.wave.model.version.HashedVersion $r5, $r6;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        if $z0 == 0 goto label4;

        r2 = (org.waveprotocol.wave.model.operation.wave.WaveletDelta) r0;

        $r4 = r1.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author>;

        $r3 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r1.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        $r5 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        $z2 = virtualinvoke $r6.<org.waveprotocol.wave.model.version.HashedVersion: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $r8 = r1.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $r7 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r3;
        org.waveprotocol.wave.model.version.HashedVersion $r5;
        int $i0, $i1, i2;
        java.lang.String $r15;
        boolean $z0;
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r2;
        java.util.List $r7, $r9, $r12, $r14, $r17;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r8, $r10, $r11, $r16;
        java.lang.Object $r13, $r18;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CoreWaveletDelta(");

        $r3 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.wave.ParticipantId author>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.version.HashedVersion targetVersion>;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $z0 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        goto label4;

     label1:
        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ops: [");

        $r12 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        i2 = 1;

     label2:
        $r14 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $i1 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r17 = r2.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: java.util.List ops>;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        i2 = i2 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public volatile java.lang.Object get(int)
    {
        org.waveprotocol.wave.model.operation.wave.WaveletDelta r0;
        int i0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletDelta;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletDelta: org.waveprotocol.wave.model.operation.wave.WaveletOperation get(int)>(i0);

        return $r1;
    }
}
