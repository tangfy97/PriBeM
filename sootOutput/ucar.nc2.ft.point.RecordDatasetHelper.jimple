public class ucar.nc2.ft.point.RecordDatasetHelper extends java.lang.Object
{
    private static org.slf4j.Logger log;
    protected ucar.nc2.dataset.NetcdfDataset ncfile;
    protected java.lang.String obsTimeVName;
    protected java.lang.String nomTimeVName;
    protected java.lang.String latVName;
    protected java.lang.String lonVName;
    protected java.lang.String zcoordVName;
    protected java.lang.String zcoordUnits;
    protected java.lang.String stnIdVName;
    protected java.lang.String stnIndexVName;
    protected java.lang.String stnDescVName;
    protected ucar.nc2.ft.point.StationHelper stationHelper;
    protected ucar.ma2.DataType stationIdType;
    protected ucar.nc2.dataset.StructureDS recordVar;
    protected ucar.nc2.Dimension obsDim;
    protected ucar.unidata.geoloc.LatLonRect boundingBox;
    protected double minDate;
    protected double maxDate;
    protected ucar.nc2.units.DateUnit timeUnit;
    protected double altScaleFactor;
    protected java.util.Formatter errs;
    protected boolean showErrors;
    private ucar.nc2.units.DateFormatter formatter;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String, java.util.List, java.lang.String, java.util.Formatter)
    {
        java.util.Formatter r4, $r39, $r42;
        boolean $z0, $z1, $z2;
        ucar.nc2.Group $r8, $r33;
        java.lang.Exception $r37, $r38;
        java.util.List $r13, r22;
        ucar.nc2.dataset.StructurePseudoDS $r10;
        java.lang.StringBuilder $r24, $r25, $r28, $r29;
        java.lang.Object[] $r41;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        ucar.nc2.Variable $r15, $r34, r44;
        java.lang.String r2, r3, r6, $r16, $r27, $r30, $r43;
        java.util.Iterator $r14;
        ucar.nc2.units.DateUnit $r17, $r40;
        java.lang.IllegalArgumentException $r23;
        ucar.nc2.dataset.StructureDS $r19, $r35;
        ucar.nc2.Dimension $r9, $r11, $r20, $r21, $r36;
        java.lang.Object $r18;
        ucar.nc2.dataset.NetcdfDataset r1, $r5, $r7, $r12, $r26, $r31, $r32;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r22 := @parameter3: java.util.List;

        r6 := @parameter4: java.lang.String;

        r4 := @parameter5: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: double altScaleFactor> = 1.0;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs> = null;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: boolean showErrors> = 1;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile> = r1;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String obsTimeVName> = r2;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String nomTimeVName> = r3;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs> = r4;

        $r5 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $z0 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: boolean hasUnlimitedDimension()>();

        if $z0 == 0 goto label01;

        $r31 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        virtualinvoke $r31.<ucar.nc2.dataset.NetcdfDataset: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

        $r32 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r33 = virtualinvoke $r32.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r34 = virtualinvoke $r33.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("record");

        $r35 = (ucar.nc2.dataset.StructureDS) $r34;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar> = $r35;

        $r36 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.Dimension obsDim> = $r36;

        goto label03;

     label01:
        if r6 != null goto label02;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File <");

        $r26 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r27 = virtualinvoke $r26.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> has no unlimited dimension, specify psuedo record dimension with observationDimension global attribute.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r23;

     label02:
        $r7 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r9 = virtualinvoke $r8.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r6);

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.Dimension obsDim> = $r9;

        $r10 = new ucar.nc2.dataset.StructurePseudoDS;

        $r12 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r11 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.Dimension obsDim>;

        specialinvoke $r10.<ucar.nc2.dataset.StructurePseudoDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension)>($r12, null, "record", null, $r11);

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar> = $r10;

     label03:
        $r13 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r18 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r44 = (ucar.nc2.Variable) $r18;

        $r19 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        if r44 != $r19 goto label05;

        goto label04;

     label05:
        $z1 = virtualinvoke r44.<ucar.nc2.Variable: boolean isScalar()>();

        if $z1 == 0 goto label06;

        goto label04;

     label06:
        $r20 = virtualinvoke r44.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r21 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.Dimension obsDim>;

        if $r20 != $r21 goto label07;

        interfaceinvoke r22.<java.util.List: boolean add(java.lang.Object)>(r44);

     label07:
        goto label04;

     label08:
        $r15 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r2);

        $r16 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r15, "units", "seconds since 1970-01-01");

     label09:
        $r17 = new ucar.nc2.units.DateUnit;

        specialinvoke $r17.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r16);

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit> = $r17;

     label10:
        goto label15;

     label11:
        $r38 := @caughtexception;

        $r39 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs>;

        if null == $r39 goto label12;

        $r42 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs>;

        $r41 = newarray (java.lang.Object)[2];

        $r41[0] = $r16;

        $r43 = virtualinvoke $r38.<java.lang.Exception: java.lang.String getMessage()>();

        $r41[1] = $r43;

        virtualinvoke $r42.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Error on string = %s == %s\n", $r41);

     label12:
        $r40 = new ucar.nc2.units.DateUnit;

        specialinvoke $r40.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("seconds since 1970-01-01");

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit> = $r40;

     label13:
        goto label15;

     label14:
        $r37 := @caughtexception;

     label15:
        return;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public void setStationInfo(java.lang.String, java.lang.String, java.lang.String, ucar.nc2.ft.point.StationHelper)
    {
        ucar.ma2.DataType $r7;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        ucar.nc2.ft.point.StationHelper r4;
        ucar.nc2.Variable $r6;
        java.lang.String r1, r2, r3;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: ucar.nc2.ft.point.StationHelper;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String stnIdVName> = r1;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String stnDescVName> = r2;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String stnIndexVName> = r3;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.ft.point.StationHelper stationHelper> = r4;

        if r1 == null goto label1;

        $r5 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.ma2.DataType stationIdType> = $r7;

     label1:
        return;
    }

    public void setLocationInfo(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r12;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        java.util.Formatter $r11, $r13;
        ucar.nc2.Variable $r5;
        java.lang.String r1, r2, r3, $r7, $r8, $r9, $r14;
        double $d0;
        java.lang.Exception $r10;
        ucar.nc2.dataset.NetcdfDataset $r4, $r6;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String latVName> = r1;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String lonVName> = r2;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordVName> = r3;

        if r3 == null goto label4;

        $r4 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r3);

        $r6 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r7 = virtualinvoke $r6.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r5, "units", null);

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordUnits> = $r7;

        $r8 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordUnits>;

        if $r8 == null goto label4;

     label1:
        $r9 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordUnits>;

        $d0 = staticinvoke <ucar.nc2.ft.point.RecordDatasetHelper: double getMetersConversionFactor(java.lang.String)>($r9);

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: double altScaleFactor> = $d0;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs>;

        if $r11 == null goto label4;

        $r13 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.util.Formatter errs>;

        $r12 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        $r12[0] = $r14;

        virtualinvoke $r13.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r12);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setShortNames(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2, r3, r4, r5;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String latVName> = r1;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String lonVName> = r2;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordVName> = r3;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String obsTimeVName> = r4;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String nomTimeVName> = r5;

        return;
    }

    protected static double getMetersConversionFactor(java.lang.String) throws java.lang.Exception
    {
        ucar.nc2.units.SimpleUnit $r1, $r2;
        java.lang.String r0;
        double $d0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit factoryWithExceptions(java.lang.String)>(r0);

        $r2 = <ucar.nc2.units.SimpleUnit: ucar.nc2.units.SimpleUnit meterUnit>;

        $d0 = virtualinvoke $r1.<ucar.nc2.units.SimpleUnit: double convertTo(double,ucar.nc2.units.SimpleUnit)>(1.0, $r2);

        return $d0;
    }

    public ucar.nc2.Structure getRecordVar()
    {
        ucar.nc2.dataset.StructureDS $r1;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        $r1 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        return $r1;
    }

    public int getRecordCount()
    {
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        $r1 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public void setTimeUnit(ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r1;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: ucar.nc2.units.DateUnit;

        r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit> = r1;

        return;
    }

    public ucar.nc2.units.DateUnit getTimeUnit()
    {
        ucar.nc2.units.DateUnit $r1;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        $r1 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        return $r1;
    }

    public ucar.unidata.geoloc.LatLonPoint getLocation(ucar.ma2.StructureData)
    {
        ucar.nc2.ft.point.RecordDatasetHelper r2;
        ucar.ma2.StructureMembers$Member $r4, $r6;
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r3, $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r7;
        double $d0, $d1;

        r2 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.ma2.StructureData;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r3 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String latVName>;

        $r4 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r3);

        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r4);

        $r5 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String lonVName>;

        $r6 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r5);

        $d1 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r6);

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        return $r7;
    }

    public double getLatitude(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r3;
        ucar.nc2.ft.point.RecordDatasetHelper r2;
        ucar.ma2.StructureMembers$Member $r4;
        double $d0;

        r2 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.ma2.StructureData;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r3 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String latVName>;

        $r4 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r3);

        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r4);

        return $d0;
    }

    public double getLongitude(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r3;
        ucar.nc2.ft.point.RecordDatasetHelper r2;
        ucar.ma2.StructureMembers$Member $r4;
        double $d0;

        r2 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.ma2.StructureData;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r3 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String lonVName>;

        $r4 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r3);

        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r4);

        return $d0;
    }

    public double getZcoordinate(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r0;
        ucar.ma2.StructureMembers $r1;
        java.lang.String $r3, $r4;
        ucar.nc2.ft.point.RecordDatasetHelper r2;
        ucar.ma2.StructureMembers$Member $r5;
        double $d0;

        r2 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.ma2.StructureData;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r3 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordVName>;

        if $r3 != null goto label1;

        $d0 = #NaN;

        goto label2;

     label1:
        $r4 = r2.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordVName>;

        $r5 = virtualinvoke $r1.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r4);

        $d0 = virtualinvoke r0.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r5);

     label2:
        return $d0;
    }

    public java.lang.String getZcoordUnits()
    {
        java.lang.String $r1;
        ucar.nc2.ft.point.RecordDatasetHelper r0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        $r1 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String zcoordUnits>;

        return $r1;
    }

    public java.util.Date getObservationTimeAsDate(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r1;
        java.util.Date $r3;
        ucar.nc2.units.DateUnit $r2;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke r0.<ucar.nc2.ft.point.RecordDatasetHelper: double getObservationTime(ucar.ma2.StructureData)>(r1);

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r3;
    }

    public double getObservationTime(ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r1;
        java.lang.String $r2;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        ucar.ma2.StructureMembers$Member $r3;
        double $d0;

        r0 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter0: ucar.ma2.StructureData;

        $r2 = r0.<ucar.nc2.ft.point.RecordDatasetHelper: java.lang.String obsTimeVName>;

        $r3 = virtualinvoke r1.<ucar.ma2.StructureData: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r2);

        $d0 = specialinvoke r0.<ucar.nc2.ft.point.RecordDatasetHelper: double getTime(ucar.ma2.StructureMembers$Member,ucar.ma2.StructureData)>($r3, r1);

        return $d0;
    }

    private double getTime(ucar.ma2.StructureMembers$Member, ucar.ma2.StructureData)
    {
        java.util.Date $r8;
        long $l0;
        ucar.ma2.StructureMembers$Member r0;
        ucar.nc2.ft.point.RecordDatasetHelper r5;
        ucar.ma2.StructureData r3;
        java.lang.String $r4, $r17;
        java.text.ParseException $r12;
        double $d0, $d1, $d2;
        org.slf4j.Logger $r14;
        ucar.ma2.DataType $r1, $r2, $r10, $r11;
        java.lang.StringBuilder $r13, $r15, $r16;
        ucar.nc2.units.DateFormatter $r6, $r7, $r9;

        r5 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        r3 := @parameter1: ucar.ma2.StructureData;

        if r0 != null goto label1;

        return 0.0;

     label1:
        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 == $r2 goto label2;

        $r10 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r10 != $r11 goto label7;

     label2:
        $r4 = virtualinvoke r3.<ucar.ma2.StructureData: java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)>(r0);

        $r6 = r5.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateFormatter formatter>;

        if null != $r6 goto label3;

        $r9 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r9.<ucar.nc2.units.DateFormatter: void <init>()>();

        r5.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateFormatter formatter> = $r9;

     label3:
        $r7 = r5.<ucar.nc2.ft.point.RecordDatasetHelper: ucar.nc2.units.DateFormatter formatter>;

        $r8 = virtualinvoke $r7.<ucar.nc2.units.DateFormatter: java.util.Date isoDateTimeFormat(java.lang.String)>($r4);

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;

        $r14 = <ucar.nc2.ft.point.RecordDatasetHelper: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant parse date - not ISO formatted, = ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        return 0.0;

     label6:
        $l0 = virtualinvoke $r8.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        $d1 = $d0 / 1000.0;

        return $d1;

     label7:
        $d2 = virtualinvoke r3.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>(r0);

        return $d2;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    public ucar.nc2.ft.PointFeature factory(ucar.unidata.geoloc.StationImpl, ucar.ma2.StructureData, int)
    {
        ucar.ma2.StructureData r3;
        ucar.nc2.ft.point.RecordDatasetHelper$RecordPointObs $r4;
        ucar.unidata.geoloc.StationImpl r0;
        ucar.nc2.ft.point.RecordDatasetHelper$RecordStationObs $r1;
        int i0;
        ucar.nc2.ft.point.RecordDatasetHelper r2;

        r2 := @this: ucar.nc2.ft.point.RecordDatasetHelper;

        r0 := @parameter0: ucar.unidata.geoloc.StationImpl;

        r3 := @parameter1: ucar.ma2.StructureData;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        $r4 = new ucar.nc2.ft.point.RecordDatasetHelper$RecordPointObs;

        specialinvoke $r4.<ucar.nc2.ft.point.RecordDatasetHelper$RecordPointObs: void <init>(ucar.nc2.ft.point.RecordDatasetHelper,ucar.ma2.StructureData,int)>(r2, r3, i0);

        return $r4;

     label1:
        $r1 = new ucar.nc2.ft.point.RecordDatasetHelper$RecordStationObs;

        specialinvoke $r1.<ucar.nc2.ft.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.ft.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,ucar.ma2.StructureData,int)>(r2, r0, r3, i0);

        return $r1;
    }

    static double access$000(ucar.nc2.ft.point.RecordDatasetHelper, ucar.ma2.StructureMembers$Member, ucar.ma2.StructureData)
    {
        ucar.ma2.StructureData r2;
        ucar.nc2.ft.point.RecordDatasetHelper r0;
        ucar.ma2.StructureMembers$Member r1;
        double $d0;

        r0 := @parameter0: ucar.nc2.ft.point.RecordDatasetHelper;

        r1 := @parameter1: ucar.ma2.StructureMembers$Member;

        r2 := @parameter2: ucar.ma2.StructureData;

        $d0 = specialinvoke r0.<ucar.nc2.ft.point.RecordDatasetHelper: double getTime(ucar.ma2.StructureMembers$Member,ucar.ma2.StructureData)>(r1, r2);

        return $d0;
    }

    static org.slf4j.Logger access$100()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.ft.point.RecordDatasetHelper: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/point/RecordDatasetHelper;");

        <ucar.nc2.ft.point.RecordDatasetHelper: org.slf4j.Logger log> = $r0;

        return;
    }
}
