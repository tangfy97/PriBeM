public final class org.apache.poi.xslf.usermodel.XSLFNotes extends org.apache.poi.xslf.usermodel.XSLFSheet
{
    private org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes;

    void <init>()
    {
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r3;
        org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide $r1, $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: void <init>()>();

        $r1 = staticinvoke <org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide prototype()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes> = $r1;

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld()>();

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: void setCommonSlideData(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData)>($r3);

        return;
    }

    void <init>(org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.PackageRelationship) throws java.io.IOException, org.apache.xmlbeans.XmlException
    {
        org.apache.poi.openxml4j.opc.PackageRelationship r2;
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData $r8;
        org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide $r6, $r7;
        org.apache.poi.openxml4j.opc.PackagePart r1, $r3;
        org.openxmlformats.schemas.presentationml.x2006.main.NotesDocument $r5;
        java.io.InputStream $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackageRelationship;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSheet: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r5 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.NotesDocument$Factory: org.openxmlformats.schemas.presentationml.x2006.main.NotesDocument parse(java.io.InputStream)>($r4);

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.presentationml.x2006.main.NotesDocument: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide getNotes()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes> = $r6;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData getCSld()>();

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: void setCommonSlideData(org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData)>($r8);

        return;
    }

    private static org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide prototype()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide $r0;

        $r0 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide$Factory: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide newInstance()>();

        interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide: org.openxmlformats.schemas.presentationml.x2006.main.CTCommonSlideData addNewCSld()>();

        return $r0;
    }

    public org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide _notes>;

        return $r1;
    }

    protected java.lang.String getRootElementName()
    {
        org.apache.poi.xslf.usermodel.XSLFNotes r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        return "notes";
    }

    public org.apache.poi.xslf.usermodel.XSLFNotesMaster getMasterSheet()
    {
        java.util.Iterator $r2;
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.apache.poi.xslf.usermodel.XSLFNotesMaster $r5;
        java.util.List $r1;
        org.apache.poi.POIXMLDocumentPart r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: java.util.List getRelations()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.POIXMLDocumentPart) $r3;

        $z1 = r4 instanceof org.apache.poi.xslf.usermodel.XSLFNotesMaster;

        if $z1 == 0 goto label2;

        $r5 = (org.apache.poi.xslf.usermodel.XSLFNotesMaster) r4;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public volatile org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()
    {
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.apache.poi.xslf.usermodel.XSLFNotesMaster $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.apache.poi.xslf.usermodel.XSLFNotesMaster getMasterSheet()>();

        return $r1;
    }

    public volatile org.apache.xmlbeans.XmlObject getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFNotes r0;
        org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFNotes;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFNotes: org.openxmlformats.schemas.presentationml.x2006.main.CTNotesSlide getXmlObject()>();

        return $r1;
    }
}
