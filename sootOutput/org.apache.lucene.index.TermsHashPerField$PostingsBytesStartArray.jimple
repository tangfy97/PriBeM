final class org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray extends org.apache.lucene.util.BytesRefHash$BytesStartArray
{
    private final org.apache.lucene.index.TermsHashPerField perField;
    private final org.apache.lucene.util.Counter bytesUsed;

    private void <init>(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.util.Counter)
    {
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.util.Counter r2;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r2 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.util.BytesRefHash$BytesStartArray: void <init>()>();

        r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField> = r1;

        r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.util.Counter bytesUsed> = r2;

        return;
    }

    public int[] init()
    {
        org.apache.lucene.index.TermsHashPerField $r1, $r3, $r6, $r8, $r10, $r12;
        org.apache.lucene.index.ParallelPostingsArray $r2, $r4, $r9, $r11, $r13;
        long $l3;
        int[] $r5;
        int $i0, $i1, $i2;
        org.apache.lucene.index.TermsHashConsumerPerField $r7;
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.util.Counter $r14;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        if $r2 != null goto label1;

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r6 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r7 = $r6.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        $r9 = virtualinvoke $r7.<org.apache.lucene.index.TermsHashConsumerPerField: org.apache.lucene.index.ParallelPostingsArray createPostingsArray(int)>(2);

        $r8.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray> = $r9;

        $r14 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.util.Counter bytesUsed>;

        $r10 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r11 = $r10.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $i0 = $r11.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        $r12 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r13 = $r12.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $i1 = virtualinvoke $r13.<org.apache.lucene.index.ParallelPostingsArray: int bytesPerPosting()>();

        $i2 = $i0 * $i1;

        $l3 = (long) $i2;

        virtualinvoke $r14.<org.apache.lucene.util.Counter: long addAndGet(long)>($l3);

     label1:
        $r3 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r4 = $r3.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r5 = $r4.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts>;

        return $r5;
    }

    public int[] grow()
    {
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.index.TermsHashPerField $r1, $r2, $r4;
        org.apache.lucene.index.ParallelPostingsArray $r3, $r5, r8;
        long $l5;
        org.apache.lucene.util.Counter $r6;
        int[] $r7;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        r8 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r3 = $r2.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        i0 = $r3.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        $r4 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r5 = virtualinvoke r8.<org.apache.lucene.index.ParallelPostingsArray: org.apache.lucene.index.ParallelPostingsArray grow()>();

        $r4.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray> = $r5;

        $r6 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.util.Counter bytesUsed>;

        $i1 = virtualinvoke $r5.<org.apache.lucene.index.ParallelPostingsArray: int bytesPerPosting()>();

        $i2 = $r5.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        $i3 = $i2 - i0;

        $i4 = $i1 * $i3;

        $l5 = (long) $i4;

        virtualinvoke $r6.<org.apache.lucene.util.Counter: long addAndGet(long)>($l5);

        $r7 = $r5.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts>;

        return $r7;
    }

    public int[] clear()
    {
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.index.TermsHashPerField $r1, $r3, $r5, $r8;
        org.apache.lucene.index.ParallelPostingsArray $r2, $r4, $r6;
        long $l4;
        org.apache.lucene.util.Counter $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r2 = $r1.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        if $r2 == null goto label1;

        $r7 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.util.Counter bytesUsed>;

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r4 = $r3.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $i0 = $r4.<org.apache.lucene.index.ParallelPostingsArray: int size>;

        $r5 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r6 = $r5.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $i1 = virtualinvoke $r6.<org.apache.lucene.index.ParallelPostingsArray: int bytesPerPosting()>();

        $i2 = $i0 * $i1;

        $i3 = neg $i2;

        $l4 = (long) $i3;

        virtualinvoke $r7.<org.apache.lucene.util.Counter: long addAndGet(long)>($l4);

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.index.TermsHashPerField perField>;

        $r8.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray> = null;

     label1:
        return null;
    }

    public org.apache.lucene.util.Counter bytesUsed()
    {
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.util.Counter $r1;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: org.apache.lucene.util.Counter bytesUsed>;

        return $r1;
    }

    void <init>(org.apache.lucene.index.TermsHashPerField, org.apache.lucene.util.Counter, org.apache.lucene.index.TermsHashPerField$1)
    {
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray r0;
        org.apache.lucene.util.Counter r2;
        org.apache.lucene.index.TermsHashPerField r1;
        org.apache.lucene.index.TermsHashPerField$1 r3;

        r0 := @this: org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        r1 := @parameter0: org.apache.lucene.index.TermsHashPerField;

        r2 := @parameter1: org.apache.lucene.util.Counter;

        r3 := @parameter2: org.apache.lucene.index.TermsHashPerField$1;

        specialinvoke r0.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: void <init>(org.apache.lucene.index.TermsHashPerField,org.apache.lucene.util.Counter)>(r1, r2);

        return;
    }
}
