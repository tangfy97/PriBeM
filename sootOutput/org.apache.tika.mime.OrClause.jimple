class org.apache.tika.mime.OrClause extends java.lang.Object implements org.apache.tika.mime.Clause
{
    private final java.util.List clauses;

    void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.tika.mime.OrClause r0;

        r0 := @this: org.apache.tika.mime.OrClause;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.mime.OrClause: java.util.List clauses> = r1;

        return;
    }

    public boolean eval(byte[])
    {
        byte[] r5;
        org.apache.tika.mime.OrClause r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.tika.mime.Clause r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.tika.mime.OrClause;

        r5 := @parameter0: byte[];

        $r1 = r0.<org.apache.tika.mime.OrClause: java.util.List clauses>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.tika.mime.Clause) $r3;

        $z1 = interfaceinvoke r4.<org.apache.tika.mime.Clause: boolean eval(byte[])>(r5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public int size()
    {
        org.apache.tika.mime.OrClause r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.tika.mime.Clause r4;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.tika.mime.OrClause;

        i1 = 0;

        $r1 = r0.<org.apache.tika.mime.OrClause: java.util.List clauses>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.tika.mime.Clause) $r3;

        $i0 = interfaceinvoke r4.<org.apache.tika.mime.Clause: int size()>();

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i0);

        goto label1;

     label2:
        return i1;
    }

    public java.lang.String toString()
    {
        java.util.List $r3;
        org.apache.tika.mime.OrClause r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r5;

        r2 := @this: org.apache.tika.mime.OrClause;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("or");

        $r3 = r2.<org.apache.tika.mime.OrClause: java.util.List clauses>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
