public class org.apache.batik.svggen.font.table.SingleSubstFormat2 extends org.apache.batik.svggen.font.table.SingleSubst
{
    private int coverageOffset;
    private int glyphCount;
    private int[] substitutes;
    private org.apache.batik.svggen.font.table.Coverage coverage;

    protected void <init>(java.io.RandomAccessFile, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        long $l8;
        org.apache.batik.svggen.font.table.SingleSubstFormat2 r0;
        org.apache.batik.svggen.font.table.Coverage $r4;
        int[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, i9;

        r0 := @this: org.apache.batik.svggen.font.table.SingleSubstFormat2;

        r1 := @parameter0: java.io.RandomAccessFile;

        i5 := @parameter1: int;

        specialinvoke r0.<org.apache.batik.svggen.font.table.SingleSubst: void <init>()>();

        $i0 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int coverageOffset> = $i0;

        $i1 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int glyphCount> = $i1;

        $i2 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int glyphCount>;

        $r2 = newarray (int)[$i2];

        r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int[] substitutes> = $r2;

        i9 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int[] substitutes>;

        $i4 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r3[i9] = $i4;

        i9 = i9 + 1;

     label2:
        $i3 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int glyphCount>;

        if i9 < $i3 goto label1;

        $i6 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int coverageOffset>;

        $i7 = i5 + $i6;

        $l8 = (long) $i7;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l8);

        $r4 = staticinvoke <org.apache.batik.svggen.font.table.Coverage: org.apache.batik.svggen.font.table.Coverage read(java.io.RandomAccessFile)>(r1);

        r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: org.apache.batik.svggen.font.table.Coverage coverage> = $r4;

        return;
    }

    public int getFormat()
    {
        org.apache.batik.svggen.font.table.SingleSubstFormat2 r0;

        r0 := @this: org.apache.batik.svggen.font.table.SingleSubstFormat2;

        return 2;
    }

    public int substitute(int)
    {
        org.apache.batik.svggen.font.table.SingleSubstFormat2 r0;
        org.apache.batik.svggen.font.table.Coverage $r1;
        int[] $r2;
        int i0, $i1, $i2, $i4;

        r0 := @this: org.apache.batik.svggen.font.table.SingleSubstFormat2;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: org.apache.batik.svggen.font.table.Coverage coverage>;

        $i1 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.Coverage: int findGlyph(int)>(i0);

        $i4 = (int) -1;

        if $i1 <= $i4 goto label1;

        $r2 = r0.<org.apache.batik.svggen.font.table.SingleSubstFormat2: int[] substitutes>;

        $i2 = $r2[$i1];

        return $i2;

     label1:
        return i0;
    }
}
