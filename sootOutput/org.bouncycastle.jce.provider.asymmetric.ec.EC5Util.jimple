public class org.bouncycastle.jce.provider.asymmetric.ec.EC5Util extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.asymmetric.ec.EC5Util r0;

        r0 := @this: org.bouncycastle.jce.provider.asymmetric.ec.EC5Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve, byte[])
    {
        byte[] r24;
        java.security.spec.ECFieldF2m $r4, $r11;
        int[] $r2, $r9;
        java.math.BigInteger $r6, $r8, $r13, $r15, $r19, $r21, $r23;
        boolean $z0, $z1;
        java.security.spec.EllipticCurve $r3, $r10, $r16;
        java.security.spec.ECFieldFp $r17;
        org.bouncycastle.math.ec.ECCurve$F2m r1;
        org.bouncycastle.math.ec.ECFieldElement $r5, $r7, $r12, $r14, $r20, $r22;
        org.bouncycastle.math.ec.ECCurve$Fp $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.math.ec.ECCurve r0;

        r0 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        r24 := @parameter1: byte[];

        $z0 = r0 instanceof org.bouncycastle.math.ec.ECCurve$Fp;

        if $z0 == 0 goto label1;

        $r16 = new java.security.spec.EllipticCurve;

        $r17 = new java.security.spec.ECFieldFp;

        $r18 = (org.bouncycastle.math.ec.ECCurve$Fp) r0;

        $r19 = virtualinvoke $r18.<org.bouncycastle.math.ec.ECCurve$Fp: java.math.BigInteger getQ()>();

        specialinvoke $r17.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>($r19);

        $r20 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r21 = virtualinvoke $r20.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r22 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r23 = virtualinvoke $r22.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r16.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r17, $r21, $r23, null);

        return $r16;

     label1:
        r1 = (org.bouncycastle.math.ec.ECCurve$F2m) r0;

        $z1 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: boolean isTrinomial()>();

        if $z1 == 0 goto label2;

        $r9 = newarray (int)[1];

        $i4 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK1()>();

        $r9[0] = $i4;

        $r10 = new java.security.spec.EllipticCurve;

        $r11 = new java.security.spec.ECFieldF2m;

        $i5 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getM()>();

        specialinvoke $r11.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i5, $r9);

        $r12 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r13 = virtualinvoke $r12.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r14 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r10.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r11, $r13, $r15, null);

        return $r10;

     label2:
        $r2 = newarray (int)[3];

        $i0 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK3()>();

        $r2[0] = $i0;

        $i1 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK2()>();

        $r2[1] = $i1;

        $i2 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK1()>();

        $r2[2] = $i2;

        $r3 = new java.security.spec.EllipticCurve;

        $r4 = new java.security.spec.ECFieldF2m;

        $i3 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getM()>();

        specialinvoke $r4.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i3, $r2);

        $r5 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r3.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r4, $r6, $r8, null);

        return $r3;
    }

    public static org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)
    {
        java.security.spec.ECField $r1;
        org.bouncycastle.math.ec.ECCurve$Fp $r8;
        java.security.spec.ECFieldF2m r4;
        int[] $r5, $r6;
        int $i0, $i1, $i2, $i3;
        java.math.BigInteger $r2, $r3, $r10;
        boolean $z0;
        java.security.spec.EllipticCurve r0;
        java.security.spec.ECFieldFp $r9;
        org.bouncycastle.math.ec.ECCurve$F2m $r7;

        r0 := @parameter0: java.security.spec.EllipticCurve;

        $r1 = virtualinvoke r0.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $r2 = virtualinvoke r0.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r3 = virtualinvoke r0.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        $z0 = $r1 instanceof java.security.spec.ECFieldFp;

        if $z0 == 0 goto label1;

        $r8 = new org.bouncycastle.math.ec.ECCurve$Fp;

        $r9 = (java.security.spec.ECFieldFp) $r1;

        $r10 = virtualinvoke $r9.<java.security.spec.ECFieldFp: java.math.BigInteger getP()>();

        specialinvoke $r8.<org.bouncycastle.math.ec.ECCurve$Fp: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r10, $r2, $r3);

        return $r8;

     label1:
        r4 = (java.security.spec.ECFieldF2m) $r1;

        $i0 = virtualinvoke r4.<java.security.spec.ECFieldF2m: int getM()>();

        $r5 = virtualinvoke r4.<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()>();

        $r6 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.ECUtil: int[] convertMidTerms(int[])>($r5);

        $r7 = new org.bouncycastle.math.ec.ECCurve$F2m;

        $i3 = $r6[0];

        $i2 = $r6[1];

        $i1 = $r6[2];

        specialinvoke $r7.<org.bouncycastle.math.ec.ECCurve$F2m: void <init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger)>($i0, $i3, $i2, $i1, $r2, $r3);

        return $r7;
    }

    public static java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve, org.bouncycastle.jce.spec.ECParameterSpec)
    {
        org.bouncycastle.math.ec.ECFieldElement $r5, $r8, $r17, $r20;
        org.bouncycastle.math.ec.ECPoint $r4, $r7, $r16, $r19;
        int $i0;
        java.math.BigInteger $r6, $r9, $r10, $r11, $r18, $r21, $r22, $r23;
        java.lang.String $r14;
        boolean $z0;
        java.security.spec.EllipticCurve r2;
        org.bouncycastle.jce.spec.ECNamedCurveParameterSpec $r13;
        java.security.spec.ECParameterSpec $r1;
        org.bouncycastle.jce.spec.ECNamedCurveSpec $r12;
        java.security.spec.ECPoint $r3, $r15;
        org.bouncycastle.jce.spec.ECParameterSpec r0;

        r2 := @parameter0: java.security.spec.EllipticCurve;

        r0 := @parameter1: org.bouncycastle.jce.spec.ECParameterSpec;

        $z0 = r0 instanceof org.bouncycastle.jce.spec.ECNamedCurveParameterSpec;

        if $z0 == 0 goto label1;

        $r12 = new org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r13 = (org.bouncycastle.jce.spec.ECNamedCurveParameterSpec) r0;

        $r14 = virtualinvoke $r13.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: java.lang.String getName()>();

        $r15 = new java.security.spec.ECPoint;

        $r16 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r17 = virtualinvoke $r16.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r18 = virtualinvoke $r17.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r19 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r20 = virtualinvoke $r19.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r21 = virtualinvoke $r20.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r15.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r18, $r21);

        $r22 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        $r23 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getH()>();

        specialinvoke $r12.<org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r14, r2, $r15, $r22, $r23);

        return $r12;

     label1:
        $r1 = new java.security.spec.ECParameterSpec;

        $r3 = new java.security.spec.ECPoint;

        $r4 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r3.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r9);

        $r10 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getN()>();

        $r11 = virtualinvoke r0.<org.bouncycastle.jce.spec.ECParameterSpec: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        specialinvoke $r1.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>(r2, $r3, $r10, $i0);

        return $r1;
    }

    public static org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec, boolean)
    {
        byte[] $r9;
        org.bouncycastle.math.ec.ECCurve $r2;
        long $l1;
        java.security.spec.EllipticCurve $r1, $r8;
        java.security.spec.ECParameterSpec r0;
        org.bouncycastle.math.ec.ECPoint $r5;
        int $i0;
        java.security.spec.ECPoint $r4;
        org.bouncycastle.jce.spec.ECParameterSpec $r3;
        java.math.BigInteger $r6, $r7;
        boolean z0;

        r0 := @parameter0: java.security.spec.ECParameterSpec;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r2 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r1);

        $r3 = new org.bouncycastle.jce.spec.ECParameterSpec;

        $r4 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $r5 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r2, $r4, z0);

        $r6 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $i0 = virtualinvoke r0.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l1 = (long) $i0;

        $r7 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r8 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r9 = virtualinvoke $r8.<java.security.spec.EllipticCurve: byte[] getSeed()>();

        specialinvoke $r3.<org.bouncycastle.jce.spec.ECParameterSpec: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r2, $r5, $r6, $r7, $r9);

        return $r3;
    }

    public static org.bouncycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec, java.security.spec.ECPoint, boolean)
    {
        org.bouncycastle.math.ec.ECCurve $r2;
        org.bouncycastle.math.ec.ECPoint $r4;
        java.security.spec.ECPoint r3;
        java.security.spec.EllipticCurve $r1;
        java.security.spec.ECParameterSpec r0;
        boolean z0;

        r0 := @parameter0: java.security.spec.ECParameterSpec;

        r3 := @parameter1: java.security.spec.ECPoint;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r2 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r1);

        $r4 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r2, r3, z0);

        return $r4;
    }

    public static org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve, java.security.spec.ECPoint, boolean)
    {
        org.bouncycastle.math.ec.ECCurve r0;
        org.bouncycastle.math.ec.ECPoint $r4;
        java.security.spec.ECPoint r1;
        java.math.BigInteger $r2, $r3;
        boolean z0;

        r0 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        r1 := @parameter1: java.security.spec.ECPoint;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r1.<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>();

        $r3 = virtualinvoke r1.<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>();

        $r4 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r2, $r3, z0);

        return $r4;
    }
}
