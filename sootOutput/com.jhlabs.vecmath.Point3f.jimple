public class com.jhlabs.vecmath.Point3f extends com.jhlabs.vecmath.Tuple3f
{

    public void <init>()
    {
        com.jhlabs.vecmath.Point3f r0;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        specialinvoke r0.<com.jhlabs.vecmath.Point3f: void <init>(float,float,float)>(0.0F, 0.0F, 0.0F);

        return;
    }

    public void <init>(float[])
    {
        com.jhlabs.vecmath.Point3f r0;
        float $f0, $f1, $f2;
        float[] r1;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: float[];

        specialinvoke r0.<com.jhlabs.vecmath.Tuple3f: void <init>()>();

        $f0 = r1[0];

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1[1];

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1[2];

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void <init>(float, float, float)
    {
        com.jhlabs.vecmath.Point3f r0;
        float f0, f1, f2;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple3f: void <init>()>();

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = f0;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = f1;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = f2;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Point3f)
    {
        com.jhlabs.vecmath.Point3f r0, r1;
        float $f0, $f1, $f2;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: com.jhlabs.vecmath.Point3f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple3f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public void <init>(com.jhlabs.vecmath.Tuple3f)
    {
        com.jhlabs.vecmath.Point3f r0;
        com.jhlabs.vecmath.Tuple3f r1;
        float $f0, $f1, $f2;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: com.jhlabs.vecmath.Tuple3f;

        specialinvoke r0.<com.jhlabs.vecmath.Tuple3f: void <init>()>();

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        r0.<com.jhlabs.vecmath.Tuple3f: float x> = $f0;

        $f1 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        r0.<com.jhlabs.vecmath.Tuple3f: float y> = $f1;

        $f2 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        r0.<com.jhlabs.vecmath.Tuple3f: float z> = $f2;

        return;
    }

    public float distanceL1(com.jhlabs.vecmath.Point3f)
    {
        com.jhlabs.vecmath.Point3f r0, r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: com.jhlabs.vecmath.Point3f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f5 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f4 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f6 = $f5 - $f4;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $f11 = $f3 + $f7;

        $f9 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f8 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f10 = $f9 - $f8;

        $f12 = staticinvoke <java.lang.Math: float abs(float)>($f10);

        $f13 = $f11 + $f12;

        return $f13;
    }

    public float distanceSquared(com.jhlabs.vecmath.Point3f)
    {
        com.jhlabs.vecmath.Point3f r0, r1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, f8, $f9, $f10, $f11, $f12, $f13;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: com.jhlabs.vecmath.Point3f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        f2 = $f1 - $f0;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        f5 = $f4 - $f3;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        f8 = $f7 - $f6;

        $f10 = f2 * f2;

        $f9 = f5 * f5;

        $f12 = $f10 + $f9;

        $f11 = f8 * f8;

        $f13 = $f12 + $f11;

        return $f13;
    }

    public float distance(com.jhlabs.vecmath.Point3f)
    {
        com.jhlabs.vecmath.Point3f r0, r1;
        double $d0, $d1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, f8, $f9, $f10, $f11, $f12, $f13, $f14;

        r0 := @this: com.jhlabs.vecmath.Point3f;

        r1 := @parameter0: com.jhlabs.vecmath.Point3f;

        $f1 = r0.<com.jhlabs.vecmath.Tuple3f: float x>;

        $f0 = r1.<com.jhlabs.vecmath.Tuple3f: float x>;

        f2 = $f1 - $f0;

        $f4 = r0.<com.jhlabs.vecmath.Tuple3f: float y>;

        $f3 = r1.<com.jhlabs.vecmath.Tuple3f: float y>;

        f5 = $f4 - $f3;

        $f7 = r0.<com.jhlabs.vecmath.Tuple3f: float z>;

        $f6 = r1.<com.jhlabs.vecmath.Tuple3f: float z>;

        f8 = $f7 - $f6;

        $f10 = f2 * f2;

        $f9 = f5 * f5;

        $f12 = $f10 + $f9;

        $f11 = f8 * f8;

        $f13 = $f12 + $f11;

        $d0 = (double) $f13;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f14 = (float) $d1;

        return $f14;
    }
}
