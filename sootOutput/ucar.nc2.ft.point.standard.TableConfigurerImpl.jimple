public abstract class ucar.nc2.ft.point.standard.TableConfigurerImpl extends java.lang.Object implements ucar.nc2.ft.point.standard.TableConfigurer
{
    private java.lang.String convName;
    private java.lang.String convUsed;

    public void <init>()
    {
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getConvName()
    {
        java.lang.String $r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: java.lang.String convName>;

        return $r1;
    }

    public void setConvName(java.lang.String)
    {
        java.lang.String r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: java.lang.String convName> = r1;

        return;
    }

    public java.lang.String getConvUsed()
    {
        java.lang.String $r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        $r1 = r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: java.lang.String convUsed>;

        return $r1;
    }

    public void setConvUsed(java.lang.String)
    {
        java.lang.String r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: java.lang.String convUsed> = r1;

        return;
    }

    protected java.lang.String findNameVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension, java.util.Formatter)
    {
        ucar.nc2.ft.point.standard.TableConfigurerImpl r0;
        ucar.nc2.Dimension r3;
        ucar.nc2.Variable $r5;
        java.lang.String r2, $r6;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.util.Formatter r4;

        r0 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.nc2.Dimension;

        r4 := @parameter3: java.util.Formatter;

        $r5 = virtualinvoke r0.<ucar.nc2.ft.point.standard.TableConfigurerImpl: ucar.nc2.Variable findVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.Dimension,java.util.Formatter)>(r1, r2, r3, r4);

        if $r5 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: java.lang.String getShortName()>();

     label2:
        return $r6;
    }

    protected ucar.nc2.Variable findVariableWithStandardNameAndDimension(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension, java.util.Formatter)
    {
        java.util.Formatter r10;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r7;
        int $i0;
        ucar.nc2.Variable r4;
        java.lang.String $r5, r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        ucar.nc2.Dimension r8, $r9;
        ucar.nc2.dataset.NetcdfDataset r0;

        r7 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: java.lang.String;

        r8 := @parameter2: ucar.nc2.Dimension;

        r10 := @parameter3: java.util.Formatter;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r4, "standard_name", null);

        if $r5 == null goto label3;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 <= 0 goto label2;

        $r9 = virtualinvoke r4.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z3 = virtualinvoke $r9.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label2;

        return r4;

     label2:
        $z2 = virtualinvoke r7.<ucar.nc2.ft.point.standard.TableConfigurerImpl: boolean isEffectivelyScaler(ucar.nc2.Variable)>(r4);

        if $z2 == 0 goto label3;

        if r8 != null goto label3;

        return r4;

     label3:
        goto label1;

     label4:
        return null;
    }

    protected boolean isEffectivelyScaler(ucar.nc2.Variable)
    {
        ucar.nc2.ft.point.standard.TableConfigurerImpl r3;
        int $i0, $i1;
        ucar.ma2.DataType $r1, $r2;
        ucar.nc2.Variable r0;
        boolean $z0;

        r3 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.Variable;

        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        if $i1 != 1 goto label2;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 != $r2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected ucar.nc2.Variable findVariableWithStandardNameAndNotDimension(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.Dimension, java.util.Formatter)
    {
        java.util.Iterator $r2;
        java.util.Formatter r10;
        java.util.List $r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r9;
        int $i0;
        java.lang.Object $r3;
        ucar.nc2.Variable r4;
        ucar.nc2.Dimension $r7, r8;
        java.lang.String $r5, r6;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0, $z1, $z2;

        r9 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: java.lang.String;

        r8 := @parameter2: ucar.nc2.Dimension;

        r10 := @parameter3: java.util.Formatter;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.Variable) $r3;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r4, "standard_name", null);

        if $r5 == null goto label2;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r4.<ucar.nc2.Variable: int getRank()>();

        if $i0 <= 0 goto label2;

        $r7 = virtualinvoke r4.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $z2 = virtualinvoke $r7.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>(r8);

        if $z2 != 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.CoordinateAxis $r5;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r3;
        ucar.nc2.constants.AxisType r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl$1 $r2;
        ucar.nc2.Dimension r4;
        java.lang.String $r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.constants.AxisType;

        r4 := @parameter2: ucar.nc2.Dimension;

        $r2 = new ucar.nc2.ft.point.standard.TableConfigurerImpl$1;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.TableConfigurerImpl$1: void <init>(ucar.nc2.ft.point.standard.TableConfigurerImpl,ucar.nc2.Dimension)>(r3, r4);

        $r5 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, r1, $r2);

        if $r5 != null goto label1;

        return null;

     label1:
        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r6;
    }

    protected java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType, ucar.nc2.Dimension, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.CoordinateAxis $r6;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r3;
        ucar.nc2.constants.AxisType r1;
        ucar.nc2.Dimension r4, r5;
        ucar.nc2.ft.point.standard.TableConfigurerImpl$2 $r2;
        java.lang.String $r7;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.constants.AxisType;

        r4 := @parameter2: ucar.nc2.Dimension;

        r5 := @parameter3: ucar.nc2.Dimension;

        $r2 = new ucar.nc2.ft.point.standard.TableConfigurerImpl$2;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.TableConfigurerImpl$2: void <init>(ucar.nc2.ft.point.standard.TableConfigurerImpl,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r3, r4, r5);

        $r6 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, r1, $r2);

        if $r6 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r7;
    }

    protected java.lang.String matchAxisTypeAndDimension(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.constants.AxisType, ucar.nc2.Dimension, ucar.nc2.Dimension, ucar.nc2.Dimension)
    {
        ucar.nc2.dataset.CoordinateAxis $r7;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r3;
        ucar.nc2.constants.AxisType r1;
        ucar.nc2.ft.point.standard.TableConfigurerImpl$3 $r2;
        ucar.nc2.Dimension r4, r5, r6;
        java.lang.String $r8;
        ucar.nc2.dataset.NetcdfDataset r0;

        r3 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.constants.AxisType;

        r4 := @parameter2: ucar.nc2.Dimension;

        r5 := @parameter3: ucar.nc2.Dimension;

        r6 := @parameter4: ucar.nc2.Dimension;

        $r2 = new ucar.nc2.ft.point.standard.TableConfigurerImpl$3;

        specialinvoke $r2.<ucar.nc2.ft.point.standard.TableConfigurerImpl$3: void <init>(ucar.nc2.ft.point.standard.TableConfigurerImpl,ucar.nc2.Dimension,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r3, r4, r5, r6);

        $r7 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, r1, $r2);

        if $r7 != null goto label1;

        return null;

     label1:
        $r8 = virtualinvoke $r7.<ucar.nc2.Variable: java.lang.String getShortName()>();

        return $r8;
    }

    protected ucar.nc2.dataset.CoordinateAxis findZAxisNotStationAlt(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.CoordinateAxis $r4, $r7;
        ucar.nc2.ft.point.standard.TableConfigurerImpl r2;
        ucar.nc2.constants.AxisType $r3, $r6;
        ucar.nc2.ft.point.standard.TableConfigurerImpl$5 $r5;
        ucar.nc2.ft.point.standard.TableConfigurerImpl$4 $r1;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.ft.point.standard.TableConfigurerImpl;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r1 = new ucar.nc2.ft.point.standard.TableConfigurerImpl$4;

        specialinvoke $r1.<ucar.nc2.ft.point.standard.TableConfigurerImpl$4: void <init>(ucar.nc2.ft.point.standard.TableConfigurerImpl)>(r2);

        $r4 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, $r3, $r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        $r5 = new ucar.nc2.ft.point.standard.TableConfigurerImpl$5;

        specialinvoke $r5.<ucar.nc2.ft.point.standard.TableConfigurerImpl$5: void <init>(ucar.nc2.ft.point.standard.TableConfigurerImpl)>(r2);

        $r7 = staticinvoke <ucar.nc2.ft.point.standard.CoordSysEvaluator: ucar.nc2.dataset.CoordinateAxis findCoordByType(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType,ucar.nc2.ft.point.standard.CoordSysEvaluator$Predicate)>(r0, $r6, $r5);

        return $r7;
    }
}
