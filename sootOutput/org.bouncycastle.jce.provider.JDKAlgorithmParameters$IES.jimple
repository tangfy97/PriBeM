public class org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES extends org.bouncycastle.jce.provider.JDKAlgorithmParameters
{
    org.bouncycastle.jce.spec.IESParameterSpec currentSpec;

    public void <init>()
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters: void <init>()>();

        return;
    }

    protected byte[] engineGetEncoded()
    {
        byte[] $r4, $r7, $r11;
        org.bouncycastle.asn1.ASN1EncodableVector $r0;
        java.io.IOException $r12;
        org.bouncycastle.asn1.DEROctetString $r1, $r5;
        java.lang.RuntimeException $r13;
        org.bouncycastle.asn1.DERInteger $r8;
        org.bouncycastle.asn1.DERSequence $r10;
        org.bouncycastle.jce.spec.IESParameterSpec $r3, $r6, $r9;
        int $i0;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r2;

        r2 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

     label1:
        $r0 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        $r1 = new org.bouncycastle.asn1.DEROctetString;

        $r3 = r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.jce.spec.IESParameterSpec: byte[] getDerivationV()>();

        specialinvoke $r1.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r4);

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r1);

        $r5 = new org.bouncycastle.asn1.DEROctetString;

        $r6 = r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.jce.spec.IESParameterSpec: byte[] getEncodingV()>();

        specialinvoke $r5.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r7);

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r5);

        $r8 = new org.bouncycastle.asn1.DERInteger;

        $r9 = r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec>;

        $i0 = virtualinvoke $r9.<org.bouncycastle.jce.spec.IESParameterSpec: int getMacKeySize()>();

        specialinvoke $r8.<org.bouncycastle.asn1.DERInteger: void <init>(int)>($i0);

        virtualinvoke $r0.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r8);

        $r10 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r10.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r0);

        $r11 = virtualinvoke $r10.<org.bouncycastle.asn1.DERSequence: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r11;

     label3:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error encoding IESParameters");

        throw $r13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected byte[] engineGetEncoded(java.lang.String)
    {
        byte[] $r2;
        java.lang.String r1;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r0;
        boolean $z0, $z1;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: boolean isASN1FormatString(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X.509");

        if $z1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: byte[] engineGetEncoded()>();

        return $r2;

     label2:
        return null;
    }

    protected java.security.spec.AlgorithmParameterSpec localEngineGetParameterSpec(java.lang.Class) throws java.security.spec.InvalidParameterSpecException
    {
        org.bouncycastle.jce.spec.IESParameterSpec $r3;
        java.security.spec.InvalidParameterSpecException $r1;
        java.lang.Class r0;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r2;

        r2 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Lorg/bouncycastle/jce/spec/IESParameterSpec;" goto label1;

        $r3 = r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec>;

        return $r3;

     label1:
        $r1 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r1.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("unknown parameter spec passed to ElGamal parameters object.");

        throw $r1;
    }

    protected void engineInit(java.security.spec.AlgorithmParameterSpec) throws java.security.spec.InvalidParameterSpecException
    {
        org.bouncycastle.jce.spec.IESParameterSpec $r2;
        java.security.spec.InvalidParameterSpecException $r3;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r1;

        r1 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = r0 instanceof org.bouncycastle.jce.spec.IESParameterSpec;

        if $z0 != 0 goto label1;

        $r3 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r3.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("IESParameterSpec required to initialise a IES algorithm parameters object");

        throw $r3;

     label1:
        $r2 = (org.bouncycastle.jce.spec.IESParameterSpec) r0;

        r1.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec> = $r2;

        return;
    }

    protected void engineInit(byte[]) throws java.io.IOException
    {
        byte[] r0, $r6, $r9;
        org.bouncycastle.asn1.ASN1Sequence r17;
        org.bouncycastle.asn1.DEREncodable $r4, $r7, $r10;
        java.lang.ClassCastException $r15;
        org.bouncycastle.asn1.ASN1OctetString $r5, $r8;
        org.bouncycastle.jce.spec.IESParameterSpec $r3;
        int $i0;
        java.math.BigInteger $r12;
        org.bouncycastle.asn1.ASN1Object $r1;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r2;
        java.io.IOException $r14, $r16;
        java.lang.ArrayIndexOutOfBoundsException $r13;
        org.bouncycastle.asn1.DERInteger $r11;

        r2 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r0);

        r17 = (org.bouncycastle.asn1.ASN1Sequence) $r1;

        $r3 = new org.bouncycastle.jce.spec.IESParameterSpec;

        $r4 = virtualinvoke r17.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r5 = (org.bouncycastle.asn1.ASN1OctetString) $r4;

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r7 = virtualinvoke r17.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r8 = (org.bouncycastle.asn1.ASN1OctetString) $r7;

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r10 = virtualinvoke r17.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(0);

        $r11 = (org.bouncycastle.asn1.DERInteger) $r10;

        $r12 = virtualinvoke $r11.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

        specialinvoke $r3.<org.bouncycastle.jce.spec.IESParameterSpec: void <init>(byte[],byte[],int)>($r6, $r9, $i0);

        r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: org.bouncycastle.jce.spec.IESParameterSpec currentSpec> = $r3;

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;

        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Not a valid IES Parameter encoding.");

        throw $r16;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Not a valid IES Parameter encoding.");

        throw $r14;

     label5:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label4;
    }

    protected void engineInit(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, $r7;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r0;
        boolean $z0, $z1;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        r2 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: boolean isASN1FormatString(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("X.509");

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES: void engineInit(byte[])>(r2);

        goto label3;

     label2:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameter format ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        return;
    }

    protected java.lang.String engineToString()
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$IES;

        return "IES Parameters";
    }
}
