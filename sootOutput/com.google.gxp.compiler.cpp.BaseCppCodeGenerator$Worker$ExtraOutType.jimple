public class com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType extends java.lang.Object
{
    private final java.lang.String outType;
    private final java.lang.String outWrapper;
    final com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker this$0;

    public void <init>(com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker, java.lang.String, java.lang.String)
    {
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType r0;
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker r1;
        java.lang.Object $r3, $r6;
        java.lang.String r2, $r4, r5, $r7;

        r0 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType;

        r1 := @parameter0: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: java.lang.String outType> = $r4;

        $r6 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r7 = (java.lang.String) $r6;

        r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: java.lang.String outWrapper> = $r7;

        return;
    }

    public java.lang.String getOutType()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType r0;

        r0 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType;

        $r1 = r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: java.lang.String outType>;

        return $r1;
    }

    public java.lang.String getOutWrapper()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType r0;

        r0 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType;

        $r1 = r0.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: java.lang.String outWrapper>;

        return $r1;
    }

    public java.lang.String getGxpSig()
    {
        java.lang.Object[] $r0;
        java.lang.String $r2, $r3, $r4;
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType r1;

        r1 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType;

        $r3 = <com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker: java.lang.String GXP_SIG>;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = r1.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$Worker$ExtraOutType: java.lang.String outType>;

        $r0[0] = $r2;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r0);

        return $r4;
    }
}
