public class ucar.nc2.iosp.fysat.util.EndianByteBuffer extends java.lang.Object
{
    public static short LITTLE_ENDIAN;
    public static short BIG_ENDIAN;
    private short awxEndian;
    private java.nio.ByteBuffer byteBuffer;

    public void <init>(byte[], short)
    {
        byte[] r1;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r2, $r3, $r4;
        short $s0, s1, $s2, $s4;
        int $i3;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        r1 := @parameter0: byte[];

        s1 := @parameter1: short;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian> = $s0;

        if s1 != 0 goto label1;

        $s4 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian> = $s4;

        goto label2;

     label1:
        $s2 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short BIG_ENDIAN>;

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian> = $s2;

     label2:
        $i3 = lengthof r1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i3);

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer> = $r2;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r1);

        $r4 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        short $s0;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        r1 := @parameter0: byte[];

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        specialinvoke r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: void <init>(byte[],short)>(r1, $s0);

        return;
    }

    public void setEndian(short)
    {
        short s0, $s1, $s2;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        s0 := @parameter0: short;

        if s0 != 0 goto label1;

        $s2 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian> = $s2;

        goto label2;

     label1:
        $s1 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short BIG_ENDIAN>;

        r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian> = $s1;

     label2:
        return;
    }

    public int getInt()
    {
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r4;
        java.nio.ByteOrder $r2;
        short $s0, $s1;
        int i2, $i3, $i4;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $s1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i3 = (int) $s1;

        $i4 = (int) $s0;

        if $i3 != $i4 goto label1;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        i2 = virtualinvoke $r4.<java.nio.ByteBuffer: int getInt()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int getInt()>();

     label2:
        return i2;
    }

    public short getShort()
    {
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r4;
        java.nio.ByteOrder $r2;
        short $s0, $s1, s2;
        int $i3, $i4;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $s1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i3 = (int) $s1;

        $i4 = (int) $s0;

        if $i3 != $i4 goto label1;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        s2 = virtualinvoke $r4.<java.nio.ByteBuffer: short getShort()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        s2 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

     label2:
        return s2;
    }

    public long getLong()
    {
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        long l2;
        java.nio.ByteBuffer $r1, $r3, $r4;
        java.nio.ByteOrder $r2;
        short $s0, $s1;
        int $i3, $i4;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $s1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i3 = (int) $s1;

        $i4 = (int) $s0;

        if $i3 != $i4 goto label1;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        l2 = virtualinvoke $r4.<java.nio.ByteBuffer: long getLong()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        l2 = virtualinvoke $r1.<java.nio.ByteBuffer: long getLong()>();

     label2:
        return l2;
    }

    public float getFloat()
    {
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r4;
        java.nio.ByteOrder $r2;
        short $s0, $s1;
        int $i2, $i3;
        float f0;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $s1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i2 = (int) $s1;

        $i3 = (int) $s0;

        if $i2 != $i3 goto label1;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        f0 = virtualinvoke $r4.<java.nio.ByteBuffer: float getFloat()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        f0 = virtualinvoke $r1.<java.nio.ByteBuffer: float getFloat()>();

     label2:
        return f0;
    }

    public double getDouble()
    {
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r4;
        java.nio.ByteOrder $r2;
        short $s0, $s1;
        int $i2, $i3;
        double d0;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $s1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s0 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i2 = (int) $s1;

        $i3 = (int) $s0;

        if $i2 != $i3 goto label1;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r2);

        d0 = virtualinvoke $r4.<java.nio.ByteBuffer: double getDouble()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        d0 = virtualinvoke $r1.<java.nio.ByteBuffer: double getDouble()>();

     label2:
        return d0;
    }

    public java.lang.String getString(int)
    {
        byte[] r0;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r1;
        int i0;
        java.lang.String $r3, r5;
        java.io.UnsupportedEncodingException $r4;
        java.nio.ByteBuffer $r2;

        r1 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        i0 := @parameter0: int;

        r0 = newarray (byte)[i0];

        $r2 = r1.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r0);

        r5 = null;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "US-ASCII");

        r5 = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label4:
        return r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public short[] getShortArray()
    {
        byte[] $r2;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r5, $r7, $r8;
        short $s4, $s5, $s6, $s7;
        int $i0, $i1, $i2, i3, i8, i9, $i10, $i11;
        java.nio.ByteOrder $r6;
        short[] r4;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof $r2;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i2 = $i0 - $i1;

        i3 = $i2 / 2;

        r4 = newarray (short)[i3];

        $s5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s4 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i10 = (int) $s5;

        $i11 = (int) $s4;

        if $i10 != $i11 goto label3;

        i8 = 0;

     label1:
        if i8 >= i3 goto label2;

        $r7 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $s7 = virtualinvoke $r8.<java.nio.ByteBuffer: short getShort()>();

        r4[i8] = $s7;

        i8 = i8 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i9 = 0;

     label4:
        if i9 >= i3 goto label5;

        $r5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $s6 = virtualinvoke $r5.<java.nio.ByteBuffer: short getShort()>();

        r4[i9] = $s6;

        i9 = i9 + 1;

        goto label4;

     label5:
        return r4;
    }

    public long[] getLongArray()
    {
        byte[] $r2;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        long $l6, $l7;
        java.nio.ByteBuffer $r1, $r3, $r5, $r7, $r8;
        short $s4, $s5;
        long[] r4;
        int $i0, $i1, $i2, i3, i8, i9, $i10, $i11;
        java.nio.ByteOrder $r6;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof $r2;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i2 = $i0 - $i1;

        i3 = $i2 / 8;

        r4 = newarray (long)[i3];

        $s5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s4 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i10 = (int) $s5;

        $i11 = (int) $s4;

        if $i10 != $i11 goto label3;

        i8 = 0;

     label1:
        if i8 >= i3 goto label2;

        $r7 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $l7 = virtualinvoke $r8.<java.nio.ByteBuffer: long getLong()>();

        r4[i8] = $l7;

        i8 = i8 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i9 = 0;

     label4:
        if i9 >= i3 goto label5;

        $r5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $l6 = virtualinvoke $r5.<java.nio.ByteBuffer: long getLong()>();

        r4[i9] = $l6;

        i9 = i9 + 1;

        goto label4;

     label5:
        return r4;
    }

    public int[] getIntArray()
    {
        byte[] $r2;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1, $r3, $r5, $r7, $r8;
        short $s4, $s5;
        int[] r4;
        int $i0, $i1, $i2, i3, $i6, $i7, i8, i9, $i10, $i11;
        java.nio.ByteOrder $r6;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof $r2;

        $r3 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int position()>();

        $i2 = $i0 - $i1;

        i3 = $i2 / 4;

        r4 = newarray (int)[i3];

        $s5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: short awxEndian>;

        $s4 = <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN>;

        $i10 = (int) $s5;

        $i11 = (int) $s4;

        if $i10 != $i11 goto label3;

        i8 = 0;

     label1:
        if i8 >= i3 goto label2;

        $r7 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $r8 = virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $i7 = virtualinvoke $r8.<java.nio.ByteBuffer: int getInt()>();

        r4[i8] = $i7;

        i8 = i8 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i9 = 0;

     label4:
        if i9 >= i3 goto label5;

        $r5 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        $i6 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt()>();

        r4[i9] = $i6;

        i9 = i9 + 1;

        goto label4;

     label5:
        return r4;
    }

    public final void position(int)
    {
        int i0;
        ucar.nc2.iosp.fysat.util.EndianByteBuffer r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: ucar.nc2.iosp.fysat.util.EndianByteBuffer;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.fysat.util.EndianByteBuffer: java.nio.ByteBuffer byteBuffer>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short LITTLE_ENDIAN> = 0;

        <ucar.nc2.iosp.fysat.util.EndianByteBuffer: short BIG_ENDIAN> = -1;

        return;
    }
}
