public class org.codehaus.groovy.ast.expr.StaticMethodCallExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private org.codehaus.groovy.ast.ClassNode ownerType;
    private java.lang.String method;
    private org.codehaus.groovy.ast.expr.Expression arguments;
    private groovy.lang.MetaMethod metaMethod;

    public void <init>(org.codehaus.groovy.ast.ClassNode, java.lang.String, org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;
        org.codehaus.groovy.ast.ClassNode r1;
        java.lang.String r2;
        org.codehaus.groovy.ast.expr.Expression r3;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: groovy.lang.MetaMethod metaMethod> = null;

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode ownerType> = r1;

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String method> = r2;

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.expr.Expression arguments> = r3;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression $r0, r1;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r3;
        org.codehaus.groovy.ast.ClassNode $r2;
        org.codehaus.groovy.ast.expr.Expression $r4, $r6;
        java.lang.String $r5;

        r1 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        r3 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        $r0 = new org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode getOwnerType()>();

        $r5 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String method>;

        $r4 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.expr.Expression arguments>;

        $r6 = interfaceinvoke r3.<org.codehaus.groovy.ast.expr.ExpressionTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>($r4);

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: void <init>(org.codehaus.groovy.ast.ClassNode,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>($r2, $r5, $r6);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.Expression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r1);

        return $r0;
    }

    public org.codehaus.groovy.ast.expr.Expression getArguments()
    {
        org.codehaus.groovy.ast.expr.Expression $r1;
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.expr.Expression arguments>;

        return $r1;
    }

    public java.lang.String getMethod()
    {
        java.lang.String $r1;
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String method>;

        return $r1;
    }

    public java.lang.String getText()
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r1;
        org.codehaus.groovy.ast.ClassNode $r2;
        java.lang.StringBuffer $r0, $r4, $r5, $r7, $r10;
        java.lang.String $r3, $r6, $r9, $r11;
        org.codehaus.groovy.ast.expr.Expression $r8;

        r1 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode getOwnerType()>();

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String method>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.expr.Expression arguments>;

        $r9 = virtualinvoke $r8.<org.codehaus.groovy.ast.expr.Expression: java.lang.String getText()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r7, $r8, $r10, $r11, $r13, $r14;
        java.lang.String $r2, $r6, $r9, $r15;
        org.codehaus.groovy.ast.expr.Expression $r12;
        org.codehaus.groovy.ast.ClassNode $r5;

        r1 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r5 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode getOwnerType()>();

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r9 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String method>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" arguments: ");

        $r12 = r1.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.expr.Expression arguments>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    public org.codehaus.groovy.ast.ClassNode getOwnerType()
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;
        org.codehaus.groovy.ast.ClassNode $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode ownerType>;

        return $r1;
    }

    public void setOwnerType(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;
        org.codehaus.groovy.ast.ClassNode r1;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: org.codehaus.groovy.ast.ClassNode ownerType> = r1;

        return;
    }

    public void setMetaMethod(groovy.lang.MetaMethod)
    {
        groovy.lang.MetaMethod r1;
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        r1 := @parameter0: groovy.lang.MetaMethod;

        r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: groovy.lang.MetaMethod metaMethod> = r1;

        return;
    }

    public groovy.lang.MetaMethod getMetaMethod()
    {
        groovy.lang.MetaMethod $r1;
        org.codehaus.groovy.ast.expr.StaticMethodCallExpression r0;

        r0 := @this: org.codehaus.groovy.ast.expr.StaticMethodCallExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.StaticMethodCallExpression: groovy.lang.MetaMethod metaMethod>;

        return $r1;
    }
}
