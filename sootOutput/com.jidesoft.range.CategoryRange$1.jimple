class com.jidesoft.range.CategoryRange$1 extends java.lang.Object implements java.util.Comparator
{
    final com.jidesoft.range.CategoryRange this$0;

    void <init>(com.jidesoft.range.CategoryRange)
    {
        com.jidesoft.range.CategoryRange$1 r0;
        com.jidesoft.range.CategoryRange r1;

        r0 := @this: com.jidesoft.range.CategoryRange$1;

        r1 := @parameter0: com.jidesoft.range.CategoryRange;

        r0.<com.jidesoft.range.CategoryRange$1: com.jidesoft.range.CategoryRange this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        com.jidesoft.range.CategoryRange$1 r4;
        int $i0, $i1, $i3;
        java.lang.Object r0, r1;
        java.lang.Comparable r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        r4 := @this: com.jidesoft.range.CategoryRange$1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != null goto label2;

        $i3 = (int) -1;

        return $i3;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $z0 = r0 instanceof java.lang.Comparable;

        if $z0 == 0 goto label4;

        r5 = (java.lang.Comparable) r0;

        $i1 = interfaceinvoke r5.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        return $i1;

     label4:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }
}
