public abstract class com.sun.syndication.io.impl.BaseWireFeedGenerator extends java.lang.Object implements com.sun.syndication.io.WireFeedGenerator
{
    private static final java.lang.String FEED_MODULE_GENERATORS_POSFIX_KEY;
    private static final java.lang.String ITEM_MODULE_GENERATORS_POSFIX_KEY;
    private static final java.lang.String PERSON_MODULE_GENERATORS_POSFIX_KEY;
    private java.lang.String _type;
    private com.sun.syndication.io.impl.ModuleGenerators _feedModuleGenerators;
    private com.sun.syndication.io.impl.ModuleGenerators _itemModuleGenerators;
    private com.sun.syndication.io.impl.ModuleGenerators _personModuleGenerators;
    private org.jdom.Namespace[] _allModuleNamespaces;

    protected void <init>(java.lang.String)
    {
        org.jdom.Namespace[] $r27, $r28;
        boolean $z0, $z1, $z2;
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        java.util.Set $r19, $r22, $r25;
        com.sun.syndication.io.impl.ModuleGenerators $r2, $r7, $r12, $r18, $r21, $r24;
        java.util.HashSet $r17;
        java.lang.StringBuffer $r3, $r4, $r5, $r8, $r9, $r10, $r13, $r14, $r15;
        int $i0;
        java.lang.String r1, $r6, $r11, $r16;
        java.util.Iterator $r20, $r23, $r26;
        java.lang.Object $r29, $r30, $r31;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: java.lang.String _type> = r1;

        $r2 = new com.sun.syndication.io.impl.ModuleGenerators;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".feed.ModuleGenerator.classes");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<com.sun.syndication.io.impl.ModuleGenerators: void <init>(java.lang.String,com.sun.syndication.io.impl.BaseWireFeedGenerator)>($r6, r0);

        r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _feedModuleGenerators> = $r2;

        $r7 = new com.sun.syndication.io.impl.ModuleGenerators;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".item.ModuleGenerator.classes");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<com.sun.syndication.io.impl.ModuleGenerators: void <init>(java.lang.String,com.sun.syndication.io.impl.BaseWireFeedGenerator)>($r11, r0);

        r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _itemModuleGenerators> = $r7;

        $r12 = new com.sun.syndication.io.impl.ModuleGenerators;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".person.ModuleGenerator.classes");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<com.sun.syndication.io.impl.ModuleGenerators: void <init>(java.lang.String,com.sun.syndication.io.impl.BaseWireFeedGenerator)>($r16, r0);

        r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _personModuleGenerators> = $r12;

        $r17 = new java.util.HashSet;

        specialinvoke $r17.<java.util.HashSet: void <init>()>();

        $r18 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _feedModuleGenerators>;

        $r19 = virtualinvoke $r18.<com.sun.syndication.io.impl.ModuleGenerators: java.util.Set getAllNamespaces()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r31 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r31);

        goto label1;

     label2:
        $r21 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _itemModuleGenerators>;

        $r22 = virtualinvoke $r21.<com.sun.syndication.io.impl.ModuleGenerators: java.util.Set getAllNamespaces()>();

        $r23 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r30 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r30);

        goto label3;

     label4:
        $r24 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _personModuleGenerators>;

        $r25 = virtualinvoke $r24.<com.sun.syndication.io.impl.ModuleGenerators: java.util.Set getAllNamespaces()>();

        $r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r29 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r29);

        goto label5;

     label6:
        $i0 = interfaceinvoke $r17.<java.util.Set: int size()>();

        $r27 = newarray (org.jdom.Namespace)[$i0];

        r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: org.jdom.Namespace[] _allModuleNamespaces> = $r27;

        $r28 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: org.jdom.Namespace[] _allModuleNamespaces>;

        interfaceinvoke $r17.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r28);

        return;
    }

    public java.lang.String getType()
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        java.lang.String $r1;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        $r1 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: java.lang.String _type>;

        return $r1;
    }

    protected void generateModuleNamespaceDefs(org.jdom.Element)
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        org.jdom.Namespace[] $r1, $r3;
        int $i0, i1;
        org.jdom.Namespace $r4;
        org.jdom.Element r2;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r2 := @parameter0: org.jdom.Element;

        i1 = 0;

     label1:
        $r1 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: org.jdom.Namespace[] _allModuleNamespaces>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: org.jdom.Namespace[] _allModuleNamespaces>;

        $r4 = $r3[i1];

        virtualinvoke r2.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void generateFeedModules(java.util.List, org.jdom.Element)
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        java.util.List r1;
        com.sun.syndication.io.impl.ModuleGenerators $r3;
        org.jdom.Element r2;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.jdom.Element;

        $r3 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _feedModuleGenerators>;

        virtualinvoke $r3.<com.sun.syndication.io.impl.ModuleGenerators: void generateModules(java.util.List,org.jdom.Element)>(r1, r2);

        return;
    }

    public void generateItemModules(java.util.List, org.jdom.Element)
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        java.util.List r1;
        com.sun.syndication.io.impl.ModuleGenerators $r3;
        org.jdom.Element r2;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.jdom.Element;

        $r3 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _itemModuleGenerators>;

        virtualinvoke $r3.<com.sun.syndication.io.impl.ModuleGenerators: void generateModules(java.util.List,org.jdom.Element)>(r1, r2);

        return;
    }

    public void generatePersonModules(java.util.List, org.jdom.Element)
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r0;
        java.util.List r1;
        com.sun.syndication.io.impl.ModuleGenerators $r3;
        org.jdom.Element r2;

        r0 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.jdom.Element;

        $r3 = r0.<com.sun.syndication.io.impl.BaseWireFeedGenerator: com.sun.syndication.io.impl.ModuleGenerators _personModuleGenerators>;

        virtualinvoke $r3.<com.sun.syndication.io.impl.ModuleGenerators: void generateModules(java.util.List,org.jdom.Element)>(r1, r2);

        return;
    }

    protected void generateForeignMarkup(org.jdom.Element, java.util.List)
    {
        com.sun.syndication.io.impl.BaseWireFeedGenerator r6;
        java.util.Iterator $r1;
        org.jdom.Parent $r4;
        java.util.List r0;
        java.lang.Object $r2;
        org.jdom.Element r3, r5;
        boolean $z0;

        r6 := @this: com.sun.syndication.io.impl.BaseWireFeedGenerator;

        r5 := @parameter0: org.jdom.Element;

        r0 := @parameter1: java.util.List;

        if r0 == null goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.jdom.Element) $r2;

        $r4 = virtualinvoke r3.<org.jdom.Element: org.jdom.Parent getParent()>();

        if $r4 == null goto label2;

        interfaceinvoke $r4.<org.jdom.Parent: boolean removeContent(org.jdom.Content)>(r3);

     label2:
        virtualinvoke r5.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(r3);

        goto label1;

     label3:
        return;
    }

    protected static void purgeUnusedNamespaceDeclarations(org.jdom.Element)
    {
        java.util.ArrayList $r3;
        java.util.HashSet $r0;
        java.util.List $r2;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        org.jdom.Namespace r5;
        java.lang.String $r6;
        org.jdom.Element r1;
        boolean $z0;

        r1 := @parameter0: org.jdom.Element;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        staticinvoke <com.sun.syndication.io.impl.BaseWireFeedGenerator: void collectUsedPrefixes(org.jdom.Element,java.util.Set)>(r1, $r0);

        $r2 = virtualinvoke r1.<org.jdom.Element: java.util.List getAdditionalNamespaces()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (org.jdom.Namespace) $r4;

        $r6 = virtualinvoke r5.<org.jdom.Namespace: java.lang.String getPrefix()>();

        if $r6 == null goto label2;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        virtualinvoke r1.<org.jdom.Element: void removeNamespaceDeclaration(org.jdom.Namespace)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private static void collectUsedPrefixes(org.jdom.Element, java.util.Set)
    {
        java.util.Set r3;
        java.util.List $r5;
        int $i0, i1, $i2;
        java.lang.Object $r2;
        java.lang.String $r1;
        org.jdom.Element r0, $r4;
        boolean $z0;

        r0 := @parameter0: org.jdom.Element;

        r3 := @parameter1: java.util.Set;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getNamespacePrefix()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r1);

     label1:
        $r5 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label2:
        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $r2 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.jdom.Element) $r2;

        staticinvoke <com.sun.syndication.io.impl.BaseWireFeedGenerator: void collectUsedPrefixes(org.jdom.Element,java.util.Set)>($r4, r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.sun.syndication.io.impl.BaseWireFeedGenerator: java.lang.String PERSON_MODULE_GENERATORS_POSFIX_KEY> = ".person.ModuleGenerator.classes";

        <com.sun.syndication.io.impl.BaseWireFeedGenerator: java.lang.String ITEM_MODULE_GENERATORS_POSFIX_KEY> = ".item.ModuleGenerator.classes";

        <com.sun.syndication.io.impl.BaseWireFeedGenerator: java.lang.String FEED_MODULE_GENERATORS_POSFIX_KEY> = ".feed.ModuleGenerator.classes";

        return;
    }
}
