public class com.hp.hpl.jena.tdb.sys.TDBInternal extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.tdb.sys.TDBInternal r0;

        r0 := @this: com.hp.hpl.jena.tdb.sys.TDBInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        com.hp.hpl.jena.query.Dataset r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.graph.Node)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.graph.Node)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.tdb.store.NodeId getNodeId(com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.store.QuadTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        com.hp.hpl.jena.tdb.store.NodeId $r5;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r0;
        com.hp.hpl.jena.graph.Node r4;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r4 := @parameter1: com.hp.hpl.jena.graph.Node;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.QuadTable getQuadTable()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.store.QuadTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r4);

        return $r5;
    }

    public static com.hp.hpl.jena.graph.Node getNode(com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r2;
        com.hp.hpl.jena.query.Dataset r0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r2 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.graph.Node getNode(com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.tdb.store.NodeId)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.graph.Node getNode(com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r2;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        r2 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        $r1 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r0);

        $r3 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.graph.Node getNode(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.tdb.store.NodeId)>($r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.graph.Node getNode(com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.store.QuadTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        com.hp.hpl.jena.tdb.store.NodeId r4;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r0;
        com.hp.hpl.jena.graph.Node $r5;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r4 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.QuadTable getQuadTable()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.store.QuadTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        $r5 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.graph.Node getNodeForNodeId(com.hp.hpl.jena.tdb.store.NodeId)>(r4);

        return $r5;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB(com.hp.hpl.jena.query.Dataset)
    {
        com.hp.hpl.jena.query.Dataset r0;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Dataset;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        $r2 = staticinvoke <com.hp.hpl.jena.tdb.sys.TDBInternal: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r1);

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction $r2;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1, $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $z0 = r0 instanceof com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction) r0;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphToQuery()>();

        return $r3;

     label1:
        $z1 = r0 instanceof com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        if $z1 == 0 goto label2;

        $r1 = (com.hp.hpl.jena.tdb.store.DatasetGraphTDB) r0;

        return $r1;

     label2:
        return null;
    }

    public static com.hp.hpl.jena.tdb.store.DatasetGraphTDB getBaseDatasetGraphTDB(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.tdb.TDBException $r1;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r9;
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;
        com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction $r8;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $z0 = r0 instanceof com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction;

        if $z0 == 0 goto label1;

        $r8 = (com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction) r0;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.tdb.transaction.DatasetGraphTransaction: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getBaseDatasetGraph()>();

        return $r9;

     label1:
        $r1 = new com.hp.hpl.jena.tdb.TDBException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a suitable DatasetGraph to get it\'s base storage: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String classShortName(java.lang.Class)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }
}
