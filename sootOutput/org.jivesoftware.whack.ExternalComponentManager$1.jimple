class org.jivesoftware.whack.ExternalComponentManager$1 extends java.lang.Object implements org.jivesoftware.whack.IQResultListener
{
    final java.util.concurrent.LinkedBlockingQueue val$answer;
    final org.jivesoftware.whack.ExternalComponentManager this$0;

    void <init>(org.jivesoftware.whack.ExternalComponentManager, java.util.concurrent.LinkedBlockingQueue)
    {
        org.jivesoftware.whack.ExternalComponentManager r1;
        org.jivesoftware.whack.ExternalComponentManager$1 r0;
        java.util.concurrent.LinkedBlockingQueue r2;

        r0 := @this: org.jivesoftware.whack.ExternalComponentManager$1;

        r1 := @parameter0: org.jivesoftware.whack.ExternalComponentManager;

        r2 := @parameter1: java.util.concurrent.LinkedBlockingQueue;

        r0.<org.jivesoftware.whack.ExternalComponentManager$1: org.jivesoftware.whack.ExternalComponentManager this$0> = r1;

        r0.<org.jivesoftware.whack.ExternalComponentManager$1: java.util.concurrent.LinkedBlockingQueue val$answer> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void receivedAnswer(org.xmpp.packet.IQ)
    {
        org.jivesoftware.whack.ExternalComponentManager$1 r0;
        org.xmpp.packet.IQ r1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        r0 := @this: org.jivesoftware.whack.ExternalComponentManager$1;

        r1 := @parameter0: org.xmpp.packet.IQ;

        $r2 = r0.<org.jivesoftware.whack.ExternalComponentManager$1: java.util.concurrent.LinkedBlockingQueue val$answer>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>(r1);

        return;
    }

    public void answerTimeout(java.lang.String)
    {
        org.jivesoftware.whack.ExternalComponentManager$1 r0;
        java.lang.String r1;

        r0 := @this: org.jivesoftware.whack.ExternalComponentManager$1;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
