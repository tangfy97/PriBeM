public class org.apache.batik.transcoder.TranscoderException extends java.lang.Exception
{
    protected java.lang.Exception ex;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.transcoder.TranscoderException r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String,java.lang.Exception)>(r1, null);

        return;
    }

    public void <init>(java.lang.Exception)
    {
        java.lang.Exception r1;
        org.apache.batik.transcoder.TranscoderException r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderException;

        r1 := @parameter0: java.lang.Exception;

        specialinvoke r0.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String,java.lang.Exception)>(null, r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        java.lang.String r1;
        java.lang.Exception r2;
        org.apache.batik.transcoder.TranscoderException r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<org.apache.batik.transcoder.TranscoderException: java.lang.Exception ex> = r2;

        return;
    }

    public java.lang.String getMessage()
    {
        java.lang.Exception $r2, $r9;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8, $r11;
        org.apache.batik.transcoder.TranscoderException r0;
        java.lang.String $r1, $r6, $r10, r12;

        r0 := @this: org.apache.batik.transcoder.TranscoderException;

        $r1 = specialinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

        r12 = $r1;

        $r2 = r0.<org.apache.batik.transcoder.TranscoderException: java.lang.Exception ex>;

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nEnclosed Exception:\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r9 = r0.<org.apache.batik.transcoder.TranscoderException: java.lang.Exception ex>;

        $r10 = virtualinvoke $r9.<java.lang.Throwable: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return r12;
    }

    public java.lang.Exception getException()
    {
        java.lang.Exception $r1;
        org.apache.batik.transcoder.TranscoderException r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderException;

        $r1 = r0.<org.apache.batik.transcoder.TranscoderException: java.lang.Exception ex>;

        return $r1;
    }
}
