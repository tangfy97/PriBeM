public class org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider extends java.lang.Object implements org.springframework.context.ResourceLoaderAware
{
    private static final java.lang.String DEFAULT_RESOURCE_PATTERN;
    protected final org.apache.commons.logging.Log logger;
    private org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver;
    private org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory;
    private java.lang.String resourcePattern;
    private final java.util.List includeFilters;
    private final java.util.List excludeFilters;

    public void <init>(boolean)
    {
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;
        org.springframework.core.type.classreading.CachingMetadataReaderFactory $r4;
        org.springframework.core.io.support.PathMatchingResourcePatternResolver $r3;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.core.io.support.ResourcePatternResolver $r5;
        java.util.LinkedList $r6, $r7;
        boolean z0;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger> = $r2;

        $r3 = new org.springframework.core.io.support.PathMatchingResourcePatternResolver;

        specialinvoke $r3.<org.springframework.core.io.support.PathMatchingResourcePatternResolver: void <init>()>();

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver> = $r3;

        $r4 = new org.springframework.core.type.classreading.CachingMetadataReaderFactory;

        $r5 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver>;

        specialinvoke $r4.<org.springframework.core.type.classreading.CachingMetadataReaderFactory: void <init>(org.springframework.core.io.ResourceLoader)>($r5);

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory> = $r4;

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.lang.String resourcePattern> = "**/*.class";

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters> = $r6;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List excludeFilters> = $r7;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: void registerDefaultFilters()>();

     label1:
        return;
    }

    public void setResourceLoader(org.springframework.core.io.ResourceLoader)
    {
        org.springframework.core.io.ResourceLoader r1;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;
        org.springframework.core.type.classreading.CachingMetadataReaderFactory $r3;
        org.springframework.core.io.support.ResourcePatternResolver $r2;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r1 := @parameter0: org.springframework.core.io.ResourceLoader;

        $r2 = staticinvoke <org.springframework.core.io.support.ResourcePatternUtils: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver(org.springframework.core.io.ResourceLoader)>(r1);

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver> = $r2;

        $r3 = new org.springframework.core.type.classreading.CachingMetadataReaderFactory;

        specialinvoke $r3.<org.springframework.core.type.classreading.CachingMetadataReaderFactory: void <init>(org.springframework.core.io.ResourceLoader)>(r1);

        r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory> = $r3;

        return;
    }

    public final org.springframework.core.io.ResourceLoader getResourceLoader()
    {
        org.springframework.core.io.support.ResourcePatternResolver $r1;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        $r1 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver>;

        return $r1;
    }

    public void setResourcePattern(java.lang.String)
    {
        java.lang.String r0;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r1;

        r1 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'resourcePattern\' must not be null");

        r1.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.lang.String resourcePattern> = r0;

        return;
    }

    public void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)
    {
        java.util.List $r2;
        org.springframework.core.type.filter.TypeFilter r1;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r1 := @parameter0: org.springframework.core.type.filter.TypeFilter;

        $r2 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addExcludeFilter(org.springframework.core.type.filter.TypeFilter)
    {
        java.util.List $r2;
        org.springframework.core.type.filter.TypeFilter r1;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r1 := @parameter0: org.springframework.core.type.filter.TypeFilter;

        $r2 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List excludeFilters>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        return;
    }

    public void resetFilters(boolean)
    {
        java.util.List $r1, $r2;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;
        boolean z0;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List excludeFilters>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: void registerDefaultFilters()>();

     label1:
        return;
    }

    protected void registerDefaultFilters()
    {
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;
        java.util.List $r2, $r6, $r10;
        java.lang.Class $r3, $r7, $r11;
        org.apache.commons.logging.Log $r8, $r12;
        java.lang.ClassNotFoundException $r13, $r14;
        java.lang.ClassLoader $r4;
        org.springframework.core.type.filter.AnnotationTypeFilter $r1, $r5, $r9;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        $r2 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        $r1 = new org.springframework.core.type.filter.AnnotationTypeFilter;

        specialinvoke $r1.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>(class "Lorg/springframework/stereotype/Component;");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r3 = class "Lorg/springframework/context/annotation/ClassPathScanningCandidateComponentProvider;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r6 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        $r5 = new org.springframework.core.type.filter.AnnotationTypeFilter;

        $r7 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("javax.annotation.ManagedBean");

        specialinvoke $r5.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class,boolean)>($r7, 0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r8 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void info(java.lang.Object)>("JSR-250 \'javax.annotation.ManagedBean\' found and supported for component scanning");

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        $r10 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        $r9 = new org.springframework.core.type.filter.AnnotationTypeFilter;

        $r11 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("javax.inject.Named");

        specialinvoke $r9.<org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class,boolean)>($r11, 0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r12 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void info(java.lang.Object)>("JSR-330 \'javax.inject.Named\' annotation found and supported for component scanning");

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

     label7:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
    }

    public java.util.Set findCandidateComponents(java.lang.String)
    {
        org.springframework.core.type.classreading.MetadataReader $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.core.io.Resource r14;
        org.springframework.core.io.Resource[] $r11;
        java.lang.StringBuilder $r1, $r5, $r6, $r8, $r15, $r17, $r21, $r23, $r26, $r28, $r30, $r32, $r34, $r36, $r42, $r43;
        java.lang.Throwable $r40;
        int i0, i1;
        java.lang.String r3, $r4, $r7, $r9, $r18, $r24, $r29, $r33, $r37, $r44;
        java.util.LinkedHashSet $r0;
        org.springframework.context.'annotation'.ScannedGenericBeanDefinition $r25;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r2;
        java.io.IOException $r38;
        org.springframework.beans.factory.BeanDefinitionStoreException $r39, $r41;
        org.springframework.core.type.classreading.MetadataReaderFactory $r19;
        org.apache.commons.logging.Log $r12, $r13, $r16, $r22, $r27, $r31, $r35;
        org.springframework.core.io.support.ResourcePatternResolver $r10;

        r2 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("classpath*:");

        $r4 = virtualinvoke r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.lang.String resolveBasePackage(java.lang.String)>(r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.lang.String resourcePattern>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.support.ResourcePatternResolver resourcePatternResolver>;

        $r11 = interfaceinvoke $r10.<org.springframework.core.io.support.ResourcePatternResolver: org.springframework.core.io.Resource[] getResources(java.lang.String)>($r9);

        $r12 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        $r13 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        i0 = lengthof $r11;

        i1 = 0;

        goto label12;

     label02:
        r14 = $r11[i1];

        if $z0 == 0 goto label03;

        $r35 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("Scanning ");

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r37);

     label03:
        $z2 = interfaceinvoke r14.<org.springframework.core.io.Resource: boolean isReadable()>();

        if $z2 == 0 goto label10;

     label04:
        $r19 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $r20 = interfaceinvoke $r19.<org.springframework.core.type.classreading.MetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)>(r14);

        $z3 = virtualinvoke r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)>($r20);

        if $z3 == 0 goto label07;

        $r25 = new org.springframework.context.'annotation'.ScannedGenericBeanDefinition;

        specialinvoke $r25.<org.springframework.context.'annotation'.ScannedGenericBeanDefinition: void <init>(org.springframework.core.type.classreading.MetadataReader)>($r20);

        virtualinvoke $r25.<org.springframework.context.'annotation'.ScannedGenericBeanDefinition: void setResource(org.springframework.core.io.Resource)>(r14);

        virtualinvoke $r25.<org.springframework.context.'annotation'.ScannedGenericBeanDefinition: void setSource(java.lang.Object)>(r14);

        $z4 = virtualinvoke r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: boolean isCandidateComponent(org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition)>($r25);

        if $z4 == 0 goto label06;

        if $z1 == 0 goto label05;

        $r31 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("Identified candidate component class: ");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r33);

     label05:
        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r25);

        goto label11;

     label06:
        if $z1 == 0 goto label11;

        $r27 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignored because not a concrete top-level class: ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r29);

        goto label11;

     label07:
        if $z0 == 0 goto label11;

        $r22 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignored because not matching any filter: ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r24);

     label08:
        goto label11;

     label09:
        $r40 := @caughtexception;

        $r41 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to read candidate component class: ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r44, $r40);

        throw $r41;

     label10:
        if $z0 == 0 goto label11;

        $r16 = r2.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.apache.commons.logging.Log logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ignored because not readable: ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r18);

     label11:
        i1 = i1 + 1;

     label12:
        if i1 < i0 goto label02;

     label13:
        goto label15;

     label14:
        $r38 := @caughtexception;

        $r39 = new org.springframework.beans.factory.BeanDefinitionStoreException;

        specialinvoke $r39.<org.springframework.beans.factory.BeanDefinitionStoreException: void <init>(java.lang.String,java.lang.Throwable)>("I/O failure during classpath scanning", $r38);

        throw $r39;

     label15:
        return $r0;

        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.io.IOException from label01 to label13 with label14;
    }

    protected java.lang.String resolveBasePackage(java.lang.String)
    {
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r3;
        java.lang.String r0, $r1, $r2;

        r3 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)>(r0);

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String convertClassNameToResourcePath(java.lang.String)>($r1);

        return $r2;
    }

    protected boolean isCandidateComponent(org.springframework.core.type.classreading.MetadataReader) throws java.io.IOException
    {
        org.springframework.core.type.filter.TypeFilter r10, r11;
        org.springframework.core.type.classreading.MetadataReader r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2, $r7;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r0;
        java.util.List $r1, $r6;
        org.springframework.core.type.classreading.MetadataReaderFactory $r5, $r9;
        java.lang.Object $r3, $r8;

        r0 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r4 := @parameter0: org.springframework.core.type.classreading.MetadataReader;

        $r1 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List excludeFilters>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.springframework.core.type.filter.TypeFilter) $r3;

        $r5 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $z1 = interfaceinvoke r10.<org.springframework.core.type.filter.TypeFilter: boolean match(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)>(r4, $r5);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.util.List includeFilters>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.springframework.core.type.filter.TypeFilter) $r8;

        $r9 = r0.<org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory>;

        $z3 = interfaceinvoke r11.<org.springframework.core.type.filter.TypeFilter: boolean match(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)>(r4, $r9);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        return 0;
    }

    protected boolean isCandidateComponent(org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition)
    {
        org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition r0;
        org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider r3;
        org.springframework.core.type.AnnotationMetadata $r1, $r2;
        boolean $z0, $z1;

        r3 := @this: org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider;

        r0 := @parameter0: org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $z0 = interfaceinvoke $r1.<org.springframework.core.type.AnnotationMetadata: boolean isConcrete()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $z1 = interfaceinvoke $r2.<org.springframework.core.type.AnnotationMetadata: boolean isIndependent()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <org.springframework.context.'annotation'.ClassPathScanningCandidateComponentProvider: java.lang.String DEFAULT_RESOURCE_PATTERN> = "**/*.class";

        return;
    }
}
