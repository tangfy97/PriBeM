public class org.eclipse.jdt.internal.compiler.ast.TypeDeclaration extends org.eclipse.jdt.internal.compiler.ast.Statement implements org.eclipse.jdt.internal.compiler.problem.ProblemSeverities, org.eclipse.jdt.internal.compiler.impl.ReferenceContext
{
    public static final int CLASS_DECL;
    public static final int INTERFACE_DECL;
    public static final int ENUM_DECL;
    public static final int ANNOTATION_TYPE_DECL;
    public int modifiers;
    public int modifiersSourceStart;
    public org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations;
    public char[] name;
    public org.eclipse.jdt.internal.compiler.ast.TypeReference superclass;
    public org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces;
    public org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields;
    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods;
    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes;
    public org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding;
    public org.eclipse.jdt.internal.compiler.lookup.ClassScope scope;
    public org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope;
    public org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope;
    public boolean ignoreFurtherInvestigation;
    public int maxFieldCount;
    public int declarationSourceStart;
    public int declarationSourceEnd;
    public int bodyStart;
    public int bodyEnd;
    public org.eclipse.jdt.internal.compiler.CompilationResult compilationResult;
    public org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods;
    public org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc;
    public org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation;
    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingType;
    public org.eclipse.jdt.internal.compiler.lookup.FieldBinding enumValuesSyntheticfield;
    public org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters;

    public void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)
    {
        org.eclipse.jdt.internal.compiler.CompilationResult r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.CompilationResult;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Statement: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers> = 0;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 0;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult> = r1;

        return;
    }

    public void abort(int, org.eclipse.jdt.core.compiler.CategorizedProblem)
    {
        org.eclipse.jdt.core.compiler.CategorizedProblem r2;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3, $r5, $r7, $r9;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r8;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit $r4;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r0;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.problem.AbortCompilation $r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i0 := @parameter0: int;

        r2 := @parameter1: org.eclipse.jdt.core.compiler.CategorizedProblem;

        lookupswitch(i0)
        {
            case 2: goto label1;
            case 4: goto label2;
            case 16: goto label3;
            default: goto label4;
        };

     label1:
        $r6 = new org.eclipse.jdt.internal.compiler.problem.AbortCompilation;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.AbortCompilation: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r7, r2);

        throw $r6;

     label2:
        $r4 = new org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r5, r2);

        throw $r4;

     label3:
        $r0 = new org.eclipse.jdt.internal.compiler.problem.AbortMethod;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r3, r2);

        throw $r0;

     label4:
        $r8 = new org.eclipse.jdt.internal.compiler.problem.AbortType;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.AbortType: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r9, r2);

        throw $r8;
    }

    public final void addClinit()
    {
        org.eclipse.jdt.internal.compiler.ast.Clinit $r3;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r1, $r2, r5;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        int $i0, $i1, $i2, $i3, i4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean needClassInitMethod()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r1 != null goto label1;

        r5 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[1];

        goto label2;

     label1:
        i4 = lengthof $r1;

        $i0 = i4 + 1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[$i0];

        r5 = $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 1, i4);

     label2:
        $r3 = new org.eclipse.jdt.internal.compiler.ast.Clinit;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>($r4);

        r5[0] = $r3;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int sourceStart> = $i1;

        $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int declarationSourceStart> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int sourceEnd> = $i2;

        $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int declarationSourceEnd> = $i2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r3.<org.eclipse.jdt.internal.compiler.ast.Clinit: int bodyEnd> = $i3;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = r5;

     label3:
        return;
    }

    public org.eclipse.jdt.internal.compiler.ast.MethodDeclaration addMissingAbstractMethodFor(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r31;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r14;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r19;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r30;
        org.eclipse.jdt.internal.compiler.ast.Argument $r29;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r12;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r17;
        java.lang.StringBuffer $r23, $r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i12, $i14;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r27;
        java.lang.String $r22, $r24;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r1, $r26;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] $r6, $r7, $r8, $r9, $r10, $r18;
        char[] $r5, $r15, $r25;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof r1;

        $r27 = new org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>($r4);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: char[] selector> = $r5;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceStart> = $i1;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int sourceEnd> = $i2;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int getAccessFlags()>();

        $i12 = (int) -1025;

        $i4 = $i3 & $i12;

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers> = $i4;

        if i0 <= 0 goto label3;

        $r19 = newarray (org.eclipse.jdt.internal.compiler.ast.Argument)[i0];

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments> = $r19;

        i10 = i0;

        goto label2;

     label1:
        $r29 = new org.eclipse.jdt.internal.compiler.ast.Argument;

        $r28 = new java.lang.StringBuffer;

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("arg");

        specialinvoke $r28.<java.lang.StringBuffer: void <init>(java.lang.String)>($r22);

        $r23 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i10);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r29.<org.eclipse.jdt.internal.compiler.ast.Argument: void <init>(char[],long,org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>($r25, 0L, null, 0);

        $r19[i10] = $r29;

     label2:
        $i14 = (int) -1;

        i10 = i10 + $i14;

        if i10 >= 0 goto label1;

     label3:
        $r6 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        if $r6 != null goto label4;

        $r18 = newarray (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)[1];

        $r18[0] = $r27;

        r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods> = $r18;

        goto label5;

     label4:
        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        $i5 = lengthof $r7;

        $i6 = $i5 + 1;

        $r8 = newarray (org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)[$i6];

        $r9 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        $i7 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r8, 1, $i7);

        $r8[0] = $r27;

        r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods> = $r8;

     label5:
        $r30 = new org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $i8 = $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: int modifiers>;

        $i9 = $i8 | 4096;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        if i0 != 0 goto label6;

        $r26 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] NO_PARAMETERS>;

        goto label7;

     label6:
        $r26 = r1;

     label7:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        specialinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: void <init>(int,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($i9, $r15, $r14, $r26, $r13, $r12);

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r30;

        $r31 = new org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        $r17 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        specialinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void <init>(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,boolean)>($r17, $r27, 1);

        $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope> = $r31;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.MethodDeclaration: void bindArguments()>();

        return $r27;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r8;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r3;
        int $i0, $i1, $i2, $i3;
        char[] $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label2;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i3 = $i2 | -2147483648;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r5 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) $r4;

        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: char[] computeConstantPoolName(org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)>(r5);

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: void setConstantPoolName(char[])>($r7);

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void internalAnalyseCode(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r3, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label5:
        return r1;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label1 to label3 with label4;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r3;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initial(int)>($i0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void internalAnalyseCode(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(null, $r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label4:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label1 to label2 with label3;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r6;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r8;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r3;
        int $i0, $i1, $i2, $i3;
        char[] $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label2;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i3 = $i2 | -2147483648;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r5 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) $r4;

        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: char[] computeConstantPoolName(org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)>(r5);

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: void setConstantPoolName(char[])>($r7);

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void internalAnalyseCode(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r3, r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label5:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label1 to label3 with label4;
    }

    public void analyseCode(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r1;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r3;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initial(int)>($i0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void internalAnalyseCode(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(null, $r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

     label4:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label1 to label2 with label3;
    }

    public boolean checkConstructors(org.eclipse.jdt.internal.compiler.parser.Parser)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r8, $r10;
        int $i0, $i1, i2, $i4;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration $r15;
        org.eclipse.jdt.internal.compiler.parser.Parser r7;
        boolean $z0, $z1, $z2, z3;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r9, $r11, r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r1, $r2, $r3, $r16;
        org.eclipse.jdt.internal.compiler.CompilationResult $r14;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r13, $r17;
        char[] $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        z3 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r1 == null goto label8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i2 = lengthof $r2;

        goto label7;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r4 = $r3[i2];

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z0 == 0 goto label7;

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r5);

        if $z1 != 0 goto label3;

        r12 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r4;

        $r13 = r12.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        if $r13 == null goto label2;

        $r17 = r12.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $z2 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: boolean isImplicitSuper()>();

        if $z2 == 0 goto label7;

     label2:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r15 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration convertToMethodDeclaration(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>(r12, $r14);

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r16[i2] = $r15;

        goto label7;

     label3:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i0);

        tableswitch($i1)
        {
            case 2: goto label4;
            case 3: goto label6;
            case 4: goto label5;
            default: goto label6;
        };

     label4:
        $r10 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r4;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void interfaceCannotHaveConstructors(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)>($r11);

        goto label6;

     label5:
        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.parser.Parser: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r9 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) $r4;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void annotationTypeDeclarationCannotHaveConstructor(org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration)>($r9);

     label6:
        z3 = 1;

     label7:
        $i4 = (int) -1;

        i2 = i2 + $i4;

        if i2 >= 0 goto label1;

     label8:
        return z3;
    }

    public org.eclipse.jdt.internal.compiler.CompilationResult compilationResult()
    {
        org.eclipse.jdt.internal.compiler.CompilationResult $r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        return $r1;
    }

    public org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration createDefaultConstructor(boolean, boolean)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, z1;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r2;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r4, $r5, $r6, $r7, $r8, $r9;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r10, $r11, $r12;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>($r2);

        $i0 = $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i1 = $i0 | 128;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits> = $i1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: char[] selector> = $r3;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i3 = $i2 & 7;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int modifiers> = $i3;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart> = $i4;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int declarationSourceStart> = $i4;

        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bodyEnd> = $i5;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd> = $i5;

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int declarationSourceEnd> = $i5;

        if z0 == 0 goto label1;

        $r10 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.SuperReference: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall implicitSuperConstructorCall()>();

        $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = $r10;

        $r11 = $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r11.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart> = $i9;

        $r12 = $r0.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r12.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceEnd> = $i10;

     label1:
        if z1 == 0 goto label3;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r4 != null goto label2;

        $r9 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[1];

        $r9[0] = $r0;

        r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = $r9;

        goto label3;

     label2:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i6 = lengthof $r5;

        $i7 = $i6 + 1;

        $r6 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[$i7];

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i8 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r6, 1, $i8);

        $r6[0] = $r0;

        r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = $r6;

     label3:
        return $r0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.MethodBinding createDefaultConstructorWithBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r20, $r50;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r16, $r17, $r24, $r25, $r49;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r44;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference $r48;
        long $l12, $l13, $l14, $l15;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r19;
        java.lang.StringBuffer $r33, $r40, $r45, $r47;
        java.lang.String $r32, $r34, $r39, $r41;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r9, $r10, $r11, $r12, $r13, $r26;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r6, $r7, $r8, $r21, $r29;
        char[] $r5, $r35, $r42;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r28;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r15;
        org.eclipse.jdt.internal.compiler.ast.Argument[] $r36;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.Argument $r46;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r3;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i16, $i17, $i18, $i19, i20, i21, i22, i23, $i25, $i27;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r1, $r43;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof r1;

        $r44 = new org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult)>($r4);

        $r5 = newarray (char)[1];

        $r5[0] = 120;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: char[] selector> = $r5;

        $i1 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceStart> = $i1;

        $i2 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int sourceEnd> = $i2;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        i20 = $i3 & 7;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isVarargs()>();

        if $z0 == 0 goto label01;

        i20 = i20 | 128;

     label01:
        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int modifiers> = i20;

        $i4 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits>;

        $i5 = $i4 | 128;

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int bits> = $i5;

        if i0 <= 0 goto label04;

        $r36 = newarray (org.eclipse.jdt.internal.compiler.ast.Argument)[i0];

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.Argument[] arguments> = $r36;

        i21 = i0;

        goto label03;

     label02:
        $r46 = new org.eclipse.jdt.internal.compiler.ast.Argument;

        $r45 = new java.lang.StringBuffer;

        $r39 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("$anonymous");

        specialinvoke $r45.<java.lang.StringBuffer: void <init>(java.lang.String)>($r39);

        $r40 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i21);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        $r42 = virtualinvoke $r41.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r46.<org.eclipse.jdt.internal.compiler.ast.Argument: void <init>(char[],long,org.eclipse.jdt.internal.compiler.ast.TypeReference,int)>($r42, 0L, null, 0);

        $r36[i21] = $r46;

     label03:
        $i25 = (int) -1;

        i21 = i21 + $i25;

        if i21 >= 0 goto label02;

     label04:
        $r6 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.SuperReference: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall implicitSuperConstructorCall()>();

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall> = $r6;

        $r7 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $r7.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceStart> = $i6;

        $r8 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $i7 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        $r8.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: int sourceEnd> = $i7;

        if i0 <= 0 goto label07;

        $r29 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r28 = newarray (org.eclipse.jdt.internal.compiler.ast.Expression)[i0];

        $r29.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments> = $r28;

        i22 = i0;

        goto label06;

     label05:
        $r48 = new org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        $r47 = new java.lang.StringBuffer;

        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("$anonymous");

        specialinvoke $r47.<java.lang.StringBuffer: void <init>(java.lang.String)>($r32);

        $r33 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i22);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        $r35 = virtualinvoke $r34.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void <init>(char[],long)>($r35, 0L);

        $r28[i22] = $r48;

     label06:
        $i27 = (int) -1;

        i22 = i22 + $i27;

        if i22 >= 0 goto label05;

     label07:
        $r9 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r9 != null goto label08;

        $r26 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[1];

        $r26[0] = $r44;

        r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = $r26;

        goto label09;

     label08:
        $r13 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r10 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i8 = lengthof $r10;

        $i9 = $i8 + 1;

        $r11 = newarray (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)[$i9];

        $r12 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i10 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r11, 1, $i10);

        $r11[0] = $r44;

        r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods> = $r11;

     label09:
        $r27 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r49 = new org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $i11 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: int modifiers>;

        if i0 != 0 goto label10;

        $r43 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] NO_PARAMETERS>;

        goto label11;

     label10:
        $r43 = r1;

     label11:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        specialinvoke $r49.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: void <init>(int,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($i11, $r43, $r15, $r27);

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r49;

        $r16 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $l14 = $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l12 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l13 = $l12 & 128L;

        $l15 = $l14 | $l13;

        $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits> = $l15;

        $r17 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $i16 = $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i17 = $i16 | 67108864;

        $r17.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i17;

        $r50 = new org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        $r19 = r3.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        specialinvoke $r50.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void <init>(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.impl.ReferenceContext,boolean)>($r19, $r44, 1);

        $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope> = $r50;

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void bindArguments()>();

        $r21 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall constructorCall>;

        $r20 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r20);

        $r22 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] methods()>();

        $i18 = lengthof $r22;

        $i19 = $i18 + 1;

        $r23 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[$i19];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, $r23, 1, $i18);

        $r24 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r23[0] = $r24;

        i23 = $i18 + 1;

        if i23 <= 1 goto label12;

        staticinvoke <org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: void sortMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int,int)>($r23, 0, i23);

     label12:
        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: void setMethods(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[])>($r23);

        $r25 = $r44.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        return $r25;
    }

    public org.eclipse.jdt.internal.compiler.ast.FieldDeclaration declarationOf(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r0, $r6;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r2, $r3, $r4;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if r0 == null goto label4;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r2 == null goto label4;

        i1 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i0 = lengthof $r3;

        goto label3;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r5 = $r4[i1];

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        if $r6 != r0 goto label2;

        return $r5;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration declarationOf(org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r6;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r2, $r3, $r4;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding;

        if r0 == null goto label4;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r2 == null goto label4;

        i1 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i0 = lengthof $r3;

        goto label3;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r5 = $r4[i1];

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r6 != r0 goto label2;

        return $r5;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration declarationOf(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0, $r6;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r2, $r3, $r4;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        if r0 == null goto label4;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r2 == null goto label4;

        i1 = 0;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i0 = lengthof $r3;

        goto label3;

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r5 = $r4[i1];

        $r6 = $r5.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r6 != r0 goto label2;

        return $r5;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

     label4:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration declarationOfType(char[][])
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r5, $r6;
        char[][] r0, r4;
        int i0, $i1, $i2, $i3, i4;
        char[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r7, $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: char[][];

        i0 = lengthof r0;

        if i0 < 1 goto label1;

        $r3 = r0[0];

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r2);

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        if i0 != 1 goto label3;

        return r1;

     label3:
        $i1 = i0 - 1;

        r4 = newarray (char[])[$i1];

        $i2 = i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, r4, 0, $i2);

        i4 = 0;

        goto label6;

     label4:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r7 = $r6[i4];

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration declarationOfType(char[][])>(r4);

        if $r8 == null goto label5;

        return $r8;

     label5:
        i4 = i4 + 1;

     label6:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $i3 = lengthof $r5;

        if i4 < $i3 goto label4;

        return null;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        boolean $z0, $z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.ClassFile $r2, r3;
        org.eclipse.jdt.internal.compiler.CompilationResult $r11, $r16, $r32, $r37;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, r23;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r9, $r15, $r31, $r36;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r4, $r5, $r6, $r10, $r24, $r26, $r27, $r28, $r29, $r34;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r21, $r22, $r38;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r13, $r33;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r8, $r14, $r19, $r25, $r30, $r35;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r7, $r17, $r18;
        char[] $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label01;

        return;

     label01:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i3 = $i2 | 8192;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits> = $i3;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z0 == 0 goto label03;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r29 != null goto label02;

        return;

     label02:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r31 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r32 = $r31.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ClassFile: void createProblemType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>(r0, $r32);

        return;

     label03:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.ClassFile getNewInstance(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding)>($r1);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void initialize(org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding,org.eclipse.jdt.internal.compiler.ClassFile,boolean)>($r4, r3, 0);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isMemberType()>();

        if $z1 == 0 goto label04;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r28);

        goto label05;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isLocalType()>();

        if $z2 == 0 goto label05;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r26);

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r27);

     label05:
        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void addFieldInfos()>();

        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r38 == null goto label08;

        i4 = 0;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i5 = lengthof $r21;

        goto label07;

     label06:
        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        r23 = $r22[i4];

        $r24 = r23.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r24);

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke r23.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile)>($r25, $r2);

        i4 = i4 + 1;

     label07:
        if i4 < i5 goto label06;

     label08:
        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void setForMethodInfos()>();

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r7 == null goto label11;

        i6 = 0;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i7 = lengthof $r17;

        goto label10;

     label09:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r20 = $r18[i6];

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.ClassFile)>($r19, $r2);

        i6 = i6 + 1;

     label10:
        if i6 < i7 goto label09;

     label11:
        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void addSpecialMethods()>();

        $z3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        if $z3 == 0 goto label12;

        $r13 = new org.eclipse.jdt.internal.compiler.problem.AbortType;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        specialinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.AbortType: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r16, null);

        throw $r13;

     label12:
        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ClassFile: void addAttributes()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r11 = $r9.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r12 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: char[] constantPoolName()>();

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.CompilationResult: void record(char[],org.eclipse.jdt.internal.compiler.ClassFile)>($r12, $r2);

     label13:
        goto label16;

     label14:
        $r33 := @caughtexception;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r34 != null goto label15;

        return;

     label15:
        $r35 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r36 = virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r37 = $r36.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ClassFile: void createProblemType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.CompilationResult)>(r0, $r37);

     label16:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label03 to label13 with label14;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2, $r4;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.ClassFile $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding $r5;
        int $i0, $i1, $i2, $i3, i4, $i5;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i3 = $i2 & 8192;

        if $i3 == 0 goto label2;

        return;

     label2:
        i4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r2 == null goto label3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r4;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: void computeSyntheticArgumentSlotSizes()>();

     label3:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.ClassFile)>($r3);

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i4, $i5);

        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r3;
        org.eclipse.jdt.internal.compiler.ClassFile r2;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding $r4;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r5;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r1 == null goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r4 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r3;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: void computeSyntheticArgumentSlotSizes()>();

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.ClassFile)>(r2);

        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.ClassFile)>(null);

        return;
    }

    public boolean hasErrors()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation>;

        return $z0;
    }

    private void internalAnalyseCode(org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r9;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r39, $r42, $r46, $r49, $r59, $r61;
        byte $b15;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r27;
        org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration $r19;
        org.eclipse.jdt.internal.compiler.CompilationResult $r54;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r53;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3, $r13, $r18, $r21, $r25, $r34, $r35, $r40, $r47, r62, r63;
        long $l13, $l14;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r17, $r20, $r22, $r29, $r33, $r52, $r55;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r5, $r14, $r15;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r10, $r11, $r12, $r23, $r24, $r41, $r44, $r48, $r51;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r43, $r50, $r56;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r36, $r37, $r64;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r38, $r45;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r65;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, $r30, $r32;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r2, $r6, $r7, $r8, $r57;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r4, $r26, $r28, $r31;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i16, i17, i18, i19, i20;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext $r58, $r60;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r27 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isPrivate()>();

        if $z0 != 0 goto label01;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $l13 = $r57.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: long tagBits>;

        $l14 = $l13 & 48L;

        $b15 = $l14 cmp 16L;

        if $b15 != 0 goto label02;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isUsed()>();

        if $z1 != 0 goto label02;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r53 = virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r54 = $r53.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $z8 = $r54.<org.eclipse.jdt.internal.compiler.CompilationResult: boolean hasSyntaxError>;

        if $z8 != 0 goto label02;

        $r55 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r56 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r56.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unusedPrivateType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label02:
        $r58 = new org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        $r59 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        specialinvoke $r58.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(null, r0, $r59);

        $r60 = new org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        $r61 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        specialinvoke $r60.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(null, r0, $r61);

        r62 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()>();

        r63 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()>();

        $r64 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r64 == null goto label09;

        i16 = 0;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i17 = lengthof $r36;

        goto label08;

     label03:
        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r65 = $r37[i16];

        $z7 = virtualinvoke r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z7 == 0 goto label05;

        $i8 = r63.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i9 = $i8 & 1;

        if $i9 == 0 goto label04;

        $i11 = r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits>;

        $i12 = $i11 & 2147483647;

        r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits> = $i12;

     label04:
        $r45 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] ANY_EXCEPTION>;

        $r60.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] handledExceptions> = $r45;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r47 = virtualinvoke r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.MethodScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r46, $r60, r63);

        r63 = $r47;

        $r48 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        if $r47 != $r48 goto label07;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r50 = virtualinvoke $r49.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void initializerMustCompleteNormally(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)>(r65);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $r51 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initial(int)>($i10);

        r63 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

        goto label07;

     label05:
        $i3 = r62.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label06;

        $i6 = r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits>;

        $i7 = $i6 & 2147483647;

        r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int bits> = $i7;

     label06:
        $r38 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] ANY_EXCEPTION>;

        $r58.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] handledExceptions> = $r38;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        $r40 = virtualinvoke r65.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.MethodScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r39, $r58, r62);

        r62 = $r40;

        $r41 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        if $r40 != $r41 goto label07;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        $r43 = virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void initializerMustCompleteNormally(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)>(r65);

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $r44 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo initial(int)>($i5);

        r62 = virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>(1);

     label07:
        i16 = i16 + 1;

     label08:
        if i16 < i17 goto label03;

     label09:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r4 == null goto label14;

        i18 = 0;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i19 = lengthof $r26;

        goto label13;

     label10:
        if r27 == null goto label11;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r32 = $r31[i18];

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r34 = virtualinvoke r62.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $i2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int reachMode()>();

        $r35 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo setReachMode(int)>($i2);

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r33, r27, $r35);

        goto label12;

     label11:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r30 = $r28[i18];

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r29);

     label12:
        i18 = i18 + 1;

     label13:
        if i18 < i19 goto label10;

     label14:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r5 == null goto label21;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalFieldLessCopy()>();

        $r11 = virtualinvoke r62.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo discardNonFieldInitializations()>();

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r10);

        i20 = 0;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i0 = lengthof $r14;

        goto label20;

     label15:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        r16 = $r15[i20];

        $z4 = r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean ignoreFurtherInvestigation>;

        if $z4 == 0 goto label16;

        goto label19;

     label16:
        $z5 = virtualinvoke r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isInitializationMethod()>();

        if $z5 == 0 goto label18;

        $z6 = virtualinvoke r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isStatic()>();

        if $z6 == 0 goto label17;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r23 = virtualinvoke r63.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo discardNonFieldInitializations()>();

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo addInitializationsFrom(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r10);

        virtualinvoke r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r22, $r60, $r25);

        goto label19;

     label17:
        $r19 = (org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration) r16;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r21 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $i1 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int reachMode()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,int)>($r20, $r58, $r21, $i1);

        goto label19;

     label18:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        virtualinvoke r16.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void analyseCode(org.eclipse.jdt.internal.compiler.lookup.ClassScope,org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r17, null, $r18);

     label19:
        i20 = i20 + 1;

     label20:
        if i20 < i0 goto label15;

     label21:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isEnum()>();

        if $z2 == 0 goto label22;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z3 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAnonymousType()>();

        if $z3 != 0 goto label22;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding addSyntheticFieldForEnumValues()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding enumValuesSyntheticfield> = $r9;

     label22:
        return;
    }

    public static final int kind(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 25088;

        lookupswitch($i1)
        {
            case 512: goto label1;
            case 8704: goto label2;
            case 16384: goto label3;
            default: goto label4;
        };

     label1:
        return 2;

     label2:
        return 4;

     label3:
        return 3;

     label4:
        return 1;
    }

    public void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r18;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r5;
        byte $b3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r3, r12, $r16;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r10;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        long $l2;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r14;
        int $i0, $i1, $i4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r6, r8, $r9, $r11, $r13, $r15, $r17, $r19;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r3 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r2;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $z0 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z0 != 0 goto label2;

        $z5 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isConstructorCall>;

        if $z5 != 0 goto label2;

        $r19 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding addSyntheticArgumentAndField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r19);

     label2:
        $z6 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: boolean isAnonymousType()>();

        if $z6 == 0 goto label5;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r8 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r7;

        $r9 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r9 == null goto label4;

        $z3 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isStatic()>();

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z4 == 0 goto label3;

        $r16 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r8;

        $r17 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r18 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding getSyntheticField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r17, 1);

        if $r18 == null goto label4;

     label3:
        $r15 = virtualinvoke r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding addSyntheticArgument(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r15);

     label4:
        $z7 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z7 != 0 goto label5;

        $z1 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isConstructorCall>;

        if $z1 == 0 goto label5;

        $r10 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l2 = $r10.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b3 = $l2 cmp 3211264L;

        $i4 = (int) $b3;

        if $i4 < 0 goto label5;

        $r11 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $z2 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z2 == 0 goto label5;

        r12 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r11;

        $r13 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r14 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding getSyntheticArgument(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>($r13, 1);

        if $r14 == null goto label5;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding addSyntheticArgumentAndField(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r14);

     label5:
        return;
    }

    public void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2, $r4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r6;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r3 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r2;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding addSyntheticArgumentAndField(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r5);

     label1:
        return;
    }

    public final boolean needClassInitMethod()
    {
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i2);

        tableswitch($i3)
        {
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label2;
            default: goto label5;
        };

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r1 == null goto label3;

        return 1;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r2 == null goto label8;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i6 = lengthof $r3;

        goto label7;

     label6:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r5 = $r4[i6];

        $i4 = r5.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int modifiers>;

        $i5 = $i4 & 8;

        if $i5 == 0 goto label7;

        return 1;

     label7:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        if i6 >= 0 goto label6;

     label8:
        return 0;
    }

    public void parseMethods(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r2, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r4, $r5, $r6;
        int $i0, i1, i2, i3, i4, i5, i6;
        org.eclipse.jdt.internal.compiler.parser.Parser r8;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration r7;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r3, $r10, $r11;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r15;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r9;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r8 := @parameter0: org.eclipse.jdt.internal.compiler.parser.Parser;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: boolean ignoreMethodBodies>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r2 == null goto label04;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i1 = lengthof $r13;

        i2 = 0;

        goto label03;

     label02:
        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r15 = $r14[i2];

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void parseMethods(org.eclipse.jdt.internal.compiler.parser.Parser,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)>(r8, r0);

        i2 = i2 + 1;

     label03:
        if i2 < i1 goto label02;

     label04:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r3 == null goto label07;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i3 = lengthof $r10;

        i4 = 0;

        goto label06;

     label05:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r12 = $r11[i4];

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void parseStatements(org.eclipse.jdt.internal.compiler.parser.Parser,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)>(r8, r0);

        i4 = i4 + 1;

     label06:
        if i4 < i3 goto label05;

     label07:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r4 == null goto label12;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i5 = lengthof $r5;

        i6 = 0;

        goto label11;

     label08:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r7 = $r6[i6];

        $i0 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i0)
        {
            case 2: goto label09;
            default: goto label10;
        };

     label09:
        $r9 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r7;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Initializer: void parseStatements(org.eclipse.jdt.internal.compiler.parser.Parser,org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration)>(r8, r1, r0);

     label10:
        i6 = i6 + 1;

     label11:
        if i6 < i5 goto label08;

     label12:
        return;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r1, $r4;
        java.lang.StringBuffer r2, $r3;
        int $i0, $i1, i2;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i2 := @parameter0: int;

        r2 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r1 == null goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Javadoc: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i2, r2);

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 512;

        if $i1 != 0 goto label2;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i2, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printHeader(int,java.lang.StringBuffer)>(0, r2);

     label2:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printBody(int,java.lang.StringBuffer)>(i2, r2);

        return $r3;
    }

    public java.lang.StringBuffer printBody(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r3, $r11, $r13, $r20;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r12, $r14;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r16, $r18;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r2, $r15, $r17, $r19;
        java.lang.StringBuffer r0, $r5, $r6;
        int i0, $i1, $i2, $i3, i4, $i5, i6, $i7, i8, $i9;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r4, $r7, $r9, $r21;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r8, $r10;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r2 == null goto label04;

        i4 = 0;

        goto label03;

     label01:
        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r16 = $r15[i4];

        if $r16 == null goto label02;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r18 = $r17[i4];

        $i3 = i0 + 1;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i3, r0);

     label02:
        i4 = i4 + 1;

     label03:
        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $i5 = lengthof $r19;

        if i4 < $i5 goto label01;

     label04:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r3 == null goto label08;

        i6 = 0;

        goto label07;

     label05:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r12 = $r11[i6];

        if $r12 == null goto label06;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r14 = $r13[i6];

        $i2 = i0 + 1;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i2, r0);

     label06:
        i6 = i6 + 1;

     label07:
        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $i7 = lengthof $r20;

        if i6 < $i7 goto label05;

     label08:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r4 == null goto label12;

        i8 = 0;

        goto label11;

     label09:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r8 = $r7[i8];

        if $r8 == null goto label10;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r10 = $r9[i8];

        $i1 = i0 + 1;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>($i1, r0);

     label10:
        i8 = i8 + 1;

     label11:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i9 = lengthof $r21;

        if i8 < $i9 goto label09;

     label12:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r5 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return $r6;
    }

    public java.lang.StringBuffer printHeader(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r2, $r11;
        java.lang.StringBuffer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9, $i10;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r9, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r4, $r5, $r6, $r15;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r3, $r7, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r10;
        char[] $r12;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i6 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printModifiers(int,java.lang.StringBuffer)>($i0, r1);

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r2 == null goto label01;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer printAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation[],java.lang.StringBuffer)>($r11, r1);

     label01:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i1);

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            default: goto label06;
        };

     label02:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("class ");

        goto label06;

     label03:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("interface ");

        goto label06;

     label04:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("enum ");

        goto label06;

     label05:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@interface ");

     label06:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r12);

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r13 == null goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        i7 = 0;

        goto label09;

     label07:
        if i7 <= 0 goto label08;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label08:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r10 = $r9[i7];

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r1);

        i7 = i7 + 1;

     label09:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $i8 = lengthof $r14;

        if i7 < $i8 goto label07;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

     label10:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if $r3 == null goto label11;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r1);

     label11:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if $r4 == null goto label18;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $i3 = lengthof $r5;

        if $i3 <= 0 goto label18;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i5 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i4);

        tableswitch($i5)
        {
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label12;
            case 4: goto label13;
            default: goto label14;
        };

     label12:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" implements ");

        goto label14;

     label13:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends ");

     label14:
        i9 = 0;

        goto label17;

     label15:
        if i9 <= 0 goto label16;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label16:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r7 = $r6[i9];

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r1);

        i9 = i9 + 1;

     label17:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $i10 = lengthof $r15;

        if i9 < $i10 goto label15;

     label18:
        return r1;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r1, $r2;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r1);

        return $r2;
    }

    public void resolve()
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r2, $r3, $r5, $r6, $r74, $r112, $r123, $r125;
        byte $b2, $b33;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r12;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r41, $r48, $r81, $r87, $r94;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r11;
        long $l0, $l1, $l32;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r7, $r18, $r23, $r26, $r30, $r32, $r34, $r36, $r43, $r49, $r51, $r65, $r69, $r73, $r75, $r77, $r83, $r104, $r106, $r108, $r113;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r14, $r15, $r16, $r28, $r29, $r39, $r40, $r46, $r47;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r10, $r53, $r54, r119;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, $r20, $r22, $r66;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding r1, $r21, $r38;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r9, $r63, $r64;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r110;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i34, $i35, i36, i37, i38, i39, i40, i41, i42, $i43, $i44, i45, i46, i47, i48, i49, i50, $i51, i52, $i53, i54, i55, i56, $i57, $i59, $i61, $i63, $i65, $i67;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r79, $r85, $r92;
        org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] $r13, $r128;
        org.eclipse.jdt.internal.compiler.ast.Initializer $r62;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r78;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r17, $r27;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r122, $r124;
        char[][] $r82, $r114;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r58, $r72, $r84, $r89, $r96, $r99, $r115;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r118;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r8, $r107;
        java.lang.Throwable $r111;
        char[] $r24, $r25, $r56, $r57, $r80, $r86, $r93;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r19, $r33, $r35, $r37, $r44, $r50, $r52, $r76, $r105, $r109;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r90, $r97, $r100;
        org.eclipse.jdt.internal.compiler.ast.Expression $r55, $r60, $r61;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r42, $r45, r121;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z18, z20, z21, $z22, $z23, $z24, $z25, z26, $z27, $z28, $z29, $z30, $z31;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r70;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r67, $r68, $r120;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r71, $r91, $r98, $r101, $r102, $r103, $r116, r117;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r59, $r88, $r95;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r31, r126, r127;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if r1 != null goto label01;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        z0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean insideTypeAnnotation>;

     label02:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean insideTypeAnnotation> = 1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolveAnnotations(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Annotation[],org.eclipse.jdt.internal.compiler.lookup.Binding)>($r5, $r4, r1);

        goto label04;

     label03:
        $r111 := @caughtexception;

        $r112 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r112.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean insideTypeAnnotation> = z0;

        throw $r111;

     label04:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        $r6.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean insideTypeAnnotation> = z0;

        $l0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: long getAnnotationTagBits()>();

        $l1 = $l0 & 70368744177664L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label05;

        $i30 = r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int modifiers>;

        $i31 = $i30 & 1048576;

        if $i31 == 0 goto label05;

        $r106 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r107 = virtualinvoke $r106.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l32 = $r107.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b33 = $l32 cmp 3211264L;

        $i57 = (int) $b33;

        if $i57 < 0 goto label05;

        $r108 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r109 = virtualinvoke $r108.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r109.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingDeprecatedAnnotationForType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label05:
        $i34 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i35 = $i34 & 8;

        if $i35 == 0 goto label06;

        $r104 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r105 = virtualinvoke $r104.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i27 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bodyStart>;

        $i29 = $i27 - 1;

        $i28 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bodyEnd>;

        virtualinvoke $r105.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void undocumentedEmptyBlock(int,int)>($i29, $i28);

     label06:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i3 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(4294967296L);

        $i59 = (int) -1;

        if $i3 == $i59 goto label07;

        $z16 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isClass()>();

        if $z16 == 0 goto label07;

        $r102 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding findSuperTypeOriginatingFrom(int,boolean)>(56, 0);

        if $r102 != null goto label07;

        $r103 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding findSuperTypeOriginatingFrom(int,boolean)>(37, 0);

        if $r103 == null goto label07;

        $z31 = 1;

        $z30 = 1;

        goto label08;

     label07:
        $z31 = 0;

        $z30 = 0;

     label08:
        z18 = $z30;

        if $z31 == 0 goto label19;

        $r77 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r78 = virtualinvoke $r77.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        $r80 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEREPLACE>;

        $r79 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[0];

        $r81 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getExactMethod(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r80, $r79, $r78);

        if $r81 == null goto label09;

        $z15 = virtualinvoke $r81.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z15 == 0 goto label09;

        $r99 = $r81.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i24 = $r99.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i24 != 1 goto label09;

        $r100 = $r81.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i25 = lengthof $r100;

        if $i25 != 1 goto label09;

        $r101 = $r100[0];

        $i26 = $r101.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i26 != 57 goto label09;

        $z29 = 0;

        $z28 = 0;

        goto label10;

     label09:
        $z29 = 1;

        $z28 = 1;

     label10:
        z18 = $z29;

        if $z28 == 0 goto label19;

        z20 = 0;

        z21 = 0;

        $r83 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r82 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_OBJECTOUTPUTSTREAM>;

        $r84 = virtualinvoke $r83.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[][],int)>($r82, 3);

        $z12 = virtualinvoke $r84.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z12 == 0 goto label13;

        $r93 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEOBJECT>;

        $r92 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[1];

        $r92[0] = $r84;

        $r94 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getExactMethod(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r93, $r92, $r78);

        if $r94 == null goto label11;

        $z14 = virtualinvoke $r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z14 == 0 goto label11;

        $i21 = $r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        if $i21 != 2 goto label11;

        $r96 = $r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r95 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r96 != $r95 goto label11;

        $r97 = $r94.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i22 = lengthof $r97;

        if $i22 != 1 goto label11;

        $r98 = $r97[0];

        $i23 = $r98.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i23 != 58 goto label11;

        $z22 = 1;

        goto label12;

     label11:
        $z22 = 0;

     label12:
        z20 = $z22;

     label13:
        $r113 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r114 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_OBJECTINPUTSTREAM>;

        $r115 = virtualinvoke $r113.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[][],int)>($r114, 3);

        $z23 = virtualinvoke $r115.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z23 == 0 goto label16;

        $r86 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] READOBJECT>;

        $r85 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[1];

        $r85[0] = $r115;

        $r87 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getExactMethod(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>($r86, $r85, $r78);

        if $r87 == null goto label14;

        $z13 = virtualinvoke $r87.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z13 == 0 goto label14;

        $i18 = $r87.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        if $i18 != 2 goto label14;

        $r89 = $r87.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r88 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r89 != $r88 goto label14;

        $r90 = $r87.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i19 = lengthof $r90;

        if $i19 != 1 goto label14;

        $r91 = $r90[0];

        $i20 = $r91.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i20 != 58 goto label14;

        $z24 = 1;

        goto label15;

     label14:
        $z24 = 0;

     label15:
        z21 = $z24;

     label16:
        if z20 == 0 goto label17;

        if z21 == 0 goto label17;

        $z25 = 0;

        goto label18;

     label17:
        $z25 = 1;

     label18:
        z18 = $z25;

     label19:
        $r116 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding findSuperTypeOriginatingFrom(int,boolean)>(21, 1);

        if $r116 == null goto label24;

        r117 = r1;

     label20:
        $z8 = virtualinvoke r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isGenericType()>();

        if $z8 == 0 goto label21;

        $r75 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r76 = virtualinvoke $r75.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r76.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void genericTypeCannotExtendThrowable(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        goto label24;

     label21:
        $z9 = virtualinvoke r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isStatic()>();

        if $z9 == 0 goto label22;

        goto label24;

     label22:
        $z10 = virtualinvoke r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z10 == 0 goto label23;

        $r72 = virtualinvoke r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r118 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) $r72;

        $r73 = r118.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r74 = virtualinvoke $r73.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $z11 = $r74.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z11 == 0 goto label23;

        goto label24;

     label23:
        $r71 = virtualinvoke r117.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        r117 = $r71;

        if $r71 != null goto label20;

     label24:
        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount> = 0;

        $i61 = (int) -1;

        i36 = $i61;

        z26 = 0;

        r119 = (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[]) null;

        $r120 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r120 == null goto label27;

        i37 = 0;

        $r67 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i38 = lengthof $r67;

        goto label26;

     label25:
        $r68 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r70 = $r68[i37];

        $r69 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r70.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r69);

        i37 = i37 + 1;

     label26:
        if i37 < i38 goto label25;

     label27:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r9 == null goto label30;

        i39 = 0;

        $r63 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i40 = lengthof $r63;

        goto label29;

     label28:
        $r64 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r66 = $r64[i39];

        $r65 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r66.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r65);

        i39 = i39 + 1;

     label29:
        if i39 < i40 goto label28;

     label30:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r10 == null goto label46;

        i41 = 0;

        $r53 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i42 = lengthof $r53;

        goto label45;

     label31:
        $r54 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        r121 = $r54[i41];

        $i14 = virtualinvoke r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: int getKind()>();

        tableswitch($i14)
        {
            case 1: goto label34;
            case 2: goto label40;
            case 3: goto label32;
            default: goto label41;
        };

     label32:
        z26 = 1;

        $r55 = r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z5 = $r55 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        if $z5 != 0 goto label34;

        if r119 != null goto label33;

        r119 = newarray (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)[i42];

     label33:
        r119[i41] = r121;

     label34:
        $r122 = r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        if $r122 != null goto label38;

        $r60 = r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        if $r60 == null goto label37;

        $r61 = r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.ast.Expression initialization>;

        $z7 = virtualinvoke r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z7 == 0 goto label35;

        $r123 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        goto label36;

     label35:
        $r123 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

     label36:
        virtualinvoke $r61.<org.eclipse.jdt.internal.compiler.ast.Expression: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r123);

     label37:
        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

        goto label44;

     label38:
        if z18 == 0 goto label39;

        $i15 = $r122.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int modifiers>;

        $i16 = $i15 & 24;

        if $i16 != 24 goto label39;

        $r57 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALVERSIONUID>;

        $r56 = $r122.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r57, $r56);

        if $z6 == 0 goto label39;

        $r59 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        $r58 = $r122.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        if $r59 != $r58 goto label39;

        z18 = 0;

     label39:
        $i43 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $i44 = $i43 + 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount> = $i44;

        $r124 = r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        i36 = $r124.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        goto label41;

     label40:
        $r62 = (org.eclipse.jdt.internal.compiler.ast.Initializer) r121;

        $i17 = i36 + 1;

        $r62.<org.eclipse.jdt.internal.compiler.ast.Initializer: int lastVisibleFieldID> = $i17;

     label41:
        $z27 = virtualinvoke r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z27 == 0 goto label42;

        $r125 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        goto label43;

     label42:
        $r125 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

     label43:
        virtualinvoke r121.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.MethodScope)>($r125);

     label44:
        i41 = i41 + 1;

     label45:
        if i41 < i42 goto label31;

     label46:
        if z18 == 0 goto label47;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r52 = virtualinvoke $r51.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingSerialVersion(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label47:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int modifiers>;

        $i5 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int kind(int)>($i4);

        tableswitch($i5)
        {
            case 3: goto label50;
            case 4: goto label48;
            default: goto label61;
        };

     label48:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if $r11 == null goto label49;

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r37 = virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void annotationTypeDeclarationCannotHaveSuperclass(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label49:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if $r12 == null goto label61;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r35 = virtualinvoke $r34.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void annotationTypeDeclarationCannotHaveSuperinterfaces(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        goto label61;

     label50:
        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z2 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isAbstract()>();

        if $z2 == 0 goto label61;

        if z26 != 0 goto label54;

        i45 = 0;

        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i46 = lengthof $r46;

        goto label53;

     label51:
        $r47 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        r126 = $r47[i45];

        $z4 = virtualinvoke r126.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isAbstract()>();

        if $z4 == 0 goto label52;

        $r48 = r126.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r48 == null goto label52;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r50 = virtualinvoke $r49.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void enumAbstractMethodMustBeImplemented(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration)>(r126);

     label52:
        i45 = i45 + 1;

     label53:
        if i45 < i46 goto label51;

        goto label61;

     label54:
        if r119 == null goto label61;

        i47 = 0;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i48 = lengthof $r39;

        goto label60;

     label55:
        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        r127 = $r40[i47];

        $z3 = virtualinvoke r127.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isAbstract()>();

        if $z3 == 0 goto label59;

        $r41 = r127.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r41 == null goto label59;

        i49 = 0;

        i50 = lengthof r119;

        goto label58;

     label56:
        $r42 = r119[i49];

        if $r42 == null goto label57;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r44 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r45 = r119[i49];

        virtualinvoke $r44.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void enumConstantMustImplementAbstractMethod(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration,org.eclipse.jdt.internal.compiler.ast.FieldDeclaration)>(r127, $r45);

     label57:
        i49 = i49 + 1;

     label58:
        if i49 < i50 goto label56;

     label59:
        i47 = i47 + 1;

     label60:
        if i47 < i48 goto label55;

     label61:
        $r128 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        if $r128 != null goto label62;

        $i51 = 0;

        goto label63;

     label62:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.MethodDeclaration[] missingAbstractMethods>;

        $i51 = lengthof $r13;

     label63:
        i52 = $i51;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r14 != null goto label64;

        $i53 = 0;

        goto label65;

     label64:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $i53 = lengthof $r15;

     label65:
        $i6 = $i53 + i52;

        $i63 = (int) 65535;

        if $i6 <= $i63 goto label66;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r33 = virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void tooManyMethods(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label66:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r16 == null goto label69;

        i54 = 0;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i55 = lengthof $r28;

        goto label68;

     label67:
        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r31 = $r29[i54];

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r30);

        i54 = i54 + 1;

     label68:
        if i54 < i55 goto label67;

     label69:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r17 == null goto label70;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        if $r23 == null goto label74;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r24 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] PACKAGE_INFO_NAME>;

        if $r25 == $r24 goto label74;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>($r26);

        goto label74;

     label70:
        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isLocalType()>();

        if $z1 != 0 goto label74;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int modifiers>;

        i56 = $i7 & 7;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i8 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: int computeSeverity(int)>(-1610612250);

        $i65 = (int) -1;

        if $i8 == $i65 goto label74;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingType>;

        if $r20 == null goto label71;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingType>;

        i56 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int computeOuterMostVisibility(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,int)>($r22, i56);

     label71:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $i9 = $r21.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: int modifiers>;

        $i67 = (int) -8;

        $i10 = $i9 & $i67;

        $i13 = $i10 | i56;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceStart>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int sourceEnd>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocMissing(int,int,int,int)>($i12, $i11, $i8, $i13);

     label72:
        goto label74;

     label73:
        $r110 := @caughtexception;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;

     label74:
        return;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label01 to label72 with label73;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r3, $r7, $r18;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r9, $r10, $r15, $r16;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r13, $r14;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r12;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding $r17;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r8;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding $r4, $r11;
        char[] $r5;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 512;

        if $i1 != 0 goto label5;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: char[] name>;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[])>($r5);

        $z0 = $r6 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z0 == 0 goto label4;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r6 == $r7 goto label4;

        $z1 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z1 == 0 goto label4;

        r8 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r6;

        $z2 = r8 instanceof org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;

        if $z2 == 0 goto label1;

        $r16 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = (org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding) r8;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeHiding(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding)>(r0, $r17);

        goto label4;

     label1:
        $z3 = r8 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;

        if $z3 == 0 goto label2;

        $r11 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) r8;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $r14 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        if $r13 != $r14 goto label2;

        $r15 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void duplicateNestedType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        goto label4;

     label2:
        $z4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isDefinedInType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r8);

        if $z4 == 0 goto label3;

        $r10 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeCollidesWithEnclosingType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

        goto label4;

     label3:
        $z5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isDefinedInSameUnit(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r8);

        if $z5 == 0 goto label4;

        $r9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeHiding(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r8);

     label4:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void addLocalType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)>(r0);

     label5:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r18 == null goto label6;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r4 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) $r3;

        virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void record(org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)>($r4);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

     label6:
        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1, $r2, $r5;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding $r6;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        $r6 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) $r5;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: void record(org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding)>($r6);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void updateMaxFieldCount()>();

        return;
    }

    public void tagAsHavingErrors()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: boolean ignoreFurtherInvestigation> = 1;

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope r2;
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r3, $r39;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r18, $r19, $r36;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r9, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r28, $r29;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r31, $r33;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r27;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r37;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r23;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4, $r34, $r35;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r8, $r20, $r21;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r40;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r13, $r22, $r26, $r30, $r32, $r38;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r7, $r24, $r25;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r1, r2);

        if $z0 == 0 goto label23;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r3 == null goto label02;

        $r39 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r38);

     label02:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r4 == null goto label05;

        $r34 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r34;

        i1 = 0;

        goto label04;

     label03:
        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r37 = $r35[i1];

        $r36 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r36);

        i1 = i1 + 1;

     label04:
        if i1 < i0 goto label03;

     label05:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if $r5 == null goto label06;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r32);

     label06:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if $r6 == null goto label09;

        $r28 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        i2 = lengthof $r28;

        i3 = 0;

        goto label08;

     label07:
        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r31 = $r29[i3];

        $r30 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r30);

        i3 = i3 + 1;

     label08:
        if i3 < i2 goto label07;

     label09:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r7 == null goto label12;

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i4 = lengthof $r24;

        i5 = 0;

        goto label11;

     label10:
        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r27 = $r25[i5];

        $r26 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r26);

        i5 = i5 + 1;

     label11:
        if i5 < i4 goto label10;

     label12:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r8 == null goto label15;

        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i6 = lengthof $r20;

        i7 = 0;

        goto label14;

     label13:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r23 = $r21[i7];

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r22);

        i7 = i7 + 1;

     label14:
        if i7 < i6 goto label13;

     label15:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r9 == null goto label20;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i8 = lengthof $r15;

        i9 = 0;

        goto label19;

     label16:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r17 = $r16[i9];

        $z1 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z1 == 0 goto label17;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>(r0, $r19);

        goto label18;

     label17:
        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>(r0, $r18);

     label18:
        i9 = i9 + 1;

     label19:
        if i9 < i8 goto label16;

     label20:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r10 == null goto label23;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i10 = lengthof $r11;

        i11 = 0;

        goto label22;

     label21:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r14 = $r12[i11];

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r13);

        i11 = i11 + 1;

     label22:
        if i11 < i10 goto label21;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope)>(r1, r2);

     label24:
        goto label26;

     label25:
        $r40 := @caughtexception;

     label26:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label01 to label24 with label25;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r3, $r38;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r18, $r35;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r9, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r27, $r28;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r30, $r32;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r26;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r36;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r22;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4, $r33, $r34;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r8, $r19, $r20;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r39;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r13, $r21, $r25, $r29, $r31, $r37;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r7, $r23, $r24;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label22;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r3 == null goto label02;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r37 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r37);

     label02:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r4 == null goto label05;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r33;

        i1 = 0;

        goto label04;

     label03:
        $r34 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r36 = $r34[i1];

        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r35);

        i1 = i1 + 1;

     label04:
        if i1 < i0 goto label03;

     label05:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if $r5 == null goto label06;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r31 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r31);

     label06:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if $r6 == null goto label09;

        $r27 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        i2 = lengthof $r27;

        i3 = 0;

        goto label08;

     label07:
        $r28 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r30 = $r28[i3];

        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r29);

        i3 = i3 + 1;

     label08:
        if i3 < i2 goto label07;

     label09:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r7 == null goto label12;

        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i4 = lengthof $r23;

        i5 = 0;

        goto label11;

     label10:
        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r26 = $r24[i5];

        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r25);

        i5 = i5 + 1;

     label11:
        if i5 < i4 goto label10;

     label12:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r8 == null goto label15;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i6 = lengthof $r19;

        i7 = 0;

        goto label14;

     label13:
        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r22 = $r20[i7];

        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r21);

        i7 = i7 + 1;

     label14:
        if i7 < i6 goto label13;

     label15:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r9 == null goto label19;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i8 = lengthof $r15;

        i9 = 0;

        goto label18;

     label16:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r17 = $r16[i9];

        $z1 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z1 != 0 goto label17;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>(r0, $r18);

     label17:
        i9 = i9 + 1;

     label18:
        if i9 < i8 goto label16;

     label19:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r10 == null goto label22;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i10 = lengthof $r11;

        i11 = 0;

        goto label21;

     label20:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r14 = $r12[i11];

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r13);

        i11 = i11 + 1;

     label21:
        if i11 < i10 goto label20;

     label22:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

     label23:
        goto label25;

     label24:
        $r39 := @caughtexception;

     label25:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label01 to label23 with label24;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Javadoc $r3, $r39;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r18, $r19, $r36;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] $r9, $r15, $r16;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r17;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r6, $r28, $r29;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r31, $r33;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter $r27;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r37;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1, $r23;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r4, $r34, $r35;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] $r8, $r20, $r21;
        org.eclipse.jdt.internal.compiler.problem.AbortType $r40;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2, $r13, $r22, $r26, $r30, $r32, $r38;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        org.eclipse.jdt.internal.compiler.ast.TypeParameter[] $r7, $r24, $r25;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] $r10, $r11, $r12;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r14;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label23;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        if $r3 == null goto label02;

        $r39 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc>;

        $r38 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.ast.Javadoc: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r38);

     label02:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r4 == null goto label05;

        $r34 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r34;

        i1 = 0;

        goto label04;

     label03:
        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r37 = $r35[i1];

        $r36 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r36);

        i1 = i1 + 1;

     label04:
        if i1 < i0 goto label03;

     label05:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        if $r5 == null goto label06;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference superclass>;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r32);

     label06:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        if $r6 == null goto label09;

        $r28 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        i2 = lengthof $r28;

        i3 = 0;

        goto label08;

     label07:
        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces>;

        $r31 = $r29[i3];

        $r30 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r30);

        i3 = i3 + 1;

     label08:
        if i3 < i2 goto label07;

     label09:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        if $r7 == null goto label12;

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        i4 = lengthof $r24;

        i5 = 0;

        goto label11;

     label10:
        $r25 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters>;

        $r27 = $r25[i5];

        $r26 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.TypeParameter: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r26);

        i5 = i5 + 1;

     label11:
        if i5 < i4 goto label10;

     label12:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        if $r8 == null goto label15;

        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        i6 = lengthof $r20;

        i7 = 0;

        goto label14;

     label13:
        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] memberTypes>;

        $r23 = $r21[i7];

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r22);

        i7 = i7 + 1;

     label14:
        if i7 < i6 goto label13;

     label15:
        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        if $r9 == null goto label20;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        i8 = lengthof $r15;

        i9 = 0;

        goto label19;

     label16:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields>;

        $r17 = $r16[i9];

        $z1 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: boolean isStatic()>();

        if $z1 == 0 goto label17;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope staticInitializerScope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>(r0, $r19);

        goto label18;

     label17:
        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope initializerScope>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.MethodScope)>(r0, $r18);

     label18:
        i9 = i9 + 1;

     label19:
        if i9 < i8 goto label16;

     label20:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        if $r10 == null goto label23;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        i10 = lengthof $r11;

        i11 = 0;

        goto label22;

     label21:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods>;

        $r14 = $r12[i11];

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, $r13);

        i11 = i11 + 1;

     label22:
        if i11 < i10 goto label21;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

     label24:
        goto label26;

     label25:
        $r40 := @caughtexception;

     label26:
        return;

        catch org.eclipse.jdt.internal.compiler.problem.AbortType from label01 to label24 with label25;
    }

    void updateMaxFieldCount()
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r2, $r3;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ClassScope outerMostClassScope()>();

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceType()>();

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $i0 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        if $i1 <= $i0 goto label2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount> = $i3;

        goto label3;

     label2:
        $i2 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount>;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int maxFieldCount> = $i2;

     label3:
        return;
    }

    public boolean isSecondary()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int bits>;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int ANNOTATION_TYPE_DECL> = 4;

        <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int ENUM_DECL> = 3;

        <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int INTERFACE_DECL> = 2;

        <org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: int CLASS_DECL> = 1;

        return;
    }
}
