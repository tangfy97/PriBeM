public final class org.apache.lucene.search.FieldComparator$StringValComparator extends org.apache.lucene.search.FieldComparator
{
    private java.lang.String[] values;
    private java.lang.String[] currentReaderValues;
    private final java.lang.String field;
    private java.lang.String bottom;

    void <init>(int, java.lang.String)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.search.FieldComparator: void <init>()>();

        $r1 = newarray (java.lang.String)[i0];

        r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values> = $r1;

        r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String field> = r2;

        return;
    }

    public int compare(int, int)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        java.lang.String[] $r1, $r3;
        int i0, i1, $i2, $i4;
        java.lang.String r2, r4;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values>;

        r2 = $r1[i0];

        $r3 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values>;

        r4 = $r3[i1];

        if r2 != null goto label2;

        if r4 != null goto label1;

        return 0;

     label1:
        $i4 = (int) -1;

        return $i4;

     label2:
        if r4 != null goto label3;

        return 1;

     label3:
        $i2 = virtualinvoke r2.<java.lang.String: int compareTo(java.lang.String)>(r4);

        return $i2;
    }

    public int compareBottom(int)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        java.lang.String[] $r1;
        int i0, $i1, $i3;
        java.lang.String r2, $r3, $r4;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] currentReaderValues>;

        r2 = $r1[i0];

        $r3 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String bottom>;

        if $r3 != null goto label2;

        if r2 != null goto label1;

        return 0;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        if r2 != null goto label3;

        return 1;

     label3:
        $r4 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String bottom>;

        $i1 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>(r2);

        return $i1;
    }

    public void copy(int, int)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int i0, i1;
        java.lang.String[] $r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values>;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] currentReaderValues>;

        $r2 = $r1[i1];

        $r3[i0] = $r2;

        return;
    }

    public void setNextReader(org.apache.lucene.index.IndexReader, int) throws java.io.IOException
    {
        org.apache.lucene.search.FieldCache $r3;
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int i0;
        java.lang.String[] $r4;
        java.lang.String $r2;
        org.apache.lucene.index.IndexReader r1;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        i0 := @parameter1: int;

        $r3 = <org.apache.lucene.search.FieldCache: org.apache.lucene.search.FieldCache DEFAULT>;

        $r2 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String field>;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.search.FieldCache: java.lang.String[] getStrings(org.apache.lucene.index.IndexReader,java.lang.String)>(r1, $r2);

        r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] currentReaderValues> = $r4;

        return;
    }

    public void setBottom(int)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values>;

        $r2 = $r1[i0];

        r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String bottom> = $r2;

        return;
    }

    public java.lang.String value(int)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int compareValues(java.lang.String, java.lang.String)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r2;
        int $i0, $i2;
        java.lang.String r0, r1;

        r2 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 0;

     label1:
        $i2 = (int) -1;

        return $i2;

     label2:
        if r1 != null goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>(r1);

        return $i0;
    }

    public volatile int compareValues(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.search.FieldComparator$StringValComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$StringValComparator: int compareValues(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }

    public volatile java.lang.Object value(int)
    {
        int i0;
        java.lang.String $r1;
        org.apache.lucene.search.FieldComparator$StringValComparator r0;

        r0 := @this: org.apache.lucene.search.FieldComparator$StringValComparator;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.FieldComparator$StringValComparator: java.lang.String value(int)>(i0);

        return $r1;
    }
}
