public final class org.apache.xmlbeans.QNameCache extends java.lang.Object
{
    private static final float DEFAULT_LOAD;
    private final float loadFactor;
    private int numEntries;
    private int threshold;
    private int hashmask;
    private javax.xml.namespace.QName[] table;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$QNameCache;

    public void <init>(int, float)
    {
        java.lang.AssertionError $r4, $r5;
        javax.xml.namespace.QName[] $r1;
        byte $b3, $b4;
        int i0, $i1, $i2, i5, $i6, $i7;
        boolean $z0, $z1;
        float f0, $f1, $f2;
        org.apache.xmlbeans.QNameCache r0;

        r0 := @this: org.apache.xmlbeans.QNameCache;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.QNameCache: int numEntries> = 0;

        $z0 = <org.apache.xmlbeans.QNameCache: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.QNameCache: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $b3 = f0 cmpl 0.0F;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label2;

        $b4 = f0 cmpg 1.0F;

        $i7 = (int) $b4;

        if $i7 < 0 goto label3;

     label2:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        i5 = 16;

     label4:
        if i5 >= i0 goto label5;

        i5 = i5 << 1;

        goto label4;

     label5:
        r0.<org.apache.xmlbeans.QNameCache: float loadFactor> = f0;

        $i1 = i5 - 1;

        r0.<org.apache.xmlbeans.QNameCache: int hashmask> = $i1;

        $f1 = (float) i5;

        $f2 = $f1 * f0;

        $i2 = (int) $f2;

        r0.<org.apache.xmlbeans.QNameCache: int threshold> = $i2;

        $r1 = newarray (javax.xml.namespace.QName)[i5];

        r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table> = $r1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.xmlbeans.QNameCache r0;

        r0 := @this: org.apache.xmlbeans.QNameCache;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xmlbeans.QNameCache: void <init>(int,float)>(i0, 0.7F);

        return;
    }

    public javax.xml.namespace.QName getName(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.QNameCache r0;

        r0 := @this: org.apache.xmlbeans.QNameCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName getName(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "");

        return $r3;
    }

    public javax.xml.namespace.QName getName(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r4;
        javax.xml.namespace.QName[] $r3, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r0, r5, r6;
        boolean $z0, $z1;
        javax.xml.namespace.QName $r2, $r8;
        org.apache.xmlbeans.QNameCache r1;

        r1 := @this: org.apache.xmlbeans.QNameCache;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $z0 = <org.apache.xmlbeans.QNameCache: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        if r5 != null goto label2;

        r5 = "";

     label2:
        if r6 != null goto label3;

        r6 = "";

     label3:
        $i0 = staticinvoke <org.apache.xmlbeans.QNameCache: int hash(java.lang.String,java.lang.String,java.lang.String)>(r5, r0, r6);

        $i1 = r1.<org.apache.xmlbeans.QNameCache: int hashmask>;

        i8 = $i0 & $i1;

     label4:
        $r7 = r1.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table>;

        $r8 = $r7[i8];

        if $r8 != null goto label6;

        $i4 = r1.<org.apache.xmlbeans.QNameCache: int numEntries>;

        $i5 = $i4 + 1;

        r1.<org.apache.xmlbeans.QNameCache: int numEntries> = $i5;

        $i7 = r1.<org.apache.xmlbeans.QNameCache: int numEntries>;

        $i6 = r1.<org.apache.xmlbeans.QNameCache: int threshold>;

        if $i7 < $i6 goto label5;

        specialinvoke r1.<org.apache.xmlbeans.QNameCache: void rehash()>();

     label5:
        $r3 = r1.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table>;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r0, r6);

        $r3[i8] = $r2;

        return $r2;

     label6:
        $z1 = staticinvoke <org.apache.xmlbeans.QNameCache: boolean equals(javax.xml.namespace.QName,java.lang.String,java.lang.String,java.lang.String)>($r8, r5, r0, r6);

        if $z1 == 0 goto label7;

        return $r8;

     label7:
        $i3 = i8 - 1;

        $i2 = r1.<org.apache.xmlbeans.QNameCache: int hashmask>;

        i8 = $i3 & $i2;

        goto label4;
    }

    private void rehash()
    {
        javax.xml.namespace.QName[] $r1, r2, $r3, $r4;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.String $r6, $r7, $r8;
        float $f0, $f1, $f2;
        javax.xml.namespace.QName r5, $r9;
        org.apache.xmlbeans.QNameCache r0;

        r0 := @this: org.apache.xmlbeans.QNameCache;

        $r1 = r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table>;

        $i0 = lengthof $r1;

        i1 = $i0 * 2;

        r2 = newarray (javax.xml.namespace.QName)[i1];

        i2 = i1 - 1;

        i7 = 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table>;

        $i3 = lengthof $r3;

        if i7 >= $i3 goto label5;

        $r4 = r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table>;

        r5 = $r4[i7];

        if r5 == null goto label4;

        $r6 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r7 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r8 = virtualinvoke r5.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $i5 = staticinvoke <org.apache.xmlbeans.QNameCache: int hash(java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8);

        i8 = $i5 & i2;

     label2:
        $r9 = r2[i8];

        if $r9 == null goto label3;

        $i6 = i8 - 1;

        i8 = $i6 & i2;

        goto label2;

     label3:
        r2[i8] = r5;

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        r0.<org.apache.xmlbeans.QNameCache: javax.xml.namespace.QName[] table> = r2;

        r0.<org.apache.xmlbeans.QNameCache: int hashmask> = i2;

        $f1 = (float) i1;

        $f0 = r0.<org.apache.xmlbeans.QNameCache: float loadFactor>;

        $f2 = $f1 * $f0;

        $i4 = (int) $f2;

        r0.<org.apache.xmlbeans.QNameCache: int threshold> = $i4;

        return;
    }

    private static int hash(java.lang.String, java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.String r0, r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        $i1 = $i0 << 10;

        i5 = 0 + $i1;

        $i2 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        $i3 = $i2 << 5;

        i6 = i5 + $i3;

        $i4 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        i7 = i6 + $i4;

        return i7;
    }

    private static boolean equals(javax.xml.namespace.QName, java.lang.String, java.lang.String, java.lang.String)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r1, r2, $r3, r4, $r5, r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.QNameCache: float DEFAULT_LOAD> = 0.7F;

        $r0 = <org.apache.xmlbeans.QNameCache: java.lang.Class class$org$apache$xmlbeans$QNameCache>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.QNameCache: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.QNameCache");

        <org.apache.xmlbeans.QNameCache: java.lang.Class class$org$apache$xmlbeans$QNameCache> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.QNameCache: java.lang.Class class$org$apache$xmlbeans$QNameCache>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.QNameCache: boolean $assertionsDisabled> = $z1;

        return;
    }
}
