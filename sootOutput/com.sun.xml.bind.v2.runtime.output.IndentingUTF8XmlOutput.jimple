public final class com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput extends com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput
{
    private final com.sun.xml.bind.v2.runtime.output.Encoded indent8;
    private final int unitLen;
    private int depth;
    private boolean seenText;

    public void <init>(java.io.OutputStream, java.lang.String, com.sun.xml.bind.v2.runtime.output.Encoded[], com.sun.xml.bind.marshaller.CharacterEscapeHandler)
    {
        byte[] $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r4;
        com.sun.xml.bind.v2.runtime.output.Encoded $r5, $r6, $r7, $r8;
        java.io.OutputStream r1;
        com.sun.xml.bind.marshaller.CharacterEscapeHandler r3;
        com.sun.xml.bind.v2.runtime.output.Encoded[] r2;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        r1 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: com.sun.xml.bind.v2.runtime.output.Encoded[];

        r3 := @parameter3: com.sun.xml.bind.marshaller.CharacterEscapeHandler;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void <init>(java.io.OutputStream,com.sun.xml.bind.v2.runtime.output.Encoded[],com.sun.xml.bind.marshaller.CharacterEscapeHandler)>(r1, r2, r3);

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth> = 0;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText> = 0;

        if r4 == null goto label3;

        $r5 = new com.sun.xml.bind.v2.runtime.output.Encoded;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.output.Encoded: void <init>(java.lang.String)>(r4);

        $r6 = new com.sun.xml.bind.v2.runtime.output.Encoded;

        specialinvoke $r6.<com.sun.xml.bind.v2.runtime.output.Encoded: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8> = $r6;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8>;

        $i0 = $r5.<com.sun.xml.bind.v2.runtime.output.Encoded: int len>;

        $i1 = $i0 * 8;

        virtualinvoke $r7.<com.sun.xml.bind.v2.runtime.output.Encoded: void ensureSize(int)>($i1);

        $i2 = $r5.<com.sun.xml.bind.v2.runtime.output.Encoded: int len>;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int unitLen> = $i2;

        i6 = 0;

     label1:
        if i6 >= 8 goto label2;

        $r10 = $r5.<com.sun.xml.bind.v2.runtime.output.Encoded: byte[] buf>;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8>;

        $r9 = $r8.<com.sun.xml.bind.v2.runtime.output.Encoded: byte[] buf>;

        $i3 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int unitLen>;

        $i5 = $i3 * i6;

        $i4 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int unitLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, $i5, $i4);

        i6 = i6 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8> = null;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int unitLen> = 0;

     label4:
        return;
    }

    public void beginStartTag(int, java.lang.String) throws java.io.IOException
    {
        int i0;
        java.lang.String r1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void indentStartTag()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void beginStartTag(int,java.lang.String)>(i0, r1);

        return;
    }

    public void beginStartTag(com.sun.xml.bind.v2.runtime.Name) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.Name r1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void indentStartTag()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void beginStartTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        return;
    }

    private void indentStartTag() throws java.io.IOException
    {
        int $i0, $i1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void closeStartTag()>();

        $z0 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void printIndent()>();

     label1:
        $i0 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth>;

        $i1 = $i0 + 1;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth> = $i1;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText> = 0;

        return;
    }

    public void endTag(com.sun.xml.bind.v2.runtime.Name) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.Name r1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void indentEndTag()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void endTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        return;
    }

    public void endTag(int, java.lang.String) throws java.io.IOException
    {
        int i0;
        java.lang.String r1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void indentEndTag()>();

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void endTag(int,java.lang.String)>(i0, r1);

        return;
    }

    private void indentEndTag() throws java.io.IOException
    {
        int $i0, $i1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth>;

        $i1 = $i0 - 1;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth> = $i1;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean closeStartTagPending>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void printIndent()>();

     label1:
        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText> = 0;

        return;
    }

    private void printIndent() throws java.io.IOException
    {
        byte[] $r2;
        int $i0, $i1, $i2, i3, i4, $i6;
        com.sun.xml.bind.v2.runtime.output.Encoded $r1, $r3;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void write(int)>(10);

        $i0 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int depth>;

        i3 = $i0 % 8;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8>;

        $r2 = $r1.<com.sun.xml.bind.v2.runtime.output.Encoded: byte[] buf>;

        $i1 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: int unitLen>;

        $i2 = i3 * $i1;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void write(byte[],int,int)>($r2, 0, $i2);

        i4 = i3 >> 3;

     label1:
        if i4 <= 0 goto label2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: com.sun.xml.bind.v2.runtime.output.Encoded indent8>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.Encoded: void write(com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput)>(r0);

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        return;
    }

    public void text(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String r1;
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText> = 1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void text(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public void text(com.sun.xml.bind.v2.runtime.output.Pcdata, boolean) throws java.io.IOException
    {
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;
        com.sun.xml.bind.v2.runtime.output.Pcdata r1;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.output.Pcdata;

        z0 := @parameter1: boolean;

        r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: boolean seenText> = 1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void text(com.sun.xml.bind.v2.runtime.output.Pcdata,boolean)>(r1, z0);

        return;
    }

    public void endDocument(boolean) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput r0;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.IndentingUTF8XmlOutput: void write(int)>(10);

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.UTF8XmlOutput: void endDocument(boolean)>(z0);

        return;
    }
}
