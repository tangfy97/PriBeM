public class org.apache.batik.ext.awt.image.rendered.ComponentTransferRed extends org.apache.batik.ext.awt.image.rendered.AbstractRed
{
    java.awt.image.LookupOp operation;

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed, org.apache.batik.ext.awt.image.TransferFunction[], java.awt.RenderingHints)
    {
        java.awt.Rectangle $r2;
        byte[] $r9, $r11, $r13, $r15;
        java.awt.RenderingHints r18;
        java.awt.image.ByteLookupTable $r17;
        java.awt.image.SampleModel $r5;
        org.apache.batik.ext.awt.image.TransferFunction[] r7;
        org.apache.batik.ext.awt.image.rendered.ComponentTransferRed r0;
        org.apache.batik.ext.awt.image.TransferFunction $r8, $r10, $r12, $r14;
        byte[][] $r6;
        org.apache.batik.ext.awt.image.rendered.CachableRed r1;
        java.awt.image.ColorModel $r3, $r4;
        org.apache.batik.ext.awt.image.rendered.ComponentTransferRed$1 $r16;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.ComponentTransferRed;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        r7 := @parameter1: org.apache.batik.ext.awt.image.TransferFunction[];

        r18 := @parameter2: java.awt.RenderingHints;

        $r2 = interfaceinvoke r1.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $r3 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r4 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceColorModel(java.awt.image.ColorModel,boolean)>($r3, 0);

        $r5 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,java.util.Map)>(r1, $r2, $r4, $r5, null);

        $r6 = newarray (byte[])[4];

        $r8 = r7[1];

        $r9 = interfaceinvoke $r8.<org.apache.batik.ext.awt.image.TransferFunction: byte[] getLookupTable()>();

        $r6[0] = $r9;

        $r10 = r7[2];

        $r11 = interfaceinvoke $r10.<org.apache.batik.ext.awt.image.TransferFunction: byte[] getLookupTable()>();

        $r6[1] = $r11;

        $r12 = r7[3];

        $r13 = interfaceinvoke $r12.<org.apache.batik.ext.awt.image.TransferFunction: byte[] getLookupTable()>();

        $r6[2] = $r13;

        $r14 = r7[0];

        $r15 = interfaceinvoke $r14.<org.apache.batik.ext.awt.image.TransferFunction: byte[] getLookupTable()>();

        $r6[3] = $r15;

        $r16 = new org.apache.batik.ext.awt.image.rendered.ComponentTransferRed$1;

        $r17 = new java.awt.image.ByteLookupTable;

        specialinvoke $r17.<java.awt.image.ByteLookupTable: void <init>(int,byte[][])>(0, $r6);

        specialinvoke $r16.<org.apache.batik.ext.awt.image.rendered.ComponentTransferRed$1: void <init>(org.apache.batik.ext.awt.image.rendered.ComponentTransferRed,java.awt.image.LookupTable,java.awt.RenderingHints)>(r0, $r17, r18);

        r0.<org.apache.batik.ext.awt.image.rendered.ComponentTransferRed: java.awt.image.LookupOp operation> = $r16;

        return;
    }

    public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.ComponentTransferRed r0;
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3;
        java.awt.image.ColorModel $r5;
        java.lang.Object $r2;
        java.awt.image.WritableRaster $r4, $r6, r8;
        java.awt.image.LookupOp $r7;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.ComponentTransferRed;

        r8 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        r3 = (org.apache.batik.ext.awt.image.rendered.CachableRed) $r2;

        $r4 = interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>(r8);

        $r5 = interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r4, $r5, 0);

        $r6 = virtualinvoke $r4.<java.awt.image.WritableRaster: java.awt.image.WritableRaster createWritableTranslatedChild(int,int)>(0, 0);

        $r7 = r0.<org.apache.batik.ext.awt.image.rendered.ComponentTransferRed: java.awt.image.LookupOp operation>;

        virtualinvoke $r7.<java.awt.image.LookupOp: java.awt.image.WritableRaster filter(java.awt.image.Raster,java.awt.image.WritableRaster)>($r6, $r6);

        return $r4;
    }
}
