public class org.apache.commons.lang.text.ExtendedMessageFormat extends java.text.MessageFormat
{
    private static final long serialVersionUID;
    private static final java.lang.String DUMMY_PATTERN;
    private static final java.lang.String ESCAPED_QUOTE;
    private static final char START_FMT;
    private static final char END_FE;
    private static final char START_FE;
    private static final char QUOTE;
    private java.lang.String toPattern;
    private java.util.Map registry;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        java.util.Locale $r2;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.util.Locale)
    {
        java.lang.String r1;
        java.util.Locale r2;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale,java.util.Map)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.util.Map)
    {
        java.util.Locale $r2;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.util.Map r3;
        java.lang.String r1;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void <init>(java.lang.String,java.util.Locale,java.util.Map)>(r1, $r2, r3);

        return;
    }

    public void <init>(java.lang.String, java.util.Locale, java.util.Map)
    {
        java.util.Locale r1;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.util.Map r2;
        java.lang.String r3;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        r2 := @parameter2: java.util.Map;

        specialinvoke r0.<java.text.MessageFormat: void <init>(java.lang.String)>("");

        virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void setLocale(java.util.Locale)>(r1);

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry> = r2;

        virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void applyPattern(java.lang.String)>(r3);

        return;
    }

    public java.lang.String toPattern()
    {
        java.lang.String $r1;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        $r1 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern>;

        return $r1;
    }

    public final void applyPattern(java.lang.String)
    {
        java.text.Format $r23, r26, r29;
        java.util.Map $r1;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.text.Format[] $r11;
        java.text.ParsePosition $r14, $r21, $r33;
        java.util.ArrayList $r30, $r31;
        java.lang.StringBuffer $r15, $r18, $r19, $r24, $r32, $r34;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i11, i13, $i14, $i15, i16, $i17, $i18, $i19;
        java.lang.String r5, $r8, $r9, $r10, $r20, $r22, $r25, r27, $r28;
        java.util.Iterator $r12;
        char $c2, $c6, $c10, $c12;
        java.lang.IllegalArgumentException $r35;
        char[] $r7;
        java.lang.Object $r13;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        if $r1 != null goto label01;

        specialinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>(r5);

        $r25 = specialinvoke r0.<java.text.MessageFormat: java.lang.String toPattern()>();

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern> = $r25;

        return;

     label01:
        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $r32 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        specialinvoke $r32.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r33 = new java.text.ParsePosition;

        specialinvoke $r33.<java.text.ParsePosition: void <init>(int)>(0);

        $r7 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>();

        i13 = 0;

     label02:
        $i14 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $i15 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i14 >= $i15 goto label13;

        $i1 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $c2 = $r7[$i1];

        $i17 = (int) $c2;

        lookupswitch($i17)
        {
            case 39: goto label03;
            case 123: goto label04;
            default: goto label12;
        };

     label03:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.StringBuffer appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,boolean)>(r5, $r33, $r32, 1);

        goto label02;

     label04:
        i13 = i13 + 1;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r5, $r33);

        $i3 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $r14 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r33);

        $i4 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: int readArgumentIndex(java.lang.String,java.text.ParsePosition)>(r5, $r14);

        $r15 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r5, $r33);

        r26 = null;

        r27 = null;

        $i5 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $c6 = $r7[$i5];

        $i18 = (int) $c6;

        if $i18 != 44 goto label05;

        $r21 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r33);

        $r22 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition)>(r5, $r21);

        r27 = $r22;

        $r23 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.Format getFormat(java.lang.String)>($r22);

        r26 = $r23;

        if $r23 != null goto label05;

        $r24 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label05:
        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r26);

        if r26 != null goto label06;

        $r28 = null;

        goto label07;

     label06:
        $r28 = r27;

     label07:
        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        $i7 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        if $i7 != i13 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z2);

        $i8 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        if $i8 != i13 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z3);

        $i9 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $c10 = $r7[$i9];

        $i19 = (int) $c10;

        if $i19 == 125 goto label12;

        $r35 = new java.lang.IllegalArgumentException;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unreadable format element at position ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r35;

     label12:
        $i11 = virtualinvoke $r33.<java.text.ParsePosition: int getIndex()>();

        $c12 = $r7[$i11];

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c12);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r33);

        goto label02;

     label13:
        $r8 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<java.text.MessageFormat: void applyPattern(java.lang.String)>($r8);

        $r9 = specialinvoke r0.<java.text.MessageFormat: java.lang.String toPattern()>();

        $r10 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String insertFormats(java.lang.String,java.util.ArrayList)>($r9, $r31);

        r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String toPattern> = $r10;

        $z0 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: boolean containsElements(java.util.Collection)>($r30);

        if $z0 == 0 goto label17;

        $r11 = virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.Format[] getFormats()>();

        i16 = 0;

        $r12 = virtualinvoke $r30.<java.util.ArrayList: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.text.Format) $r13;

        if r29 == null goto label15;

        $r11[i16] = r29;

     label15:
        i16 = i16 + 1;

        goto label14;

     label16:
        specialinvoke r0.<java.text.MessageFormat: void setFormats(java.text.Format[])>($r11);

     label17:
        return;
    }

    public void setFormat(int, java.text.Format)
    {
        java.lang.UnsupportedOperationException $r0;
        java.text.Format r2;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;
        int i0;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        i0 := @parameter0: int;

        r2 := @parameter1: java.text.Format;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setFormatByArgumentIndex(int, java.text.Format)
    {
        java.lang.UnsupportedOperationException $r0;
        java.text.Format r2;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;
        int i0;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        i0 := @parameter0: int;

        r2 := @parameter1: java.text.Format;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setFormats(java.text.Format[])
    {
        java.text.Format[] r2;
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r2 := @parameter0: java.text.Format[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setFormatsByArgumentIndex(java.text.Format[])
    {
        java.text.Format[] r2;
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r2 := @parameter0: java.text.Format[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private java.text.Format getFormat(java.lang.String)
    {
        java.text.Format $r6;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.util.Locale $r5;
        java.util.Map $r1, $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        org.apache.commons.lang.text.FormatFactory $r9;
        java.lang.String r2, $r7, $r8, r10, r11;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        if $r1 == null goto label2;

        r10 = r2;

        r11 = null;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(44);

        if $i0 <= 0 goto label1;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r10 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $i1 = $i0 + 1;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

     label1:
        $r3 = r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Map registry>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        $r9 = (org.apache.commons.lang.text.FormatFactory) $r4;

        if $r9 == null goto label2;

        $r5 = virtualinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.util.Locale getLocale()>();

        $r6 = interfaceinvoke $r9.<org.apache.commons.lang.text.FormatFactory: java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale)>(r10, r11, $r5);

        return $r6;

     label2:
        return null;
    }

    private int readArgumentIndex(java.lang.String, java.text.ParsePosition)
    {
        boolean $z0, z1, $z2, $z3;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;
        java.text.ParsePosition r0;
        java.lang.StringBuffer $r6, $r7, $r11, $r12, $r13, $r15, $r19, $r20, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i11, $i12, $i13, $i14;
        java.lang.String r2, $r8, $r14, $r16, $r17;
        char $c5, $c9, c10;
        java.lang.NumberFormatException $r18;
        java.lang.IllegalArgumentException $r21, $r23;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0);

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        z1 = 0;

     label01:
        if z1 != 0 goto label11;

        $i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label11;

        $i4 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i4);

        c10 = $c5;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c5);

        if $z0 == 0 goto label02;

        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0);

        $i8 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $c9 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i8);

        c10 = $c9;

        $i11 = (int) $c9;

        if $i11 == 44 goto label02;

        $i12 = (int) $c9;

        if $i12 == 125 goto label02;

        z1 = 1;

        goto label10;

     label02:
        $i13 = (int) c10;

        if $i13 == 44 goto label03;

        $i14 = (int) c10;

        if $i14 != 125 goto label07;

     label03:
        $i6 = virtualinvoke $r19.<java.lang.StringBuffer: int length()>();

        if $i6 <= 0 goto label07;

     label04:
        $r17 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

     label05:
        return $i7;

     label06:
        $r18 := @caughtexception;

     label07:
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c10);

        if $z2 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z1 = $z3;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c10);

     label10:
        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r0);

        goto label01;

     label11:
        if z1 == 0 goto label12;

        $r21 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid format argument index at position ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $r14 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r21;

     label12:
        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated format element at position ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r23;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    private java.lang.String parseFormatDescription(java.lang.String, java.text.ParsePosition)
    {
        java.text.ParsePosition r0;
        java.lang.StringBuffer $r5, $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i6, i7, $i8, $i10;
        java.lang.String r2, $r7, $r8;
        org.apache.commons.lang.text.ExtendedMessageFormat r1;
        char $c5;
        java.lang.IllegalArgumentException $r10;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.text.ParsePosition;

        $i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0);

        $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        i7 = 1;

     label1:
        $i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label6;

        $i4 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i4);

        $i8 = (int) $c5;

        lookupswitch($i8)
        {
            case 39: goto label4;
            case 123: goto label2;
            case 125: goto label3;
            default: goto label5;
        };

     label2:
        i7 = i7 + 1;

        goto label5;

     label3:
        $i10 = (int) -1;

        i7 = i7 + $i10;

        if i7 != 0 goto label5;

        $i6 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i6);

        return $r8;

     label4:
        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: void getQuotedString(java.lang.String,java.text.ParsePosition,boolean)>(r2, r0, 0);

     label5:
        specialinvoke r1.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r0);

        goto label1;

     label6:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated format element at position ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r10;
    }

    private java.lang.String insertFormats(java.lang.String, java.util.ArrayList)
    {
        java.text.ParsePosition $r7, $r12;
        java.util.ArrayList r1;
        java.lang.StringBuffer $r6, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i6, i7, i8, $i10, $i11, $i13;
        java.lang.String r3, $r5, r9;
        boolean $z0;
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        char $c5;
        java.lang.Object $r8;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: boolean containsElements(java.util.Collection)>(r1);

        if $z0 != 0 goto label1;

        return r3;

     label1:
        $r11 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = $i0 * 2;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(int)>($i1);

        $r12 = new java.text.ParsePosition;

        specialinvoke $r12.<java.text.ParsePosition: void <init>(int)>(0);

        $i10 = (int) -1;

        i7 = $i10;

        i8 = 0;

     label2:
        $i2 = virtualinvoke $r12.<java.text.ParsePosition: int getIndex()>();

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label9;

        $i4 = virtualinvoke $r12.<java.text.ParsePosition: int getIndex()>();

        $c5 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i4);

        $i11 = (int) $c5;

        lookupswitch($i11)
        {
            case 39: goto label3;
            case 123: goto label4;
            case 125: goto label6;
            default: goto label7;
        };

     label3:
        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.StringBuffer appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,boolean)>(r3, $r12, $r11, 0);

        goto label8;

     label4:
        i8 = i8 + 1;

        if i8 != 1 goto label8;

        i7 = i7 + 1;

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r7 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r12);

        $i6 = specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: int readArgumentIndex(java.lang.String,java.text.ParsePosition)>(r3, $r7);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r9 = (java.lang.String) $r8;

        if r9 == null goto label5;

        $r10 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

     label5:
        goto label8;

     label6:
        $i13 = (int) -1;

        i8 = i8 + $i13;

     label7:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>($r12);

     label8:
        goto label2;

     label9:
        $r5 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private void seekNonWs(java.lang.String, java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r4;
        java.text.ParsePosition r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r1;
        java.lang.String r0;
        org.apache.commons.lang.text.StrMatcher $r2;

        r4 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.text.ParsePosition;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

     label1:
        $r2 = staticinvoke <org.apache.commons.lang.text.StrMatcher: org.apache.commons.lang.text.StrMatcher splitMatcher()>();

        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        $i1 = virtualinvoke $r2.<org.apache.commons.lang.text.StrMatcher: int isMatch(char[],int)>($r1, $i0);

        $i2 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        $i3 = $i2 + $i1;

        virtualinvoke r3.<java.text.ParsePosition: void setIndex(int)>($i3);

        if $i1 <= 0 goto label2;

        $i4 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 < $i5 goto label1;

     label2:
        return;
    }

    private java.text.ParsePosition next(java.text.ParsePosition)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r1;
        java.text.ParsePosition r0;
        int $i0, $i1;

        r1 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r0 := @parameter0: java.text.ParsePosition;

        $i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $i1 = $i0 + 1;

        virtualinvoke r0.<java.text.ParsePosition: void setIndex(int)>($i1);

        return r0;
    }

    private java.lang.StringBuffer appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuffer, boolean)
    {
        boolean z0, $z1;
        org.apache.commons.lang.text.ExtendedMessageFormat r8;
        java.text.ParsePosition r0;
        java.lang.StringBuffer $r5, $r6, r9, $r11, $r13, $r14, $r15;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, $i12, $i13, $i14;
        java.lang.String r1, $r7, $r10, $r12;
        char $c2, $c9;
        java.lang.IllegalArgumentException $r16;
        char[] $r2;

        r8 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.text.ParsePosition;

        r9 := @parameter2: java.lang.StringBuffer;

        z0 := @parameter3: boolean;

        $i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        if z0 == 0 goto label03;

        $c9 = $r2[$i0];

        $i13 = (int) $c9;

        if $i13 != 39 goto label03;

        if r9 != null goto label01;

        $r13 = null;

        goto label02;

     label01:
        $r13 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label02:
        return $r13;

     label03:
        i10 = $i0;

        i11 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

     label04:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        if i11 >= $i12 goto label11;

        if z0 == 0 goto label05;

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i11);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("\'\'");

        if $z1 == 0 goto label05;

        $i5 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $i6 = $i5 - i10;

        $r11 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, i10, $i6);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r12 = "\'\'";

        $i7 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i8 = i11 + $i7;

        virtualinvoke r0.<java.text.ParsePosition: void setIndex(int)>($i8);

        i10 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        goto label10;

     label05:
        $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $c2 = $r2[$i1];

        $i14 = (int) $c2;

        lookupswitch($i14)
        {
            case 39: goto label06;
            default: goto label09;
        };

     label06:
        specialinvoke r8.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r0);

        if r9 != null goto label07;

        $r14 = null;

        goto label08;

     label07:
        $i3 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>();

        $i4 = $i3 - i10;

        $r14 = virtualinvoke r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, i10, $i4);

     label08:
        return $r14;

     label09:
        specialinvoke r8.<org.apache.commons.lang.text.ExtendedMessageFormat: java.text.ParsePosition next(java.text.ParsePosition)>(r0);

     label10:
        i11 = i11 + 1;

        goto label04;

     label11:
        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated quoted string at position ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r16;
    }

    private void getQuotedString(java.lang.String, java.text.ParsePosition, boolean)
    {
        org.apache.commons.lang.text.ExtendedMessageFormat r0;
        java.text.ParsePosition r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.StringBuffer appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,boolean)>(r1, r2, null, z0);

        return;
    }

    private boolean containsElements(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        org.apache.commons.lang.text.ExtendedMessageFormat r3;
        int $i0;
        java.lang.Object $r2;
        boolean $z0;

        r3 := @this: org.apache.commons.lang.text.ExtendedMessageFormat;

        r0 := @parameter0: java.util.Collection;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r2 == null goto label3;

        return 1;

     label4:
        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang.text.ExtendedMessageFormat: char QUOTE> = 39;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char START_FE> = 123;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char END_FE> = 125;

        <org.apache.commons.lang.text.ExtendedMessageFormat: char START_FMT> = 44;

        <org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String ESCAPED_QUOTE> = "\'\'";

        <org.apache.commons.lang.text.ExtendedMessageFormat: java.lang.String DUMMY_PATTERN> = "";

        <org.apache.commons.lang.text.ExtendedMessageFormat: long serialVersionUID> = -2362048321261811743L;

        return;
    }
}
