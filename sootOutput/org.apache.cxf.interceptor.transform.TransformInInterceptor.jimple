public class org.apache.cxf.interceptor.transform.TransformInInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private java.util.List inDropElements;
    private java.util.Map inElementsMap;
    private java.util.Map inAppendMap;
    private boolean blockOriginalReader;
    private java.lang.String contextPropertyName;

    public void <init>()
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: void <init>(java.lang.String)>("post-stream");

        $r1 = class "Lorg/apache/cxf/interceptor/StaxInInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: void addBefore(java.lang.String)>($r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: boolean blockOriginalReader> = 1;

        return;
    }

    public void <init>(java.lang.String, java.util.List)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.util.List r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: boolean blockOriginalReader> = 1;

        if r2 == null goto label1;

        virtualinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: void addAfter(java.util.Collection)>(r2);

     label1:
        return;
    }

    public void <init>(java.lang.String, java.util.List, java.util.List)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.util.List r2, r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: void <init>(java.lang.String,java.util.List)>(r1, r2);

        if r3 == null goto label1;

        virtualinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: void addBefore(java.util.Collection)>(r3);

     label1:
        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r2;
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        javax.xml.stream.XMLStreamReader $r5, $r7;
        java.lang.Object $r3, $r4;
        java.lang.String $r1, $r6;
        boolean $z0;
        java.io.InputStream $r8;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.lang.String contextPropertyName>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.lang.String contextPropertyName>;

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)>(r2, $r6, 0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        $r7 = (javax.xml.stream.XMLStreamReader) $r3;

        $r4 = interfaceinvoke r2.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        $r8 = (java.io.InputStream) $r4;

        $r5 = virtualinvoke r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)>($r7, $r8);

        if $r5 == null goto label2;

        interfaceinvoke r2.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamReader;", $r5);

     label2:
        return;
    }

    protected javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader, java.io.InputStream)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r2;
        java.util.List $r5;
        javax.xml.stream.XMLStreamReader r0, $r6;
        java.util.Map $r3, $r4;
        java.io.InputStream r1;
        boolean $z0;

        r2 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.io.InputStream;

        $r5 = r2.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.List inDropElements>;

        $r4 = r2.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.Map inElementsMap>;

        $r3 = r2.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.Map inAppendMap>;

        $z0 = r2.<org.apache.cxf.interceptor.transform.TransformInInterceptor: boolean blockOriginalReader>;

        $r6 = staticinvoke <org.apache.cxf.staxutils.transform.TransformUtils: javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,boolean)>(r0, r1, $r5, $r4, $r3, $z0);

        return $r6;
    }

    public void setInAppendElements(java.util.Map)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.Map inAppendMap> = r1;

        return;
    }

    public void setInDropElements(java.util.List)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.List inDropElements> = r1;

        return;
    }

    public void setInTransformElements(java.util.Map)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.util.Map inElementsMap> = r1;

        return;
    }

    public void setBlockOriginalReader(boolean)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        boolean z0;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: boolean blockOriginalReader> = z0;

        return;
    }

    public void setContextPropertyName(java.lang.String)
    {
        org.apache.cxf.interceptor.transform.TransformInInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.transform.TransformInInterceptor;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.interceptor.transform.TransformInInterceptor: java.lang.String contextPropertyName> = r1;

        return;
    }
}
