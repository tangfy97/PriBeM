class org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine extends java.lang.Object implements java.lang.Comparable
{
    final org.waveprotocol.wave.client.editor.content.paragraph.Line line;
    final int docId;
    final int minIndent;
    final int location;

    private void <init>(org.waveprotocol.wave.client.editor.content.paragraph.Line, int, int, int)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine r0;
        int i0, i1, i2;
        org.waveprotocol.wave.client.editor.content.paragraph.Line r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.Line;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: org.waveprotocol.wave.client.editor.content.paragraph.Line line> = r1;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int docId> = i0;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int minIndent> = i1;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int location> = i2;

        return;
    }

    public int compareTo(org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine;

        $i1 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int docId>;

        $i0 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int docId>;

        if $i1 == $i0 goto label1;

        $i11 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int docId>;

        $i10 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int docId>;

        $i12 = $i11 - $i10;

        return $i12;

     label1:
        $i3 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int minIndent>;

        $i2 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int minIndent>;

        if $i3 == $i2 goto label2;

        $i8 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int minIndent>;

        $i7 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int minIndent>;

        $i9 = $i8 - $i7;

        return $i9;

     label2:
        $i5 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int location>;

        $i4 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int location>;

        $i6 = $i5 - $i4;

        return $i6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine) r1;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: int compareTo(org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine)>($r2);

        return $i0;
    }

    void <init>(org.waveprotocol.wave.client.editor.content.paragraph.Line, int, int, int, org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$1)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine r0;
        org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$1 r2;
        int i0, i1, i2;
        org.waveprotocol.wave.client.editor.content.paragraph.Line r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.Line;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.OrderedListRenumberer$ComparableLine: void <init>(org.waveprotocol.wave.client.editor.content.paragraph.Line,int,int,int)>(r1, i0, i1, i2);

        return;
    }
}
