public class com.mongodb.util.TestNGListener extends org.testng.TestListenerAdapter
{
    private int _count;

    public void <init>()
    {
        com.mongodb.util.TestNGListener r0;

        r0 := @this: com.mongodb.util.TestNGListener;

        specialinvoke r0.<org.testng.TestListenerAdapter: void <init>()>();

        r0.<com.mongodb.util.TestNGListener: int _count> = 0;

        return;
    }

    public void onConfigurationFailure(org.testng.ITestResult)
    {
        java.lang.Throwable $r2;
        org.testng.ITestResult r1;
        com.mongodb.util.TestNGListener r0;

        r0 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestResult;

        specialinvoke r0.<org.testng.TestListenerAdapter: void onConfigurationFailure(org.testng.ITestResult)>(r1);

        $r2 = interfaceinvoke r1.<org.testng.ITestResult: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<com.mongodb.util.TestNGListener: void _print(java.lang.Throwable)>($r2);

        return;
    }

    public void onTestFailure(org.testng.ITestResult)
    {
        org.testng.ITestResult r1;
        com.mongodb.util.TestNGListener r0;

        r0 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestResult;

        specialinvoke r0.<org.testng.TestListenerAdapter: void onTestFailure(org.testng.ITestResult)>(r1);

        specialinvoke r0.<com.mongodb.util.TestNGListener: void log(java.lang.String)>("F");

        return;
    }

    public void onTestSkipped(org.testng.ITestResult)
    {
        org.testng.ITestResult r1;
        com.mongodb.util.TestNGListener r0;

        r0 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestResult;

        specialinvoke r0.<org.testng.TestListenerAdapter: void onTestSkipped(org.testng.ITestResult)>(r1);

        specialinvoke r0.<com.mongodb.util.TestNGListener: void log(java.lang.String)>("S");

        return;
    }

    public void onTestSuccess(org.testng.ITestResult)
    {
        org.testng.ITestResult r1;
        com.mongodb.util.TestNGListener r0;

        r0 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestResult;

        specialinvoke r0.<org.testng.TestListenerAdapter: void onTestSuccess(org.testng.ITestResult)>(r1);

        specialinvoke r0.<com.mongodb.util.TestNGListener: void log(java.lang.String)>(".");

        return;
    }

    private void log(java.lang.String)
    {
        java.io.PrintStream $r1, $r3, $r4;
        com.mongodb.util.TestNGListener r2;
        int $i0, $i1, $i2;
        java.lang.String r0;

        r2 := @this: com.mongodb.util.TestNGListener;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(r0);

        $i0 = r2.<com.mongodb.util.TestNGListener: int _count>;

        $i1 = $i0 + 1;

        r2.<com.mongodb.util.TestNGListener: int _count> = $i1;

        $i2 = $i1 % 40;

        if $i2 != 0 goto label1;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("");

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void flush()>();

        return;
    }

    public void onFinish(org.testng.ITestContext)
    {
        java.io.PrintStream $r0, $r8, $r9;
        java.lang.Throwable $r10;
        org.testng.ITestContext r1;
        java.util.Iterator $r4;
        org.testng.IResultMap $r2;
        java.util.Set $r3;
        org.testng.ITestResult r7;
        com.mongodb.util.TestNGListener r5;
        java.lang.Object $r6;
        boolean $z0;

        r5 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestContext;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println()>();

        $r2 = interfaceinvoke r1.<org.testng.ITestContext: org.testng.IResultMap getFailedTests()>();

        $r3 = interfaceinvoke $r2.<org.testng.IResultMap: java.util.Set getAllResults()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.testng.ITestResult) $r6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.Object)>(r7);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Exception : ");

        $r10 = interfaceinvoke r7.<org.testng.ITestResult: java.lang.Throwable getThrowable()>();

        specialinvoke r5.<com.mongodb.util.TestNGListener: void _print(java.lang.Throwable)>($r10);

        goto label1;

     label2:
        specialinvoke r5.<com.mongodb.util.TestNGListener: void _recordResults(org.testng.ITestContext)>(r1);

        return;
    }

    private void _recordResults(org.testng.ITestContext)
    {
        java.util.Date $r5, $r6;
        java.lang.Long $r7, $r8, $r22;
        boolean $z0;
        org.testng.IClass $r15;
        org.testng.ITestContext r1;
        org.testng.IResultMap $r2;
        com.mongodb.Mongo $r9;
        java.util.Set $r3;
        java.lang.Exception $r23;
        com.mongodb.util.TestNGListener r25;
        com.mongodb.DB $r10;
        java.lang.StringBuilder $r14, $r17, $r18, $r20;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6;
        org.testng.ITestResult r13;
        java.lang.String $r16, $r19, $r21;
        java.io.PrintStream $r24;
        java.util.Iterator $r4;
        com.mongodb.BasicDBObject $r0;
        com.mongodb.DBCollection $r11;
        java.lang.Object $r12;

        r25 := @this: com.mongodb.util.TestNGListener;

        r1 := @parameter0: org.testng.ITestContext;

        $r0 = new com.mongodb.BasicDBObject;

        specialinvoke $r0.<com.mongodb.BasicDBObject: void <init>()>();

        $r2 = interfaceinvoke r1.<org.testng.ITestContext: org.testng.IResultMap getPassedTests()>();

        $r3 = interfaceinvoke $r2.<org.testng.IResultMap: java.util.Set getAllResults()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.testng.ITestResult) $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = interfaceinvoke r13.<org.testng.ITestResult: org.testng.IClass getTestClass()>();

        $r16 = interfaceinvoke $r15.<org.testng.IClass: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r19 = interfaceinvoke r13.<org.testng.ITestResult: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $l4 = interfaceinvoke r13.<org.testng.ITestResult: long getEndMillis()>();

        $l5 = interfaceinvoke r13.<org.testng.ITestResult: long getStartMillis()>();

        $l6 = $l4 - $l5;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        interfaceinvoke $r0.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r21, $r22);

        goto label1;

     label2:
        $r5 = interfaceinvoke r1.<org.testng.ITestContext: java.util.Date getEndDate()>();

        $l0 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        $r6 = interfaceinvoke r1.<org.testng.ITestContext: java.util.Date getStartDate()>();

        $l1 = virtualinvoke $r6.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r0.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("total", $r7);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r0.<com.mongodb.DBObject: java.lang.Object put(java.lang.String,java.lang.Object)>("time", $r8);

     label3:
        $r9 = new com.mongodb.Mongo;

        specialinvoke $r9.<com.mongodb.Mongo: void <init>()>();

        $r10 = virtualinvoke $r9.<com.mongodb.Mongo: com.mongodb.DB getDB(java.lang.String)>("results");

        $r11 = virtualinvoke $r10.<com.mongodb.DB: com.mongodb.DBCollection getCollection(java.lang.String)>("testng");

        virtualinvoke $r11.<com.mongodb.DBCollection: com.mongodb.WriteResult save(com.mongodb.DBObject)>($r0);

     label4:
        goto label6;

     label5:
        $r23 := @caughtexception;

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("\nUnable to save test results to the db.");

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void _print(java.lang.Throwable)
    {
        boolean $z0, $z1, $z2;
        com.mongodb.util.TestNGListener r12;
        java.lang.StackTraceElement[] $r8;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r17, $r19, $r20, $r21, $r24, $r26, $r27, $r29, $r31, $r32, $r33;
        java.lang.Throwable r0, $r9, $r13;
        int i0, $i1, $i2, i3, i4, i5;
        java.lang.StackTraceElement r14;
        java.lang.String $r4, $r7, $r15, $r16, $r22, $r23, $r28, $r34;
        java.io.PrintStream $r2, $r10, $r11, $r18, $r25, $r30;

        r12 := @this: com.mongodb.util.TestNGListener;

        r0 := @parameter0: java.lang.Throwable;

        i3 = 0;

        i4 = 0;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r4 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof $r8;

        i5 = 0;

     label2:
        if i5 >= i0 goto label7;

        r14 = $r8[i5];

        $r15 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("org.testng.");

        if $z0 == 0 goto label3;

        $i2 = i3;

        i3 = i3 + 1;

        if $i2 != 0 goto label6;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with others of org.testng.* omitted)");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r34);

        goto label6;

     label3:
        $r16 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>("java.lang.reflect.");

        if $z1 != 0 goto label4;

        $r23 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z2 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("sun.reflect.");

        if $z2 == 0 goto label5;

     label4:
        $i1 = i4;

        i4 = i4 + 1;

        if $i1 != 0 goto label6;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (with others of java.lang.reflect.* or sun.reflect.* omitted)");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        goto label6;

     label5:
        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label6:
        i5 = i5 + 1;

        goto label2;

     label7:
        $r9 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r9 == null goto label8;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Caused By : ");

        $r13 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        specialinvoke r12.<com.mongodb.util.TestNGListener: void _print(java.lang.Throwable)>($r13);

     label8:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println()>();

        return;
    }
}
