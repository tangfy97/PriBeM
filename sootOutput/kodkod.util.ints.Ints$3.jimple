final class kodkod.util.ints.Ints$3 extends kodkod.util.ints.AbstractIntVector
{
    private final int val$n;
    private final int val$elt;

    void <init>(int, int)
    {
        int i0, i1;
        kodkod.util.ints.Ints$3 r0;

        r0 := @this: kodkod.util.ints.Ints$3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<kodkod.util.ints.Ints$3: int val$n> = i0;

        r0.<kodkod.util.ints.Ints$3: int val$elt> = i1;

        specialinvoke r0.<kodkod.util.ints.AbstractIntVector: void <init>()>();

        return;
    }

    public int get(int)
    {
        java.lang.IndexOutOfBoundsException $r0;
        kodkod.util.ints.Ints$3 r1;
        int i0, $i1, $i2;

        r1 := @this: kodkod.util.ints.Ints$3;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r1.<kodkod.util.ints.Ints$3: int val$n>;

        if i0 < $i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        $i2 = r1.<kodkod.util.ints.Ints$3: int val$elt>;

        return $i2;
    }

    public int size()
    {
        int $i0;
        kodkod.util.ints.Ints$3 r0;

        r0 := @this: kodkod.util.ints.Ints$3;

        $i0 = r0.<kodkod.util.ints.Ints$3: int val$n>;

        return $i0;
    }

    public int[] toArray(int[])
    {
        kodkod.util.ints.Ints$3 r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: kodkod.util.ints.Ints$3;

        r1 := @parameter0: int[];

        $i1 = lengthof r1;

        $i0 = r0.<kodkod.util.ints.Ints$3: int val$n>;

        if $i1 >= $i0 goto label1;

        $i4 = r0.<kodkod.util.ints.Ints$3: int val$n>;

        r1 = newarray (int)[$i4];

     label1:
        i5 = 0;

        goto label3;

     label2:
        $i3 = r0.<kodkod.util.ints.Ints$3: int val$elt>;

        r1[i5] = $i3;

        i5 = i5 + 1;

     label3:
        $i2 = r0.<kodkod.util.ints.Ints$3: int val$n>;

        if i5 < $i2 goto label2;

        return r1;
    }
}
