public class org.apache.lucene.analysis.core.WhitespaceTokenizerFactory extends org.apache.lucene.analysis.util.TokenizerFactory
{

    public void <init>(java.util.Map)
    {
        org.apache.lucene.analysis.core.WhitespaceTokenizerFactory r0;
        java.lang.IllegalArgumentException $r2;
        java.util.Map r1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.core.WhitespaceTokenizerFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenizerFactory: void <init>(java.util.Map)>(r1);

        virtualinvoke r0.<org.apache.lucene.analysis.core.WhitespaceTokenizerFactory: void assureMatchVersion()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    public org.apache.lucene.analysis.core.WhitespaceTokenizer create(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.analysis.core.WhitespaceTokenizer $r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory r2;
        org.apache.lucene.analysis.core.WhitespaceTokenizerFactory r1;
        java.io.Reader r3;
        org.apache.lucene.util.Version $r4;

        r1 := @this: org.apache.lucene.analysis.core.WhitespaceTokenizerFactory;

        r2 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r3 := @parameter1: java.io.Reader;

        $r0 = new org.apache.lucene.analysis.core.WhitespaceTokenizer;

        $r4 = r1.<org.apache.lucene.analysis.core.WhitespaceTokenizerFactory: org.apache.lucene.util.Version luceneMatchVersion>;

        specialinvoke $r0.<org.apache.lucene.analysis.core.WhitespaceTokenizer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>($r4, r2, r3);

        return $r0;
    }

    public volatile org.apache.lucene.analysis.Tokenizer create(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.analysis.core.WhitespaceTokenizer $r3;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        org.apache.lucene.analysis.core.WhitespaceTokenizerFactory r0;
        java.io.Reader r2;

        r0 := @this: org.apache.lucene.analysis.core.WhitespaceTokenizerFactory;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.core.WhitespaceTokenizerFactory: org.apache.lucene.analysis.core.WhitespaceTokenizer create(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        return $r3;
    }
}
