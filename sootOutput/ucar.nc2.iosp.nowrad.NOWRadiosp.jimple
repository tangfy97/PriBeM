public class ucar.nc2.iosp.nowrad.NOWRadiosp extends ucar.nc2.iosp.AbstractIOServiceProvider
{
    static final int DEF_WBITS;
    static final int Z_DEFLATED;
    protected int fileUsed;
    protected int recStart;
    protected boolean debug;
    protected boolean debugSize;
    protected boolean debugSPIO;
    protected boolean showHeaderBytes;
    protected java.util.HashMap dimHash;
    protected boolean fill;
    protected ucar.nc2.iosp.nowrad.NOWRadheader headerParser;
    private ucar.unidata.io.RandomAccessFile myRaf;
    private ucar.nc2.NetcdfFile ncfile;
    private int pcode;
    protected boolean readonly;

    public void <init>()
    {
        java.util.HashMap $r1;
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        specialinvoke r0.<ucar.nc2.iosp.AbstractIOServiceProvider: void <init>()>();

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: int fileUsed> = 0;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: int recStart> = 0;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: boolean debug> = 0;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: boolean debugSize> = 0;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: boolean debugSPIO> = 0;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: boolean showHeaderBytes> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(50);

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: java.util.HashMap dimHash> = $r1;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile)
    {
        ucar.unidata.io.RandomAccessFile r1;
        ucar.nc2.iosp.nowrad.NOWRadheader $r0;
        ucar.nc2.iosp.nowrad.NOWRadiosp r2;
        boolean $z0;

        r2 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r0 = new ucar.nc2.iosp.nowrad.NOWRadheader;

        specialinvoke $r0.<ucar.nc2.iosp.nowrad.NOWRadheader: void <init>()>();

        $z0 = virtualinvoke $r0.<ucar.nc2.iosp.nowrad.NOWRadheader: boolean isValidFile(ucar.unidata.io.RandomAccessFile)>(r1);

        return $z0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        return "NOWRAD";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        return "NOWRAD Products";
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r2, $r5;
        ucar.nc2.iosp.nowrad.NOWRadheader $r3, $r6;
        java.lang.Exception $r8;
        ucar.nc2.util.CancelTask r9;
        ucar.nc2.NetcdfFile r1, $r4, $r7;
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r1 := @parameter1: ucar.nc2.NetcdfFile;

        r9 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.NetcdfFile ncfile> = r1;

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.unidata.io.RandomAccessFile myRaf> = r2;

        $r3 = new ucar.nc2.iosp.nowrad.NOWRadheader;

        specialinvoke $r3.<ucar.nc2.iosp.nowrad.NOWRadheader: void <init>()>();

        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.iosp.nowrad.NOWRadheader headerParser> = $r3;

     label1:
        $r6 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.iosp.nowrad.NOWRadheader headerParser>;

        $r5 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        $r4 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r6.<ucar.nc2.iosp.nowrad.NOWRadheader: void read(ucar.unidata.io.RandomAccessFile,ucar.nc2.NetcdfFile)>($r5, $r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: int pcode> = 0;

        $r7 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.NetcdfFile ncfile>;

        virtualinvoke $r7.<ucar.nc2.NetcdfFile: void finish()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r18;
        ucar.ma2.Section r0;
        ucar.nc2.iosp.nowrad.NOWRadheader $r6;
        long $l0;
        java.nio.ByteBuffer $r7;
        int[] $r12;
        int $i1;
        ucar.nc2.Variable r2;
        java.lang.String $r8;
        ucar.ma2.DataType $r10;
        ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo r4;
        ucar.ma2.Array $r13, $r14, $r15, $r16;
        java.lang.Exception $r17;
        java.util.List $r1;
        java.lang.Object $r3, $r9;
        java.lang.Class $r11;
        ucar.nc2.iosp.nowrad.NOWRadiosp r5;

        r5 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        r18 = null;

        $r1 = virtualinvoke r0.<ucar.ma2.Section: java.util.List getRanges()>();

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: java.lang.Object getSPobject()>();

        r4 = (ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo) $r3;

     label1:
        $r6 = r5.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.nc2.iosp.nowrad.NOWRadheader headerParser>;

        $l0 = r4.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: long hoff>;

        $i1 = (int) $l0;

        r18 = virtualinvoke $r6.<ucar.nc2.iosp.nowrad.NOWRadheader: byte[] getData(int)>($i1);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

     label4:
        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r18);

        $r8 = virtualinvoke r2.<ucar.nc2.Variable: java.lang.String getName()>();

        $r9 = virtualinvoke r5.<ucar.nc2.iosp.nowrad.NOWRadiosp: java.lang.Object readOneScanData(java.nio.ByteBuffer,ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo,java.lang.String)>($r7, r4, $r8);

        $r10 = virtualinvoke r2.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r11 = virtualinvoke $r10.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r12 = virtualinvoke r2.<ucar.nc2.Variable: int[] getShape()>();

        $r13 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r11, $r12, $r9);

        $r14 = virtualinvoke $r13.<ucar.ma2.Array: ucar.ma2.Array flip(int)>(1);

        $r15 = virtualinvoke $r14.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(java.util.List)>($r1);

        $r16 = virtualinvoke $r15.<ucar.ma2.Array: ucar.ma2.Array copy()>();

        return $r16;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.Object readOneScanData(java.nio.ByteBuffer, ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo, java.lang.String) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r1, r2, r6, $r7;
        byte $b6, $b8, $b9, $b12, $b16, $b18, $b24, $b25, $b27, $b28, $b30, $b34, $b37, $b38, $b39, $b40;
        long $l0;
        short $s7, $s10, $s13, $s17, $s19, $s29, $s32, $s35, $s41;
        java.lang.String r5;
        ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo r0;
        java.nio.ByteBuffer r3;
        boolean z0;
        ucar.nc2.iosp.nowrad.NOWRadiosp r4;
        int i1, $i2, $i3, i4, $i5, $i11, $i14, $i15, $i20, $i21, $i22, $i23, $i26, $i31, $i33, $i36, $i42, i43, i44, i45, i46, i47, i48, i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59;

        r4 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r3 := @parameter0: java.nio.ByteBuffer;

        r0 := @parameter1: ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo;

        r5 := @parameter2: java.lang.String;

        $l0 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: long hoff>;

        i1 = (int) $l0;

        $i3 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: int yt>;

        $i2 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: int xt>;

        i4 = $i3 * $i2;

        $i5 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: int xt>;

        r6 = newarray (byte)[$i5];

        r1 = newarray (byte)[i4];

        r2 = newarray (byte)[2];

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);

        $b6 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $s7 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b6);

        $i50 = (int) $s7;

        if $i50 != 240 goto label01;

        $b8 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $i51 = (int) $b8;

        if $i51 == 12 goto label02;

     label01:
        return null;

     label02:
        i43 = 0;

        i44 = 0;

        z0 = 1;

     label03:
        if z0 == 0 goto label04;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

        $b39 = r2[1];

        virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b39);

        $b40 = r2[0];

        virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b40);

     label04:
        $b9 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $s10 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b9);

        $s41 = $s10 & 15;

        $i52 = (int) $s10;

        $i42 = $i52 >> 4;

        $i11 = virtualinvoke r3.<java.nio.ByteBuffer: int position()>();

        i45 = $i11;

        if $i42 != 15 goto label06;

        $i36 = $i11 - 2;

        $b37 = virtualinvoke r3.<java.nio.ByteBuffer: byte get(int)>($i36);

        $b38 = virtualinvoke r3.<java.nio.ByteBuffer: byte get(int)>($i11);

        if $s41 != 0 goto label05;

        if $b37 != 0 goto label05;

        if $b38 != 0 goto label05;

        i45 = $i11 + 1;

     label05:
        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i45);

        i46 = 0;

        goto label09;

     label06:
        if $i42 != 14 goto label07;

        $b34 = virtualinvoke r3.<java.nio.ByteBuffer: byte get(int)>($i11);

        $s35 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b34);

        $i53 = (int) $s35;

        i46 = $i53 + 1;

        i47 = $i11 + 1;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i47);

        goto label09;

     label07:
        if $i42 != 13 goto label08;

        $b25 = virtualinvoke r3.<java.nio.ByteBuffer: byte get(int)>($i11);

        r2[0] = $b25;

        $i26 = $i11 + 1;

        $b27 = virtualinvoke r3.<java.nio.ByteBuffer: byte get(int)>($i26);

        r2[1] = $b27;

        $b28 = r2[1];

        $s29 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b28);

        $i54 = (int) $s29;

        $i31 = $i54 << 8;

        $b30 = r2[0];

        $s32 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b30);

        $i55 = (int) $s32;

        $i33 = $i31 + $i55;

        i46 = $i33 + 1;

        i48 = $i11 + 2;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i48);

        goto label09;

     label08:
        i46 = $i42 + 1;

     label09:
        $r7 = newarray (byte)[i46];

        i49 = 0;

     label10:
        if i49 >= i46 goto label11;

        $b24 = (byte) $s41;

        $r7[i49] = $b24;

        i49 = i49 + 1;

        goto label10;

     label11:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r6, i44, i46);

        i44 = i44 + i46;

        $b12 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $s13 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b12);

        if $s13 != 0 goto label15;

        $b16 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $s17 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b16);

        $b18 = virtualinvoke r3.<java.nio.ByteBuffer: byte get()>();

        $s19 = virtualinvoke r4.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b18);

        if $s13 != 0 goto label12;

        $i56 = (int) $s17;

        if $i56 != 240 goto label12;

        $i57 = (int) $s19;

        if $i57 != 12 goto label12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r1, i43, i44);

        $i22 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: int xt>;

        i43 = i43 + $i22;

        i44 = 0;

        z0 = 1;

        $i23 = r0.<ucar.nc2.iosp.nowrad.NOWRadheader$Vinfo: int xt>;

        r6 = newarray (byte)[$i23];

        goto label14;

     label12:
        $i58 = (int) $s17;

        if $i58 != 240 goto label13;

        $i59 = (int) $s19;

        if $i59 != 2 goto label13;

        goto label17;

     label13:
        $i20 = virtualinvoke r3.<java.nio.ByteBuffer: int position()>();

        $i21 = $i20 - 3;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i21);

        z0 = 0;

     label14:
        goto label16;

     label15:
        z0 = 0;

        $i14 = virtualinvoke r3.<java.nio.ByteBuffer: int position()>();

        $i15 = $i14 - 1;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i15);

     label16:
        goto label03;

     label17:
        return r1;
    }

    int getUInt(byte[], int)
    {
        byte[] r2;
        short $s4;
        byte $b3;
        int[] r0;
        int i0, $i1, $i2, i5, i6, i7, i8, $i9, $i11;
        ucar.nc2.iosp.nowrad.NOWRadiosp r1;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i5 = 1;

        i6 = 0;

        r0 = newarray (int)[i0];

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $b3 = r2[i7];

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b3);

        $i9 = (int) $s4;

        r0[i7] = $i9;

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = i0 - 1;

     label3:
        if i8 < 0 goto label4;

        $i1 = r0[i8];

        $i2 = i5 * $i1;

        i6 = i6 + $i2;

        i5 = i5 * 256;

        $i11 = (int) -1;

        i8 = i8 + $i11;

        goto label3;

     label4:
        return i6;
    }

    public static int bytesToInt(short, short, boolean)
    {
        short s0, s1, $s2, $s6;
        int $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        boolean z0;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $s6 = s0 & 255;

        $i8 = (int) s1;

        $i5 = $i8 << 8;

        $i9 = (int) $s6;

        $i7 = $i9 + $i5;

        return $i7;

     label1:
        $i10 = (int) s0;

        $i3 = $i10 << 8;

        $s2 = s1 & 255;

        $i11 = (int) $s2;

        $i4 = $i3 + $i11;

        return $i4;
    }

    public static int bytesToInt(byte, byte, boolean)
    {
        short $s2, $s6, $s8, $s12;
        byte b0, b1;
        int $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i13;
        boolean z0;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $s8 = (short) b0;

        $s6 = $s8 & 255;

        $i9 = (int) b1;

        $i5 = $i9 << 8;

        $i10 = (int) $s6;

        $i7 = $i10 + $i5;

        return $i7;

     label1:
        $i11 = (int) b0;

        $i3 = $i11 << 8;

        $s12 = (short) b1;

        $s2 = $s12 & 255;

        $i13 = (int) $s2;

        $i4 = $i3 + $i13;

        return $i4;
    }

    public byte[] readOneRowData(byte[], int, int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        byte[] r0, r2;
        short $s3, $s6, $s7;
        byte $b2, $b5, b8;
        int i0, i1, i4, $i9, i10, i11, i12, i13, i14, $i15;
        ucar.nc2.iosp.nowrad.NOWRadiosp r1;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        i10 = 0;

        i11 = 0;

        i12 = 0;

     label1:
        if i12 >= i1 goto label4;

        $b2 = r2[i12];

        $s3 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b2);

        $i15 = (int) $s3;

        i4 = $i15 >> 4;

        $b5 = r2[i12];

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b5);

        $s7 = $s6 & 15;

        b8 = (byte) $s7;

        i13 = 0;

     label2:
        if i13 >= i4 goto label3;

        $i9 = i10;

        i10 = i10 + 1;

        r0[$i9] = b8;

        i11 = i11 + 1;

        i13 = i13 + 1;

        goto label2;

     label3:
        i12 = i12 + 1;

        goto label1;

     label4:
        if i11 >= i0 goto label6;

        i14 = i11;

     label5:
        if i14 >= i0 goto label6;

        r0[i14] = 0;

        i14 = i14 + 1;

        goto label5;

     label6:
        return r0;
    }

    int getUInt(byte[], int, int)
    {
        byte[] r2;
        short $s6;
        byte $b5;
        int[] r0;
        int i0, $i1, $i2, i3, $i4, i7, i8, i9, i10, $i11, $i13;
        ucar.nc2.iosp.nowrad.NOWRadiosp r1;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i7 = 1;

        i8 = 0;

        r0 = newarray (int)[i0];

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        $i4 = i3 + i9;

        $b5 = r2[$i4];

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b5);

        $i11 = (int) $s6;

        r0[i9] = $i11;

        i9 = i9 + 1;

        goto label1;

     label2:
        i10 = i0 - 1;

     label3:
        if i10 < 0 goto label4;

        $i1 = r0[i10];

        $i2 = i7 * $i1;

        i8 = i8 + $i2;

        i7 = i7 * 256;

        $i13 = (int) -1;

        i10 = i10 + $i13;

        goto label3;

     label4:
        return i8;
    }

    int getInt(byte[], int, int)
    {
        byte[] r2;
        short $s9;
        byte $b8;
        int[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i10, i11, i12, i13, $i14, $i16, $i18;
        ucar.nc2.iosp.nowrad.NOWRadiosp r1;

        r1 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        r2 := @parameter0: byte[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        i10 = 1;

        i11 = 0;

        r0 = newarray (int)[i0];

        i12 = 0;

     label1:
        if i12 >= i0 goto label2;

        $i7 = i6 + i12;

        $b8 = r2[$i7];

        $s9 = virtualinvoke r1.<ucar.nc2.iosp.nowrad.NOWRadiosp: short convertunsignedByte2Short(byte)>($b8);

        $i14 = (int) $s9;

        r0[i12] = $i14;

        i12 = i12 + 1;

        goto label1;

     label2:
        $i1 = r0[0];

        if $i1 <= 127 goto label3;

        $i4 = r0[0];

        $i5 = $i4 - 128;

        r0[0] = $i5;

        $i16 = (int) -1;

        i10 = $i16;

     label3:
        i13 = i0 - 1;

     label4:
        if i13 < 0 goto label5;

        $i2 = r0[i13];

        $i3 = i10 * $i2;

        i11 = i11 + $i3;

        i10 = i10 * 256;

        $i18 = (int) -1;

        i13 = i13 + $i18;

        goto label4;

     label5:
        return i11;
    }

    public short convertunsignedByte2Short(byte)
    {
        short $s1, $s2, $s3, $s5;
        byte b0;
        int $i4, $i6, $i7;
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        b0 := @parameter0: byte;

        $i6 = (int) b0;

        if $i6 >= 0 goto label1;

        $s2 = (short) b0;

        $i7 = (int) $s2;

        $i4 = $i7 + 256;

        $s3 = (short) $i4;

        return $s3;

     label1:
        $s5 = (short) b0;

        $s1 = (short) $s5;

        return $s1;
    }

    public static int unsignedByteToInt(byte)
    {
        short $s1, $s2;
        byte b0;
        int $i3;

        b0 := @parameter0: byte;

        $s2 = (short) b0;

        $s1 = $s2 & 255;

        $i3 = (int) $s1;

        return $i3;
    }

    public void flush() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        $r1 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1;
        ucar.nc2.iosp.nowrad.NOWRadiosp r0;

        r0 := @this: ucar.nc2.iosp.nowrad.NOWRadiosp;

        $r1 = r0.<ucar.nc2.iosp.nowrad.NOWRadiosp: ucar.unidata.io.RandomAccessFile myRaf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void close()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception, java.io.IOException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        int[] $r2, $r3;
        ucar.ma2.ArrayByte r5;
        ucar.nc2.Variable $r1;
        java.lang.String[] r6;
        ucar.nc2.NetcdfFile $r0;
        ucar.ma2.Array $r4;

        r6 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.NetcdfFile: void registerIOProvider(java.lang.Class)>(class "Lucar/nc2/iosp/nowrad/NOWRadiosp;");

        $r0 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>("z:/nowrad/BREF_951207_2230");

        $r1 = virtualinvoke $r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("BaseReflectivity");

        $r2 = newarray (int)[2];

        $r2[0] = 0;

        $r2[1] = 0;

        $r3 = newarray (int)[2];

        $r3[0] = 300;

        $r3[1] = 36;

        $r4 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>($r2, $r3);

        r5 = (ucar.ma2.ArrayByte) $r4;

        virtualinvoke $r0.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.nowrad.NOWRadiosp: int Z_DEFLATED> = 8;

        <ucar.nc2.iosp.nowrad.NOWRadiosp: int DEF_WBITS> = 15;

        return;
    }
}
