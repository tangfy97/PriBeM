public abstract class com.google.gxp.com.google.common.collect.ImmutableSortedSet extends com.google.gxp.com.google.common.collect.ImmutableSet implements java.util.SortedSet
{
    private static final java.util.Comparator NATURAL_ORDER;
    private static final com.google.gxp.com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET;
    final java.util.Comparator comparator;

    private static com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r0;

        $r0 = <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET>;

        return $r0;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r3;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet $r2;
        java.util.Comparator r0, $r1;

        r0 := @parameter0: java.util.Comparator;

        $r1 = <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator NATURAL_ORDER>;

        if r0 != $r1 goto label1;

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet()>();

        return $r3;

     label1:
        $r2 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet;

        specialinvoke $r2.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet: void <init>(java.util.Comparator)>(r0);

        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet of()
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r0;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet()>();

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet $r3;
        java.lang.Object[] $r0;
        java.lang.Comparable r1;
        java.lang.Object $r2;
        java.util.Comparator $r4;

        r1 := @parameter0: java.lang.Comparable;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r0[0] = $r2;

        $r3 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        $r4 = <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator NATURAL_ORDER>;

        specialinvoke $r3.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator)>($r0, $r4);

        return $r3;
    }

    public static transient com.google.gxp.com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable[])
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;
        java.lang.Comparable[] r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r1 := @parameter0: java.lang.Comparable[];

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet ofInternal(java.util.Comparator,java.lang.Object[])>($r0, r1);

        return $r2;
    }

    private static transient com.google.gxp.com.google.common.collect.ImmutableSortedSet ofInternal(java.util.Comparator, java.lang.Object[])
    {
        java.lang.Object[] r0, $r4, r7;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet $r5;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        int $i0, i1, i2;
        java.lang.Object $r3, r6;
        java.util.Comparator r1;

        r1 := @parameter0: java.util.Comparator;

        r0 := @parameter1: java.lang.Object[];

        $i0 = lengthof r0;

        lookupswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>(r1);

        return $r2;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r7 = (java.lang.Object[]) $r3;

        i1 = lengthof r7;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        r6 = r7[i2];

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        i2 = i2 + 1;

        goto label3;

     label4:
        staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: void sort(java.lang.Object[],java.util.Comparator)>(r7, r1);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.lang.Object[] removeDupes(java.lang.Object[],java.util.Comparator)>(r7, r1);

        $r5 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        specialinvoke $r5.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator)>($r4, r1);

        return $r5;
    }

    private static void sort(java.lang.Object[], java.util.Comparator)
    {
        java.lang.Object[] r0;
        java.util.Comparator r1;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.util.Comparator;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, r1);

        return;
    }

    private static java.lang.Object[] removeDupes(java.lang.Object[], java.util.Comparator)
    {
        java.lang.Object[] r0, r4;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r1, $r3;
        java.util.Comparator r2;

        r0 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.util.Comparator;

        i4 = 1;

        i5 = 1;

     label1:
        $i0 = lengthof r0;

        if i5 >= $i0 goto label3;

        r1 = r0[i5];

        $i2 = i4 - 1;

        $r3 = r0[$i2];

        $i3 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int compare(java.util.Comparator,java.lang.Object,java.lang.Object)>(r2, $r3, r1);

        if $i3 == 0 goto label2;

        r0[i4] = r1;

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $i1 = lengthof r0;

        if i4 != $i1 goto label4;

        return r0;

     label4:
        r4 = newarray (java.lang.Object)[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, 0, i4);

        return r4;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable)
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;
        java.lang.Iterable r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.lang.Iterable,boolean)>($r0, r1, 0);

        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator)
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;
        java.util.Iterator r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r1 := @parameter0: java.util.Iterator;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.util.Iterator)>($r0, r1);

        return $r2;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet)
    {
        java.util.SortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        java.util.Comparator $r1, r3;

        r0 := @parameter0: java.util.SortedSet;

        $r1 = interfaceinvoke r0.<java.util.SortedSet: java.util.Comparator comparator()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator NATURAL_ORDER>;

     label1:
        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.lang.Iterable,boolean)>(r3, r0, 1);

        return $r2;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator, java.lang.Iterable, boolean)
    {
        java.lang.Object[] $r6, r7;
        java.lang.Iterable r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet $r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r4, r5;
        int i0, $i1, i2;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z7;
        java.lang.Object r3;
        java.util.Comparator r2;

        r2 := @parameter0: java.util.Comparator;

        r0 := @parameter1: java.lang.Iterable;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        $z4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean hasSameComparator(java.lang.Object,java.util.Comparator)>(r0, r2);

        if $z4 == 0 goto label2;

     label1:
        $z7 = 1;

        $z6 = 1;

        goto label3;

     label2:
        $z7 = 0;

        $z6 = 0;

     label3:
        z1 = $z6;

        if $z7 == 0 goto label4;

        $z2 = r0 instanceof com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        if $z2 == 0 goto label4;

        r5 = (com.google.gxp.com.google.common.collect.ImmutableSortedSet) r0;

        $z3 = virtualinvoke r5.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean hasPartialArray()>();

        if $z3 != 0 goto label4;

        return r5;

     label4:
        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Object[] newArray(java.lang.Iterable,java.lang.Class)>(r0, class "Ljava/lang/Object;");

        r7 = $r6;

        $i1 = lengthof $r6;

        if $i1 != 0 goto label5;

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>(r2);

        return $r4;

     label5:
        i0 = lengthof $r6;

        i2 = 0;

     label6:
        if i2 >= i0 goto label7;

        r3 = $r6[i2];

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        i2 = i2 + 1;

        goto label6;

     label7:
        if z1 != 0 goto label8;

        staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: void sort(java.lang.Object[],java.util.Comparator)>($r6, r2);

        r7 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.lang.Object[] removeDupes(java.lang.Object[],java.util.Comparator)>($r6, r2);

     label8:
        $r1 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator)>(r7, r2);

        return $r1;
    }

    private static com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator, java.util.Iterator)
    {
        java.lang.Object[] $r2, $r4;
        java.util.Iterator r0;
        java.util.ArrayList $r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet $r5;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r8;
        java.lang.Object $r6, $r7;
        java.util.Comparator r3;
        boolean $z0, $z1;

        r3 := @parameter0: java.util.Comparator;

        r0 := @parameter1: java.util.Iterator;

        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>(r3);

        return $r8;

     label1:
        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

     label2:
        $z1 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r7 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: void sort(java.lang.Object[],java.util.Comparator)>($r2, r3);

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.lang.Object[] removeDupes(java.lang.Object[],java.util.Comparator)>($r2, r3);

        $r5 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet;

        specialinvoke $r5.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$RegularImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator)>($r4, r3);

        return $r5;
    }

    private static boolean hasSameComparator(java.lang.Object, java.util.Comparator)
    {
        java.util.SortedSet r1;
        java.lang.Object r0;
        com.google.gxp.com.google.common.collect.Ordering $r4, $r5;
        java.util.Comparator $r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.util.Comparator;

        $z0 = r0 instanceof java.util.SortedSet;

        if $z0 == 0 goto label5;

        r1 = (java.util.SortedSet) r0;

        $r2 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, r3);

        if $z1 != 0 goto label2;

        if r3 != null goto label1;

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        if $r2 == $r5 goto label2;

     label1:
        if $r2 != null goto label3;

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        if r3 != $r4 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        return 0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory orderedBy(java.util.Comparator)
    {
        java.util.Comparator r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory $r0;

        r1 := @parameter0: java.util.Comparator;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory;

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory: void <init>(java.util.Comparator)>(r1);

        return $r0;
    }

    public static com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory reverseOrder()
    {
        java.util.Comparator $r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory $r0;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory;

        $r1 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$Factory: void <init>(java.util.Comparator)>($r1);

        return $r0;
    }

    private static int compare(java.util.Comparator, java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = interfaceinvoke r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        return $i0;
    }

    private void <init>(java.util.Comparator)
    {
        java.util.Comparator r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSet: void <init>()>();

        r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator> = r1;

        return;
    }

    public java.util.Comparator comparator()
    {
        java.util.Comparator $r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        $r1 = r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator>;

        return $r1;
    }

    public com.google.gxp.com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0, $r3;
        java.lang.Object r1, $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object)>($r2);

        return $r3;
    }

    public com.google.gxp.com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r2, $r4;
        int $i0;
        java.lang.Object r0, r1;
        java.util.Comparator $r3;
        boolean $z0;

        r2 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r2.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator>;

        $i0 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int compare(java.util.Comparator,java.lang.Object,java.lang.Object)>($r3, r0, r1);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.gxp.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r4 = virtualinvoke r2.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r4;
    }

    public com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0, $r3;
        java.lang.Object r1, $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object)>($r2);

        return $r3;
    }

    abstract com.google.gxp.com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object);

    abstract com.google.gxp.com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, java.lang.Object);

    abstract com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object);

    abstract boolean hasPartialArray();

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        java.io.ObjectInputStream r2;
        java.io.InvalidObjectException $r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r1;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r2 := @parameter0: java.io.ObjectInputStream;

        $r0 = new java.io.InvalidObjectException;

        specialinvoke $r0.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r0;
    }

    java.lang.Object writeReplace()
    {
        java.lang.Object[] $r3;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$SerializedForm $r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r1;
        java.util.Comparator $r2;

        r1 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        $r0 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$SerializedForm;

        $r2 = r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator comparator>;

        $r3 = virtualinvoke r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.lang.Object[] toArray()>();

        specialinvoke $r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$SerializedForm: void <init>(java.util.Comparator,java.lang.Object[])>($r2, $r3);

        return $r0;
    }

    public volatile java.util.SortedSet tailSet(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0, $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedSet headSet(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0, $r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedSet subSet(java.lang.Object, java.lang.Object)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0, $r3;
        java.lang.Object r1, r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    static com.google.gxp.com.google.common.collect.ImmutableSortedSet access$000(java.util.Comparator, java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.util.Comparator r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet ofInternal(java.util.Comparator,java.lang.Object[])>(r0, r1);

        return $r2;
    }

    static com.google.gxp.com.google.common.collect.ImmutableSortedSet access$100(java.util.Comparator, java.lang.Iterable, boolean)
    {
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;
        java.util.Comparator r0;
        java.lang.Iterable r1;
        boolean z0;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Iterable;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.lang.Iterable,boolean)>(r0, r1, z0);

        return $r2;
    }

    static com.google.gxp.com.google.common.collect.ImmutableSortedSet access$200(java.util.Comparator, java.util.Iterator)
    {
        java.util.Comparator r0;
        java.util.Iterator r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r2;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Iterator;

        $r2 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.util.Iterator)>(r0, r1);

        return $r2;
    }

    void <init>(java.util.Comparator, com.google.gxp.com.google.common.collect.ImmutableSortedSet$1)
    {
        java.util.Comparator r1;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$1 r2;

        r0 := @this: com.google.gxp.com.google.common.collect.ImmutableSortedSet;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: com.google.gxp.com.google.common.collect.ImmutableSortedSet$1;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.ImmutableSortedSet: void <init>(java.util.Comparator)>(r1);

        return;
    }

    static boolean access$400(java.lang.Object, java.util.Comparator)
    {
        java.lang.Object r0;
        java.util.Comparator r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.Comparator;

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: boolean hasSameComparator(java.lang.Object,java.util.Comparator)>(r0, r1);

        return $z0;
    }

    static int access$500(java.util.Comparator, java.lang.Object, java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, r2;
        java.util.Comparator r0;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $i0 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: int compare(java.util.Comparator,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        return $i0;
    }

    static com.google.gxp.com.google.common.collect.ImmutableSortedSet access$600(java.util.Comparator)
    {
        java.util.Comparator r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet $r1;

        r0 := @parameter0: java.util.Comparator;

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.google.gxp.com.google.common.collect.Ordering $r0;
        com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet $r1;
        java.util.Comparator $r2;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Comparators: com.google.gxp.com.google.common.collect.Ordering naturalOrder()>();

        <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator NATURAL_ORDER> = $r0;

        $r1 = new com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet;

        $r2 = <com.google.gxp.com.google.common.collect.ImmutableSortedSet: java.util.Comparator NATURAL_ORDER>;

        specialinvoke $r1.<com.google.gxp.com.google.common.collect.ImmutableSortedSet$EmptyImmutableSortedSet: void <init>(java.util.Comparator)>($r2);

        <com.google.gxp.com.google.common.collect.ImmutableSortedSet: com.google.gxp.com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET> = $r1;

        return;
    }
}
