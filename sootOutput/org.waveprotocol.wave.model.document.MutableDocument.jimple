public interface  org.waveprotocol.wave.model.document.MutableDocument extends java.lang.Object implements org.waveprotocol.wave.model.document.ReadableWDocument, org.waveprotocol.wave.model.document.MutableAnnotationSet$Persistent
{

    public abstract void 'with'(org.waveprotocol.wave.model.document.MutableDocument$Action);

    public abstract java.lang.Object 'with'(org.waveprotocol.wave.model.document.MutableDocument$Method);

    public abstract void deleteNode(java.lang.Object);

    public abstract void emptyElement(java.lang.Object);

    public abstract void insertText(int, java.lang.String);

    public abstract void insertText(org.waveprotocol.wave.model.document.util.Point, java.lang.String);

    public abstract java.lang.Object appendXml(org.waveprotocol.wave.model.document.util.XmlStringBuilder);

    public abstract java.lang.Object insertXml(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.XmlStringBuilder);

    public abstract java.lang.Object createElement(org.waveprotocol.wave.model.document.util.Point, java.lang.String, java.util.Map);

    public abstract java.lang.Object createChildElement(java.lang.Object, java.lang.String, java.util.Map);

    public abstract org.waveprotocol.wave.model.document.util.Range deleteRange(int, int);

    public abstract org.waveprotocol.wave.model.document.util.PointRange deleteRange(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.Point);

    public abstract void moveSiblings(org.waveprotocol.wave.model.document.util.Point, java.lang.Object, java.lang.Object);

    public abstract void setElementAttribute(java.lang.Object, java.lang.String, java.lang.String);

    public abstract void setElementAttributes(java.lang.Object, org.waveprotocol.wave.model.document.operation.Attributes);

    public abstract void updateElementAttributes(java.lang.Object, java.util.Map);

    public abstract void hackConsume(org.waveprotocol.wave.model.document.operation.Nindo);
}
