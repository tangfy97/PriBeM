class org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker extends java.security.cert.PKIXCertPathChecker
{
    private static final java.lang.String WAVE_OID;
    private static final java.util.Set SUPPORTED_EXTENSIONS;

    private void <init>()
    {
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r0;

        r0 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        specialinvoke r0.<java.security.cert.PKIXCertPathChecker: void <init>()>();

        return;
    }

    public void check(java.security.cert.Certificate, java.util.Collection)
    {
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r1;
        java.security.cert.Certificate r2;
        java.util.Collection r0;

        r1 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        r2 := @parameter0: java.security.cert.Certificate;

        r0 := @parameter1: java.util.Collection;

        interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>("1.3.6.1.4.1.11129.2.1.1");

        return;
    }

    public java.util.Set getSupportedExtensions()
    {
        java.util.Set $r0;
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r1;

        r1 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        $r0 = <org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker: java.util.Set SUPPORTED_EXTENSIONS>;

        return $r0;
    }

    public void init(boolean)
    {
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean isForwardCheckingSupported()
    {
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r0;

        r0 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        return 1;
    }

    void <init>(org.waveprotocol.wave.crypto.CachedCertPathValidator$1)
    {
        org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker r0;
        org.waveprotocol.wave.crypto.CachedCertPathValidator$1 r1;

        r0 := @this: org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker;

        r1 := @parameter0: org.waveprotocol.wave.crypto.CachedCertPathValidator$1;

        specialinvoke r0.<org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        com.google.common.collect.ImmutableSet $r0;

        <org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker: java.lang.String WAVE_OID> = "1.3.6.1.4.1.11129.2.1.1";

        $r0 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>("1.3.6.1.4.1.11129.2.1.1");

        <org.waveprotocol.wave.crypto.CachedCertPathValidator$WaveOidChecker: java.util.Set SUPPORTED_EXTENSIONS> = $r0;

        return;
    }
}
