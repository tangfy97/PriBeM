public class org.apache.pdfbox.Encrypt extends java.lang.Object
{

    private void <init>()
    {
        org.apache.pdfbox.Encrypt r0;

        r0 := @this: org.apache.pdfbox.Encrypt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        org.apache.pdfbox.Encrypt $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.pdfbox.Encrypt;

        specialinvoke $r0.<org.apache.pdfbox.Encrypt: void <init>()>();

        specialinvoke $r0.<org.apache.pdfbox.Encrypt: void encrypt(java.lang.String[])>(r1);

        return;
    }

    private void encrypt(java.lang.String[]) throws java.lang.Exception
    {
        java.security.cert.X509Certificate r10;
        java.security.cert.CertificateFactory $r7;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        org.apache.pdfbox.pdmodel.encryption.AccessPermission $r1;
        org.apache.pdfbox.pdmodel.PDDocument $r2, r35;
        java.security.cert.Certificate $r9;
        org.apache.pdfbox.Encrypt r29;
        java.lang.StringBuilder $r23, $r24, $r26, $r27;
        java.lang.Throwable $r20;
        java.lang.String[] r0;
        int $i0, $i1, i2, i3;
        org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy $r5;
        java.lang.String $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r25, $r28, r30, r31, r32, r33, r34, r36;
        org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy $r4;
        java.io.PrintStream $r3;
        java.lang.NumberFormatException $r21, $r22;
        java.io.FileInputStream $r8;

        r29 := @this: org.apache.pdfbox.Encrypt;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label01;

        staticinvoke <org.apache.pdfbox.Encrypt: void usage()>();

        goto label32;

     label01:
        $r1 = new org.apache.pdfbox.pdmodel.encryption.AccessPermission;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void <init>()>();

        r30 = null;

        r31 = null;

        r32 = null;

        r33 = "";

        r34 = "";

        i2 = 40;

        r35 = null;

     label02:
        i3 = 0;

     label03:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label22;

        r36 = r0[i3];

        $z1 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-O");

        if $z1 == 0 goto label04;

        i3 = i3 + 1;

        r34 = r0[i3];

        goto label21;

     label04:
        $z2 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-U");

        if $z2 == 0 goto label05;

        i3 = i3 + 1;

        r33 = r0[i3];

        goto label21;

     label05:
        $z3 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canAssemble");

        if $z3 == 0 goto label06;

        i3 = i3 + 1;

        $r19 = r0[i3];

        $z20 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanAssembleDocument(boolean)>($z20);

        goto label21;

     label06:
        $z4 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canExtractContent");

        if $z4 == 0 goto label07;

        i3 = i3 + 1;

        $r18 = r0[i3];

        $z19 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanExtractContent(boolean)>($z19);

        goto label21;

     label07:
        $z5 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canExtractForAccessibility");

        if $z5 == 0 goto label08;

        i3 = i3 + 1;

        $r17 = r0[i3];

        $z18 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanExtractForAccessibility(boolean)>($z18);

        goto label21;

     label08:
        $z6 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canFillInForm");

        if $z6 == 0 goto label09;

        i3 = i3 + 1;

        $r16 = r0[i3];

        $z17 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanFillInForm(boolean)>($z17);

        goto label21;

     label09:
        $z7 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canModify");

        if $z7 == 0 goto label10;

        i3 = i3 + 1;

        $r15 = r0[i3];

        $z16 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanModify(boolean)>($z16);

        goto label21;

     label10:
        $z8 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canModifyAnnotations");

        if $z8 == 0 goto label11;

        i3 = i3 + 1;

        $r14 = r0[i3];

        $z15 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanModifyAnnotations(boolean)>($z15);

        goto label21;

     label11:
        $z9 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canPrint");

        if $z9 == 0 goto label12;

        i3 = i3 + 1;

        $r13 = r0[i3];

        $z14 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanPrint(boolean)>($z14);

        goto label21;

     label12:
        $z10 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-canPrintDegraded");

        if $z10 == 0 goto label13;

        i3 = i3 + 1;

        $r12 = r0[i3];

        $z13 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void setCanPrintDegraded(boolean)>($z13);

        goto label21;

     label13:
        $z11 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-certFile");

        if $z11 == 0 goto label14;

        i3 = i3 + 1;

        r32 = r0[i3];

        goto label21;

     label14:
        $z12 = virtualinvoke r36.<java.lang.String: boolean equals(java.lang.Object)>("-keyLength");

        if $z12 == 0 goto label18;

     label15:
        i3 = i3 + 1;

        $r11 = r0[i3];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label16:
        goto label21;

     label17:
        $r21 := @caughtexception;

        $r22 = new java.lang.NumberFormatException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: -keyLength is not an integer \'");

        $r25 = r0[i3];

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r28);

        throw $r22;

     label18:
        if r30 != null goto label19;

        r30 = r36;

        goto label21;

     label19:
        if r31 != null goto label20;

        r31 = r36;

        goto label21;

     label20:
        staticinvoke <org.apache.pdfbox.Encrypt: void usage()>();

     label21:
        i3 = i3 + 1;

        goto label03;

     label22:
        if r30 != null goto label23;

        staticinvoke <org.apache.pdfbox.Encrypt: void usage()>();

     label23:
        if r31 != null goto label24;

        r31 = r30;

     label24:
        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>(r30);

        r35 = $r2;

        $z0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z0 != 0 goto label27;

        if r32 == null goto label25;

        $r5 = new org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy;

        specialinvoke $r5.<org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy: void <init>()>();

        $r6 = new org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient: void <init>()>();

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient: void setPermission(org.apache.pdfbox.pdmodel.encryption.AccessPermission)>($r1);

        $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.lang.String)>(r32);

        $r9 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8);

        r10 = (java.security.cert.X509Certificate) $r9;

        virtualinvoke $r8.<java.io.InputStream: void close()>();

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient: void setX509(java.security.cert.X509Certificate)>(r10);

        virtualinvoke $r5.<org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy: void addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient)>($r6);

        virtualinvoke $r5.<org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy: void setEncryptionKeyLength(int)>(i2);

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)>($r5);

        goto label26;

     label25:
        $r4 = new org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy;

        specialinvoke $r4.<org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy: void <init>(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.AccessPermission)>(r34, r33, $r1);

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy: void setEncryptionKeyLength(int)>(i2);

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)>($r4);

     label26:
        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>(r31);

        goto label28;

     label27:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Error: Document is already encrypted.");

     label28:
        goto label33;

     label29:
        goto label32;

     label30:
        $r20 := @caughtexception;

        goto label35;

     label31:
        throw $r20;

     label32:
        return;

     label33:
        if $r2 == null goto label34;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label34:
        goto label29;

     label35:
        if r35 == null goto label36;

        virtualinvoke r35.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label36:
        goto label31;

        catch java.lang.NumberFormatException from label15 to label16 with label17;
        catch java.lang.Throwable from label02 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    private static void usage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: java -jar pdfbox-app-x.y.z.jar Encrypt [options] <inputfile> [outputfile]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("   -O <password>                            Set the owner password(ignored if cert is set)");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("   -U <password>                            Set the user password(ignored if cert is set)");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("   -certFile <path to cert>                 Path to X.509 certificate");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("   -canAssemble <true|false>                Set the assemble permission");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("   -canExtractContent <true|false>          Set the extraction permission");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("   -canExtractForAccessibility <true|false> Set the extraction permission");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("   -canFillInForm <true|false>              Set the fill in form permission");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("   -canModify <true|false>                  Set the modify permission");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("   -canModifyAnnotations <true|false>       Set the modify annots permission");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("   -canPrint <true|false>                   Set the print permission");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("   -canPrintDegraded <true|false>           Set the print degraded permission");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("   -keyLength <length>                      The length of the key in bits(40)");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("\nNote: By default all permissions are set to true!");

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }
}
