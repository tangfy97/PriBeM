public abstract class org.springframework.core.enums.AbstractLabeledEnum extends java.lang.Object implements org.springframework.core.enums.LabeledEnum
{

    protected void <init>()
    {
        org.springframework.core.enums.AbstractLabeledEnum r0;

        r0 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Class getType()
    {
        org.springframework.core.enums.AbstractLabeledEnum r0;
        int $i0, $i2;
        java.lang.Class $r1, $r2, $r3, $r4, $r6;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getDeclaringClass()>();

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(36);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label4:
        return $r6;
    }

    public int compareTo(java.lang.Object)
    {
        org.springframework.core.enums.LabeledEnum r1;
        java.lang.ClassCastException $r7, $r8;
        org.springframework.core.enums.AbstractLabeledEnum r2;
        int $i0;
        java.lang.Object r0;
        java.lang.Class $r3, $r4;
        java.lang.Comparable $r5, $r6;
        boolean $z0, $z1;

        r2 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.core.enums.LabeledEnum;

        if $z0 != 0 goto label1;

        $r8 = new java.lang.ClassCastException;

        specialinvoke $r8.<java.lang.ClassCastException: void <init>(java.lang.String)>("You may only compare LabeledEnums");

        throw $r8;

     label1:
        r1 = (org.springframework.core.enums.LabeledEnum) r0;

        $r3 = virtualinvoke r2.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Class getType()>();

        $r4 = interfaceinvoke r1.<org.springframework.core.enums.LabeledEnum: java.lang.Class getType()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r7 = new java.lang.ClassCastException;

        specialinvoke $r7.<java.lang.ClassCastException: void <init>(java.lang.String)>("You may only compare LabeledEnums of the same type");

        throw $r7;

     label2:
        $r5 = virtualinvoke r2.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Comparable getCode()>();

        $r6 = interfaceinvoke r1.<org.springframework.core.enums.LabeledEnum: java.lang.Comparable getCode()>();

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.core.enums.LabeledEnum r2;
        org.springframework.core.enums.AbstractLabeledEnum r0;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.Comparable $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.core.enums.LabeledEnum;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.core.enums.LabeledEnum) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Class getType()>();

        $r4 = interfaceinvoke r2.<org.springframework.core.enums.LabeledEnum: java.lang.Class getType()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $r5 = virtualinvoke r0.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Comparable getCode()>();

        $r6 = interfaceinvoke r2.<org.springframework.core.enums.LabeledEnum: java.lang.Comparable getCode()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.core.enums.AbstractLabeledEnum r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r1;
        java.lang.Comparable $r2;

        r0 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        $r1 = virtualinvoke r0.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Class getType()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 29;

        $r2 = virtualinvoke r0.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Comparable getCode()>();

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        org.springframework.core.enums.AbstractLabeledEnum r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.enums.AbstractLabeledEnum;

        $r1 = virtualinvoke r0.<org.springframework.core.enums.AbstractLabeledEnum: java.lang.String getLabel()>();

        return $r1;
    }
}
