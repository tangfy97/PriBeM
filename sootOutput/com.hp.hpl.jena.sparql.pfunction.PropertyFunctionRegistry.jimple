public class com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry extends java.lang.Object
{
    static com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry globalRegistry;
    java.util.Map registry;
    java.util.Set attemptedLoads;

    public void <init>()
    {
        java.util.HashSet $r2;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        java.util.HashMap $r1;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Set attemptedLoads> = $r2;

        return;
    }

    public static synchronized com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry standardRegistry()
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r0;

        $r0 = new com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void <init>()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void loadStdDefs()>();

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry get(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r3;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.util.Symbol $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol registryPropertyFunctions>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        $r3 = (com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry) $r2;

        return $r3;
    }

    public static com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry chooseRegistry(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r1, r2;
        com.hp.hpl.jena.sparql.util.Context r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry get(com.hp.hpl.jena.sparql.util.Context)>(r0);

        r2 = $r1;

        if $r1 != null goto label1;

        r2 = staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry get()>();

     label1:
        return r2;
    }

    public static void set(com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r1;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.util.Symbol $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r1 := @parameter1: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        $r2 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol registryPropertyFunctions>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r2, r1);

        return;
    }

    public static synchronized com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry get()
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry $r1, $r2, r4;
        com.hp.hpl.jena.sparql.util.Context $r0, $r3;

        $r0 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry get(com.hp.hpl.jena.sparql.util.Context)>($r0);

        r4 = $r1;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry standardRegistry()>();

        r4 = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

        staticinvoke <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void set(com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry)>($r3, $r2);

     label1:
        return r4;
    }

    public void put(java.lang.String, com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory r2;
        java.util.Map $r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory;

        $r3 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.String, java.lang.Class)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r2;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactoryAuto $r4;
        java.util.Map $r5;
        java.lang.Class r0, $r1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String r3, $r8, $r11;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class;

        $r1 = class "Lcom/hp/hpl/jena/sparql/pfunction/PropertyFunction;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an PropertyFunction");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r2, $r11);

        return;

     label1:
        $r5 = r2.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $r4 = new com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactoryAuto;

        specialinvoke $r4.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactoryAuto: void <init>(java.lang.Class)>(r0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

        return;
    }

    public boolean manages(java.lang.String)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.util.MappedLoader: boolean isPossibleDynamicURI(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/sparql/pfunction/PropertyFunction;");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory get(java.lang.String)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory r4, $r10;
        java.util.Set $r5, $r7;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        java.util.Map $r2, $r8;
        java.lang.Object $r3, $r9;
        java.lang.Class $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory) $r3;

        if r4 == null goto label1;

        return r4;

     label1:
        $r5 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Set attemptedLoads>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.MappedLoader: java.lang.Class loadClass(java.lang.String,java.lang.Class)>(r1, class "Lcom/hp/hpl/jena/sparql/pfunction/PropertyFunction;");

        if $r6 != null goto label3;

        return null;

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>(r1, $r6);

        $r7 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Set attemptedLoads>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r8 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory) $r9;

        return $r10;
    }

    public boolean isRegistered(java.lang.String)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory remove(java.lang.String)
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.sparql.pfunction.PropertyFunctionFactory) $r3;

        return $r4;
    }

    public java.util.Iterator keys()
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        $r1 = r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: java.util.Map registry>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    private void loadStdDefs()
    {
        com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry r0;
        com.hp.hpl.jena.rdf.model.Property $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry;

        $r1 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property member>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r2, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listMember;");

        $r3 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property index>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r4, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listIndex;");

        $r5 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property length>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r6, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listLength;");

        $r7 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property listMember>;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r8, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listMember;");

        $r9 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property listIndex>;

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r10, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listIndex;");

        $r11 = <com.hp.hpl.jena.sparql.vocabulary.ListPFunction: com.hp.hpl.jena.rdf.model.Property listLength>;

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r12, class "Lcom/hp/hpl/jena/sparql/pfunction/library/listLength;");

        $r13 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property member>;

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getURI()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: void put(java.lang.String,java.lang.Class)>($r14, class "Lcom/hp/hpl/jena/sparql/pfunction/library/container;");

        return;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry: com.hp.hpl.jena.sparql.pfunction.PropertyFunctionRegistry globalRegistry> = null;

        return;
    }
}
