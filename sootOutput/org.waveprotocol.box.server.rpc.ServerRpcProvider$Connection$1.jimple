class org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1 extends java.lang.Object implements com.google.protobuf.RpcCallback
{
    final org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod val$serviceMethod;
    final int val$sequenceNo;
    final org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection this$0;

    void <init>(org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection, org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod, int)
    {
        org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod r2;
        int i0;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection r1;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1 r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1;

        r1 := @parameter0: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection;

        r2 := @parameter1: org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod;

        i0 := @parameter2: int;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection this$0> = r1;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod val$serviceMethod> = r2;

        r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: int val$sequenceNo> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized void run(com.google.protobuf.Message)
    {
        com.google.protobuf.DescriptorProtos$MethodOptions $r22;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1 r4;
        java.lang.Integer $r11;
        java.util.Map $r10;
        org.waveprotocol.wave.util.logging.Log $r1, $r12;
        boolean $z0, $z1, $z2, $z3;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod $r20;
        com.google.protobuf.Descriptors$MethodDescriptor $r21;
        com.google.protobuf.GeneratedMessage$GeneratedExtension $r23;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r13, $r14, $r17;
        org.waveprotocol.box.server.rpc.Rpc$RpcFinished $r15, $r19;
        int $i0, $i1, $i2;
        java.lang.Boolean $r25;
        java.lang.String $r8, $r16, $r18;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection $r9, $r26;
        com.google.protobuf.Message r0;
        java.lang.Object $r24;

        r4 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1;

        r0 := @parameter0: com.google.protobuf.Message;

        $z0 = r0 instanceof org.waveprotocol.box.server.rpc.Rpc$RpcFinished;

        if $z0 != 0 goto label1;

        $r20 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod val$serviceMethod>;

        $r21 = $r20.<org.waveprotocol.box.server.rpc.ServerRpcProvider$RegisteredServiceMethod: com.google.protobuf.Descriptors$MethodDescriptor method>;

        $r22 = virtualinvoke $r21.<com.google.protobuf.Descriptors$MethodDescriptor: com.google.protobuf.DescriptorProtos$MethodOptions getOptions()>();

        $r23 = <org.waveprotocol.box.server.rpc.Rpc: com.google.protobuf.GeneratedMessage$GeneratedExtension isStreamingRpc>;

        $r24 = virtualinvoke $r22.<com.google.protobuf.DescriptorProtos$MethodOptions: java.lang.Object getExtension(com.google.protobuf.GeneratedMessage$GeneratedExtension)>($r23);

        $r25 = (java.lang.Boolean) $r24;

        $z2 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label5;

     label1:
        $z1 = r0 instanceof org.waveprotocol.box.server.rpc.Rpc$RpcFinished;

        if $z1 == 0 goto label2;

        $r19 = (org.waveprotocol.box.server.rpc.Rpc$RpcFinished) r0;

        $z3 = virtualinvoke $r19.<org.waveprotocol.box.server.rpc.Rpc$RpcFinished: boolean getFailed()>();

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r1 = staticinvoke <org.waveprotocol.box.server.rpc.ServerRpcProvider: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RPC ");

        $i0 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: int val$sequenceNo>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is now finished, failed = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<org.waveprotocol.wave.util.logging.Log: void fine(java.lang.String)>($r8);

        if $z3 == 0 goto label4;

        $r12 = staticinvoke <org.waveprotocol.box.server.rpc.ServerRpcProvider: org.waveprotocol.wave.util.logging.Log access$000()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error = ");

        $r15 = (org.waveprotocol.box.server.rpc.Rpc$RpcFinished) r0;

        $r16 = virtualinvoke $r15.<org.waveprotocol.box.server.rpc.Rpc$RpcFinished: java.lang.String getErrorText()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r18);

     label4:
        $r9 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection this$0>;

        $r10 = staticinvoke <org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection: java.util.Map access$300(org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection)>($r9);

        $i1 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: int val$sequenceNo>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

     label5:
        $r26 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection this$0>;

        $i2 = r4.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: int val$sequenceNo>;

        virtualinvoke $r26.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection: void sendMessage(int,com.google.protobuf.Message)>($i2, r0);

        return;
    }

    public volatile void run(java.lang.Object)
    {
        com.google.protobuf.Message $r2;
        java.lang.Object r1;
        org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1 r0;

        r0 := @this: org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.protobuf.Message) r1;

        virtualinvoke r0.<org.waveprotocol.box.server.rpc.ServerRpcProvider$Connection$1: void run(com.google.protobuf.Message)>($r2);

        return;
    }
}
