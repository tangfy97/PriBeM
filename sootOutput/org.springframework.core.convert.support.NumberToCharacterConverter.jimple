final class org.springframework.core.convert.support.NumberToCharacterConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{

    void <init>()
    {
        org.springframework.core.convert.support.NumberToCharacterConverter r0;

        r0 := @this: org.springframework.core.convert.support.NumberToCharacterConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Character convert(java.lang.Number)
    {
        org.springframework.core.convert.support.NumberToCharacterConverter r2;
        short $s0;
        java.lang.Character $r1;
        char $c1;
        java.lang.Number r0;

        r2 := @this: org.springframework.core.convert.support.NumberToCharacterConverter;

        r0 := @parameter0: java.lang.Number;

        $s0 = virtualinvoke r0.<java.lang.Number: short shortValue()>();

        $c1 = (char) $s0;

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r1;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.springframework.core.convert.support.NumberToCharacterConverter r0;
        java.lang.Character $r3;
        java.lang.Object r1;
        java.lang.Number $r2;

        r0 := @this: org.springframework.core.convert.support.NumberToCharacterConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.NumberToCharacterConverter: java.lang.Character convert(java.lang.Number)>($r2);

        return $r3;
    }
}
