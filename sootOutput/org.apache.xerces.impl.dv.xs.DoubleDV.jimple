public class org.apache.xerces.impl.dv.xs.DoubleDV extends org.apache.xerces.impl.dv.xs.TypeValidator
{

    public void <init>()
    {
        org.apache.xerces.impl.dv.xs.DoubleDV r0;

        r0 := @this: org.apache.xerces.impl.dv.xs.DoubleDV;

        specialinvoke r0.<org.apache.xerces.impl.dv.xs.TypeValidator: void <init>()>();

        return;
    }

    public short getAllowedFacets()
    {
        org.apache.xerces.impl.dv.xs.DoubleDV r0;

        r0 := @this: org.apache.xerces.impl.dv.xs.DoubleDV;

        return 2552;
    }

    public java.lang.Object getActualValue(java.lang.String, org.apache.xerces.impl.dv.ValidationContext) throws org.apache.xerces.impl.dv.InvalidDatatypeValueException
    {
        org.apache.xerces.impl.dv.ValidationContext r6;
        org.apache.xerces.impl.dv.InvalidDatatypeValueException $r3;
        org.apache.xerces.impl.dv.xs.DoubleDV r5;
        java.lang.Object[] $r4;
        org.apache.xerces.impl.dv.xs.DoubleDV$XDouble $r0;
        java.lang.NumberFormatException $r2;
        java.lang.String r1;

        r5 := @this: org.apache.xerces.impl.dv.xs.DoubleDV;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.xerces.impl.dv.ValidationContext;

     label1:
        $r0 = new org.apache.xerces.impl.dv.xs.DoubleDV$XDouble;

        specialinvoke $r0.<org.apache.xerces.impl.dv.xs.DoubleDV$XDouble: void <init>(java.lang.String)>(r1);

        return $r0;

     label2:
        $r2 := @caughtexception;

        $r3 = new org.apache.xerces.impl.dv.InvalidDatatypeValueException;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r1;

        $r4[1] = "double";

        specialinvoke $r3.<org.apache.xerces.impl.dv.InvalidDatatypeValueException: void <init>(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.2.1", $r4);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.xerces.impl.dv.xs.DoubleDV r4;
        int $i0;
        org.apache.xerces.impl.dv.xs.DoubleDV$XDouble $r2, $r3;
        java.lang.Object r0, r1;

        r4 := @this: org.apache.xerces.impl.dv.xs.DoubleDV;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (org.apache.xerces.impl.dv.xs.DoubleDV$XDouble) r0;

        $r2 = (org.apache.xerces.impl.dv.xs.DoubleDV$XDouble) r1;

        $i0 = staticinvoke <org.apache.xerces.impl.dv.xs.DoubleDV$XDouble: int access$000(org.apache.xerces.impl.dv.xs.DoubleDV$XDouble,org.apache.xerces.impl.dv.xs.DoubleDV$XDouble)>($r3, $r2);

        return $i0;
    }

    public boolean isIdentical(java.lang.Object, java.lang.Object)
    {
        org.apache.xerces.impl.dv.xs.DoubleDV r4;
        org.apache.xerces.impl.dv.xs.DoubleDV$XDouble $r2, $r3;
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r4 := @this: org.apache.xerces.impl.dv.xs.DoubleDV;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.apache.xerces.impl.dv.xs.DoubleDV$XDouble;

        if $z0 == 0 goto label1;

        $r3 = (org.apache.xerces.impl.dv.xs.DoubleDV$XDouble) r1;

        $r2 = (org.apache.xerces.impl.dv.xs.DoubleDV$XDouble) r0;

        $z1 = virtualinvoke $r3.<org.apache.xerces.impl.dv.xs.DoubleDV$XDouble: boolean isIdentical(org.apache.xerces.impl.dv.xs.DoubleDV$XDouble)>($r2);

        return $z1;

     label1:
        return 0;
    }

    static boolean isPossibleFP(java.lang.String)
    {
        char $c1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

        goto label4;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 < 48 goto label2;

        $i4 = (int) $c1;

        if $i4 <= 57 goto label3;

     label2:
        $i5 = (int) $c1;

        if $i5 == 46 goto label3;

        $i6 = (int) $c1;

        if $i6 == 45 goto label3;

        $i7 = (int) $c1;

        if $i7 == 43 goto label3;

        $i8 = (int) $c1;

        if $i8 == 69 goto label3;

        $i9 = (int) $c1;

        if $i9 == 101 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < $i0 goto label1;

        return 1;
    }
}
