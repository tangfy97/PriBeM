class ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl extends ucar.nc2.ft.point.StationFeatureImpl
{
    int recnum;
    ucar.ma2.StructureData stationData;
    final ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0;

    void <init>(ucar.nc2.ft.point.standard.StandardStationCollectionImpl, ucar.unidata.geoloc.Station, ucar.nc2.units.DateUnit, ucar.ma2.StructureData, int)
    {
        ucar.ma2.StructureData r4;
        ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl r0;
        int i0, $i2;
        ucar.nc2.ft.point.standard.StandardStationCollectionImpl r1;
        ucar.unidata.geoloc.Station r2;
        ucar.nc2.units.DateUnit r3;

        r0 := @this: ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl;

        r1 := @parameter0: ucar.nc2.ft.point.standard.StandardStationCollectionImpl;

        r2 := @parameter1: ucar.unidata.geoloc.Station;

        r3 := @parameter2: ucar.nc2.units.DateUnit;

        r4 := @parameter3: ucar.ma2.StructureData;

        i0 := @parameter4: int;

        r0.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0> = r1;

        $i2 = (int) -1;

        specialinvoke r0.<ucar.nc2.ft.point.StationFeatureImpl: void <init>(ucar.unidata.geoloc.Station,ucar.nc2.units.DateUnit,int)>(r2, r3, $i2);

        r0.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: int recnum> = i0;

        r0.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.ma2.StructureData stationData> = r4;

        return;
    }

    public ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int) throws java.io.IOException
    {
        ucar.ma2.StructureDataIterator $r11;
        ucar.ma2.StructureData $r5;
        int[] $r4;
        int $i0, $i1, i2, $i3;
        ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl r1;
        ucar.ma2.StructureData[] $r6;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator $r12;
        ucar.nc2.units.DateUnit $r15;
        ucar.unidata.geoloc.LatLonRect $r16;
        ucar.nc2.units.DateRange $r17;
        ucar.nc2.ft.point.standard.StandardStationCollectionImpl $r2, $r7, $r9, $r13;
        ucar.nc2.ft.point.standard.Cursor $r0;
        ucar.nc2.ft.point.standard.NestedTable $r3, $r8, $r10, $r14;

        r1 := @this: ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl;

        i2 := @parameter0: int;

        $r0 = new ucar.nc2.ft.point.standard.Cursor;

        $r2 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0>;

        $r3 = staticinvoke <ucar.nc2.ft.point.standard.StandardStationCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardStationCollectionImpl)>($r2);

        $i0 = virtualinvoke $r3.<ucar.nc2.ft.point.standard.NestedTable: int getNumberOfLevels()>();

        specialinvoke $r0.<ucar.nc2.ft.point.standard.Cursor: void <init>(int)>($i0);

        $r4 = $r0.<ucar.nc2.ft.point.standard.Cursor: int[] recnum>;

        $i1 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: int recnum>;

        $r4[1] = $i1;

        $r6 = $r0.<ucar.nc2.ft.point.standard.Cursor: ucar.ma2.StructureData[] tableData>;

        $r5 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.ma2.StructureData stationData>;

        $r6[1] = $r5;

        $r0.<ucar.nc2.ft.point.standard.Cursor: int currentIndex> = 1;

        $r7 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0>;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.StandardStationCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardStationCollectionImpl)>($r7);

        virtualinvoke $r8.<ucar.nc2.ft.point.standard.NestedTable: void addParentJoin(ucar.nc2.ft.point.standard.Cursor)>($r0);

        $r9 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0>;

        $r10 = staticinvoke <ucar.nc2.ft.point.standard.StandardStationCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardStationCollectionImpl)>($r9);

        $r11 = virtualinvoke $r10.<ucar.nc2.ft.point.standard.NestedTable: ucar.ma2.StructureDataIterator getLeafFeatureDataIterator(ucar.nc2.ft.point.standard.Cursor,int)>($r0, i2);

        $r12 = new ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        $r13 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.ft.point.standard.StandardStationCollectionImpl this$0>;

        $r14 = staticinvoke <ucar.nc2.ft.point.standard.StandardStationCollectionImpl: ucar.nc2.ft.point.standard.NestedTable access$000(ucar.nc2.ft.point.standard.StandardStationCollectionImpl)>($r13);

        $r15 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        specialinvoke $r12.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit,ucar.ma2.StructureDataIterator,ucar.nc2.ft.point.standard.Cursor)>($r14, $r15, $r11, $r0);

        $r16 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if $r16 == null goto label1;

        $r17 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: ucar.nc2.units.DateRange dateRange>;

        if $r17 == null goto label1;

        $i3 = r1.<ucar.nc2.ft.point.standard.StandardStationCollectionImpl$StandardStationFeatureImpl: int npts>;

        if $i3 >= 0 goto label2;

     label1:
        virtualinvoke $r12.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: void setCalculateBounds(ucar.nc2.ft.PointFeatureCollection)>(r1);

     label2:
        return $r12;
    }
}
