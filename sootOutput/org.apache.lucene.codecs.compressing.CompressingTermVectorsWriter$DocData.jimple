class org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData extends java.lang.Object
{
    final int numFields;
    final java.util.Deque fields;
    final int posStart;
    final int offStart;
    final int payStart;
    final org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0;

    void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter, int, int, int, int)
    {
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData r0;
        int i0, i1, i2, i3;
        java.util.ArrayDeque $r2;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter r1;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData;

        r1 := @parameter0: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int numFields> = i0;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>(int)>(i0);

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: java.util.Deque fields> = $r2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int posStart> = i1;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int offStart> = i2;

        r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int payStart> = i3;

        return;
    }

    org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData addField(int, int, boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData r4, $r5, $r7, r9;
        java.util.Deque $r1, $r2, $r10;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter $r6, $r8;
        int $i0, $i1, $i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData;

        i3 := @parameter0: int;

        i4 := @parameter1: int;

        z4 := @parameter2: boolean;

        z5 := @parameter3: boolean;

        z6 := @parameter4: boolean;

        $r1 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: java.util.Deque fields>;

        $z0 = interfaceinvoke $r1.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData;

        $r8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        $i10 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int posStart>;

        $i9 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int offStart>;

        $i8 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: int payStart>;

        specialinvoke $r7.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int,int,boolean,boolean,boolean,int,int,int)>($r8, i3, i4, z4, z5, z6, $i10, $i9, $i8);

        r9 = $r7;

        goto label8;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: java.util.Deque fields>;

        $r3 = interfaceinvoke $r2.<java.util.Deque: java.lang.Object getLast()>();

        r4 = (org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData) $r3;

        $i0 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int posStart>;

        $z1 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPositions>;

        if $z1 == 0 goto label2;

        $i11 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        goto label3;

     label2:
        $i11 = 0;

     label3:
        $i7 = $i0 + $i11;

        $i1 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int offStart>;

        $z2 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasOffsets>;

        if $z2 == 0 goto label4;

        $i12 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        goto label5;

     label4:
        $i12 = 0;

     label5:
        $i6 = $i1 + $i12;

        $i2 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int payStart>;

        $z3 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: boolean hasPayloads>;

        if $z3 == 0 goto label6;

        $i13 = r4.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: int totalPositions>;

        goto label7;

     label6:
        $i13 = 0;

     label7:
        $i5 = $i2 + $i13;

        $r5 = new org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData;

        $r6 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter this$0>;

        specialinvoke $r5.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$FieldData: void <init>(org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter,int,int,boolean,boolean,boolean,int,int,int)>($r6, i3, i4, z4, z5, z6, $i7, $i6, $i5);

        r9 = $r5;

     label8:
        $r10 = r0.<org.apache.lucene.codecs.compressing.CompressingTermVectorsWriter$DocData: java.util.Deque fields>;

        interfaceinvoke $r10.<java.util.Deque: boolean add(java.lang.Object)>(r9);

        return r9;
    }
}
