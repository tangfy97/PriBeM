final class org.apache.lucene.index.StandardDirectoryReader$ReaderCommit extends org.apache.lucene.index.IndexCommit
{
    private java.lang.String segmentsFileName;
    java.util.Collection files;
    org.apache.lucene.store.Directory dir;
    long generation;
    final java.util.Map userData;
    private final int segmentCount;

    void <init>(org.apache.lucene.index.SegmentInfos, org.apache.lucene.store.Directory) throws java.io.IOException
    {
        java.util.Collection $r5, $r6;
        long $l0;
        org.apache.lucene.index.SegmentInfos r1;
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        org.apache.lucene.store.Directory r3;
        java.util.Map $r4;
        int $i1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        r1 := @parameter0: org.apache.lucene.index.SegmentInfos;

        r3 := @parameter1: org.apache.lucene.store.Directory;

        specialinvoke r0.<org.apache.lucene.index.IndexCommit: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfos: java.lang.String getSegmentsFileName()>();

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.lang.String segmentsFileName> = $r2;

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: org.apache.lucene.store.Directory dir> = r3;

        $r4 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfos: java.util.Map getUserData()>();

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.util.Map userData> = $r4;

        $r5 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfos: java.util.Collection files(org.apache.lucene.store.Directory,boolean)>(r3, 1);

        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r5);

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.util.Collection files> = $r6;

        $l0 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: long generation> = $l0;

        $i1 = virtualinvoke r1.<org.apache.lucene.index.SegmentInfos: int size()>();

        r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: int segmentCount> = $i1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DirectoryReader.ReaderCommit(");

        $r3 = r2.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.lang.String segmentsFileName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int getSegmentCount()
    {
        int $i0;
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $i0 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: int segmentCount>;

        return $i0;
    }

    public java.lang.String getSegmentsFileName()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r1 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.lang.String segmentsFileName>;

        return $r1;
    }

    public java.util.Collection getFileNames()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r1 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.util.Collection files>;

        return $r1;
    }

    public org.apache.lucene.store.Directory getDirectory()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r1 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: org.apache.lucene.store.Directory dir>;

        return $r1;
    }

    public long getGeneration()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        long $l0;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $l0 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: long generation>;

        return $l0;
    }

    public boolean isDeleted()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        return 0;
    }

    public java.util.Map getUserData()
    {
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r1 = r0.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: java.util.Map userData>;

        return $r1;
    }

    public void delete()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit r1;

        r1 := @this: org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This IndexCommit does not support deletions");

        throw $r0;
    }
}
