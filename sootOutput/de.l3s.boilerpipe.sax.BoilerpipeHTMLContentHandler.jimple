public class de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler extends java.lang.Object implements org.xml.sax.ContentHandler
{
    private final java.util.Map tagActions;
    private java.lang.String title;
    static final java.lang.String ANCHOR_TEXT_START;
    static final java.lang.String ANCHOR_TEXT_END;
    java.lang.StringBuilder tokenBuffer;
    java.lang.StringBuilder textBuffer;
    int inBody;
    int inAnchor;
    int inIgnorableElement;
    boolean sbLastWasWhitespace;
    private int textElementIdx;
    private final java.util.List textBlocks;
    private java.lang.String lastStartTag;
    private java.lang.String lastEndTag;
    private de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent;
    private int offsetBlocks;
    private java.util.BitSet currentContainedTextElements;
    private boolean flush;
    boolean inAnchorText;
    java.util.LinkedList labelStack;
    java.util.LinkedList fontSizeStack;
    private static final java.util.regex.Pattern PAT_VALID_WORD_CHARACTER;

    public void recycle()
    {
        java.util.List $r3;
        java.lang.StringBuilder $r1, $r2;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.util.BitSet $r4;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inBody> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inAnchor> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inIgnorableElement> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int textElementIdx> = 0;

        $r3 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.List textBlocks>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastStartTag> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastEndTag> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int offsetBlocks> = 0;

        $r4 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.BitSet currentContainedTextElements>;

        virtualinvoke $r4.<java.util.BitSet: void clear()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean inAnchorText> = 0;

        return;
    }

    public void <init>()
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        de.l3s.boilerpipe.sax.TagActionMap $r1;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $r1 = <de.l3s.boilerpipe.sax.DefaultTagActionMap: de.l3s.boilerpipe.sax.TagActionMap INSTANCE>;

        specialinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void <init>(de.l3s.boilerpipe.sax.TagActionMap)>($r1);

        return;
    }

    public void <init>(de.l3s.boilerpipe.sax.TagActionMap)
    {
        java.util.ArrayList $r3;
        de.l3s.boilerpipe.sax.TagActionMap r7;
        java.lang.StringBuilder $r1, $r2;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.util.BitSet $r4;
        java.util.LinkedList $r5, $r6;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r7 := @parameter0: de.l3s.boilerpipe.sax.TagActionMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String title> = null;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer> = $r2;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inBody> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inAnchor> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inIgnorableElement> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int textElementIdx> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.List textBlocks> = $r3;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastStartTag> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastEndTag> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = null;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int offsetBlocks> = 0;

        $r4 = new java.util.BitSet;

        specialinvoke $r4.<java.util.BitSet: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.BitSet currentContainedTextElements> = $r4;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = 0;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean inAnchorText> = 0;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.LinkedList labelStack> = $r5;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.LinkedList fontSizeStack> = $r6;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.Map tagActions> = r7;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void flushBlock()>();

        return;
    }

    public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r3;
        java.lang.StringBuilder $r1, $r2;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        boolean $z0;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace>;

        if $z0 != 0 goto label1;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 1;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1, r2;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        org.xml.sax.Locator r1;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: org.xml.sax.Locator;

        return;
    }

    public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1, r2;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event $r5;
        de.l3s.boilerpipe.sax.TagAction r4;
        java.util.Map $r2;
        org.xml.sax.Attributes r7;
        java.lang.Object $r3;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1, r6, r8;
        boolean $z0, $z1, $z2;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: org.xml.sax.Attributes;

        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.Map tagActions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (de.l3s.boilerpipe.sax.TagAction) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<de.l3s.boilerpipe.sax.TagAction: boolean start(de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r0, r1, r6, r7);

        $z1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush>;

        $z2 = $z0 | $z1;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = $z2;

        goto label2;

     label1:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = 1;

     label2:
        $r5 = <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event START_TAG>;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = $r5;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastStartTag> = r1;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event $r5;
        de.l3s.boilerpipe.sax.TagAction r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String r1, r6, r7;
        boolean $z0, $z1, $z2;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.Map tagActions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (de.l3s.boilerpipe.sax.TagAction) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<de.l3s.boilerpipe.sax.TagAction: boolean end(de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler,java.lang.String,java.lang.String)>(r0, r1, r6);

        $z1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush>;

        $z2 = $z0 | $z1;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = $z2;

        goto label2;

     label1:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = 1;

     label2:
        $r5 = <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event END_TAG>;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = $r5;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastEndTag> = r1;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9, z10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, i8, i9, i10, $i13, $i15, $i16, $i18;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event $r2, $r8;
        char $c7, c11, c12;
        char[] r1;
        java.util.BitSet $r3;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r1 := @parameter0: char[];

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        $i0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int textElementIdx>;

        $i1 = $i0 + 1;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int textElementIdx> = $i1;

        $z0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void flushBlock()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean flush> = 0;

     label01:
        $i2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inIgnorableElement>;

        if $i2 == 0 goto label02;

        return;

     label02:
        z4 = 0;

        z10 = 0;

        z9 = 0;

        z5 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        if i9 != 0 goto label03;

        return;

     label03:
        i3 = i8 + i9;

        i10 = i8;

     label04:
        if i10 >= i3 goto label06;

        $c7 = r1[i10];

        $z3 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z3 == 0 goto label05;

        r1[i10] = 32;

     label05:
        i10 = i10 + 1;

        goto label04;

     label06:
        if i8 >= i3 goto label07;

        c11 = r1[i8];

        $i13 = (int) c11;

        if $i13 != 32 goto label07;

        z4 = 1;

        z10 = 1;

        z9 = 1;

        i8 = i8 + 1;

        $i15 = (int) -1;

        i9 = i9 + $i15;

        goto label06;

     label07:
        if i9 <= 0 goto label08;

        $i5 = i8 + i9;

        $i6 = $i5 - 1;

        c12 = r1[$i6];

        $i16 = (int) c12;

        if $i16 != 32 goto label08;

        z5 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        $i18 = (int) -1;

        i9 = i9 + $i18;

        goto label07;

     label08:
        if i9 != 0 goto label13;

        if z10 != 0 goto label09;

        if z8 == 0 goto label11;

     label09:
        $z2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace>;

        if $z2 != 0 goto label10;

        $r9 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r10 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label10:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 1;

        goto label12;

     label11:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 0;

     label12:
        $r8 = <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event WHITESPACE>;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = $r8;

        return;

     label13:
        if z9 == 0 goto label14;

        $z1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace>;

        if $z1 != 0 goto label14;

        $r6 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r7 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label14:
        $r11 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i8, i9);

        $r12 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i8, i9);

        if z6 == 0 goto label15;

        $r4 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r5 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label15:
        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = z7;

        $r2 = <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event CHARACTERS>;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler$Event lastEvent> = $r2;

        $r3 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.BitSet currentContainedTextElements>;

        $i4 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int textElementIdx>;

        virtualinvoke $r3.<java.util.BitSet: void set(int)>($i4);

        return;
    }

    java.util.List getTextBlocks()
    {
        java.util.List $r1;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.List textBlocks>;

        return $r1;
    }

    void flushBlock()
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r1, $r2, $r5, $r10, $r11, $r15, $r16, $r19, $r22, $r23;
        java.lang.String[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, $i19;
        java.lang.String $r6, $r7, r12, $r13, $r14, $r17, $r18, $r20, $r21;
        de.l3s.boilerpipe.document.TextBlock $r24;
        java.util.BitSet $r8, $r25;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $i0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inBody>;

        if $i0 != 0 goto label02;

        $r18 = "TITLE";

        $r17 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String lastStartTag>;

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z5 == 0 goto label01;

        $i9 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int inBody>;

        if $i9 != 0 goto label01;

        $r19 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void setTitle(java.lang.String)>($r21);

     label01:
        $r22 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r22.<java.lang.StringBuilder: void setLength(int)>(0);

        $r23 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r23.<java.lang.StringBuilder: void setLength(int)>(0);

        return;

     label02:
        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        lookupswitch($i1)
        {
            case 0: goto label03;
            case 1: goto label04;
            default: goto label05;
        };

     label03:
        return;

     label04:
        $z0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace>;

        if $z0 == 0 goto label05;

        $r15 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r15.<java.lang.StringBuilder: void setLength(int)>(0);

        $r16 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(0);

        return;

     label05:
        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        $r3 = staticinvoke <de.l3s.boilerpipe.util.UnicodeTokenizer: java.lang.String[] tokenize(java.lang.CharSequence)>($r2);

        i10 = 0;

        i11 = 0;

        i12 = 0;

        $i19 = (int) -1;

        i13 = $i19;

        i14 = 0;

        i15 = 0;

        $i8 = lengthof $r3;

        i16 = 0;

     label06:
        if i16 >= $i8 goto label13;

        r12 = $r3[i16];

        $r13 = "$\ue00a<";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z1 == 0 goto label07;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean inAnchorText> = 1;

        goto label12;

     label07:
        $r14 = ">\ue00a$";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 == 0 goto label08;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean inAnchorText> = 0;

        goto label12;

     label08:
        $z3 = staticinvoke <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean isWord(java.lang.String)>(r12);

        if $z3 == 0 goto label11;

        i14 = i14 + 1;

        i10 = i10 + 1;

        i15 = i15 + 1;

        $z4 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean inAnchorText>;

        if $z4 == 0 goto label09;

        i11 = i11 + 1;

     label09:
        $i5 = virtualinvoke r12.<java.lang.String: int length()>();

        $i6 = $i5 + 1;

        $i7 = i13 + $i6;

        i13 = $i7;

        if $i7 <= 80 goto label10;

        i12 = i12 + 1;

        i13 = $i5;

        i15 = 1;

     label10:
        goto label12;

     label11:
        i14 = i14 + 1;

     label12:
        i16 = i16 + 1;

        goto label06;

     label13:
        if i14 != 0 goto label14;

        return;

     label14:
        if i12 != 0 goto label15;

        i17 = i10;

        i12 = 1;

        goto label16;

     label15:
        i17 = i10 - i15;

     label16:
        $r24 = new de.l3s.boilerpipe.document.TextBlock;

        $r5 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.BitSet currentContainedTextElements>;

        $i2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int offsetBlocks>;

        specialinvoke $r24.<de.l3s.boilerpipe.document.TextBlock: void <init>(java.lang.String,java.util.BitSet,int,int,int,int,int)>($r7, $r8, i10, i11, i17, i12, $i2);

        $r25 = new java.util.BitSet;

        specialinvoke $r25.<java.util.BitSet: void <init>()>();

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.BitSet currentContainedTextElements> = $r25;

        $i3 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int offsetBlocks>;

        $i4 = $i3 + 1;

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: int offsetBlocks> = $i4;

        $r10 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r10.<java.lang.StringBuilder: void setLength(int)>(0);

        $r11 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r11.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void addTextBlock(de.l3s.boilerpipe.document.TextBlock)>($r24);

        return;
    }

    protected void addTextBlock(de.l3s.boilerpipe.document.TextBlock)
    {
        java.lang.Integer r13;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String $r12;
        java.util.LinkedList $r1, $r3;
        boolean $z0, $z1;
        java.util.Iterator $r2, $r4;
        java.util.List $r6;
        de.l3s.boilerpipe.document.TextBlock r5;
        de.l3s.boilerpipe.labels.LabelAction r14;
        java.lang.Object $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r5 := @parameter0: de.l3s.boilerpipe.document.TextBlock;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.LinkedList fontSizeStack>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.Integer) $r8;

        if r13 == null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<de.l3s.boilerpipe.document.TextBlock: void addLabel(java.lang.String)>($r12);

        goto label3;

     label2:
        goto label1;

     label3:
        $r3 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.LinkedList labelStack>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (de.l3s.boilerpipe.labels.LabelAction) $r7;

        if r14 == null goto label5;

        virtualinvoke r14.<de.l3s.boilerpipe.labels.LabelAction: void addTo(de.l3s.boilerpipe.document.TextBlock)>(r5);

     label5:
        goto label4;

     label6:
        $r6 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.List textBlocks>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

        return;
    }

    private static boolean isWord(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.regex.Pattern PAT_VALID_WORD_CHARACTER>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    public java.lang.String getTitle()
    {
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String $r1;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String title>;

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r1;

        r1 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        r1.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String title> = r0;

        return;
    }

    public de.l3s.boilerpipe.document.TextDocument toTextDocument()
    {
        de.l3s.boilerpipe.document.TextDocument $r1;
        java.util.List $r3;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        java.lang.String $r2;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: void flushBlock()>();

        $r1 = new de.l3s.boilerpipe.document.TextDocument;

        $r2 = virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String getTitle()>();

        $r3 = virtualinvoke r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.List getTextBlocks()>();

        specialinvoke $r1.<de.l3s.boilerpipe.document.TextDocument: void <init>(java.lang.String,java.util.List)>($r2, $r3);

        return $r1;
    }

    public void addWhitespaceIfNecessary()
    {
        java.lang.StringBuilder $r1, $r2;
        de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler r0;
        boolean $z0;

        r0 := @this: de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler;

        $z0 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace>;

        if $z0 != 0 goto label1;

        $r1 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder tokenBuffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r2 = r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.StringBuilder textBuffer>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        r0.<de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: boolean sbLastWasWhitespace> = 1;

     label1:
        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String ANCHOR_TEXT_END> = ">\ue00a$";

        <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.lang.String ANCHOR_TEXT_START> = "$\ue00a<";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\p{L}\\p{Nd}\\p{Nl}\\p{No}]");

        <de.l3s.boilerpipe.sax.BoilerpipeHTMLContentHandler: java.util.regex.Pattern PAT_VALID_WORD_CHARACTER> = $r0;

        return;
    }
}
