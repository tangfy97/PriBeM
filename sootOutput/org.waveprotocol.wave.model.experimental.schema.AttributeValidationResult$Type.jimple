public final enum class org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type VALID;
    public static final enum org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type ATTRIBUTE_NOT_ALLOWED;
    public static final enum org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type INVALID_ATTRIBUTE_VALUE;
    public static final enum org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type MISSING_REQUIRED_ATTRIBUTE;
    public static final enum org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type REMOVING_REQUIRED_ATTRIBUTE;
    private static final org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] $VALUES;

    public static org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type $r2;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/model/experimental/schema/AttributeValidationResult$Type;", r0);

        $r2 = (org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] $r5;
        org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        $r0 = new org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        specialinvoke $r0.<org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: void <init>(java.lang.String,int)>("VALID", 0);

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type VALID> = $r0;

        $r1 = new org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        specialinvoke $r1.<org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: void <init>(java.lang.String,int)>("ATTRIBUTE_NOT_ALLOWED", 1);

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type ATTRIBUTE_NOT_ALLOWED> = $r1;

        $r2 = new org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        specialinvoke $r2.<org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: void <init>(java.lang.String,int)>("INVALID_ATTRIBUTE_VALUE", 2);

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type INVALID_ATTRIBUTE_VALUE> = $r2;

        $r3 = new org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        specialinvoke $r3.<org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: void <init>(java.lang.String,int)>("MISSING_REQUIRED_ATTRIBUTE", 3);

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type MISSING_REQUIRED_ATTRIBUTE> = $r3;

        $r4 = new org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type;

        specialinvoke $r4.<org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: void <init>(java.lang.String,int)>("REMOVING_REQUIRED_ATTRIBUTE", 4);

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type REMOVING_REQUIRED_ATTRIBUTE> = $r4;

        $r5 = newarray (org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type)[5];

        $r6 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type VALID>;

        $r5[0] = $r6;

        $r7 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type ATTRIBUTE_NOT_ALLOWED>;

        $r5[1] = $r7;

        $r8 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type INVALID_ATTRIBUTE_VALUE>;

        $r5[2] = $r8;

        $r9 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type MISSING_REQUIRED_ATTRIBUTE>;

        $r5[3] = $r9;

        $r10 = <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type REMOVING_REQUIRED_ATTRIBUTE>;

        $r5[4] = $r10;

        <org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type: org.waveprotocol.wave.model.experimental.schema.AttributeValidationResult$Type[] $VALUES> = $r5;

        return;
    }
}
