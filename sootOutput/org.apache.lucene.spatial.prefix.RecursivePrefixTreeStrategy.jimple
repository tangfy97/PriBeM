public class org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy extends org.apache.lucene.spatial.prefix.PrefixTreeStrategy
{
    private int prefixGridScanLevel;

    public void <init>(org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree, java.lang.String)
    {
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree r1;
        int $i0, $i1;
        java.lang.String r2;
        org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy r0;

        r0 := @this: org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy;

        r1 := @parameter0: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.PrefixTreeStrategy: void <init>(org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,java.lang.String,boolean)>(r1, r2, 1);

        $i0 = virtualinvoke r1.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: int getMaxLevels()>();

        $i1 = $i0 - 4;

        r0.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: int prefixGridScanLevel> = $i1;

        return;
    }

    public void setPrefixGridScanLevel(int)
    {
        int i0;
        org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy r0;

        r0 := @this: org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: int prefixGridScanLevel> = i0;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r8;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.Class $r2;
        java.lang.String $r3, $r11;
        org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy r1;

        r1 := @this: org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(prefixGridScanLevel:");

        $i0 = r1.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: int prefixGridScanLevel>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",SPG:(");

        $r8 = r1.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public org.apache.lucene.search.Filter makeFilter(org.apache.lucene.spatial.query.SpatialArgs)
    {
        org.apache.lucene.spatial.query.UnsupportedSpatialOperation $r10;
        com.spatial4j.core.shape.Shape $r3;
        org.apache.lucene.spatial.query.SpatialArgs r0;
        int $i0, $i1, $i2;
        java.lang.String $r12, $r15, $r18, $r21;
        double $d0, $d1;
        org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree $r6, $r13, $r16, $r19;
        com.spatial4j.core.context.SpatialContext $r5;
        org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter $r17;
        org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter $r11;
        org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy r4;
        org.apache.lucene.spatial.query.SpatialOperation $r1, $r2, $r7, $r8, $r9;
        org.apache.lucene.spatial.prefix.WithinPrefixTreeFilter $r14;
        org.apache.lucene.spatial.DisjointSpatialFilter $r20;

        r4 := @this: org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy;

        r0 := @parameter0: org.apache.lucene.spatial.query.SpatialArgs;

        $r1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: org.apache.lucene.spatial.query.SpatialOperation getOperation()>();

        $r2 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsDisjointTo>;

        if $r1 != $r2 goto label1;

        $r20 = new org.apache.lucene.spatial.DisjointSpatialFilter;

        $r21 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: java.lang.String getFieldName()>();

        specialinvoke $r20.<org.apache.lucene.spatial.DisjointSpatialFilter: void <init>(org.apache.lucene.spatial.SpatialStrategy,org.apache.lucene.spatial.query.SpatialArgs,java.lang.String)>(r4, r0, $r21);

        return $r20;

     label1:
        $r3 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: com.spatial4j.core.shape.Shape getShape()>();

        $r6 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $r5 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: com.spatial4j.core.context.SpatialContext ctx>;

        $d0 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: double distErrPct>;

        $d1 = virtualinvoke r0.<org.apache.lucene.spatial.query.SpatialArgs: double resolveDistErr(com.spatial4j.core.context.SpatialContext,double)>($r5, $d0);

        $i0 = virtualinvoke $r6.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: int getLevelForDistance(double)>($d1);

        $r7 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Intersects>;

        if $r1 != $r7 goto label2;

        $r17 = new org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter;

        $r18 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: java.lang.String getFieldName()>();

        $r19 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $i2 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: int prefixGridScanLevel>;

        specialinvoke $r17.<org.apache.lucene.spatial.prefix.IntersectsPrefixTreeFilter: void <init>(com.spatial4j.core.shape.Shape,java.lang.String,org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,int,int,boolean)>($r3, $r18, $r19, $i0, $i2, 1);

        return $r17;

     label2:
        $r8 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation IsWithin>;

        if $r1 != $r8 goto label3;

        $r14 = new org.apache.lucene.spatial.prefix.WithinPrefixTreeFilter;

        $r15 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: java.lang.String getFieldName()>();

        $r16 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        $i1 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: int prefixGridScanLevel>;

        specialinvoke $r14.<org.apache.lucene.spatial.prefix.WithinPrefixTreeFilter: void <init>(com.spatial4j.core.shape.Shape,java.lang.String,org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,int,int,double)>($r3, $r15, $r16, $i0, $i1, -1.0);

        return $r14;

     label3:
        $r9 = <org.apache.lucene.spatial.query.SpatialOperation: org.apache.lucene.spatial.query.SpatialOperation Contains>;

        if $r1 != $r9 goto label4;

        $r11 = new org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter;

        $r12 = virtualinvoke r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: java.lang.String getFieldName()>();

        $r13 = r4.<org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy: org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree grid>;

        specialinvoke $r11.<org.apache.lucene.spatial.prefix.ContainsPrefixTreeFilter: void <init>(com.spatial4j.core.shape.Shape,java.lang.String,org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree,int)>($r3, $r12, $r13, $i0);

        return $r11;

     label4:
        $r10 = new org.apache.lucene.spatial.query.UnsupportedSpatialOperation;

        specialinvoke $r10.<org.apache.lucene.spatial.query.UnsupportedSpatialOperation: void <init>(org.apache.lucene.spatial.query.SpatialOperation)>($r1);

        throw $r10;
    }
}
