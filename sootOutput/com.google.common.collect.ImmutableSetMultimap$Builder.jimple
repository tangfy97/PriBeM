public final class com.google.common.collect.ImmutableSetMultimap$Builder extends com.google.common.collect.ImmutableMultimap$Builder
{

    public void <init>()
    {
        com.google.common.collect.ImmutableSetMultimap$Builder r0;
        com.google.common.collect.ImmutableSetMultimap$BuilderMultimap $r1;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: void <init>()>();

        $r1 = new com.google.common.collect.ImmutableSetMultimap$BuilderMultimap;

        specialinvoke $r1.<com.google.common.collect.ImmutableSetMultimap$BuilderMultimap: void <init>()>();

        r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap> = $r1;

        return;
    }

    public com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, $r3, r4, $r5;
        com.google.common.collect.Multimap $r2;
        com.google.common.collect.ImmutableSetMultimap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke $r2.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r3, $r5);

        return r0;
    }

    public com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object, java.lang.Iterable)
    {
        java.util.Iterator $r6;
        java.util.Collection $r4;
        com.google.common.collect.Multimap $r2;
        com.google.common.collect.ImmutableSetMultimap$Builder r0;
        java.lang.Iterable r5;
        java.lang.Object r1, $r3, $r7, $r8;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Iterable;

        $r2 = r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r2.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>($r3);

        $r6 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r0;
    }

    public transient com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object, java.lang.Object[])
    {
        java.util.List $r3;
        java.lang.Object[] r2;
        java.lang.Object r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r4;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r4 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)>(r1, $r3);

        return $r4;
    }

    public com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.google.common.collect.Multimap r0;
        com.google.common.collect.ImmutableSetMultimap$Builder r4;
        java.lang.Iterable $r9;
        java.util.Map $r1;
        java.lang.Object $r5, $r7, $r8;
        boolean $z0;

        r4 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r0 := @parameter0: com.google.common.collect.Multimap;

        $r1 = interfaceinvoke r0.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.Iterable) $r8;

        virtualinvoke r4.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)>($r7, $r9);

        goto label1;

     label2:
        return r4;
    }

    public com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator)
    {
        java.lang.Object $r3;
        java.util.Comparator r2, $r5;
        com.google.common.collect.Multimap $r4;
        com.google.common.collect.ImmutableSetMultimap$Builder r0;
        com.google.common.collect.ImmutableSetMultimap$SortedKeyBuilderMultimap $r1;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r2 := @parameter0: java.util.Comparator;

        $r1 = new com.google.common.collect.ImmutableSetMultimap$SortedKeyBuilderMultimap;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = (java.util.Comparator) $r3;

        $r4 = r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        specialinvoke $r1.<com.google.common.collect.ImmutableSetMultimap$SortedKeyBuilderMultimap: void <init>(java.util.Comparator,com.google.common.collect.Multimap)>($r5, $r4);

        r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap> = $r1;

        return r0;
    }

    public com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator)
    {
        java.util.Comparator r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<com.google.common.collect.ImmutableMultimap$Builder: com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableSetMultimap build()
    {
        java.util.Comparator $r1;
        com.google.common.collect.Multimap $r2;
        com.google.common.collect.ImmutableSetMultimap$Builder r0;
        com.google.common.collect.ImmutableSetMultimap $r3;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        $r2 = r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.Multimap builderMultimap>;

        $r1 = r0.<com.google.common.collect.ImmutableSetMultimap$Builder: java.util.Comparator valueComparator>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap,java.util.Comparator)>($r2, $r1);

        return $r3;
    }

    public volatile com.google.common.collect.ImmutableMultimap build()
    {
        com.google.common.collect.ImmutableSetMultimap$Builder r0;
        com.google.common.collect.ImmutableSetMultimap $r1;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap build()>();

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator)
    {
        java.util.Comparator r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.util.Comparator;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator)
    {
        java.util.Comparator r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.util.Comparator;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap)
    {
        com.google.common.collect.Multimap r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r2;
        java.lang.Object r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r3;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object, java.lang.Iterable)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r3;
        java.lang.Iterable r2;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable)>(r1, r2);

        return $r3;
    }

    public volatile com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.google.common.collect.ImmutableSetMultimap$Builder r0, $r3;

        r0 := @this: com.google.common.collect.ImmutableSetMultimap$Builder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSetMultimap$Builder: com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }
}
