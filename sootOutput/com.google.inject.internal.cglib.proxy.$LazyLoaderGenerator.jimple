class com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator extends java.lang.Object implements com.google.inject.internal.cglib.proxy.$CallbackGenerator
{
    public static final com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator INSTANCE;
    private static final com.google.inject.internal.cglib.core.$Signature LOAD_OBJECT;
    private static final com.google.inject.internal.asm.$Type LAZY_LOADER;

    void <init>()
    {
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator r0;

        r0 := @this: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generate(com.google.inject.internal.cglib.core.$ClassEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        java.lang.Integer $r5, $r20;
        com.google.inject.internal.cglib.core.$Signature $r13, $r17, $r22;
        boolean $z0, $z1, $z2;
        java.util.List r1;
        com.google.inject.internal.cglib.core.$ClassEmitter r10;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r16;
        com.google.inject.internal.cglib.core.$CodeEmitter $r14, $r21;
        com.google.inject.internal.cglib.core.$ClassInfo $r23;
        java.util.HashSet $r0;
        java.lang.StringBuffer $r6, $r7, $r8;
        int $i0, $i1, $i2;
        com.google.inject.internal.asm.$Type $r11, $r18, $r24;
        com.google.inject.internal.asm.$Label $r15;
        java.lang.String $r9;
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator r12;
        java.util.Iterator $r2, $r3;
        java.lang.Object $r4, $r19;
        com.google.inject.internal.cglib.core.$MethodInfo r25;

        r12 := @this: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator;

        r10 := @parameter0: com.google.inject.internal.cglib.core.$ClassEmitter;

        r16 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r1 := @parameter2: java.util.List;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r19 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.google.inject.internal.cglib.core.$MethodInfo) $r19;

        $i1 = virtualinvoke r25.<com.google.inject.internal.cglib.core.$MethodInfo: int getModifiers()>();

        $z2 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: boolean isProtected(int)>($i1);

        if $z2 == 0 goto label2;

        goto label3;

     label2:
        $i2 = interfaceinvoke r16.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: int getIndex(com.google.inject.internal.cglib.core.$MethodInfo)>(r25);

        $r20 = new java.lang.Integer;

        specialinvoke $r20.<java.lang.Integer: void <init>(int)>($i2);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r20);

        $r21 = interfaceinvoke r16.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: com.google.inject.internal.cglib.core.$CodeEmitter beginMethod(com.google.inject.internal.cglib.core.$ClassEmitter,com.google.inject.internal.cglib.core.$MethodInfo)>(r10, r25);

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_this()>();

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void dup()>();

        $r22 = specialinvoke r12.<com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.core.$Signature loadMethod(int)>($i2);

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void invoke_virtual_this(com.google.inject.internal.cglib.core.$Signature)>($r22);

        $r23 = virtualinvoke r25.<com.google.inject.internal.cglib.core.$MethodInfo: com.google.inject.internal.cglib.core.$ClassInfo getClassInfo()>();

        $r24 = virtualinvoke $r23.<com.google.inject.internal.cglib.core.$ClassInfo: com.google.inject.internal.asm.$Type getType()>();

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void checkcast(com.google.inject.internal.asm.$Type)>($r24);

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_args()>();

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void invoke(com.google.inject.internal.cglib.core.$MethodInfo)>(r25);

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void return_value()>();

        virtualinvoke $r21.<com.google.inject.internal.cglib.core.$CodeEmitter: void end_method()>();

     label3:
        goto label1;

     label4:
        $r3 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CGLIB$LAZY_LOADER_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = <com.google.inject.internal.cglib.core.$Constants: com.google.inject.internal.asm.$Type TYPE_OBJECT>;

        virtualinvoke r10.<com.google.inject.internal.cglib.core.$ClassEmitter: void declare_field(int,java.lang.String,com.google.inject.internal.asm.$Type,java.lang.Object)>(2, $r9, $r11, null);

        $r13 = specialinvoke r12.<com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.core.$Signature loadMethod(int)>($i0);

        $r14 = virtualinvoke r10.<com.google.inject.internal.cglib.core.$ClassEmitter: com.google.inject.internal.cglib.core.$CodeEmitter begin_method(int,com.google.inject.internal.cglib.core.$Signature,com.google.inject.internal.asm.$Type[])>(50, $r13, null);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_this()>();

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void getfield(java.lang.String)>($r9);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void dup()>();

        $r15 = virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: com.google.inject.internal.asm.$Label make_label()>();

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void ifnonnull(com.google.inject.internal.asm.$Label)>($r15);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void pop()>();

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void load_this()>();

        interfaceinvoke r16.<com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context: void emitCallback(com.google.inject.internal.cglib.core.$CodeEmitter,int)>($r14, $i0);

        $r18 = <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.asm.$Type LAZY_LOADER>;

        $r17 = <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.core.$Signature LOAD_OBJECT>;

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void invoke_interface(com.google.inject.internal.asm.$Type,com.google.inject.internal.cglib.core.$Signature)>($r18, $r17);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void dup_x1()>();

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void putfield(java.lang.String)>($r9);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void mark(com.google.inject.internal.asm.$Label)>($r15);

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void return_value()>();

        virtualinvoke $r14.<com.google.inject.internal.cglib.core.$CodeEmitter: void end_method()>();

        goto label5;

     label6:
        return;
    }

    private com.google.inject.internal.cglib.core.$Signature loadMethod(int)
    {
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator r7;
        com.google.inject.internal.asm.$Type[] $r5;
        java.lang.StringBuffer $r1, $r2, $r3;
        int i0;
        com.google.inject.internal.asm.$Type $r6;
        java.lang.String $r4;
        com.google.inject.internal.cglib.core.$Signature $r0;

        r7 := @this: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator;

        i0 := @parameter0: int;

        $r0 = new com.google.inject.internal.cglib.core.$Signature;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CGLIB$LOAD_PRIVATE_");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = <com.google.inject.internal.cglib.core.$Constants: com.google.inject.internal.asm.$Type TYPE_OBJECT>;

        $r5 = <com.google.inject.internal.cglib.core.$Constants: com.google.inject.internal.asm.$Type[] TYPES_EMPTY>;

        specialinvoke $r0.<com.google.inject.internal.cglib.core.$Signature: void <init>(java.lang.String,com.google.inject.internal.asm.$Type,com.google.inject.internal.asm.$Type[])>($r4, $r6, $r5);

        return $r0;
    }

    public void generateStatic(com.google.inject.internal.cglib.core.$CodeEmitter, com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context, java.util.List)
    {
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator r0;
        java.util.List r3;
        com.google.inject.internal.cglib.core.$CodeEmitter r1;
        com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context r2;

        r0 := @this: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator;

        r1 := @parameter0: com.google.inject.internal.cglib.core.$CodeEmitter;

        r2 := @parameter1: com.google.inject.internal.cglib.proxy.$CallbackGenerator$Context;

        r3 := @parameter2: java.util.List;

        return;
    }

    static void <clinit>()
    {
        com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator $r0;
        com.google.inject.internal.asm.$Type $r2;
        com.google.inject.internal.cglib.core.$Signature $r1;

        $r0 = new com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator;

        specialinvoke $r0.<com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: void <init>()>();

        <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator INSTANCE> = $r0;

        $r1 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.cglib.core.$Signature parseSignature(java.lang.String)>("Object loadObject()");

        <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.cglib.core.$Signature LOAD_OBJECT> = $r1;

        $r2 = staticinvoke <com.google.inject.internal.cglib.core.$TypeUtils: com.google.inject.internal.asm.$Type parseType(java.lang.String)>("com.google.inject.internal.cglib.proxy.$LazyLoader");

        <com.google.inject.internal.cglib.proxy.$LazyLoaderGenerator: com.google.inject.internal.asm.$Type LAZY_LOADER> = $r2;

        return;
    }
}
