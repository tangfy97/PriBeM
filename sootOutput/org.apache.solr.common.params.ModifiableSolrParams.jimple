public class org.apache.solr.common.params.ModifiableSolrParams extends org.apache.solr.common.params.SolrParams
{
    private java.util.Map vals;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        org.apache.solr.common.params.ModifiableSolrParams r0;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        specialinvoke r0.<org.apache.solr.common.params.SolrParams: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map r1;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.solr.common.params.SolrParams: void <init>()>();

        r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals> = r1;

        return;
    }

    public void <init>(org.apache.solr.common.params.SolrParams)
    {
        java.util.LinkedHashMap $r1;
        org.apache.solr.common.params.ModifiableSolrParams r0;
        org.apache.solr.common.params.SolrParams r2;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r2 := @parameter0: org.apache.solr.common.params.SolrParams;

        specialinvoke r0.<org.apache.solr.common.params.SolrParams: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals> = $r1;

        if r2 == null goto label1;

        virtualinvoke r0.<org.apache.solr.common.params.ModifiableSolrParams: void add(org.apache.solr.common.params.SolrParams)>(r2);

     label1:
        return;
    }

    public transient org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, java.lang.String[])
    {
        org.apache.solr.common.params.ModifiableSolrParams r1;
        java.util.Map $r3, $r4;
        int $i0;
        java.lang.String[] r0;
        java.lang.String r2, $r5;

        r1 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 1 goto label2;

        $r5 = r0[0];

        if $r5 != null goto label2;

     label1:
        $r3 = r1.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        goto label3;

     label2:
        $r4 = r1.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label3:
        return r1;
    }

    public org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, int)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        int i0;
        java.lang.String[] $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r2[0] = $r3;

        virtualinvoke r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>(r1, $r2);

        return r0;
    }

    public org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String, boolean)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.lang.String[] $r2;
        java.lang.String r1, $r3;
        boolean z0;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        $r2[0] = $r3;

        virtualinvoke r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>(r1, $r2);

        return r0;
    }

    public transient org.apache.solr.common.params.ModifiableSolrParams add(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r2, r5, $r8, r9;
        java.util.Map $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r1;
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.lang.Object $r4;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r3 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r5 = (java.lang.String[]) $r4;

        if r5 == null goto label3;

        if r2 == null goto label1;

        $i4 = lengthof r2;

        if $i4 >= 1 goto label2;

     label1:
        $i0 = lengthof r5;

        $i1 = $i0 + 1;

        $r8 = newarray (java.lang.String)[$i1];

        $i2 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r8, 0, $i2);

        $i3 = lengthof r5;

        $r8[$i3] = null;

        $r6 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        goto label3;

     label2:
        $i6 = lengthof r5;

        $i5 = lengthof r2;

        $i7 = $i6 + $i5;

        r9 = newarray (java.lang.String)[$i7];

        $i8 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r9, 0, $i8);

        $i10 = lengthof r5;

        $i9 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r9, $i10, $i9);

        $r7 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r9);

     label3:
        return r0;
    }

    public void add(org.apache.solr.common.params.SolrParams)
    {
        java.util.Iterator $r1;
        org.apache.solr.common.params.ModifiableSolrParams r4;
        java.lang.Object $r2;
        java.lang.String[] $r5;
        java.lang.String r3;
        org.apache.solr.common.params.SolrParams r0;
        boolean $z0;

        r4 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r0 := @parameter0: org.apache.solr.common.params.SolrParams;

        $r1 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.util.Iterator getParameterNamesIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = virtualinvoke r0.<org.apache.solr.common.params.SolrParams: java.lang.String[] getParams(java.lang.String)>(r3);

        virtualinvoke r4.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>(r3, $r5);

        goto label1;

     label2:
        return;
    }

    public java.lang.String[] remove(java.lang.String)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public void clear()
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        $r1 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean remove(java.lang.String, java.lang.String)
    {
        java.lang.String[] r4, r7;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.String r1, r5, $r6;
        boolean $z0;
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.lang.Object $r3;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String[]) $r3;

        if r4 != null goto label1;

        return 0;

     label1:
        i8 = 0;

     label2:
        $i0 = lengthof r4;

        if i8 >= $i0 goto label6;

        $r6 = r4[i8];

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label5;

        $i1 = lengthof r4;

        $i2 = $i1 - 1;

        r7 = newarray (java.lang.String)[$i2];

        $i3 = lengthof r7;

        if $i3 != 0 goto label3;

        virtualinvoke r0.<org.apache.solr.common.params.ModifiableSolrParams: java.lang.String[] remove(java.lang.String)>(r1);

        goto label4;

     label3:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r7, 0, i8);

        $i7 = i8 + 1;

        $i4 = lengthof r4;

        $i5 = $i4 - i8;

        $i6 = $i5 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i7, r7, i8, $i6);

        virtualinvoke r0.<org.apache.solr.common.params.ModifiableSolrParams: org.apache.solr.common.params.ModifiableSolrParams set(java.lang.String,java.lang.String[])>(r1, r7);

     label4:
        return 1;

     label5:
        i8 = i8 + 1;

        goto label2;

     label6:
        return 0;
    }

    public java.lang.String get(java.lang.String)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.String[] r4;
        java.lang.String r1, $r5;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.String[]) $r3;

        if r4 == null goto label1;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label1;

        $r5 = r4[0];

        return $r5;

     label1:
        return null;
    }

    public java.util.Iterator getParameterNamesIterator()
    {
        java.util.Iterator $r3;
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        $r1 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Set getParameterNames()
    {
        java.util.Set $r2;
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        $r1 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.String[] getParams(java.lang.String)
    {
        org.apache.solr.common.params.ModifiableSolrParams r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String[] $r4;
        java.lang.String r1;

        r0 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.String[] r11;
        java.util.Map $r2;
        int i0, i1;
        java.lang.String $r5, r9, r12, $r13;
        boolean $z0, z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        org.apache.solr.common.params.ModifiableSolrParams r1;
        java.util.Set $r3;
        java.io.IOException $r14;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6, $r8, $r10;

        r1 := @this: org.apache.solr.common.params.ModifiableSolrParams;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(128);

     label1:
        z1 = 1;

        $r2 = r1.<org.apache.solr.common.params.ModifiableSolrParams: java.util.Map vals>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (java.lang.String[]) $r10;

        i0 = lengthof r11;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r12 = r11[i1];

        if z1 != 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

     label4:
        z1 = 0;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        if r12 == null goto label5;

        $r13 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r12, "UTF-8");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        goto label2;

     label7:
        goto label9;

     label8:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label9:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.io.IOException from label1 to label7 with label8;
    }
}
