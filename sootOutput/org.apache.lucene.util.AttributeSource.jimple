public class org.apache.lucene.util.AttributeSource extends java.lang.Object
{
    private final java.util.Map attributes;
    private final java.util.Map attributeImpls;
    private final org.apache.lucene.util.AttributeSource$State[] currentState;
    private final org.apache.lucene.util.AttributeSource$AttributeFactory factory;
    private static final org.apache.lucene.util.WeakIdentityMap knownImplClasses;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r1;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.util.AttributeSource: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)>($r1);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory $r5;
        java.util.Map $r2, $r3;
        org.apache.lucene.util.AttributeSource r0, r1;
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.util.AttributeSource$State[] $r4;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("input AttributeSource must not be null");

        throw $r6;

     label1:
        $r2 = r1.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes> = $r2;

        $r3 = r1.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls> = $r3;

        $r4 = r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState>;

        r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState> = $r4;

        $r5 = r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory>;

        r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory> = $r5;

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)
    {
        java.util.LinkedHashMap $r1, $r2;
        org.apache.lucene.util.AttributeSource$AttributeFactory r4;
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$State[] $r3;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r4 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls> = $r2;

        $r3 = newarray (org.apache.lucene.util.AttributeSource$State)[1];

        r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState> = $r3;

        r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory> = r4;

        return;
    }

    public final org.apache.lucene.util.AttributeSource$AttributeFactory getAttributeFactory()
    {
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$AttributeFactory $r1;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory>;

        return $r1;
    }

    public final java.util.Iterator getAttributeClassesIterator()
    {
        java.util.Iterator $r4;
        java.util.Map $r1;
        org.apache.lucene.util.AttributeSource r0;
        java.util.Set $r2, $r3;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public final java.util.Iterator getAttributeImplsIterator()
    {
        org.apache.lucene.util.AttributeSource$1 $r4;
        java.util.Iterator $r3;
        org.apache.lucene.util.AttributeSource r0;
        java.util.Set $r2;
        org.apache.lucene.util.AttributeSource$State $r1;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

        if $r1 == null goto label1;

        $r4 = new org.apache.lucene.util.AttributeSource$1;

        specialinvoke $r4.<org.apache.lucene.util.AttributeSource$1: void <init>(org.apache.lucene.util.AttributeSource,org.apache.lucene.util.AttributeSource$State)>(r0, $r1);

        return $r4;

     label1:
        $r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    static java.util.LinkedList getAttributeInterfaces(java.lang.Class)
    {
        org.apache.lucene.util.WeakIdentityMap $r1, $r6;
        int $i0, i1;
        java.util.LinkedList $r3, r11;
        java.lang.ref.WeakReference $r9;
        boolean $z0;
        java.lang.Class[] $r4;
        java.lang.Class r0, $r5, r7, $r8, $r10, r12;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <org.apache.lucene.util.AttributeSource: org.apache.lucene.util.WeakIdentityMap knownImplClasses>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (java.util.LinkedList) $r2;

        if r11 != null goto label5;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r11 = $r3;

        r12 = r0;

     label1:
        $r4 = virtualinvoke r12.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r4;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        r7 = $r4[i1];

        if r7 == class "Lorg/apache/lucene/util/Attribute;" goto label3;

        $r8 = class "Lorg/apache/lucene/util/Attribute;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7);

        if $z0 == 0 goto label3;

        $r9 = new java.lang.ref.WeakReference;

        $r10 = virtualinvoke r7.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/lucene/util/Attribute;");

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r10);

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r5 = virtualinvoke r12.<java.lang.Class: java.lang.Class getSuperclass()>();

        r12 = $r5;

        if $r5 != null goto label1;

        $r6 = <org.apache.lucene.util.AttributeSource: org.apache.lucene.util.WeakIdentityMap knownImplClasses>;

        virtualinvoke $r6.<org.apache.lucene.util.WeakIdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label5:
        return r11;
    }

    public final void addAttributeImpl(org.apache.lucene.util.AttributeImpl)
    {
        java.lang.AssertionError $r14;
        java.util.Map $r3, $r10, $r12, $r13;
        org.apache.lucene.util.AttributeSource r2;
        java.util.LinkedList $r4;
        java.lang.ref.WeakReference r7;
        org.apache.lucene.util.AttributeSource$State[] $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        org.apache.lucene.util.AttributeImpl r0;
        java.lang.Class $r1, r9;
        java.lang.Object $r6, $r8;

        r2 := @this: org.apache.lucene.util.AttributeSource;

        r0 := @parameter0: org.apache.lucene.util.AttributeImpl;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = r2.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = staticinvoke <org.apache.lucene.util.AttributeSource: java.util.LinkedList getAttributeInterfaces(java.lang.Class)>($r1);

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.ref.WeakReference) $r6;

        $r8 = virtualinvoke r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r9 = (java.lang.Class) $r8;

        $z2 = <org.apache.lucene.util.AttributeSource: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        if r9 != null goto label3;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>("We have a strong reference on the class holding the interfaces, so they should never get evicted");

        throw $r14;

     label3:
        $r10 = r2.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $z3 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r9);

        if $z3 != 0 goto label4;

        $r11 = r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState>;

        $r11[0] = null;

        $r12 = r2.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r0);

        $r13 = r2.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

     label4:
        goto label2;

     label5:
        return;
    }

    public final org.apache.lucene.util.Attribute addAttribute(java.lang.Class)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory $r14;
        java.util.Map $r2;
        org.apache.lucene.util.AttributeSource r0;
        java.lang.String $r9, $r12;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.util.AttributeImpl $r15, r16;
        java.lang.Class r1, $r13;
        java.lang.Object $r3, $r4;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        org.apache.lucene.util.Attribute $r5;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r16 = (org.apache.lucene.util.AttributeImpl) $r3;

        if r16 != null goto label3;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r13 = class "Lorg/apache/lucene/util/Attribute;";

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 != 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAttribute() only accepts an interface that extends Attribute, but ");

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fulfil this contract.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        $r14 = r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory>;

        $r15 = virtualinvoke $r14.<org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeImpl createAttributeInstance(java.lang.Class)>(r1);

        r16 = $r15;

        virtualinvoke r0.<org.apache.lucene.util.AttributeSource: void addAttributeImpl(org.apache.lucene.util.AttributeImpl)>($r15);

     label3:
        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r16);

        $r5 = (org.apache.lucene.util.Attribute) $r4;

        return $r5;
    }

    public final boolean hasAttributes()
    {
        java.util.Map $r1;
        org.apache.lucene.util.AttributeSource r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final boolean hasAttribute(java.lang.Class)
    {
        java.util.Map $r2;
        org.apache.lucene.util.AttributeSource r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public final org.apache.lucene.util.Attribute getAttribute(java.lang.Class)
    {
        java.lang.IllegalArgumentException $r7;
        org.apache.lucene.util.AttributeImpl r4;
        java.util.Map $r2;
        org.apache.lucene.util.AttributeSource r0;
        java.lang.Class r1;
        java.lang.Object $r3, $r5;
        java.lang.StringBuilder $r8, $r9, $r11, $r12;
        org.apache.lucene.util.Attribute $r6;
        java.lang.String $r10, $r13;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.lucene.util.AttributeImpl) $r3;

        if r4 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This AttributeSource does not have the attribute \'");

        $r10 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label1:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r4);

        $r6 = (org.apache.lucene.util.Attribute) $r5;

        return $r6;
    }

    private org.apache.lucene.util.AttributeSource$State getCurrentState()
    {
        java.util.Map $r4;
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$State[] $r1, $r3;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        org.apache.lucene.util.AttributeSource$State $r2, $r9, r12, r13;
        org.apache.lucene.util.AttributeImpl $r8, $r11;
        java.lang.Object $r7, $r10;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState>;

        r12 = $r1[0];

        if r12 != null goto label1;

        $z0 = virtualinvoke r0.<org.apache.lucene.util.AttributeSource: boolean hasAttributes()>();

        if $z0 != 0 goto label2;

     label1:
        return r12;

     label2:
        $r3 = r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State[] currentState>;

        $r2 = new org.apache.lucene.util.AttributeSource$State;

        specialinvoke $r2.<org.apache.lucene.util.AttributeSource$State: void <init>()>();

        $r3[0] = $r2;

        r13 = $r2;

        $r4 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.lucene.util.AttributeImpl) $r7;

        $r2.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute> = $r8;

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = new org.apache.lucene.util.AttributeSource$State;

        specialinvoke $r9.<org.apache.lucene.util.AttributeSource$State: void <init>()>();

        r13.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next> = $r9;

        r13 = r13.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (org.apache.lucene.util.AttributeImpl) $r10;

        r13.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute> = $r11;

        goto label3;

     label4:
        return $r2;
    }

    public final void clearAttributes()
    {
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeImpl $r1;
        org.apache.lucene.util.AttributeSource$State r2;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r2 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label1:
        if r2 == null goto label2;

        $r1 = r2.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        virtualinvoke $r1.<org.apache.lucene.util.AttributeImpl: void clear()>();

        r2 = r2.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label1;

     label2:
        return;
    }

    public final org.apache.lucene.util.AttributeSource$State captureState()
    {
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$State $r1, $r2;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        $r1 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State clone()>();

     label2:
        return $r2;
    }

    public final void restoreState(org.apache.lucene.util.AttributeSource$State)
    {
        java.util.Map $r2;
        org.apache.lucene.util.AttributeSource r0;
        java.lang.String $r12, $r15;
        org.apache.lucene.util.AttributeSource$State r16;
        java.lang.IllegalArgumentException $r7;
        org.apache.lucene.util.AttributeImpl $r1, $r5, $r6, $r10;
        java.lang.Class $r3, $r11;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9, $r13, $r14;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r16 := @parameter0: org.apache.lucene.util.AttributeSource$State;

        if r16 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $r1 = r16.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (org.apache.lucene.util.AttributeImpl) $r4;

        if $r6 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State contains AttributeImpl of type ");

        $r10 = r16.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not in in this AttributeSource");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r7;

     label2:
        $r5 = r16.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        virtualinvoke $r5.<org.apache.lucene.util.AttributeImpl: void copyTo(org.apache.lucene.util.AttributeImpl)>($r6);

        r16 = r16.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        if r16 != null goto label1;

        return;
    }

    public int hashCode()
    {
        org.apache.lucene.util.AttributeImpl $r1;
        int $i0, $i1, i2;
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$State r2;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        i2 = 0;

        r2 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label1:
        if r2 == null goto label2;

        $i0 = i2 * 31;

        $r1 = r2.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i2 = $i0 + $i1;

        r2 = r2.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label1;

     label2:
        return i2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r3, $r4;
        int $i0, $i1;
        org.apache.lucene.util.AttributeSource r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.util.AttributeSource$State r11, r12;
        org.apache.lucene.util.AttributeImpl $r5, $r7, $r9, $r10;
        java.lang.Object r0;
        java.lang.Class $r6, $r8;

        r1 := @this: org.apache.lucene.util.AttributeSource;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof org.apache.lucene.util.AttributeSource;

        if $z0 == 0 goto label11;

        r2 = (org.apache.lucene.util.AttributeSource) r0;

        $z1 = virtualinvoke r1.<org.apache.lucene.util.AttributeSource: boolean hasAttributes()>();

        if $z1 == 0 goto label08;

        $z3 = virtualinvoke r2.<org.apache.lucene.util.AttributeSource: boolean hasAttributes()>();

        if $z3 != 0 goto label02;

        return 0;

     label02:
        $r3 = r1.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = r2.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $i1 = interfaceinvoke $r4.<java.util.Map: int size()>();

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        r11 = specialinvoke r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

        r12 = specialinvoke r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label04:
        if r11 == null goto label07;

        if r12 == null goto label07;

        $r5 = r12.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = r11.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        if $r6 != $r8 goto label05;

        $r10 = r12.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r9 = r11.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $z4 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label06;

     label05:
        return 0;

     label06:
        r11 = r11.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        r12 = r12.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label04;

     label07:
        return 1;

     label08:
        $z2 = virtualinvoke r2.<org.apache.lucene.util.AttributeSource: boolean hasAttributes()>();

        if $z2 != 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        return $z5;

     label11:
        return 0;
    }

    public final java.lang.String reflectAsString(boolean)
    {
        org.apache.lucene.util.AttributeSource$2 $r2;
        org.apache.lucene.util.AttributeSource r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        boolean z0;

        r1 := @this: org.apache.lucene.util.AttributeSource;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = new org.apache.lucene.util.AttributeSource$2;

        specialinvoke $r2.<org.apache.lucene.util.AttributeSource$2: void <init>(org.apache.lucene.util.AttributeSource,java.lang.StringBuilder,boolean)>(r1, $r0, z0);

        virtualinvoke r1.<org.apache.lucene.util.AttributeSource: void reflectWith(org.apache.lucene.util.AttributeReflector)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final void reflectWith(org.apache.lucene.util.AttributeReflector)
    {
        org.apache.lucene.util.AttributeReflector r1;
        org.apache.lucene.util.AttributeImpl $r2;
        org.apache.lucene.util.AttributeSource r0;
        org.apache.lucene.util.AttributeSource$State r3;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: org.apache.lucene.util.AttributeReflector;

        r3 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label1:
        if r3 == null goto label2;

        $r2 = r3.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        virtualinvoke $r2.<org.apache.lucene.util.AttributeImpl: void reflectWith(org.apache.lucene.util.AttributeReflector)>(r1);

        r3 = r3.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label1;

     label2:
        return;
    }

    public final org.apache.lucene.util.AttributeSource cloneAttributes()
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory $r2;
        java.util.Map $r3, $r8, $r10, $r16;
        org.apache.lucene.util.AttributeSource $r0, r1;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        org.apache.lucene.util.AttributeSource$State r20;
        org.apache.lucene.util.AttributeImpl $r12, $r15, $r18, $r19;
        java.lang.Object $r6, $r9, $r11, $r14;
        java.lang.Class $r13, $r17;

        r1 := @this: org.apache.lucene.util.AttributeSource;

        $r0 = new org.apache.lucene.util.AttributeSource;

        $r2 = r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$AttributeFactory factory>;

        specialinvoke $r0.<org.apache.lucene.util.AttributeSource: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory)>($r2);

        $z0 = virtualinvoke r1.<org.apache.lucene.util.AttributeSource: boolean hasAttributes()>();

        if $z0 == 0 goto label4;

        r20 = specialinvoke r1.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label1:
        if r20 == null goto label2;

        $r16 = $r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $r15 = r20.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r17 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = r20.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r19 = virtualinvoke $r18.<org.apache.lucene.util.AttributeImpl: org.apache.lucene.util.AttributeImpl clone()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r19);

        r20 = r20.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label1;

     label2:
        $r3 = r1.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = $r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributes>;

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = $r0.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (org.apache.lucene.util.AttributeImpl) $r11;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r14);

        goto label3;

     label4:
        return $r0;
    }

    public final void copyTo(org.apache.lucene.util.AttributeSource)
    {
        java.util.Map $r3;
        org.apache.lucene.util.AttributeSource r0, r1;
        java.lang.String $r13, $r16;
        org.apache.lucene.util.AttributeSource$State r17;
        java.lang.IllegalArgumentException $r8;
        org.apache.lucene.util.AttributeImpl $r2, r6, $r7, $r11;
        java.lang.Class $r4, $r12;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r14, $r15;

        r0 := @this: org.apache.lucene.util.AttributeSource;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource;

        r17 = specialinvoke r0.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.AttributeSource$State getCurrentState()>();

     label1:
        if r17 == null goto label3;

        $r3 = r1.<org.apache.lucene.util.AttributeSource: java.util.Map attributeImpls>;

        $r2 = r17.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.lucene.util.AttributeImpl) $r5;

        if r6 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This AttributeSource contains AttributeImpl of type ");

        $r11 = r17.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that is not in the target");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        $r7 = r17.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeImpl attribute>;

        virtualinvoke $r7.<org.apache.lucene.util.AttributeImpl: void copyTo(org.apache.lucene.util.AttributeImpl)>(r6);

        r17 = r17.<org.apache.lucene.util.AttributeSource$State: org.apache.lucene.util.AttributeSource$State next>;

        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.lucene.util.WeakIdentityMap $r1;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/AttributeSource;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.AttributeSource: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.lucene.util.WeakIdentityMap: org.apache.lucene.util.WeakIdentityMap newConcurrentHashMap(boolean)>(0);

        <org.apache.lucene.util.AttributeSource: org.apache.lucene.util.WeakIdentityMap knownImplClasses> = $r1;

        return;
    }
}
