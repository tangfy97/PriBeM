public class org.apache.cxf.jaxrs.impl.RequestPreprocessor extends java.lang.Object
{
    private static final java.lang.String ACCEPT_QUERY;
    private static final java.lang.String CTYPE_QUERY;
    private static final java.lang.String METHOD_QUERY;
    private static final java.lang.String METHOD_HEADER;
    private static final java.lang.String SCHEMA_EXTENSION;
    private static final java.lang.String WADL_EXTENSION;
    private static final java.util.Map SHORTCUTS;
    private java.util.Map languageMappings;
    private java.util.Map extensionMappings;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void <init>(java.util.Map,java.util.Map)>(null, null);

        return;
    }

    public void <init>(java.util.Map, java.util.Map)
    {
        java.util.Map r1, r2, $r3, $r4;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map languageMappings> = $r3;

        if r2 != null goto label3;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label4;

     label3:
        $r4 = r2;

     label4:
        r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map extensionMappings> = $r4;

        return;
    }

    public java.lang.String preprocess(org.apache.cxf.message.Message, javax.ws.rs.core.UriInfo)
    {
        org.apache.cxf.message.Message r1;
        org.apache.cxf.message.Exchange $r8;
        javax.ws.rs.core.MultivaluedMap $r3;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r4;
        javax.ws.rs.core.Response $r5;
        org.apache.cxf.jaxrs.impl.UriInfoImpl $r6;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r0;
        javax.ws.rs.core.UriInfo r2;
        java.lang.String $r7;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: javax.ws.rs.core.UriInfo;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)>(r1, r2);

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)>(r1, r2);

        $r3 = interfaceinvoke r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r1, $r3);

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r1, $r3);

        $r4 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        specialinvoke $r4.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r1);

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)>(r1, $r3, $r4);

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)>(r1, r2);

        if $r5 == null goto label1;

        $r8 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        interfaceinvoke $r8.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Ljavax/ws/rs/core/Response;", $r5);

     label1:
        $r6 = new org.apache.cxf.jaxrs.impl.UriInfoImpl;

        specialinvoke $r6.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>(r1, null);

        $r7 = virtualinvoke $r6.<org.apache.cxf.jaxrs.impl.UriInfoImpl: java.lang.String getPath()>();

        return $r7;
    }

    private void handleLanguageMappings(org.apache.cxf.message.Message, javax.ws.rs.core.UriInfo)
    {
        java.util.Map $r1, $r6;
        java.lang.String $r4, $r5, $r15, $r18, $r20, $r21;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r10;
        java.util.Iterator $r8;
        org.apache.cxf.message.Message r16;
        java.util.Set $r7;
        org.apache.cxf.jaxrs.impl.PathSegmentImpl $r2;
        java.lang.Object $r9, $r13, $r17, $r19;
        java.lang.StringBuilder $r11, $r12, $r14;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r0;
        javax.ws.rs.core.UriInfo r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r16 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: javax.ws.rs.core.UriInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map languageMappings>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        $r4 = interfaceinvoke r3.<javax.ws.rs.core.UriInfo: java.lang.String getPath(boolean)>(0);

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: java.lang.String getPath()>();

        $r6 = r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map languageMappings>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r15);

        if $z2 == 0 goto label3;

        $r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)>(r16, $r18);

        $r19 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        $r21 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: java.lang.String getMatrixString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void updatePath(org.apache.cxf.message.Message,java.lang.String,java.lang.String,java.lang.String)>(r16, $r5, $r20, $r21);

        goto label4;

     label3:
        goto label2;

     label4:
        return;
    }

    private void handleExtensionMappings(org.apache.cxf.message.Message, javax.ws.rs.core.UriInfo)
    {
        java.util.Map $r1, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Set $r7;
        org.apache.cxf.jaxrs.impl.PathSegmentImpl $r2;
        java.lang.StringBuilder $r13, $r14, $r15, $r24, $r25, $r26;
        javax.ws.rs.core.UriInfo r3;
        java.lang.String $r4, $r5, $r12, $r16, $r19, $r20, $r21, $r22, r27, $r28;
        java.util.Map$Entry r10;
        java.util.Iterator $r8;
        org.apache.cxf.message.Message r17;
        java.lang.Object $r9, $r11, $r18, $r23;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r17 := @parameter0: org.apache.cxf.message.Message;

        r3 := @parameter1: javax.ws.rs.core.UriInfo;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map extensionMappings>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        $r4 = interfaceinvoke r3.<javax.ws.rs.core.UriInfo: java.lang.String getPath(boolean)>(0);

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: java.lang.String getPath()>();

        $r6 = r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map extensionMappings>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r16);

        if $z2 == 0 goto label5;

        $r18 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)>(r17, $r19);

        $r20 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: java.lang.String getMatrixString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void updatePath(org.apache.cxf.message.Message,java.lang.String,java.lang.String,java.lang.String)>(r17, $r5, $r12, $r20);

        $r21 = "wadl";

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label6;

        $r22 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r23 = interfaceinvoke r17.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r22);

        r27 = (java.lang.String) $r23;

        $z4 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r27);

        if $z4 == 0 goto label3;

        r27 = "_wadl";

        goto label4;

     label3:
        $z5 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>("_wadl");

        if $z5 != 0 goto label4;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&_wadl");

        r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r28 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        interfaceinvoke r17.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r27);

        goto label6;

     label5:
        goto label2;

     label6:
        return;
    }

    private void updateAcceptLanguageHeader(org.apache.cxf.message.Message, java.lang.String)
    {
        org.apache.cxf.message.Message r0;
        java.util.ArrayList $r9;
        java.util.List r11;
        java.util.Map $r3, $r8;
        java.lang.Object $r2, $r4, $r7;
        java.lang.String $r1, r5, $r6;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r10;

        r10 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r5 := @parameter1: java.lang.String;

        $r1 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.Map) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("Accept-Language");

        r11 = (java.util.List) $r4;

        if r11 != null goto label1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r11 = $r9;

     label1:
        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r6 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r7 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.util.Map) $r7;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Language", r11);

        return;
    }

    private void updatePath(org.apache.cxf.message.Message, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.cxf.message.Message r4;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String r0, r1, $r2, r3, r9;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r8;

        r8 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r4 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $i3 = $i0 - $i2;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        r9 = $r2;

        if r3 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: void updatePath(org.apache.cxf.message.Message,java.lang.String)>(r4, r9);

        return;
    }

    private void handleMethod(org.apache.cxf.message.Message, javax.ws.rs.core.MultivaluedMap, javax.ws.rs.core.HttpHeaders)
    {
        org.apache.cxf.message.Message r2;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.List $r4;
        javax.ws.rs.core.HttpHeaders r3;
        int $i0;
        java.lang.Object $r1, $r5;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r6;
        java.lang.String r7;

        r6 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r2 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter2: javax.ws.rs.core.HttpHeaders;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_method");

        r7 = (java.lang.String) $r1;

        if r7 != null goto label1;

        $r4 = interfaceinvoke r3.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("X-HTTP-Method-Override");

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (java.lang.String) $r5;

     label1:
        if r7 == null goto label2;

        interfaceinvoke r2.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.cxf.request.method", r7);

     label2:
        return;
    }

    private void handleTypeQuery(org.apache.cxf.message.Message, javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.message.Message r4;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.Map $r2, $r5;
        java.lang.Object $r1, $r6;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r3;
        java.lang.String r7;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r4 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_type");

        r7 = (java.lang.String) $r1;

        if r7 == null goto label2;

        $r2 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r7);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r7 = (java.lang.String) $r6;

     label1:
        specialinvoke r3.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)>(r4, r7);

     label2:
        return;
    }

    private void handleCType(org.apache.cxf.message.Message, javax.ws.rs.core.MultivaluedMap)
    {
        org.apache.cxf.message.Message r3;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.Map $r2, $r4;
        java.lang.Object $r1, $r5;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r6;
        java.lang.String r7;
        boolean $z0;

        r6 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r3 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_ctype");

        r7 = (java.lang.String) $r1;

        if r7 == null goto label2;

        $r2 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r7);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r7 = (java.lang.String) $r5;

     label1:
        interfaceinvoke r3.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", r7);

     label2:
        return;
    }

    private void updateAcceptTypeHeader(org.apache.cxf.message.Message, java.lang.String)
    {
        java.util.List $r5;
        org.apache.cxf.message.Message r0;
        java.util.Map $r4;
        java.lang.Object $r3;
        java.lang.String r1, $r2;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r6;

        r6 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", r1);

        $r2 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", $r5);

        return;
    }

    public javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message, javax.ws.rs.core.UriInfo)
    {
        java.lang.String r2, $r3, r5, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.message.Message r0;
        javax.ws.rs.core.Response $r7, $r11;
        java.lang.Object $r1, $r4;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r6;
        javax.ws.rs.core.UriInfo r12;

        r6 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r12 := @parameter1: javax.ws.rs.core.UriInfo;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        r2 = (java.lang.String) $r1;

        $r3 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("_wadl");

        if $z2 == 0 goto label2;

        $r8 = staticinvoke <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String getValueWithoutSlash(java.lang.String)>(r2);

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getBaseAddress(org.apache.cxf.message.Message)>(r0);

        $r10 = staticinvoke <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String getValueWithoutSlash(java.lang.String)>($r9);

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label1;

        $r11 = specialinvoke r6.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)>(r0);

        return $r11;

     label1:
        goto label4;

     label2:
        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xsd");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>(".wadl");

        if $z1 == 0 goto label4;

     label3:
        $r7 = specialinvoke r6.<org.apache.cxf.jaxrs.impl.RequestPreprocessor: javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)>(r0);

        return $r7;

     label4:
        return null;
    }

    private javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;
        java.util.List $r2;
        org.apache.cxf.jaxrs.model.ProviderInfo $r4, $r7;
        javax.ws.rs.core.Response $r10;
        int $i0;
        java.lang.Object $r3, $r5, $r6, $r8;
        org.apache.cxf.jaxrs.ext.RequestHandler $r9;
        org.apache.cxf.jaxrs.impl.RequestPreprocessor r11;
        boolean $z0;

        r11 := @this: org.apache.cxf.jaxrs.impl.RequestPreprocessor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getRequestHandlers()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r3;

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $z0 = $r5 instanceof org.apache.cxf.jaxrs.model.wadl.WadlGenerator;

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r6;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r9 = (org.apache.cxf.jaxrs.ext.RequestHandler) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.cxf.jaxrs.ext.RequestHandler: javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r0, null);

        return $r10;

     label1:
        return null;
    }

    private static java.lang.String getValueWithoutSlash(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    static void <clinit>()
    {
        java.util.Map $r1, $r2, $r3, $r4, $r5, $r6;
        java.util.HashMap $r0;

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String WADL_EXTENSION> = ".wadl";

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String SCHEMA_EXTENSION> = ".xsd";

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String METHOD_HEADER> = "X-HTTP-Method-Override";

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String METHOD_QUERY> = "_method";

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String CTYPE_QUERY> = "_ctype";

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.lang.String ACCEPT_QUERY> = "_type";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS> = $r0;

        $r1 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("json", "application/json");

        $r2 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("text", "text/*");

        $r3 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("xml", "application/xml");

        $r4 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("atom", "application/atom+xml");

        $r5 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("html", "text/html");

        $r6 = <org.apache.cxf.jaxrs.impl.RequestPreprocessor: java.util.Map SHORTCUTS>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("wadl", "application/vnd.sun.wadl+xml");

        return;
    }
}
