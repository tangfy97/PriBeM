public class thredds.wcs.v1_0_0_Plus.GetCoverage extends thredds.wcs.v1_0_0_Plus.WcsRequest
{
    private static org.slf4j.Logger log;
    private thredds.wcs.v1_0_0_Plus.WcsCoverage coverage;
    private ucar.unidata.geoloc.LatLonRect requestLatLonBBox;
    private thredds.wcs.v1_0_0_Plus.AxisSubset requestVertSubset;
    private ucar.nc2.units.DateRange timeRange;
    private java.util.List rangeSubset;
    private thredds.wcs.v1_0_0_Plus.WcsRequest$Format format;
    private boolean isSingleTimeRequest;
    private boolean isSingleVerticalRequest;
    private boolean isSingleRangeFieldRequest;

    public void <init>(thredds.wcs.v1_0_0_Plus.WcsRequest$Operation, java.lang.String, thredds.wcs.v1_0_0_Plus.WcsDataset, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r22, $r36, $r51, $r62, $r73, $r75, $r77, $r88, $r90, $r97, $r104, $r117;
        thredds.wcs.v1_0_0_Plus.WcsCoverage $r7, $r8, $r10, $r12, $r27, $r55, $r58, $r71, $r83;
        java.lang.StringBuilder $r31, $r33, $r34, $r41, $r42, $r43, $r44, $r46, $r48, $r49, $r63, $r65, $r66, $r67, $r68, $r69, $r78, $r80, $r81, $r82, $r85, $r86, $r91, $r93, $r94, $r95, $r98, $r100, $r101, $r102, $r107, $r108, $r109, $r110, $r112, $r114, $r115;
        java.lang.StringBuffer $r30;
        thredds.wcs.v1_0_0_Plus.WcsDataset r3, $r5, $r6;
        thredds.wcs.v1_0_0_Plus.WcsRequest$Operation r1;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r23, $r37, $r52, $r64, $r74, $r76, $r79, $r89, $r92, $r99, $r105, $r118;
        org.slf4j.Logger $r21, $r32, $r47, $r113;
        ucar.nc2.units.DateRange $r53;
        ucar.nc2.dt.GridCoordSystem $r13, $r56, $r59;
        thredds.wcs.v1_0_0_Plus.AxisSubset $r61;
        java.lang.String r2, r4, r9, $r11, $r15, r16, r17, r18, r19, r20, $r24, $r35, $r38, $r45, $r50, $r70, $r72, $r84, $r87, $r96, $r103, $r111, $r116;
        ucar.unidata.geoloc.LatLonRect $r57;
        ucar.unidata.geoloc.ProjectionImpl $r14;
        ucar.nc2.dataset.CoordinateAxis1D $r60;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        thredds.wcs.v1_0_0_Plus.GetCoverage r0;
        java.util.List $r119;
        java.lang.String[] $r54;
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format $r25, $r26, $r28, $r29, $r39, $r40;
        java.lang.IllegalArgumentException $r106;

        r0 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r1 := @parameter0: thredds.wcs.v1_0_0_Plus.WcsRequest$Operation;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: thredds.wcs.v1_0_0_Plus.WcsDataset;

        r4 := @parameter3: java.lang.String;

        r9 := @parameter4: java.lang.String;

        r16 := @parameter5: java.lang.String;

        r17 := @parameter6: java.lang.String;

        r18 := @parameter7: java.lang.String;

        r19 := @parameter8: java.lang.String;

        r20 := @parameter9: java.lang.String;

        specialinvoke r0.<thredds.wcs.v1_0_0_Plus.WcsRequest: void <init>(thredds.wcs.v1_0_0_Plus.WcsRequest$Operation,java.lang.String,thredds.wcs.v1_0_0_Plus.WcsDataset)>(r1, r2, r3);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleTimeRequest> = 0;

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleVerticalRequest> = 0;

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleRangeFieldRequest> = 0;

        if r4 != null goto label01;

        $r104 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r105 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code MissingParameterValue>;

        specialinvoke $r104.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r105, "coverage", "Coverage identifier required.");

        throw $r104;

     label01:
        $r5 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset getDataset()>();

        $z0 = virtualinvoke $r5.<thredds.wcs.v1_0_0_Plus.WcsDataset: boolean isAvailableCoverageName(java.lang.String)>(r4);

        if $z0 != 0 goto label02;

        $r97 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r99 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown coverage identifier <");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r97.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r99, "coverage", $r103);

        throw $r97;

     label02:
        $r6 = virtualinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsDataset getDataset()>();

        $r7 = virtualinvoke $r6.<thredds.wcs.v1_0_0_Plus.WcsDataset: thredds.wcs.v1_0_0_Plus.WcsCoverage getAvailableCoverage(java.lang.String)>(r4);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage> = $r7;

        $r8 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        if $r8 != null goto label03;

        $r90 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r92 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown coverage identifier <");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r92, "coverage", $r96);

        throw $r90;

     label03:
        if r9 != null goto label04;

        $r88 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r89 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code MissingParameterValue>;

        specialinvoke $r88.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r89, "CRS", "Request CRS required.");

        throw $r88;

     label04:
        $r10 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r11 = virtualinvoke $r10.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getDefaultRequestCrs()>();

        $z1 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z1 != 0 goto label05;

        $r77 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r79 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request CRS <");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not allowed <");

        $r83 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r84 = virtualinvoke $r83.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getDefaultRequestCrs()>();

        $r85 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r77.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r79, "CRS", $r87);

        throw $r77;

     label05:
        $r12 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r13 = virtualinvoke $r12.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r14 = interfaceinvoke $r13.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $r15 = staticinvoke <ucar.unidata.geoloc.ogc.EPSG_OGC_CF_Helper: java.lang.String getWcs1_0CrsId(ucar.unidata.geoloc.Projection)>($r14);

        if $r15 != null goto label06;

        $r75 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r76 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code CoverageNotDefined>;

        specialinvoke $r75.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r76, "", "Coverage not in recognized CRS. (???)");

        throw $r75;

     label06:
        if r16 != null goto label07;

        $r71 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r72 = virtualinvoke $r71.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.lang.String getDefaultRequestCrs()>();

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r72);

        if $z10 != 0 goto label08;

        $r73 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r74 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code MissingParameterValue>;

        specialinvoke $r73.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r74, "Response_CRS", "Response CRS required.");

        throw $r73;

     label07:
        $z2 = virtualinvoke r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);

        if $z2 != 0 goto label08;

        $r62 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r64 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Respnse CRS <");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not allowed <");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r64, "response_CRS", $r70);

        throw $r62;

     label08:
        if r17 == null goto label09;

        $z9 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z9 != 0 goto label09;

        $r54 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: java.lang.String[] splitBoundingBox(java.lang.String)>(r17);

        $r55 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r56 = virtualinvoke $r55.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r57 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.unidata.geoloc.LatLonRect genRequestLatLonBoundingBox(java.lang.String[],ucar.nc2.dt.GridCoordSystem)>($r54, $r56);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.unidata.geoloc.LatLonRect requestLatLonBBox> = $r57;

        $r58 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r59 = virtualinvoke $r58.<thredds.wcs.v1_0_0_Plus.WcsCoverage: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r60 = interfaceinvoke $r59.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r60 == null goto label09;

        $r61 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.AxisSubset genRequestVertSubset(java.lang.String[],ucar.nc2.dataset.CoordinateAxis1D)>($r54, $r60);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.AxisSubset requestVertSubset> = $r61;

     label09:
        if r18 == null goto label10;

        $z8 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z8 != 0 goto label10;

        $r53 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.nc2.units.DateRange parseTime(java.lang.String)>(r18);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.nc2.units.DateRange timeRange> = $r53;

     label10:
        $r119 = specialinvoke r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: java.util.List parseRangeSubset(java.lang.String)>(r19);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: java.util.List rangeSubset> = $r119;

        if r20 == null goto label11;

        $z3 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label12;

     label11:
        $r21 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String)>("GetCoverage(): FORMAT parameter required.");

        $r22 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r23 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r22.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r23, "FORMAT", "FORMAT parameter required.");

        throw $r22;

     label12:
        $r24 = virtualinvoke r20.<java.lang.String: java.lang.String trim()>();

        $r25 = staticinvoke <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format valueOf(java.lang.String)>($r24);

        r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format> = $r25;

     label13:
        goto label15;

     label14:
        $r106 := @caughtexception;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown format value [");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        $r113 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetCoverage(): ");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r113.<org.slf4j.Logger: void error(java.lang.String)>($r116);

        $r117 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r118 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r117.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r118, "FORMAT", $r111);

        throw $r117;

     label15:
        $r27 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r26 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format>;

        $z4 = virtualinvoke $r27.<thredds.wcs.v1_0_0_Plus.WcsCoverage: boolean isSupportedCoverageFormat(thredds.wcs.v1_0_0_Plus.WcsRequest$Format)>($r26);

        if $z4 != 0 goto label16;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported format value [");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r47 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetCoverage(): ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r47.<org.slf4j.Logger: void error(java.lang.String)>($r50);

        $r51 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r52 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r51.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r52, "FORMAT", $r45);

        throw $r51;

     label16:
        $r29 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format>;

        $r28 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF>;

        if $r29 == $r28 goto label17;

        $r40 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format>;

        $r39 = <thredds.wcs.v1_0_0_Plus.WcsRequest$Format: thredds.wcs.v1_0_0_Plus.WcsRequest$Format GeoTIFF_Float>;

        if $r40 != $r39 goto label21;

     label17:
        $z5 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleTimeRequest>;

        if $z5 != 0 goto label21;

        $z6 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleVerticalRequest>;

        if $z6 != 0 goto label21;

        $z7 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleRangeFieldRequest>;

        if $z7 != 0 goto label21;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>(java.lang.String)>("GeoTIFF supported only for requests at a single time [");

        if r18 == null goto label18;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r18);

     label18:
        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] and a single vertical level [");

        if r17 == null goto label19;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

     label19:
        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] and a single range field [");

        if r19 == null goto label20;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r19);

     label20:
        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r32 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GetCoverage(): ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String)>($r35);

        $r36 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r37 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r38 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r37, "FORMAT", $r38);

        throw $r36;

     label21:
        return;

        catch java.lang.IllegalArgumentException from label12 to label13 with label14;
    }

    public thredds.wcs.v1_0_0_Plus.WcsRequest$Format getFormat()
    {
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format $r1;
        thredds.wcs.v1_0_0_Plus.GetCoverage r0;

        r0 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format>;

        return $r1;
    }

    public java.io.File writeCoverageDataToFile() throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsRequest$Format $r5;
        thredds.wcs.v1_0_0_Plus.GetCoverage r0;
        java.io.File $r7;
        thredds.wcs.v1_0_0_Plus.WcsCoverage $r6;
        ucar.unidata.geoloc.LatLonRect $r4;
        ucar.nc2.units.DateRange $r1;
        java.util.List $r2;
        thredds.wcs.v1_0_0_Plus.AxisSubset $r3;

        r0 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        $r6 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r5 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsRequest$Format format>;

        $r4 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.unidata.geoloc.LatLonRect requestLatLonBBox>;

        $r3 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.AxisSubset requestVertSubset>;

        $r2 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: java.util.List rangeSubset>;

        $r1 = r0.<thredds.wcs.v1_0_0_Plus.GetCoverage: ucar.nc2.units.DateRange timeRange>;

        $r7 = virtualinvoke $r6.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.io.File writeCoverageDataToFile(thredds.wcs.v1_0_0_Plus.WcsRequest$Format,ucar.unidata.geoloc.LatLonRect,thredds.wcs.v1_0_0_Plus.AxisSubset,java.util.List,ucar.nc2.units.DateRange)>($r5, $r4, $r3, $r2, $r1);

        return $r7;
    }

    private java.lang.String[] splitBoundingBox(java.lang.String) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r8;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String r0, $r7, $r14;
        boolean $z0;
        org.slf4j.Logger $r3;
        thredds.wcs.v1_0_0_Plus.GetCoverage r15;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r10;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r9, $r11, $r12, $r13;

        r15 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r1;

        if $i0 == 4 goto label3;

        $i1 = lengthof $r1;

        if $i1 == 6 goto label3;

        $r3 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitBoundingBox(): BBOX <");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must be \"minx,miny,maxx,maxy[,minz,maxz]\".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String)>($r7);

        $r8 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r10 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX <");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not in expected format \"minx,miny,maxx,maxy[,minz,maxz]\".");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r10, "BBOX", $r14);

        throw $r8;

     label3:
        return $r1;
    }

    private ucar.unidata.geoloc.LatLonRect genRequestLatLonBoundingBox(java.lang.String[], ucar.nc2.dt.GridCoordSystem) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r31;
        thredds.wcs.v1_0_0_Plus.GetCoverage r33;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r32;
        ucar.nc2.dt.GridCoordSystem r1;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r17, $r18, $r20, $r21, $r23, $r25, $r26, $r27, $r29;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r12, $r15, $r19, $r22, $r28, $r30;
        double $d0, $d1, $d2, $d3;
        org.slf4j.Logger $r24;
        java.lang.NumberFormatException $r16;
        java.lang.IllegalArgumentException $r9;
        ucar.unidata.geoloc.LatLonRect $r8;
        ucar.unidata.geoloc.LatLonPointImpl $r6, $r7;

        r33 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: ucar.nc2.dt.GridCoordSystem;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $i0 = lengthof r0;

        if $i0 >= 4 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX contains fewer than four items \"");

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label3:
        $r2 = r0[0];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $r3 = r0[1];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r4 = r0[2];

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r5 = r0[3];

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX item(s) have incorrect number format [not double] <");

        $r19 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("genRequestLatLonBoundingBox(): ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r28 = virtualinvoke $r16.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String)>($r30);

        $r31 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r32 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r31.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r32, "BBOX", $r22);

        throw $r31;

     label6:
        $r6 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r6.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d1, $d0);

        $r7 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r7.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d3, $d2);

        $r8 = new ucar.unidata.geoloc.LatLonRect;

        specialinvoke $r8.<ucar.unidata.geoloc.LatLonRect: void <init>(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.LatLonPoint)>($r6, $r7);

        interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonRect getLatLonBoundingBox()>();

        return $r8;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private thredds.wcs.v1_0_0_Plus.AxisSubset genRequestVertSubset(java.lang.String[], ucar.nc2.dataset.CoordinateAxis1D) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r18, $r35, $r52;
        ucar.nc2.dataset.CoordinateAxis1D r1;
        ucar.ma2.Range $r6;
        thredds.wcs.v1_0_0_Plus.GetCoverage r2;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r19, $r36, $r53;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r15, $r16, $r21, $r22, $r24, $r25, $r27, $r29, $r30, $r31, $r33, $r38, $r39, $r41, $r42, $r44, $r46, $r47, $r48, $r50;
        thredds.wcs.v1_0_0_Plus.AxisSubset $r5;
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r4, $r9, $r12, $r17, $r23, $r26, $r32, $r34, $r40, $r43, $r49, $r51;
        double $d0, $d1;
        org.slf4j.Logger $r14, $r28, $r45;
        java.lang.NumberFormatException $r37;
        ucar.ma2.InvalidRangeException $r20;

        r2 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: ucar.nc2.dataset.CoordinateAxis1D;

        if r0 == null goto label01;

        $i1 = lengthof r0;

        if $i1 != 4 goto label04;

     label01:
        if r1 == null goto label02;

        $i0 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: int getShape(int)>(0);

        if $i0 != 1 goto label03;

     label02:
        r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleVerticalRequest> = 1;

     label03:
        return null;

     label04:
        $i2 = lengthof r0;

        if $i2 == 6 goto label05;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX must have 4 or 6 items [");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("genRequestVertSubset(): ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        $r18 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r19 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r18.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r19, "BBOX", $r12);

        throw $r18;

     label05:
        if r1 == null goto label06;

        $i3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis1D: int getShape(int)>(0);

        if $i3 != 1 goto label07;

     label06:
        r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleVerticalRequest> = 1;

        return null;

     label07:
        $r3 = r0[4];

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r4 = r0[5];

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

     label08:
        goto label10;

     label09:
        $r37 := @caughtexception;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX item(s) have incorrect number format (not double) [");

        $r40 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("genRequestVertSubset(): ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r49 = virtualinvoke $r37.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String)>($r51);

        $r52 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r53 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r52.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r53, "BBOX", $r43);

        throw $r52;

     label10:
        $r5 = new thredds.wcs.v1_0_0_Plus.AxisSubset;

        specialinvoke $r5.<thredds.wcs.v1_0_0_Plus.AxisSubset: void <init>(ucar.nc2.dataset.CoordinateAxis1D,double,double,int)>(r1, $d0, $d1, 1);

     label11:
        $r6 = virtualinvoke $r5.<thredds.wcs.v1_0_0_Plus.AxisSubset: ucar.ma2.Range getRange()>();

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BBOX results in invalid array index range [");

        $r23 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("genRequestVertSubset(): ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r32 = virtualinvoke $r20.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>($r34);

        $r35 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r36 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r35.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r36, "BBOX", $r26);

        throw $r35;

     label14:
        $i4 = virtualinvoke $r6.<ucar.ma2.Range: int length()>();

        if $i4 != 1 goto label15;

        r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleVerticalRequest> = 1;

        return null;

     label15:
        return $r5;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch ucar.ma2.InvalidRangeException from label11 to label12 with label13;
    }

    private ucar.nc2.units.DateRange parseTime(java.lang.String) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r44, $r46, $r54;
        java.text.ParseException $r26;
        boolean $z0;
        thredds.wcs.v1_0_0_Plus.GetCoverage r3;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r17, $r25, $r37;
        ucar.nc2.units.DateRange r42, $r49, $r51;
        java.lang.StringBuilder $r12, $r13, $r14, $r20, $r21, $r22, $r29, $r30, $r31, $r33, $r38, $r39, $r40, $r43, $r45, $r52, $r53;
        ucar.nc2.units.DateType $r47, $r48, $r50;
        java.lang.String[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.String r0, $r7, $r9, $r15, $r23, $r32, $r34, $r41;
        org.slf4j.Logger $r11, $r19, $r28;

        r3 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(",");

        $i4 = (int) -1;

        if $i0 == $i4 goto label3;

        $r19 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseTime(): Unsupported time parameter (list) <");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>($r23);

        $r44 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r25 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r44.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r25, "TIME", "Not currently supporting time list.");

        throw $r44;

     label3:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i6 = (int) -1;

        if $i1 == $i6 goto label5;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        $i2 = lengthof $r4;

        if $i2 == 2 goto label4;

        $r11 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseTime(): Unsupported time parameter (time range with resolution) <");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>($r15);

        $r46 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r17 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r46.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r17, "TIME", "Not currently supporting time range with resolution.");

        throw $r46;

     label4:
        $r49 = new ucar.nc2.units.DateRange;

        $r47 = new ucar.nc2.units.DateType;

        $r7 = $r4[0];

        specialinvoke $r47.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, null, null);

        $r48 = new ucar.nc2.units.DateType;

        $r9 = $r4[1];

        specialinvoke $r48.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r9, null, null);

        specialinvoke $r49.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r47, $r48, null, null);

        r42 = $r49;

        goto label6;

     label5:
        $r50 = new ucar.nc2.units.DateType;

        specialinvoke $r50.<ucar.nc2.units.DateType: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, null, null);

        $r51 = new ucar.nc2.units.DateRange;

        specialinvoke $r51.<ucar.nc2.units.DateRange: void <init>(ucar.nc2.units.DateType,ucar.nc2.units.DateType,ucar.nc2.units.TimeDuration,ucar.nc2.units.TimeDuration)>($r50, $r50, null, null);

        r42 = $r51;

        r3.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleTimeRequest> = 1;

     label6:
        goto label8;

     label7:
        $r26 := @caughtexception;

        $r28 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseTime(): Failed to parse time parameter <");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: ");

        $r32 = virtualinvoke $r26.<java.text.ParseException: java.lang.String getMessage()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void error(java.lang.String)>($r34);

        $r54 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r37 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time format <");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r37, "TIME", $r41);

        throw $r54;

     label8:
        return r42;

        catch java.text.ParseException from label2 to label6 with label7;
    }

    private java.util.List parseRangeSubset(java.lang.String) throws thredds.wcs.v1_0_0_Plus.WcsException
    {
        thredds.wcs.v1_0_0_Plus.WcsException $r24;
        java.lang.String[] r5, r20;
        thredds.wcs.v1_0_0_Plus.WcsCoverage $r3, $r7;
        java.util.ArrayList $r21;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.String r1, r6, $r12, $r17;
        boolean $z0, $z1;
        org.slf4j.Logger $r14;
        thredds.wcs.v1_0_0_Plus.GetCoverage r2;
        thredds.wcs.v1_0_0_Plus.WcsException$Code $r19;
        java.util.Set $r4;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r16, $r22, $r23;

        r2 := @this: thredds.wcs.v1_0_0_Plus.GetCoverage;

        r1 := @parameter0: java.lang.String;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        if r1 == null goto label01;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label03;

     label01:
        $r3 = r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $r4 = virtualinvoke $r3.<thredds.wcs.v1_0_0_Plus.WcsCoverage: java.util.Set getRangeFieldNames()>();

        interfaceinvoke $r21.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $i0 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i0 != 1 goto label02;

        r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleRangeFieldRequest> = 1;

     label02:
        return $r21;

     label03:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(";");

        $i6 = (int) -1;

        if $i1 != $i6 goto label04;

        r20 = newarray (java.lang.String)[1];

        r20[0] = r1;

        goto label05;

     label04:
        r20 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label05:
        r5 = r20;

        $i3 = lengthof r20;

        i4 = 0;

     label06:
        if i4 >= $i3 goto label09;

        r6 = r5[i4];

        $r7 = r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: thredds.wcs.v1_0_0_Plus.WcsCoverage coverage>;

        $z1 = virtualinvoke $r7.<thredds.wcs.v1_0_0_Plus.WcsCoverage: boolean isRangeFieldName(java.lang.String)>(r6);

        if $z1 == 0 goto label07;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label08;

     label07:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested range field <");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not available.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parseRangeSubset(): ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>($r17);

        $r24 = new thredds.wcs.v1_0_0_Plus.WcsException;

        $r19 = <thredds.wcs.v1_0_0_Plus.WcsException$Code: thredds.wcs.v1_0_0_Plus.WcsException$Code InvalidParameterValue>;

        specialinvoke $r24.<thredds.wcs.v1_0_0_Plus.WcsException: void <init>(thredds.wcs.v1_0_0_Plus.WcsException$Code,java.lang.String,java.lang.String)>($r19, "RangeSubset", $r12);

        throw $r24;

     label08:
        i4 = i4 + 1;

        goto label06;

     label09:
        $i2 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i2 != 1 goto label10;

        r2.<thredds.wcs.v1_0_0_Plus.GetCoverage: boolean isSingleRangeFieldRequest> = 1;

     label10:
        return $r21;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/wcs/v1_0_0_Plus/GetCoverage;");

        <thredds.wcs.v1_0_0_Plus.GetCoverage: org.slf4j.Logger log> = $r0;

        return;
    }
}
