public class groovy.util.ObservableList extends java.lang.Object implements java.util.List
{
    private java.util.List delegate;
    private java.beans.PropertyChangeSupport pcs;
    private groovy.lang.Closure test;

    public void <init>()
    {
        groovy.util.ObservableList r0;
        java.util.ArrayList $r1;

        r0 := @this: groovy.util.ObservableList;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<groovy.util.ObservableList: void <init>(java.util.List,groovy.lang.Closure)>($r1, null);

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<groovy.util.ObservableList: void <init>(java.util.List,groovy.lang.Closure)>(r1, null);

        return;
    }

    public void <init>(groovy.lang.Closure)
    {
        groovy.lang.Closure r2;
        groovy.util.ObservableList r0;
        java.util.ArrayList $r1;

        r0 := @this: groovy.util.ObservableList;

        r2 := @parameter0: groovy.lang.Closure;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<groovy.util.ObservableList: void <init>(java.util.List,groovy.lang.Closure)>($r1, r2);

        return;
    }

    public void <init>(java.util.List, groovy.lang.Closure)
    {
        java.util.List r1;
        groovy.lang.Closure r2;
        java.beans.PropertyChangeSupport $r3;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: groovy.lang.Closure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.util.ObservableList: java.util.List delegate> = r1;

        r0.<groovy.util.ObservableList: groovy.lang.Closure test> = r2;

        $r3 = new java.beans.PropertyChangeSupport;

        specialinvoke $r3.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs> = $r3;

        return;
    }

    public void add(int, java.lang.Object)
    {
        groovy.util.ObservableList$ElementAddedEvent $r4, $r9;
        groovy.lang.Closure $r3, $r6;
        java.util.List $r2;
        int i0;
        java.beans.PropertyChangeSupport $r5, $r10;
        java.lang.Boolean $r8;
        java.lang.Object r1, $r7;
        groovy.util.ObservableList r0;
        boolean $z0, $z1;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        $r3 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        if $r3 == null goto label2;

        $r6 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        $r7 = virtualinvoke $r6.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>(r1);

        if $r7 == null goto label1;

        $z0 = $r7 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $r10 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r9 = new groovy.util.ObservableList$ElementAddedEvent;

        specialinvoke $r9.<groovy.util.ObservableList$ElementAddedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, r1, i0);

        virtualinvoke $r10.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r9);

     label1:
        goto label3;

     label2:
        $r5 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$ElementAddedEvent;

        specialinvoke $r4.<groovy.util.ObservableList$ElementAddedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, r1, i0);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label3:
        return;
    }

    public boolean add(java.lang.Object)
    {
        groovy.lang.Closure $r3, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r8;
        boolean $z0, $z1, $z2;
        groovy.util.ObservableList$ElementAddedEvent $r4, $r9;
        java.util.List $r2;
        java.beans.PropertyChangeSupport $r5, $r10;
        java.lang.Object r1, $r7;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r3 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        if $r3 == null goto label2;

        $r6 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        $r7 = virtualinvoke $r6.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>(r1);

        if $r7 == null goto label1;

        $z1 = $r7 instanceof java.lang.Boolean;

        if $z1 == 0 goto label1;

        $r8 = (java.lang.Boolean) $r7;

        $z2 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label1;

        $r10 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r9 = new groovy.util.ObservableList$ElementAddedEvent;

        $i2 = virtualinvoke r0.<groovy.util.ObservableList: int size()>();

        $i3 = $i2 - 1;

        specialinvoke $r9.<groovy.util.ObservableList$ElementAddedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, r1, $i3);

        virtualinvoke $r10.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r9);

     label1:
        goto label3;

     label2:
        $r5 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$ElementAddedEvent;

        $i0 = virtualinvoke r0.<groovy.util.ObservableList: int size()>();

        $i1 = $i0 - 1;

        specialinvoke $r4.<groovy.util.ObservableList$ElementAddedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, r1, $i1);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label3:
        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        groovy.lang.Closure $r8, $r9;
        groovy.util.ObservableList$MultiElementAddedEvent $r5;
        java.util.ArrayList $r3;
        int $i0, $i1, i2, $i3, i4;
        java.lang.Boolean $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4;
        java.util.Collection r1;
        java.util.List $r2;
        java.beans.PropertyChangeSupport $r6;
        java.lang.Object $r7, $r10;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.util.Collection;

        $i0 = virtualinvoke r0.<groovy.util.ObservableList: int size()>();

        i2 = $i0 - 1;

        if i2 >= 0 goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = i2;

     label2:
        i4 = $i3;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        if $z0 == 0 goto label8;

        if r1 == null goto label8;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        if $r8 == null goto label5;

        $r9 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        $r10 = virtualinvoke $r9.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>($r7);

        if $r10 == null goto label4;

        $z2 = $r10 instanceof java.lang.Boolean;

        if $z2 == 0 goto label4;

        $r11 = (java.lang.Boolean) $r10;

        $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label4;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label4:
        goto label6;

     label5:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label6:
        goto label3;

     label7:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 <= 0 goto label8;

        $r6 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r5 = new groovy.util.ObservableList$MultiElementAddedEvent;

        specialinvoke $r5.<groovy.util.ObservableList$MultiElementAddedEvent: void <init>(java.lang.Object,int,java.util.List)>(r0, i4, $r3);

        virtualinvoke $r6.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r5);

     label8:
        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        groovy.lang.Closure $r8, $r9;
        groovy.util.ObservableList$MultiElementAddedEvent $r5;
        java.util.ArrayList $r3;
        int i0, $i1;
        java.lang.Boolean $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4;
        java.util.Collection r1;
        java.util.List $r2;
        java.beans.PropertyChangeSupport $r6;
        java.lang.Object $r7, $r10;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r1);

        if $z0 == 0 goto label6;

        if r1 == null goto label6;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        if $r8 == null goto label3;

        $r9 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        $r10 = virtualinvoke $r9.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>($r7);

        if $r10 == null goto label2;

        $z2 = $r10 instanceof java.lang.Boolean;

        if $z2 == 0 goto label2;

        $r11 = (java.lang.Boolean) $r10;

        $z3 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label2;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        goto label4;

     label3:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

     label4:
        goto label1;

     label5:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 <= 0 goto label6;

        $r6 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r5 = new groovy.util.ObservableList$MultiElementAddedEvent;

        specialinvoke $r5.<groovy.util.ObservableList$MultiElementAddedEvent: void <init>(java.lang.Object,int,java.util.List)>(r0, i0, $r3);

        virtualinvoke $r6.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r5);

     label6:
        return $z0;
    }

    public void clear()
    {
        java.util.List $r2, $r3;
        groovy.util.ObservableList$ElementClearedEvent $r4;
        java.beans.PropertyChangeSupport $r5;
        groovy.util.ObservableList r1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @this: groovy.util.ObservableList;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<groovy.util.ObservableList: java.util.List delegate>;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r3 = r1.<groovy.util.ObservableList: java.util.List delegate>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r1.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$ElementClearedEvent;

        specialinvoke $r4.<groovy.util.ObservableList$ElementClearedEvent: void <init>(java.lang.Object,java.util.List)>(r1, $r0);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label1:
        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r1;
        groovy.util.ObservableList r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.List $r2;
        java.util.Collection r1;
        groovy.util.ObservableList r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r2;
        java.lang.Object r1;
        groovy.util.ObservableList r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.List $r2;
        int $i0;
        java.lang.Object r1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.List $r1;
        groovy.util.ObservableList r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        groovy.util.ObservableList$ObservableIterator $r0;
        groovy.util.ObservableList r1;

        r1 := @this: groovy.util.ObservableList;

        $r0 = new groovy.util.ObservableList$ObservableIterator;

        $r2 = r1.<groovy.util.ObservableList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r0.<groovy.util.ObservableList$ObservableIterator: void <init>(groovy.util.ObservableList,java.util.Iterator)>(r1, $r3);

        return $r0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.List $r2;
        int $i0;
        java.lang.Object r1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        groovy.util.ObservableList$ObservableListIterator $r0;
        java.util.List $r2;
        java.util.ListIterator $r3;
        groovy.util.ObservableList r1;

        r1 := @this: groovy.util.ObservableList;

        $r0 = new groovy.util.ObservableList$ObservableListIterator;

        $r2 = r1.<groovy.util.ObservableList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();

        specialinvoke $r0.<groovy.util.ObservableList$ObservableListIterator: void <init>(groovy.util.ObservableList,java.util.ListIterator,int)>(r1, $r3, 0);

        return $r0;
    }

    public java.util.ListIterator listIterator(int)
    {
        groovy.util.ObservableList$ObservableListIterator $r0;
        java.util.List $r2;
        java.util.ListIterator $r3;
        int i0;
        groovy.util.ObservableList r1;

        r1 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        $r0 = new groovy.util.ObservableList$ObservableListIterator;

        $r2 = r1.<groovy.util.ObservableList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        specialinvoke $r0.<groovy.util.ObservableList$ObservableListIterator: void <init>(groovy.util.ObservableList,java.util.ListIterator,int)>(r1, $r3, i0);

        return $r0;
    }

    public java.lang.Object remove(int)
    {
        java.util.List $r1;
        groovy.util.ObservableList$ElementRemovedEvent $r3;
        int i0;
        java.beans.PropertyChangeSupport $r4;
        java.lang.Object $r2;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        $r4 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r3 = new groovy.util.ObservableList$ElementRemovedEvent;

        specialinvoke $r3.<groovy.util.ObservableList$ElementRemovedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, $r2, i0);

        virtualinvoke $r4.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r3);

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        groovy.util.ObservableList$ElementRemovedEvent $r4;
        java.util.List $r2, $r3;
        int $i0;
        java.beans.PropertyChangeSupport $r5;
        java.lang.Object r1;
        groovy.util.ObservableList r0;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        $r3 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$ElementRemovedEvent;

        specialinvoke $r4.<groovy.util.ObservableList$ElementRemovedEvent: void <init>(java.lang.Object,java.lang.Object,int)>(r0, r1, $i0);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label1:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Iterator $r6;
        java.util.Collection r0;
        java.util.ArrayList $r1;
        java.util.List $r3, $r8;
        groovy.util.ObservableList$MultiElementRemovedEvent $r4;
        java.beans.PropertyChangeSupport $r5;
        java.lang.Object $r7;
        groovy.util.ObservableList r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: groovy.util.ObservableList;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if r0 == null goto label4;

        $r6 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r2.<groovy.util.ObservableList: java.util.List delegate>;

        $z3 = interfaceinvoke $r8.<java.util.List: boolean contains(java.lang.Object)>($r7);

        if $z3 == 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        $r3 = r2.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean removeAll(java.util.Collection)>(r0);

        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r5 = r2.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$MultiElementRemovedEvent;

        specialinvoke $r4.<groovy.util.ObservableList$MultiElementRemovedEvent: void <init>(java.lang.Object,java.util.List)>(r2, $r1);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label5:
        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Iterator $r7;
        java.util.Collection r0;
        java.util.ArrayList $r1;
        java.util.List $r3, $r6;
        groovy.util.ObservableList$MultiElementRemovedEvent $r4;
        java.beans.PropertyChangeSupport $r5;
        java.lang.Object $r8;
        groovy.util.ObservableList r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: groovy.util.ObservableList;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if r0 == null goto label4;

        $r6 = r2.<groovy.util.ObservableList: java.util.List delegate>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $z3 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z3 != 0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        goto label2;

     label4:
        $r3 = r2.<groovy.util.ObservableList: java.util.List delegate>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean retainAll(java.util.Collection)>(r0);

        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r5 = r2.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r4 = new groovy.util.ObservableList$MultiElementRemovedEvent;

        specialinvoke $r4.<groovy.util.ObservableList$MultiElementRemovedEvent: void <init>(java.lang.Object,java.util.List)>(r2, $r1);

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

     label5:
        return $z0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        groovy.lang.Closure $r4, $r7;
        groovy.util.ObservableList$ElementUpdatedEvent $r5, $r10;
        java.util.List $r2;
        int i0;
        java.beans.PropertyChangeSupport $r6, $r11;
        java.lang.Boolean $r9;
        java.lang.Object r1, $r3, $r8;
        groovy.util.ObservableList r0;
        boolean $z0, $z1;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        $r4 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        if $r4 == null goto label2;

        $r7 = r0.<groovy.util.ObservableList: groovy.lang.Closure test>;

        $r8 = virtualinvoke $r7.<groovy.lang.Closure: java.lang.Object call(java.lang.Object)>(r1);

        if $r8 == null goto label1;

        $z0 = $r8 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r9 = (java.lang.Boolean) $r8;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $r11 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r10 = new groovy.util.ObservableList$ElementUpdatedEvent;

        specialinvoke $r10.<groovy.util.ObservableList$ElementUpdatedEvent: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,int)>(r0, $r3, r1, i0);

        virtualinvoke $r11.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r10);

     label1:
        goto label3;

     label2:
        $r6 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r5 = new groovy.util.ObservableList$ElementUpdatedEvent;

        specialinvoke $r5.<groovy.util.ObservableList$ElementUpdatedEvent: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,int)>(r0, $r3, r1, i0);

        virtualinvoke $r6.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r5);

     label3:
        return $r3;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1, $r2;
        int i0, i1;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.util.List $r1;
        groovy.util.ObservableList r0;
        java.lang.Object[] $r2;

        r0 := @this: groovy.util.ObservableList;

        $r1 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1, $r3;
        groovy.util.ObservableList r0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<groovy.util.ObservableList: java.util.List delegate>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableList r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        groovy.util.ObservableList r0;
        java.lang.String r1;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners()
    {
        java.beans.PropertyChangeSupport $r1;
        groovy.util.ObservableList r0;
        java.beans.PropertyChangeListener[] $r2;

        r0 := @this: groovy.util.ObservableList;

        $r1 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r2 = virtualinvoke $r1.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>();

        return $r2;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)
    {
        java.beans.PropertyChangeListener[] $r3;
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableList r0;
        java.lang.String r1;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $r3 = virtualinvoke $r2.<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)>(r1);

        return $r3;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableList r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r3;
        groovy.util.ObservableList r0;
        java.lang.String r1;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r3 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        return;
    }

    public boolean hasListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r2;
        groovy.util.ObservableList r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: groovy.util.ObservableList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovy.util.ObservableList: java.beans.PropertyChangeSupport pcs>;

        $z0 = virtualinvoke $r2.<java.beans.PropertyChangeSupport: boolean hasListeners(java.lang.String)>(r1);

        return $z0;
    }
}
