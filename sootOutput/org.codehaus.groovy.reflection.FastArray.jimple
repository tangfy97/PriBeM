public class org.codehaus.groovy.reflection.FastArray extends java.lang.Object implements java.lang.Cloneable
{
    private java.lang.Object[] data;
    public int size;
    public static final org.codehaus.groovy.reflection.FastArray EMPTY_LIST;

    public void <init>(int)
    {
        int i0;
        java.lang.Object[] $r1;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Object)[i0];

        r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data> = $r1;

        return;
    }

    public void <init>()
    {
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        specialinvoke r0.<org.codehaus.groovy.reflection.FastArray: void <init>(int)>(8);

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.lang.Object[] $r2;
        org.codehaus.groovy.reflection.FastArray r0;
        java.util.Collection r1;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        r1 := @parameter0: java.util.Collection;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();

        specialinvoke r0.<org.codehaus.groovy.reflection.FastArray: void <init>(java.lang.Object[])>($r2);

        return;
    }

    public void <init>(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] r1;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data> = r1;

        $i0 = lengthof r1;

        r0.<org.codehaus.groovy.reflection.FastArray: int size> = $i0;

        return;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r1;
        int i0;
        java.lang.Object $r2;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void add(java.lang.Object)
    {
        java.lang.Object[] $r1, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r2;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        r2 := @parameter0: java.lang.Object;

        $i1 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label3;

        $i2 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        if $i2 != 0 goto label1;

        $i5 = 8;

        goto label2;

     label1:
        $i3 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        $i5 = $i3 * 2;

     label2:
        $r4 = newarray (java.lang.Object)[$i5];

        $r3 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i4 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i4);

        r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data> = $r4;

     label3:
        $r5 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i6 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        $i7 = $i6 + 1;

        r0.<org.codehaus.groovy.reflection.FastArray: int size> = $i7;

        $r5[$i6] = r2;

        return;
    }

    public void set(int, java.lang.Object)
    {
        java.lang.Object[] $r2;
        int i0;
        java.lang.Object r1;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $r2[i0] = r1;

        return;
    }

    public int size()
    {
        int $i0;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $i0 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        return $i0;
    }

    public void clear()
    {
        java.lang.Object[] $r1, $r2;
        int $i0;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i0 = lengthof $r1;

        $r2 = newarray (java.lang.Object)[$i0];

        r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data> = $r2;

        r0.<org.codehaus.groovy.reflection.FastArray: int size> = 0;

        return;
    }

    public void addAll(org.codehaus.groovy.reflection.FastArray)
    {
        java.lang.Object[] $r2;
        int $i0;
        org.codehaus.groovy.reflection.FastArray r0, r1;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        r1 := @parameter0: org.codehaus.groovy.reflection.FastArray;

        $r2 = r1.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i0 = r1.<org.codehaus.groovy.reflection.FastArray: int size>;

        virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: void addAll(java.lang.Object[],int)>($r2, $i0);

        return;
    }

    public void addAll(java.lang.Object[], int)
    {
        java.lang.Object[] $r1, r2, $r3, r4, $r5;
        int i0, $i1, i2, $i3, $i4, $i5;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        r2 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        i2 = $i1 + i0;

        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i3 = lengthof $r1;

        if i2 <= $i3 goto label2;

        r4 = newarray (java.lang.Object)[i2];

        $r5 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i5 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i5);

        r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data> = r4;

     label2:
        $r3 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i4 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r3, $i4, i0);

        r0.<org.codehaus.groovy.reflection.FastArray: int size> = i2;

        return;
    }

    public org.codehaus.groovy.reflection.FastArray copy()
    {
        java.lang.Object[] r1, $r2;
        int $i0, $i1;
        org.codehaus.groovy.reflection.FastArray r0, $r3;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $i0 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i1 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        $r3 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r3.<org.codehaus.groovy.reflection.FastArray: void <init>(java.lang.Object[])>(r1);

        return $r3;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.codehaus.groovy.reflection.FastArray r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $i0 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void addAll(java.util.List)
    {
        java.util.List r0;
        java.lang.Object[] $r1;
        int $i0;
        org.codehaus.groovy.reflection.FastArray r2;

        r2 := @this: org.codehaus.groovy.reflection.FastArray;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();

        $i0 = lengthof $r1;

        virtualinvoke r2.<org.codehaus.groovy.reflection.FastArray: void addAll(java.lang.Object[],int)>($r1, $i0);

        return;
    }

    public void remove(int)
    {
        java.lang.Object[] $r1, $r2, $r3;
        int i0, $i1, $i2, i3, $i4, $i5, $i6;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        i0 := @parameter0: int;

        $i1 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        $i2 = $i1 - i0;

        i3 = $i2 - 1;

        if i3 <= 0 goto label1;

        $r3 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i6 = i0 + 1;

        $r2 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i6, $r2, i0, i3);

     label1:
        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        $i4 = r0.<org.codehaus.groovy.reflection.FastArray: int size>;

        $i5 = $i4 - 1;

        r0.<org.codehaus.groovy.reflection.FastArray: int size> = $i5;

        $r1[$i5] = null;

        return;
    }

    public java.util.List toList()
    {
        org.codehaus.groovy.reflection.FastArray$1 $r0;
        org.codehaus.groovy.reflection.FastArray r1;

        r1 := @this: org.codehaus.groovy.reflection.FastArray;

        $r0 = new org.codehaus.groovy.reflection.FastArray$1;

        specialinvoke $r0.<org.codehaus.groovy.reflection.FastArray$1: void <init>(org.codehaus.groovy.reflection.FastArray)>(r1);

        return $r0;
    }

    public java.lang.Object[] getArray()
    {
        java.lang.Object[] $r1;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $r1 = r0.<org.codehaus.groovy.reflection.FastArray: java.lang.Object[] data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.List $r1;
        int $i0;
        java.lang.String $r2;
        org.codehaus.groovy.reflection.FastArray r0;

        r0 := @this: org.codehaus.groovy.reflection.FastArray;

        $i0 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: int size()>();

        if $i0 != 0 goto label1;

        return "[]";

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.FastArray: java.util.List toList()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        org.codehaus.groovy.reflection.FastArray $r0;

        $r0 = new org.codehaus.groovy.reflection.FastArray;

        specialinvoke $r0.<org.codehaus.groovy.reflection.FastArray: void <init>(int)>(0);

        <org.codehaus.groovy.reflection.FastArray: org.codehaus.groovy.reflection.FastArray EMPTY_LIST> = $r0;

        return;
    }
}
