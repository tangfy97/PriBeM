public abstract class org.apache.batik.extension.StylableExtensionElement extends org.apache.batik.extension.ExtensionElement implements org.apache.batik.css.engine.CSSStylableElement, org.w3c.dom.svg.SVGStylable
{
    protected org.apache.batik.util.ParsedURL cssBase;
    protected org.apache.batik.css.engine.StyleMap computedStyleMap;

    protected void <init>()
    {
        org.apache.batik.extension.StylableExtensionElement r0;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        specialinvoke r0.<org.apache.batik.extension.ExtensionElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.extension.StylableExtensionElement r0;
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.extension.ExtensionElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return;
    }

    public org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)
    {
        org.apache.batik.extension.StylableExtensionElement r0;
        java.lang.String r2;
        org.apache.batik.css.engine.StyleMap $r1;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.extension.StylableExtensionElement: org.apache.batik.css.engine.StyleMap computedStyleMap>;

        return $r1;
    }

    public void setComputedStyleMap(java.lang.String, org.apache.batik.css.engine.StyleMap)
    {
        org.apache.batik.extension.StylableExtensionElement r0;
        java.lang.String r2;
        org.apache.batik.css.engine.StyleMap r1;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.batik.css.engine.StyleMap;

        r0.<org.apache.batik.extension.StylableExtensionElement: org.apache.batik.css.engine.StyleMap computedStyleMap> = r1;

        return;
    }

    public java.lang.String getXMLId()
    {
        org.apache.batik.extension.StylableExtensionElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        return $r1;
    }

    public java.lang.String getCSSClass()
    {
        org.apache.batik.extension.StylableExtensionElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "class");

        return $r1;
    }

    public org.apache.batik.util.ParsedURL getCSSBase()
    {
        org.apache.batik.util.ParsedURL $r1, $r2, $r4;
        org.apache.batik.extension.StylableExtensionElement r0;
        java.lang.String $r3;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        $r1 = r0.<org.apache.batik.extension.StylableExtensionElement: org.apache.batik.util.ParsedURL cssBase>;

        if $r1 != null goto label2;

        $r3 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: java.lang.String getBaseURI()>();

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r4.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>($r3);

        r0.<org.apache.batik.extension.StylableExtensionElement: org.apache.batik.util.ParsedURL cssBase> = $r4;

     label2:
        $r2 = r0.<org.apache.batik.extension.StylableExtensionElement: org.apache.batik.util.ParsedURL cssBase>;

        return $r2;
    }

    public boolean isPseudoInstanceOf(java.lang.String)
    {
        short $s0;
        org.w3c.dom.Node r2;
        org.apache.batik.extension.StylableExtensionElement r1;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.batik.extension.StylableExtensionElement;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("first-child");

        if $z0 == 0 goto label6;

        r2 = virtualinvoke r1.<org.apache.batik.dom.AbstractParentChildNode: org.w3c.dom.Node getPreviousSibling()>();

        goto label2;

     label1:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

     label2:
        if r2 == null goto label3;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

     label3:
        if r2 != null goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;

     label6:
        return 0;
    }

    public org.apache.batik.css.engine.StyleDeclarationProvider getOverrideStyleDeclarationProvider()
    {
        org.apache.batik.extension.StylableExtensionElement r0;

        r0 := @this: org.apache.batik.extension.StylableExtensionElement;

        return null;
    }

    public org.w3c.dom.css.CSSStyleDeclaration getStyle()
    {
        org.apache.batik.extension.StylableExtensionElement r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.batik.extension.StylableExtensionElement;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }

    public org.w3c.dom.css.CSSValue getPresentationAttribute(java.lang.String)
    {
        org.apache.batik.extension.StylableExtensionElement r1;
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;

        r1 := @this: org.apache.batik.extension.StylableExtensionElement;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }

    public org.w3c.dom.svg.SVGAnimatedString getClassName()
    {
        org.apache.batik.extension.StylableExtensionElement r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.batik.extension.StylableExtensionElement;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }
}
