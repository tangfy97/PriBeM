public class org.bouncycastle.util.encoders.HexTranslator extends java.lang.Object implements org.bouncycastle.util.encoders.Translator
{
    private static final byte[] hexTable;

    public void <init>()
    {
        org.bouncycastle.util.encoders.HexTranslator r0;

        r0 := @this: org.bouncycastle.util.encoders.HexTranslator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getEncodedBlockSize()
    {
        org.bouncycastle.util.encoders.HexTranslator r0;

        r0 := @this: org.bouncycastle.util.encoders.HexTranslator;

        return 2;
    }

    public int encode(byte[], int, int, byte[], int)
    {
        byte[] r0, r1, $r2, $r3;
        org.bouncycastle.util.encoders.HexTranslator r4;
        byte $b3, $b6, $b9, $b10, $b11;
        int i0, $i1, i2, $i4, $i5, $i7, $i8, $i12, i13, i14, i15, $i16, $i17;

        r4 := @this: org.bouncycastle.util.encoders.HexTranslator;

        r1 := @parameter0: byte[];

        i13 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: byte[];

        i2 := @parameter4: int;

        i14 = 0;

        i15 = 0;

     label1:
        if i14 >= i0 goto label2;

        $i7 = i2 + i15;

        $r2 = <org.bouncycastle.util.encoders.HexTranslator: byte[] hexTable>;

        $b3 = r1[i13];

        $i16 = (int) $b3;

        $i4 = $i16 >> 4;

        $i5 = $i4 & 15;

        $b6 = $r2[$i5];

        r0[$i7] = $b6;

        $i8 = i2 + i15;

        $i12 = $i8 + 1;

        $r3 = <org.bouncycastle.util.encoders.HexTranslator: byte[] hexTable>;

        $b9 = r1[i13];

        $b10 = $b9 & 15;

        $i17 = (int) $b10;

        $b11 = $r3[$i17];

        r0[$i12] = $b11;

        i13 = i13 + 1;

        i14 = i14 + 1;

        i15 = i15 + 2;

        goto label1;

     label2:
        $i1 = i0 * 2;

        return $i1;
    }

    public int getDecodedBlockSize()
    {
        org.bouncycastle.util.encoders.HexTranslator r0;

        r0 := @this: org.bouncycastle.util.encoders.HexTranslator;

        return 1;
    }

    public int decode(byte[], int, int, byte[], int)
    {
        byte[] r0, r1;
        org.bouncycastle.util.encoders.HexTranslator r2;
        byte b5, b9, $b13, $b16, $b17, $b19, $b21, $b22, $b24, $b27;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i18, $i20, $i23, $i25, $i26, i28, i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39;

        r2 := @this: org.bouncycastle.util.encoders.HexTranslator;

        r0 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: byte[];

        i28 := @parameter4: int;

        i1 = i0 / 2;

        i29 = 0;

     label1:
        if i29 >= i1 goto label6;

        $i3 = i29 * 2;

        $i4 = i2 + $i3;

        b5 = r0[$i4];

        $i6 = i29 * 2;

        $i7 = i2 + $i6;

        $i8 = $i7 + 1;

        b9 = r0[$i8];

        $i30 = (int) b5;

        if $i30 >= 97 goto label2;

        $i31 = (int) b5;

        $i25 = $i31 - 48;

        $i26 = $i25 << 4;

        $b27 = (byte) $i26;

        r1[i28] = $b27;

        goto label3;

     label2:
        $i32 = (int) b5;

        $i10 = $i32 - 97;

        $i11 = $i10 + 10;

        $i12 = $i11 << 4;

        $b13 = (byte) $i12;

        r1[i28] = $b13;

     label3:
        $i33 = (int) b9;

        if $i33 >= 97 goto label4;

        $b22 = r1[i28];

        $i34 = (int) b9;

        $i20 = $i34 - 48;

        $b21 = (byte) $i20;

        $i35 = (int) $b22;

        $i36 = (int) $b21;

        $i23 = $i35 + $i36;

        $b24 = (byte) $i23;

        r1[i28] = $b24;

        goto label5;

     label4:
        $b17 = r1[i28];

        $i37 = (int) b9;

        $i14 = $i37 - 97;

        $i15 = $i14 + 10;

        $b16 = (byte) $i15;

        $i38 = (int) $b17;

        $i39 = (int) $b16;

        $i18 = $i38 + $i39;

        $b19 = (byte) $i18;

        r1[i28] = $b19;

     label5:
        i28 = i28 + 1;

        i29 = i29 + 1;

        goto label1;

     label6:
        return i1;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.bouncycastle.util.encoders.HexTranslator: byte[] hexTable> = $r0;

        return;
    }
}
