class com.mongodb.util.TestCase$Test extends java.lang.Object
{
    protected java.lang.String _name;
    final java.lang.Object _o;
    final java.lang.reflect.Method _m;

    void <init>(java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.Object r1;
        com.mongodb.util.TestCase$Test r0;
        java.lang.reflect.Method r2;

        r0 := @this: com.mongodb.util.TestCase$Test;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.util.TestCase$Test: java.lang.String _name> = null;

        r0.<com.mongodb.util.TestCase$Test: java.lang.Object _o> = r1;

        r0.<com.mongodb.util.TestCase$Test: java.lang.reflect.Method _m> = r2;

        return;
    }

    com.mongodb.util.TestCase$Result run()
    {
        java.lang.Throwable $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.Object[] $r1;
        com.mongodb.util.TestCase$Result $r4, $r6, $r9;
        java.lang.reflect.InvocationTargetException $r5;
        com.mongodb.util.TestCase$Test r0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: com.mongodb.util.TestCase$Test;

     label1:
        $r3 = r0.<com.mongodb.util.TestCase$Test: java.lang.reflect.Method _m>;

        $r2 = r0.<com.mongodb.util.TestCase$Test: java.lang.Object _o>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r1);

        $r4 = new com.mongodb.util.TestCase$Result;

        specialinvoke $r4.<com.mongodb.util.TestCase$Result: void <init>(com.mongodb.util.TestCase$Test)>(r0);

     label2:
        return $r4;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.mongodb.util.TestCase$Result;

        specialinvoke $r9.<com.mongodb.util.TestCase$Result: void <init>(com.mongodb.util.TestCase$Test,java.lang.Throwable)>(r0, $r8);

        return $r9;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.mongodb.util.TestCase$Result;

        $r7 = virtualinvoke $r5.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        specialinvoke $r6.<com.mongodb.util.TestCase$Result: void <init>(com.mongodb.util.TestCase$Test,java.lang.Throwable)>(r0, $r7);

        return $r6;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public java.lang.String toString()
    {
        java.lang.String $r4, $r8, $r10, $r11, $r13, $r18;
        java.lang.reflect.Method $r7;
        com.mongodb.util.TestCase$Test r1;
        java.lang.StringBuilder $r0, $r5, $r6, $r9, $r12, $r14, $r15, $r16, $r17;
        java.lang.Object $r2;
        java.lang.Class $r3;

        r1 := @this: com.mongodb.util.TestCase$Test;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.mongodb.util.TestCase$Test: java.lang.Object _o>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = r1.<com.mongodb.util.TestCase$Test: java.lang.reflect.Method _m>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r1.<com.mongodb.util.TestCase$Test: java.lang.String _name>;

        if $r11 != null goto label1;

        return $r10;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r1.<com.mongodb.util.TestCase$Test: java.lang.String _name>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }
}
