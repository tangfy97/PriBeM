public final class org.apache.lucene.analysis.hi.HindiAnalyzer extends org.apache.lucene.analysis.util.StopwordAnalyzerBase
{
    private final org.apache.lucene.analysis.util.CharArraySet stemExclusionSet;
    public static final java.lang.String DEFAULT_STOPWORD_FILE;
    private static final java.lang.String STOPWORDS_COMMENT;

    public static org.apache.lucene.analysis.util.CharArraySet getDefaultStopSet()
    {
        org.apache.lucene.analysis.util.CharArraySet $r0;

        $r0 = <org.apache.lucene.analysis.hi.HindiAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet DEFAULT_STOP_SET>;

        return $r0;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.hi.HindiAnalyzer r0;
        org.apache.lucene.analysis.util.CharArraySet r2, r3, $r5, $r6;
        org.apache.lucene.util.Version r1, $r4;

        r0 := @this: org.apache.lucene.analysis.hi.HindiAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        r3 := @parameter2: org.apache.lucene.analysis.util.CharArraySet;

        specialinvoke r0.<org.apache.lucene.analysis.util.StopwordAnalyzerBase: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, r2);

        $r4 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet copy(org.apache.lucene.util.Version,java.util.Set)>($r4, r3);

        $r6 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet unmodifiableSet(org.apache.lucene.analysis.util.CharArraySet)>($r5);

        r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionSet> = $r6;

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.hi.HindiAnalyzer r0;
        org.apache.lucene.analysis.util.CharArraySet r2, $r3;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.hi.HindiAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        $r3 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        specialinvoke r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArraySet)>(r1, r2, $r3);

        return;
    }

    public void <init>(org.apache.lucene.util.Version)
    {
        org.apache.lucene.analysis.hi.HindiAnalyzer r0;
        org.apache.lucene.analysis.util.CharArraySet $r2;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.hi.HindiAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        $r2 = <org.apache.lucene.analysis.hi.HindiAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet DEFAULT_STOP_SET>;

        specialinvoke r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, $r2);

        return;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.Tokenizer r21;
        org.apache.lucene.analysis.standard.StandardTokenizer $r18;
        org.apache.lucene.analysis.in.IndicNormalizationFilter $r9;
        org.apache.lucene.analysis.hi.HindiNormalizationFilter $r10;
        org.apache.lucene.analysis.core.LowerCaseFilter $r6;
        org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter $r16;
        java.lang.String r20;
        org.apache.lucene.analysis.in.IndicTokenizer $r3;
        org.apache.lucene.analysis.hi.HindiStemFilter $r14;
        boolean $z0, $z1;
        org.apache.lucene.analysis.hi.HindiAnalyzer r0;
        java.io.Reader r4;
        org.apache.lucene.util.Version $r1, $r2, $r5, $r7, $r13, $r19;
        org.apache.lucene.analysis.core.StopFilter $r11;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r15;
        org.apache.lucene.analysis.util.CharArraySet $r8, $r12, $r17;
        org.apache.lucene.analysis.TokenFilter r22;

        r0 := @this: org.apache.lucene.analysis.hi.HindiAnalyzer;

        r20 := @parameter0: java.lang.String;

        r4 := @parameter1: java.io.Reader;

        $r2 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r1 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_36>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r1);

        if $z0 == 0 goto label1;

        $r18 = new org.apache.lucene.analysis.standard.StandardTokenizer;

        $r19 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r18.<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r19, r4);

        r21 = $r18;

        goto label2;

     label1:
        $r3 = new org.apache.lucene.analysis.in.IndicTokenizer;

        $r5 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r3.<org.apache.lucene.analysis.in.IndicTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r5, r4);

        r21 = $r3;

     label2:
        $r6 = new org.apache.lucene.analysis.core.LowerCaseFilter;

        $r7 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r6.<org.apache.lucene.analysis.core.LowerCaseFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r7, r21);

        r22 = $r6;

        $r8 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionSet>;

        $z1 = virtualinvoke $r8.<org.apache.lucene.analysis.util.CharArraySet: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r16 = new org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter;

        $r17 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionSet>;

        specialinvoke $r16.<org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r6, $r17);

        r22 = $r16;

     label3:
        $r9 = new org.apache.lucene.analysis.in.IndicNormalizationFilter;

        specialinvoke $r9.<org.apache.lucene.analysis.in.IndicNormalizationFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r22);

        $r10 = new org.apache.lucene.analysis.hi.HindiNormalizationFilter;

        specialinvoke $r10.<org.apache.lucene.analysis.hi.HindiNormalizationFilter: void <init>(org.apache.lucene.analysis.TokenStream)>($r9);

        $r11 = new org.apache.lucene.analysis.core.StopFilter;

        $r13 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r12 = r0.<org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.analysis.util.CharArraySet stopwords>;

        specialinvoke $r11.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r13, $r10, $r12);

        $r14 = new org.apache.lucene.analysis.hi.HindiStemFilter;

        specialinvoke $r14.<org.apache.lucene.analysis.hi.HindiStemFilter: void <init>(org.apache.lucene.analysis.TokenStream)>($r11);

        $r15 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        specialinvoke $r15.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>(r21, $r14);

        return $r15;
    }

    static org.apache.lucene.analysis.util.CharArraySet access$000(boolean, java.lang.Class, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.CharArraySet $r3;
        java.lang.Class r0;
        java.lang.String r1, r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.lucene.analysis.hi.HindiAnalyzer: org.apache.lucene.analysis.util.CharArraySet loadStopwordSet(boolean,java.lang.Class,java.lang.String,java.lang.String)>(z0, r0, r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.hi.HindiAnalyzer: java.lang.String STOPWORDS_COMMENT> = "#";

        <org.apache.lucene.analysis.hi.HindiAnalyzer: java.lang.String DEFAULT_STOPWORD_FILE> = "stopwords.txt";

        return;
    }
}
