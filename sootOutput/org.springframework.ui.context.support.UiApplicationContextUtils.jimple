public abstract class org.springframework.ui.context.support.UiApplicationContextUtils extends java.lang.Object
{
    public static final java.lang.String THEME_SOURCE_BEAN_NAME;
    private static final org.apache.commons.logging.Log logger;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.springframework.ui.context.support.UiApplicationContextUtils: java.lang.String THEME_SOURCE_BEAN_NAME> = "themeSource";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/ui/context/support/UiApplicationContextUtils;");

        <org.springframework.ui.context.support.UiApplicationContextUtils: org.apache.commons.logging.Log logger> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.ui.context.support.UiApplicationContextUtils r0;

        r0 := @this: org.springframework.ui.context.support.UiApplicationContextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)
    {
        org.springframework.ui.context.ThemeSource $r11, $r20, $r22, r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r4, $r6, $r7, $r14, $r16, $r17;
        org.springframework.ui.context.HierarchicalThemeSource r19, r25;
        org.springframework.ui.context.support.ResourceBundleThemeSource $r2;
        java.lang.String $r8, $r18;
        org.springframework.context.ApplicationContext r0, $r1, $r10, $r13, $r21;
        org.springframework.ui.context.support.DelegatingThemeSource $r9;
        org.apache.commons.logging.Log $r3, $r5, $r15, $r24;
        java.lang.Object $r12;

        r0 := @parameter0: org.springframework.context.ApplicationContext;

        $z0 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: boolean containsLocalBean(java.lang.String)>("themeSource");

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>("themeSource", class "Lorg/springframework/ui/context/ThemeSource;");

        r23 = (org.springframework.ui.context.ThemeSource) $r12;

        $r13 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        $z3 = $r13 instanceof org.springframework.ui.context.ThemeSource;

        if $z3 == 0 goto label1;

        $z4 = r23 instanceof org.springframework.ui.context.HierarchicalThemeSource;

        if $z4 == 0 goto label1;

        r19 = (org.springframework.ui.context.HierarchicalThemeSource) r23;

        $r20 = interfaceinvoke r19.<org.springframework.ui.context.HierarchicalThemeSource: org.springframework.ui.context.ThemeSource getParentThemeSource()>();

        if $r20 != null goto label1;

        $r21 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        $r22 = (org.springframework.ui.context.ThemeSource) $r21;

        interfaceinvoke r19.<org.springframework.ui.context.HierarchicalThemeSource: void setParentThemeSource(org.springframework.ui.context.ThemeSource)>($r22);

     label1:
        $r24 = <org.springframework.ui.context.support.UiApplicationContextUtils: org.apache.commons.logging.Log logger>;

        $z5 = interfaceinvoke $r24.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label2;

        $r15 = <org.springframework.ui.context.support.UiApplicationContextUtils: org.apache.commons.logging.Log logger>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Using ThemeSource [");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label2:
        return r23;

     label3:
        $r1 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        $z1 = $r1 instanceof org.springframework.ui.context.ThemeSource;

        if $z1 == 0 goto label4;

        $r9 = new org.springframework.ui.context.support.DelegatingThemeSource;

        specialinvoke $r9.<org.springframework.ui.context.support.DelegatingThemeSource: void <init>()>();

        r25 = $r9;

        $r10 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        $r11 = (org.springframework.ui.context.ThemeSource) $r10;

        interfaceinvoke $r9.<org.springframework.ui.context.HierarchicalThemeSource: void setParentThemeSource(org.springframework.ui.context.ThemeSource)>($r11);

        goto label5;

     label4:
        $r2 = new org.springframework.ui.context.support.ResourceBundleThemeSource;

        specialinvoke $r2.<org.springframework.ui.context.support.ResourceBundleThemeSource: void <init>()>();

        r25 = $r2;

     label5:
        $r3 = <org.springframework.ui.context.support.UiApplicationContextUtils: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label6;

        $r5 = <org.springframework.ui.context.support.UiApplicationContextUtils: org.apache.commons.logging.Log logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to locate ThemeSource with name \'themeSource\': using default [");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r8);

     label6:
        return r25;
    }
}
