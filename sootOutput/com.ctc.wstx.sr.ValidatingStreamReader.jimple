public class com.ctc.wstx.sr.ValidatingStreamReader extends com.ctc.wstx.sr.BasicStreamReader
{
    static final java.lang.String STAX_PROP_ENTITIES;
    static final java.lang.String STAX_PROP_NOTATIONS;
    org.codehaus.stax2.validation.DTDValidationSchema mDTD;
    org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator;
    boolean mDTDOverridden;
    boolean mDtdValidatorSet;
    protected org.codehaus.stax2.validation.ValidationProblemHandler mVldProbHandler;

    private void <init>(com.ctc.wstx.io.InputBootstrapper, com.ctc.wstx.io.BranchingReaderSource, com.ctc.wstx.sr.ReaderCreator, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.sr.InputElementStack, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.io.BranchingReaderSource r2;
        com.ctc.wstx.sr.InputElementStack r5;
        com.ctc.wstx.sr.ReaderCreator r3;
        com.ctc.wstx.io.InputBootstrapper r1;
        com.ctc.wstx.api.ReaderConfig r4;
        boolean z0;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: com.ctc.wstx.io.InputBootstrapper;

        r2 := @parameter1: com.ctc.wstx.io.BranchingReaderSource;

        r3 := @parameter2: com.ctc.wstx.sr.ReaderCreator;

        r4 := @parameter3: com.ctc.wstx.api.ReaderConfig;

        r5 := @parameter4: com.ctc.wstx.sr.InputElementStack;

        z0 := @parameter5: boolean;

        specialinvoke r0.<com.ctc.wstx.sr.BasicStreamReader: void <init>(com.ctc.wstx.io.InputBootstrapper,com.ctc.wstx.io.BranchingReaderSource,com.ctc.wstx.sr.ReaderCreator,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.sr.InputElementStack,boolean)>(r1, r2, r3, r4, r5, z0);

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD> = null;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator> = null;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDTDOverridden> = 0;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDtdValidatorSet> = 0;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.ValidationProblemHandler mVldProbHandler> = null;

        return;
    }

    public static com.ctc.wstx.sr.ValidatingStreamReader createValidatingStreamReader(com.ctc.wstx.io.BranchingReaderSource, com.ctc.wstx.sr.ReaderCreator, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.io.InputBootstrapper, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader $r0;
        com.ctc.wstx.io.BranchingReaderSource r2;
        com.ctc.wstx.sr.InputElementStack $r5;
        com.ctc.wstx.sr.ReaderCreator r3;
        com.ctc.wstx.io.InputBootstrapper r1;
        com.ctc.wstx.api.ReaderConfig r4;
        boolean z0;

        r2 := @parameter0: com.ctc.wstx.io.BranchingReaderSource;

        r3 := @parameter1: com.ctc.wstx.sr.ReaderCreator;

        r4 := @parameter2: com.ctc.wstx.api.ReaderConfig;

        r1 := @parameter3: com.ctc.wstx.io.InputBootstrapper;

        z0 := @parameter4: boolean;

        $r0 = new com.ctc.wstx.sr.ValidatingStreamReader;

        $r5 = staticinvoke <com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack createElementStack(com.ctc.wstx.api.ReaderConfig)>(r4);

        specialinvoke $r0.<com.ctc.wstx.sr.ValidatingStreamReader: void <init>(com.ctc.wstx.io.InputBootstrapper,com.ctc.wstx.io.BranchingReaderSource,com.ctc.wstx.sr.ReaderCreator,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.sr.InputElementStack,boolean)>(r1, r2, r3, r4, $r5, z0);

        return $r0;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.sr.ValidatingStreamReader r1;
        java.util.ArrayList $r8, $r14;
        com.ctc.wstx.dtd.DTDSubset $r6, $r12;
        org.codehaus.stax2.validation.DTDValidationSchema $r3, $r4, $r5, $r9, $r10, $r11;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r7, $r13;
        java.lang.Object $r2;

        r1 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.stream.entities");

        if $z0 == 0 goto label3;

        virtualinvoke r1.<com.ctc.wstx.sr.ValidatingStreamReader: void safeEnsureFinishToken()>();

        $r9 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        if $r9 == null goto label1;

        $r10 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $z3 = $r10 instanceof com.ctc.wstx.dtd.DTDSubset;

        if $z3 != 0 goto label2;

     label1:
        return null;

     label2:
        $r11 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $r12 = (com.ctc.wstx.dtd.DTDSubset) $r11;

        $r13 = virtualinvoke $r12.<com.ctc.wstx.dtd.DTDSubset: java.util.List getGeneralEntityList()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        return $r14;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.stream.notations");

        if $z1 == 0 goto label6;

        virtualinvoke r1.<com.ctc.wstx.sr.ValidatingStreamReader: void safeEnsureFinishToken()>();

        $r3 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        if $r3 == null goto label4;

        $r4 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $z2 = $r4 instanceof com.ctc.wstx.dtd.DTDSubset;

        if $z2 != 0 goto label5;

     label4:
        return null;

     label5:
        $r5 = r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $r6 = (com.ctc.wstx.dtd.DTDSubset) $r5;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.dtd.DTDSubset: java.util.List getNotationList()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        return $r8;

     label6:
        $r2 = specialinvoke r1.<com.ctc.wstx.sr.BasicStreamReader: java.lang.Object getProperty(java.lang.String)>(r0);

        return $r2;
    }

    public void setFeature(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.sr.ValidatingStreamReader r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.Object r2;
        org.codehaus.stax2.validation.DTDValidationSchema $r3;
        java.lang.String r0, $r9;
        boolean $z0, $z1;

        r1 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("org.codehaus.stax2.propDtdOverride");

        if $z0 == 0 goto label2;

        r1.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDTDOverridden> = 1;

        if r2 == null goto label1;

        $z1 = r2 instanceof org.codehaus.stax2.validation.DTDValidationSchema;

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value to set for feature ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not of type DTDValidationSchema");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r3 = (org.codehaus.stax2.validation.DTDValidationSchema) r2;

        r1.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD> = $r3;

        goto label3;

     label2:
        specialinvoke r1.<com.ctc.wstx.sr.BasicStreamReader: void setFeature(java.lang.String,java.lang.Object)>(r0, r2);

     label3:
        return;
    }

    public java.lang.Object getProcessedDTD()
    {
        org.codehaus.stax2.validation.DTDValidationSchema $r1;
        com.ctc.wstx.sr.ValidatingStreamReader r0;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        $r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        return $r1;
    }

    public org.codehaus.stax2.validation.DTDValidationSchema getProcessedDTDSchema()
    {
        org.codehaus.stax2.validation.DTDValidationSchema $r1;
        com.ctc.wstx.sr.ValidatingStreamReader r0;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        $r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        return $r1;
    }

    public org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator $r3;
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        com.ctc.wstx.sr.InputElementStack $r2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.sr.InputElementStack: org.codehaus.stax2.validation.XMLValidator validateAgainst(org.codehaus.stax2.validation.XMLValidationSchema)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator $r3;
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        org.codehaus.stax2.validation.XMLValidationSchema r1;
        com.ctc.wstx.sr.InputElementStack $r2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidationSchema;

        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.sr.InputElementStack: org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidationSchema)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.validation.XMLValidator r1, $r3;
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.sr.InputElementStack $r2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: org.codehaus.stax2.validation.XMLValidator;

        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.sr.InputElementStack: org.codehaus.stax2.validation.XMLValidator stopValidatingAgainst(org.codehaus.stax2.validation.XMLValidator)>(r1);

        return $r3;
    }

    public org.codehaus.stax2.validation.ValidationProblemHandler setValidationProblemHandler(org.codehaus.stax2.validation.ValidationProblemHandler)
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        org.codehaus.stax2.validation.ValidationProblemHandler r1, r2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r2 := @parameter0: org.codehaus.stax2.validation.ValidationProblemHandler;

        r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.ValidationProblemHandler mVldProbHandler>;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.ValidationProblemHandler mVldProbHandler> = r2;

        return r1;
    }

    protected void finishDTD(boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r30;
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.api.ReaderConfig $r6, $r26;
        com.ctc.wstx.dtd.DTDValidatorBase r38, r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        com.ctc.wstx.io.WstxInputSource $r25, $r27, $r29, $r33;
        java.lang.Throwable $r32;
        com.ctc.wstx.sr.InputElementStack $r16, $r40;
        java.util.HashMap $r23;
        com.ctc.wstx.dtd.DTDSubset $r4, $r22, r35, r36;
        java.lang.StringBuffer $r10, $r13, $r14, $r42;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        org.codehaus.stax2.validation.DTDValidationSchema $r5, $r11, $r17, $r21, $r37;
        java.lang.String $r1, $r2, $r3, $r9, $r15, $r24;
        javax.xml.stream.XMLReporter $r7;
        com.ctc.wstx.io.BranchingReaderSource $r28, $r31, $r34;
        char $c0, c7;
        org.codehaus.stax2.validation.XMLValidator $r18, $r19, $r20, $r41;
        java.lang.Class $r12;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        z6 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean hasConfigFlags(int)>(16);

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.ctc.wstx.sr.BasicStreamReader: void finishDTD(boolean)>(z6);

        return;

     label01:
        $c0 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: char getNextChar(java.lang.String)>(" in DOCTYPE declaration");

        c7 = $c0;

        r35 = null;

        $i8 = (int) $c0;

        if $i8 != 91 goto label07;

        if z6 == 0 goto label02;

        $r29 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r31 = (com.ctc.wstx.io.BranchingReaderSource) $r29;

        $r30 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        $i4 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mInputPtr>;

        $z8 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mCfgNormalizeLFs>;

        virtualinvoke $r31.<com.ctc.wstx.io.BranchingReaderSource: void startBranch(com.ctc.wstx.util.TextBuffer,int,boolean)>($r30, $i4, $z8);

     label02:
        $r25 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r26 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z7 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean hasConfigFlags(int)>(32);

        $i1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mDocXmlVersion>;

        r35 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDSubset readInternalSubset(com.ctc.wstx.io.WstxInputData,com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,boolean,int)>(r0, $r25, $r26, $z7, $i1);

        goto label20;

     label03:
        goto label06;

     label04:
        $r32 := @caughtexception;

        goto label22;

     label05:
        throw $r32;

     label06:
        c7 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: char getNextCharAfterWS(java.lang.String)>(" in internal DTD subset");

     label07:
        $i9 = (int) c7;

        if $i9 == 62 goto label08;

        $i10 = (int) c7;

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void throwUnexpectedChar(int,java.lang.String)>($i10, "; expected \'>\' to finish DOCTYPE declaration.");

     label08:
        $z1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDTDOverridden>;

        if $z1 == 0 goto label09;

        goto label14;

     label09:
        r36 = null;

        $r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String mDtdPublicId>;

        if $r1 != null goto label10;

        $r24 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String mDtdSystemId>;

        if $r24 == null goto label11;

     label10:
        $r3 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String mDtdPublicId>;

        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String mDtdSystemId>;

        r36 = specialinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.dtd.DTDSubset findDtdExtSubset(java.lang.String,java.lang.String,com.ctc.wstx.dtd.DTDSubset)>($r3, $r2, r35);

     label11:
        if r35 != null goto label12;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD> = r36;

        goto label14;

     label12:
        if r36 != null goto label13;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD> = r35;

        goto label14;

     label13:
        $r4 = virtualinvoke r35.<com.ctc.wstx.dtd.DTDSubset: com.ctc.wstx.dtd.DTDSubset combineWithExternalSubset(com.ctc.wstx.sr.InputProblemReporter,com.ctc.wstx.dtd.DTDSubset)>(r0, r36);

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD> = $r4;

     label14:
        $r37 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        if $r37 != null goto label15;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.util.Map mGeneralEntities> = null;

        goto label19;

     label15:
        $r5 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $z2 = $r5 instanceof com.ctc.wstx.dtd.DTDSubset;

        if $z2 == 0 goto label16;

        $r21 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $r22 = (com.ctc.wstx.dtd.DTDSubset) $r21;

        $r23 = virtualinvoke $r22.<com.ctc.wstx.dtd.DTDSubset: java.util.HashMap getGeneralEntityMap()>();

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.util.Map mGeneralEntities> = $r23;

        goto label17;

     label16:
        $r6 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r7 = virtualinvoke $r6.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        $r9 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WT_DT_DECL>;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value to set for feature org.codehaus.stax2.propDtdOverride not a native Woodstox DTD implementation (but ");

        $r11 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): can not access full entity or notation information");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void doReportProblem(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location)>($r7, $r9, $r15, null);

     label17:
        $r17 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.DTDValidationSchema mDTD>;

        $r16 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r18 = interfaceinvoke $r17.<org.codehaus.stax2.validation.DTDValidationSchema: org.codehaus.stax2.validation.XMLValidator createValidator(org.codehaus.stax2.validation.ValidationContext)>($r16);

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator> = $r18;

        r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDtdValidatorSet> = 1;

        r38 = null;

        $r19 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator>;

        $z3 = $r19 instanceof com.ctc.wstx.dtd.DTDValidatorBase;

        if $z3 == 0 goto label18;

        $r20 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator>;

        r39 = (com.ctc.wstx.dtd.DTDValidatorBase) $r20;

        $z4 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mCfgNormalizeAttrs>;

        virtualinvoke r39.<com.ctc.wstx.dtd.DTDValidatorBase: void setAttrValueNormalization(boolean)>($z4);

        $z5 = virtualinvoke r39.<com.ctc.wstx.dtd.DTDValidatorBase: boolean hasNsDefaults()>();

        if $z5 == 0 goto label18;

        r38 = r39;

     label18:
        $r40 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r41 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: org.codehaus.stax2.validation.XMLValidator mAutoDtdValidator>;

        virtualinvoke $r40.<com.ctc.wstx.sr.InputElementStack: void setAutomaticDTDValidator(org.codehaus.stax2.validation.XMLValidator,com.ctc.wstx.sr.NsDefaultProvider)>($r41, r38);

     label19:
        return;

     label20:
        if z6 == 0 goto label21;

        $r27 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r28 = (com.ctc.wstx.io.BranchingReaderSource) $r27;

        $i2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mInputPtr>;

        $i3 = $i2 - 1;

        virtualinvoke $r28.<com.ctc.wstx.io.BranchingReaderSource: void endBranch(int)>($i3);

     label21:
        goto label03;

     label22:
        if z6 == 0 goto label23;

        $r33 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r34 = (com.ctc.wstx.io.BranchingReaderSource) $r33;

        $i5 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mInputPtr>;

        $i6 = $i5 - 1;

        virtualinvoke $r34.<com.ctc.wstx.io.BranchingReaderSource: void endBranch(int)>($i6);

     label23:
        goto label05;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    protected void initValidation() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean hasConfigFlags(int)>(32);

        if $z0 == 0 goto label1;

        $z1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mDtdValidatorSet>;

        if $z1 != 0 goto label1;

        $r2 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WT_DT_DECL>;

        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String W_MISSING_DTD>;

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void reportProblem(java.lang.String,java.lang.String)>($r2, $r1);

     label1:
        return;
    }

    private com.ctc.wstx.dtd.DTDSubset findDtdExtSubset(java.lang.String, java.lang.String, com.ctc.wstx.dtd.DTDSubset) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.dtd.DTDId $r3;
        com.ctc.wstx.api.ReaderConfig $r4, $r7, $r9;
        boolean $z0, $z1, $z2;
        java.io.FileNotFoundException $r19;
        com.ctc.wstx.io.WstxInputSource $r5, r29;
        com.ctc.wstx.dtd.DTDSubset r8, $r10, $r18;
        java.lang.StringBuffer $r12, $r13, $r15, $r16, $r20, $r21, $r24, $r25, $r27;
        int $i0, $i1, i2;
        java.lang.String r1, r2, $r14, $r17, $r23, $r26, $r28;
        com.ctc.wstx.sr.ReaderCreator $r11;
        javax.xml.stream.XMLResolver $r6;
        java.lang.Class $r22;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r8 := @parameter2: com.ctc.wstx.dtd.DTDSubset;

        $z0 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean hasConfigFlags(int)>(65536);

        $r3 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.dtd.DTDId constructDtdId(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        $r18 = specialinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.dtd.DTDSubset findCachedSubset(com.ctc.wstx.dtd.DTDId,com.ctc.wstx.dtd.DTDSubset)>($r3, r8);

        if $r18 == null goto label1;

        return $r18;

     label1:
        if r2 != null goto label2;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not resolve DTD with public id \'");

        $r14 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String mDtdPublicId>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; missing system identifier.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void throwParseError(java.lang.String)>($r17);

     label2:
        r29 = null;

     label3:
        $i1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mDocXmlVersion>;

        i2 = $i1;

        if $i1 != 0 goto label4;

        i2 = 256;

     label4:
        $r5 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r4 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r6 = virtualinvoke $r4.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getDtdResolver()>();

        $r7 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        r29 = staticinvoke <com.ctc.wstx.io.DefaultInputResolver: com.ctc.wstx.io.WstxInputSource resolveEntity(com.ctc.wstx.io.WstxInputSource,java.net.URL,java.lang.String,java.lang.String,java.lang.String,javax.xml.stream.XMLResolver,com.ctc.wstx.api.ReaderConfig,int)>($r5, null, null, r1, r2, $r6, $r7, i2);

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(was ");

        $r22 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

        $r26 = virtualinvoke $r19.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void throwParseError(java.lang.String)>($r28);

     label7:
        $r9 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z1 = virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean hasConfigFlags(int)>(32);

        $i0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mDocXmlVersion>;

        $r10 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDSubset readExternalSubset(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.dtd.DTDSubset,boolean,int)>(r29, $r9, r8, $z1, $i0);

        if $z0 == 0 goto label8;

        $z2 = virtualinvoke $r10.<com.ctc.wstx.dtd.DTDSubset: boolean isCachable()>();

        if $z2 == 0 goto label8;

        $r11 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.ReaderCreator mOwner>;

        interfaceinvoke $r11.<com.ctc.wstx.sr.ReaderCreator: void addCachedDTD(com.ctc.wstx.dtd.DTDId,com.ctc.wstx.dtd.DTDSubset)>($r3, $r10);

     label8:
        return $r10;

        catch java.io.FileNotFoundException from label3 to label5 with label6;
    }

    private com.ctc.wstx.dtd.DTDSubset findCachedSubset(com.ctc.wstx.dtd.DTDId, com.ctc.wstx.dtd.DTDSubset) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDSubset $r3, r4;
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.dtd.DTDId r1;
        com.ctc.wstx.sr.ReaderCreator $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: com.ctc.wstx.dtd.DTDId;

        r4 := @parameter1: com.ctc.wstx.dtd.DTDSubset;

        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.ReaderCreator mOwner>;

        $r3 = interfaceinvoke $r2.<com.ctc.wstx.sr.ReaderCreator: com.ctc.wstx.dtd.DTDSubset findCachedDTD(com.ctc.wstx.dtd.DTDId)>(r1);

        if $r3 == null goto label2;

        if r4 == null goto label1;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.dtd.DTDSubset: boolean isReusableWith(com.ctc.wstx.dtd.DTDSubset)>(r4);

        if $z0 == 0 goto label2;

     label1:
        return $r3;

     label2:
        return null;
    }

    private java.net.URL resolveExtSubsetPath(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        java.net.URL $r4, $r5, $r6;
        java.lang.String r3;
        com.ctc.wstx.io.WstxInputSource $r1, $r2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r6 = virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: java.net.URL getSource()>();

     label2:
        if $r6 != null goto label3;

        $r5 = staticinvoke <com.ctc.wstx.util.URLUtil: java.net.URL urlFromSystemId(java.lang.String)>(r3);

        return $r5;

     label3:
        $r4 = staticinvoke <com.ctc.wstx.util.URLUtil: java.net.URL urlFromSystemId(java.lang.String,java.net.URL)>(r3, $r6);

        return $r4;
    }

    protected com.ctc.wstx.dtd.DTDId constructDtdId(java.lang.String, java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        java.net.URL r2, $r6;
        com.ctc.wstx.dtd.DTDId $r3, $r5;
        int $i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r1, r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mConfigFlags>;

        i1 = $i0 & 2646049;

        if r1 == null goto label1;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 != 0 goto label2;

     label1:
        $r6 = null;

        goto label3;

     label2:
        $r6 = specialinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: java.net.URL resolveExtSubsetPath(java.lang.String)>(r1);

     label3:
        r2 = $r6;

        $i2 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mConfigFlags>;

        $i3 = $i2 & 131072;

        if $i3 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 == 0 goto label6;

        if r4 == null goto label6;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i4 <= 0 goto label6;

        $z1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mXml11>;

        $r5 = staticinvoke <com.ctc.wstx.dtd.DTDId: com.ctc.wstx.dtd.DTDId construct(java.lang.String,java.net.URL,int,boolean)>(r4, r2, i1, $z1);

        return $r5;

     label6:
        if r2 != null goto label7;

        return null;

     label7:
        $z0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mXml11>;

        $r3 = staticinvoke <com.ctc.wstx.dtd.DTDId: com.ctc.wstx.dtd.DTDId constructFromSystemId(java.net.URL,int,boolean)>(r2, i1, $z0);

        return $r3;
    }

    protected com.ctc.wstx.dtd.DTDId constructDtdId(java.net.URL) throws java.io.IOException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        java.net.URL r1;
        int $i0, i1;
        com.ctc.wstx.dtd.DTDId $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        r1 := @parameter0: java.net.URL;

        $i0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mConfigFlags>;

        i1 = $i0 & 548897;

        $z0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: boolean mXml11>;

        $r2 = staticinvoke <com.ctc.wstx.dtd.DTDId: com.ctc.wstx.dtd.DTDId constructFromSystemId(java.net.URL,int,boolean)>(r1, i1, $z0);

        return $r2;
    }

    protected void reportInvalidContent(int) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader r0;
        com.ctc.wstx.sr.InputElementStack $r1, $r5, $r8;
        java.lang.StringBuffer $r12, $r13, $r14;
        int $i0, i1;
        java.lang.String $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r15;

        r0 := @this: com.ctc.wstx.sr.ValidatingStreamReader;

        i1 := @parameter0: int;

        $i0 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: int mVldContent>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r9 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_EMPTY>;

        $r8 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r10 = virtualinvoke $r8.<com.ctc.wstx.sr.InputElementStack: java.lang.String getTopElementDesc()>();

        $r11 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>(i1);

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void reportValidationProblem(java.lang.String,java.lang.Object,java.lang.Object)>($r9, $r10, $r11);

        goto label5;

     label2:
        $r6 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_NON_MIXED>;

        $r5 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r7 = virtualinvoke $r5.<com.ctc.wstx.sr.InputElementStack: java.lang.String getTopElementDesc()>();

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void reportValidationProblem(java.lang.String,java.lang.Object)>($r6, $r7);

        goto label5;

     label3:
        $r2 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_VLD_ANY>;

        $r1 = r0.<com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.InputElementStack mElementStack>;

        $r3 = virtualinvoke $r1.<com.ctc.wstx.sr.InputElementStack: java.lang.String getTopElementDesc()>();

        $r4 = staticinvoke <com.ctc.wstx.cfg.ErrorConsts: java.lang.String tokenTypeDesc(int)>(i1);

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void reportValidationProblem(java.lang.String,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        goto label5;

     label4:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: trying to report invalid content for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.sr.ValidatingStreamReader: void throwParseError(java.lang.String)>($r15);

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String STAX_PROP_NOTATIONS> = "javax.xml.stream.notations";

        <com.ctc.wstx.sr.ValidatingStreamReader: java.lang.String STAX_PROP_ENTITIES> = "javax.xml.stream.entities";

        return;
    }
}
