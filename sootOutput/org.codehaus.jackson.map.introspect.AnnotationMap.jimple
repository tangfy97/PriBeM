public final class org.codehaus.jackson.map.introspect.AnnotationMap extends java.lang.Object implements org.codehaus.jackson.map.util.Annotations
{
    protected java.util.HashMap _annotations;

    public void <init>()
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(java.util.HashMap)
    {
        java.util.HashMap r1;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations> = r1;

        return;
    }

    public java.lang.'annotation'.Annotation get(java.lang.Class)
    {
        java.lang.'annotation'.Annotation $r5;
        java.util.HashMap $r1, $r3;
        java.lang.Class r2;
        java.lang.Object $r4;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (java.lang.'annotation'.Annotation) $r4;

        return $r5;
    }

    public static org.codehaus.jackson.map.introspect.AnnotationMap merge(org.codehaus.jackson.map.introspect.AnnotationMap, org.codehaus.jackson.map.introspect.AnnotationMap)
    {
        java.util.HashMap $r2, $r3, $r4, $r5, $r6, $r7, $r10;
        org.codehaus.jackson.map.introspect.AnnotationMap r0, r1, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r9, $r12;
        java.util.Collection $r8, $r11;
        java.lang.'annotation'.Annotation r18, r19;
        java.lang.Object $r14, $r16;
        java.lang.Class $r15, $r17;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.AnnotationMap;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.AnnotationMap;

        if r0 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r2 == null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        if r1 == null goto label3;

        $r4 = r1.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r4 == null goto label3;

        $r5 = r1.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $z1 = virtualinvoke $r5.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label4;

     label3:
        return r0;

     label4:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r7 = r1.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        $r9 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r16 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.'annotation'.Annotation) $r16;

        $r17 = interfaceinvoke r18.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r18);

        goto label5;

     label6:
        $r10 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.'annotation'.Annotation) $r14;

        $r15 = interfaceinvoke r19.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, r19);

        goto label7;

     label8:
        $r13 = new org.codehaus.jackson.map.introspect.AnnotationMap;

        specialinvoke $r13.<org.codehaus.jackson.map.introspect.AnnotationMap: void <init>(java.util.HashMap)>($r6);

        return $r13;
    }

    public int size()
    {
        int $i0;
        java.util.HashMap $r1, $r2;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

     label2:
        return $i0;
    }

    public void addIfNotPresent(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r2;
        java.util.HashMap $r1, $r3;
        java.lang.Class $r4;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter0: java.lang.'annotation'.Annotation;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 == null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r4 = interfaceinvoke r2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotationMap: void _add(java.lang.'annotation'.Annotation)>(r2);

     label2:
        return;
    }

    public void add(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r1;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotationMap: void _add(java.lang.'annotation'.Annotation)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.util.HashMap $r1, $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 != null goto label1;

        return "[null]";

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.String toString()>();

        return $r3;
    }

    protected final void _add(java.lang.'annotation'.Annotation)
    {
        java.lang.'annotation'.Annotation r2;
        java.util.HashMap $r1, $r3, $r5;
        java.lang.Class $r4;
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r2 := @parameter0: java.lang.'annotation'.Annotation;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations> = $r5;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r4 = interfaceinvoke r2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

        return;
    }
}
