public class org.dom4j.IllegalAddException extends java.lang.IllegalArgumentException
{

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.dom4j.IllegalAddException r0;

        r0 := @this: org.dom4j.IllegalAddException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(org.dom4j.Element, org.dom4j.Node, java.lang.String)
    {
        org.dom4j.Node r3;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r9, $r10, $r12;
        org.dom4j.IllegalAddException r0;
        org.dom4j.Element r7;
        java.lang.String $r4, $r8, r11, $r13;

        r0 := @this: org.dom4j.IllegalAddException;

        r7 := @parameter0: org.dom4j.Element;

        r3 := @parameter1: org.dom4j.Node;

        r11 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The node \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" could not be added to the element \"");

        $r8 = interfaceinvoke r7.<org.dom4j.Element: java.lang.String getQualifiedName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" because: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        return;
    }

    public void <init>(org.dom4j.Branch, org.dom4j.Node, java.lang.String)
    {
        org.dom4j.Node r3;
        org.dom4j.Branch r7;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r9, $r10, $r12;
        org.dom4j.IllegalAddException r0;
        java.lang.String $r4, $r8, r11, $r13;

        r0 := @this: org.dom4j.IllegalAddException;

        r7 := @parameter0: org.dom4j.Branch;

        r3 := @parameter1: org.dom4j.Node;

        r11 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The node \"");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" could not be added to the branch \"");

        $r8 = interfaceinvoke r7.<org.dom4j.Branch: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" because: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        return;
    }
}
