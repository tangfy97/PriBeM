public class org.apache.batik.bridge.SVGGlyphElementBridge extends org.apache.batik.bridge.AbstractSVGBridge implements org.apache.batik.bridge.ErrorConstants
{

    protected void <init>()
    {
        org.apache.batik.bridge.SVGGlyphElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGGlyphElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGGlyphElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGGlyphElementBridge;

        return "glyph";
    }

    public org.apache.batik.gvt.font.Glyph createGlyph(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, int, float, org.apache.batik.gvt.font.GVTFontFace, org.apache.batik.gvt.text.TextPaintInfo)
    {
        org.apache.batik.bridge.BridgeException $r29, $r50, $r53, $r56, $r59, $r62, $r65, $r70;
        java.lang.Object[] $r31, $r51, $r54, $r57, $r60, $r63, $r66, $r71;
        short $s2, $s16;
        java.util.StringTokenizer $r9;
        org.apache.batik.gvt.font.Glyph $r23;
        org.apache.batik.bridge.GVTBuilder $r32;
        org.apache.batik.gvt.font.GVTFontFace r0;
        org.w3c.dom.Attr $r39;
        org.w3c.dom.Node $r5, $r14, $r34, $r35, $r36, $r38, $r40, $r44;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, i18, i19, i20, i21;
        org.w3c.dom.NamedNodeMap $r37;
        org.apache.batik.parser.PathParser $r47;
        org.w3c.dom.NodeList $r4, $r43;
        org.w3c.dom.Element r2, r41, r75, r76, r77, r78;
        org.apache.batik.gvt.CompositeGraphicsNode $r33, $r42, r74;
        org.apache.batik.gvt.GraphicsNode $r45;
        org.apache.batik.bridge.BridgeContext r30;
        java.awt.geom.AffineTransform $r1;
        java.lang.Throwable $r67;
        java.util.ArrayList $r8;
        org.apache.batik.bridge.SVGGlyphElementBridge r72;
        java.lang.String $r3, $r6, $r7, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r20, $r21, $r25, $r26, $r27, $r28, r79, r80, r81, r82, r83, r84;
        java.lang.NumberFormatException $r49, $r52, $r55, $r58, $r61, $r64;
        java.awt.geom.Point2D$Float $r19, $r22;
        org.apache.batik.parser.AWTPathProducer $r46;
        boolean $z0;
        java.awt.Shape $r48, $r68, r73;
        float $f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        org.apache.batik.parser.ParseException $r69;
        double $d0, $d1;
        org.apache.batik.gvt.text.TextPaintInfo r24;

        r72 := @this: org.apache.batik.bridge.SVGGlyphElementBridge;

        r30 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        r41 := @parameter2: org.w3c.dom.Element;

        i9 := @parameter3: int;

        f1 := @parameter4: float;

        r0 := @parameter5: org.apache.batik.gvt.font.GVTFontFace;

        r24 := @parameter6: org.apache.batik.gvt.text.TextPaintInfo;

        $f0 = virtualinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: float getUnitsPerEm()>();

        f2 = f1 / $f0;

        $d1 = (double) f2;

        $f3 = neg f2;

        $d0 = (double) $f3;

        $r1 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>($d1, $d0);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "d");

        r73 = null;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 0 goto label07;

        $r46 = new org.apache.batik.parser.AWTPathProducer;

        specialinvoke $r46.<org.apache.batik.parser.AWTPathProducer: void <init>()>();

        $i17 = staticinvoke <org.apache.batik.bridge.CSSUtilities: int convertFillRule(org.w3c.dom.Element)>(r41);

        virtualinvoke $r46.<org.apache.batik.parser.AWTPathProducer: void setWindingRule(int)>($i17);

     label01:
        $r47 = new org.apache.batik.parser.PathParser;

        specialinvoke $r47.<org.apache.batik.parser.PathParser: void <init>()>();

        virtualinvoke $r47.<org.apache.batik.parser.PathParser: void setPathHandler(org.apache.batik.parser.PathHandler)>($r46);

        virtualinvoke $r47.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>($r3);

     label02:
        goto label43;

     label03:
        goto label07;

     label04:
        $r69 := @caughtexception;

        $r70 = new org.apache.batik.bridge.BridgeException;

        $r71 = newarray (java.lang.Object)[1];

        $r71[0] = "d";

        specialinvoke $r70.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r69, "attribute.malformed", $r71);

        throw $r70;

     label05:
        $r67 := @caughtexception;

        goto label44;

     label06:
        throw $r67;

     label07:
        $r4 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i1 = interfaceinvoke $r4.<org.w3c.dom.NodeList: int getLength()>();

        i18 = 0;

        i19 = 0;

        goto label10;

     label08:
        $r5 = interfaceinvoke $r4.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i19);

        $s2 = interfaceinvoke $r5.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 != 1 goto label09;

        i18 = i18 + 1;

     label09:
        i19 = i19 + 1;

     label10:
        if i19 < $i1 goto label08;

        r74 = null;

        if i18 <= 0 goto label16;

        $r32 = virtualinvoke r30.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r33 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r33.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        r74 = $r33;

        $r34 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r35 = interfaceinvoke $r34.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(0);

        r75 = (org.w3c.dom.Element) $r35;

        $r36 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r37 = interfaceinvoke $r36.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i14 = interfaceinvoke $r37.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i20 = 0;

        goto label12;

     label11:
        $r38 = interfaceinvoke $r37.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i20);

        $r39 = (org.w3c.dom.Attr) $r38;

        interfaceinvoke r75.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>($r39);

        i20 = i20 + 1;

     label12:
        if i20 < $i14 goto label11;

        $r40 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1);

        r76 = (org.w3c.dom.Element) $r40;

        interfaceinvoke r75.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r76);

        interfaceinvoke r41.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r75);

        $r42 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r42.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        virtualinvoke $r42.<org.apache.batik.gvt.AbstractGraphicsNode: void setTransform(java.awt.geom.AffineTransform)>($r1);

        $r43 = interfaceinvoke r76.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i15 = interfaceinvoke $r43.<org.w3c.dom.NodeList: int getLength()>();

        i21 = 0;

        goto label15;

     label13:
        $r44 = interfaceinvoke $r43.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i21);

        $s16 = interfaceinvoke $r44.<org.w3c.dom.Node: short getNodeType()>();

        if $s16 != 1 goto label14;

        r77 = (org.w3c.dom.Element) $r44;

        $r45 = virtualinvoke $r32.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r30, r77);

        virtualinvoke $r42.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r45);

     label14:
        i21 = i21 + 1;

     label15:
        if i21 < $i15 goto label13;

        virtualinvoke $r33.<org.apache.batik.gvt.CompositeGraphicsNode: boolean add(java.lang.Object)>($r42);

        interfaceinvoke r41.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r75);

     label16:
        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "unicode");

        $r7 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "glyph-name");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new java.util.StringTokenizer;

        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r7, " ,");

        goto label18;

     label17:
        $r10 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r10);

     label18:
        $z0 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label17;

        $r11 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "orientation");

        $r12 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "arabic-form");

        $r13 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "lang");

        $r14 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r78 = (org.w3c.dom.Element) $r14;

        $r15 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "horiz-adv-x");

        r79 = $r15;

        $i3 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i3 != 0 goto label19;

        $r28 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "horiz-adv-x");

        r79 = $r28;

        $i13 = virtualinvoke $r28.<java.lang.String: int length()>();

        if $i13 != 0 goto label19;

        $r29 = new org.apache.batik.bridge.BridgeException;

        $r31 = newarray (java.lang.Object)[1];

        $r31[0] = "horiz-adv-x";

        specialinvoke $r29.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r30, r78, "attribute.missing", $r31);

        throw $r29;

     label19:
        $f4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r79);

        $f13 = $f4 * f2;

     label20:
        goto label22;

     label21:
        $r64 := @caughtexception;

        $r65 = new org.apache.batik.bridge.BridgeException;

        $r66 = newarray (java.lang.Object)[2];

        $r66[0] = "horiz-adv-x";

        $r66[1] = r79;

        specialinvoke $r65.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r64, "attribute.malformed", $r66);

        throw $r65;

     label22:
        $r16 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-adv-y");

        r80 = $r16;

        $i4 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i4 != 0 goto label23;

        $r27 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-adv-y");

        r80 = $r27;

        $i12 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i12 != 0 goto label23;

        $f12 = virtualinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: float getUnitsPerEm()>();

        r80 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f12);

     label23:
        $f14 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r80);

        $f15 = $f14 * f2;

     label24:
        goto label26;

     label25:
        $r61 := @caughtexception;

        $r62 = new org.apache.batik.bridge.BridgeException;

        $r63 = newarray (java.lang.Object)[2];

        $r63[0] = "vert-adv-y";

        $r63[1] = r80;

        specialinvoke $r62.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r61, "attribute.malformed", $r63);

        throw $r62;

     label26:
        $r17 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-origin-x");

        r81 = $r17;

        $i5 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i5 != 0 goto label27;

        $r26 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-origin-x");

        r81 = $r26;

        $i11 = virtualinvoke $r26.<java.lang.String: int length()>();

        if $i11 != 0 goto label27;

        $f11 = $f13 / 2.0F;

        r81 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f11);

     label27:
        $f16 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r81);

        $f17 = $f16 * f2;

     label28:
        goto label30;

     label29:
        $r58 := @caughtexception;

        $r59 = new org.apache.batik.bridge.BridgeException;

        $r60 = newarray (java.lang.Object)[2];

        $r60[0] = "vert-origin-x";

        $r60[1] = r81;

        specialinvoke $r59.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r58, "attribute.malformed", $r60);

        throw $r59;

     label30:
        $r18 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-origin-y");

        r82 = $r18;

        $i6 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i6 != 0 goto label31;

        $r25 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "vert-origin-y");

        r82 = $r25;

        $i10 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i10 != 0 goto label31;

        $f10 = virtualinvoke r0.<org.apache.batik.gvt.font.GVTFontFace: float getAscent()>();

        r82 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f10);

     label31:
        $f18 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r82);

        $f19 = neg f2;

        $f20 = $f18 * $f19;

     label32:
        goto label34;

     label33:
        $r55 := @caughtexception;

        $r56 = new org.apache.batik.bridge.BridgeException;

        $r57 = newarray (java.lang.Object)[2];

        $r57[0] = "vert-origin-y";

        $r57[1] = r82;

        specialinvoke $r56.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r55, "attribute.malformed", $r57);

        throw $r56;

     label34:
        $r19 = new java.awt.geom.Point2D$Float;

        specialinvoke $r19.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f17, $f20);

        $r20 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "horiz-origin-x");

        r83 = $r20;

        $i7 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i7 != 0 goto label35;

        r83 = "0";

     label35:
        $f5 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r83);

        $f9 = $f5 * f2;

     label36:
        goto label38;

     label37:
        $r52 := @caughtexception;

        $r53 = new org.apache.batik.bridge.BridgeException;

        $r54 = newarray (java.lang.Object)[2];

        $r54[0] = "horiz-origin-x";

        $r54[1] = r83;

        specialinvoke $r53.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r78, $r52, "attribute.malformed", $r54);

        throw $r53;

     label38:
        $r21 = interfaceinvoke r78.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "horiz-origin-y");

        r84 = $r21;

        $i8 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i8 != 0 goto label39;

        r84 = "0";

     label39:
        $f6 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>(r84);

        $f7 = neg f2;

        $f8 = $f6 * $f7;

     label40:
        goto label42;

     label41:
        $r49 := @caughtexception;

        $r50 = new org.apache.batik.bridge.BridgeException;

        $r51 = newarray (java.lang.Object)[2];

        $r51[0] = "horiz-origin-y";

        $r51[1] = r84;

        specialinvoke $r50.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r30, r2, $r49, "attribute.malformed", $r51);

        throw $r50;

     label42:
        $r22 = new java.awt.geom.Point2D$Float;

        specialinvoke $r22.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f9, $f8);

        $r23 = new org.apache.batik.gvt.font.Glyph;

        specialinvoke $r23.<org.apache.batik.gvt.font.Glyph: void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode)>($r6, $r8, $r11, $r12, $r13, $r22, $r19, $f13, $f15, i9, r24, r73, r74);

        return $r23;

     label43:
        $r48 = virtualinvoke $r46.<org.apache.batik.parser.AWTPathProducer: java.awt.Shape getShape()>();

        r73 = virtualinvoke $r1.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r48);

        goto label03;

     label44:
        $r68 = virtualinvoke $r46.<org.apache.batik.parser.AWTPathProducer: java.awt.Shape getShape()>();

        virtualinvoke $r1.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r68);

        goto label06;

        catch org.apache.batik.parser.ParseException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label05 with label05;
        catch java.lang.NumberFormatException from label19 to label20 with label21;
        catch java.lang.NumberFormatException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label31 to label32 with label33;
        catch java.lang.NumberFormatException from label35 to label36 with label37;
        catch java.lang.NumberFormatException from label39 to label40 with label41;
    }
}
