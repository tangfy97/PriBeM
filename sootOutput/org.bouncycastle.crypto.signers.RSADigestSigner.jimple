public class org.bouncycastle.crypto.signers.RSADigestSigner extends java.lang.Object implements org.bouncycastle.crypto.Signer
{
    private final org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine;
    private final org.bouncycastle.asn1.x509.AlgorithmIdentifier algId;
    private final org.bouncycastle.crypto.Digest digest;
    private boolean forSigning;
    private static final java.util.Hashtable oidMap;

    public void <init>(org.bouncycastle.crypto.Digest)
    {
        org.bouncycastle.crypto.encodings.PKCS1Encoding $r1;
        org.bouncycastle.crypto.Digest r3;
        org.bouncycastle.crypto.engines.RSABlindedEngine $r2;
        org.bouncycastle.asn1.DERNull $r8;
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        java.lang.Object $r7;
        java.lang.String $r6;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r4;
        java.util.Hashtable $r5;
        org.bouncycastle.asn1.DERObjectIdentifier $r9;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        r3 := @parameter0: org.bouncycastle.crypto.Digest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r2 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r2.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        specialinvoke $r1.<org.bouncycastle.crypto.encodings.PKCS1Encoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r2);

        r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine> = $r1;

        r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest> = r3;

        $r4 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r5 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r6 = interfaceinvoke r3.<org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r7 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (org.bouncycastle.asn1.DERObjectIdentifier) $r7;

        $r8 = <org.bouncycastle.asn1.DERNull: org.bouncycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r4.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r9, $r8);

        r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.asn1.x509.AlgorithmIdentifier algId> = $r4;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.signers.RSADigestSigner r1;
        java.lang.StringBuilder $r0, $r4, $r5;
        org.bouncycastle.crypto.Digest $r2;
        java.lang.String $r3, $r6;

        r1 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("withRSA");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        org.bouncycastle.crypto.params.AsymmetricKeyParameter r7;
        java.lang.IllegalArgumentException $r3, $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        org.bouncycastle.crypto.params.ParametersWithRandom $r5;
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        boolean z0, $z1, $z2, $z3;
        org.bouncycastle.crypto.CipherParameters r1, $r6;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        $r5 = (org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke $r5.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r7 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) $r6;

        goto label2;

     label1:
        r7 = (org.bouncycastle.crypto.params.AsymmetricKeyParameter) r1;

     label2:
        if z0 == 0 goto label3;

        $z3 = virtualinvoke r7.<org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z3 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("signing requires private key");

        throw $r4;

     label3:
        if z0 != 0 goto label4;

        $z2 = virtualinvoke r7.<org.bouncycastle.crypto.params.AsymmetricKeyParameter: boolean isPrivate()>();

        if $z2 == 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("verification requires public key");

        throw $r3;

     label4:
        virtualinvoke r0.<org.bouncycastle.crypto.signers.RSADigestSigner: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public void update(byte)
    {
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        org.bouncycastle.crypto.Digest $r1;
        byte b0;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        int i0, i1;
        org.bouncycastle.crypto.Digest $r2;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException
    {
        byte[] r2, $r4, $r6;
        java.lang.IllegalStateException $r7;
        org.bouncycastle.crypto.Digest $r1, $r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        $z0 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning>;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSADigestSigner not initialised for signature generation.");

        throw $r7;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $r4 = specialinvoke r0.<org.bouncycastle.crypto.signers.RSADigestSigner: byte[] derEncode(byte[])>(r2);

        $r5 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        $i1 = lengthof $r4;

        $r6 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r4, 0, $i1);

        return $r6;
    }

    public boolean verifySignature(byte[])
    {
        byte[] r2, r4, $r6, $r7;
        java.lang.IllegalStateException $r10;
        byte $b14, $b16, $b17, $b19, $b21, $b22, $b25, $b26, $b28, $b29;
        boolean $z0;
        java.lang.Exception $r9;
        org.bouncycastle.crypto.Digest $r1, $r3;
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15, $i18, $i20, $i23, $i24, $i27, i30, i31, i32, i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        r4 := @parameter0: byte[];

        $z0 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: boolean forSigning>;

        if $z0 == 0 goto label01;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSADigestSigner not initialised for verification");

        throw $r10;

     label01:
        $r1 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r2 = newarray (byte)[$i0];

        $r3 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

     label02:
        $r5 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.AsymmetricBlockCipher rsaEngine>;

        $i1 = lengthof r4;

        $r6 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r4, 0, $i1);

        $r7 = specialinvoke r0.<org.bouncycastle.crypto.signers.RSADigestSigner: byte[] derEncode(byte[])>(r2);

     label03:
        goto label05;

     label04:
        $r9 := @caughtexception;

        return 0;

     label05:
        $i3 = lengthof $r6;

        $i2 = lengthof $r7;

        if $i3 != $i2 goto label09;

        i30 = 0;

     label06:
        $i27 = lengthof $r6;

        if i30 >= $i27 goto label08;

        $b29 = $r6[i30];

        $b28 = $r7[i30];

        $i34 = (int) $b29;

        $i35 = (int) $b28;

        if $i34 == $i35 goto label07;

        return 0;

     label07:
        i30 = i30 + 1;

        goto label06;

     label08:
        goto label17;

     label09:
        $i6 = lengthof $r6;

        $i4 = lengthof $r7;

        $i5 = $i4 - 2;

        if $i6 != $i5 goto label16;

        $i8 = lengthof $r6;

        $i7 = lengthof r2;

        $i9 = $i8 - $i7;

        i31 = $i9 - 2;

        $i11 = lengthof $r7;

        $i10 = lengthof r2;

        $i12 = $i11 - $i10;

        i13 = $i12 - 2;

        $b14 = $r7[1];

        $i36 = (int) $b14;

        $i15 = $i36 - 2;

        $b16 = (byte) $i15;

        $r7[1] = $b16;

        $b17 = $r7[3];

        $i37 = (int) $b17;

        $i18 = $i37 - 2;

        $b19 = (byte) $i18;

        $r7[3] = $b19;

        i32 = 0;

     label10:
        $i20 = lengthof r2;

        if i32 >= $i20 goto label12;

        $i23 = i31 + i32;

        $b26 = $r6[$i23];

        $i24 = i13 + i32;

        $b25 = $r7[$i24];

        $i38 = (int) $b26;

        $i39 = (int) $b25;

        if $i38 == $i39 goto label11;

        return 0;

     label11:
        i32 = i32 + 1;

        goto label10;

     label12:
        i33 = 0;

     label13:
        if i33 >= i31 goto label15;

        $b22 = $r6[i33];

        $b21 = $r7[i33];

        $i40 = (int) $b22;

        $i41 = (int) $b21;

        if $i40 == $i41 goto label14;

        return 0;

     label14:
        i33 = i33 + 1;

        goto label13;

     label15:
        goto label17;

     label16:
        return 0;

     label17:
        return 1;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    public void reset()
    {
        org.bouncycastle.crypto.signers.RSADigestSigner r0;
        org.bouncycastle.crypto.Digest $r1;

        r0 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        $r1 = r0.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.crypto.Digest digest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        return;
    }

    private byte[] derEncode(byte[])
    {
        byte[] r2, $r4;
        org.bouncycastle.crypto.signers.RSADigestSigner r1;
        org.bouncycastle.asn1.x509.DigestInfo $r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;

        r1 := @this: org.bouncycastle.crypto.signers.RSADigestSigner;

        r2 := @parameter0: byte[];

        $r0 = new org.bouncycastle.asn1.x509.DigestInfo;

        $r3 = r1.<org.bouncycastle.crypto.signers.RSADigestSigner: org.bouncycastle.asn1.x509.AlgorithmIdentifier algId>;

        specialinvoke $r0.<org.bouncycastle.asn1.x509.DigestInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r3, r2);

        $r4 = virtualinvoke $r0.<org.bouncycastle.asn1.x509.DigestInfo: byte[] getDEREncoded()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        org.bouncycastle.asn1.DERObjectIdentifier $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap> = $r0;

        $r2 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r1 = <org.bouncycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier ripemd128>;

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("RIPEMD128", $r1);

        $r4 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r3 = <org.bouncycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier ripemd160>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("RIPEMD160", $r3);

        $r6 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r5 = <org.bouncycastle.asn1.teletrust.TeleTrusTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier ripemd256>;

        virtualinvoke $r6.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("RIPEMD256", $r5);

        $r8 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r7 = <org.bouncycastle.asn1.x509.X509ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_SHA1>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-1", $r7);

        $r10 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r9 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_sha224>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-224", $r9);

        $r12 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r11 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_sha256>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-256", $r11);

        $r14 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r13 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_sha384>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-384", $r13);

        $r16 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r15 = <org.bouncycastle.asn1.nist.NISTObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_sha512>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHA-512", $r15);

        $r18 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r17 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier md2>;

        virtualinvoke $r18.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("MD2", $r17);

        $r20 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r19 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier md4>;

        virtualinvoke $r20.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("MD4", $r19);

        $r22 = <org.bouncycastle.crypto.signers.RSADigestSigner: java.util.Hashtable oidMap>;

        $r21 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier md5>;

        virtualinvoke $r22.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("MD5", $r21);

        return;
    }
}
