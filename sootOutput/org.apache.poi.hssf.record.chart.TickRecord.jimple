public final class org.apache.poi.hssf.record.chart.TickRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    private static final org.apache.poi.util.BitField autoTextColor;
    private static final org.apache.poi.util.BitField autoTextBackground;
    private static final org.apache.poi.util.BitField rotation;
    private static final org.apache.poi.util.BitField autorotate;
    private byte field_1_majorTickType;
    private byte field_2_minorTickType;
    private byte field_3_labelPosition;
    private byte field_4_background;
    private int field_5_labelColorRgb;
    private int field_6_zero1;
    private int field_7_zero2;
    private int field_8_zero3;
    private int field_9_zero4;
    private short field_10_options;
    private short field_11_tickColor;
    private short field_12_zero5;

    public void <init>()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s9, $s10, $s11;
        org.apache.poi.hssf.record.RecordInputStream r1;
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $b0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType> = $b0;

        $b1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType> = $b1;

        $b2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition> = $b2;

        $b3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background> = $b3;

        $i4 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb> = $i4;

        $i5 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1> = $i5;

        $i6 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2> = $i6;

        $i7 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_8_zero3> = $i7;

        $i8 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_9_zero4> = $i8;

        $s9 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s9;

        $s10 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor> = $s10;

        $s11 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5> = $s11;

        return;
    }

    public java.lang.String toString()
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;
        short $s14, $s15, $s16, $s17, $s18, $s19, $s20;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r30, $r31, $r33, $r34, $r35, $r37, $r38, $r40, $r41, $r42, $r44, $r45, $r47, $r48, $r49, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r69, $r70, $r71, $r73, $r74, $r76, $r77, $r78, $r81;
        java.lang.String $r4, $r8, $r11, $r15, $r18, $r22, $r25, $r29, $r32, $r36, $r39, $r43, $r46, $r50, $r53, $r57, $r68, $r72, $r75, $r79, $r80;
        boolean $z0, $z1, $z2;
        int $i8, $i9, $i10, $i11, $i12, $i13, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        org.apache.poi.hssf.record.chart.TickRecord r3;

        r3 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r81 = new java.lang.StringBuffer;

        specialinvoke $r81.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[TICK]\n");

        $r1 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .majorTickType        = ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $b0 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getMajorTickType()>();

        $r4 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b1 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getMajorTickType()>();

        $i21 = (int) $b1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i21);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .minorTickType        = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $b2 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getMinorTickType()>();

        $r11 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b3 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getMinorTickType()>();

        $i22 = (int) $b3;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i22);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r15 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .labelPosition        = ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $b4 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getLabelPosition()>();

        $r18 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b4);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b5 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getLabelPosition()>();

        $i23 = (int) $b5;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i23);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r22 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r23 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .background           = ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $b6 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getBackground()>();

        $r25 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte)>($b6);

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $b7 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: byte getBackground()>();

        $i24 = (int) $b7;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r29 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .labelColorRgb        = ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $i8 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getLabelColorRgb()>();

        $r32 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i8);

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $i9 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getLabelColorRgb()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r36 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r37 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .zero1                = ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $i10 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getZero1()>();

        $r39 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i10);

        $r40 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $i11 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getZero1()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i11);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r43 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        $r44 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .zero2                = ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $i12 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getZero2()>();

        $r46 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(int)>($i12);

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $i13 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: int getZero2()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r50 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r51 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .options              = ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $s14 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getOptions()>();

        $r53 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s14);

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $s15 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getOptions()>();

        $i25 = (int) $s15;

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i25);

        virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r57 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

        $r58 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .autoTextColor            = ");

        $z0 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: boolean isAutoTextColor()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r60 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .autoTextBackground       = ");

        $z1 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: boolean isAutoTextBackground()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r62 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .rotation                 = ");

        $s16 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getRotation()>();

        $i26 = (int) $s16;

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i26);

        virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r64 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("         .autorotate               = ");

        $z2 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: boolean isAutorotate()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        virtualinvoke $r65.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r66 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .tickColor            = ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $s17 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getTickColor()>();

        $r68 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s17);

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $s18 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getTickColor()>();

        $i27 = (int) $s18;

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i27);

        virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r72 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r72);

        $r73 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .zero3                = ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0x");

        $s19 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getZero3()>();

        $r75 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s19);

        $r76 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $s20 = virtualinvoke r3.<org.apache.poi.hssf.record.chart.TickRecord: short getZero3()>();

        $i28 = (int) $s20;

        $r78 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i28);

        virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" )");

        $r79 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r79);

        virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/TICK]\n");

        $r80 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r80;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        short $s9, $s10, $s11;
        byte $b0, $b1, $b2, $b3;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        org.apache.poi.hssf.record.chart.TickRecord r1;

        r1 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType>;

        $i12 = (int) $b0;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i12);

        $b1 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType>;

        $i13 = (int) $b1;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i13);

        $b2 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition>;

        $i14 = (int) $b2;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i14);

        $b3 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background>;

        $i15 = (int) $b3;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i15);

        $i4 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i4);

        $i5 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i5);

        $i6 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i6);

        $i7 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_8_zero3>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i7);

        $i8 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_9_zero4>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i8);

        $s9 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $i16 = (int) $s9;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i16);

        $s10 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor>;

        $i17 = (int) $s10;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i17);

        $s11 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5>;

        $i18 = (int) $s11;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i18);

        return;
    }

    protected int getDataSize()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        return 30;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        return 4126;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.chart.TickRecord $r0, r1;
        short $s9, $s10, $s11;
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7, $i8;

        r1 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r0 = new org.apache.poi.hssf.record.chart.TickRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.chart.TickRecord: void <init>()>();

        $b0 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType> = $b0;

        $b1 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType> = $b1;

        $b2 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition> = $b2;

        $b3 = r1.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background> = $b3;

        $i4 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb> = $i4;

        $i5 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1> = $i5;

        $i6 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2> = $i6;

        $i7 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_8_zero3>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_8_zero3> = $i7;

        $i8 = r1.<org.apache.poi.hssf.record.chart.TickRecord: int field_9_zero4>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_9_zero4> = $i8;

        $s9 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s9;

        $s10 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor> = $s10;

        $s11 = r1.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5>;

        $r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5> = $s11;

        return $r0;
    }

    public byte getMajorTickType()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte $b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $b0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType>;

        return $b0;
    }

    public void setMajorTickType(byte)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_1_majorTickType> = b0;

        return;
    }

    public byte getMinorTickType()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte $b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $b0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType>;

        return $b0;
    }

    public void setMinorTickType(byte)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_2_minorTickType> = b0;

        return;
    }

    public byte getLabelPosition()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte $b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $b0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition>;

        return $b0;
    }

    public void setLabelPosition(byte)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_3_labelPosition> = b0;

        return;
    }

    public byte getBackground()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte $b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $b0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background>;

        return $b0;
    }

    public void setBackground(byte)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        byte b0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: byte field_4_background> = b0;

        return;
    }

    public int getLabelColorRgb()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int $i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $i0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb>;

        return $i0;
    }

    public void setLabelColorRgb(int)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_5_labelColorRgb> = i0;

        return;
    }

    public int getZero1()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int $i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $i0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1>;

        return $i0;
    }

    public void setZero1(int)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_6_zero1> = i0;

        return;
    }

    public int getZero2()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int $i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $i0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2>;

        return $i0;
    }

    public void setZero2(int)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        int i0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: int field_7_zero2> = i0;

        return;
    }

    public short getOptions()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        return $s0;
    }

    public void setOptions(short)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = s0;

        return;
    }

    public short getTickColor()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor>;

        return $s0;
    }

    public void setTickColor(short)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_11_tickColor> = s0;

        return;
    }

    public short getZero3()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5>;

        return $s0;
    }

    public void setZero3(short)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_12_zero5> = s0;

        return;
    }

    public void setAutoTextColor(boolean)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextColor>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s1;

        return;
    }

    public boolean isAutoTextColor()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextColor>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setAutoTextBackground(boolean)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextBackground>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s1;

        return;
    }

    public boolean isAutoTextBackground()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextBackground>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setRotation(short)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short s0, $s1, $s2;
        org.apache.poi.util.BitField $r1;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        s0 := @parameter0: short;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField rotation>;

        $s1 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $s2 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortValue(short,short)>($s1, s0);

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s2;

        return;
    }

    public short getRotation()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField rotation>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short getShortValue(short)>($s0);

        return $s1;
    }

    public void setAutorotate(boolean)
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autorotate>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options> = $s1;

        return;
    }

    public boolean isAutorotate()
    {
        org.apache.poi.hssf.record.chart.TickRecord r0;
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.chart.TickRecord;

        $r1 = <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autorotate>;

        $s0 = r0.<org.apache.poi.hssf.record.chart.TickRecord: short field_10_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2, $r3;

        <org.apache.poi.hssf.record.chart.TickRecord: short sid> = 4126;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(1);

        <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextColor> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autoTextBackground> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(28);

        <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField rotation> = $r2;

        $r3 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(32);

        <org.apache.poi.hssf.record.chart.TickRecord: org.apache.poi.util.BitField autorotate> = $r3;

        return;
    }
}
