final class org.apache.lucene.index.TermsHashPerField extends org.apache.lucene.index.InvertedDocConsumerPerField
{
    private static final int HASH_INIT_SIZE;
    final org.apache.lucene.index.TermsHashConsumerPerField consumer;
    final org.apache.lucene.index.TermsHash termsHash;
    final org.apache.lucene.index.TermsHashPerField nextPerField;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    final org.apache.lucene.index.FieldInvertState fieldState;
    org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute termAtt;
    org.apache.lucene.util.BytesRef termBytesRef;
    final org.apache.lucene.util.IntBlockPool intPool;
    final org.apache.lucene.util.ByteBlockPool bytePool;
    final org.apache.lucene.util.ByteBlockPool termBytePool;
    final int streamCount;
    final int numPostingInt;
    final org.apache.lucene.index.FieldInfo fieldInfo;
    final org.apache.lucene.util.BytesRefHash bytesHash;
    org.apache.lucene.index.ParallelPostingsArray postingsArray;
    private final org.apache.lucene.util.Counter bytesUsed;
    private boolean doCall;
    private boolean doNextCall;
    int[] intUptos;
    int intUptoStart;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.DocInverterPerField, org.apache.lucene.index.TermsHash, org.apache.lucene.index.TermsHash, org.apache.lucene.index.FieldInfo)
    {
        org.apache.lucene.util.BytesRefHash $r14;
        org.apache.lucene.index.TermsHashPerField r0, $r19;
        org.apache.lucene.util.ByteBlockPool $r3, $r4, $r15;
        org.apache.lucene.index.DocInverterPerField r7;
        org.apache.lucene.util.IntBlockPool $r2;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r5;
        int $i0, $i1, $i2;
        org.apache.lucene.index.TermsHashConsumer $r10;
        org.apache.lucene.index.TermsHashConsumerPerField $r11, $r16;
        org.apache.lucene.index.TermsHash r1, r17;
        org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray $r12;
        org.apache.lucene.index.FieldInvertState $r8;
        org.apache.lucene.util.Counter $r6, $r13;
        org.apache.lucene.index.FieldInfo r9;
        org.apache.lucene.index.InvertedDocConsumerPerField $r18;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        r7 := @parameter0: org.apache.lucene.index.DocInverterPerField;

        r1 := @parameter1: org.apache.lucene.index.TermsHash;

        r17 := @parameter2: org.apache.lucene.index.TermsHash;

        r9 := @parameter3: org.apache.lucene.index.FieldInfo;

        specialinvoke r0.<org.apache.lucene.index.InvertedDocConsumerPerField: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.util.IntBlockPool intPool>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool> = $r2;

        $r3 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.util.ByteBlockPool bytePool>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool> = $r3;

        $r4 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.util.ByteBlockPool termBytePool>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool termBytePool> = $r4;

        $r5 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r5;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHash termsHash> = r1;

        $r6 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.util.Counter bytesUsed>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.Counter bytesUsed> = $r6;

        $r8 = r7.<org.apache.lucene.index.DocInverterPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInvertState fieldState> = $r8;

        $r10 = r1.<org.apache.lucene.index.TermsHash: org.apache.lucene.index.TermsHashConsumer consumer>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.index.TermsHashConsumer: org.apache.lucene.index.TermsHashConsumerPerField addField(org.apache.lucene.index.TermsHashPerField,org.apache.lucene.index.FieldInfo)>(r0, r9);

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer> = $r11;

        $r12 = new org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray;

        $r13 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.Counter bytesUsed>;

        specialinvoke $r12.<org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray: void <init>(org.apache.lucene.index.TermsHashPerField,org.apache.lucene.util.Counter,org.apache.lucene.index.TermsHashPerField$1)>(r0, $r13, null);

        $r14 = new org.apache.lucene.util.BytesRefHash;

        $r15 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool termBytePool>;

        specialinvoke $r14.<org.apache.lucene.util.BytesRefHash: void <init>(org.apache.lucene.util.ByteBlockPool,int,org.apache.lucene.util.BytesRefHash$BytesStartArray)>($r15, 4, $r12);

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash> = $r14;

        $r16 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        $i0 = virtualinvoke $r16.<org.apache.lucene.index.TermsHashConsumerPerField: int getStreamCount()>();

        r0.<org.apache.lucene.index.TermsHashPerField: int streamCount> = $i0;

        $i1 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        $i2 = 2 * $i1;

        r0.<org.apache.lucene.index.TermsHashPerField: int numPostingInt> = $i2;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInfo fieldInfo> = r9;

        if r17 == null goto label1;

        $r18 = virtualinvoke r17.<org.apache.lucene.index.TermsHash: org.apache.lucene.index.InvertedDocConsumerPerField addField(org.apache.lucene.index.DocInverterPerField,org.apache.lucene.index.FieldInfo)>(r7, r9);

        $r19 = (org.apache.lucene.index.TermsHashPerField) $r18;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField> = $r19;

        goto label2;

     label1:
        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField> = null;

     label2:
        return;
    }

    void shrinkHash(int)
    {
        int i0;
        org.apache.lucene.index.TermsHashPerField r0;
        org.apache.lucene.util.BytesRefHash $r1;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        virtualinvoke $r1.<org.apache.lucene.util.BytesRefHash: void clear(boolean)>(0);

        return;
    }

    public void reset()
    {
        org.apache.lucene.util.BytesRefHash $r1;
        org.apache.lucene.index.TermsHashPerField r0, $r2, $r3;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        virtualinvoke $r1.<org.apache.lucene.util.BytesRefHash: void clear(boolean)>(0);

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        virtualinvoke $r3.<org.apache.lucene.index.TermsHashPerField: void reset()>();

     label1:
        return;
    }

    public void abort()
    {
        org.apache.lucene.index.TermsHashPerField r0, $r1, $r2;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        virtualinvoke r0.<org.apache.lucene.index.TermsHashPerField: void reset()>();

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        virtualinvoke $r2.<org.apache.lucene.index.TermsHashPerField: void abort()>();

     label1:
        return;
    }

    public void initReader(org.apache.lucene.index.ByteSliceReader, int, int)
    {
        int[][] $r4;
        org.apache.lucene.index.TermsHashPerField r0;
        org.apache.lucene.index.ParallelPostingsArray $r1, $r6;
        java.lang.AssertionError $r10;
        org.apache.lucene.util.ByteBlockPool $r8;
        org.apache.lucene.util.IntBlockPool $r3;
        int[] $r2, $r7, $r9;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.lucene.index.ByteSliceReader r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        r5 := @parameter0: org.apache.lucene.index.ByteSliceReader;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = <org.apache.lucene.index.TermsHashPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i9 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        if i2 < $i9 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r2 = $r1.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        $i10 = $r2[i0];

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $r4 = $r3.<org.apache.lucene.util.IntBlockPool: int[][] buffers>;

        $i1 = $i10 >> 13;

        $r9 = $r4[$i1];

        $i11 = $i10 & 8191;

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $r6 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r7 = $r6.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts>;

        $i5 = $r7[i0];

        $i3 = <org.apache.lucene.util.ByteBlockPool: int FIRST_LEVEL_SIZE>;

        $i4 = i2 * $i3;

        $i8 = $i5 + $i4;

        $i6 = $i11 + i2;

        $i7 = $r9[$i6];

        virtualinvoke r5.<org.apache.lucene.index.ByteSliceReader: void init(org.apache.lucene.util.ByteBlockPool,int,int)>($r8, $i8, $i7);

        return;
    }

    public int[] sortPostings(java.util.Comparator)
    {
        int[] $r3;
        org.apache.lucene.util.BytesRefHash $r2;
        org.apache.lucene.index.TermsHashPerField r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        r1 := @parameter0: java.util.Comparator;

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int[] sort(java.util.Comparator)>(r1);

        return $r3;
    }

    void start(org.apache.lucene.index.IndexableField)
    {
        org.apache.lucene.util.BytesRef $r6;
        org.apache.lucene.index.IndexableField r7;
        org.apache.lucene.index.TermsHashPerField r0, $r9, $r10;
        org.apache.lucene.index.FieldInvertState $r1;
        org.apache.lucene.util.AttributeSource $r2;
        org.apache.lucene.util.Attribute $r3;
        org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute $r4, $r5;
        org.apache.lucene.index.TermsHashConsumerPerField $r8;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        r7 := @parameter0: org.apache.lucene.index.IndexableField;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.FieldInvertState fieldState>;

        $r2 = $r1.<org.apache.lucene.index.FieldInvertState: org.apache.lucene.util.AttributeSource attributeSource>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.AttributeSource: org.apache.lucene.util.Attribute getAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute) $r3;

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute termAtt> = $r4;

        $r5 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute termAtt>;

        $r6 = interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: org.apache.lucene.util.BytesRef getBytesRef()>();

        r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef> = $r6;

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r8.<org.apache.lucene.index.TermsHashConsumerPerField: void start(org.apache.lucene.index.IndexableField)>(r7);

        $r9 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        virtualinvoke $r10.<org.apache.lucene.index.TermsHashPerField: void start(org.apache.lucene.index.IndexableField)>(r7);

     label1:
        return;
    }

    boolean start(org.apache.lucene.index.IndexableField[], int) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r3;
        org.apache.lucene.index.TermsHashPerField r0, $r4, $r5;
        org.apache.lucene.index.IndexableField[] r1;
        int i0;
        org.apache.lucene.index.TermsHashConsumerPerField $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        r1 := @parameter0: org.apache.lucene.index.IndexableField[];

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.index.TermsHashConsumerPerField: boolean start(org.apache.lucene.index.IndexableField[],int)>(r1, i0);

        r0.<org.apache.lucene.index.TermsHashPerField: boolean doCall> = $z0;

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        virtualinvoke $r3.<org.apache.lucene.util.BytesRefHash: void reinit()>();

        $r4 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        $z3 = virtualinvoke $r5.<org.apache.lucene.index.TermsHashPerField: boolean start(org.apache.lucene.index.IndexableField[],int)>(r1, i0);

        r0.<org.apache.lucene.index.TermsHashPerField: boolean doNextCall> = $z3;

     label1:
        $z1 = r0.<org.apache.lucene.index.TermsHashPerField: boolean doCall>;

        if $z1 != 0 goto label2;

        $z2 = r0.<org.apache.lucene.index.TermsHashPerField: boolean doNextCall>;

        if $z2 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public void add(int) throws java.io.IOException
    {
        int[][] $r5;
        org.apache.lucene.util.BytesRefHash $r1;
        int[] $r3, $r6, $r11, $r16, $r18, $r19, $r23;
        org.apache.lucene.index.TermsHashConsumerPerField $r7, $r20;
        org.apache.lucene.index.TermsHashPerField r0;
        org.apache.lucene.index.ParallelPostingsArray $r2, $r14, $r17;
        org.apache.lucene.util.ByteBlockPool $r9, $r21, $r22, $r24;
        org.apache.lucene.util.IntBlockPool $r4, $r8, $r10, $r12, $r13, $r15, $r25;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i29, i30, i31, $i33;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $i1 = virtualinvoke $r1.<org.apache.lucene.util.BytesRefHash: int addByPoolOffset(int)>(i0);

        if $i1 < 0 goto label5;

        $i6 = r0.<org.apache.lucene.index.TermsHashPerField: int numPostingInt>;

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i5 = $r8.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        $i7 = $i6 + $i5;

        if $i7 <= 8192 goto label1;

        $r25 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        virtualinvoke $r25.<org.apache.lucene.util.IntBlockPool: void nextBuffer()>();

     label1:
        $r9 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i8 = $r9.<org.apache.lucene.util.ByteBlockPool: int byteUpto>;

        $i33 = (int) 32768;

        $i12 = $i33 - $i8;

        $i10 = r0.<org.apache.lucene.index.TermsHashPerField: int numPostingInt>;

        $i9 = <org.apache.lucene.util.ByteBlockPool: int FIRST_LEVEL_SIZE>;

        $i11 = $i10 * $i9;

        if $i12 >= $i11 goto label2;

        $r24 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        virtualinvoke $r24.<org.apache.lucene.util.ByteBlockPool: void nextBuffer()>();

     label2:
        $r10 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $r11 = $r10.<org.apache.lucene.util.IntBlockPool: int[] buffer>;

        r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos> = $r11;

        $r12 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i13 = $r12.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart> = $i13;

        $r13 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i15 = $r13.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        $i14 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        $i16 = $i15 + $i14;

        $r13.<org.apache.lucene.util.IntBlockPool: int intUpto> = $i16;

        $r14 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r16 = $r14.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        $i18 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $r15 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i17 = $r15.<org.apache.lucene.util.IntBlockPool: int intOffset>;

        $i19 = $i18 + $i17;

        $r16[$i1] = $i19;

        i28 = 0;

     label3:
        $i29 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        if i28 >= $i29 goto label4;

        $r21 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i22 = <org.apache.lucene.util.ByteBlockPool: int FIRST_LEVEL_SIZE>;

        $i23 = virtualinvoke $r21.<org.apache.lucene.util.ByteBlockPool: int newSlice(int)>($i22);

        $r23 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i24 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i27 = $i24 + i28;

        $r22 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i25 = $r22.<org.apache.lucene.util.ByteBlockPool: int byteOffset>;

        $i26 = $i23 + $i25;

        $r23[$i27] = $i26;

        i28 = i28 + 1;

        goto label3;

     label4:
        $r17 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r19 = $r17.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts>;

        $r18 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i20 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i21 = $r18[$i20];

        $r19[$i1] = $i21;

        $r20 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r20.<org.apache.lucene.index.TermsHashConsumerPerField: void newTerm(int)>($i1);

        goto label6;

     label5:
        $i2 = neg $i1;

        i30 = $i2 - 1;

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r3 = $r2.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        i31 = $r3[i30];

        $r4 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $r5 = $r4.<org.apache.lucene.util.IntBlockPool: int[][] buffers>;

        $i3 = i31 >> 13;

        $r6 = $r5[$i3];

        r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos> = $r6;

        $i4 = i31 & 8191;

        r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart> = $i4;

        $r7 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r7.<org.apache.lucene.index.TermsHashConsumerPerField: void addTerm(int)>(i30);

     label6:
        return;
    }

    void add() throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r2, $r13;
        java.lang.Throwable $r32;
        org.apache.lucene.util.IntBlockPool $r6, $r14, $r16, $r18, $r19, $r21, $r31;
        java.lang.String $r36, $r42;
        int[][] $r7;
        int[] $r5, $r8, $r11, $r17, $r22, $r24, $r25, $r29;
        org.apache.lucene.index.TermsHashConsumerPerField $r9, $r26, $r37;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r3, $r33, $r38, $r39, $r40, $r43;
        org.apache.lucene.index.TermsHashPerField r0, $r12;
        org.apache.lucene.index.ParallelPostingsArray $r4, $r10, $r20, $r23;
        org.apache.lucene.util.ByteBlockPool $r15, $r27, $r28, $r30;
        org.apache.lucene.util.BytesRefHash$MaxBytesLengthExceededException $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, $i33, i34, $i36;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r35, $r41;
        org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute $r1;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

     label01:
        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute termAtt>;

        $i0 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: int fillBytesRef()>();

        $i1 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int add(org.apache.lucene.util.BytesRef,int)>($r3, $i0);

        i30 = $i1;

     label02:
        goto label09;

     label03:
        $r34 := @caughtexception;

        $r35 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r36 = $r35.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.String maxTermPrefix>;

        if $r36 != null goto label08;

        $r38 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        i31 = $r38.<org.apache.lucene.util.BytesRef: int length>;

     label04:
        $r39 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        $i29 = staticinvoke <java.lang.Math: int min(int,int)>(30, 32766);

        $r39.<org.apache.lucene.util.BytesRef: int length> = $i29;

        $r41 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r40 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        $r42 = virtualinvoke $r40.<org.apache.lucene.util.BytesRef: java.lang.String toString()>();

        $r41.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.String maxTermPrefix> = $r42;

     label05:
        $r43 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        $r43.<org.apache.lucene.util.BytesRef: int length> = i31;

        goto label08;

     label06:
        $r32 := @caughtexception;

     label07:
        $r33 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRef termBytesRef>;

        $r33.<org.apache.lucene.util.BytesRef: int length> = i31;

        throw $r32;

     label08:
        $r37 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r37.<org.apache.lucene.index.TermsHashConsumerPerField: void skippingLongTerm()>();

        return;

     label09:
        if $i1 < 0 goto label14;

        $r13 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.BytesRefHash bytesHash>;

        virtualinvoke $r13.<org.apache.lucene.util.BytesRefHash: int byteStart(int)>($i1);

        $i7 = r0.<org.apache.lucene.index.TermsHashPerField: int numPostingInt>;

        $r14 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i6 = $r14.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        $i8 = $i7 + $i6;

        if $i8 <= 8192 goto label10;

        $r31 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        virtualinvoke $r31.<org.apache.lucene.util.IntBlockPool: void nextBuffer()>();

     label10:
        $r15 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i9 = $r15.<org.apache.lucene.util.ByteBlockPool: int byteUpto>;

        $i36 = (int) 32768;

        $i13 = $i36 - $i9;

        $i11 = r0.<org.apache.lucene.index.TermsHashPerField: int numPostingInt>;

        $i10 = <org.apache.lucene.util.ByteBlockPool: int FIRST_LEVEL_SIZE>;

        $i12 = $i11 * $i10;

        if $i13 >= $i12 goto label11;

        $r30 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        virtualinvoke $r30.<org.apache.lucene.util.ByteBlockPool: void nextBuffer()>();

     label11:
        $r16 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $r17 = $r16.<org.apache.lucene.util.IntBlockPool: int[] buffer>;

        r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos> = $r17;

        $r18 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i14 = $r18.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart> = $i14;

        $r19 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i16 = $r19.<org.apache.lucene.util.IntBlockPool: int intUpto>;

        $i15 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        $i17 = $i16 + $i15;

        $r19.<org.apache.lucene.util.IntBlockPool: int intUpto> = $i17;

        $r20 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r22 = $r20.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        $i19 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $r21 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $i18 = $r21.<org.apache.lucene.util.IntBlockPool: int intOffset>;

        $i20 = $i19 + $i18;

        $r22[$i1] = $i20;

        i32 = 0;

     label12:
        $i33 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        if i32 >= $i33 goto label13;

        $r27 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i23 = <org.apache.lucene.util.ByteBlockPool: int FIRST_LEVEL_SIZE>;

        $i24 = virtualinvoke $r27.<org.apache.lucene.util.ByteBlockPool: int newSlice(int)>($i23);

        $r29 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i25 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i28 = $i25 + i32;

        $r28 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i26 = $r28.<org.apache.lucene.util.ByteBlockPool: int byteOffset>;

        $i27 = $i24 + $i26;

        $r29[$i28] = $i27;

        i32 = i32 + 1;

        goto label12;

     label13:
        $r23 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r25 = $r23.<org.apache.lucene.index.ParallelPostingsArray: int[] byteStarts>;

        $r24 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i21 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i22 = $r24[$i21];

        $r25[$i1] = $i22;

        $r26 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r26.<org.apache.lucene.index.TermsHashConsumerPerField: void newTerm(int)>($i1);

        goto label15;

     label14:
        $i2 = neg $i1;

        i30 = $i2 - 1;

        $r4 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r5 = $r4.<org.apache.lucene.index.ParallelPostingsArray: int[] intStarts>;

        i34 = $r5[i30];

        $r6 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.IntBlockPool intPool>;

        $r7 = $r6.<org.apache.lucene.util.IntBlockPool: int[][] buffers>;

        $i3 = i34 >> 13;

        $r8 = $r7[$i3];

        r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos> = $r8;

        $i4 = i34 & 8191;

        r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart> = $i4;

        $r9 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r9.<org.apache.lucene.index.TermsHashConsumerPerField: void addTerm(int)>(i30);

     label15:
        $z0 = r0.<org.apache.lucene.index.TermsHashPerField: boolean doNextCall>;

        if $z0 == 0 goto label16;

        $r12 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        $r10 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.ParallelPostingsArray postingsArray>;

        $r11 = $r10.<org.apache.lucene.index.ParallelPostingsArray: int[] textStarts>;

        $i5 = $r11[i30];

        virtualinvoke $r12.<org.apache.lucene.index.TermsHashPerField: void add(int)>($i5);

     label16:
        return;

        catch org.apache.lucene.util.BytesRefHash$MaxBytesLengthExceededException from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    void writeByte(int, byte)
    {
        byte[] r10;
        org.apache.lucene.index.TermsHashPerField r0;
        java.lang.AssertionError $r9;
        org.apache.lucene.util.ByteBlockPool $r2, $r5, $r6, $r7;
        byte $b5, b6;
        int[] $r1, $r4, $r8;
        int i0, $i1, $i2, i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        boolean $z0;
        byte[][] $r3;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        i0 := @parameter0: int;

        b6 := @parameter1: byte;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i1 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i2 = $i1 + i0;

        i3 = $r1[$i2];

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $r3 = $r2.<org.apache.lucene.util.ByteBlockPool: byte[][] buffers>;

        $i4 = i3 >> 15;

        r10 = $r3[$i4];

        $z0 = <org.apache.lucene.index.TermsHashPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r10 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $i16 = i3 & 32767;

        i17 = $i16;

        $b5 = r10[$i16];

        if $b5 == 0 goto label2;

        $r5 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i11 = virtualinvoke $r5.<org.apache.lucene.util.ByteBlockPool: int allocSlice(byte[],int)>(r10, $i16);

        i17 = $i11;

        $r6 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        r10 = $r6.<org.apache.lucene.util.ByteBlockPool: byte[] buffer>;

        $r8 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i12 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i15 = $i12 + i0;

        $r7 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.util.ByteBlockPool bytePool>;

        $i13 = $r7.<org.apache.lucene.util.ByteBlockPool: int byteOffset>;

        $i14 = $i11 + $i13;

        $r8[$i15] = $i14;

     label2:
        r10[i17] = b6;

        $r4 = r0.<org.apache.lucene.index.TermsHashPerField: int[] intUptos>;

        $i7 = r0.<org.apache.lucene.index.TermsHashPerField: int intUptoStart>;

        $i8 = $i7 + i0;

        $i9 = $r4[$i8];

        $i10 = $i9 + 1;

        $r4[$i8] = $i10;

        return;
    }

    public void writeBytes(int, byte[], int, int)
    {
        byte[] r1;
        org.apache.lucene.index.TermsHashPerField r0;
        byte $b4;
        int i0, i1, i2, i3, i5;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        i3 := @parameter0: int;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = i0 + i1;

        i5 = i0;

     label1:
        if i5 >= i2 goto label2;

        $b4 = r1[i5];

        virtualinvoke r0.<org.apache.lucene.index.TermsHashPerField: void writeByte(int,byte)>(i3, $b4);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    void writeVInt(int, int)
    {
        org.apache.lucene.index.TermsHashPerField r0;
        java.lang.AssertionError $r2;
        byte $b1, $b4;
        int i0, $i2, $i3, $i5, i6, $i7, $i9;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        $z0 = <org.apache.lucene.index.TermsHashPerField: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i5 = r0.<org.apache.lucene.index.TermsHashPerField: int streamCount>;

        if i0 < $i5 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $i9 = (int) -128;

        $i7 = i6 & $i9;

        if $i7 == 0 goto label2;

        $i2 = i6 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        virtualinvoke r0.<org.apache.lucene.index.TermsHashPerField: void writeByte(int,byte)>(i0, $b4);

        i6 = i6 >>> 7;

        goto label1;

     label2:
        $b1 = (byte) i6;

        virtualinvoke r0.<org.apache.lucene.index.TermsHashPerField: void writeByte(int,byte)>(i0, $b1);

        return;
    }

    void finish() throws java.io.IOException
    {
        org.apache.lucene.index.TermsHashPerField r0, $r2, $r3;
        org.apache.lucene.index.TermsHashConsumerPerField $r1;

        r0 := @this: org.apache.lucene.index.TermsHashPerField;

        $r1 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashConsumerPerField consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.TermsHashConsumerPerField: void finish()>();

        $r2 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.lucene.index.TermsHashPerField: org.apache.lucene.index.TermsHashPerField nextPerField>;

        virtualinvoke $r3.<org.apache.lucene.index.TermsHashPerField: void finish()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.index.TermsHashPerField: int HASH_INIT_SIZE> = 4;

        $r0 = class "Lorg/apache/lucene/index/TermsHashPerField;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermsHashPerField: boolean $assertionsDisabled> = $z1;

        return;
    }
}
