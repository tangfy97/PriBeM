public abstract class org.eclipse.jetty.util.component.AbstractLifeCycle extends java.lang.Object implements org.eclipse.jetty.util.component.LifeCycle
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String STOPPED;
    public static final java.lang.String FAILED;
    public static final java.lang.String STARTING;
    public static final java.lang.String STARTED;
    public static final java.lang.String STOPPING;
    public static final java.lang.String RUNNING;
    private final java.lang.Object _lock;
    private final int __FAILED;
    private final int __STOPPED;
    private final int __STARTING;
    private final int __STARTED;
    private final int __STOPPING;
    private volatile int _state;
    protected final java.util.concurrent.CopyOnWriteArrayList _listeners;

    public void <init>()
    {
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        int $i1;
        java.lang.Object $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STOPPING> = 3;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STARTED> = 2;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STARTING> = 1;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STOPPED> = 0;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __FAILED> = -1;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.Object _lock> = $r3;

        $i1 = (int) -1;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __FAILED> = $i1;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STOPPED> = 0;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STARTING> = 1;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STARTED> = 2;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int __STOPPING> = 3;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = 0;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners> = $r4;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        return;
    }

    protected void doStop() throws java.lang.Exception
    {
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        return;
    }

    public final void start() throws java.lang.Exception
    {
        java.lang.Throwable $r2;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        int $i0, $i1;
        java.lang.Error $r3;
        java.lang.Object $r1;
        java.lang.Exception $r4;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $r1 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.Object _lock>;

        entermonitor $r1;

     label01:
        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 == 2 goto label02;

        $i1 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i1 != 1 goto label04;

     label02:
        exitmonitor $r1;

     label03:
        return;

     label04:
        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setStarting()>();

        virtualinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStart()>();

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setStarted()>();

     label05:
        goto label08;

     label06:
        $r4 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r4);

        throw $r4;

     label07:
        $r3 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r3);

        throw $r3;

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r2;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Error from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final void stop() throws java.lang.Exception
    {
        java.lang.Throwable $r2;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        int $i0, $i1;
        java.lang.Error $r3;
        java.lang.Object $r1;
        java.lang.Exception $r4;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $r1 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.Object _lock>;

        entermonitor $r1;

     label01:
        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 == 3 goto label02;

        $i1 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i1 != 0 goto label04;

     label02:
        exitmonitor $r1;

     label03:
        return;

     label04:
        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setStopping()>();

        virtualinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void doStop()>();

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setStopped()>();

     label05:
        goto label08;

     label06:
        $r4 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r4);

        throw $r4;

     label07:
        $r3 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void setFailed(java.lang.Throwable)>($r3);

        throw $r3;

     label08:
        exitmonitor $r1;

     label09:
        goto label12;

     label10:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r2;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Error from label01 to label02 with label07;
        catch java.lang.Error from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isRunning()
    {
        int i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if i0 == 2 goto label1;

        if i0 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isStarted()
    {
        int $i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStarting()
    {
        int $i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStopping()
    {
        int $i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isStopped()
    {
        int $i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFailed()
    {
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void addLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle$Listener)
    {
        org.eclipse.jetty.util.component.LifeCycle$Listener r1;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle$Listener;

        $r2 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeLifeCycleListener(org.eclipse.jetty.util.component.LifeCycle$Listener)
    {
        org.eclipse.jetty.util.component.LifeCycle$Listener r1;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        r1 := @parameter0: org.eclipse.jetty.util.component.LifeCycle$Listener;

        $r2 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getState()
    {
        int $i0;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $i0 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state>;

        tableswitch($i0)
        {
            case -1: goto label1;
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label6;
        };

     label1:
        return "FAILED";

     label2:
        return "STARTING";

     label3:
        return "STARTED";

     label4:
        return "STOPPING";

     label5:
        return "STOPPED";

     label6:
        return null;
    }

    public static java.lang.String getState(org.eclipse.jetty.util.component.LifeCycle)
    {
        org.eclipse.jetty.util.component.LifeCycle r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.eclipse.jetty.util.component.LifeCycle;

        $z0 = interfaceinvoke r0.<org.eclipse.jetty.util.component.LifeCycle: boolean isStarting()>();

        if $z0 == 0 goto label1;

        return "STARTING";

     label1:
        $z1 = interfaceinvoke r0.<org.eclipse.jetty.util.component.LifeCycle: boolean isStarted()>();

        if $z1 == 0 goto label2;

        return "STARTED";

     label2:
        $z2 = interfaceinvoke r0.<org.eclipse.jetty.util.component.LifeCycle: boolean isStopping()>();

        if $z2 == 0 goto label3;

        return "STOPPING";

     label3:
        $z3 = interfaceinvoke r0.<org.eclipse.jetty.util.component.LifeCycle: boolean isStopped()>();

        if $z3 == 0 goto label4;

        return "STOPPED";

     label4:
        return "FAILED";
    }

    private void setStarted()
    {
        java.lang.Object[] $r1;
        java.util.Iterator $r4;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        org.eclipse.jetty.util.component.LifeCycle$Listener r6;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = 2;

        $r2 = <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("STARTED {}", $r1);

        $r3 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.util.component.LifeCycle$Listener) $r5;

        interfaceinvoke r6.<org.eclipse.jetty.util.component.LifeCycle$Listener: void lifeCycleStarted(org.eclipse.jetty.util.component.LifeCycle)>(r0);

        goto label1;

     label2:
        return;
    }

    private void setStarting()
    {
        java.lang.Object[] $r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.util.component.AbstractLifeCycle r1;
        org.eclipse.jetty.util.component.LifeCycle$Listener r6;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $r2 = <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("starting {}", $r0);

        r1.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = 1;

        $r3 = r1.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.util.component.LifeCycle$Listener) $r5;

        interfaceinvoke r6.<org.eclipse.jetty.util.component.LifeCycle$Listener: void lifeCycleStarting(org.eclipse.jetty.util.component.LifeCycle)>(r1);

        goto label1;

     label2:
        return;
    }

    private void setStopping()
    {
        java.lang.Object[] $r0;
        java.util.Iterator $r4;
        org.eclipse.jetty.util.component.AbstractLifeCycle r1;
        org.eclipse.jetty.util.component.LifeCycle$Listener r6;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        $r2 = <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("stopping {}", $r0);

        r1.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = 3;

        $r3 = r1.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.util.component.LifeCycle$Listener) $r5;

        interfaceinvoke r6.<org.eclipse.jetty.util.component.LifeCycle$Listener: void lifeCycleStopping(org.eclipse.jetty.util.component.LifeCycle)>(r1);

        goto label1;

     label2:
        return;
    }

    private void setStopped()
    {
        java.lang.Object[] $r1;
        java.util.Iterator $r4;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        org.eclipse.jetty.util.component.LifeCycle$Listener r6;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = 0;

        $r2 = <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "STOPPED";

        $r1[1] = r0;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("{} {}", $r1);

        $r3 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.util.component.LifeCycle$Listener) $r5;

        interfaceinvoke r6.<org.eclipse.jetty.util.component.LifeCycle$Listener: void lifeCycleStopped(org.eclipse.jetty.util.component.LifeCycle)>(r0);

        goto label1;

     label2:
        return;
    }

    private void setFailed(java.lang.Throwable)
    {
        java.lang.Throwable r6;
        java.util.Iterator $r10;
        org.eclipse.jetty.util.component.AbstractLifeCycle r0;
        int $i1;
        org.eclipse.jetty.util.component.LifeCycle$Listener r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r13;
        java.lang.Object $r11;
        org.eclipse.jetty.util.log.Logger $r2;
        java.lang.String $r8;
        java.util.concurrent.CopyOnWriteArrayList $r9;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.component.AbstractLifeCycle;

        r6 := @parameter0: java.lang.Throwable;

        $i1 = (int) -1;

        r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: int _state> = $i1;

        $r2 = <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAILED ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r8, r6);

        $r9 = r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: java.util.concurrent.CopyOnWriteArrayList _listeners>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.eclipse.jetty.util.component.LifeCycle$Listener) $r11;

        interfaceinvoke r12.<org.eclipse.jetty.util.component.LifeCycle$Listener: void lifeCycleFailure(org.eclipse.jetty.util.component.LifeCycle,java.lang.Throwable)>(r0, r6);

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String RUNNING> = "RUNNING";

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String STOPPING> = "STOPPING";

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String STARTED> = "STARTED";

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String STARTING> = "STARTING";

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String FAILED> = "FAILED";

        <org.eclipse.jetty.util.component.AbstractLifeCycle: java.lang.String STOPPED> = "STOPPED";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/component/AbstractLifeCycle;");

        <org.eclipse.jetty.util.component.AbstractLifeCycle: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
