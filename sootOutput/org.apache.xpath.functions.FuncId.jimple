public class org.apache.xpath.functions.FuncId extends org.apache.xpath.functions.FunctionOneArg
{

    public void <init>()
    {
        org.apache.xpath.functions.FuncId r0;

        r0 := @this: org.apache.xpath.functions.FuncId;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    private org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext, int, java.lang.String, org.apache.xml.utils.StringVector, org.apache.xpath.NodeSetDTM, boolean)
    {
        org.apache.xpath.functions.FuncId r7;
        org.apache.xpath.XPathContext r2;
        java.util.StringTokenizer $r9;
        int i0, $i1, $i3;
        java.lang.String r0, $r4;
        org.apache.xml.utils.StringVector r8, $r10;
        boolean $z0, z1, $z2, z3;
        org.apache.xpath.NodeSetDTM r6;
        org.apache.xml.dtm.DTM $r3;

        r7 := @this: org.apache.xpath.functions.FuncId;

        r2 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r8 := @parameter3: org.apache.xml.utils.StringVector;

        r6 := @parameter4: org.apache.xpath.NodeSetDTM;

        z1 := @parameter5: boolean;

        if null == r0 goto label7;

        $r9 = new java.util.StringTokenizer;

        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0);

        z3 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        $r3 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        goto label6;

     label1:
        $r4 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        z3 = $z0;

        if null == r8 goto label2;

        $z2 = virtualinvoke r8.<org.apache.xml.utils.StringVector: boolean contains(java.lang.String)>($r4);

        if $z2 == 0 goto label2;

        goto label6;

     label2:
        $i1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: int getElementById(java.lang.String)>($r4);

        $i3 = (int) -1;

        if $i3 == $i1 goto label3;

        virtualinvoke r6.<org.apache.xpath.NodeSetDTM: int addNodeInDocOrder(int,org.apache.xpath.XPathContext)>($i1, r2);

     label3:
        if null == $r4 goto label6;

        if $z0 != 0 goto label4;

        if z1 == 0 goto label6;

     label4:
        if null != r8 goto label5;

        $r10 = new org.apache.xml.utils.StringVector;

        specialinvoke $r10.<org.apache.xml.utils.StringVector: void <init>()>();

        r8 = $r10;

     label5:
        virtualinvoke r8.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>($r4);

     label6:
        if z3 != 0 goto label1;

     label7:
        return r8;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.utils.XMLString $r11;
        org.apache.xpath.functions.FuncId r2;
        org.apache.xpath.XPathContext r0;
        int $i0, $i1, $i2, $i3, i4, $i6, $i8, $i10, $i12;
        java.lang.String $r8, $r12;
        org.apache.xml.utils.StringVector $r13, r14;
        boolean $z0;
        org.apache.xpath.Expression $r3;
        org.apache.xpath.objects.XNodeSet $r15;
        org.apache.xml.dtm.DTMIterator $r9;
        org.apache.xpath.NodeSetDTM $r7;
        org.apache.xml.dtm.DTMManager $r6;
        org.apache.xml.dtm.DTM $r1, $r10;
        org.apache.xpath.objects.XObject $r4;

        r2 := @this: org.apache.xpath.functions.FuncId;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r1 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getDocument()>();

        $i6 = (int) -1;

        if $i6 != $i1 goto label1;

        virtualinvoke r2.<org.apache.xpath.Expression: void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r0, "ER_CONTEXT_HAS_NO_OWNERDOC", null);

     label1:
        $r3 = r2.<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression m_arg0>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r0);

        $i2 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: int getType()>();

        $r15 = new org.apache.xpath.objects.XNodeSet;

        $r6 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r15.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMManager)>($r6);

        $r7 = virtualinvoke $r15.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        if 4 != $i2 goto label6;

        $r9 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        r14 = null;

        i4 = interfaceinvoke $r9.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        goto label5;

     label2:
        $r10 = interfaceinvoke $r9.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>(i4);

        $r11 = interfaceinvoke $r10.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i4);

        $r12 = interfaceinvoke $r11.<org.apache.xml.utils.XMLString: java.lang.String toString()>();

        $i3 = interfaceinvoke $r9.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        i4 = $i3;

        $r13 = r14;

        $i8 = (int) -1;

        if $i8 == $i3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r14 = specialinvoke r2.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r0, $i1, $r12, $r13, $r7, $z0);

     label5:
        $i10 = (int) -1;

        if $i10 != i4 goto label2;

        goto label8;

     label6:
        $i12 = (int) -1;

        if $i12 != $i2 goto label7;

        return $r15;

     label7:
        $r8 = virtualinvoke $r4.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        specialinvoke r2.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r0, $i1, $r8, null, $r7, 0);

     label8:
        return $r15;
    }
}
