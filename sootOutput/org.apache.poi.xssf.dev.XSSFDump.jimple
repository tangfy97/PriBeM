public final class org.apache.poi.xssf.dev.XSSFDump extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.xssf.dev.XSSFDump r0;

        r0 := @this: org.apache.poi.xssf.dev.XSSFDump;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r2;
        java.lang.String[] r0;
        int $i0, i1;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.util.zip.ZipFile $r7;
        java.lang.String $r4, $r6, $r8;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumping ");

        $r4 = r0[i1];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = new java.util.zip.ZipFile;

        $r8 = r0[i1];

        specialinvoke $r7.<java.util.zip.ZipFile: void <init>(java.lang.String)>($r8);

        staticinvoke <org.apache.poi.xssf.dev.XSSFDump: void dump(java.util.zip.ZipFile)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void dump(java.util.zip.ZipFile) throws java.lang.Exception
    {
        java.util.Enumeration $r4;
        java.util.zip.ZipFile r0;
        java.util.zip.ZipEntry r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Exception $r17;
        java.lang.StringBuilder $r20, $r22, $r23, $r34;
        int $i0, $i1, $i3;
        java.lang.String $r1, $r3, $r7, $r9, $r11, $r12, $r13, $r16, $r21, $r24;
        org.apache.xmlbeans.XmlObject $r27;
        java.io.PrintStream $r19;
        java.io.FileOutputStream $r32;
        java.io.File $r29, $r30, $r31;
        org.apache.xmlbeans.XmlOptions $r33;
        java.lang.Object $r5;
        java.io.InputStream $r14, $r25, $r26;

        r0 := @parameter0: java.util.zip.ZipFile;

        $r1 = virtualinvoke r0.<java.util.zip.ZipFile: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        $r29 = new java.io.File;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r29.<java.io.File: boolean mkdir()>();

        $r4 = virtualinvoke r0.<java.util.zip.ZipFile: java.util.Enumeration entries()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.util.zip.ZipEntry) $r5;

        $r7 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $i1 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = (int) -1;

        if $i1 == $i3 goto label2;

        $r30 = new java.io.File;

        $r16 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        specialinvoke $r30.<java.io.File: void <init>(java.io.File,java.lang.String)>($r29, $r16);

        virtualinvoke $r30.<java.io.File: boolean mkdirs()>();

     label2:
        $r31 = new java.io.File;

        $r9 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r29, $r9);

        $r32 = new java.io.FileOutputStream;

        specialinvoke $r32.<java.io.FileOutputStream: void <init>(java.io.File)>($r31);

        $r11 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 != 0 goto label3;

        $r12 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>(".vml");

        if $z2 != 0 goto label3;

        $r13 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean endsWith(java.lang.String)>(".rels");

        if $z3 == 0 goto label6;

     label3:
        $r26 = virtualinvoke r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r6);

        $r27 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject parse(java.io.InputStream)>($r26);

        $r33 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r33.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        virtualinvoke $r33.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSavePrettyPrint()>();

        interfaceinvoke $r27.<org.apache.xmlbeans.XmlObject: void save(java.io.OutputStream,org.apache.xmlbeans.XmlOptions)>($r32, $r33);

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse ");

        $r21 = virtualinvoke r6.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dumping raw content");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r25 = virtualinvoke r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r6);

        staticinvoke <org.apache.poi.xssf.dev.XSSFDump: void dump(java.io.InputStream,java.io.OutputStream)>($r25, $r32);

        goto label7;

     label6:
        $r14 = virtualinvoke r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r6);

        staticinvoke <org.apache.poi.xssf.dev.XSSFDump: void dump(java.io.InputStream,java.io.OutputStream)>($r14, $r32);

     label7:
        virtualinvoke $r32.<java.io.FileOutputStream: void close()>();

        goto label1;

     label8:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    protected static void dump(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[2048];

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        if $i0 <= 0 goto label2;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i0);

        goto label1;

     label2:
        return;
    }
}
