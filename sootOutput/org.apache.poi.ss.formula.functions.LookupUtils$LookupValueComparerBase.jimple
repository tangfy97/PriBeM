abstract class org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase extends java.lang.Object implements org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparer
{
    private final java.lang.Class _targetClass;

    protected void <init>(org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ValueEval r1;
        java.lang.Class $r2;
        java.lang.RuntimeException $r3;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase r0;

        r0 := @this: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase;

        r1 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("targetValue cannot be null");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase: java.lang.Class _targetClass> = $r2;

        return;
    }

    public final org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareTo(org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.functions.LookupUtils$CompareResult $r4, $r5;
        org.apache.poi.ss.formula.eval.ValueEval r0;
        java.lang.Class $r2, $r3;
        java.lang.RuntimeException $r6;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase r1;

        r1 := @this: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        if r0 != null goto label1;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("compare to value cannot be null");

        throw $r6;

     label1:
        $r2 = r1.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase: java.lang.Class _targetClass>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label2;

        $r5 = <org.apache.poi.ss.formula.functions.LookupUtils$CompareResult: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult TYPE_MISMATCH>;

        return $r5;

     label2:
        $r4 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase: org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareSameType(org.apache.poi.ss.formula.eval.ValueEval)>(r0);

        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r4;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r6;
        org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase r1;

        r1 := @this: org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $r5 = virtualinvoke r1.<org.apache.poi.ss.formula.functions.LookupUtils$LookupValueComparerBase: java.lang.String getValueAsString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    protected abstract org.apache.poi.ss.formula.functions.LookupUtils$CompareResult compareSameType(org.apache.poi.ss.formula.eval.ValueEval);

    protected abstract java.lang.String getValueAsString();
}
