public class org.apache.zookeeper.server.quorum.Observer extends org.apache.zookeeper.server.quorum.Learner
{

    void <init>(org.apache.zookeeper.server.quorum.QuorumPeer, org.apache.zookeeper.server.quorum.ObserverZooKeeperServer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.quorum.Observer r0;
        org.apache.zookeeper.server.quorum.ObserverZooKeeperServer r2;

        r0 := @this: org.apache.zookeeper.server.quorum.Observer;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        r2 := @parameter1: org.apache.zookeeper.server.quorum.ObserverZooKeeperServer;

        specialinvoke r0.<org.apache.zookeeper.server.quorum.Learner: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.QuorumPeer self> = r1;

        r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk> = r2;

        return;
    }

    public java.lang.String toString()
    {
        java.net.Socket $r3;
        org.apache.zookeeper.server.quorum.Observer r2;
        java.util.concurrent.ConcurrentHashMap $r5;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r6;

        r2 := @this: org.apache.zookeeper.server.quorum.Observer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Observer ");

        $r3 = r2.<org.apache.zookeeper.server.quorum.Observer: java.net.Socket sock>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pendingRevalidationCount:");

        $r5 = r2.<org.apache.zookeeper.server.quorum.Observer: java.util.concurrent.ConcurrentHashMap pendingRevalidations>;

        $i0 = virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    void observeLeader() throws java.lang.InterruptedException
    {
        org.apache.zookeeper.server.quorum.QuorumPeer $r4, $r13;
        java.lang.Throwable $r15;
        java.net.Socket $r21;
        long $l0;
        org.apache.zookeeper.server.quorum.LocalPeerBean $r5;
        org.apache.zookeeper.server.quorum.QuorumPacket $r12;
        java.lang.String $r11;
        boolean $z0;
        org.slf4j.Logger $r8, $r20;
        org.apache.zookeeper.server.quorum.Observer r0;
        java.util.concurrent.ConcurrentHashMap $r18;
        java.io.IOException $r17, $r19;
        java.net.InetSocketAddress $r6;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r2, $r3, $r14, $r16;
        org.apache.zookeeper.server.ObserverBean $r1;
        java.lang.StringBuilder $r7, $r9, $r10;

        r0 := @this: org.apache.zookeeper.server.quorum.Observer;

        $r3 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r1 = new org.apache.zookeeper.server.ObserverBean;

        $r2 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        specialinvoke $r1.<org.apache.zookeeper.server.ObserverBean: void <init>(org.apache.zookeeper.server.quorum.Observer,org.apache.zookeeper.server.ZooKeeperServer)>(r0, $r2);

        $r4 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r5 = $r4.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean>;

        virtualinvoke $r3.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void registerJMX(org.apache.zookeeper.server.ZooKeeperServerBean,org.apache.zookeeper.server.quorum.LocalPeerBean)>($r1, $r5);

     label01:
        $r6 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: java.net.InetSocketAddress findLeader()>();

        $r8 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Observing ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r11);

     label02:
        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: void connectToLeader(java.net.InetSocketAddress)>($r6);

        $l0 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: long registerWithLeader(int)>(16);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: void syncWithLeader(long)>($l0);

        $r12 = new org.apache.zookeeper.server.quorum.QuorumPacket;

        specialinvoke $r12.<org.apache.zookeeper.server.quorum.QuorumPacket: void <init>()>();

     label03:
        $r13 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $z0 = virtualinvoke $r13.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean isRunning()>();

        if $z0 == 0 goto label04;

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: void readPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r12);

        virtualinvoke r0.<org.apache.zookeeper.server.quorum.Observer: void processPacket(org.apache.zookeeper.server.quorum.QuorumPacket)>($r12);

        goto label03;

     label04:
        goto label10;

     label05:
        $r19 := @caughtexception;

        $r20 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception when observing the leader", $r19);

     label06:
        $r21 = r0.<org.apache.zookeeper.server.quorum.Observer: java.net.Socket sock>;

        virtualinvoke $r21.<java.net.Socket: void close()>();

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

     label09:
        $r18 = r0.<org.apache.zookeeper.server.quorum.Observer: java.util.concurrent.ConcurrentHashMap pendingRevalidations>;

        virtualinvoke $r18.<java.util.concurrent.ConcurrentHashMap: void clear()>();

     label10:
        goto label15;

     label11:
        goto label14;

     label12:
        $r15 := @caughtexception;

        goto label16;

     label13:
        throw $r15;

     label14:
        return;

     label15:
        $r14 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r14.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void unregisterJMX(org.apache.zookeeper.server.quorum.Learner)>(r0);

        goto label11;

     label16:
        $r16 = r0.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        virtualinvoke $r16.<org.apache.zookeeper.server.quorum.LearnerZooKeeperServer: void unregisterJMX(org.apache.zookeeper.server.quorum.Learner)>(r0);

        goto label13;

        catch java.io.IOException from label02 to label04 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    protected void processPacket(org.apache.zookeeper.server.quorum.QuorumPacket) throws java.io.IOException
    {
        byte[] $r3;
        long $l1;
        org.apache.zookeeper.server.quorum.QuorumPacket r0;
        int $i0, $i2, $i3;
        org.slf4j.Logger $r1, $r11, $r12;
        org.apache.zookeeper.server.quorum.Observer r6;
        org.apache.zookeeper.txn.TxnHeader $r2;
        org.apache.jute.Record $r4;
        org.apache.zookeeper.server.quorum.ObserverZooKeeperServer r8, $r10;
        org.apache.zookeeper.server.Request $r5;
        org.apache.zookeeper.server.quorum.LearnerZooKeeperServer $r7, $r9;

        r6 := @this: org.apache.zookeeper.server.quorum.Observer;

        r0 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPacket;

        $i0 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPacket: int getType()>();

        tableswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label8;
            case 4: goto label3;
            case 5: goto label1;
            case 6: goto label5;
            case 7: goto label6;
            case 8: goto label7;
            case 9: goto label8;
            case 10: goto label8;
            case 11: goto label8;
            case 12: goto label4;
            default: goto label8;
        };

     label1:
        virtualinvoke r6.<org.apache.zookeeper.server.quorum.Observer: void ping(org.apache.zookeeper.server.quorum.QuorumPacket)>(r0);

        goto label8;

     label2:
        $r12 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Ignoring proposal");

        goto label8;

     label3:
        $r11 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>("Ignoring commit");

        goto label8;

     label4:
        $r1 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        interfaceinvoke $r1.<org.slf4j.Logger: void error(java.lang.String)>("Received an UPTODATE message after Observer started");

        goto label8;

     label5:
        virtualinvoke r6.<org.apache.zookeeper.server.quorum.Observer: void revalidate(org.apache.zookeeper.server.quorum.QuorumPacket)>(r0);

        goto label8;

     label6:
        $r9 = r6.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        $r10 = (org.apache.zookeeper.server.quorum.ObserverZooKeeperServer) $r9;

        virtualinvoke $r10.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: void sync()>();

        goto label8;

     label7:
        $r2 = new org.apache.zookeeper.txn.TxnHeader;

        specialinvoke $r2.<org.apache.zookeeper.txn.TxnHeader: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.QuorumPacket: byte[] getData()>();

        $r4 = staticinvoke <org.apache.zookeeper.server.util.SerializeUtils: org.apache.jute.Record deserializeTxn(byte[],org.apache.zookeeper.txn.TxnHeader)>($r3, $r2);

        $r5 = new org.apache.zookeeper.server.Request;

        $l1 = virtualinvoke $r2.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $i2 = virtualinvoke $r2.<org.apache.zookeeper.txn.TxnHeader: int getCxid()>();

        $i3 = virtualinvoke $r2.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        specialinvoke $r5.<org.apache.zookeeper.server.Request: void <init>(org.apache.zookeeper.server.ServerCnxn,long,int,int,java.nio.ByteBuffer,java.util.List)>(null, $l1, $i2, $i3, null, null);

        $r5.<org.apache.zookeeper.server.Request: org.apache.jute.Record txn> = $r4;

        $r5.<org.apache.zookeeper.server.Request: org.apache.zookeeper.txn.TxnHeader hdr> = $r2;

        $r7 = r6.<org.apache.zookeeper.server.quorum.Observer: org.apache.zookeeper.server.quorum.LearnerZooKeeperServer zk>;

        r8 = (org.apache.zookeeper.server.quorum.ObserverZooKeeperServer) $r7;

        virtualinvoke r8.<org.apache.zookeeper.server.quorum.ObserverZooKeeperServer: void commitRequest(org.apache.zookeeper.server.Request)>($r5);

     label8:
        return;
    }

    public void shutdown()
    {
        org.slf4j.Logger $r1;
        java.lang.Exception $r0;
        org.apache.zookeeper.server.quorum.Observer r2;

        r2 := @this: org.apache.zookeeper.server.quorum.Observer;

        $r1 = <org.apache.zookeeper.server.quorum.Observer: org.slf4j.Logger LOG>;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>("shutdown Observer");

        interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("shutdown called", $r0);

        specialinvoke r2.<org.apache.zookeeper.server.quorum.Learner: void shutdown()>();

        return;
    }
}
