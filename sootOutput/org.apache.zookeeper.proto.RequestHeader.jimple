public class org.apache.zookeeper.proto.RequestHeader extends java.lang.Object implements org.apache.jute.Record
{
    private int xid;
    private int type;

    public void <init>()
    {
        org.apache.zookeeper.proto.RequestHeader r0;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, int)
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int i0, i1;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.proto.RequestHeader: int xid> = i0;

        r0.<org.apache.zookeeper.proto.RequestHeader: int type> = i1;

        return;
    }

    public int getXid()
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        $i0 = r0.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        return $i0;
    }

    public void setXid(int)
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int i0;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.proto.RequestHeader: int xid> = i0;

        return;
    }

    public int getType()
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int $i0;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        $i0 = r0.<org.apache.zookeeper.proto.RequestHeader: int type>;

        return $i0;
    }

    public void setType(int)
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int i0;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.proto.RequestHeader: int type> = i0;

        return;
    }

    public void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.proto.RequestHeader r1;
        org.apache.jute.OutputArchive r0;
        int $i0, $i1;
        java.lang.String r2;

        r1 := @this: org.apache.zookeeper.proto.RequestHeader;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r2 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        $i0 = r1.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i0, "xid");

        $i1 = r1.<org.apache.zookeeper.proto.RequestHeader: int type>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeInt(int,java.lang.String)>($i1, "type");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, r2);

        return;
    }

    public void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        org.apache.zookeeper.proto.RequestHeader r2;
        org.apache.jute.InputArchive r0;
        int $i0, $i1;
        java.lang.String r1;

        r2 := @this: org.apache.zookeeper.proto.RequestHeader;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>(r1);

        $i0 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("xid");

        r2.<org.apache.zookeeper.proto.RequestHeader: int xid> = $i0;

        $i1 = interfaceinvoke r0.<org.apache.jute.InputArchive: int readInt(java.lang.String)>("type");

        r2.<org.apache.zookeeper.proto.RequestHeader: int type> = $i1;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r5;
        byte[] $r4;
        org.apache.jute.CsvOutputArchive $r1;
        java.io.ByteArrayOutputStream $r0;
        org.apache.zookeeper.proto.RequestHeader r2;
        int $i0, $i1;
        java.lang.String $r3;

        r2 := @this: org.apache.zookeeper.proto.RequestHeader;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.jute.CsvOutputArchive;

        specialinvoke $r1.<org.apache.jute.CsvOutputArchive: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $i0 = r2.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i0, "xid");

        $i1 = r2.<org.apache.zookeeper.proto.RequestHeader: int type>;

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void writeInt(int,java.lang.String)>($i1, "type");

        virtualinvoke $r1.<org.apache.jute.CsvOutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r2, "");

        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

        return "ERROR";

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.zookeeper.proto.RequestHeader r2;
        org.apache.jute.BinaryOutputArchive $r0;
        java.io.DataOutput r1;

        r2 := @this: org.apache.zookeeper.proto.RequestHeader;

        r1 := @parameter0: java.io.DataOutput;

        $r0 = new org.apache.jute.BinaryOutputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryOutputArchive: void <init>(java.io.DataOutput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.RequestHeader: void serialize(org.apache.jute.OutputArchive,java.lang.String)>($r0, "");

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r1;
        org.apache.zookeeper.proto.RequestHeader r2;
        org.apache.jute.BinaryInputArchive $r0;

        r2 := @this: org.apache.zookeeper.proto.RequestHeader;

        r1 := @parameter0: java.io.DataInput;

        $r0 = new org.apache.jute.BinaryInputArchive;

        specialinvoke $r0.<org.apache.jute.BinaryInputArchive: void <init>(java.io.DataInput)>(r1);

        virtualinvoke r2.<org.apache.zookeeper.proto.RequestHeader: void deserialize(org.apache.jute.InputArchive,java.lang.String)>($r0, "");

        return;
    }

    public int compareTo(java.lang.Object) throws java.lang.ClassCastException
    {
        java.lang.ClassCastException $r3;
        byte $b10, $b11, $b12, $b13, $b14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        org.apache.zookeeper.proto.RequestHeader r1, r2;
        java.lang.Object r0;

        r2 := @this: org.apache.zookeeper.proto.RequestHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.proto.RequestHeader;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.ClassCastException;

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>("Comparing different types of records.");

        throw $r3;

     label1:
        r1 = (org.apache.zookeeper.proto.RequestHeader) r0;

        $i1 = r2.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        $i0 = r1.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        if $i1 != $i0 goto label2;

        $b14 = 0;

        $b13 = 0;

        goto label4;

     label2:
        $i3 = r2.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        $i2 = r1.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        if $i3 >= $i2 goto label3;

        $b14 = -1;

        $b13 = -1;

        goto label4;

     label3:
        $b14 = 1;

        $b13 = 1;

     label4:
        if $b13 == 0 goto label5;

        return $b14;

     label5:
        $i5 = r2.<org.apache.zookeeper.proto.RequestHeader: int type>;

        $i4 = r1.<org.apache.zookeeper.proto.RequestHeader: int type>;

        if $i5 != $i4 goto label6;

        $b12 = 0;

        $b11 = 0;

        $b10 = 0;

        goto label8;

     label6:
        $i7 = r2.<org.apache.zookeeper.proto.RequestHeader: int type>;

        $i6 = r1.<org.apache.zookeeper.proto.RequestHeader: int type>;

        if $i7 >= $i6 goto label7;

        $b12 = -1;

        $b11 = -1;

        $b10 = -1;

        goto label8;

     label7:
        $b12 = 1;

        $b11 = 1;

        $b10 = 1;

     label8:
        if $b10 == 0 goto label9;

        return $b12;

     label9:
        return $b11;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.zookeeper.proto.RequestHeader r1, r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        boolean $z0, $z3, $z4, $z5, $z6, $z7;

        r1 := @this: org.apache.zookeeper.proto.RequestHeader;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.zookeeper.proto.RequestHeader;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (org.apache.zookeeper.proto.RequestHeader) r0;

        $i1 = r1.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        $i0 = r2.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        if $i1 != $i0 goto label3;

        $z4 = 1;

        $z3 = 1;

        goto label4;

     label3:
        $z4 = 0;

        $z3 = 0;

     label4:
        if $z3 != 0 goto label5;

        return $z4;

     label5:
        $i3 = r1.<org.apache.zookeeper.proto.RequestHeader: int type>;

        $i2 = r2.<org.apache.zookeeper.proto.RequestHeader: int type>;

        if $i3 != $i2 goto label6;

        $z7 = 1;

        $z6 = 1;

        $z5 = 1;

        goto label7;

     label6:
        $z7 = 0;

        $z6 = 0;

        $z5 = 0;

     label7:
        if $z5 != 0 goto label8;

        return $z7;

     label8:
        return $z6;
    }

    public int hashCode()
    {
        org.apache.zookeeper.proto.RequestHeader r0;
        int $i0, i1, i2, i3, i4;

        r0 := @this: org.apache.zookeeper.proto.RequestHeader;

        i1 = r0.<org.apache.zookeeper.proto.RequestHeader: int xid>;

        i2 = 629 + i1;

        i3 = r0.<org.apache.zookeeper.proto.RequestHeader: int type>;

        $i0 = 37 * i2;

        i4 = $i0 + i3;

        return i4;
    }

    public static java.lang.String signature()
    {
        return "LRequestHeader(ii)";
    }
}
