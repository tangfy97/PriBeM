public class com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph extends com.hp.hpl.jena.sparql.core.DatasetGraphReadOnly
{
    private com.hp.hpl.jena.graph.Graph unionGraph;

    public void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphReadOnly: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)>(r1);

        r0.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: com.hp.hpl.jena.graph.Graph unionGraph> = null;

        return;
    }

    public boolean containsGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph r1;
        com.hp.hpl.jena.graph.Node r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isUnionGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraphExplicit(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphReadOnly: boolean containsGraph(com.hp.hpl.jena.graph.Node)>(r0);

        return $z2;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r6;
        com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph r1;
        com.hp.hpl.jena.graph.Graph $r2, $r3, $r4, $r5, $r7;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isUnionGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label2;

        $r4 = r1.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: com.hp.hpl.jena.graph.Graph unionGraph>;

        if $r4 != null goto label1;

        $r6 = specialinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphReadOnly: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphOps: com.hp.hpl.jena.graph.Graph unionGraph(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r6);

        r1.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: com.hp.hpl.jena.graph.Graph unionGraph> = $r7;

     label1:
        $r5 = r1.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: com.hp.hpl.jena.graph.Graph unionGraph>;

        return $r5;

     label2:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraphExplicit(com.hp.hpl.jena.graph.Node)>(r0);

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.core.DynamicDatasets$DynamicDatasetGraph: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        return $r3;

     label3:
        $r2 = specialinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraphReadOnly: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r0);

        return $r2;
    }
}
