class org.apache.log4j.helpers.PatternParser$MDCPatternConverter extends org.apache.log4j.helpers.PatternConverter
{
    private java.lang.String key;

    void <init>(org.apache.log4j.helpers.FormattingInfo, java.lang.String)
    {
        java.lang.String r2;
        org.apache.log4j.helpers.FormattingInfo r1;
        org.apache.log4j.helpers.PatternParser$MDCPatternConverter r0;

        r0 := @this: org.apache.log4j.helpers.PatternParser$MDCPatternConverter;

        r1 := @parameter0: org.apache.log4j.helpers.FormattingInfo;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.log4j.helpers.PatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo)>(r1);

        r0.<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String key> = r2;

        return;
    }

    public java.lang.String convert(org.apache.log4j.spi.LoggingEvent)
    {
        java.lang.Object[] $r10;
        java.lang.StringBuffer $r6;
        java.util.Map $r7;
        int $i0, $i1, i2;
        java.lang.String $r1, $r3, $r5, $r8;
        org.apache.log4j.spi.LoggingEvent r2;
        java.util.Set $r9;
        org.apache.log4j.helpers.PatternParser$MDCPatternConverter r0;
        java.lang.Object $r4, $r11, $r12, $r13;

        r0 := @this: org.apache.log4j.helpers.PatternParser$MDCPatternConverter;

        r2 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String key>;

        if $r1 != null goto label3;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>("{");

        $r7 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: java.util.Map getProperties()>();

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i0 <= 0 goto label2;

        $r9 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.lang.Object[] toArray()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r10);

        i2 = 0;

     label1:
        $i1 = lengthof $r10;

        if i2 >= $i1 goto label2;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r11 = $r10[i2];

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r12 = $r10[i2];

        $r13 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label3:
        $r3 = r0.<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String key>;

        $r4 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMDC(java.lang.String)>($r3);

        if $r4 != null goto label4;

        return null;

     label4:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        return $r5;
    }
}
