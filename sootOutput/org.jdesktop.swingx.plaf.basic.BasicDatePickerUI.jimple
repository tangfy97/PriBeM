public class org.jdesktop.swingx.plaf.basic.BasicDatePickerUI extends org.jdesktop.swingx.plaf.DatePickerUI
{
    private static final java.util.logging.Logger LOG;
    protected org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JButton popupButton;
    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup;
    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler handler;
    protected java.beans.PropertyChangeListener propertyChangeListener;
    private java.awt.event.FocusListener focusListener;
    protected java.awt.event.MouseListener mouseListener;
    protected java.awt.event.MouseMotionListener mouseMotionListener;
    private java.awt.event.ActionListener editorActionListener;
    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction editorCancelAction;
    private java.beans.PropertyChangeListener editorPropertyListener;
    private org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener;
    private java.awt.event.ActionListener monthViewActionListener;
    private java.beans.PropertyChangeListener monthViewPropertyListener;
    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover popupRemover;
    private javax.swing.event.PopupMenuListener popupMenuListener;

    public void <init>()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.DatePickerUI: void <init>()>();

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r2, $r3;
        java.awt.LayoutManager $r4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (org.jdesktop.swingx.JXDatePicker) r1;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker> = $r2;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.LayoutManager createLayoutManager()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: void setLayout(java.awt.LayoutManager)>($r4);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installComponents()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installKeyboardActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installListeners()>();

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r2 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallListeners()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallKeyboardActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallComponents()>();

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: void setLayout(java.awt.LayoutManager)>(null);

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker> = null;

        return;
    }

    protected void installComponents()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        java.util.Locale $r4;
        javax.swing.JComboBox $r5;
        boolean $z0, $z1;
        javax.swing.JFormattedTextField $r2, $r14;
        javax.swing.JButton $r7, $r8, $r11, $r16, $r17;
        org.jdesktop.swingx.JXDatePicker $r1, $r3, $r9, $r10, $r13, $r15;
        java.text.DateFormat[] $r12;
        java.lang.Object $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $z0 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r12 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.text.DateFormat[] getCustomFormats(javax.swing.JFormattedTextField)>($r2);

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JFormattedTextField createEditor()>();

        virtualinvoke $r13.<org.jdesktop.swingx.JXDatePicker: void setEditor(javax.swing.JFormattedTextField)>($r14);

        if $r12 == null goto label1;

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r15.<org.jdesktop.swingx.JXDatePicker: void setFormats(java.text.DateFormat[])>($r12);

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateFromEditorChanged(javax.swing.JFormattedTextField,boolean)>(null, 0);

        $r16 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton createPopupButton()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton> = $r16;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        if $r17 == null goto label2;

        $r5 = new javax.swing.JComboBox;

        specialinvoke $r5.<javax.swing.JComboBox: void <init>()>();

        $r6 = virtualinvoke $r5.<javax.swing.JComboBox: java.lang.Object getClientProperty(java.lang.Object)>("doNotCancelPopup");

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        virtualinvoke $r7.<javax.swing.JButton: void putClientProperty(java.lang.Object,java.lang.Object)>("doNotCancelPopup", $r6);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        virtualinvoke $r9.<org.jdesktop.swingx.JXDatePicker: java.awt.Component add(java.awt.Component)>($r8);

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z1 = virtualinvoke $r10.<org.jdesktop.swingx.JXDatePicker: boolean isEnabled()>();

        virtualinvoke $r11.<javax.swing.JButton: void setEnabled(boolean)>($z1);

     label2:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: java.util.Locale getLocale()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateChildLocale(java.util.Locale)>($r4);

        return;
    }

    private java.text.DateFormat[] getCustomFormats(javax.swing.JFormattedTextField)
    {
        org.jdesktop.swingx.calendar.DatePickerFormatter $r3;
        javax.swing.JFormattedTextField r0;
        java.text.DateFormat[] r5;
        javax.swing.JFormattedTextField$AbstractFormatterFactory $r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r4;
        javax.swing.JFormattedTextField$AbstractFormatter $r2;
        boolean $z0, $z1;

        r4 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JFormattedTextField;

        r5 = null;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<javax.swing.JFormattedTextField: javax.swing.JFormattedTextField$AbstractFormatterFactory getFormatterFactory()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<javax.swing.JFormattedTextField$AbstractFormatterFactory: javax.swing.JFormattedTextField$AbstractFormatter getFormatter(javax.swing.JFormattedTextField)>(r0);

        $z0 = $r2 instanceof org.jdesktop.swingx.calendar.DatePickerFormatter;

        if $z0 == 0 goto label1;

        $z1 = $r2 instanceof javax.swing.plaf.UIResource;

        if $z1 != 0 goto label1;

        $r3 = (org.jdesktop.swingx.calendar.DatePickerFormatter) $r2;

        r5 = virtualinvoke $r3.<org.jdesktop.swingx.calendar.DatePickerFormatter: java.text.DateFormat[] getFormats()>();

     label1:
        return r5;
    }

    protected void uninstallComponents()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JFormattedTextField $r2;
        javax.swing.JButton $r3, $r4;
        org.jdesktop.swingx.JXDatePicker $r1, $r5, $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        if $r2 == null goto label1;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: void remove(java.awt.Component)>($r2);

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        if $r3 == null goto label2;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: void remove(java.awt.Component)>($r4);

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton> = null;

     label2:
        return;
    }

    protected void installDefaults()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r2;
        org.jdesktop.swingx.JXDatePicker $r3;
        org.jdesktop.swingx.JXMonthView $r4;
        java.lang.Boolean $r0;
        java.lang.Object $r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("JXDatePicker.forceZoomable");

        $z0 = virtualinvoke $r0.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: void setZoomable(boolean)>(1);

     label1:
        return;
    }

    protected void uninstallDefaults()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        return;
    }

    protected void installKeyboardActions()
    {
        javax.swing.KeyStroke $r10, $r11, $r12, $r13, $r14;
        org.jdesktop.swingx.JXDatePicker $r1, $r8;
        javax.swing.Action $r3, $r4, $r5, $r6;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction $r7;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.InputMap $r9;
        javax.swing.ActionMap $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.ActionMap getActionMap()>();

        $r3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.Action createCancelAction()>();

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("datePickerCancel", $r3);

        $r4 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.Action createCommitAction()>();

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("datePickerCommit", $r4);

        $r5 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.Action createHomeAction(boolean)>(0);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateHome", $r5);

        $r6 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.Action createHomeAction(boolean)>(1);

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("commitHome", $r6);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction createTogglePopupAction()>();

        virtualinvoke $r2.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("TOGGLE_POPUP", $r7);

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXDatePicker: javax.swing.InputMap getInputMap(int)>(1);

        $r10 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("ENTER");

        virtualinvoke $r9.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r10, "datePickerCommit");

        $r11 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("ESCAPE");

        virtualinvoke $r9.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r11, "datePickerCancel");

        $r12 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("F5");

        virtualinvoke $r9.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r12, "commitHome");

        $r13 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("shift F5");

        virtualinvoke $r9.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r13, "navigateHome");

        $r14 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("alt DOWN");

        virtualinvoke $r9.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r14, "TOGGLE_POPUP");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installLinkPanelKeyboardActions()>();

        return;
    }

    protected void uninstallKeyboardActions()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        javax.swing.JPanel $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JPanel getLinkPanel()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallLinkPanelKeyboardActions(javax.swing.JComponent)>($r2);

        return;
    }

    protected void installLinkPanelKeyboardActions()
    {
        javax.swing.Action $r8, $r11;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.ActionMap $r5, $r7, $r10;
        javax.swing.KeyStroke $r15, $r16;
        org.jdesktop.swingx.JXDatePicker $r1, $r3, $r6, $r9, $r12;
        javax.swing.InputMap $r14;
        javax.swing.JPanel $r2, $r4, $r13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JPanel getLinkPanel()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: javax.swing.JPanel getLinkPanel()>();

        $r5 = virtualinvoke $r4.<javax.swing.JPanel: javax.swing.ActionMap getActionMap()>();

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: javax.swing.ActionMap getActionMap()>();

        $r8 = virtualinvoke $r7.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("commitHome");

        virtualinvoke $r5.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("commitHome", $r8);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r10 = virtualinvoke $r9.<org.jdesktop.swingx.JXDatePicker: javax.swing.ActionMap getActionMap()>();

        $r11 = virtualinvoke $r10.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>("navigateHome");

        virtualinvoke $r5.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("navigateHome", $r11);

        $r12 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.JXDatePicker: javax.swing.JPanel getLinkPanel()>();

        $r14 = virtualinvoke $r13.<javax.swing.JPanel: javax.swing.InputMap getInputMap(int)>(2);

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("F5");

        virtualinvoke $r14.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r15, "commitHome");

        $r16 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("shift F5");

        virtualinvoke $r14.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r16, "navigateHome");

        return;
    }

    protected void uninstallLinkPanelKeyboardActions(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        javax.swing.KeyStroke $r3, $r4;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r5;
        javax.swing.InputMap $r2;
        javax.swing.ActionMap $r1;

        r5 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JComponent;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<javax.swing.JComponent: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r1.<javax.swing.ActionMap: void remove(java.lang.Object)>("commitHome");

        virtualinvoke $r1.<javax.swing.ActionMap: void remove(java.lang.Object)>("navigateHome");

        $r2 = virtualinvoke r0.<javax.swing.JComponent: javax.swing.InputMap getInputMap(int)>(2);

        $r3 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("F5");

        virtualinvoke $r2.<javax.swing.InputMap: void remove(javax.swing.KeyStroke)>($r3);

        $r4 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>("shift F5");

        virtualinvoke $r2.<javax.swing.InputMap: void remove(javax.swing.KeyStroke)>($r4);

        return;
    }

    protected void installListeners()
    {
        java.awt.event.FocusListener $r4, $r13;
        java.awt.event.ActionListener $r5, $r8;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover $r10;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.event.DateSelectionListener $r7;
        java.awt.event.MouseListener $r2, $r18;
        javax.swing.JButton $r15, $r17, $r19, $r21;
        org.jdesktop.swingx.JXDatePicker $r12, $r14;
        java.beans.PropertyChangeListener $r1, $r6, $r9, $r11, $r16;
        java.awt.event.MouseMotionListener $r3, $r20;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener createPropertyChangeListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener> = $r1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseListener createMouseListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseListener mouseListener> = $r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseMotionListener createMouseMotionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseMotionListener mouseMotionListener> = $r3;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener createFocusListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener focusListener> = $r4;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener createEditorActionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener editorActionListener> = $r5;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener createEditorPropertyListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener editorPropertyListener> = $r6;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener createMonthViewSelectionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener> = $r7;

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener createMonthViewActionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener monthViewActionListener> = $r8;

        $r9 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener createMonthViewPropertyListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener monthViewPropertyListener> = $r9;

        $r10 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover;

        specialinvoke $r10.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r0);

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover popupRemover> = $r10;

        $r12 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r12.<org.jdesktop.swingx.JXDatePicker: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r11);

        $r14 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r14.<org.jdesktop.swingx.JXDatePicker: void addFocusListener(java.awt.event.FocusListener)>($r13);

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        if $r15 == null goto label1;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r16 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r17.<javax.swing.JButton: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r16);

        $r19 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r18 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseListener mouseListener>;

        virtualinvoke $r19.<javax.swing.JButton: void addMouseListener(java.awt.event.MouseListener)>($r18);

        $r21 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r20 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseMotionListener mouseMotionListener>;

        virtualinvoke $r21.<javax.swing.JButton: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r20);

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorListeners(javax.swing.JFormattedTextField)>(null);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateFromMonthViewChanged(org.jdesktop.swingx.JXMonthView)>(null);

        return;
    }

    protected void uninstallListeners()
    {
        java.awt.event.FocusListener $r3;
        java.awt.event.ActionListener $r11;
        org.jdesktop.swingx.JXMonthView $r6, $r10, $r13;
        org.jdesktop.swingx.calendar.DateSelectionModel $r7;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover $r18;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.event.DateSelectionListener $r8;
        java.awt.event.MouseListener $r21;
        javax.swing.JFormattedTextField $r16, $r26;
        javax.swing.JButton $r17, $r20, $r22, $r24;
        org.jdesktop.swingx.JXDatePicker $r2, $r4, $r5, $r9, $r12, $r15, $r25;
        java.beans.PropertyChangeListener $r1, $r14, $r19;
        java.awt.event.MouseMotionListener $r23;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r1);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXDatePicker: void removeFocusListener(java.awt.event.FocusListener)>($r3);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener>;

        interfaceinvoke $r7.<org.jdesktop.swingx.calendar.DateSelectionModel: void removeDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r8);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r10 = virtualinvoke $r9.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener monthViewActionListener>;

        virtualinvoke $r10.<org.jdesktop.swingx.JXMonthView: void removeActionListener(java.awt.event.ActionListener)>($r11);

        $r12 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r14 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r13.<org.jdesktop.swingx.JXMonthView: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r14);

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r16 = virtualinvoke $r15.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        if $r16 == null goto label1;

        $r25 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r26 = virtualinvoke $r25.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallEditorListeners(javax.swing.JFormattedTextField)>($r26);

     label1:
        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        if $r17 == null goto label2;

        $r20 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r19 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r20.<javax.swing.JButton: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r19);

        $r22 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r21 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseListener mouseListener>;

        virtualinvoke $r22.<javax.swing.JButton: void removeMouseListener(java.awt.event.MouseListener)>($r21);

        $r24 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r23 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseMotionListener mouseMotionListener>;

        virtualinvoke $r24.<javax.swing.JButton: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r23);

     label2:
        $r18 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover popupRemover>;

        virtualinvoke $r18.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover: void unload()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover popupRemover> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener propertyChangeListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseListener mouseListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.MouseMotionListener mouseMotionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener editorActionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener editorPropertyListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener monthViewActionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener monthViewPropertyListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler handler> = null;

        return;
    }

    protected void updateMonthViewListeners(org.jdesktop.swingx.JXMonthView)
    {
        java.awt.event.ActionListener $r7, $r9;
        org.jdesktop.swingx.JXMonthView r0, $r3, $r6;
        org.jdesktop.swingx.JXDatePicker $r2, $r5;
        org.jdesktop.swingx.calendar.DateSelectionModel r10;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        java.beans.PropertyChangeListener $r4, $r8;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: org.jdesktop.swingx.JXMonthView;

        r10 = null;

        if r0 == null goto label1;

        $r8 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener monthViewPropertyListener>;

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r8);

        $r9 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener monthViewActionListener>;

        virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: void removeActionListener(java.awt.event.ActionListener)>($r9);

        r10 = virtualinvoke r0.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener monthViewPropertyListener>;

        virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r7 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener monthViewActionListener>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXMonthView: void addActionListener(java.awt.event.ActionListener)>($r7);

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateSelectionModelListeners(org.jdesktop.swingx.calendar.DateSelectionModel)>(r10);

        return;
    }

    protected void updateEditorListeners(javax.swing.JFormattedTextField)
    {
        java.awt.event.FocusListener $r10;
        javax.swing.JFormattedTextField r0, $r3, $r6, $r9, $r13;
        java.awt.event.ActionListener $r7;
        org.jdesktop.swingx.JXDatePicker $r2, $r5, $r8, $r12;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction $r11;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        java.beans.PropertyChangeListener $r4;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JFormattedTextField;

        if r0 == null goto label1;

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallEditorListeners(javax.swing.JFormattedTextField)>(r0);

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener editorPropertyListener>;

        virtualinvoke $r3.<javax.swing.JFormattedTextField: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r7 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener editorActionListener>;

        virtualinvoke $r6.<javax.swing.JFormattedTextField: void addActionListener(java.awt.event.ActionListener)>($r7);

        $r8 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r10 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r9.<javax.swing.JFormattedTextField: void addFocusListener(java.awt.event.FocusListener)>($r10);

        $r11 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction;

        $r12 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        specialinvoke $r11.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,javax.swing.JFormattedTextField)>(r1, $r13);

        r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction editorCancelAction> = $r11;

        return;
    }

    private void uninstallEditorListeners(javax.swing.JFormattedTextField)
    {
        java.awt.event.FocusListener $r4;
        javax.swing.JFormattedTextField r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        java.awt.event.ActionListener $r3;
        java.beans.PropertyChangeListener $r2;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction $r5, $r6;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JFormattedTextField;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.beans.PropertyChangeListener editorPropertyListener>;

        virtualinvoke r0.<javax.swing.JFormattedTextField: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r2);

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.ActionListener editorActionListener>;

        virtualinvoke r0.<javax.swing.JFormattedTextField: void removeActionListener(java.awt.event.ActionListener)>($r3);

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke r0.<javax.swing.JFormattedTextField: void removeFocusListener(java.awt.event.FocusListener)>($r4);

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction editorCancelAction>;

        if $r5 == null goto label1;

        $r6 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction editorCancelAction>;

        virtualinvoke $r6.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction: void uninstall()>();

        r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction editorCancelAction> = null;

     label1:
        return;
    }

    protected void updateSelectionModelListeners(org.jdesktop.swingx.calendar.DateSelectionModel)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.JXDatePicker $r2;
        org.jdesktop.swingx.JXMonthView $r3;
        org.jdesktop.swingx.calendar.DateSelectionModel r0, $r4;
        org.jdesktop.swingx.event.DateSelectionListener $r5, $r6;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel;

        if r0 == null goto label1;

        $r6 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener>;

        interfaceinvoke r0.<org.jdesktop.swingx.calendar.DateSelectionModel: void removeDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r6);

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.event.DateSelectionListener monthViewSelectionListener>;

        interfaceinvoke $r4.<org.jdesktop.swingx.calendar.DateSelectionModel: void addDateSelectionListener(org.jdesktop.swingx.event.DateSelectionListener)>($r5);

        return;
    }

    protected javax.swing.JFormattedTextField createEditor()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.JXDatePicker $r3;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor $r0;
        java.util.Locale $r4;
        org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource $r2;
        javax.swing.border.Border $r5;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor;

        $r2 = new org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource;

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: java.util.Locale getLocale()>();

        specialinvoke $r2.<org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource: void <init>(java.util.Locale)>($r4);

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,javax.swing.JFormattedTextField$AbstractFormatter)>(r1, $r2);

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setName(java.lang.String)>("dateField");

        $r5 = staticinvoke <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>("JXDatePicker.border");

        if $r5 == null goto label1;

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setBorder(javax.swing.border.Border)>($r5);

     label1:
        return $r0;
    }

    protected javax.swing.JButton createPopupButton()
    {
        java.awt.Insets $r1;
        javax.swing.JButton $r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r4;
        javax.swing.Icon $r2, r5;
        java.lang.Object $r3;

        r4 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new javax.swing.JButton;

        specialinvoke $r0.<javax.swing.JButton: void <init>()>();

        virtualinvoke $r0.<javax.swing.JButton: void setName(java.lang.String)>("popupButton");

        virtualinvoke $r0.<javax.swing.JButton: void setRolloverEnabled(boolean)>(0);

        $r1 = new java.awt.Insets;

        specialinvoke $r1.<java.awt.Insets: void <init>(int,int,int,int)>(0, 3, 0, 3);

        virtualinvoke $r0.<javax.swing.JButton: void setMargin(java.awt.Insets)>($r1);

        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("JXDatePicker.arrowIcon");

        r5 = $r2;

        if $r2 != null goto label1;

        $r3 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("Tree.expandedIcon");

        r5 = (javax.swing.Icon) $r3;

     label1:
        virtualinvoke $r0.<javax.swing.JButton: void setIcon(javax.swing.Icon)>(r5);

        virtualinvoke $r0.<javax.swing.JButton: void setFocusable(boolean)>(0);

        return $r0;
    }

    public java.awt.Dimension getMinimumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Dimension $r2;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r1);

        return $r2;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        java.awt.Insets $r6;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        javax.swing.JComponent r11;
        javax.swing.JFormattedTextField $r2;
        javax.swing.JButton $r4, $r9;
        org.jdesktop.swingx.JXDatePicker $r1, $r5;
        java.awt.Dimension $r3, $r8, $r10;
        java.lang.Object $r7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r11 := @parameter0: javax.swing.JComponent;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r3 = virtualinvoke $r2.<javax.swing.JFormattedTextField: java.awt.Dimension getPreferredSize()>();

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        if $r4 == null goto label1;

        $i10 = $r3.<java.awt.Dimension: int width>;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        $r10 = virtualinvoke $r9.<javax.swing.JButton: java.awt.Dimension getPreferredSize()>();

        $i11 = $r10.<java.awt.Dimension: int width>;

        $i12 = $i10 + $i11;

        $r3.<java.awt.Dimension: int width> = $i12;

     label1:
        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: java.awt.Insets getInsets()>();

        $i3 = $r3.<java.awt.Dimension: int width>;

        $i1 = $r6.<java.awt.Insets: int left>;

        $i0 = $r6.<java.awt.Insets: int right>;

        $i2 = $i1 + $i0;

        $i4 = $i3 + $i2;

        $r3.<java.awt.Dimension: int width> = $i4;

        $i8 = $r3.<java.awt.Dimension: int height>;

        $i6 = $r6.<java.awt.Insets: int top>;

        $i5 = $r6.<java.awt.Insets: int bottom>;

        $i7 = $i6 + $i5;

        $i9 = $i8 + $i7;

        $r3.<java.awt.Dimension: int height> = $i9;

        $r7 = virtualinvoke $r3.<java.awt.Dimension: java.lang.Object clone()>();

        $r8 = (java.awt.Dimension) $r7;

        return $r8;
    }

    public int getBaseline(int, int)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.plaf.TextUI $r3;
        org.jdesktop.swingx.JXDatePicker $r1, $r6;
        java.awt.Font $r9;
        javax.swing.text.View $r4, $r8;
        float $f0;
        java.awt.Insets $r5, $r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, i12, $i13, $i14, $i15, i16, i17, i18, $i20;
        javax.swing.JFormattedTextField $r2;
        java.awt.FontMetrics $r10;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        i16 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r3 = virtualinvoke $r2.<javax.swing.JFormattedTextField: javax.swing.plaf.TextUI getUI()>();

        $r4 = virtualinvoke $r3.<javax.swing.plaf.TextUI: javax.swing.text.View getRootView(javax.swing.text.JTextComponent)>($r2);

        $i0 = virtualinvoke $r4.<javax.swing.text.View: int getViewCount()>();

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke $r2.<javax.swing.JFormattedTextField: java.awt.Insets getInsets()>();

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: java.awt.Insets getInsets()>();

        $i2 = $r5.<java.awt.Insets: int top>;

        $i4 = i1 - $i2;

        $i3 = $r5.<java.awt.Insets: int bottom>;

        $i6 = $i4 - $i3;

        $i5 = $r7.<java.awt.Insets: int top>;

        $i8 = $i6 - $i5;

        $i7 = $r7.<java.awt.Insets: int bottom>;

        i9 = $i8 - $i7;

        $i11 = $r5.<java.awt.Insets: int top>;

        $i10 = $r7.<java.awt.Insets: int top>;

        i17 = $i11 + $i10;

        $r8 = virtualinvoke $r4.<javax.swing.text.View: javax.swing.text.View getView(int)>(0);

        $f0 = virtualinvoke $r8.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        i12 = (int) $f0;

        if i9 == i12 goto label1;

        i18 = i9 - i12;

        $i14 = i18 / 2;

        i17 = i17 + $i14;

     label1:
        $r9 = virtualinvoke $r2.<javax.swing.JFormattedTextField: java.awt.Font getFont()>();

        $r10 = virtualinvoke $r2.<javax.swing.JFormattedTextField: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r9);

        $i13 = virtualinvoke $r10.<java.awt.FontMetrics: int getAscent()>();

        $i15 = i17 + $i13;

        return $i15;

     label2:
        $i20 = (int) -1;

        return $i20;
    }

    public java.util.Date getSelectableDate(java.util.Date) throws java.beans.PropertyVetoException
    {
        org.jdesktop.swingx.JXDatePicker $r2, $r5, $r7;
        org.jdesktop.swingx.JXMonthView $r3, $r8;
        org.jdesktop.swingx.calendar.DateSelectionModel $r4;
        java.util.Date r0, $r6, $r11;
        java.beans.PropertyVetoException $r9, $r10;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r11 = null;

        goto label2;

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: org.jdesktop.swingx.calendar.DateSelectionModel getSelectionModel()>();

        $r11 = interfaceinvoke $r4.<org.jdesktop.swingx.calendar.DateSelectionModel: java.util.Date getNormalizedDate(java.util.Date)>(r0);

     label2:
        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: java.util.Date getDate()>();

        $z0 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: boolean areEqual(java.util.Date,java.util.Date)>($r11, $r6);

        if $z0 == 0 goto label3;

        $r10 = new java.beans.PropertyVetoException;

        specialinvoke $r10.<java.beans.PropertyVetoException: void <init>(java.lang.String,java.beans.PropertyChangeEvent)>("date not selectable", null);

        throw $r10;

     label3:
        if $r11 != null goto label4;

        return $r11;

     label4:
        $r7 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $z1 = virtualinvoke $r8.<org.jdesktop.swingx.JXMonthView: boolean isUnselectableDate(java.util.Date)>($r11);

        if $z1 == 0 goto label5;

        $r9 = new java.beans.PropertyVetoException;

        specialinvoke $r9.<java.beans.PropertyVetoException: void <init>(java.lang.String,java.beans.PropertyChangeEvent)>("date not selectable", null);

        throw $r9;

     label5:
        return $r11;
    }

    protected void updateFromDateChanged()
    {
        javax.swing.JFormattedTextField $r7;
        org.jdesktop.swingx.JXDatePicker $r1, $r3, $r4, $r6, $r8, $r10;
        org.jdesktop.swingx.JXMonthView $r5;
        java.util.Date $r2, $r9, $r11;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.util.Date getDate()>();

        if $r2 == null goto label1;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r11 = virtualinvoke $r10.<org.jdesktop.swingx.JXDatePicker: java.util.Date getDate()>();

        goto label2;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r11 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: java.util.Date getLinkDay()>();

     label2:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r5.<org.jdesktop.swingx.JXMonthView: void ensureDateVisible(java.util.Date)>($r11);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXDatePicker: java.util.Date getDate()>();

        virtualinvoke $r7.<javax.swing.JFormattedTextField: void setValue(java.lang.Object)>($r9);

        return;
    }

    protected void updateFromValueChanged(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.JXDatePicker $r2, $r5, $r6, $r8;
        org.jdesktop.swingx.JXMonthView $r3, $r7, $r9;
        java.util.Date r0, $r4, r10;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r10 := @parameter0: java.util.Date;

        r0 := @parameter1: java.util.Date;

        if r0 == null goto label1;

        $r8 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $z1 = virtualinvoke $r9.<org.jdesktop.swingx.JXMonthView: boolean isUnselectableDate(java.util.Date)>(r0);

        if $z1 == 0 goto label1;

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void revertValue(java.util.Date)>(r10);

        return;

     label1:
        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: java.util.Date getSelectionDate()>();

        $z0 = staticinvoke <org.jdesktop.swingx.calendar.CalendarUtils: boolean areEqual(java.util.Date,java.util.Date)>(r0, $r4);

        if $z0 != 0 goto label2;

        $r6 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: void setSelectionDate(java.util.Date)>(r0);

     label2:
        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: void setDate(java.util.Date)>(r0);

        return;
    }

    private void revertValue(java.util.Date)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JFormattedTextField $r2;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.util.Date r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r3 := @parameter0: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void setValue(java.lang.Object)>(r3);

        return;
    }

    protected void updateFromSelectionChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType, boolean)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r1 := @parameter0: org.jdesktop.swingx.event.DateSelectionEvent$EventType;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorValue()>();

        return;
    }

    protected void updateFromMonthViewChanged(org.jdesktop.swingx.JXMonthView)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXMonthView r1, $r3;
        org.jdesktop.swingx.JXDatePicker $r2;
        java.util.TimeZone r4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r1 := @parameter0: org.jdesktop.swingx.JXMonthView;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallPopup()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateMonthViewListeners(org.jdesktop.swingx.JXMonthView)>(r1);

        r4 = null;

        if r1 == null goto label1;

        virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: void setComponentInputMapEnabled(boolean)>(0);

        r4 = virtualinvoke r1.<org.jdesktop.swingx.JXMonthView: java.util.TimeZone getTimeZone()>();

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: void setComponentInputMapEnabled(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateTimeZone(java.util.TimeZone)>(r4);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorValue()>();

        return;
    }

    protected void updateFromEditorChanged(javax.swing.JFormattedTextField, boolean)
    {
        javax.swing.JFormattedTextField r0, $r4, $r8;
        org.jdesktop.swingx.JXDatePicker $r2, $r3, $r7, $r9, $r10;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        java.lang.Object $r6;
        javax.swing.JComboBox $r5;
        boolean z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JFormattedTextField;

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        $r10 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r10.<org.jdesktop.swingx.JXDatePicker: void remove(java.awt.Component)>(r0);

        virtualinvoke r0.<javax.swing.JFormattedTextField: void putClientProperty(java.lang.Object,java.lang.Object)>("doNotCancelPopup", null);

     label1:
        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: java.awt.Component add(java.awt.Component)>($r4);

        $r5 = new javax.swing.JComboBox;

        specialinvoke $r5.<javax.swing.JComboBox: void <init>()>();

        $r6 = virtualinvoke $r5.<javax.swing.JComboBox: java.lang.Object getClientProperty(java.lang.Object)>("doNotCancelPopup");

        $r7 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r8.<javax.swing.JFormattedTextField: void putClientProperty(java.lang.Object,java.lang.Object)>("doNotCancelPopup", $r6);

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorValue()>();

        specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorProperties()>();

        if z0 == 0 goto label2;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorListeners(javax.swing.JFormattedTextField)>(r0);

        $r9 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r9.<org.jdesktop.swingx.JXDatePicker: void revalidate()>();

     label2:
        return;
    }

    private void updateEditorProperties()
    {
        javax.swing.JFormattedTextField $r2, $r5;
        org.jdesktop.swingx.JXDatePicker $r1, $r3, $r4, $r6;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z0 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: boolean isEnabled()>();

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void setEnabled(boolean)>($z0);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z1 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: boolean isEditable()>();

        virtualinvoke $r5.<javax.swing.JFormattedTextField: void setEditable(boolean)>($z1);

        return;
    }

    protected void updateFromSelectionModelChanged(org.jdesktop.swingx.calendar.DateSelectionModel)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.calendar.DateSelectionModel r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r1 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateSelectionModelListeners(org.jdesktop.swingx.calendar.DateSelectionModel)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateEditorValue()>();

        return;
    }

    private void updateEditorValue()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JFormattedTextField $r2;
        org.jdesktop.swingx.JXDatePicker $r1, $r3;
        org.jdesktop.swingx.JXMonthView $r4;
        java.util.Date $r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXMonthView: java.util.Date getSelectionDate()>();

        virtualinvoke $r2.<javax.swing.JFormattedTextField: void setValue(java.lang.Object)>($r5);

        return;
    }

    protected void updateFromEditableChanged()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JFormattedTextField $r5;
        org.jdesktop.swingx.JXDatePicker $r1, $r2, $r4;
        org.jdesktop.swingx.JXMonthView $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: boolean isEditable()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: void setEnabled(boolean)>($z0);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r5.<javax.swing.JFormattedTextField: void setEditable(boolean)>($z0);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void setActionEnabled(java.lang.String,boolean)>("commitHome", $z0);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void setActionEnabled(java.lang.String,boolean)>("navigateHome", $z0);

        return;
    }

    protected void updateFromEnabledChanged()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JButton $r2;
        javax.swing.JFormattedTextField $r4;
        org.jdesktop.swingx.JXDatePicker $r1, $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: boolean isEnabled()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        virtualinvoke $r2.<javax.swing.JButton: void setEnabled(boolean)>($z0);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r4.<javax.swing.JFormattedTextField: void setEnabled(boolean)>($z0);

        return;
    }

    private void setActionEnabled(java.lang.String, boolean)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.lang.String r3;
        javax.swing.Action $r4;
        javax.swing.ActionMap $r2;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: javax.swing.ActionMap getActionMap()>();

        $r4 = virtualinvoke $r2.<javax.swing.ActionMap: javax.swing.Action get(java.lang.Object)>(r3);

        if $r4 == null goto label1;

        interfaceinvoke $r4.<javax.swing.Action: void setEnabled(boolean)>(z0);

     label1:
        return;
    }

    protected void updateFormatsFromTimeZone(java.util.TimeZone)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.util.TimeZone r4;
        int i0, i1;
        java.text.DateFormat[] $r2;
        java.text.DateFormat r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r4 := @parameter0: java.util.TimeZone;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.text.DateFormat[] getFormats()>();

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = $r2[i1];

        virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void updateTimeZone(java.util.TimeZone)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.util.TimeZone $r2, r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r3 := @parameter0: java.util.TimeZone;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.util.TimeZone getTimeZone()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateFormatsFromTimeZone(java.util.TimeZone)>($r2);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateLinkDate()>();

        return;
    }

    protected void updateLinkDate()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1, $r2;
        org.jdesktop.swingx.JXMonthView $r3;
        java.util.Date $r4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXMonthView: java.util.Date getToday()>();

        virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: void setLinkDay(java.util.Date)>($r4);

        return;
    }

    protected void updateLocale()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.util.Locale $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: java.util.Locale getLocale()>();

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateFormatLocale(java.util.Locale)>($r2);

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void updateChildLocale(java.util.Locale)>($r2);

        return;
    }

    private void updateFormatLocale(java.util.Locale)
    {
        javax.swing.JFormattedTextField $r3, $r6;
        org.jdesktop.swingx.JXDatePicker $r2, $r5;
        java.text.DateFormat[] $r4;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        javax.swing.text.DefaultFormatterFactory $r7;
        java.util.Locale r0;
        org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource $r8;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: java.util.Locale;

        if r0 == null goto label1;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r4 = specialinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.text.DateFormat[] getCustomFormats(javax.swing.JFormattedTextField)>($r3);

        if $r4 != null goto label1;

        $r5 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        $r7 = new javax.swing.text.DefaultFormatterFactory;

        $r8 = new org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource;

        specialinvoke $r8.<org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource: void <init>(java.util.Locale)>(r0);

        specialinvoke $r7.<javax.swing.text.DefaultFormatterFactory: void <init>(javax.swing.JFormattedTextField$AbstractFormatter)>($r8);

        virtualinvoke $r6.<javax.swing.JFormattedTextField: void setFormatterFactory(javax.swing.JFormattedTextField$AbstractFormatterFactory)>($r7);

     label1:
        return;
    }

    private void updateChildLocale(java.util.Locale)
    {
        javax.swing.JFormattedTextField $r3;
        org.jdesktop.swingx.JXDatePicker $r2, $r4, $r6;
        org.jdesktop.swingx.JXMonthView $r7;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        java.util.Locale r0;
        javax.swing.JPanel $r5;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: java.util.Locale;

        if r0 == null goto label1;

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r3.<javax.swing.JFormattedTextField: void setLocale(java.util.Locale)>(r0);

        $r4 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXDatePicker: javax.swing.JPanel getLinkPanel()>();

        virtualinvoke $r5.<javax.swing.JPanel: void setLocale(java.util.Locale)>(r0);

        $r6 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r7.<org.jdesktop.swingx.JXMonthView: void setLocale(java.util.Locale)>(r0);

     label1:
        return;
    }

    protected void updateLinkPanel(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r2, $r3;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r0 := @parameter0: javax.swing.JComponent;

        if r0 == null goto label1;

        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void uninstallLinkPanelKeyboardActions(javax.swing.JComponent)>(r0);

     label1:
        virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installLinkPanelKeyboardActions()>();

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        if $r2 == null goto label2;

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void updateLinkPanel(javax.swing.JComponent)>(r0);

     label2:
        return;
    }

    protected void commit()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.text.ParseException $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void hidePopup()>();

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: void commitEdit()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    protected void cancel()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.JXDatePicker $r1;
        java.lang.Boolean $r2;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: boolean isPopupVisible()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void putClientProperty(java.lang.Object,java.lang.Object)>("JPopupMenu.firePopupMenuCanceled", $r2);

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void hidePopup()>();

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: void cancelEdit()>();

        return;
    }

    public void hidePopup()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void setVisible(boolean)>(0);

     label1:
        return;
    }

    public boolean isPopupVisible()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1, $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: boolean isVisible()>();

        return $z0;

     label1:
        return 0;
    }

    protected void home(boolean)
    {
        org.jdesktop.swingx.JXMonthView $r2, $r6, $r11, $r14;
        java.util.Date $r4, $r9, $r12;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        java.util.Calendar $r7;
        boolean z0;
        org.jdesktop.swingx.JXDatePicker $r1, $r3, $r5, $r8, $r10, $r13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXMonthView: java.util.Calendar getCalendar()>();

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXDatePicker: java.util.Date getLinkDay()>();

        virtualinvoke $r7.<java.util.Calendar: void setTime(java.util.Date)>($r9);

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r11 = virtualinvoke $r10.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r12 = virtualinvoke $r7.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r11.<org.jdesktop.swingx.JXMonthView: void setSelectionDate(java.util.Date)>($r12);

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r14 = virtualinvoke $r13.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        virtualinvoke $r14.<org.jdesktop.swingx.JXMonthView: void commitSelection()>();

        goto label2;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXDatePicker: org.jdesktop.swingx.JXMonthView getMonthView()>();

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: java.util.Date getLinkDay()>();

        virtualinvoke $r2.<org.jdesktop.swingx.JXMonthView: void ensureDateVisible(java.util.Date)>($r4);

     label2:
        return;
    }

    private javax.swing.Action createCommitAction()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1 $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r1);

        return $r0;
    }

    private javax.swing.Action createCancelAction()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2 $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r1);

        return $r0;
    }

    private javax.swing.Action createHomeAction(boolean)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3 $r0;
        boolean z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        z0 := @parameter0: boolean;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,boolean)>(r1, z0);

        return $r0;
    }

    protected org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction createTogglePopupAction()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction $r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r1);

        return $r0;
    }

    public void toggleShowPopup()
    {
        javax.swing.JFormattedTextField $r4;
        org.jdesktop.swingx.JXDatePicker $r3;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1, $r2, $r6;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4 $r5;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: void installPopup()>();

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: boolean isVisible()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        virtualinvoke $r6.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void setVisible(boolean)>(0);

        goto label3;

     label2:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $r4 = virtualinvoke $r3.<org.jdesktop.swingx.JXDatePicker: javax.swing.JFormattedTextField getEditor()>();

        virtualinvoke $r4.<javax.swing.JFormattedTextField: boolean requestFocusInWindow()>();

        $r5 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4;

        specialinvoke $r5.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r0);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r5);

     label3:
        return;
    }

    protected void installPopup()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.event.PopupMenuListener $r3;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup createMonthViewPopup()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup> = $r1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener getPopupMenuListener()>();

        virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void addPopupMenuListener(javax.swing.event.PopupMenuListener)>($r3);

        return;
    }

    protected void uninstallPopup()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.event.PopupMenuListener $r3;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener getPopupMenuListener()>();

        virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void removePopupMenuListener(javax.swing.event.PopupMenuListener)>($r3);

     label1:
        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup> = null;

        return;
    }

    protected javax.swing.event.PopupMenuListener getPopupMenuListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.event.PopupMenuListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener popupMenuListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener createPopupMenuListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener popupMenuListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.event.PopupMenuListener popupMenuListener>;

        return $r2;
    }

    protected javax.swing.event.PopupMenuListener createPopupMenuListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$5 $r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$5;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$5: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r1);

        return $r0;
    }

    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup createMonthViewPopup()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.JXDatePicker $r2;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)>(r1);

        $r2 = r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.JXDatePicker datePicker>;

        $z0 = virtualinvoke $r2.<org.jdesktop.swingx.JXDatePicker: boolean isLightWeightPopupEnabled()>();

        virtualinvoke $r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup: void setLightWeightPopupEnabled(boolean)>($z0);

        return $r0;
    }

    protected java.beans.PropertyChangeListener createMonthViewPropertyListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.FocusListener createFocusListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.ActionListener createEditorActionListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.ActionListener createMonthViewActionListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected org.jdesktop.swingx.event.DateSelectionListener createMonthViewSelectionListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.beans.PropertyChangeListener createEditorPropertyListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    private org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler handler>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler: void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1)>(r0, null);

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler handler> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler handler>;

        return $r2;
    }

    protected java.beans.PropertyChangeListener createPropertyChangeListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.LayoutManager createLayoutManager()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.MouseListener createMouseListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.MouseMotionListener createMouseMotionListener()
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()>();

        return $r1;
    }

    static org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup access$000(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup $r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup popup>;

        return $r1;
    }

    static javax.swing.JButton access$100(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        javax.swing.JButton $r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: javax.swing.JButton popupButton>;

        return $r1;
    }

    static org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover access$200(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover $r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover popupRemover>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/jdesktop/swingx/plaf/basic/BasicDatePickerUI;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.plaf.basic.BasicDatePickerUI: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
