public class org.apache.jena.riot.writer.SinkEntityOutput extends java.lang.Object implements org.apache.jena.atlas.lib.Sink
{
    private org.apache.jena.riot.system.Prologue prologue;
    private org.apache.jena.riot.out.NodeToLabel labelPolicy;
    private org.apache.jena.atlas.json.io.JSWriter out;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.jena.riot.out.NodeToLabel $r2;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = staticinvoke <org.apache.jena.riot.system.SyntaxLabels: org.apache.jena.riot.out.NodeToLabel createNodeToLabel()>();

        specialinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void <init>(java.io.OutputStream,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>(r1, null, $r2);

        return;
    }

    public void <init>(java.io.OutputStream, org.apache.jena.riot.system.Prologue, org.apache.jena.riot.out.NodeToLabel)
    {
        java.io.OutputStream r2;
        org.apache.jena.riot.out.NodeToLabel r4;
        org.apache.jena.riot.system.Prologue r3;
        org.apache.jena.atlas.json.io.JSWriter $r1;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: org.apache.jena.riot.system.Prologue;

        r4 := @parameter2: org.apache.jena.riot.out.NodeToLabel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.system.Prologue prologue> = null;

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.out.NodeToLabel labelPolicy> = null;

        $r1 = new org.apache.jena.atlas.json.io.JSWriter;

        specialinvoke $r1.<org.apache.jena.atlas.json.io.JSWriter: void <init>(java.io.OutputStream)>(r2);

        specialinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void init(org.apache.jena.atlas.json.io.JSWriter,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>($r1, r3, r4);

        return;
    }

    public void <init>(java.io.Writer)
    {
        java.io.Writer r1;
        org.apache.jena.riot.out.NodeToLabel $r2;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: java.io.Writer;

        $r2 = staticinvoke <org.apache.jena.riot.system.SyntaxLabels: org.apache.jena.riot.out.NodeToLabel createNodeToLabel()>();

        specialinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void <init>(java.io.Writer,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>(r1, null, $r2);

        return;
    }

    public void <init>(java.io.Writer, org.apache.jena.riot.system.Prologue, org.apache.jena.riot.out.NodeToLabel)
    {
        org.apache.jena.riot.out.NodeToLabel r5;
        org.apache.jena.riot.system.Prologue r4;
        java.io.Writer r3;
        org.apache.jena.atlas.json.io.JSWriter $r1;
        org.apache.jena.riot.writer.SinkEntityOutput$IndentedWriterEx $r2;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r3 := @parameter0: java.io.Writer;

        r4 := @parameter1: org.apache.jena.riot.system.Prologue;

        r5 := @parameter2: org.apache.jena.riot.out.NodeToLabel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.system.Prologue prologue> = null;

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.out.NodeToLabel labelPolicy> = null;

        $r1 = new org.apache.jena.atlas.json.io.JSWriter;

        $r2 = new org.apache.jena.riot.writer.SinkEntityOutput$IndentedWriterEx;

        specialinvoke $r2.<org.apache.jena.riot.writer.SinkEntityOutput$IndentedWriterEx: void <init>(org.apache.jena.riot.writer.SinkEntityOutput,java.io.Writer)>(r0, r3);

        specialinvoke $r1.<org.apache.jena.atlas.json.io.JSWriter: void <init>(org.apache.jena.atlas.io.IndentedWriter)>($r2);

        specialinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void init(org.apache.jena.atlas.json.io.JSWriter,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>($r1, r4, r5);

        return;
    }

    private void init(org.apache.jena.atlas.json.io.JSWriter, org.apache.jena.riot.system.Prologue, org.apache.jena.riot.out.NodeToLabel)
    {
        org.apache.jena.riot.out.NodeToLabel r3;
        org.apache.jena.riot.system.Prologue r2;
        org.apache.jena.atlas.json.io.JSWriter r1;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: org.apache.jena.atlas.json.io.JSWriter;

        r2 := @parameter1: org.apache.jena.riot.system.Prologue;

        r3 := @parameter2: org.apache.jena.riot.out.NodeToLabel;

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out> = r1;

        virtualinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void setPrologue(org.apache.jena.riot.system.Prologue)>(r2);

        virtualinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void setLabelPolicy(org.apache.jena.riot.out.NodeToLabel)>(r3);

        virtualinvoke r1.<org.apache.jena.atlas.json.io.JSWriter: void startOutput()>();

        virtualinvoke r1.<org.apache.jena.atlas.json.io.JSWriter: void startObject()>();

        return;
    }

    public void setPrologue(org.apache.jena.riot.system.Prologue)
    {
        org.apache.jena.riot.writer.SinkEntityOutput r0;
        org.apache.jena.riot.system.Prologue r1;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: org.apache.jena.riot.system.Prologue;

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.system.Prologue prologue> = r1;

        return;
    }

    public void setLabelPolicy(org.apache.jena.riot.out.NodeToLabel)
    {
        org.apache.jena.riot.out.NodeToLabel r1;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: org.apache.jena.riot.out.NodeToLabel;

        r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.riot.out.NodeToLabel labelPolicy> = r1;

        return;
    }

    public void send(org.apache.jena.atlas.lib.Pair)
    {
        com.hp.hpl.jena.graph.Node r2, r13, r22;
        org.apache.jena.atlas.json.io.JSWriter $r5, $r7, $r11, $r14, $r16, $r20, $r23, $r24, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r37, $r43, $r49;
        java.util.Map $r48;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r9, r18;
        org.apache.jena.atlas.lib.Pair r0;
        java.lang.StringBuilder $r36, $r38, $r40, $r42, $r44, $r46;
        org.apache.jena.riot.RiotException $r3;
        int i0, $i1, $i2;
        java.lang.String $r6, $r15, $r25, $r26, $r27, $r34, $r39, $r41, $r45, $r47;
        java.util.Iterator $r10, $r19;
        java.lang.Object $r1, $r8, $r12, $r17, $r21;
        org.apache.jena.riot.writer.SinkEntityOutput r4;

        r4 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r0 := @parameter0: org.apache.jena.atlas.lib.Pair;

        $r1 = virtualinvoke r0.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        r2 = (com.hp.hpl.jena.graph.Node) $r1;

        $z0 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z0 == 0 goto label01;

        $r43 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_:");

        $r45 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<org.apache.jena.atlas.json.io.JSWriter: void key(java.lang.String)>($r47);

        goto label03;

     label01:
        $z1 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z1 == 0 goto label02;

        $r5 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        virtualinvoke $r5.<org.apache.jena.atlas.json.io.JSWriter: void key(java.lang.String)>($r6);

        goto label03;

     label02:
        $r3 = new org.apache.jena.riot.RiotException;

        specialinvoke $r3.<org.apache.jena.riot.RiotException: void <init>(java.lang.String)>("Only URIs or blank nodes are legal subjects.");

        throw $r3;

     label03:
        $r7 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.json.io.JSWriter: void startObject()>();

        $r8 = virtualinvoke r0.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r48 = (java.util.Map) $r8;

        $r9 = interfaceinvoke $r48.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.hp.hpl.jena.graph.Node) $r12;

        $r14 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        $r15 = virtualinvoke r13.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        virtualinvoke $r14.<org.apache.jena.atlas.json.io.JSWriter: void key(java.lang.String)>($r15);

        $r16 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r16.<org.apache.jena.atlas.json.io.JSWriter: void startArray()>();

        $r17 = interfaceinvoke $r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r18 = (java.util.Set) $r17;

        i0 = 0;

        $r19 = interfaceinvoke r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r21 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.hp.hpl.jena.graph.Node) $r21;

        $r23 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r23.<org.apache.jena.atlas.json.io.JSWriter: void startObject()>();

        $z3 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z3 == 0 goto label06;

        $r35 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r35.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("type", "bnode");

        $r37 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_:");

        $r39 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: java.lang.String getBlankNodeLabel()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("value", $r41);

        goto label09;

     label06:
        $z4 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z4 == 0 goto label07;

        $r32 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r32.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("type", "uri");

        $r33 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        $r34 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        virtualinvoke $r33.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("value", $r34);

        goto label09;

     label07:
        $z5 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z5 == 0 goto label09;

        $r25 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralDatatypeURI()>();

        $r26 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLanguage()>();

        $r27 = virtualinvoke r22.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        $r28 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r28.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("type", "literal");

        $r29 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r29.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("value", $r27);

        if $r25 == null goto label08;

        $r31 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r31.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("datatype", $r25);

     label08:
        if $r26 == null goto label09;

        if $r26 == "" goto label09;

        $r30 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r30.<org.apache.jena.atlas.json.io.JSWriter: void pair(java.lang.String,java.lang.String)>("lang", $r26);

     label09:
        $r49 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r49.<org.apache.jena.atlas.json.io.JSWriter: void finishObject()>();

        $i1 = interfaceinvoke r18.<java.util.Set: int size()>();

        $i2 = $i1 - 1;

        if i0 >= $i2 goto label10;

        $r24 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r24.<org.apache.jena.atlas.json.io.JSWriter: void arraySep()>();

     label10:
        i0 = i0 + 1;

        goto label05;

     label11:
        $r20 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r20.<org.apache.jena.atlas.json.io.JSWriter: void finishArray()>();

        goto label04;

     label12:
        $r11 = r4.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.json.io.JSWriter: void finishObject()>();

        return;
    }

    public void flush()
    {
        org.apache.jena.atlas.json.io.JSWriter $r1, $r2;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        $r1 = r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.json.io.JSWriter: void finishObject()>();

        $r2 = r0.<org.apache.jena.riot.writer.SinkEntityOutput: org.apache.jena.atlas.json.io.JSWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.json.io.JSWriter: void finishOutput()>();

        return;
    }

    public void close()
    {
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        virtualinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void flush()>();

        return;
    }

    public volatile void send(java.lang.Object)
    {
        org.apache.jena.atlas.lib.Pair $r2;
        java.lang.Object r1;
        org.apache.jena.riot.writer.SinkEntityOutput r0;

        r0 := @this: org.apache.jena.riot.writer.SinkEntityOutput;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.jena.atlas.lib.Pair) r1;

        virtualinvoke r0.<org.apache.jena.riot.writer.SinkEntityOutput: void send(org.apache.jena.atlas.lib.Pair)>($r2);

        return;
    }
}
