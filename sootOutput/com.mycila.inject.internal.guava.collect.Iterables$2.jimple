final class com.mycila.inject.internal.guava.collect.Iterables$2 extends com.mycila.inject.internal.guava.collect.Iterables$IterableWithToString
{
    final java.lang.Iterable val$inputs;

    void <init>(java.lang.Iterable)
    {
        java.lang.Iterable r1;
        com.mycila.inject.internal.guava.collect.Iterables$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Iterables$2;

        r1 := @parameter0: java.lang.Iterable;

        r0.<com.mycila.inject.internal.guava.collect.Iterables$2: java.lang.Iterable val$inputs> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Iterables$IterableWithToString: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r2;
        com.mycila.inject.internal.guava.collect.Iterables$2 r0;
        java.lang.Iterable $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Iterables$2;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Iterables$2: java.lang.Iterable val$inputs>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterables: com.mycila.inject.internal.guava.collect.UnmodifiableIterator access$100(java.lang.Iterable)>($r1);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterators: java.util.Iterator concat(java.util.Iterator)>($r2);

        return $r3;
    }
}
