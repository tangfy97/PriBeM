public class org.apache.jena.riot.out.SinkQuadOutput extends java.lang.Object implements org.apache.jena.atlas.lib.Sink
{
    private org.apache.jena.riot.system.Prologue prologue;
    private org.apache.jena.atlas.io.AWriter out;
    private org.apache.jena.riot.out.NodeToLabel labelPolicy;
    private org.apache.jena.riot.out.NodeFormatter nodeFmt;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.jena.riot.out.SinkQuadOutput r0;
        org.apache.jena.riot.out.NodeToLabel $r2;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = staticinvoke <org.apache.jena.riot.system.SyntaxLabels: org.apache.jena.riot.out.NodeToLabel createNodeToLabel()>();

        specialinvoke r0.<org.apache.jena.riot.out.SinkQuadOutput: void <init>(java.io.OutputStream,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>(r1, null, $r2);

        return;
    }

    public void <init>(java.io.OutputStream, org.apache.jena.riot.system.Prologue, org.apache.jena.riot.out.NodeToLabel)
    {
        org.apache.jena.riot.out.NodeFormatterNT $r1;
        java.io.OutputStream r2;
        org.apache.jena.atlas.io.AWriter $r3;
        org.apache.jena.riot.out.NodeToLabel r5;
        org.apache.jena.riot.system.Prologue r4;
        org.apache.jena.riot.out.SinkQuadOutput r0;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r2 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: org.apache.jena.riot.system.Prologue;

        r5 := @parameter2: org.apache.jena.riot.out.NodeToLabel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.system.Prologue prologue> = null;

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeToLabel labelPolicy> = null;

        $r1 = new org.apache.jena.riot.out.NodeFormatterNT;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeFormatterNT: void <init>()>();

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeFormatter nodeFmt> = $r1;

        $r3 = staticinvoke <org.apache.jena.atlas.io.IO: org.apache.jena.atlas.io.AWriter wrapUTF8(java.io.OutputStream)>(r2);

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out> = $r3;

        virtualinvoke r0.<org.apache.jena.riot.out.SinkQuadOutput: void setPrologue(org.apache.jena.riot.system.Prologue)>(r4);

        virtualinvoke r0.<org.apache.jena.riot.out.SinkQuadOutput: void setLabelPolicy(org.apache.jena.riot.out.NodeToLabel)>(r5);

        return;
    }

    public void setPrologue(org.apache.jena.riot.system.Prologue)
    {
        org.apache.jena.riot.out.SinkQuadOutput r0;
        org.apache.jena.riot.system.Prologue r1;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r1 := @parameter0: org.apache.jena.riot.system.Prologue;

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.system.Prologue prologue> = r1;

        return;
    }

    public void setLabelPolicy(org.apache.jena.riot.out.NodeToLabel)
    {
        org.apache.jena.riot.out.SinkQuadOutput r0;
        org.apache.jena.riot.out.NodeToLabel r1;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r1 := @parameter0: org.apache.jena.riot.out.NodeToLabel;

        r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeToLabel labelPolicy> = r1;

        return;
    }

    public void send(com.hp.hpl.jena.sparql.core.Quad)
    {
        org.apache.jena.atlas.io.AWriter $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16;
        com.hp.hpl.jena.graph.Node $r1, $r2, $r3, $r4;
        org.apache.jena.riot.out.NodeFormatter $r7, $r10, $r13, $r17;
        boolean $z0;
        com.hp.hpl.jena.sparql.core.Quad r0;
        org.apache.jena.riot.out.SinkQuadOutput r5;

        r5 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getSubject()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getPredicate()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getObject()>();

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node getGraph()>();

        $r7 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeFormatter nodeFmt>;

        $r6 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r7.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r6, $r1);

        $r8 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r8.<org.apache.jena.atlas.io.AWriter: void print(java.lang.String)>(" ");

        $r10 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeFormatter nodeFmt>;

        $r9 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r10.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r9, $r2);

        $r11 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r11.<org.apache.jena.atlas.io.AWriter: void print(java.lang.String)>(" ");

        $r13 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeFormatter nodeFmt>;

        $r12 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r13.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r12, $r3);

        $z0 = staticinvoke <org.apache.jena.riot.out.SinkQuadOutput: boolean outputGraphSlot(com.hp.hpl.jena.graph.Node)>($r4);

        if $z0 == 0 goto label1;

        $r15 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r15.<org.apache.jena.atlas.io.AWriter: void print(java.lang.String)>(" ");

        $r17 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.riot.out.NodeFormatter nodeFmt>;

        $r16 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r17.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r16, $r4);

     label1:
        $r14 = r5.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        interfaceinvoke $r14.<org.apache.jena.atlas.io.AWriter: void print(java.lang.String)>(" .\n");

        return;
    }

    private static boolean outputGraphSlot(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        if r0 == null goto label1;

        $r1 = <com.hp.hpl.jena.sparql.core.Quad: com.hp.hpl.jena.graph.Node tripleInQuad>;

        if r0 == $r1 goto label1;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isDefaultGraph(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void flush()
    {
        org.apache.jena.riot.out.SinkQuadOutput r0;
        org.apache.jena.atlas.io.AWriter $r1;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        $r1 = r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        staticinvoke <org.apache.jena.atlas.io.IO: void flush(org.apache.jena.atlas.io.AWriter)>($r1);

        return;
    }

    public void close()
    {
        org.apache.jena.riot.out.SinkQuadOutput r0;
        org.apache.jena.atlas.io.AWriter $r1;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        $r1 = r0.<org.apache.jena.riot.out.SinkQuadOutput: org.apache.jena.atlas.io.AWriter out>;

        staticinvoke <org.apache.jena.atlas.io.IO: void flush(org.apache.jena.atlas.io.AWriter)>($r1);

        return;
    }

    public volatile void send(java.lang.Object)
    {
        org.apache.jena.riot.out.SinkQuadOutput r0;
        java.lang.Object r1;
        com.hp.hpl.jena.sparql.core.Quad $r2;

        r0 := @this: org.apache.jena.riot.out.SinkQuadOutput;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.sparql.core.Quad) r1;

        virtualinvoke r0.<org.apache.jena.riot.out.SinkQuadOutput: void send(com.hp.hpl.jena.sparql.core.Quad)>($r2);

        return;
    }
}
