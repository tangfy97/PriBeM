public abstract class org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor extends org.springframework.ejb.access.AbstractSlsbInvokerInterceptor
{
    private java.lang.Class homeInterface;
    private boolean refreshHomeOnConnectFailure;
    private volatile boolean homeAsComponent;

    public void <init>()
    {
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        specialinvoke r0.<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: void <init>()>();

        r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean refreshHomeOnConnectFailure> = 0;

        r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean homeAsComponent> = 0;

        return;
    }

    public void setHomeInterface(java.lang.Class)
    {
        java.lang.IllegalArgumentException $r2;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r1;
        java.lang.Class r0, $r4;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r1 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Home interface class [");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not an interface");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        r1.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Class homeInterface> = r0;

        return;
    }

    public void setRefreshHomeOnConnectFailure(boolean)
    {
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        boolean z0;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        z0 := @parameter0: boolean;

        r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean refreshHomeOnConnectFailure> = z0;

        return;
    }

    protected boolean isHomeRefreshable()
    {
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        boolean $z0;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        $z0 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean refreshHomeOnConnectFailure>;

        return $z0;
    }

    protected java.lang.Object lookup() throws javax.naming.NamingException
    {
        java.lang.ClassCastException $r4;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        org.springframework.remoting.RemoteLookupFailureException $r5;
        java.lang.Object $r1, r12;
        java.lang.Class $r2, $r3, $r7;
        java.lang.StringBuilder $r6, $r9, $r10;
        java.lang.String $r8, $r11;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        $r1 = specialinvoke r0.<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: java.lang.Object lookup()>();

        r12 = $r1;

        $r2 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Class homeInterface>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Class homeInterface>;

        r12 = staticinvoke <javax.rmi.PortableRemoteObject: java.lang.Object narrow(java.lang.Object,java.lang.Class)>($r1, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.springframework.remoting.RemoteLookupFailureException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not narrow EJB home stub to home interface [");

        $r7 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Class homeInterface>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.springframework.remoting.RemoteLookupFailureException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r4);

        throw $r5;

     label4:
        return r12;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    protected java.lang.reflect.Method getCreateMethod(java.lang.Object) throws org.springframework.ejb.access.EjbAccessException
    {
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        java.lang.Object r1;
        java.lang.reflect.Method $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean homeAsComponent>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = r1 instanceof javax.ejb.EJBHome;

        if $z1 != 0 goto label2;

        r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean homeAsComponent> = 1;

        return null;

     label2:
        $r2 = specialinvoke r0.<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: java.lang.reflect.Method getCreateMethod(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.Object invokeInContext(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        java.rmi.RemoteException $r3;
        org.aopalliance.intercept.MethodInvocation r1;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        java.lang.Object $r2, $r4, $r6;
        org.springframework.remoting.RemoteConnectFailureException $r5;
        boolean $z0;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r1 := @parameter0: org.aopalliance.intercept.MethodInvocation;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation)>(r1);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = specialinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)>(r1, $r5);

        return $r6;

     label4:
        $r3 := @caughtexception;

        $z0 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean isConnectFailure(java.rmi.RemoteException)>($r3);

        if $z0 == 0 goto label5;

        $r4 = specialinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)>(r1, $r3);

        return $r4;

     label5:
        throw $r3;

        catch org.springframework.remoting.RemoteConnectFailureException from label1 to label2 with label3;
        catch java.rmi.RemoteException from label1 to label2 with label4;
    }

    protected boolean isConnectFailure(java.rmi.RemoteException)
    {
        java.rmi.RemoteException r0;
        boolean $z0;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r1;

        r1 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r0 := @parameter0: java.rmi.RemoteException;

        $z0 = staticinvoke <org.springframework.remoting.rmi.RmiClientInterceptorUtils: boolean isConnectFailure(java.rmi.RemoteException)>(r0);

        return $z0;
    }

    private java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation, java.lang.Exception) throws java.lang.Throwable
    {
        org.aopalliance.intercept.MethodInvocation r4;
        java.lang.String $r7, $r10, $r13, $r16;
        boolean $z0, $z1, $z2;
        java.lang.Exception r1;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        org.apache.commons.logging.Log $r2, $r3, $r6, $r12;
        java.lang.StringBuilder $r5, $r8, $r9, $r11, $r14, $r15;
        java.lang.Object $r17;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r4 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        r1 := @parameter1: java.lang.Exception;

        $z0 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean refreshHomeOnConnectFailure>;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r12 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not connect to remote EJB [");

        $r13 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] - retrying");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r16, r1);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z2 == 0 goto label2;

        $r6 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not connect to remote EJB [");

        $r7 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] - retrying");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r10);

     label2:
        $r17 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object refreshAndRetry(org.aopalliance.intercept.MethodInvocation)>(r4);

        return $r17;

     label3:
        throw r1;
    }

    protected java.lang.Object refreshAndRetry(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable
    {
        javax.naming.NamingException $r3;
        org.aopalliance.intercept.MethodInvocation r1;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        org.springframework.remoting.RemoteLookupFailureException $r4;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String $r6, $r9;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r1 := @parameter0: org.aopalliance.intercept.MethodInvocation;

     label1:
        virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: void refreshHome()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.springframework.remoting.RemoteLookupFailureException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to locate remote EJB [");

        $r6 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.String getJndiName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.springframework.remoting.RemoteLookupFailureException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3);

        throw $r4;

     label4:
        $r2 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation)>(r1);

        return $r2;

        catch javax.naming.NamingException from label1 to label2 with label3;
    }

    protected abstract java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;

    protected java.lang.Object newSessionBeanInstance() throws javax.naming.NamingException, java.lang.reflect.InvocationTargetException
    {
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r0;
        org.apache.commons.logging.Log $r1, $r3, $r5, $r8;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        $r1 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Trying to create reference to remote EJB");

     label1:
        $r2 = virtualinvoke r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object create()>();

        $r3 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Obtained reference to remote EJB: ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r7);

     label2:
        return $r2;
    }

    protected void removeSessionBeanInstance(javax.ejb.EJBObject)
    {
        java.lang.Throwable $r2;
        javax.ejb.EJBObject r0;
        org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor r1;
        org.apache.commons.logging.Log $r3;
        boolean $z0;

        r1 := @this: org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor;

        r0 := @parameter0: javax.ejb.EJBObject;

        if r0 == null goto label4;

        $z0 = r1.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean homeAsComponent>;

        if $z0 != 0 goto label4;

     label1:
        interfaceinvoke r0.<javax.ejb.EJBObject: void remove()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r1.<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Could not invoke \'remove\' on remote EJB proxy", $r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
