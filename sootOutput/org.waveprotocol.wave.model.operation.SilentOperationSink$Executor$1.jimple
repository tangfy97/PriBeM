final class org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.SilentOperationSink
{
    final java.lang.Object val$target;

    void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1 r0;

        r0 := @this: org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1;

        r1 := @parameter0: java.lang.Object;

        r0.<org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1: java.lang.Object val$target> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void consume(org.waveprotocol.wave.model.operation.Operation)
    {
        org.waveprotocol.wave.model.operation.OperationException $r3;
        org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1 r1;
        org.waveprotocol.wave.model.operation.Operation r0;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.operation.OperationRuntimeException $r4;

        r1 := @this: org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1;

        r0 := @parameter0: org.waveprotocol.wave.model.operation.Operation;

     label1:
        $r2 = r1.<org.waveprotocol.wave.model.operation.SilentOperationSink$Executor$1: java.lang.Object val$target>;

        interfaceinvoke r0.<org.waveprotocol.wave.model.operation.Operation: void apply(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.waveprotocol.wave.model.operation.OperationRuntimeException;

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.OperationRuntimeException: void <init>(java.lang.String,org.waveprotocol.wave.model.operation.OperationException)>("Operation failed in silent operation executor", $r3);

        throw $r4;

     label4:
        return;

        catch org.waveprotocol.wave.model.operation.OperationException from label1 to label2 with label3;
    }
}
