public class com.hp.hpl.jena.datatypes.BaseDatatype extends java.lang.Object implements com.hp.hpl.jena.datatypes.RDFDatatype
{
    protected java.lang.String uri;

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.String uri> = r1;

        return;
    }

    public java.lang.String getURI()
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        $r1 = r0.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.String uri>;

        return $r1;
    }

    public java.lang.String unparse(java.lang.Object)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r4;
        java.lang.Object r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue $r2;

        r4 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue;

        if $z0 == 0 goto label1;

        $r2 = (com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue) r0;

        $r3 = $r2.<com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue: java.lang.String lexicalValue>;

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.Object parse(java.lang.String) throws com.hp.hpl.jena.datatypes.DatatypeFormatException
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r2;
        java.lang.String r1, $r3;
        com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue $r0;

        r2 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.String getURI()>();

        specialinvoke $r0.<com.hp.hpl.jena.datatypes.BaseDatatype$TypedValue: void <init>(java.lang.String,java.lang.String)>(r1, $r3);

        return $r0;
    }

    public boolean isValid(java.lang.String)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        java.lang.String r1;
        com.hp.hpl.jena.datatypes.DatatypeFormatException $r2;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: java.lang.String;

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.Object parse(java.lang.String)>(r1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch com.hp.hpl.jena.datatypes.DatatypeFormatException from label1 to label2 with label3;
    }

    public boolean isValidLiteral(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        com.hp.hpl.jena.datatypes.RDFDatatype $r2;
        com.hp.hpl.jena.graph.impl.LiteralLabel r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public boolean isValidValue(java.lang.Object)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        java.lang.Object r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.String unparse(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.datatypes.BaseDatatype: boolean isValid(java.lang.String)>($r2);

        return $z0;
    }

    public boolean isEqual(com.hp.hpl.jena.graph.impl.LiteralLabel, com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r2;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0, r1;
        boolean $z0;

        r2 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        r1 := @parameter1: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $z0 = staticinvoke <com.hp.hpl.jena.datatypes.BaseDatatype: boolean isEqualPlain(com.hp.hpl.jena.graph.impl.LiteralLabel,com.hp.hpl.jena.graph.impl.LiteralLabel)>(r0, r1);

        return $z0;
    }

    protected static boolean isEqualPlain(com.hp.hpl.jena.graph.impl.LiteralLabel, com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.RDFDatatype $r1, $r3;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0, r2;
        java.lang.Object $r4, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        r2 := @parameter1: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        $r3 = interfaceinvoke r2.<com.hp.hpl.jena.graph.impl.LiteralLabel: com.hp.hpl.jena.datatypes.RDFDatatype getDatatype()>();

        if $r1 != $r3 goto label1;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $r5 = interfaceinvoke r2.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int getHashCode(com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        int $i0;
        com.hp.hpl.jena.datatypes.BaseDatatype r1;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0;

        r1 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $i0 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: int getDefaultHashcode()>();

        return $i0;
    }

    public boolean langTagCompatible(com.hp.hpl.jena.graph.impl.LiteralLabel, com.hp.hpl.jena.graph.impl.LiteralLabel)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r7;
        com.hp.hpl.jena.graph.impl.LiteralLabel r0, r3;
        java.lang.String $r1, $r2, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r7 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.LiteralLabel;

        r3 := @parameter1: com.hp.hpl.jena.graph.impl.LiteralLabel;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        if $r1 != null goto label4;

        $r5 = interfaceinvoke r3.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        if $r5 == null goto label1;

        $r6 = interfaceinvoke r3.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.graph.impl.LiteralLabel: java.lang.String language()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z0;
    }

    public java.lang.Class getJavaClass()
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        return null;
    }

    public java.lang.Object cannonicalise(java.lang.Object)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r1;
        java.lang.Object r0;

        r1 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object extendedTypeDefinition()
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        return null;
    }

    public com.hp.hpl.jena.datatypes.RDFDatatype normalizeSubType(java.lang.Object, com.hp.hpl.jena.datatypes.RDFDatatype)
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r0;
        java.lang.Object r1;
        com.hp.hpl.jena.datatypes.RDFDatatype r2;

        r0 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.hp.hpl.jena.datatypes.RDFDatatype;

        return r0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.datatypes.BaseDatatype r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.Class $r5, $r8;
        java.lang.String $r3, $r12, $r13;

        r2 := @this: com.hp.hpl.jena.datatypes.BaseDatatype;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datatype[");

        $r3 = r2.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.String uri>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.Class getJavaClass()>();

        if $r5 != null goto label1;

        $r13 = "";

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r8 = virtualinvoke r2.<com.hp.hpl.jena.datatypes.BaseDatatype: java.lang.Class getJavaClass()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
