public class org.apache.tika.parser.iptc.IptcAnpaParser extends java.lang.Object implements org.apache.tika.parser.Parser
{
    private static final long serialVersionUID;
    private static final org.apache.tika.mime.MediaType TYPE;
    private static final java.util.Set SUPPORTED_TYPES;
    private int FMT_ANPA_1312;
    private int FMT_ANPA_UPI;
    private int FMT_ANPA_UPI_DL;
    private int FMT_IPTC_7901;
    private int FMT_IPTC_PHOTO;
    private int FMT_IPTC_CHAR;
    private int FMT_NITF;
    private int FMT_NITF_TT;
    private int FMT_NITF_RB;
    private int FMT_IPTC_AP;
    private int FMT_IPTC_BLM;
    private int FMT_IPTC_NYT;
    private int FMT_IPTC_RTR;
    private int FORMAT;
    private static final char SOH;
    private static final char STX;
    private static final char ETX;
    private static final char EOT;
    private static final char SYN;
    private static final char BS;
    private static final char TB;
    private static final char LF;
    private static final char FF;
    private static final char CR;
    private static final char XQ;
    private static final char XS;
    private static final char FS;
    private static final char HY;
    private static final char SP;
    private static final char LT;
    private static final char EQ;
    private static final char CT;
    private static final char SL;
    private static final char SR;
    private static final char DL;
    private static final char DR;

    public void <init>()
    {
        int $i0;
        org.apache.tika.parser.iptc.IptcAnpaParser r0;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_ANPA_1312> = 0;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_ANPA_UPI> = 1;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_ANPA_UPI_DL> = 2;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_7901> = 3;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_PHOTO> = 4;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_CHAR> = 5;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_NITF> = 6;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_NITF_TT> = 7;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_NITF_RB> = 8;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_AP> = 9;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_BLM> = 10;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_NYT> = 11;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR> = 12;

        $i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_ANPA_1312>;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT> = $i0;

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        java.util.Set $r0;
        org.apache.tika.parser.iptc.IptcAnpaParser r1;
        org.apache.tika.parser.ParseContext r2;

        r1 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = <org.apache.tika.parser.iptc.IptcAnpaParser: java.util.Set SUPPORTED_TYPES>;

        return $r0;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.sax.XHTMLContentHandler $r4;
        java.util.HashMap $r2;
        org.apache.tika.parser.iptc.IptcAnpaParser r0;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.parser.ParseContext r9;
        java.lang.Object $r6;
        org.xml.sax.ContentHandler r5;
        java.lang.String $r7, $r8;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r1 := @parameter0: java.io.InputStream;

        r5 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r9 := @parameter3: org.apache.tika.parser.ParseContext;

        $r2 = specialinvoke r0.<org.apache.tika.parser.iptc.IptcAnpaParser: java.util.HashMap loadProperties(java.io.InputStream)>(r1);

        specialinvoke r0.<org.apache.tika.parser.iptc.IptcAnpaParser: void setMetadata(org.apache.tika.metadata.Metadata,java.util.HashMap)>(r3, $r2);

        $r4 = new org.apache.tika.sax.XHTMLContentHandler;

        specialinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void <init>(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)>(r5, r3);

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void startDocument()>();

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void startElement(java.lang.String)>("p");

        $r6 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("body");

        $r7 = (java.lang.String) $r6;

        $r8 = specialinvoke r0.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r7);

        if $r8 == null goto label1;

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void characters(java.lang.String)>($r8);

     label1:
        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void endElement(java.lang.String)>("p");

        virtualinvoke $r4.<org.apache.tika.sax.XHTMLContentHandler: void endDocument()>();

        return;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.parser.ParseContext $r4;
        org.xml.sax.ContentHandler r2;
        org.apache.tika.parser.iptc.IptcAnpaParser r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        $r4 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r4.<org.apache.tika.parser.ParseContext: void <init>()>();

        virtualinvoke r0.<org.apache.tika.parser.iptc.IptcAnpaParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r1, r2, r3, $r4);

        return;
    }

    private java.util.HashMap loadProperties(java.io.InputStream)
    {
        byte[] $r3, $r4, $r5;
        int $i0;
        java.util.HashMap $r0;
        org.apache.tika.parser.iptc.IptcAnpaParser r1;
        java.io.InputStream r2;

        r1 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $i0 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: int scanFormat(java.io.InputStream)>(r2);

        r1.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT> = $i0;

        specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,java.lang.String)>(r2, "residual");

        $r3 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,java.lang.String)>(r2, "header");

        specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: boolean parseHeader(byte[],java.util.HashMap)>($r3, $r0);

        $r4 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,java.lang.String)>(r2, "body");

        specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: boolean parseBody(byte[],java.util.HashMap)>($r4, $r0);

        $r5 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,java.lang.String)>(r2, "footer");

        specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: boolean parseFooter(byte[],java.util.HashMap)>($r5, $r0);

        return $r0;
    }

    private int scanFormat(java.io.InputStream)
    {
        byte[] r1;
        java.io.IOException $r6, $r7;
        org.apache.tika.parser.iptc.IptcAnpaParser r0;
        java.util.Locale $r4;
        int i0;
        java.lang.String $r3, $r5;
        java.io.InputStream r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r2 := @parameter0: java.io.InputStream;

        i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        r1 = newarray (byte)[524288];

     label01:
        $z0 = virtualinvoke r2.<java.io.InputStream: boolean markSupported()>();

        if $z0 == 0 goto label02;

        virtualinvoke r2.<java.io.InputStream: void mark(int)>(524288);

     label02:
        virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r1);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("ap-wf");

        if $z1 == 0 goto label03;

        i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_AP>;

     label03:
        $z2 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("reuters");

        if $z2 == 0 goto label04;

        i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR>;

     label04:
        $z3 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("new york times");

        if $z3 == 0 goto label05;

        i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_NYT>;

     label05:
        $z4 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("bloomberg news");

        if $z4 == 0 goto label06;

        i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_BLM>;

     label06:
        goto label08;

     label07:
        $r7 := @caughtexception;

     label08:
        $z5 = virtualinvoke r2.<java.io.InputStream: boolean markSupported()>();

        if $z5 == 0 goto label09;

        virtualinvoke r2.<java.io.InputStream: void reset()>();

     label09:
        goto label11;

     label10:
        $r6 := @caughtexception;

     label11:
        return i0;

        catch java.io.IOException from label01 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private void setFormat(int)
    {
        int i0;
        org.apache.tika.parser.iptc.IptcAnpaParser r0;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT> = i0;

        return;
    }

    private java.lang.String getFormatName()
    {
        org.apache.tika.parser.iptc.IptcAnpaParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r1;

        r0 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r1 = "";

        $i1 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i0 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_AP>;

        if $i1 != $i0 goto label1;

        r1 = "Associated Press";

        goto label4;

     label1:
        $i3 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i2 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_BLM>;

        if $i3 != $i2 goto label2;

        r1 = "Bloomberg";

        goto label4;

     label2:
        $i5 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i4 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_NYT>;

        if $i5 != $i4 goto label3;

        r1 = "New York Times";

        goto label4;

     label3:
        $i7 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i6 = r0.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR>;

        if $i7 != $i6 goto label4;

        r1 = "Reuters";

     label4:
        return r1;
    }

    private byte[] getSection(java.io.InputStream, java.lang.String)
    {
        byte[] r3;
        org.apache.tika.parser.iptc.IptcAnpaParser r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        java.io.InputStream r2;

        r1 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r2 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.lang.String;

        r3 = newarray (byte)[0];

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("residual");

        if $z0 == 0 goto label1;

        r3 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,int,byte,byte,boolean)>(r2, 8192, 22, 1, 1);

        goto label4;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("header");

        if $z1 == 0 goto label2;

        r3 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,int,byte,byte,boolean)>(r2, 8192, 1, 2, 1);

        goto label4;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("body");

        if $z2 == 0 goto label3;

        r3 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,int,byte,byte,boolean)>(r2, 524288, 2, 3, 1);

        goto label4;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("footer");

        if $z3 == 0 goto label4;

        r3 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: byte[] getSection(java.io.InputStream,int,byte,byte,boolean)>(r2, 8192, 3, 4, 1);

     label4:
        return r3;
    }

    private byte[] getSection(java.io.InputStream, int, byte, byte, boolean)
    {
        byte[] r1, r4;
        byte b7, b8, b17;
        boolean z0, z1, z2, $z3, $z5, $z6;
        org.apache.tika.parser.iptc.IptcAnpaParser r3;
        long $l4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i9, $i10, i11, i12, i13, i14, i15, i16, $i19, $i20, $i21, $i22, $i23;
        java.io.IOException $r2;
        java.io.InputStream r0;

        r3 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r0 := @parameter0: java.io.InputStream;

        i11 := @parameter1: int;

        b8 := @parameter2: byte;

        b7 := @parameter3: byte;

        z0 := @parameter4: boolean;

        r4 = newarray (byte)[0];

     label01:
        z1 = 0;

        z2 = 0;

        i12 = 0;

        $i0 = virtualinvoke r0.<java.io.InputStream: int available()>();

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i11, $i0);

        virtualinvoke r0.<java.io.InputStream: void mark(int)>($i1);

        r1 = newarray (byte)[$i1];

        i13 = 0;

        i14 = $i1 - 0;

     label02:
        if i14 <= 0 goto label04;

        $i9 = $i1 - i14;

        $i10 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, $i9, $i1);

        i15 = $i10;

        $i19 = (int) -1;

        if $i10 != $i19 goto label03;

        i15 = 0;

        i14 = 0;

     label03:
        i14 = i14 - i15;

        i13 = i13 + i15;

        goto label02;

     label04:
        i16 = 0;

     label05:
        if i16 >= i13 goto label12;

        b17 = r1[i16];

        if z1 != 0 goto label08;

        $i20 = (int) b17;

        $i21 = (int) b8;

        if $i20 != $i21 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        z1 = $z3;

        i12 = i16 + 1;

        goto label11;

     label08:
        $i22 = (int) b17;

        $i23 = (int) b7;

        if $i22 != $i23 goto label09;

        $z6 = 1;

        $z5 = 1;

        goto label10;

     label09:
        $z6 = 0;

        $z5 = 0;

     label10:
        z2 = $z6;

        if $z5 == 0 goto label11;

        goto label12;

     label11:
        i16 = i16 + 1;

        goto label05;

     label12:
        virtualinvoke r0.<java.io.InputStream: void reset()>();

        if z2 == 0 goto label13;

        $l4 = (long) i16;

        virtualinvoke r0.<java.io.InputStream: long skip(long)>($l4);

        $i5 = i16 - i12;

        r4 = newarray (byte)[$i5];

        $i6 = i16 - i12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i12, r4, 0, $i6);

        goto label14;

     label13:
        if z0 == 0 goto label14;

        if z1 == 0 goto label14;

        $i2 = i16 - i12;

        r4 = newarray (byte)[$i2];

        $i3 = i16 - i12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i12, r4, 0, $i3);

     label14:
        goto label16;

     label15:
        $r2 := @caughtexception;

     label16:
        return r4;

        catch java.io.IOException from label01 to label14 with label15;
    }

    private boolean parseHeader(byte[], java.util.HashMap)
    {
        byte[] r0;
        byte b37, b39, b40, b42, $b43, $b44, b46, $b47, $b48, $b49;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r23, $r24, $r25, $r26, $r27;
        short $s13, $s19, $s24, $s31, $s34, $s51, $s53;
        java.lang.String r18, r19, r20, r21, r22;
        boolean z0, $z1, z2, z3;
        org.apache.tika.parser.iptc.IptcAnpaParser r16;
        java.util.HashMap r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i26, $i27, $i28, $i29, $i30, $i33, i36, $i38, $i41, $i45, $i50, $i52, $i54, $i56;
        char $c14, $c20, $c25, $c32, $c35;

        r16 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r0 := @parameter0: byte[];

        r17 := @parameter1: java.util.HashMap;

        r18 = "";

        r19 = "";

        r20 = "";

        r21 = "";

        r22 = "";

        i36 = 0;

        $i0 = lengthof r0;

        if 0 >= $i0 goto label30;

     label01:
        $i10 = lengthof r0;

        if i36 >= $i10 goto label02;

        $i33 = i36;

        i36 = i36 + 1;

        b37 = r0[$i33];

        $i50 = (int) b37;

        if $i50 == 31 goto label02;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $s51 = (short) b37;

        $s34 = $s51 & 255;

        $c35 = (char) $s34;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c35);

        r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label02:
        $i38 = lengthof r0;

        if i36 >= $i38 goto label05;

        $i30 = i36;

        i36 = i36 + 1;

        b39 = r0[$i30];

        $i52 = (int) b39;

        if $i52 == 19 goto label03;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $s53 = (short) b39;

        $s31 = $s53 & 255;

        $c32 = (char) $s31;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c32);

        r19 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        b40 = r0[i36];

        $i54 = (int) b40;

        if $i54 != 17 goto label05;

        i36 = i36 + 1;

        goto label05;

     label04:
        goto label02;

     label05:
        $i41 = lengthof r0;

        if i36 >= $i41 goto label14;

        z0 = 1;

        z3 = 1;

        z2 = 1;

        $i23 = i36;

        i36 = i36 + 1;

        b42 = r0[$i23];

     label06:
        if z2 == 0 goto label12;

        if b42 == 32 goto label12;

        if b42 == 0 goto label12;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $s24 = b42 & 255;

        $c25 = (char) $s24;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c25);

        r20 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i26 = lengthof r0;

        if i36 >= $i26 goto label07;

        $i29 = i36;

        i36 = i36 + 1;

        $b43 = r0[$i29];

        goto label08;

     label07:
        $b43 = 0;

     label08:
        b42 = $b43;

     label09:
        if b42 != 32 goto label06;

        z0 = 0;

        z3 = 0;

        z2 = 0;

        $i27 = lengthof r0;

        if i36 >= $i27 goto label10;

        $i28 = i36;

        i36 = i36 + 1;

        $b44 = r0[$i28];

        goto label11;

     label10:
        $b44 = 0;

     label11:
        b42 = $b44;

        if $b44 == 32 goto label09;

        $i56 = (int) -1;

        i36 = i36 + $i56;

        goto label09;

     label12:
        if z3 != 0 goto label13;

        goto label14;

     label13:
        goto label05;

     label14:
        $i45 = lengthof r0;

        if i36 >= $i45 goto label30;

        $i11 = i36;

        i36 = i36 + 1;

        b46 = r0[$i11];

        $i12 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i12 != 0 goto label20;

     label15:
        if b46 < 48 goto label16;

        if b46 <= 57 goto label17;

     label16:
        if b46 != 45 goto label29;

     label17:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $s19 = b46 & 255;

        $c20 = (char) $s19;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c20);

        r21 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i21 = lengthof r0;

        if i36 >= $i21 goto label18;

        $i22 = i36;

        i36 = i36 + 1;

        $b47 = r0[$i22];

        goto label19;

     label18:
        $b47 = 0;

     label19:
        b46 = $b47;

        goto label15;

     label20:
        if b46 != 32 goto label24;

     label21:
        if b46 != 32 goto label14;

        $i17 = lengthof r0;

        if i36 >= $i17 goto label22;

        $i18 = i36;

        i36 = i36 + 1;

        $b48 = r0[$i18];

        goto label23;

     label22:
        $b48 = 0;

     label23:
        b46 = $b48;

        goto label21;

     label24:
        if b46 < 48 goto label25;

        if b46 <= 57 goto label26;

     label25:
        if b46 != 45 goto label29;

     label26:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $s13 = b46 & 255;

        $c14 = (char) $s13;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14);

        r22 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i15 = lengthof r0;

        if i36 >= $i15 goto label27;

        $i16 = i36;

        i36 = i36 + 1;

        $b49 = r0[$i16];

        goto label28;

     label27:
        $b49 = 0;

     label28:
        b46 = $b49;

        goto label24;

     label29:
        goto label14;

     label30:
        $i1 = virtualinvoke r18.<java.lang.String: int length()>();

        $i2 = virtualinvoke r19.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r20.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $i6 = virtualinvoke r21.<java.lang.String: int length()>();

        $i7 = $i5 + $i6;

        $i8 = virtualinvoke r22.<java.lang.String: int length()>();

        $i9 = $i7 + $i8;

        if $i9 <= 0 goto label31;

        $z1 = 1;

        goto label32;

     label31:
        $z1 = 0;

     label32:
        return $z1;
    }

    private boolean parseBody(byte[], java.util.HashMap)
    {
        byte[] r62, r68;
        byte b82, $b83, b84, $b85, $b86, $b88, b90, $b91, b92, $b93, $b94, $b96, b98, $b99, b100, $b101, $b102, $b103, $b115;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r11, $r13, $r18, $r19, $r22, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r46, $r50, $r51, $r54, $r55, $r57, $r58, $r60, $r61, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86;
        short $s13, $s42, $s58, $s75;
        java.util.Locale $r4, $r15, $r35, $r37, $r39, $r42, $r47;
        org.apache.tika.parser.iptc.IptcAnpaParser r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i77, $i78, $i79, $i80, i81, $i87, $i89, $i95, $i97, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i118, $i119, $i120, $i121, $i122, $i123, $i125, $i126, $i128, $i130, $i131, $i133, $i134, $i135, $i136, $i137, $i138, $i140, $i142, $i144, $i146, $i148, $i150;
        java.lang.String $r5, $r9, $r12, $r16, $r20, $r23, $r36, $r38, $r40, $r41, $r43, $r44, $r48, $r49, $r52, r63, r64, r65, r66, r67, r69, r70, $r71, $r72, $r73, $r74, $r75;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, z24, $z25;
        java.util.HashMap r0;
        char $c14, $c43, $c59, $c76;

        r14 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r62 := @parameter0: byte[];

        r0 := @parameter1: java.util.HashMap;

        r63 = "";

        r64 = "";

        r65 = "";

        r66 = "";

        r67 = "";

        i81 = 0;

        z23 = 0;

     label001:
        if z23 != 0 goto label098;

        $i9 = lengthof r62;

        if i81 >= $i9 goto label098;

     label002:
        $i10 = lengthof r62;

        if i81 >= $i10 goto label017;

        $i64 = i81;

        i81 = i81 + 1;

        b82 = r62[$i64];

        $i116 = (int) b82;

        if $i116 != 94 goto label015;

        $i70 = lengthof r62;

        if i81 >= $i70 goto label003;

        $i80 = i81;

        i81 = i81 + 1;

        $b83 = r62[$i80];

        goto label004;

     label003:
        $b83 = 0;

     label004:
        b84 = $b83;

     label005:
        if b84 == 60 goto label008;

        if b84 == 13 goto label008;

        if b84 == 10 goto label008;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $s75 = b84 & 255;

        $c76 = (char) $s75;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c76);

        r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        $i77 = lengthof r62;

        if i81 >= $i77 goto label006;

        $i79 = i81;

        i81 = i81 + 1;

        $b85 = r62[$i79];

        goto label007;

     label006:
        $b85 = 0;

     label007:
        b84 = $b85;

        $i78 = lengthof r62;

        if i81 <= $i78 goto label005;

        goto label008;

     label008:
        if b84 != 60 goto label011;

        $i73 = lengthof r62;

        if i81 >= $i73 goto label009;

        $i74 = i81;

        i81 = i81 + 1;

        $b86 = r62[$i74];

        goto label010;

     label009:
        $b86 = 0;

     label010:
        b84 = $b86;

     label011:
        $i87 = virtualinvoke r63.<java.lang.String: int length()>();

        if $i87 <= 0 goto label017;

        if b84 == 13 goto label012;

        if b84 != 10 goto label017;

     label012:
        $i71 = lengthof r62;

        if i81 >= $i71 goto label013;

        $i72 = i81;

        i81 = i81 + 1;

        $b88 = r62[$i72];

        goto label014;

     label013:
        $b88 = 0;

     label014:
        b84 = $b88;

        if $b88 == 13 goto label011;

        if $b88 == 10 goto label011;

        $i118 = (int) -1;

        i81 = i81 + $i118;

        goto label011;

     label015:
        $i66 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i65 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR>;

        if $i66 != $i65 goto label017;

        $i119 = (int) b82;

        if $i119 == 94 goto label017;

        $i120 = (int) b82;

        if $i120 == 32 goto label016;

        $i121 = (int) b82;

        if $i121 == 9 goto label016;

        $i122 = (int) b82;

        if $i122 == 13 goto label016;

        $i123 = (int) b82;

        if $i123 == 10 goto label016;

        if i81 != 1 goto label016;

        $i67 = lengthof r62;

        $i68 = $i67 + 1;

        r68 = newarray (byte)[$i68];

        $i69 = lengthof r62;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r62, 0, r68, 1, $i69);

        r62 = r68;

     label016:
        $i125 = (int) -1;

        i81 = i81 + $i125;

        r62[i81] = 94;

        goto label002;

     label017:
        $i89 = lengthof r62;

        if i81 >= $i89 goto label034;

        $i48 = i81;

        i81 = i81 + 1;

        b90 = r62[$i48];

        $i126 = (int) b90;

        if $i126 != 94 goto label031;

        $i53 = lengthof r62;

        if i81 >= $i53 goto label018;

        $i63 = i81;

        i81 = i81 + 1;

        $b91 = r62[$i63];

        goto label019;

     label018:
        $b91 = 0;

     label019:
        b92 = $b91;

     label020:
        if b92 == 60 goto label023;

        if b92 == 94 goto label023;

        if b92 == 13 goto label023;

        if b92 == 10 goto label023;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $s58 = b92 & 255;

        $c59 = (char) $s58;

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c59);

        r64 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $i60 = lengthof r62;

        if i81 >= $i60 goto label021;

        $i62 = i81;

        i81 = i81 + 1;

        $b93 = r62[$i62];

        goto label022;

     label021:
        $b93 = 0;

     label022:
        b92 = $b93;

        $i61 = lengthof r62;

        if i81 <= $i61 goto label020;

        goto label023;

     label023:
        if b92 != 94 goto label024;

        $i128 = (int) -1;

        i81 = i81 + $i128;

     label024:
        if b92 != 60 goto label027;

        $i56 = lengthof r62;

        if i81 >= $i56 goto label025;

        $i57 = i81;

        i81 = i81 + 1;

        $b94 = r62[$i57];

        goto label026;

     label025:
        $b94 = 0;

     label026:
        b92 = $b94;

     label027:
        $i95 = virtualinvoke r64.<java.lang.String: int length()>();

        if $i95 <= 0 goto label034;

        if b92 == 13 goto label028;

        if b92 != 10 goto label034;

     label028:
        $i54 = lengthof r62;

        if i81 >= $i54 goto label029;

        $i55 = i81;

        i81 = i81 + 1;

        $b96 = r62[$i55];

        goto label030;

     label029:
        $b96 = 0;

     label030:
        b92 = $b96;

        if $b96 == 13 goto label027;

        if $b96 == 10 goto label027;

        $i130 = (int) -1;

        i81 = i81 + $i130;

        goto label027;

     label031:
        $i50 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i49 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_BLM>;

        if $i50 != $i49 goto label032;

        $i131 = (int) b90;

        if $i131 != 9 goto label032;

        $i133 = (int) -1;

        i81 = i81 + $i133;

        r62[i81] = 94;

        goto label017;

     label032:
        $i52 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i51 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR>;

        if $i52 != $i51 goto label034;

        $i134 = (int) b90;

        if $i134 == 94 goto label034;

        $i135 = (int) b90;

        if $i135 == 32 goto label033;

        $i136 = (int) b90;

        if $i136 == 9 goto label033;

        $i137 = (int) b90;

        if $i137 == 13 goto label033;

        $i138 = (int) b90;

        if $i138 == 10 goto label033;

        $i140 = (int) -1;

        i81 = i81 + $i140;

     label033:
        $i142 = (int) -1;

        i81 = i81 + $i142;

        r62[i81] = 94;

        goto label017;

     label034:
        z24 = 0;

        r69 = "";

     label035:
        $i97 = lengthof r62;

        if i81 >= $i97 goto label097;

        $i11 = i81;

        i81 = i81 + 1;

        b98 = r62[$i11];

        if b98 == 32 goto label035;

        if b98 == 9 goto label035;

        if b98 == 13 goto label035;

        if b98 != 10 goto label036;

        goto label035;

     label036:
        if b98 != 94 goto label093;

        $i18 = lengthof r62;

        if i81 >= $i18 goto label037;

        $i47 = i81;

        i81 = i81 + 1;

        $b99 = r62[$i47];

        goto label038;

     label037:
        $b99 = 0;

     label038:
        b100 = $b99;

        r70 = "";

     label039:
        if b100 == 60 goto label042;

        if b100 == 94 goto label042;

        if b100 == 13 goto label042;

        if b100 == 10 goto label042;

        if b100 == 0 goto label042;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $s42 = b100 & 255;

        $c43 = (char) $s42;

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c43);

        r70 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $i44 = lengthof r62;

        if i81 >= $i44 goto label040;

        $i46 = i81;

        i81 = i81 + 1;

        $b101 = r62[$i46];

        goto label041;

     label040:
        $b101 = 0;

     label041:
        b100 = $b101;

        $i45 = lengthof r62;

        if i81 <= $i45 goto label039;

        goto label042;

     label042:
        if b100 != 94 goto label043;

        $i144 = (int) -1;

        i81 = i81 + $i144;

     label043:
        if b100 != 60 goto label046;

        $i40 = lengthof r62;

        if i81 >= $i40 goto label044;

        $i41 = i81;

        i81 = i81 + 1;

        $b102 = r62[$i41];

        goto label045;

     label044:
        $b102 = 0;

     label045:
        b100 = $b102;

     label046:
        if b100 == 13 goto label047;

        if b100 != 10 goto label050;

     label047:
        $i19 = lengthof r62;

        if i81 >= $i19 goto label048;

        $i20 = i81;

        i81 = i81 + 1;

        $b103 = r62[$i20];

        goto label049;

     label048:
        $b103 = 0;

     label049:
        b100 = $b103;

        if $b103 == 13 goto label046;

        if $b103 == 10 goto label046;

        $i146 = (int) -1;

        i81 = i81 + $i146;

        goto label046;

     label050:
        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("by");

        if $z0 != 0 goto label051;

        $z7 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_author");

        if $z7 == 0 goto label064;

     label051:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $z1 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_author");

        if $z1 == 0 goto label052;

        $r71 = " ";

        goto label053;

     label052:
        $r71 = "";

     label053:
        $r7 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i21 = virtualinvoke $r9.<java.lang.String: int length()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("<");

        if $z2 == 0 goto label054;

        $i104 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("<");

        goto label055;

     label054:
        $i104 = $i21;

     label055:
        $i22 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i104);

        $z3 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z3 == 0 goto label056;

        $i105 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("=");

        goto label057;

     label056:
        $i105 = $i22;

     label057:
        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i22, $i105);

        $z4 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z4 == 0 goto label058;

        $i106 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("\n");

        goto label059;

     label058:
        $i106 = $i23;

     label059:
        $i24 = staticinvoke <java.lang.Math: int min(int,int)>($i23, $i106);

        if $i24 <= 0 goto label060;

        $i107 = $i24;

        goto label061;

     label060:
        $i107 = virtualinvoke $r9.<java.lang.String: int length()>();

     label061:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $i25 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>(" ");

        $r12 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>($i25, $i107);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r66 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        z24 = 1;

        $z5 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z5 == 0 goto label062;

        $z6 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_author");

        if $z6 != 0 goto label062;

        $r72 = "bdy_author";

        goto label063;

     label062:
        $r72 = "";

     label063:
        r69 = $r72;

        goto label092;

     label064:
        $i27 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i26 = r14.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_BLM>;

        if $i27 != $i26 goto label078;

        $r35 = <java.util.Locale: java.util.Locale ROOT>;

        $r36 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r35);

        $z14 = virtualinvoke $r36.<java.lang.String: boolean contains(java.lang.CharSequence)>("   by ");

        if $z14 == 0 goto label075;

        $i33 = virtualinvoke r70.<java.lang.String: int length()>();

        $z18 = virtualinvoke r70.<java.lang.String: boolean contains(java.lang.CharSequence)>("<");

        if $z18 == 0 goto label065;

        $i108 = virtualinvoke r70.<java.lang.String: int indexOf(java.lang.String)>("<");

        goto label066;

     label065:
        $i108 = $i33;

     label066:
        $i34 = staticinvoke <java.lang.Math: int min(int,int)>($i33, $i108);

        $z19 = virtualinvoke r70.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z19 == 0 goto label067;

        $i109 = virtualinvoke r70.<java.lang.String: int indexOf(java.lang.String)>("=");

        goto label068;

     label067:
        $i109 = $i34;

     label068:
        $i35 = staticinvoke <java.lang.Math: int min(int,int)>($i34, $i109);

        $z20 = virtualinvoke r70.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");

        if $z20 == 0 goto label069;

        $i110 = virtualinvoke r70.<java.lang.String: int indexOf(java.lang.String)>("\n");

        goto label070;

     label069:
        $i110 = $i35;

     label070:
        $i36 = staticinvoke <java.lang.Math: int min(int,int)>($i35, $i110);

        if $i36 <= 0 goto label071;

        $i111 = $i36;

        goto label072;

     label071:
        $i111 = virtualinvoke r70.<java.lang.String: int length()>();

     label072:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66);

        $r47 = <java.util.Locale: java.util.Locale ROOT>;

        $r48 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r47);

        $i37 = virtualinvoke $r48.<java.lang.String: int indexOf(java.lang.String)>("   by ");

        $r52 = "   by ";

        $i38 = virtualinvoke $r52.<java.lang.String: int length()>();

        $i39 = $i37 + $i38;

        $r49 = virtualinvoke r70.<java.lang.String: java.lang.String substring(int,int)>($i39, $i111);

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r66 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        z24 = 1;

        $z21 = virtualinvoke r70.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z21 == 0 goto label073;

        $z22 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_author");

        if $z22 != 0 goto label073;

        $r73 = "bdy_author";

        goto label074;

     label073:
        $r73 = "";

     label074:
        r69 = $r73;

        goto label077;

     label075:
        $r37 = <java.util.Locale: java.util.Locale ROOT>;

        $r38 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r37);

        $z15 = virtualinvoke $r38.<java.lang.String: boolean startsWith(java.lang.String)>("c.");

        if $z15 == 0 goto label076;

        if b100 != 9 goto label077;

        $i148 = (int) -1;

        i81 = i81 + $i148;

        r62[i81] = 94;

        goto label035;

     label076:
        $r39 = <java.util.Locale: java.util.Locale ROOT>;

        $r40 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

        $z16 = virtualinvoke $r41.<java.lang.String: boolean startsWith(java.lang.String)>("(");

        if $z16 == 0 goto label077;

        $r42 = <java.util.Locale: java.util.Locale ROOT>;

        $r43 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.String: java.lang.String trim()>();

        $z17 = virtualinvoke $r44.<java.lang.String: boolean endsWith(java.lang.String)>(")");

        if $z17 == 0 goto label077;

        if b100 != 9 goto label077;

        $i150 = (int) -1;

        i81 = i81 + $i150;

        r62[i81] = 94;

        goto label035;

     label077:
        goto label092;

     label078:
        $r15 = <java.util.Locale: java.util.Locale ROOT>;

        $r16 = virtualinvoke r70.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r15);

        $z8 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>("eds");

        if $z8 != 0 goto label079;

        $z13 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_source");

        if $z13 == 0 goto label090;

     label079:
        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $z9 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_source");

        if $z9 == 0 goto label080;

        $r74 = " ";

        goto label081;

     label080:
        $r74 = "";

     label081:
        $r18 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $i28 = virtualinvoke $r20.<java.lang.String: int length()>();

        $z10 = virtualinvoke $r20.<java.lang.String: boolean contains(java.lang.CharSequence)>("<");

        if $z10 == 0 goto label082;

        $i112 = virtualinvoke $r20.<java.lang.String: int indexOf(java.lang.String)>("<");

        goto label083;

     label082:
        $i112 = $i28;

     label083:
        $i29 = staticinvoke <java.lang.Math: int min(int,int)>($i28, $i112);

        $z11 = virtualinvoke $r20.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z11 == 0 goto label084;

        $i113 = virtualinvoke $r20.<java.lang.String: int indexOf(java.lang.String)>("=");

        goto label085;

     label084:
        $i113 = $i29;

     label085:
        $i30 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i113);

        if $i30 <= 0 goto label086;

        $i114 = $i30;

        goto label087;

     label086:
        $i114 = virtualinvoke $r20.<java.lang.String: int length()>();

     label087:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $i31 = virtualinvoke $r20.<java.lang.String: int indexOf(java.lang.String)>(" ");

        $i32 = $i31 + 1;

        $r23 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int,int)>($i32, $i114);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r65 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        z24 = 1;

        $z12 = virtualinvoke r69.<java.lang.String: boolean equals(java.lang.Object)>("bdy_source");

        if $z12 != 0 goto label088;

        $r75 = "bdy_source";

        goto label089;

     label088:
        $r75 = "";

     label089:
        r69 = $r75;

        goto label092;

     label090:
        if z24 != 0 goto label091;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        r64 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label092;

     label091:
        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        r67 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label092:
        goto label096;

     label093:
        $i12 = lengthof r62;

        if i81 >= $i12 goto label096;

        if b98 == 0 goto label096;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        $s13 = b98 & 255;

        $c14 = (char) $s13;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c14);

        r67 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i15 = lengthof r62;

        if i81 >= $i15 goto label094;

        $i17 = i81;

        i81 = i81 + 1;

        $b115 = r62[$i17];

        goto label095;

     label094:
        $b115 = 0;

     label095:
        b98 = $b115;

        $i16 = lengthof r62;

        if i81 <= $i16 goto label093;

        goto label096;

     label096:
        goto label035;

     label097:
        z23 = 1;

        goto label001;

     label098:
        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("body", r67);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("title", r64);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("subject", r63);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("author", r66);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("source", r65);

        $i0 = virtualinvoke r67.<java.lang.String: int length()>();

        $i1 = virtualinvoke r64.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r63.<java.lang.String: int length()>();

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r66.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r65.<java.lang.String: int length()>();

        $i8 = $i6 + $i7;

        if $i8 <= 0 goto label099;

        $z25 = 1;

        goto label100;

     label099:
        $z25 = 0;

     label100:
        return $z25;
    }

    private boolean parseFooter(byte[], java.util.HashMap)
    {
        byte[] r1;
        java.util.Date r19, $r23;
        byte b23, $b24, $b25, $b26, $b27, $b29;
        java.util.Locale $r5, $r8;
        java.text.ParseException $r16;
        boolean z0, $z1;
        java.util.TimeZone $r6, $r9;
        org.apache.tika.parser.iptc.IptcAnpaParser r3;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r21, $r22;
        java.text.SimpleDateFormat $r24, $r25;
        java.util.HashMap r0;
        short $s12, $s17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i19, $i20, $i21, i22, $i28, $i31;
        java.lang.String r17, r18, r20;
        char $c13, $c18;

        r3 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r1 := @parameter0: byte[];

        r0 := @parameter1: java.util.HashMap;

        r17 = "";

        r18 = "";

        i22 = 0;

        z0 = 0;

     label01:
        if z0 != 0 goto label23;

        $i3 = lengthof r1;

        if i22 >= $i3 goto label23;

        $i4 = i22;

        i22 = i22 + 1;

        b23 = r1[$i4];

        $i5 = lengthof r1;

        if i22 >= $i5 goto label02;

        $i21 = i22 + 1;

        $b24 = r1[$i21];

        goto label02;

     label02:
        if b23 < 48 goto label03;

        if b23 <= 57 goto label06;

     label03:
        if b23 == 0 goto label06;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $s17 = b23 & 255;

        $c18 = (char) $s17;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c18);

        r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $i19 = lengthof r1;

        if i22 >= $i19 goto label04;

        $b25 = r1[i22];

        goto label05;

     label04:
        $b25 = 0;

     label05:
        b23 = $b25;

        i22 = i22 + 1;

        $i20 = lengthof r1;

        if i22 <= $i20 goto label02;

        goto label06;

     label06:
        if b23 == 60 goto label09;

        if b23 == 13 goto label09;

        if b23 == 10 goto label09;

        if b23 == 0 goto label09;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $s12 = b23 & 255;

        $c13 = (char) $s12;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i14 = lengthof r1;

        if i22 >= $i14 goto label07;

        $i16 = i22;

        i22 = i22 + 1;

        $b26 = r1[$i16];

        goto label08;

     label07:
        $b26 = 0;

     label08:
        b23 = $b26;

        $i15 = lengthof r1;

        if i22 <= $i15 goto label06;

        goto label09;

     label09:
        if b23 != 60 goto label12;

        $i10 = lengthof r1;

        if i22 >= $i10 goto label10;

        $i11 = i22;

        i22 = i22 + 1;

        $b27 = r1[$i11];

        goto label11;

     label10:
        $b27 = 0;

     label11:
        b23 = $b27;

     label12:
        $i28 = virtualinvoke r18.<java.lang.String: int length()>();

        if $i28 <= 0 goto label18;

        $r23 = new java.util.Date;

        specialinvoke $r23.<java.util.Date: void <init>()>();

        r19 = $r23;

     label13:
        r20 = "MM-dd-yy HHmmzzz";

        $i9 = r3.<org.apache.tika.parser.iptc.IptcAnpaParser: int FORMAT>;

        $i8 = r3.<org.apache.tika.parser.iptc.IptcAnpaParser: int FMT_IPTC_RTR>;

        if $i9 != $i8 goto label14;

        r20 = "HH:mm MM-dd-yy";

     label14:
        $r24 = new java.text.SimpleDateFormat;

        $r5 = <java.util.Locale: java.util.Locale ROOT>;

        specialinvoke $r24.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r20, $r5);

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r24.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r6);

        r19 = virtualinvoke $r24.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r18);

     label15:
        goto label17;

     label16:
        $r16 := @caughtexception;

     label17:
        $r25 = new java.text.SimpleDateFormat;

        $r8 = <java.util.Locale: java.util.Locale ROOT>;

        specialinvoke $r25.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'", $r8);

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r25.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r9);

        r18 = virtualinvoke $r25.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r19);

     label18:
        if b23 == 13 goto label19;

        if b23 != 10 goto label22;

     label19:
        $i6 = lengthof r1;

        if i22 >= $i6 goto label20;

        $i7 = i22;

        i22 = i22 + 1;

        $b29 = r1[$i7];

        goto label21;

     label20:
        $b29 = 0;

     label21:
        b23 = $b29;

        if $b29 == 13 goto label18;

        if $b29 == 10 goto label18;

        $i31 = (int) -1;

        i22 = i22 + $i31;

        goto label18;

     label22:
        z0 = 1;

        goto label01;

     label23:
        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("publisher", r17);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("created", r18);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("modified", r18);

        $i0 = virtualinvoke r17.<java.lang.String: int length()>();

        $i1 = virtualinvoke r18.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        if $i2 <= 0 goto label24;

        $z1 = 1;

        goto label25;

     label24:
        $z1 = 0;

     label25:
        return $z1;

        catch java.text.ParseException from label13 to label15 with label16;
    }

    private void setMetadata(org.apache.tika.metadata.Metadata, java.util.HashMap)
    {
        java.util.HashMap r3;
        org.apache.tika.metadata.Metadata r0;
        org.apache.tika.metadata.Property $r4, $r8, $r12, $r16, $r20, $r24, $r28;
        java.lang.String $r2, $r6, $r7, $r10, $r11, $r14, $r15, $r18, $r19, $r22, $r23, $r26, $r27, $r29, $r30;
        org.apache.tika.parser.iptc.IptcAnpaParser r1;
        java.lang.Object $r5, $r9, $r13, $r17, $r21, $r25;

        r1 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r0 := @parameter0: org.apache.tika.metadata.Metadata;

        r3 := @parameter1: java.util.HashMap;

        $r2 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>("text/anpa-1312");

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r2);

        $r4 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property TITLE>;

        $r5 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("title");

        $r6 = (java.lang.String) $r5;

        $r7 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r6);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r4, $r7);

        $r8 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property KEYWORDS>;

        $r9 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("subject");

        $r10 = (java.lang.String) $r9;

        $r11 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r10);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r8, $r11);

        $r12 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATOR>;

        $r13 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("author");

        $r14 = (java.lang.String) $r13;

        $r15 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r12, $r15);

        $r16 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property CREATED>;

        $r17 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("created");

        $r18 = (java.lang.String) $r17;

        $r19 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r18);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r16, $r19);

        $r20 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property MODIFIED>;

        $r21 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("modified");

        $r22 = (java.lang.String) $r21;

        $r23 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r22);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r20, $r23);

        $r24 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property SOURCE>;

        $r25 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("source");

        $r26 = (java.lang.String) $r25;

        $r27 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r26);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r24, $r27);

        $r28 = <org.apache.tika.metadata.TikaCoreProperties: org.apache.tika.metadata.Property PUBLISHER>;

        $r29 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String getFormatName()>();

        $r30 = specialinvoke r1.<org.apache.tika.parser.iptc.IptcAnpaParser: java.lang.String clean(java.lang.String)>($r29);

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r28, $r30);

        return;
    }

    private java.lang.String clean(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, r16;
        org.apache.tika.parser.iptc.IptcAnpaParser r15;
        char[] $r3, $r6, $r9, $r12;

        r15 := @this: org.apache.tika.parser.iptc.IptcAnpaParser;

        r16 := @parameter0: java.lang.String;

        if r16 != null goto label1;

        r16 = "";

     label1:
        $r0 = virtualinvoke r16.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("``", "`");

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\'\'", "\'");

        $r2 = new java.lang.String;

        $r3 = newarray (char)[1];

        $r3[0] = 145;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r2, "\'");

        $r5 = new java.lang.String;

        $r6 = newarray (char)[1];

        $r6[0] = 146;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $r7 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r5, "\'");

        $r8 = new java.lang.String;

        $r9 = newarray (char)[1];

        $r9[0] = 147;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = virtualinvoke $r7.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r8, "\"");

        $r11 = new java.lang.String;

        $r12 = newarray (char)[1];

        $r12[0] = 148;

        specialinvoke $r11.<java.lang.String: void <init>(char[])>($r12);

        $r13 = virtualinvoke $r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r11, "\"");

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        return $r14;
    }

    static void <clinit>()
    {
        java.util.Set $r2;
        org.apache.tika.mime.MediaType $r0, $r1;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char DR> = 148;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char DL> = 147;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char SR> = 146;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char SL> = 145;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char CT> = 94;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char EQ> = 61;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char LT> = 60;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char SP> = 32;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char HY> = 45;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char FS> = 31;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char XS> = 19;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char XQ> = 17;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char CR> = 13;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char FF> = 12;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char LF> = 10;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char TB> = 9;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char BS> = 8;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char SYN> = 22;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char EOT> = 4;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char ETX> = 3;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char STX> = 2;

        <org.apache.tika.parser.iptc.IptcAnpaParser: char SOH> = 1;

        <org.apache.tika.parser.iptc.IptcAnpaParser: long serialVersionUID> = -6062820170212879115L;

        $r0 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType text(java.lang.String)>("vnd.iptc.anpa");

        <org.apache.tika.parser.iptc.IptcAnpaParser: org.apache.tika.mime.MediaType TYPE> = $r0;

        $r1 = <org.apache.tika.parser.iptc.IptcAnpaParser: org.apache.tika.mime.MediaType TYPE>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        <org.apache.tika.parser.iptc.IptcAnpaParser: java.util.Set SUPPORTED_TYPES> = $r2;

        return;
    }
}
