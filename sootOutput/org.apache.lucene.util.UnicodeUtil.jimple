public final class org.apache.lucene.util.UnicodeUtil extends java.lang.Object
{
    public static final org.apache.lucene.util.BytesRef BIG_TERM;
    public static final int UNI_SUR_HIGH_START;
    public static final int UNI_SUR_HIGH_END;
    public static final int UNI_SUR_LOW_START;
    public static final int UNI_SUR_LOW_END;
    public static final int UNI_REPLACEMENT_CHAR;
    private static final long UNI_MAX_BMP;
    private static final long HALF_SHIFT;
    private static final long HALF_MASK;
    private static final int SURROGATE_OFFSET;
    static final int[] utf8CodeLength;
    private static final int LEAD_SURROGATE_SHIFT_;
    private static final int TRAIL_SURROGATE_MASK_;
    private static final int TRAIL_SURROGATE_MIN_VALUE;
    private static final int LEAD_SURROGATE_MIN_VALUE;
    private static final int SUPPLEMENTARY_MIN_VALUE;
    private static final int LEAD_SURROGATE_OFFSET_;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        org.apache.lucene.util.UnicodeUtil r0;

        r0 := @this: org.apache.lucene.util.UnicodeUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int UTF16toUTF8WithHash(char[], int, int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2, r3;
        byte $b9, $b14, $b18, $b24, $b29, $b34, $b38, $b44, $b48, $b51;
        short $s17, $s47;
        char[] r1;
        org.apache.lucene.util.BytesRef r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i15, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i35, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i45, $i49, $i50, $i52, $i53, i54, i55, i56, i57, i58, i59, i60, i62, i63, i64, i65, i66, i67, i68, $i69, i70, $i71, $i72, i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i84, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i95, $i96, $i98, $i99, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i109, $i111, $i113;
        char c6, $c16, $c46, c61;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.util.BytesRef;

        i54 = 0;

        i55 = 0;

        i56 = i0;

        i2 = i0 + i1;

        r3 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        i3 = i1 * 4;

        $i4 = lengthof r3;

        if $i4 >= i3 goto label1;

        $i53 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>(i3, 1);

        $r2 = newarray (byte)[$i53];

        r0.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r2;

        r3 = $r2;

     label1:
        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

     label2:
        if i56 >= i2 goto label9;

        $i5 = i56;

        i56 = i56 + 1;

        c6 = r1[$i5];

        $i76 = (int) c6;

        if $i76 >= 128 goto label3;

        $i52 = 31 * i54;

        $i50 = i55;

        i55 = i55 + 1;

        $b51 = (byte) c6;

        r3[$i50] = $b51;

        $i77 = (int) $b51;

        i54 = $i52 + $i77;

        goto label8;

     label3:
        $i78 = (int) c6;

        if $i78 >= 2048 goto label4;

        $i45 = 31 * i54;

        i57 = i55 + 1;

        $i79 = (int) c6;

        $i42 = $i79 >> 6;

        $i43 = 192 | $i42;

        $b44 = (byte) $i43;

        r3[i55] = $b44;

        $i80 = (int) $b44;

        i58 = $i45 + $i80;

        $i49 = 31 * i58;

        i55 = i57 + 1;

        $c46 = c6 & 63;

        $s47 = 128 | $c46;

        $b48 = (byte) $s47;

        r3[i57] = $b48;

        $i81 = (int) $b48;

        i54 = $i49 + $i81;

        goto label8;

     label4:
        $i82 = (int) c6;

        $i84 = (int) 55296;

        if $i82 < $i84 goto label5;

        $i85 = (int) c6;

        $i87 = (int) 57343;

        if $i85 <= $i87 goto label6;

     label5:
        $i10 = 31 * i54;

        i59 = i55 + 1;

        $i88 = (int) c6;

        $i7 = $i88 >> 12;

        $i8 = 224 | $i7;

        $b9 = (byte) $i8;

        r3[i55] = $b9;

        $i89 = (int) $b9;

        $i40 = $i10 + $i89;

        $i15 = 31 * $i40;

        i60 = i59 + 1;

        $i90 = (int) c6;

        $i11 = $i90 >> 6;

        $i12 = $i11 & 63;

        $i13 = 128 | $i12;

        $b14 = (byte) $i13;

        r3[i59] = $b14;

        $i91 = (int) $b14;

        $i41 = $i15 + $i91;

        $i19 = 31 * $i41;

        i55 = i60 + 1;

        $c16 = c6 & 63;

        $s17 = 128 | $c16;

        $b18 = (byte) $s17;

        r3[i60] = $b18;

        $i92 = (int) $b18;

        i54 = $i19 + $i92;

        goto label8;

     label6:
        $i93 = (int) c6;

        $i95 = (int) 56320;

        if $i93 >= $i95 goto label7;

        if i56 >= i2 goto label7;

        c61 = r1[i56];

        $i96 = (int) c61;

        $i98 = (int) 56320;

        if $i96 < $i98 goto label7;

        $i99 = (int) c61;

        $i101 = (int) 57343;

        if $i99 > $i101 goto label7;

        $i102 = (int) c6;

        $i20 = $i102 << 10;

        $i103 = (int) c61;

        $i21 = $i20 + $i103;

        i62 = $i21 + -56613888;

        i56 = i56 + 1;

        $i25 = 31 * i54;

        i63 = i55 + 1;

        $i22 = i62 >> 18;

        $i23 = 240 | $i22;

        $b24 = (byte) $i23;

        r3[i55] = $b24;

        $i104 = (int) $b24;

        i64 = $i25 + $i104;

        $i30 = 31 * i64;

        i65 = i63 + 1;

        $i26 = i62 >> 12;

        $i27 = $i26 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        r3[i63] = $b29;

        $i105 = (int) $b29;

        i66 = $i30 + $i105;

        $i35 = 31 * i66;

        i67 = i65 + 1;

        $i31 = i62 >> 6;

        $i32 = $i31 & 63;

        $i33 = 128 | $i32;

        $b34 = (byte) $i33;

        r3[i65] = $b34;

        $i106 = (int) $b34;

        i68 = $i35 + $i106;

        $i39 = 31 * i68;

        i55 = i67 + 1;

        $i36 = i62 & 63;

        $i37 = 128 | $i36;

        $b38 = (byte) $i37;

        r3[i67] = $b38;

        $i107 = (int) $b38;

        i54 = $i39 + $i107;

        goto label2;

     label7:
        $i69 = 31 * i54;

        i70 = i55 + 1;

        r3[i55] = -17;

        $i109 = (int) -17;

        $i71 = $i69 + $i109;

        $i72 = 31 * $i71;

        i73 = i70 + 1;

        r3[i70] = -65;

        $i111 = (int) -65;

        $i74 = $i72 + $i111;

        $i75 = 31 * $i74;

        i55 = i73 + 1;

        r3[i73] = -67;

        $i113 = (int) -67;

        i54 = $i75 + $i113;

     label8:
        goto label2;

     label9:
        r0.<org.apache.lucene.util.BytesRef: int length> = i55;

        return i54;
    }

    public static void UTF16toUTF8(char[], int, int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2, r3;
        byte $b9, $b13, $b16, $b21, $b25, $b29, $b32, $b35, $b38, $b40;
        short $s15, $s37;
        char[] r1;
        org.apache.lucene.util.BytesRef r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i39, i41, i42, i43, i44, i45, i47, i48, i49, i50, i51, i52, $i53, $i54, $i55, $i56, $i58, $i59, $i61, $i62, $i63, $i64, $i66, $i67, $i69, $i70, $i72, $i73, $i74;
        char c6, $c14, $c36, c46;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.util.BytesRef;

        i41 = 0;

        i42 = i0;

        i2 = i0 + i1;

        r3 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        i3 = i1 * 4;

        $i4 = lengthof r3;

        if $i4 >= i3 goto label1;

        $r2 = newarray (byte)[i3];

        r0.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r2;

        r3 = $r2;

     label1:
        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

     label2:
        if i42 >= i2 goto label9;

        $i5 = i42;

        i42 = i42 + 1;

        c6 = r1[$i5];

        $i53 = (int) c6;

        if $i53 >= 128 goto label3;

        $i39 = i41;

        i41 = i41 + 1;

        $b40 = (byte) c6;

        r3[$i39] = $b40;

        goto label8;

     label3:
        $i54 = (int) c6;

        if $i54 >= 2048 goto label4;

        i43 = i41 + 1;

        $i55 = (int) c6;

        $i33 = $i55 >> 6;

        $i34 = 192 | $i33;

        $b35 = (byte) $i34;

        r3[i41] = $b35;

        i41 = i43 + 1;

        $c36 = c6 & 63;

        $s37 = 128 | $c36;

        $b38 = (byte) $s37;

        r3[i43] = $b38;

        goto label8;

     label4:
        $i56 = (int) c6;

        $i58 = (int) 55296;

        if $i56 < $i58 goto label5;

        $i59 = (int) c6;

        $i61 = (int) 57343;

        if $i59 <= $i61 goto label6;

     label5:
        i44 = i41 + 1;

        $i62 = (int) c6;

        $i7 = $i62 >> 12;

        $i8 = 224 | $i7;

        $b9 = (byte) $i8;

        r3[i41] = $b9;

        i45 = i44 + 1;

        $i63 = (int) c6;

        $i10 = $i63 >> 6;

        $i11 = $i10 & 63;

        $i12 = 128 | $i11;

        $b13 = (byte) $i12;

        r3[i44] = $b13;

        i41 = i45 + 1;

        $c14 = c6 & 63;

        $s15 = 128 | $c14;

        $b16 = (byte) $s15;

        r3[i45] = $b16;

        goto label8;

     label6:
        $i64 = (int) c6;

        $i66 = (int) 56320;

        if $i64 >= $i66 goto label7;

        if i42 >= i2 goto label7;

        c46 = r1[i42];

        $i67 = (int) c46;

        $i69 = (int) 56320;

        if $i67 < $i69 goto label7;

        $i70 = (int) c46;

        $i72 = (int) 57343;

        if $i70 > $i72 goto label7;

        $i73 = (int) c6;

        $i17 = $i73 << 10;

        $i74 = (int) c46;

        $i18 = $i17 + $i74;

        i47 = $i18 + -56613888;

        i42 = i42 + 1;

        i48 = i41 + 1;

        $i19 = i47 >> 18;

        $i20 = 240 | $i19;

        $b21 = (byte) $i20;

        r3[i41] = $b21;

        i49 = i48 + 1;

        $i22 = i47 >> 12;

        $i23 = $i22 & 63;

        $i24 = 128 | $i23;

        $b25 = (byte) $i24;

        r3[i48] = $b25;

        i50 = i49 + 1;

        $i26 = i47 >> 6;

        $i27 = $i26 & 63;

        $i28 = 128 | $i27;

        $b29 = (byte) $i28;

        r3[i49] = $b29;

        i41 = i50 + 1;

        $i30 = i47 & 63;

        $i31 = 128 | $i30;

        $b32 = (byte) $i31;

        r3[i50] = $b32;

        goto label2;

     label7:
        i51 = i41 + 1;

        r3[i41] = -17;

        i52 = i51 + 1;

        r3[i51] = -65;

        i41 = i52 + 1;

        r3[i52] = -67;

     label8:
        goto label2;

     label9:
        r0.<org.apache.lucene.util.BytesRef: int length> = i41;

        return;
    }

    public static void UTF16toUTF8(java.lang.CharSequence, int, int, org.apache.lucene.util.BytesRef)
    {
        byte[] $r2, r3;
        byte $b8, $b12, $b15, $b23, $b27, $b31, $b34, $b37, $b40, $b42;
        java.lang.CharSequence r1;
        short $s14, $s39;
        org.apache.lucene.util.BytesRef r0;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i9, $i10, $i11, $i16, $i17, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i28, $i29, $i30, $i32, $i33, $i35, $i36, $i41, i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, $i54, $i55, $i56, $i57, $i59, $i60, $i62, $i63, $i64, $i65, $i67, $i68, $i70, $i71, $i73, $i74, $i75;
        char $c5, $c13, $c18, $c38;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.util.BytesRef;

        i2 = i0 + i1;

        r3 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        r0.<org.apache.lucene.util.BytesRef: int offset> = 0;

        i3 = i1 * 4;

        $i4 = lengthof r3;

        if $i4 >= i3 goto label1;

        $r2 = newarray (byte)[i3];

        r0.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r2;

        r3 = $r2;

     label1:
        i43 = 0;

        i44 = i0;

     label2:
        if i44 >= i2 goto label9;

        $c5 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i44);

        $i54 = (int) $c5;

        if $i54 >= 128 goto label3;

        $i41 = i43;

        i43 = i43 + 1;

        $b42 = (byte) $c5;

        r3[$i41] = $b42;

        goto label8;

     label3:
        $i55 = (int) $c5;

        if $i55 >= 2048 goto label4;

        i45 = i43 + 1;

        $i56 = (int) $c5;

        $i35 = $i56 >> 6;

        $i36 = 192 | $i35;

        $b37 = (byte) $i36;

        r3[i43] = $b37;

        i43 = i45 + 1;

        $c38 = $c5 & 63;

        $s39 = 128 | $c38;

        $b40 = (byte) $s39;

        r3[i45] = $b40;

        goto label8;

     label4:
        $i57 = (int) $c5;

        $i59 = (int) 55296;

        if $i57 < $i59 goto label5;

        $i60 = (int) $c5;

        $i62 = (int) 57343;

        if $i60 <= $i62 goto label6;

     label5:
        i46 = i43 + 1;

        $i63 = (int) $c5;

        $i6 = $i63 >> 12;

        $i7 = 224 | $i6;

        $b8 = (byte) $i7;

        r3[i43] = $b8;

        i47 = i46 + 1;

        $i64 = (int) $c5;

        $i9 = $i64 >> 6;

        $i10 = $i9 & 63;

        $i11 = 128 | $i10;

        $b12 = (byte) $i11;

        r3[i46] = $b12;

        i43 = i47 + 1;

        $c13 = $c5 & 63;

        $s14 = 128 | $c13;

        $b15 = (byte) $s14;

        r3[i47] = $b15;

        goto label8;

     label6:
        $i65 = (int) $c5;

        $i67 = (int) 56320;

        if $i65 >= $i67 goto label7;

        $i16 = i2 - 1;

        if i44 >= $i16 goto label7;

        $i17 = i44 + 1;

        $c18 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i17);

        $i68 = (int) $c18;

        $i70 = (int) 56320;

        if $i68 < $i70 goto label7;

        $i71 = (int) $c18;

        $i73 = (int) 57343;

        if $i71 > $i73 goto label7;

        $i74 = (int) $c5;

        $i19 = $i74 << 10;

        $i75 = (int) $c18;

        $i20 = $i19 + $i75;

        i48 = $i20 + -56613888;

        i44 = i44 + 1;

        i49 = i43 + 1;

        $i21 = i48 >> 18;

        $i22 = 240 | $i21;

        $b23 = (byte) $i22;

        r3[i43] = $b23;

        i50 = i49 + 1;

        $i24 = i48 >> 12;

        $i25 = $i24 & 63;

        $i26 = 128 | $i25;

        $b27 = (byte) $i26;

        r3[i49] = $b27;

        i51 = i50 + 1;

        $i28 = i48 >> 6;

        $i29 = $i28 & 63;

        $i30 = 128 | $i29;

        $b31 = (byte) $i30;

        r3[i50] = $b31;

        i43 = i51 + 1;

        $i32 = i48 & 63;

        $i33 = 128 | $i32;

        $b34 = (byte) $i33;

        r3[i51] = $b34;

        goto label8;

     label7:
        i52 = i43 + 1;

        r3[i43] = -17;

        i53 = i52 + 1;

        r3[i52] = -65;

        i43 = i53 + 1;

        r3[i53] = -67;

     label8:
        i44 = i44 + 1;

        goto label2;

     label9:
        r0.<org.apache.lucene.util.BytesRef: int length> = i43;

        return;
    }

    public static boolean validUTF16String(java.lang.CharSequence)
    {
        int $i0, $i2, i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22;
        java.lang.CharSequence r0;
        char $c1, $c3;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i4 = 0;

     label1:
        if i4 >= $i0 goto label7;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i4);

        $i5 = (int) $c1;

        $i7 = (int) 55296;

        if $i5 < $i7 goto label5;

        $i8 = (int) $c1;

        $i10 = (int) 56319;

        if $i8 > $i10 goto label5;

        $i2 = $i0 - 1;

        if i4 >= $i2 goto label4;

        i4 = i4 + 1;

        $c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i4);

        $i11 = (int) $c3;

        $i13 = (int) 56320;

        if $i11 < $i13 goto label2;

        $i14 = (int) $c3;

        $i16 = (int) 57343;

        if $i14 > $i16 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        goto label6;

     label4:
        return 0;

     label5:
        $i17 = (int) $c1;

        $i19 = (int) 56320;

        if $i17 < $i19 goto label6;

        $i20 = (int) $c1;

        $i22 = (int) 57343;

        if $i20 > $i22 goto label6;

        return 0;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return 1;
    }

    public static boolean validUTF16String(char[], int)
    {
        int i0, $i2, i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22;
        char c1, c3;
        char[] r0;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        c1 = r0[i4];

        $i5 = (int) c1;

        $i7 = (int) 55296;

        if $i5 < $i7 goto label5;

        $i8 = (int) c1;

        $i10 = (int) 56319;

        if $i8 > $i10 goto label5;

        $i2 = i0 - 1;

        if i4 >= $i2 goto label4;

        i4 = i4 + 1;

        c3 = r0[i4];

        $i11 = (int) c3;

        $i13 = (int) 56320;

        if $i11 < $i13 goto label2;

        $i14 = (int) c3;

        $i16 = (int) 57343;

        if $i14 > $i16 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        goto label6;

     label4:
        return 0;

     label5:
        $i17 = (int) c1;

        $i19 = (int) 56320;

        if $i17 < $i19 goto label6;

        $i20 = (int) c1;

        $i22 = (int) 57343;

        if $i20 > $i22 goto label6;

        return 0;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return 1;
    }

    public static int codePointCount(org.apache.lucene.util.BytesRef)
    {
        byte[] r1;
        short s3, $s6;
        byte $b2;
        int $i0, i1, i4, i5, $i7, $i8, $i9, $i10, $i11;
        org.apache.lucene.util.BytesRef r0;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        i4 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int length>;

        i1 = i4 + $i0;

        r1 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        i5 = 0;

     label1:
        if i4 >= i1 goto label7;

        $b2 = r1[i4];

        $s6 = (short) $b2;

        s3 = $s6 & 255;

        $i7 = (int) s3;

        if $i7 >= 128 goto label2;

        i4 = i4 + 1;

        goto label6;

     label2:
        $i8 = (int) s3;

        if $i8 < 192 goto label5;

        $i9 = (int) s3;

        if $i9 >= 224 goto label3;

        i4 = i4 + 2;

        goto label6;

     label3:
        $i10 = (int) s3;

        if $i10 >= 240 goto label4;

        i4 = i4 + 3;

        goto label6;

     label4:
        $i11 = (int) s3;

        if $i11 >= 248 goto label5;

        i4 = i4 + 4;

        goto label6;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        if i4 <= i1 goto label8;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label8:
        return i5;
    }

    public static void UTF8toUTF32(org.apache.lucene.util.BytesRef, org.apache.lucene.util.IntsRef)
    {
        byte[] $r8;
        org.apache.lucene.util.IntsRef r0;
        byte $b1, $b5, $b8, $b9, $b12, $b14, $b17;
        int[] $r1, $r3, $r4, $r6, $r7;
        org.apache.lucene.util.BytesRef r2;
        short $s2, $s28;
        int $i0, i3, $i4, $i6, $i7, $i10, $i11, $i13, $i15, $i16, $i18, $i19, i20, i21, $i22, $i23, $i24, i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34;
        java.lang.IllegalArgumentException $r9;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        r0 := @parameter1: org.apache.lucene.util.IntsRef;

        $r1 = r0.<org.apache.lucene.util.IntsRef: int[] ints>;

        if $r1 == null goto label01;

        $r6 = r0.<org.apache.lucene.util.IntsRef: int[] ints>;

        $i19 = lengthof $r6;

        $i18 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i19 >= $i18 goto label02;

     label01:
        $i0 = r2.<org.apache.lucene.util.BytesRef: int length>;

        $r3 = newarray (int)[$i0];

        r0.<org.apache.lucene.util.IntsRef: int[] ints> = $r3;

     label02:
        i20 = 0;

        i21 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $r7 = r0.<org.apache.lucene.util.IntsRef: int[] ints>;

        $r8 = r2.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i22 = r2.<org.apache.lucene.util.BytesRef: int offset>;

        $i23 = r2.<org.apache.lucene.util.BytesRef: int length>;

        $i24 = $i22 + $i23;

     label03:
        if i21 >= $i24 goto label12;

        $r4 = <org.apache.lucene.util.UnicodeUtil: int[] utf8CodeLength>;

        $b1 = $r8[i21];

        $s28 = (short) $b1;

        $s2 = $s28 & 255;

        $i29 = (int) $s2;

        i3 = $r4[$i29];

        tableswitch(i3)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            default: goto label08;
        };

     label04:
        $i15 = i20;

        i20 = i20 + 1;

        $i16 = i21;

        i21 = i21 + 1;

        $b17 = $r8[$i16];

        $i30 = (int) $b17;

        $r7[$i15] = $i30;

        goto label03;

     label05:
        $i13 = i21;

        i21 = i21 + 1;

        $b14 = $r8[$i13];

        $i31 = (int) $b14;

        i25 = $i31 & 31;

        goto label09;

     label06:
        $i11 = i21;

        i21 = i21 + 1;

        $b12 = $r8[$i11];

        $i32 = (int) $b12;

        i25 = $i32 & 15;

        goto label09;

     label07:
        $i4 = i21;

        i21 = i21 + 1;

        $b5 = $r8[$i4];

        $i33 = (int) $b5;

        i25 = $i33 & 7;

        goto label09;

     label08:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid utf8");

        throw $r9;

     label09:
        $i26 = i21 + i3;

        $i27 = $i26 - 1;

     label10:
        if i21 >= $i27 goto label11;

        $i10 = i25 << 6;

        $i7 = i21;

        i21 = i21 + 1;

        $b8 = $r8[$i7];

        $b9 = $b8 & 63;

        $i34 = (int) $b9;

        i25 = $i10 | $i34;

        goto label10;

     label11:
        $i6 = i20;

        i20 = i20 + 1;

        $r7[$i6] = i25;

        goto label03;

     label12:
        r0.<org.apache.lucene.util.IntsRef: int offset> = 0;

        r0.<org.apache.lucene.util.IntsRef: int length> = i20;

        return;
    }

    public static java.lang.String newString(int[], int, int)
    {
        java.lang.IndexOutOfBoundsException $r4;
        int[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i12, $i13, $i14, $i15, i16, i17, i18, $i20, $i22;
        java.lang.String $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        char $c6, $c9, $c11;
        java.lang.IllegalArgumentException $r7, $r8;
        char[] r5, r6;

        r1 := @parameter0: int[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label1:
        r6 = newarray (char)[i0];

        i17 = 0;

        i18 = i1;

        i2 = i1 + i0;

     label2:
        if i18 >= i2 goto label9;

        i3 = r1[i18];

        if i3 < 0 goto label3;

        if i3 <= 1114111 goto label4;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label4:
        if i3 >= 65536 goto label5;

        $c11 = (char) i3;

        r6[i17] = $c11;

        i17 = i17 + 1;

        goto label6;

     label5:
        $i4 = i3 >> 10;

        $i20 = (int) 55232;

        $i5 = $i20 + $i4;

        $c6 = (char) $i5;

        r6[i17] = $c6;

        $i10 = i17 + 1;

        $i7 = i3 & 1023;

        $i22 = (int) 56320;

        $i8 = $i22 + $i7;

        $c9 = (char) $i8;

        r6[$i10] = $c9;

        i17 = i17 + 2;

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $i12 = lengthof r1;

        $d1 = (double) $i12;

        $i13 = i17 + 2;

        $d0 = (double) $i13;

        $d3 = $d1 * $d0;

        $i14 = i18 - i1;

        $i15 = $i14 + 1;

        $d2 = (double) $i15;

        $d4 = $d3 / $d2;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        i16 = (int) $d5;

        r5 = newarray (char)[i16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r5, 0, i17);

        r6 = r5;

        goto label4;

     label8:
        i18 = i18 + 1;

        goto label2;

     label9:
        $r9 = new java.lang.String;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r6, 0, i17);

        return $r9;

        catch java.lang.IndexOutOfBoundsException from label4 to label6 with label7;
    }

    public static java.lang.String toHexString(java.lang.String)
    {
        int $i0, i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22;
        java.lang.String r1, $r2, $r5, $r7;
        char $c1;
        java.lang.StringBuilder $r4, $r6, $r8, $r9;

        r1 := @parameter0: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label9;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if i2 <= 0 goto label2;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $i3 = (int) $c1;

        if $i3 >= 128 goto label3;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label8;

     label3:
        $i4 = (int) $c1;

        $i6 = (int) 55296;

        if $i4 < $i6 goto label4;

        $i7 = (int) $c1;

        $i9 = (int) 56319;

        if $i7 > $i9 goto label4;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("H:");

        goto label7;

     label4:
        $i10 = (int) $c1;

        $i12 = (int) 56320;

        if $i10 < $i12 goto label5;

        $i13 = (int) $c1;

        $i15 = (int) 57343;

        if $i13 > $i15 goto label5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L:");

        goto label7;

     label5:
        $i16 = (int) $c1;

        $i18 = (int) 57343;

        if $i16 <= $i18 goto label7;

        $i19 = (int) $c1;

        $i21 = (int) 65535;

        if $i19 != $i21 goto label6;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("F:");

        goto label7;

     label6:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("E:");

     label7:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $i22 = (int) $c1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i22);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label8:
        i2 = i2 + 1;

        goto label1;

     label9:
        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void UTF8toUTF16(byte[], int, int, org.apache.lucene.util.CharsRef)
    {
        byte[] r3;
        byte $b5, $b8, $b9, $b13, $b14, $b18, $b19, $b22, $b37, $b38, $b42, $b43, $b50, $b51;
        java.lang.StringBuilder $r6, $r8, $r12;
        long $l21, $l27, $l28, $l29;
        java.lang.AssertionError $r11, $r13;
        short s6, $s7, $s36, $s48, $s60;
        java.lang.String $r7, $r9;
        org.apache.lucene.util.CharsRef r0;
        char[] $r1, $r2;
        boolean $z0, $z1;
        int i0, i1, $i2, $i3, $i4, $i10, $i11, $i12, $i15, $i16, $i17, $i20, i23, $i24, $i25, $i30, $i32, $i34, $i35, $i39, $i40, $i41, $i44, $i45, $i47, $i49, $i52, $i53, $i55, i57, i58, i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i78;
        char $c26, $c31, $c33, $c46, $c54, $c56;

        r3 := @parameter0: byte[];

        i57 := @parameter1: int;

        i0 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.util.CharsRef;

        r0.<org.apache.lucene.util.CharsRef: int offset> = 0;

        i58 = 0;

        $r1 = r0.<org.apache.lucene.util.CharsRef: char[] chars>;

        $r2 = staticinvoke <org.apache.lucene.util.ArrayUtil: char[] grow(char[],int)>($r1, i0);

        r0.<org.apache.lucene.util.CharsRef: char[] chars> = $r2;

        i1 = i57 + i0;

     label1:
        if i57 >= i1 goto label9;

        $i4 = i57;

        i57 = i57 + 1;

        $b5 = r3[$i4];

        $s60 = (short) $b5;

        s6 = $s60 & 255;

        $i61 = (int) s6;

        if $i61 >= 192 goto label3;

        $z1 = <org.apache.lucene.util.UnicodeUtil: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i62 = (int) s6;

        if $i62 < 128 goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        $i55 = i58;

        i58 = i58 + 1;

        $c56 = (char) s6;

        $r2[$i55] = $c56;

        goto label8;

     label3:
        $i63 = (int) s6;

        if $i63 >= 224 goto label4;

        $i47 = i58;

        i58 = i58 + 1;

        $s48 = s6 & 31;

        $i64 = (int) $s48;

        $i52 = $i64 << 6;

        $i49 = i57;

        i57 = i57 + 1;

        $b50 = r3[$i49];

        $b51 = $b50 & 63;

        $i65 = (int) $b51;

        $i53 = $i52 + $i65;

        $c54 = (char) $i53;

        $r2[$i47] = $c54;

        goto label8;

     label4:
        $i66 = (int) s6;

        if $i66 >= 240 goto label5;

        $i35 = i58;

        i58 = i58 + 1;

        $s36 = s6 & 15;

        $i67 = (int) $s36;

        $i40 = $i67 << 12;

        $b37 = r3[i57];

        $b38 = $b37 & 63;

        $i68 = (int) $b38;

        $i39 = $i68 << 6;

        $i44 = $i40 + $i39;

        $i41 = i57 + 1;

        $b42 = r3[$i41];

        $b43 = $b42 & 63;

        $i69 = (int) $b43;

        $i45 = $i44 + $i69;

        $c46 = (char) $i45;

        $r2[$i35] = $c46;

        i57 = i57 + 2;

        goto label8;

     label5:
        $z0 = <org.apache.lucene.util.UnicodeUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i70 = (int) s6;

        if $i70 < 248 goto label6;

        $r13 = new java.lang.AssertionError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b = 0x");

        $i71 = (int) s6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i71);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r13;

     label6:
        $s7 = s6 & 7;

        $i72 = (int) $s7;

        $i11 = $i72 << 18;

        $b8 = r3[i57];

        $b9 = $b8 & 63;

        $i73 = (int) $b9;

        $i10 = $i73 << 12;

        $i16 = $i11 + $i10;

        $i12 = i57 + 1;

        $b13 = r3[$i12];

        $b14 = $b13 & 63;

        $i74 = (int) $b14;

        $i15 = $i74 << 6;

        $i20 = $i16 + $i15;

        $i17 = i57 + 2;

        $b18 = r3[$i17];

        $b19 = $b18 & 63;

        $i75 = (int) $b19;

        $i34 = $i20 + $i75;

        i57 = i57 + 3;

        $l21 = (long) $i34;

        $b22 = $l21 cmp 65535L;

        $i76 = (int) $b22;

        if $i76 >= 0 goto label7;

        $i32 = i58;

        i58 = i58 + 1;

        $c33 = (char) $i34;

        $r2[$i32] = $c33;

        goto label8;

     label7:
        i23 = $i34 - 65536;

        i59 = i58 + 1;

        $i24 = i23 >> 10;

        $i78 = (int) 55296;

        $i25 = $i24 + $i78;

        $c26 = (char) $i25;

        $r2[i58] = $c26;

        i58 = i59 + 1;

        $l27 = (long) i23;

        $l28 = $l27 & 1023L;

        $l29 = $l28 + 56320L;

        $i30 = (int) $l29;

        $c31 = (char) $i30;

        $r2[i59] = $c31;

     label8:
        goto label1;

     label9:
        $i2 = r0.<org.apache.lucene.util.CharsRef: int offset>;

        $i3 = i58 - $i2;

        r0.<org.apache.lucene.util.CharsRef: int length> = $i3;

        return;
    }

    public static void UTF8toUTF16(org.apache.lucene.util.BytesRef, org.apache.lucene.util.CharsRef)
    {
        byte[] $r2;
        org.apache.lucene.util.BytesRef r0;
        org.apache.lucene.util.CharsRef r1;
        int $i0, $i1;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r1 := @parameter1: org.apache.lucene.util.CharsRef;

        $r2 = r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = r0.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = r0.<org.apache.lucene.util.BytesRef: int length>;

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF8toUTF16(byte[],int,int,org.apache.lucene.util.CharsRef)>($r2, $i1, $i0, r1);

        return;
    }

    static void <clinit>()
    {
        byte[] $r2;
        int[] $r3;
        org.apache.lucene.util.BytesRef $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.util.UnicodeUtil: int LEAD_SURROGATE_OFFSET_> = 55232;

        <org.apache.lucene.util.UnicodeUtil: int SUPPLEMENTARY_MIN_VALUE> = 65536;

        <org.apache.lucene.util.UnicodeUtil: int LEAD_SURROGATE_MIN_VALUE> = 55296;

        <org.apache.lucene.util.UnicodeUtil: int TRAIL_SURROGATE_MIN_VALUE> = 56320;

        <org.apache.lucene.util.UnicodeUtil: int TRAIL_SURROGATE_MASK_> = 1023;

        <org.apache.lucene.util.UnicodeUtil: int LEAD_SURROGATE_SHIFT_> = 10;

        <org.apache.lucene.util.UnicodeUtil: int SURROGATE_OFFSET> = -56613888;

        <org.apache.lucene.util.UnicodeUtil: long HALF_MASK> = 1023L;

        <org.apache.lucene.util.UnicodeUtil: long HALF_SHIFT> = 10L;

        <org.apache.lucene.util.UnicodeUtil: long UNI_MAX_BMP> = 65535L;

        <org.apache.lucene.util.UnicodeUtil: int UNI_REPLACEMENT_CHAR> = 65533;

        <org.apache.lucene.util.UnicodeUtil: int UNI_SUR_LOW_END> = 57343;

        <org.apache.lucene.util.UnicodeUtil: int UNI_SUR_LOW_START> = 56320;

        <org.apache.lucene.util.UnicodeUtil: int UNI_SUR_HIGH_END> = 56319;

        <org.apache.lucene.util.UnicodeUtil: int UNI_SUR_HIGH_START> = 55296;

        $r0 = class "Lorg/apache/lucene/util/UnicodeUtil;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.UnicodeUtil: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.util.BytesRef;

        $r2 = newarray (byte)[10];

        $r2[0] = -1;

        $r2[1] = -1;

        $r2[2] = -1;

        $r2[3] = -1;

        $r2[4] = -1;

        $r2[5] = -1;

        $r2[6] = -1;

        $r2[7] = -1;

        $r2[8] = -1;

        $r2[9] = -1;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r2);

        <org.apache.lucene.util.UnicodeUtil: org.apache.lucene.util.BytesRef BIG_TERM> = $r1;

        $r3 = newarray (int)[248];

        $r3[0] = 1;

        $r3[1] = 1;

        $r3[2] = 1;

        $r3[3] = 1;

        $r3[4] = 1;

        $r3[5] = 1;

        $r3[6] = 1;

        $r3[7] = 1;

        $r3[8] = 1;

        $r3[9] = 1;

        $r3[10] = 1;

        $r3[11] = 1;

        $r3[12] = 1;

        $r3[13] = 1;

        $r3[14] = 1;

        $r3[15] = 1;

        $r3[16] = 1;

        $r3[17] = 1;

        $r3[18] = 1;

        $r3[19] = 1;

        $r3[20] = 1;

        $r3[21] = 1;

        $r3[22] = 1;

        $r3[23] = 1;

        $r3[24] = 1;

        $r3[25] = 1;

        $r3[26] = 1;

        $r3[27] = 1;

        $r3[28] = 1;

        $r3[29] = 1;

        $r3[30] = 1;

        $r3[31] = 1;

        $r3[32] = 1;

        $r3[33] = 1;

        $r3[34] = 1;

        $r3[35] = 1;

        $r3[36] = 1;

        $r3[37] = 1;

        $r3[38] = 1;

        $r3[39] = 1;

        $r3[40] = 1;

        $r3[41] = 1;

        $r3[42] = 1;

        $r3[43] = 1;

        $r3[44] = 1;

        $r3[45] = 1;

        $r3[46] = 1;

        $r3[47] = 1;

        $r3[48] = 1;

        $r3[49] = 1;

        $r3[50] = 1;

        $r3[51] = 1;

        $r3[52] = 1;

        $r3[53] = 1;

        $r3[54] = 1;

        $r3[55] = 1;

        $r3[56] = 1;

        $r3[57] = 1;

        $r3[58] = 1;

        $r3[59] = 1;

        $r3[60] = 1;

        $r3[61] = 1;

        $r3[62] = 1;

        $r3[63] = 1;

        $r3[64] = 1;

        $r3[65] = 1;

        $r3[66] = 1;

        $r3[67] = 1;

        $r3[68] = 1;

        $r3[69] = 1;

        $r3[70] = 1;

        $r3[71] = 1;

        $r3[72] = 1;

        $r3[73] = 1;

        $r3[74] = 1;

        $r3[75] = 1;

        $r3[76] = 1;

        $r3[77] = 1;

        $r3[78] = 1;

        $r3[79] = 1;

        $r3[80] = 1;

        $r3[81] = 1;

        $r3[82] = 1;

        $r3[83] = 1;

        $r3[84] = 1;

        $r3[85] = 1;

        $r3[86] = 1;

        $r3[87] = 1;

        $r3[88] = 1;

        $r3[89] = 1;

        $r3[90] = 1;

        $r3[91] = 1;

        $r3[92] = 1;

        $r3[93] = 1;

        $r3[94] = 1;

        $r3[95] = 1;

        $r3[96] = 1;

        $r3[97] = 1;

        $r3[98] = 1;

        $r3[99] = 1;

        $r3[100] = 1;

        $r3[101] = 1;

        $r3[102] = 1;

        $r3[103] = 1;

        $r3[104] = 1;

        $r3[105] = 1;

        $r3[106] = 1;

        $r3[107] = 1;

        $r3[108] = 1;

        $r3[109] = 1;

        $r3[110] = 1;

        $r3[111] = 1;

        $r3[112] = 1;

        $r3[113] = 1;

        $r3[114] = 1;

        $r3[115] = 1;

        $r3[116] = 1;

        $r3[117] = 1;

        $r3[118] = 1;

        $r3[119] = 1;

        $r3[120] = 1;

        $r3[121] = 1;

        $r3[122] = 1;

        $r3[123] = 1;

        $r3[124] = 1;

        $r3[125] = 1;

        $r3[126] = 1;

        $r3[127] = 1;

        $r3[128] = -2147483648;

        $r3[129] = -2147483648;

        $r3[130] = -2147483648;

        $r3[131] = -2147483648;

        $r3[132] = -2147483648;

        $r3[133] = -2147483648;

        $r3[134] = -2147483648;

        $r3[135] = -2147483648;

        $r3[136] = -2147483648;

        $r3[137] = -2147483648;

        $r3[138] = -2147483648;

        $r3[139] = -2147483648;

        $r3[140] = -2147483648;

        $r3[141] = -2147483648;

        $r3[142] = -2147483648;

        $r3[143] = -2147483648;

        $r3[144] = -2147483648;

        $r3[145] = -2147483648;

        $r3[146] = -2147483648;

        $r3[147] = -2147483648;

        $r3[148] = -2147483648;

        $r3[149] = -2147483648;

        $r3[150] = -2147483648;

        $r3[151] = -2147483648;

        $r3[152] = -2147483648;

        $r3[153] = -2147483648;

        $r3[154] = -2147483648;

        $r3[155] = -2147483648;

        $r3[156] = -2147483648;

        $r3[157] = -2147483648;

        $r3[158] = -2147483648;

        $r3[159] = -2147483648;

        $r3[160] = -2147483648;

        $r3[161] = -2147483648;

        $r3[162] = -2147483648;

        $r3[163] = -2147483648;

        $r3[164] = -2147483648;

        $r3[165] = -2147483648;

        $r3[166] = -2147483648;

        $r3[167] = -2147483648;

        $r3[168] = -2147483648;

        $r3[169] = -2147483648;

        $r3[170] = -2147483648;

        $r3[171] = -2147483648;

        $r3[172] = -2147483648;

        $r3[173] = -2147483648;

        $r3[174] = -2147483648;

        $r3[175] = -2147483648;

        $r3[176] = -2147483648;

        $r3[177] = -2147483648;

        $r3[178] = -2147483648;

        $r3[179] = -2147483648;

        $r3[180] = -2147483648;

        $r3[181] = -2147483648;

        $r3[182] = -2147483648;

        $r3[183] = -2147483648;

        $r3[184] = -2147483648;

        $r3[185] = -2147483648;

        $r3[186] = -2147483648;

        $r3[187] = -2147483648;

        $r3[188] = -2147483648;

        $r3[189] = -2147483648;

        $r3[190] = -2147483648;

        $r3[191] = -2147483648;

        $r3[192] = 2;

        $r3[193] = 2;

        $r3[194] = 2;

        $r3[195] = 2;

        $r3[196] = 2;

        $r3[197] = 2;

        $r3[198] = 2;

        $r3[199] = 2;

        $r3[200] = 2;

        $r3[201] = 2;

        $r3[202] = 2;

        $r3[203] = 2;

        $r3[204] = 2;

        $r3[205] = 2;

        $r3[206] = 2;

        $r3[207] = 2;

        $r3[208] = 2;

        $r3[209] = 2;

        $r3[210] = 2;

        $r3[211] = 2;

        $r3[212] = 2;

        $r3[213] = 2;

        $r3[214] = 2;

        $r3[215] = 2;

        $r3[216] = 2;

        $r3[217] = 2;

        $r3[218] = 2;

        $r3[219] = 2;

        $r3[220] = 2;

        $r3[221] = 2;

        $r3[222] = 2;

        $r3[223] = 2;

        $r3[224] = 3;

        $r3[225] = 3;

        $r3[226] = 3;

        $r3[227] = 3;

        $r3[228] = 3;

        $r3[229] = 3;

        $r3[230] = 3;

        $r3[231] = 3;

        $r3[232] = 3;

        $r3[233] = 3;

        $r3[234] = 3;

        $r3[235] = 3;

        $r3[236] = 3;

        $r3[237] = 3;

        $r3[238] = 3;

        $r3[239] = 3;

        $r3[240] = 4;

        $r3[241] = 4;

        $r3[242] = 4;

        $r3[243] = 4;

        $r3[244] = 4;

        $r3[245] = 4;

        $r3[246] = 4;

        $r3[247] = 4;

        <org.apache.lucene.util.UnicodeUtil: int[] utf8CodeLength> = $r3;

        return;
    }
}
