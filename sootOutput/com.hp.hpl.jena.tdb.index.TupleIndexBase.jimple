public abstract class com.hp.hpl.jena.tdb.index.TupleIndexBase extends java.lang.Object implements com.hp.hpl.jena.tdb.index.TupleIndex
{
    private static final boolean Check;
    protected final org.apache.jena.atlas.lib.ColumnMap colMap;
    protected final int tupleLength;
    private final java.lang.String name;

    protected void <init>(int, org.apache.jena.atlas.lib.ColumnMap, java.lang.String)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        int i0;
        java.lang.String r2;
        org.apache.jena.atlas.lib.ColumnMap r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.jena.atlas.lib.ColumnMap;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: int tupleLength> = i0;

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: org.apache.jena.atlas.lib.ColumnMap colMap> = r1;

        r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: java.lang.String name> = r2;

        return;
    }

    protected abstract boolean performAdd(org.apache.jena.atlas.lib.Tuple);

    protected abstract boolean performDelete(org.apache.jena.atlas.lib.Tuple);

    protected abstract java.util.Iterator performFind(org.apache.jena.atlas.lib.Tuple);

    public final boolean add(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        org.apache.jena.atlas.lib.Tuple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: boolean performAdd(org.apache.jena.atlas.lib.Tuple)>(r1);

        return $z0;
    }

    public final boolean delete(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        org.apache.jena.atlas.lib.Tuple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: boolean performDelete(org.apache.jena.atlas.lib.Tuple)>(r1);

        return $z0;
    }

    public final java.util.Iterator find(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Tuple r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: java.util.Iterator performFind(org.apache.jena.atlas.lib.Tuple)>(r1);

        return $r2;
    }

    public final int weight(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        org.apache.jena.atlas.lib.Tuple r1;
        com.hp.hpl.jena.tdb.store.NodeId r4;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        org.apache.jena.atlas.lib.ColumnMap $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        i2 = 0;

     label1:
        $i0 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: int tupleLength>;

        if i2 >= $i0 goto label3;

        $r2 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r3 = virtualinvoke $r2.<org.apache.jena.atlas.lib.ColumnMap: java.lang.Object fetchSlot(int,org.apache.jena.atlas.lib.Tuple)>(i2, r1);

        r4 = (com.hp.hpl.jena.tdb.store.NodeId) $r3;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: boolean undef(com.hp.hpl.jena.tdb.store.NodeId)>(r4);

        if $z0 == 0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: int tupleLength>;

        return $i1;
    }

    public final java.lang.String getMapping()
    {
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        org.apache.jena.atlas.lib.ColumnMap $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: org.apache.jena.atlas.lib.ColumnMap colMap>;

        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.lib.ColumnMap: java.lang.String getLabel()>();

        return $r2;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: java.lang.String name>;

        return $r1;
    }

    public final int getTupleLength()
    {
        int $i0;
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        $i0 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: int tupleLength>;

        return $i0;
    }

    public final org.apache.jena.atlas.lib.ColumnMap getColumnMap()
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r0;
        org.apache.jena.atlas.lib.ColumnMap $r1;

        r0 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        $r1 = r0.<com.hp.hpl.jena.tdb.index.TupleIndexBase: org.apache.jena.atlas.lib.ColumnMap colMap>;

        return $r1;
    }

    protected final boolean undef(com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r1;
        com.hp.hpl.jena.tdb.store.NodeId r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId;

        $z0 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isAny(com.hp.hpl.jena.tdb.store.NodeId)>(r0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.index.TupleIndexBase r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;

        r2 := @this: com.hp.hpl.jena.tdb.index.TupleIndexBase;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index:");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.index.TupleIndexBase: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.index.TupleIndexBase: boolean Check> = 0;

        return;
    }
}
