public class de.l3s.boilerpipe.document.TextBlock extends java.lang.Object implements java.lang.Cloneable
{
    boolean isContent;
    private java.lang.CharSequence text;
    java.util.Set labels;
    int offsetBlocksStart;
    int offsetBlocksEnd;
    int numWords;
    int numWordsInAnchorText;
    int numWordsInWrappedLines;
    int numWrappedLines;
    float textDensity;
    float linkDensity;
    java.util.BitSet containedTextElements;
    private int numFullTextWords;
    private static final java.util.BitSet EMPTY_BITSET;
    public static final de.l3s.boilerpipe.document.TextBlock EMPTY_START;
    public static final de.l3s.boilerpipe.document.TextBlock EMPTY_END;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<de.l3s.boilerpipe.document.TextBlock: void <init>(java.lang.String,java.util.BitSet,int,int,int,int,int)>(r1, null, 0, 0, 0, 0, 0);

        return;
    }

    public void <init>(java.lang.String, java.util.BitSet, int, int, int, int, int)
    {
        de.l3s.boilerpipe.document.TextBlock r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        java.util.BitSet r2;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.BitSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent> = 0;

        r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = null;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numFullTextWords> = 0;

        r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text> = r1;

        r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements> = r2;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWords> = i0;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText> = i1;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines> = i2;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines> = i3;

        r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart> = i4;

        r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd> = i4;

        specialinvoke r0.<de.l3s.boilerpipe.document.TextBlock: void initDensities()>();

        return;
    }

    public boolean isContent()
    {
        de.l3s.boilerpipe.document.TextBlock r0;
        boolean $z0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $z0 = r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent>;

        return $z0;
    }

    public boolean setIsContent(boolean)
    {
        de.l3s.boilerpipe.document.TextBlock r0;
        boolean z0, $z1;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        z0 := @parameter0: boolean;

        $z1 = r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent>;

        if z0 == $z1 goto label1;

        r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent> = z0;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getText()
    {
        java.lang.String $r2;
        java.lang.CharSequence $r1;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int getNumWords()
    {
        int $i0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $i0 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        return $i0;
    }

    public int getNumWordsInAnchorText()
    {
        int $i0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $i0 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText>;

        return $i0;
    }

    public float getTextDensity()
    {
        float $f0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $f0 = r0.<de.l3s.boilerpipe.document.TextBlock: float textDensity>;

        return $f0;
    }

    public float getLinkDensity()
    {
        float $f0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $f0 = r0.<de.l3s.boilerpipe.document.TextBlock: float linkDensity>;

        return $f0;
    }

    public void mergeNext(de.l3s.boilerpipe.document.TextBlock)
    {
        boolean $z0, $z1, $z2, $z3;
        java.lang.CharSequence $r1, $r2, $r4, $r18;
        java.util.Set $r8, $r9, $r10, $r11, $r13;
        java.lang.StringBuilder $r17, $r19;
        java.util.HashSet $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        de.l3s.boilerpipe.document.TextBlock r0, r3;
        java.lang.Object $r15;
        java.util.BitSet $r5, $r6, $r7, $r14, $r16;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        r3 := @parameter0: de.l3s.boilerpipe.document.TextBlock;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        $z0 = $r1 instanceof java.lang.StringBuilder;

        if $z0 != 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        $r18 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r18);

        r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text> = $r17;

     label1:
        $r2 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        $r19 = (java.lang.StringBuilder) $r2;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r4 = r3.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);

        $i1 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        $i0 = r3.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        $i2 = $i1 + $i0;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWords> = $i2;

        $i4 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText>;

        $i3 = r3.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText>;

        $i5 = $i4 + $i3;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText> = $i5;

        $i7 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines>;

        $i6 = r3.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines>;

        $i8 = $i7 + $i6;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines> = $i8;

        $i10 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines>;

        $i9 = r3.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines>;

        $i11 = $i10 + $i9;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines> = $i11;

        $i13 = r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart>;

        $i12 = r3.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart> = $i14;

        $i16 = r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd>;

        $i15 = r3.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd>;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);

        r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd> = $i17;

        specialinvoke r0.<de.l3s.boilerpipe.document.TextBlock: void initDensities()>();

        $z2 = r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent>;

        $z1 = r3.<de.l3s.boilerpipe.document.TextBlock: boolean isContent>;

        $z3 = $z2 | $z1;

        r0.<de.l3s.boilerpipe.document.TextBlock: boolean isContent> = $z3;

        $r5 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        if $r5 != null goto label2;

        $r14 = r3.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        $r15 = virtualinvoke $r14.<java.util.BitSet: java.lang.Object clone()>();

        $r16 = (java.util.BitSet) $r15;

        r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements> = $r16;

        goto label3;

     label2:
        $r7 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        $r6 = r3.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        virtualinvoke $r7.<java.util.BitSet: void or(java.util.BitSet)>($r6);

     label3:
        $i19 = r0.<de.l3s.boilerpipe.document.TextBlock: int numFullTextWords>;

        $i18 = r3.<de.l3s.boilerpipe.document.TextBlock: int numFullTextWords>;

        $i20 = $i19 + $i18;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numFullTextWords> = $i20;

        $r8 = r3.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r8 == null goto label5;

        $r9 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r9 != null goto label4;

        $r12 = new java.util.HashSet;

        $r13 = r3.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r13);

        r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = $r12;

        goto label5;

     label4:
        $r11 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        $r10 = r3.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        interfaceinvoke $r11.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

     label5:
        return;
    }

    private void initDensities()
    {
        de.l3s.boilerpipe.document.TextBlock r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $i0 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines>;

        if $i0 != 0 goto label1;

        $i6 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines> = $i6;

        r0.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines> = 1;

     label1:
        $i1 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInWrappedLines>;

        $f1 = (float) $i1;

        $i2 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines>;

        $f0 = (float) $i2;

        $f2 = $f1 / $f0;

        r0.<de.l3s.boilerpipe.document.TextBlock: float textDensity> = $f2;

        $i3 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        if $i3 != 0 goto label2;

        $f5 = 0.0F;

        goto label3;

     label2:
        $i4 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWordsInAnchorText>;

        $f4 = (float) $i4;

        $i5 = r0.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        $f3 = (float) $i5;

        $f5 = $f4 / $f3;

     label3:
        r0.<de.l3s.boilerpipe.document.TextBlock: float linkDensity> = $f5;

        return;
    }

    public int getOffsetBlocksStart()
    {
        int $i0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $i0 = r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart>;

        return $i0;
    }

    public int getOffsetBlocksEnd()
    {
        int $i0;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $i0 = r0.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd>;

        return $i0;
    }

    public java.lang.String toString()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r18, $r20, $r21;
        boolean $z0;
        java.util.Set $r15;
        de.l3s.boilerpipe.document.TextBlock r2;
        float $f0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19;

        r2 := @this: de.l3s.boilerpipe.document.TextBlock;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r2.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksStart>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i1 = r2.<de.l3s.boilerpipe.document.TextBlock: int offsetBlocksEnd>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; nw=");

        $i2 = r2.<de.l3s.boilerpipe.document.TextBlock: int numWords>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";nwl=");

        $i3 = r2.<de.l3s.boilerpipe.document.TextBlock: int numWrappedLines>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";ld=");

        $f0 = r2.<de.l3s.boilerpipe.document.TextBlock: float linkDensity>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\t");

        $z0 = r2.<de.l3s.boilerpipe.document.TextBlock: boolean isContent>;

        if $z0 == 0 goto label1;

        $r21 = "CONTENT";

        goto label2;

     label1:
        $r21 = "boilerplate";

     label2:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r15 = r2.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r18 = virtualinvoke r2.<de.l3s.boilerpipe.document.TextBlock: java.lang.String getText()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public void addLabel(java.lang.String)
    {
        java.util.HashSet $r4;
        de.l3s.boilerpipe.document.TextBlock r0;
        java.util.Set $r1, $r3;
        java.lang.String r2;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r1 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>(2);

        r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = $r4;

     label1:
        $r3 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public boolean hasLabel(java.lang.String)
    {
        de.l3s.boilerpipe.document.TextBlock r0;
        java.util.Set $r1, $r3;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r1 == null goto label1;

        $r3 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.util.Set getLabels()
    {
        java.util.Set $r1;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        return $r1;
    }

    public void addLabels(java.util.Set)
    {
        java.util.HashSet $r4;
        de.l3s.boilerpipe.document.TextBlock r1;
        java.util.Set r0, $r2, $r3;

        r1 := @this: de.l3s.boilerpipe.document.TextBlock;

        r0 := @parameter0: java.util.Set;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r2 != null goto label2;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r0);

        r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = $r4;

        goto label3;

     label2:
        $r3 = r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0);

     label3:
        return;
    }

    public transient void addLabels(java.lang.String[])
    {
        java.util.Set $r2, $r4;
        java.lang.String[] r0;
        java.util.HashSet $r5;
        de.l3s.boilerpipe.document.TextBlock r1;
        int $i0, i1;
        java.lang.String r3;

        r1 := @this: de.l3s.boilerpipe.document.TextBlock;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r2 != null goto label2;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = $r5;

     label2:
        $i0 = lengthof r0;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r3 = r0[i1];

        $r4 = r1.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public java.util.BitSet getContainedTextElements()
    {
        java.util.BitSet $r1;
        de.l3s.boilerpipe.document.TextBlock r0;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

        $r1 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        return $r1;
    }

    protected java.lang.Object clone()
    {
        java.lang.CloneNotSupportedException $r13;
        java.util.HashSet $r8;
        boolean $z0, $z1;
        java.lang.CharSequence $r3, $r10, $r12;
        java.util.Set $r7, $r9, $r15;
        java.lang.RuntimeException $r14;
        de.l3s.boilerpipe.document.TextBlock r0, r2;
        java.lang.Object $r1, $r5;
        java.lang.StringBuilder $r11;
        java.util.BitSet $r4, $r6, $r16;

        r0 := @this: de.l3s.boilerpipe.document.TextBlock;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (de.l3s.boilerpipe.document.TextBlock) $r1;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label4:
        $r3 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        if $r3 == null goto label5;

        $r10 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        $z1 = $r10 instanceof java.lang.String;

        if $z1 != 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        $r12 = r0.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text>;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r12);

        r2.<de.l3s.boilerpipe.document.TextBlock: java.lang.CharSequence text> = $r11;

     label5:
        $r15 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        if $r15 == null goto label6;

        $r7 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r8 = new java.util.HashSet;

        $r9 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels>;

        specialinvoke $r8.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        r2.<de.l3s.boilerpipe.document.TextBlock: java.util.Set labels> = $r8;

     label6:
        $r16 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        if $r16 == null goto label7;

        $r4 = r0.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements>;

        $r5 = virtualinvoke $r4.<java.util.BitSet: java.lang.Object clone()>();

        $r6 = (java.util.BitSet) $r5;

        r2.<de.l3s.boilerpipe.document.TextBlock: java.util.BitSet containedTextElements> = $r6;

     label7:
        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.document.TextBlock $r6, $r7;
        int $i1;
        java.util.BitSet $r2, $r4, $r5;

        $r5 = new java.util.BitSet;

        specialinvoke $r5.<java.util.BitSet: void <init>()>();

        <de.l3s.boilerpipe.document.TextBlock: java.util.BitSet EMPTY_BITSET> = $r5;

        $r6 = new de.l3s.boilerpipe.document.TextBlock;

        $r2 = <de.l3s.boilerpipe.document.TextBlock: java.util.BitSet EMPTY_BITSET>;

        $i1 = (int) -1;

        specialinvoke $r6.<de.l3s.boilerpipe.document.TextBlock: void <init>(java.lang.String,java.util.BitSet,int,int,int,int,int)>("", $r2, 0, 0, 0, 0, $i1);

        <de.l3s.boilerpipe.document.TextBlock: de.l3s.boilerpipe.document.TextBlock EMPTY_START> = $r6;

        $r7 = new de.l3s.boilerpipe.document.TextBlock;

        $r4 = <de.l3s.boilerpipe.document.TextBlock: java.util.BitSet EMPTY_BITSET>;

        specialinvoke $r7.<de.l3s.boilerpipe.document.TextBlock: void <init>(java.lang.String,java.util.BitSet,int,int,int,int,int)>("", $r4, 0, 0, 0, 0, 2147483647);

        <de.l3s.boilerpipe.document.TextBlock: de.l3s.boilerpipe.document.TextBlock EMPTY_END> = $r7;

        return;
    }
}
