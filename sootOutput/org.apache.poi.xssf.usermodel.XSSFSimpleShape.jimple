public class org.apache.poi.xssf.usermodel.XSSFSimpleShape extends org.apache.poi.xssf.usermodel.XSSFShape implements java.lang.Iterable
{
    private final java.util.List _paragraphs;
    private static org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype;
    private org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape;
    private static java.lang.String[] _romanChars;
    private static int[] _romanAlphaValues;

    protected void <init>(org.apache.poi.xssf.usermodel.XSSFDrawing, org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape)
    {
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape r2;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        java.util.ArrayList $r3;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r5;
        java.util.List $r6;
        org.apache.poi.xssf.usermodel.XSSFDrawing r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r4;
        int $i0, i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r7;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFDrawing;

        r2 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFDrawing drawing> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape> = r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs> = $r3;

        $r4 = interfaceinvoke r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        if $r4 == null goto label2;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: int sizeOfPArray()>();

        if i1 >= $i0 goto label2;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $r5 = new org.apache.poi.xssf.usermodel.XSSFTextParagraph;

        $r7 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph getPArray(int)>(i1);

        specialinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph,org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape)>($r7, r2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected static org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r5;
        byte[] $r20;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r17;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r8;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r0, $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r18;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r15;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum $r16;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum $r13;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r19;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r14;

        $r0 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape$Factory: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape newInstance()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual addNewNvSpPr()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>(1L);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>("Shape 1");

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShapeNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingShapeProps addNewCNvSpPr()>();

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties addNewSpPr()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D addNewXfrm()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>(0L);

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>(0L);

        $r8 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>(0L);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>(0L);

        $r9 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D addNewPrstGeom()>();

        $r10 = <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum RECT>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r10);

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList addNewAvLst()>();

        $r11 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody addNewTxBody()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties addNewBodyPr()>();

        $r13 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType: org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum T>;

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setAnchor(org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum)>($r13);

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setRtlCol(boolean)>(0);

        $r14 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph addNewP()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

        $r16 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType: org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum L>;

        interfaceinvoke $r15.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setAlgn(org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum)>($r16);

        $r17 = interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewEndParaRPr()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        interfaceinvoke $r17.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSz(int)>(1100);

        $r18 = interfaceinvoke $r17.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

        $r19 = interfaceinvoke $r18.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor addNewSrgbClr()>();

        $r20 = newarray (byte)[3];

        $r20[0] = 0;

        $r20[1] = 0;

        $r20[2] = 0;

        interfaceinvoke $r19.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r20);

        interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextListStyle addNewLstStyle()>();

        <org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype> = $r2;

     label1:
        $r1 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype>;

        return $r1;
    }

    public org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape getCTShape()
    {
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r2;
        java.lang.Integer $r8, $r16;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        java.lang.String $r4, $r7, $r9, $r10, $r11, $r17;
        boolean $z0, $z1;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r15;
        java.util.List $r3, $r5;
        java.lang.StringBuilder $r0, $r12, $r13, $r14;
        java.lang.Object $r6;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(9);

        i6 = 0;

     label01:
        if i6 >= 9 goto label02;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

        i6 = i6 + 1;

        goto label01;

     label02:
        i7 = 0;

     label03:
        $r3 = r2.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i7 >= $i0 goto label14;

        $i1 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label04;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label04:
        $r5 = r2.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i7);

        $r15 = (org.apache.poi.xssf.usermodel.XSSFTextParagraph) $r6;

        $z0 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: boolean isBullet()>();

        if $z0 == 0 goto label11;

        $r9 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i2 <= 0 goto label11;

        $i3 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getLevel()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 8);

        $z1 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: boolean isBulletAutoNumber()>();

        if $z1 == 0 goto label05;

        i7 = specialinvoke r2.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: int processAutoNumGroup(int,int,java.util.List,java.lang.StringBuilder)>(i7, $i4, $r1, $r0);

        goto label10;

     label05:
        i8 = 0;

     label06:
        if i8 >= $i4 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        i8 = i8 + 1;

        goto label06;

     label07:
        $r10 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getBulletCharacter()>();

        $i5 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i5 <= 0 goto label08;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        $r17 = "- ";

     label09:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r11 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label10:
        goto label13;

     label11:
        $r7 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i9 = 0;

     label12:
        if i9 >= 9 goto label13;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i9, $r8);

        i9 = i9 + 1;

        goto label12;

     label13:
        i7 = i7 + 1;

        goto label03;

     label14:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private int processAutoNumGroup(int, int, java.util.List, java.lang.StringBuilder)
    {
        java.lang.Integer $r6, $r14, $r15, $r17, $r21, $r24, $r29;
        boolean $z0, $z1;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph r25, $r27, r28;
        java.util.List $r1, r4, $r8, $r26;
        java.lang.StringBuilder r11;
        org.apache.poi.xssf.usermodel.ListAutoNumber $r3, $r10;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, i19, $i20, $i21, i22;
        java.lang.String $r7, $r12, $r18, $r19, $r22, $r23;
        java.lang.Object $r2, $r5, $r9, $r13, $r16, $r20;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        i17 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: java.util.List;

        r11 := @parameter3: java.lang.StringBuilder;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i17);

        r25 = (org.apache.poi.xssf.usermodel.XSSFTextParagraph) $r2;

        $i0 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getBulletAutoNumberStart()>();

        $r3 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: org.apache.poi.xssf.usermodel.ListAutoNumber getBulletAutoNumberScheme()>();

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label03;

        if $i0 != 0 goto label01;

        $i18 = 1;

        goto label02;

     label01:
        $i18 = $i0;

     label02:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r24);

     label03:
        i19 = 0;

     label04:
        if i19 >= i1 goto label05;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        i19 = i19 + 1;

        goto label04;

     label05:
        $r7 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i3 <= 0 goto label06;

        $r20 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r21 = (java.lang.Integer) $r20;

        $i16 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r22 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String getBulletPrefix(org.apache.poi.xssf.usermodel.ListAutoNumber,int)>($r3, $i16);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r23 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

     label06:
        $i20 = i17 + 1;

        $r26 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $i21 = interfaceinvoke $r26.<java.util.List: int size()>();

        if $i20 != $i21 goto label07;

        $r27 = null;

        goto label08;

     label07:
        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $i4 = i17 + 1;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i4);

        $r27 = (org.apache.poi.xssf.usermodel.XSSFTextParagraph) $r9;

     label08:
        r28 = $r27;

        if $r27 != null goto label09;

        goto label17;

     label09:
        $z0 = virtualinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: boolean isBullet()>();

        if $z0 == 0 goto label17;

        $z1 = virtualinvoke r25.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: boolean isBulletAutoNumber()>();

        if $z1 != 0 goto label10;

        goto label17;

     label10:
        $i5 = virtualinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getLevel()>();

        if $i5 <= i1 goto label12;

        $i13 = virtualinvoke r11.<java.lang.StringBuilder: int length()>();

        if $i13 <= 0 goto label11;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label11:
        $i14 = i17 + 1;

        $i15 = virtualinvoke r28.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getLevel()>();

        i17 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: int processAutoNumGroup(int,int,java.util.List,java.lang.StringBuilder)>($i14, $i15, r4, r11);

        goto label06;

     label12:
        $i6 = virtualinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getLevel()>();

        if $i6 >= i1 goto label13;

        goto label17;

     label13:
        $r10 = virtualinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: org.apache.poi.xssf.usermodel.ListAutoNumber getBulletAutoNumberScheme()>();

        $i7 = virtualinvoke $r27.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: int getBulletAutoNumberStart()>();

        if $r10 != $r3 goto label17;

        if $i7 != $i0 goto label17;

        i17 = i17 + 1;

        $i8 = virtualinvoke r11.<java.lang.StringBuilder: int length()>();

        if $i8 <= 0 goto label14;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label14:
        i22 = 0;

     label15:
        if i22 >= i1 goto label16;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        i22 = i22 + 1;

        goto label15;

     label16:
        $r12 = virtualinvoke r28.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        $i9 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i9 <= 0 goto label06;

        $r13 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (java.lang.Integer) $r13;

        $i10 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $i11 = $i10 + 1;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r15);

        $r16 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r17 = (java.lang.Integer) $r16;

        $i12 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r18 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String getBulletPrefix(org.apache.poi.xssf.usermodel.ListAutoNumber,int)>($r10, $i12);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke r28.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: java.lang.String getText()>();

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label06;

     label17:
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r29);

        return i17;
    }

    private java.lang.String getBulletPrefix(org.apache.poi.xssf.usermodel.ListAutoNumber, int)
    {
        org.apache.poi.xssf.usermodel.ListAutoNumber r1, $r7, $r9, $r12, $r16, $r18;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r3;
        int[] $r2;
        int $i0, $i1, i2;
        java.lang.String $r4, $r5, $r6, $r8, $r10, $r11, $r13, $r14, $r15, $r17, $r19, $r20, $r21;
        java.lang.StringBuilder $r0;

        r3 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.ListAutoNumber;

        i2 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape$1: int[] $SwitchMap$org$apache$poi$xssf$usermodel$ListAutoNumber>;

        $i0 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.ListAutoNumber: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label07;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label11;
            case 13: goto label13;
            case 14: goto label13;
            case 15: goto label15;
            case 16: goto label16;
            default: goto label17;
        };

     label01:
        $r18 = <org.apache.poi.xssf.usermodel.ListAutoNumber: org.apache.poi.xssf.usermodel.ListAutoNumber ALPHA_LC_PARENT_BOTH>;

        if r1 != $r18 goto label02;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label02:
        $r19 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToAlpha(int)>(i2);

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label18;

     label03:
        $r16 = <org.apache.poi.xssf.usermodel.ListAutoNumber: org.apache.poi.xssf.usermodel.ListAutoNumber ALPHA_UC_PARENT_BOTH>;

        if r1 != $r16 goto label04;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label04:
        $r17 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToAlpha(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label18;

     label05:
        $r14 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToAlpha(int)>(i2);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label18;

     label06:
        $r13 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToAlpha(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label18;

     label07:
        $r12 = <org.apache.poi.xssf.usermodel.ListAutoNumber: org.apache.poi.xssf.usermodel.ListAutoNumber ARABIC_PARENT_BOTH>;

        if r1 != $r12 goto label08;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label18;

     label09:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label18;

     label10:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        goto label18;

     label11:
        $r9 = <org.apache.poi.xssf.usermodel.ListAutoNumber: org.apache.poi.xssf.usermodel.ListAutoNumber ROMAN_LC_PARENT_BOTH>;

        if r1 != $r9 goto label12;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label12:
        $r10 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToRoman(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label18;

     label13:
        $r7 = <org.apache.poi.xssf.usermodel.ListAutoNumber: org.apache.poi.xssf.usermodel.ListAutoNumber ROMAN_UC_PARENT_BOTH>;

        if r1 != $r7 goto label14;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label14:
        $r8 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToRoman(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        goto label18;

     label15:
        $r5 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToRoman(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label18;

     label16:
        $r4 = specialinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String valueToRoman(int)>(i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label18;

     label17:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8226);

     label18:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    private java.lang.String valueToAlpha(int)
    {
        char $c3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r3;
        int $i0, i1, $i2, $i4, i5;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String r4;

        r3 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        i5 := @parameter0: int;

        r4 = "";

     label1:
        if i5 <= 0 goto label2;

        $i0 = i5 - 1;

        i1 = $i0 % 26;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i2 = 65 + i1;

        $c3 = (char) $i2;

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = i5 - i1;

        i5 = $i4 / 26;

        goto label1;

     label2:
        return r4;
    }

    private java.lang.String valueToRoman(int)
    {
        java.lang.String[] $r2, $r4;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r7;
        int[] $r3, $r6;
        int $i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r5;

        r7 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        i3 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        if i3 <= 0 goto label4;

        $r2 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String[] _romanChars>;

        $i0 = lengthof $r2;

        if i4 >= $i0 goto label4;

     label2:
        $r3 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: int[] _romanAlphaValues>;

        $i1 = $r3[i4];

        if $i1 > i3 goto label3;

        $r4 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String[] _romanChars>;

        $r5 = $r4[i4];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape: int[] _romanAlphaValues>;

        $i2 = $r6[i4];

        i3 = i3 - $i2;

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void clearText()
    {
        java.util.List $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r2;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: void setPArray(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph[])>(null);

        return;
    }

    public void setText(java.lang.String)
    {
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r1;
        java.lang.String r3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.XSSFTextRun $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r3 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: void clearText()>();

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFTextParagraph addNewTextParagraph()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: org.apache.poi.xssf.usermodel.XSSFTextRun addNewTextRun()>();

        virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFTextRun: void setText(java.lang.String)>(r3);

        return;
    }

    public void setText(org.apache.poi.xssf.usermodel.XSSFRichTextString)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r22, $r25;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r21, $r24;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r9, $r13, $r17;
        org.apache.poi.xssf.model.StylesTable $r6;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook r4;
        org.apache.poi.POIXMLDocumentPart $r2, $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r8, $r18;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r5;
        int $i0, $i1, i2;
        java.lang.String $r23, $r26;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r20, r27;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r19;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph[] $r11;
        java.util.List $r14;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r10, $r15;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r7, $r16;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r5 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFDrawing getDrawing()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFDrawing: org.apache.poi.POIXMLDocumentPart getParent()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.POIXMLDocumentPart: org.apache.poi.POIXMLDocumentPart getParent()>();

        r4 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) $r3;

        $r6 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.StylesTable getStylesSource()>();

        virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setStylesTableReference(org.apache.poi.xssf.model.StylesTable)>($r6);

        $r7 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph newInstance()>();

        $i0 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: int numFormattingRuns()>();

        if $i0 != 0 goto label1;

        $r24 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun addNewR()>();

        $r25 = interfaceinvoke $r24.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSz(int)>(1100);

        $r26 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        interfaceinvoke $r24.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>($r26);

        goto label4;

     label1:
        i2 = 0;

     label2:
        $r8 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $i1 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i2 >= $i1 goto label4;

        $r18 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $r19 = interfaceinvoke $r18.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i2);

        $r20 = interfaceinvoke $r19.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        r27 = $r20;

        if $r20 != null goto label3;

        r27 = interfaceinvoke $r19.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt addNewRPr()>();

     label3:
        $r21 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun addNewR()>();

        $r22 = interfaceinvoke $r21.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        interfaceinvoke $r22.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFSimpleShape: void applyAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt,org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>(r27, $r22);

        $r23 = interfaceinvoke $r19.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        interfaceinvoke $r21.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>($r23);

        i2 = i2 + 1;

        goto label2;

     label4:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: void clearText()>();

        $r9 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r11 = newarray (org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph)[1];

        $r11[0] = $r7;

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: void setPArray(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph[])>($r11);

        $r14 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        $r12 = new org.apache.poi.xssf.usermodel.XSSFTextParagraph;

        $r13 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r15 = interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r16 = interfaceinvoke $r15.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph getPArray(int)>(0);

        $r17 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        specialinvoke $r12.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph,org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape)>($r16, $r17);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;
    }

    public java.util.List getTextParagraphs()
    {
        java.util.List $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFTextParagraph addNewTextParagraph()
    {
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r4;
        java.util.List $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1, $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph addNewP()>();

        $r4 = new org.apache.poi.xssf.usermodel.XSSFTextParagraph;

        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        specialinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph,org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape)>($r3, $r5);

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r4);

        return $r4;
    }

    public org.apache.poi.xssf.usermodel.XSSFTextParagraph addNewTextParagraph(java.lang.String)
    {
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r1;
        java.lang.String r3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.XSSFTextRun $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFTextParagraph addNewTextParagraph()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: org.apache.poi.xssf.usermodel.XSSFTextRun addNewTextRun()>();

        virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFTextRun: void setText(java.lang.String)>(r3);

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFTextParagraph addNewTextParagraph(org.apache.poi.xssf.usermodel.XSSFRichTextString)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r13, $r16;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r12, $r15;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1, $r7;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r5, $r9;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r4;
        int $i0, $i1, i2;
        java.lang.String $r14, $r17;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r11, r18;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r10;
        org.apache.poi.xssf.usermodel.XSSFTextParagraph $r6;
        java.util.List $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r4 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph addNewP()>();

        $i0 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFRichTextString: int numFormattingRuns()>();

        if $i0 != 0 goto label1;

        $r15 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun addNewR()>();

        $r16 = interfaceinvoke $r15.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        interfaceinvoke $r16.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        interfaceinvoke $r16.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSz(int)>(1100);

        $r17 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        interfaceinvoke $r15.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>($r17);

        goto label4;

     label1:
        i2 = 0;

     label2:
        $r5 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $i1 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i2 >= $i1 goto label4;

        $r9 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i2);

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        r18 = $r11;

        if $r11 != null goto label3;

        r18 = interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt addNewRPr()>();

     label3:
        $r12 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun addNewR()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFSimpleShape: void applyAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt,org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>(r18, $r13);

        $r14 = interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>($r14);

        i2 = i2 + 1;

        goto label2;

     label4:
        $r6 = new org.apache.poi.xssf.usermodel.XSSFTextParagraph;

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        specialinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFTextParagraph: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph,org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape)>($r3, $r7);

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.util.List _paragraphs>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r6;
    }

    public void setTextHorizontalOverflow(org.apache.poi.xssf.usermodel.TextHorizontalOverflow)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.XSSFAnchor $r4;
        org.apache.poi.xssf.usermodel.TextHorizontalOverflow r5;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r5 := @parameter0: org.apache.poi.xssf.usermodel.TextHorizontalOverflow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFAnchor anchor>;

        if $r4 != null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetHorzOverflow()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetHorzOverflow()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.TextHorizontalOverflow: int ordinal()>();

        $i1 = $i0 + 1;

        $r6 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum forInt(int)>($i1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setHorzOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextHorzOverflowType$Enum)>($r6);

     label2:
        return;
    }

    public org.apache.poi.xssf.usermodel.TextHorizontalOverflow getTextHorizontalOverflow()
    {
        org.apache.poi.xssf.usermodel.TextHorizontalOverflow[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.TextHorizontalOverflow $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetHorzOverflow()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.poi.xssf.usermodel.TextHorizontalOverflow: org.apache.poi.xssf.usermodel.TextHorizontalOverflow[] values()>();

        $r6 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum getVertOverflow()>();

        $i0 = virtualinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r7 = $r5[$i1];

        return $r7;

     label1:
        $r4 = <org.apache.poi.xssf.usermodel.TextHorizontalOverflow: org.apache.poi.xssf.usermodel.TextHorizontalOverflow OVERFLOW>;

        return $r4;
    }

    public void setTextVerticalOverflow(org.apache.poi.xssf.usermodel.TextVerticalOverflow)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.XSSFAnchor $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum $r6;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.TextVerticalOverflow r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r5 := @parameter0: org.apache.poi.xssf.usermodel.TextVerticalOverflow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.apache.poi.xssf.usermodel.XSSFAnchor anchor>;

        if $r4 != null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetVertOverflow()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetVertOverflow()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.TextVerticalOverflow: int ordinal()>();

        $i1 = $i0 + 1;

        $r6 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum forInt(int)>($i1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setVertOverflow(org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum)>($r6);

     label2:
        return;
    }

    public org.apache.poi.xssf.usermodel.TextVerticalOverflow getTextVerticalOverflow()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.xssf.usermodel.TextVerticalOverflow[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum $r6;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.TextVerticalOverflow $r4, $r7;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetVertOverflow()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.poi.xssf.usermodel.TextVerticalOverflow: org.apache.poi.xssf.usermodel.TextVerticalOverflow[] values()>();

        $r6 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum getVertOverflow()>();

        $i0 = virtualinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.STTextVertOverflowType$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r7 = $r5[$i1];

        return $r7;

     label1:
        $r4 = <org.apache.poi.xssf.usermodel.TextVerticalOverflow: org.apache.poi.xssf.usermodel.TextVerticalOverflow OVERFLOW>;

        return $r4;
    }

    public void setVerticalAlignment(org.apache.poi.ss.usermodel.VerticalAlignment)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.apache.poi.ss.usermodel.VerticalAlignment r4;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum $r5;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r4 := @parameter0: org.apache.poi.ss.usermodel.VerticalAlignment;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        if r4 != null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetAnchor()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetAnchor()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r4.<org.apache.poi.ss.usermodel.VerticalAlignment: int ordinal()>();

        $i1 = $i0 + 1;

        $r5 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum forInt(int)>($i1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setAnchor(org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum)>($r5);

     label2:
        return;
    }

    public org.apache.poi.ss.usermodel.VerticalAlignment getVerticalAlignment()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.apache.poi.ss.usermodel.VerticalAlignment $r4, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum $r6;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.apache.poi.ss.usermodel.VerticalAlignment[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetAnchor()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.apache.poi.ss.usermodel.VerticalAlignment: org.apache.poi.ss.usermodel.VerticalAlignment[] values()>();

        $r6 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum getAnchor()>();

        $i0 = virtualinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r7 = $r5[$i1];

        return $r7;

     label1:
        $r4 = <org.apache.poi.ss.usermodel.VerticalAlignment: org.apache.poi.ss.usermodel.VerticalAlignment TOP>;

        return $r4;
    }

    public void setTextDirection(org.apache.poi.xssf.usermodel.TextDirection)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.TextDirection r4;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r4 := @parameter0: org.apache.poi.xssf.usermodel.TextDirection;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        if r4 != null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetVert()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetVert()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.TextDirection: int ordinal()>();

        $i1 = $i0 + 1;

        $r5 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum forInt(int)>($i1);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setVert(org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum)>($r5);

     label2:
        return;
    }

    public org.apache.poi.xssf.usermodel.TextDirection getTextDirection()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.TextDirection $r4, $r7;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum $r5;
        org.apache.poi.xssf.usermodel.TextDirection[] $r6;
        int $i0, $i1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum getVert()>();

        if $r5 == null goto label1;

        $r6 = staticinvoke <org.apache.poi.xssf.usermodel.TextDirection: org.apache.poi.xssf.usermodel.TextDirection[] values()>();

        $i0 = virtualinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.STTextVerticalType$Enum: int intValue()>();

        $i1 = $i0 - 1;

        $r7 = $r6[$i1];

        return $r7;

     label1:
        $r4 = <org.apache.poi.xssf.usermodel.TextDirection: org.apache.poi.xssf.usermodel.TextDirection HORIZONTAL>;

        return $r4;
    }

    public double getBottomInset()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        long $l1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetBIns()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: int getBIns()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

        return $d0;

     label1:
        return 3.6;
    }

    public double getLeftInset()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        long $l1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetLIns()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: int getLIns()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

        return $d0;

     label1:
        return 3.6;
    }

    public double getRightInset()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        long $l1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetRIns()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: int getRIns()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

        return $d0;

     label1:
        return 3.6;
    }

    public double getTopInset()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        long $l1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i0;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetTIns()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: int getTIns()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

        return $d0;

     label1:
        return 3.6;
    }

    public void setBottomInset(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        byte $b0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetBIns()>();

        goto label2;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setBIns(int)>($i1);

     label2:
        return;
    }

    public void setLeftInset(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        byte $b0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetLIns()>();

        goto label2;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setLIns(int)>($i1);

     label2:
        return;
    }

    public void setRightInset(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        byte $b0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetRIns()>();

        goto label2;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setRIns(int)>($i1);

     label2:
        return;
    }

    public void setTopInset(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        byte $b0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label2;

        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetTIns()>();

        goto label2;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setTIns(int)>($i1);

     label2:
        return;
    }

    public boolean getWordWrap()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum $r4, $r5;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label3;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetWrap()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum getWrap()>();

        $r5 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType: org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum SQUARE>;

        if $r4 != $r5 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 1;
    }

    public void setWordWrap(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum $r4;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label3;

        if z0 == 0 goto label1;

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType: org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum SQUARE>;

        goto label2;

     label1:
        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType: org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum NONE>;

     label2:
        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void setWrap(org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType$Enum)>($r4);

     label3:
        return;
    }

    public void setTextAutofit(org.apache.poi.xssf.usermodel.TextAutofit)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.TextAutofit r4;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        int[] $r5;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        r4 := @parameter0: org.apache.poi.xssf.usermodel.TextAutofit;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label7;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetSpAutoFit()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetSpAutoFit()>();

     label1:
        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetNoAutofit()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetNoAutofit()>();

     label2:
        $z2 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetNormAutofit()>();

        if $z2 == 0 goto label3;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: void unsetNormAutofit()>();

     label3:
        $r5 = <org.apache.poi.xssf.usermodel.XSSFSimpleShape$1: int[] $SwitchMap$org$apache$poi$xssf$usermodel$TextAutofit>;

        $i0 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.TextAutofit: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label7;
        };

     label4:
        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextNoAutofit addNewNoAutofit()>();

        goto label7;

     label5:
        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit addNewNormAutofit()>();

        goto label7;

     label6:
        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextShapeAutofit addNewSpAutoFit()>();

     label7:
        return;
    }

    public org.apache.poi.xssf.usermodel.TextAutofit getTextAutofit()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.TextAutofit $r4, $r5, $r6, $r7;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getBodyPr()>();

        if $r3 == null goto label3;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetNoAutofit()>();

        if $z0 == 0 goto label1;

        $r7 = <org.apache.poi.xssf.usermodel.TextAutofit: org.apache.poi.xssf.usermodel.TextAutofit NONE>;

        return $r7;

     label1:
        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetNormAutofit()>();

        if $z1 == 0 goto label2;

        $r6 = <org.apache.poi.xssf.usermodel.TextAutofit: org.apache.poi.xssf.usermodel.TextAutofit NORMAL>;

        return $r6;

     label2:
        $z2 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: boolean isSetSpAutoFit()>();

        if $z2 == 0 goto label3;

        $r5 = <org.apache.poi.xssf.usermodel.TextAutofit: org.apache.poi.xssf.usermodel.TextAutofit SHAPE>;

        return $r5;

     label3:
        $r4 = <org.apache.poi.xssf.usermodel.TextAutofit: org.apache.poi.xssf.usermodel.TextAutofit NORMAL>;

        return $r4;
    }

    public int getShapeType()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D getPrstGeom()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum getPrst()>();

        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum: int intValue()>();

        return $i0;
    }

    public void setShapeType(int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r4;
        int i0;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r3;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D getPrstGeom()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum forInt(int)>(i0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r4);

        return;
    }

    protected org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape ctShape>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        return $r2;
    }

    private static void applyAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt, org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)
    {
        byte[] r6, $r10;
        java.lang.Integer $r4;
        org.apache.poi.hssf.util.HSSFColor r27;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum $r20, $r21, $r22;
        byte $b7, $b9, $b11;
        java.util.Map $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty $r14, $r23;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize $r11;
        short[] $r7, $r8, $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties r1;
        long $l4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty $r15;
        short $s6, $s8, $s10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r25;
        int $i0, $i1, $i2, $i3, $i5, $i12, $i13, i14;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r24;
        java.lang.String $r13;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt r0;
        double $d0, $d1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r26, $r28;
        java.lang.Object $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum $r16, $r17, $r18, $r19;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt;

        r1 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties;

        $i0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfBArray()>();

        if $i0 <= 0 goto label01;

        $r23 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getBArray(int)>(0);

        $z7 = interfaceinvoke $r23.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setB(boolean)>($z7);

     label01:
        $i1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfUArray()>();

        if $i1 <= 0 goto label04;

        $r15 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty getUArray(int)>(0);

        $r16 = interfaceinvoke $r15.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum getVal()>();

        $r17 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum SINGLE>;

        if $r16 != $r17 goto label02;

        $r22 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum SNG>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setU(org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum)>($r22);

        goto label04;

     label02:
        $r18 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum DOUBLE>;

        if $r16 != $r18 goto label03;

        $r21 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum DBL>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setU(org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum)>($r21);

        goto label04;

     label03:
        $r19 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum NONE>;

        if $r16 != $r19 goto label04;

        $r20 = <org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType: org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum NONE>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setU(org.openxmlformats.schemas.drawingml.x2006.main.STTextUnderlineType$Enum)>($r20);

     label04:
        $i12 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfIArray()>();

        if $i12 <= 0 goto label05;

        $r14 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getIArray(int)>(0);

        $z6 = interfaceinvoke $r14.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setI(boolean)>($z6);

     label05:
        $i2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfRFontArray()>();

        if $i2 <= 0 goto label08;

        $z5 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetLatin()>();

        if $z5 == 0 goto label06;

        $r24 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getLatin()>();

        goto label07;

     label06:
        $r24 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont addNewLatin()>();

     label07:
        $r12 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName getRFontArray(int)>(0);

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: java.lang.String getVal()>();

        interfaceinvoke $r24.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setTypeface(java.lang.String)>($r13);

     label08:
        $i13 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfSzArray()>();

        if $i13 <= 0 goto label09;

        $r11 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize getSzArray(int)>(0);

        $d0 = interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize: double getVal()>();

        $d1 = $d0 * 100.0;

        i14 = (int) $d1;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setSz(int)>(i14);

     label09:
        $i3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfColorArray()>();

        if $i3 <= 0 goto label17;

        $z0 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSolidFill()>();

        if $z0 == 0 goto label10;

        $r25 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        goto label11;

     label10:
        $r25 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

     label11:
        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor getColorArray(int)>(0);

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetRgb()>();

        if $z1 == 0 goto label14;

        $z4 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z4 == 0 goto label12;

        $r26 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        goto label13;

     label12:
        $r26 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor addNewSrgbClr()>();

     label13:
        $r10 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: byte[] getRgb()>();

        interfaceinvoke $r26.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r10);

        goto label17;

     label14:
        $z2 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetIndexed()>();

        if $z2 == 0 goto label17;

        $r3 = staticinvoke <org.apache.poi.hssf.util.HSSFColor: java.util.Map getIndexHash()>();

        $l4 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: long getIndexed()>();

        $i5 = (int) $l4;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r27 = (org.apache.poi.hssf.util.HSSFColor) $r5;

        if r27 == null goto label17;

        r6 = newarray (byte)[3];

        $r7 = virtualinvoke r27.<org.apache.poi.hssf.util.HSSFColor: short[] getTriplet()>();

        $s6 = $r7[0];

        $b7 = (byte) $s6;

        r6[0] = $b7;

        $r8 = virtualinvoke r27.<org.apache.poi.hssf.util.HSSFColor: short[] getTriplet()>();

        $s8 = $r8[1];

        $b9 = (byte) $s8;

        r6[1] = $b9;

        $r9 = virtualinvoke r27.<org.apache.poi.hssf.util.HSSFColor: short[] getTriplet()>();

        $s10 = $r9[2];

        $b11 = (byte) $s10;

        r6[2] = $b11;

        $z3 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z3 == 0 goto label15;

        $r28 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        goto label16;

     label15:
        $r28 = interfaceinvoke $r25.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor addNewSrgbClr()>();

     label16:
        interfaceinvoke $r28.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>(r6);

     label17:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        int[] $r1;

        <org.apache.poi.xssf.usermodel.XSSFSimpleShape: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTShape prototype> = null;

        $r0 = newarray (java.lang.String)[13];

        $r0[0] = "M";

        $r0[1] = "CM";

        $r0[2] = "D";

        $r0[3] = "CD";

        $r0[4] = "C";

        $r0[5] = "XC";

        $r0[6] = "L";

        $r0[7] = "XL";

        $r0[8] = "X";

        $r0[9] = "IX";

        $r0[10] = "V";

        $r0[11] = "IV";

        $r0[12] = "I";

        <org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String[] _romanChars> = $r0;

        $r1 = newarray (int)[13];

        $r1[0] = 1000;

        $r1[1] = 900;

        $r1[2] = 500;

        $r1[3] = 400;

        $r1[4] = 100;

        $r1[5] = 90;

        $r1[6] = 50;

        $r1[7] = 40;

        $r1[8] = 10;

        $r1[9] = 9;

        $r1[10] = 5;

        $r1[11] = 4;

        $r1[12] = 1;

        <org.apache.poi.xssf.usermodel.XSSFSimpleShape: int[] _romanAlphaValues> = $r1;

        return;
    }
}
