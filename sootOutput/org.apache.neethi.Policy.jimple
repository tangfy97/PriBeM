public class org.apache.neethi.Policy extends org.apache.neethi.All
{
    private java.util.Map attributes;
    private java.lang.String namespace;
    private org.apache.neethi.PolicyRegistry registry;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        specialinvoke r0.<org.apache.neethi.All: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.neethi.Policy: java.util.Map attributes> = $r1;

        return;
    }

    public void <init>(org.apache.neethi.PolicyRegistry)
    {
        java.util.HashMap $r1;
        org.apache.neethi.PolicyRegistry r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r2 := @parameter0: org.apache.neethi.PolicyRegistry;

        specialinvoke r0.<org.apache.neethi.All: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.neethi.Policy: java.util.Map attributes> = $r1;

        r0.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry> = r2;

        return;
    }

    public void <init>(org.apache.neethi.PolicyRegistry, java.lang.String)
    {
        org.apache.neethi.PolicyRegistry r1;
        java.lang.String r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: org.apache.neethi.PolicyRegistry;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.neethi.Policy: void <init>(org.apache.neethi.PolicyRegistry)>(r1);

        r0.<org.apache.neethi.Policy: java.lang.String namespace> = r2;

        return;
    }

    public void <init>(org.apache.neethi.PolicyOperator)
    {
        java.util.HashMap $r2;
        org.apache.neethi.Policy r0;
        org.apache.neethi.PolicyOperator r1;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: org.apache.neethi.PolicyOperator;

        specialinvoke r0.<org.apache.neethi.All: void <init>(org.apache.neethi.PolicyOperator)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.neethi.Policy: java.util.Map attributes> = $r2;

        return;
    }

    public org.apache.neethi.PolicyRegistry getPolicyRegistry()
    {
        org.apache.neethi.PolicyRegistry $r1;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        $r1 = r0.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry>;

        return $r1;
    }

    public void setPolicyRegistry(org.apache.neethi.PolicyRegistry)
    {
        org.apache.neethi.PolicyRegistry r1;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: org.apache.neethi.PolicyRegistry;

        r0.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry> = r1;

        return;
    }

    public java.lang.String getNamespace()
    {
        java.lang.String $r1;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        $r1 = r0.<org.apache.neethi.Policy: java.lang.String namespace>;

        return $r1;
    }

    public org.apache.neethi.Policy normalize(boolean)
    {
        org.apache.neethi.PolicyRegistry $r1;
        org.apache.neethi.Policy r0, $r2;
        boolean z0;

        r0 := @this: org.apache.neethi.Policy;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry>;

        $r2 = virtualinvoke r0.<org.apache.neethi.Policy: org.apache.neethi.Policy normalize(org.apache.neethi.PolicyRegistry,boolean)>($r1, z0);

        return $r2;
    }

    public org.apache.neethi.Policy normalize(org.apache.neethi.PolicyRegistry, boolean)
    {
        org.apache.neethi.PolicyRegistry r1;
        org.apache.neethi.Policy r0, $r2;
        boolean z0;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: org.apache.neethi.PolicyRegistry;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <org.apache.neethi.Policy: org.apache.neethi.Policy normalize(org.apache.neethi.Policy,org.apache.neethi.PolicyRegistry,boolean)>(r0, r1, z0);

        return $r2;
    }

    public org.apache.neethi.Policy merge(org.apache.neethi.Policy)
    {
        org.apache.neethi.PolicyRegistry $r3;
        java.util.List $r4, $r6;
        java.lang.String $r2;
        org.apache.neethi.Policy $r0, r1, r5;

        r1 := @this: org.apache.neethi.Policy;

        r5 := @parameter0: org.apache.neethi.Policy;

        $r0 = new org.apache.neethi.Policy;

        $r3 = r1.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry>;

        $r2 = r1.<org.apache.neethi.Policy: java.lang.String namespace>;

        specialinvoke $r0.<org.apache.neethi.Policy: void <init>(org.apache.neethi.PolicyRegistry,java.lang.String)>($r3, $r2);

        $r4 = virtualinvoke r1.<org.apache.neethi.Policy: java.util.List getPolicyComponents()>();

        virtualinvoke $r0.<org.apache.neethi.Policy: void addPolicyComponents(java.util.List)>($r4);

        $r6 = virtualinvoke r5.<org.apache.neethi.Policy: java.util.List getPolicyComponents()>();

        virtualinvoke $r0.<org.apache.neethi.Policy: void addPolicyComponents(java.util.List)>($r6);

        return $r0;
    }

    public org.apache.neethi.Policy intersect(org.apache.neethi.Policy)
    {
        org.apache.neethi.Policy r0, r1, $r2;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: org.apache.neethi.Policy;

        $r2 = virtualinvoke r0.<org.apache.neethi.Policy: org.apache.neethi.Policy intersect(org.apache.neethi.Policy,boolean)>(r1, 1);

        return $r2;
    }

    public org.apache.neethi.Policy intersect(org.apache.neethi.Policy, boolean)
    {
        org.apache.neethi.util.PolicyIntersector $r0;
        org.apache.neethi.Policy r1, $r2, r3, $r4, $r5;
        boolean z0;

        r1 := @this: org.apache.neethi.Policy;

        r3 := @parameter0: org.apache.neethi.Policy;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.neethi.util.PolicyIntersector;

        specialinvoke $r0.<org.apache.neethi.util.PolicyIntersector: void <init>(boolean)>(z0);

        $r2 = virtualinvoke r1.<org.apache.neethi.Policy: org.apache.neethi.Policy normalize(boolean)>(1);

        $r4 = virtualinvoke r3.<org.apache.neethi.Policy: org.apache.neethi.Policy normalize(boolean)>(1);

        $r5 = virtualinvoke $r0.<org.apache.neethi.util.PolicyIntersector: org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy,boolean)>($r2, $r4, 1);

        return $r5;
    }

    public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        java.util.Map $r6;
        javax.xml.stream.XMLStreamWriter r2;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.util.Set $r7, $r9;
        java.util.List $r11;
        javax.xml.namespace.QName r19;
        java.util.HashMap $r5;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r3, $r4, $r16, $r20, $r21, $r22, $r23, $r25, $r27, $r28, $r29, $r30, $r32, r34, r35, $r37, r38, $r39, $r40, r41, r42;
        java.util.Map$Entry r36;
        java.util.Iterator $r8, $r10, $r12;
        org.apache.neethi.Policy r0;
        org.apache.neethi.PolicyComponent r43;
        java.lang.Object $r13, $r14, $r15, $r17, $r18, $r24, $r26, $r31, $r33;

        r0 := @this: org.apache.neethi.Policy;

        r2 := @parameter0: javax.xml.stream.XMLStreamWriter;

        r34 = r0.<org.apache.neethi.Policy: java.lang.String namespace>;

        $r1 = r0.<org.apache.neethi.Policy: java.lang.String namespace>;

        if $r1 != null goto label01;

        r34 = staticinvoke <org.apache.neethi.Constants: java.lang.String findPolicyNamespace(javax.xml.stream.XMLStreamWriter)>(r2);

     label01:
        $r3 = interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>(r34);

        r35 = $r3;

        if $r3 != null goto label02;

        r35 = "wsp";

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>("wsp", r34);

     label02:
        $r4 = interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>("http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd");

        if $r4 != null goto label03;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>("wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd");

     label03:
        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r35, "Policy", r34);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        z3 = 1;

        $r6 = r0.<org.apache.neethi.Policy: java.util.Map attributes>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label21;

        $r17 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r17;

        $r18 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        r19 = (javax.xml.namespace.QName) $r18;

        $r20 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r21 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r21 == null goto label05;

        $i2 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i2 != 0 goto label06;

     label05:
        $r37 = null;

        goto label07;

     label06:
        $r37 = $r21;

     label07:
        r38 = $r37;

        if $r37 == null goto label08;

        $r30 = "http://www.w3.org/2000/xmlns/";

        $z1 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z1 == 0 goto label08;

        $r31 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.lang.String) $r31;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r20, $r32);

        $r33 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = virtualinvoke r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z2 == 0 goto label20;

        z3 = 0;

        goto label20;

     label08:
        if r38 == null goto label19;

        $r23 = interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>(r38);

        if $r23 == null goto label09;

        $i1 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i1 != 0 goto label10;

     label09:
        $r39 = null;

        goto label11;

     label10:
        $r39 = $r23;

     label11:
        if $r39 != null goto label15;

        $r29 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        if $r29 == null goto label12;

        $i0 = virtualinvoke $r29.<java.lang.String: int length()>();

        if $i0 != 0 goto label13;

     label12:
        $r40 = null;

        goto label14;

     label13:
        $r40 = $r29;

     label14:
        r41 = $r40;

        goto label16;

     label15:
        r41 = $r39;

     label16:
        if r41 == null goto label17;

        $r26 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (java.lang.String) $r26;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r41, r38, $r20, $r27);

        $r28 = virtualinvoke r19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r41, $r28);

        goto label18;

     label17:
        $r24 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (java.lang.String) $r24;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>(r38, $r20, $r25);

     label18:
        goto label20;

     label19:
        $r22 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getAttribute(javax.xml.namespace.QName)>(r19);

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>($r20, $r22);

     label20:
        goto label04;

     label21:
        if z3 == 0 goto label22;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r35, r34);

     label22:
        $r9 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z5 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label24;

        $r14 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.lang.String) $r14;

        $r15 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42);

        $r16 = (java.lang.String) $r15;

        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r42, $r16);

        goto label23;

     label24:
        $r11 = virtualinvoke r0.<org.apache.neethi.Policy: java.util.List getPolicyComponents()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r43 = (org.apache.neethi.PolicyComponent) $r13;

        interfaceinvoke r43.<org.apache.neethi.PolicyComponent: void serialize(javax.xml.stream.XMLStreamWriter)>(r2);

        goto label25;

     label26:
        interfaceinvoke r2.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        return;
    }

    public short getType()
    {
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        return 1;
    }

    public java.util.Iterator getAlternatives()
    {
        org.apache.neethi.Policy$PolicyIterator $r0;
        org.apache.neethi.PolicyRegistry $r2;
        org.apache.neethi.Policy r1;

        r1 := @this: org.apache.neethi.Policy;

        $r0 = new org.apache.neethi.Policy$PolicyIterator;

        $r2 = r1.<org.apache.neethi.Policy: org.apache.neethi.PolicyRegistry registry>;

        specialinvoke $r0.<org.apache.neethi.Policy$PolicyIterator: void <init>(org.apache.neethi.Policy,org.apache.neethi.Policy,org.apache.neethi.PolicyRegistry)>(r1, r1, $r2);

        return $r0;
    }

    public java.util.Iterator getAlternatives(org.apache.neethi.PolicyRegistry)
    {
        org.apache.neethi.Policy$PolicyIterator $r0;
        org.apache.neethi.PolicyRegistry r2;
        org.apache.neethi.Policy r1;

        r1 := @this: org.apache.neethi.Policy;

        r2 := @parameter0: org.apache.neethi.PolicyRegistry;

        $r0 = new org.apache.neethi.Policy$PolicyIterator;

        specialinvoke $r0.<org.apache.neethi.Policy$PolicyIterator: void <init>(org.apache.neethi.Policy,org.apache.neethi.Policy,org.apache.neethi.PolicyRegistry)>(r1, r1, r2);

        return $r0;
    }

    public void addAttribute(javax.xml.namespace.QName, java.lang.String)
    {
        java.util.Map $r3;
        javax.xml.namespace.QName r1;
        java.lang.String r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.neethi.Policy: java.util.Map attributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getAttribute(javax.xml.namespace.QName)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        javax.xml.namespace.QName r1;
        java.lang.String $r4;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.neethi.Policy: java.util.Map attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.Map getAttributes()
    {
        org.apache.neethi.Policy r0;
        java.util.Map $r1;

        r0 := @this: org.apache.neethi.Policy;

        $r1 = r0.<org.apache.neethi.Policy: java.util.Map attributes>;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        javax.xml.namespace.QName $r1;
        java.lang.String r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "Name");

        virtualinvoke r0.<org.apache.neethi.Policy: void addAttribute(javax.xml.namespace.QName,java.lang.String)>($r1, r2);

        return;
    }

    public java.lang.String getName()
    {
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "Name");

        $r2 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getAttribute(javax.xml.namespace.QName)>($r1);

        return $r2;
    }

    public void setId(java.lang.String)
    {
        javax.xml.namespace.QName $r1;
        java.lang.String r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", "Id");

        virtualinvoke r0.<org.apache.neethi.Policy: void addAttribute(javax.xml.namespace.QName,java.lang.String)>($r1, r2);

        return;
    }

    public java.lang.String getId()
    {
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.apache.neethi.Policy r0;

        r0 := @this: org.apache.neethi.Policy;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", "Id");

        $r2 = virtualinvoke r0.<org.apache.neethi.Policy: java.lang.String getAttribute(javax.xml.namespace.QName)>($r1);

        return $r2;
    }
}
