public final class org.apache.lucene.analysis.position.PositionFilter extends org.apache.lucene.analysis.TokenFilter
{
    private final int positionIncrement;
    private boolean firstTokenPositioned;
    private org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.position.PositionFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.position.PositionFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.position.PositionFilter: void <init>(org.apache.lucene.analysis.TokenStream,int)>(r1, 0);

        return;
    }

    public void <init>(org.apache.lucene.analysis.TokenStream, int)
    {
        org.apache.lucene.analysis.position.PositionFilter r0;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r3;
        int i0;
        org.apache.lucene.util.Attribute $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.lucene.analysis.position.PositionFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        r0.<org.apache.lucene.analysis.position.PositionFilter: boolean firstTokenPositioned> = 0;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.position.PositionFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r2;

        r0.<org.apache.lucene.analysis.position.PositionFilter: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt> = $r3;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("positionIncrement may not be negative");

        throw $r4;

     label1:
        r0.<org.apache.lucene.analysis.position.PositionFilter: int positionIncrement> = i0;

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        org.apache.lucene.analysis.position.PositionFilter r0;
        org.apache.lucene.analysis.TokenStream $r1;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.position.PositionFilter;

        $r1 = r0.<org.apache.lucene.analysis.position.PositionFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label3;

        $z1 = r0.<org.apache.lucene.analysis.position.PositionFilter: boolean firstTokenPositioned>;

        if $z1 == 0 goto label1;

        $r2 = r0.<org.apache.lucene.analysis.position.PositionFilter: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncrAtt>;

        $i0 = r0.<org.apache.lucene.analysis.position.PositionFilter: int positionIncrement>;

        interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>($i0);

        goto label2;

     label1:
        r0.<org.apache.lucene.analysis.position.PositionFilter: boolean firstTokenPositioned> = 1;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.position.PositionFilter r0;

        r0 := @this: org.apache.lucene.analysis.position.PositionFilter;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void reset()>();

        r0.<org.apache.lucene.analysis.position.PositionFilter: boolean firstTokenPositioned> = 0;

        return;
    }
}
