public class org.apache.pdfbox.pdmodel.common.PDNumberTreeNode extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.COSObjectable
{
    private static final org.apache.commons.logging.Log LOG;
    private org.apache.pdfbox.cos.COSDictionary node;
    private java.lang.Class valueType;

    public void <init>(java.lang.Class)
    {
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r1;
        java.lang.Class r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType> = null;

        $r1 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> = $r1;

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType> = r2;

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary, java.lang.Class)
    {
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary r1;
        java.lang.Class r2;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType> = null;

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node> = r1;

        r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType> = r2;

        return;
    }

    public org.apache.pdfbox.cos.COSBase getCOSObject()
    {
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        return $r1;
    }

    public org.apache.pdfbox.cos.COSDictionary getCOSDictionary()
    {
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        return $r1;
    }

    public java.util.List getKids()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0, $r9;
        org.apache.pdfbox.pdmodel.common.COSArrayList $r6, r10;
        java.util.ArrayList $r5;
        org.apache.pdfbox.cos.COSDictionary $r2, $r8;
        org.apache.pdfbox.cos.COSBase $r3, $r7;
        int $i0, i1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r10 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label2;

        $r7 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        $r8 = (org.apache.pdfbox.cos.COSDictionary) $r7;

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode createChildNode(org.apache.pdfbox.cos.COSDictionary)>($r8);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.pdfbox.pdmodel.common.COSArrayList;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>(java.util.List,org.apache.pdfbox.cos.COSArray)>($r5, r4);

        r10 = $r6;

     label3:
        return r10;
    }

    public void setKids(java.util.List)
    {
        org.apache.pdfbox.cos.COSArray $r15;
        java.lang.Integer $r11, $r12;
        int $i0, $i1, $i2;
        org.apache.pdfbox.cos.COSName $r2, $r5, $r14;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r1, r8, r10;
        org.apache.pdfbox.cos.COSDictionary $r3, $r6, $r13;
        java.util.List r0;
        org.apache.pdfbox.cos.COSBase $r4;
        java.lang.Object $r7, $r9;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r7 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r7;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r9 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        r10 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r9;

        $r11 = virtualinvoke r8.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getLowerLimit()>();

        specialinvoke r1.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>($r11);

        $r12 = virtualinvoke r10.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getUpperLimit()>();

        specialinvoke r1.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>($r12);

        goto label2;

     label1:
        $r3 = r1.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        if $r4 != null goto label2;

        $r6 = r1.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r5, null);

     label2:
        $r13 = r1.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r15 = staticinvoke <org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray converterToCOSArray(java.util.List)>(r0);

        virtualinvoke $r13.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r15);

        return;
    }

    public java.lang.Object getValue(java.lang.Integer) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0, r5;
        java.lang.Integer $r6, r7, $r8;
        java.util.List $r2;
        java.util.Map $r1;
        int $i0, $i1, $i2, i3;
        org.apache.commons.logging.Log $r3;
        java.lang.Object $r4, r9;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r7 := @parameter0: java.lang.Integer;

        r9 = null;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.Map getNumbers()>();

        if $r1 == null goto label1;

        r9 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        goto label6;

     label1:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.util.List getKids()>();

        if $r2 == null goto label5;

        i3 = 0;

     label2:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        if r9 != null goto label4;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (org.apache.pdfbox.pdmodel.common.PDNumberTreeNode) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getLowerLimit()>();

        $i1 = virtualinvoke $r6.<java.lang.Integer: int compareTo(java.lang.Integer)>(r7);

        if $i1 > 0 goto label3;

        $r8 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Integer getUpperLimit()>();

        $i2 = virtualinvoke $r8.<java.lang.Integer: int compareTo(java.lang.Integer)>(r7);

        if $i2 < 0 goto label3;

        r9 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Object getValue(java.lang.Integer)>(r7);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        goto label6;

     label5:
        $r3 = <org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("NumberTreeNode does not have \"nums\" nor \"kids\" objects.");

     label6:
        return r9;
    }

    public java.util.Map getNumbers() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.COSObjectable $r9;
        java.util.HashMap $r5;
        java.lang.Integer $r10;
        org.apache.pdfbox.cos.COSInteger r7;
        java.util.Map r11;
        int $i0, $i1, $i2, i3;
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r3, $r6, $r8;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r11 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label3;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i3 >= $i0 goto label2;

        $r6 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i3);

        r7 = (org.apache.pdfbox.cos.COSInteger) $r6;

        $i1 = i3 + 1;

        $r8 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i1);

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase)>($r8);

        $i2 = virtualinvoke r7.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

        i3 = i3 + 2;

        goto label1;

     label2:
        r11 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

     label3:
        return r11;
    }

    protected org.apache.pdfbox.pdmodel.common.COSObjectable convertCOSToPD(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r6;
        org.apache.pdfbox.pdmodel.common.COSObjectable r15;
        java.lang.reflect.Constructor $r5;
        java.lang.String $r12, $r14;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        java.lang.Class[] $r1;
        java.io.IOException $r9;
        org.apache.pdfbox.cos.COSBase r2;
        java.lang.Class $r3, $r4;
        java.lang.Object $r7;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r2 := @parameter0: org.apache.pdfbox.cos.COSBase;

     label1:
        $r3 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType>;

        $r1 = newarray (java.lang.Class)[1];

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1[0] = $r4;

        $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        $r7 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        r15 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while trying to create value in number tree:");

        $r12 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label4:
        return r15;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected org.apache.pdfbox.pdmodel.common.PDNumberTreeNode createChildNode(org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode $r0, r2;
        java.lang.Class $r3;

        r2 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        $r0 = new org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        $r3 = r2.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: java.lang.Class valueType>;

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void <init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)>(r1, $r3);

        return $r0;
    }

    public void setNumbers(java.util.Map)
    {
        org.apache.pdfbox.cos.COSArray $r3;
        org.apache.pdfbox.pdmodel.common.COSObjectable r12;
        long $l5;
        java.lang.Integer r17, r18, r19;
        java.util.ArrayList $r1;
        org.apache.pdfbox.cos.COSInteger $r10;
        java.util.Map r0;
        int $i0, $i1, $i2, $i3, $i4, i6;
        org.apache.pdfbox.cos.COSName $r5, $r13, $r15;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r4;
        java.util.Set $r2;
        org.apache.pdfbox.cos.COSDictionary $r6, $r14, $r16;
        java.lang.Object $r7, $r8, $r9, $r11;

        r4 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r14 = r4.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        virtualinvoke $r14.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r13, null);

        $r16 = r4.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r15, null);

        goto label5;

     label1:
        $r1 = new java.util.ArrayList;

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r3 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r3.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        i6 = 0;

     label2:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i6 >= $i0 goto label3;

        $r9 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i6);

        r17 = (java.lang.Integer) $r9;

        $i4 = virtualinvoke r17.<java.lang.Integer: int intValue()>();

        $l5 = (long) $i4;

        $r10 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l5);

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r10);

        $r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r12 = (org.apache.pdfbox.pdmodel.common.COSObjectable) $r11;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.pdmodel.common.COSObjectable)>(r12);

        i6 = i6 + 1;

        goto label2;

     label3:
        r18 = null;

        r19 = null;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

        $r7 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r18 = (java.lang.Integer) $r7;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        r19 = (java.lang.Integer) $r8;

     label4:
        specialinvoke r4.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setUpperLimit(java.lang.Integer)>(r19);

        specialinvoke r4.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void setLowerLimit(java.lang.Integer)>(r18);

        $r6 = r4.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        virtualinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r5, $r3);

     label5:
        return;
    }

    public java.lang.Integer getUpperLimit()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        java.lang.Integer r6;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r3, $r5;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r6 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0);

        if $r5 == null goto label1;

        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(1);

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label1:
        return r6;
    }

    private void setUpperLimit(java.lang.Integer)
    {
        org.apache.pdfbox.cos.COSName $r1, $r6;
        org.apache.pdfbox.cos.COSArray $r5, r8;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        java.lang.Integer r4;
        org.apache.pdfbox.cos.COSDictionary $r2, $r7;
        org.apache.pdfbox.cos.COSBase $r3;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r4 := @parameter0: java.lang.Integer;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r8 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r8 != null goto label1;

        $r5 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r8 = $r5;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5);

     label1:
        if r4 == null goto label2;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(1, $i0);

        goto label3;

     label2:
        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(1, null);

     label3:
        return;
    }

    public java.lang.Integer getLowerLimit()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSArray r4;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        java.lang.Integer r6;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r3, $r5;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r6 = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r4 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(0);

        if $r5 == null goto label1;

        $i0 = virtualinvoke r4.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label1:
        return r6;
    }

    private void setLowerLimit(java.lang.Integer)
    {
        org.apache.pdfbox.cos.COSName $r1, $r6;
        org.apache.pdfbox.cos.COSArray $r5, r8;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode r0;
        java.lang.Integer r4;
        org.apache.pdfbox.cos.COSDictionary $r2, $r7;
        org.apache.pdfbox.cos.COSBase $r3;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        r4 := @parameter0: java.lang.Integer;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r8 = (org.apache.pdfbox.cos.COSArray) $r3;

        if r8 != null goto label1;

        $r5 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r5.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r8 = $r5;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(null);

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary node>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LIMITS>;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, $r5);

     label1:
        if r4 == null goto label2;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void setInt(int,int)>(0, $i0);

        goto label3;

     label2:
        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void set(int,org.apache.pdfbox.cos.COSBase)>(0, null);

     label3:
        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/common/PDNumberTreeNode;");

        <org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
