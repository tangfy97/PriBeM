public class com.googlecode.mp4parser.MemoryDataSourceImpl extends java.lang.Object implements com.googlecode.mp4parser.DataSource
{
    java.nio.ByteBuffer data;

    public void <init>(byte[])
    {
        byte[] r1;
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data> = $r2;

        return;
    }

    public void <init>(java.nio.ByteBuffer)
    {
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data> = r1;

        return;
    }

    public int read(java.nio.ByteBuffer) throws java.io.IOException
    {
        byte[] r3;
        java.nio.ByteBuffer r0, $r2, $r4;
        com.googlecode.mp4parser.MemoryDataSourceImpl r1;
        int $i0, $i1, $i2, $i3;

        r1 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r2 = r1.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i1 = virtualinvoke $r2.<java.nio.ByteBuffer: int remaining()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r3 = newarray (byte)[$i2];

        $r4 = r1.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r3);

        $i3 = lengthof r3;

        return $i3;
    }

    public long size() throws java.io.IOException
    {
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        int $i0;
        long $l1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        $r1 = r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public long position() throws java.io.IOException
    {
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        int $i0;
        long $l1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        $r1 = r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public void position(long) throws java.io.IOException
    {
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        int $i1;
        long l0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        return;
    }

    public long transferTo(long, long, java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        long l0, l2, $l5;
        java.nio.ByteBuffer $r2, $r4, $r5, $r7;
        com.googlecode.mp4parser.MemoryDataSourceImpl r1;
        java.nio.Buffer $r3, $r6;
        int $i1, $i3, $i4;
        java.nio.channels.WritableByteChannel r0;

        r1 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        r0 := @parameter2: java.nio.channels.WritableByteChannel;

        $r2 = r1.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        $r4 = (java.nio.ByteBuffer) $r3;

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $i3 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l2);

        $r6 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r7 = (java.nio.ByteBuffer) $r6;

        $i4 = interfaceinvoke r0.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r7);

        $l5 = (long) $i4;

        return $l5;
    }

    public java.nio.ByteBuffer map(long, long) throws java.io.IOException
    {
        long l0, l2;
        java.nio.ByteBuffer $r1, $r3, $r4, $r6;
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;
        java.nio.Buffer $r2, $r5;
        int $i1, $i3;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        $r1 = r0.<com.googlecode.mp4parser.MemoryDataSourceImpl: java.nio.ByteBuffer data>;

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l0);

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        $r3 = (java.nio.ByteBuffer) $r2;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $i3 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l2);

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r6 = (java.nio.ByteBuffer) $r5;

        return $r6;
    }

    public void close() throws java.io.IOException
    {
        com.googlecode.mp4parser.MemoryDataSourceImpl r0;

        r0 := @this: com.googlecode.mp4parser.MemoryDataSourceImpl;

        return;
    }
}
