public class org.eclipse.jdt.internal.compiler.classfmt.MethodInfo extends org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct implements org.eclipse.jdt.internal.compiler.env.IBinaryMethod, java.lang.Comparable
{
    private static final char[][] noException;
    private static final char[][] noArgumentNames;
    protected int accessFlags;
    protected int attributeBytes;
    protected char[] descriptor;
    protected char[][] exceptionNames;
    protected char[] name;
    protected char[] signature;
    protected int signatureUtf8Offset;
    protected long tagBits;
    protected char[][] argumentNames;
    protected int argumentNamesIndex;

    static void <clinit>()
    {
        char[][] $r0, $r1;

        $r0 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

        <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noException> = $r0;

        $r1 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

        <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noArgumentNames> = $r1;

        return;
    }

    public static org.eclipse.jdt.internal.compiler.classfmt.MethodInfo createMethod(byte[], int[], int)
    {
        byte[] r1;
        long $l27, $l29, $l30, $l31;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations $r27;
        char[] $r4, $r5, $r7, $r8, $r9, $r10;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo $r26;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r11, $r12, $r13, $r14, r15, $r16, $r17, $r18, r21, r23, r25;
        int[] r2, $r3, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][] r22, r24;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, $i26, $i28, $i32;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations $r28;
        char $c10;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $r26 = new org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        specialinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void <init>(byte[],int[],int)>(r1, r2, i0);

        $i1 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(6);

        i21 = 8;

        r21 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        r22 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][]) null;

        i22 = 0;

        goto label18;

     label01:
        $r3 = $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i2 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i21);

        $i4 = $r3[$i2];

        $i3 = $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i5 = $i4 - $i3;

        $i7 = i5 + 3;

        $i6 = i5 + 1;

        $i8 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i6);

        $r4 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i7, $i8);

        $i9 = lengthof $r4;

        if $i9 <= 0 goto label17;

        $c10 = $r4[0];

        $i32 = (int) $c10;

        tableswitch($i32)
        {
            case 82: goto label03;
            case 83: goto label02;
            default: goto label17;
        };

     label02:
        $r5 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SignatureName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r5, $r4);

        if $z0 == 0 goto label17;

        $r6 = $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i11 = i21 + 6;

        $i12 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i11);

        $i14 = $r6[$i12];

        $i13 = $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        $i15 = $i14 - $i13;

        $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int signatureUtf8Offset> = $i15;

        goto label17;

     label03:
        r23 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[]) null;

        r24 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][]) null;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleAnnotationsName>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r7);

        if $z1 == 0 goto label04;

        r23 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeMethodAnnotations(int,boolean,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>(i21, 1, $r26);

        goto label07;

     label04:
        $r8 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleAnnotationsName>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r8);

        if $z2 == 0 goto label05;

        r23 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeMethodAnnotations(int,boolean,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>(i21, 0, $r26);

        goto label07;

     label05:
        $r9 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeVisibleParameterAnnotationsName>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r9);

        if $z3 == 0 goto label06;

        r24 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][] decodeParamAnnotations(int,boolean,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>(i21, 1, $r26);

        goto label07;

     label06:
        $r10 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] RuntimeInvisibleParameterAnnotationsName>;

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, $r10);

        if $z4 == 0 goto label07;

        r24 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][] decodeParamAnnotations(int,boolean,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>(i21, 0, $r26);

     label07:
        if r23 == null goto label09;

        if r21 != null goto label08;

        r21 = r23;

        goto label17;

     label08:
        i23 = lengthof r21;

        $i18 = lengthof r23;

        $i19 = i23 + $i18;

        r25 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i19];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r21, 0, r25, 0, i23);

        $i20 = lengthof r23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r23, 0, r25, i23, $i20);

        r21 = r25;

        goto label17;

     label09:
        if r24 == null goto label17;

        i24 = lengthof r24;

        if r22 != null goto label10;

        r22 = r24;

        goto label17;

     label10:
        i25 = 0;

        goto label16;

     label11:
        $r11 = r24[i25];

        if $r11 != null goto label12;

        $i26 = 0;

        goto label13;

     label12:
        $r12 = r24[i25];

        $i26 = lengthof $r12;

     label13:
        if $i26 <= 0 goto label15;

        $r13 = r22[i25];

        if $r13 != null goto label14;

        $r18 = r24[i25];

        r22[i25] = $r18;

        goto label15;

     label14:
        $r14 = r22[i25];

        i16 = lengthof $r14;

        $i17 = i16 + $i26;

        r15 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i17];

        $r16 = r22[i25];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, r15, 0, i16);

        $r17 = r24[i25];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, r15, i16, $i26);

        r22[i25] = r15;

     label15:
        i25 = i25 + 1;

     label16:
        if i25 < i24 goto label11;

     label17:
        $l27 = (long) i21;

        $i28 = i21 + 2;

        $l29 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>($i28);

        $l30 = 6L + $l29;

        $l31 = $l27 + $l30;

        i21 = (int) $l31;

        i22 = i22 + 1;

     label18:
        if i22 < $i1 goto label01;

        $r26.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int attributeBytes> = i21;

        if r22 == null goto label19;

        $r27 = new org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations;

        specialinvoke $r27.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations: void <init>(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo,org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[],org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][])>($r26, r21, r22);

        return $r27;

     label19:
        if r21 == null goto label20;

        $r28 = new org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations;

        specialinvoke $r28.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations: void <init>(org.eclipse.jdt.internal.compiler.classfmt.MethodInfo,org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[])>($r26, r21);

        return $r28;

     label20:
        return $r26;
    }

    static org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int, boolean, int, org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)
    {
        byte[] $r4;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] r0;
        int[] $r3;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r2;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r1, $r5;
        boolean z0;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r0 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[i0];

        i5 = i1;

        i6 = 0;

        goto label2;

     label1:
        $r1 = new org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: byte[] reference>;

        $r3 = r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i2 = r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        $i3 = i5 + $i2;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void <init>(byte[],int[],int,boolean,boolean)>($r4, $r3, $i3, z0, 0);

        r0[i6] = $r1;

        $r5 = r0[i6];

        $i4 = $r5.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        i5 = i5 + $i4;

        i6 = i6 + 1;

     label2:
        if i6 < i0 goto label1;

        return r0;
    }

    static org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeMethodAnnotations(int, boolean, org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1, r5, r6;
        long $l4, $l5, l11;
        byte $b6;
        int i0, $i1, $i2, $i3, $i7, $i8, i9, i10, i12, i13;
        boolean z0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r2, $r3, $r4;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i1 = i0 + 6;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i1);

        if $i2 <= 0 goto label9;

        $i3 = i0 + 8;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int,boolean,int,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>($i3, z0, $i2, r0);

        r5 = $r1;

        if z0 == 0 goto label8;

        i9 = 0;

        i10 = 0;

        goto label3;

     label1:
        $r2 = $r1[i10];

        l11 = $r2.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long tagBits>;

        $l5 = $l4 | l11;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long tagBits> = $l5;

        $b6 = l11 cmp 0L;

        if $b6 == 0 goto label2;

        $r1[i10] = null;

        i9 = i9 + 1;

     label2:
        i10 = i10 + 1;

     label3:
        if i10 < $i2 goto label1;

        if i9 == 0 goto label8;

        if i9 != $i2 goto label4;

        return null;

     label4:
        $i7 = $i2 - i9;

        r6 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo)[$i7];

        i12 = 0;

        i13 = 0;

        goto label7;

     label5:
        $r3 = $r1[i13];

        if $r3 == null goto label6;

        $i8 = i12;

        i12 = i12 + 1;

        $r4 = $r1[i13];

        r6[$i8] = $r4;

     label6:
        i13 = i13 + 1;

     label7:
        if i13 < $i2 goto label5;

        r5 = r6;

     label8:
        return r5;

     label9:
        return null;
    }

    static org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][] decodeParamAnnotations(int, boolean, org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)
    {
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo $r2;
        boolean z0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][] r3;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r3 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[][]) null;

        $i1 = i0 + 6;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u1At(int)>($i1);

        if $i2 <= 0 goto label7;

        i6 = i0 + 7;

        i7 = 0;

        goto label6;

     label1:
        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i6);

        i6 = i6 + 2;

        if $i3 <= 0 goto label5;

        if r3 != null goto label2;

        r3 = newarray (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[])[$i2];

     label2:
        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] decodeAnnotations(int,boolean,int,org.eclipse.jdt.internal.compiler.classfmt.MethodInfo)>(i6, z0, $i3, r0);

        r3[i7] = $r1;

        i8 = 0;

        goto label4;

     label3:
        $r2 = $r1[i8];

        $i5 = $r2.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        i6 = i6 + $i5;

        i8 = i8 + 1;

     label4:
        $i4 = lengthof $r1;

        if i8 < $i4 goto label3;

     label5:
        i7 = i7 + 1;

     label6:
        if i7 < $i2 goto label1;

     label7:
        return r3;
    }

    protected void <init>(byte[], int[], int)
    {
        byte[] r1;
        int[] r2;
        int i0, $i2, $i4;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct: void <init>(byte[],int[],int)>(r1, r2, i0);

        $i2 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i2;

        $i4 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int signatureUtf8Offset> = $i4;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        int $i0, $i1;
        char[] $r4, $r6, $r8, $r10;
        java.lang.Object r0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r1, r3;
        java.lang.String $r2, $r5, $r7, $r9;

        r3 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.eclipse.jdt.internal.compiler.classfmt.MethodInfo) r0;

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r4);

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r6);

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r5);

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $r7 = new java.lang.String;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r8);

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        specialinvoke $r9.<java.lang.String: void <init>(char[])>($r10);

        $i1 = virtualinvoke $r7.<java.lang.String: int compareTo(java.lang.String)>($r9);

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        char[] $r3, $r4, $r5, $r6;
        java.lang.Object r0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r1, r2;
        boolean $z0, $z1, $z2;

        r2 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.eclipse.jdt.internal.compiler.classfmt.MethodInfo) r0;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r4);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r5, $r6);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        char[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $i0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>($r1);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>($r2);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getAnnotations()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        return null;
    }

    public char[][] getArgumentNames()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        char[][] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void readCodeAttribute()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        return $r2;
    }

    public java.lang.Object getDefaultValue()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        return null;
    }

    public char[][] getExceptionTypeNames()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        char[][] $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void readExceptionAttributes()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames>;

        return $r2;
    }

    public char[] getGenericSignature()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        char[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int signatureUtf8Offset>;

        $i7 = (int) -1;

        if $i0 == $i7 goto label2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] signature>;

        if $r1 != null goto label1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int signatureUtf8Offset>;

        $i4 = $i1 + 3;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int signatureUtf8Offset>;

        $i3 = $i2 + 1;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i3);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i4, $i5);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] signature> = $r3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] signature>;

        return $r2;

     label2:
        return null;
    }

    public char[] getMethodDescriptor()
    {
        int[] $r3;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        char[] $r1, $r2, $r4;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] descriptor>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(4);

        $i2 = $r3[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i3 = $i2 - $i1;

        $i5 = i3 + 3;

        $i4 = i3 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i4);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i5, $i6);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] descriptor> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] descriptor>;

        return $r2;
    }

    public int getModifiers()
    {
        int $i0, $i1, $i2, $i4;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label1;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void readModifierRelatedAttributes()>();

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        return $i1;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation[] getParameterAnnotations(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        i0 := @parameter0: int;

        return null;
    }

    public char[] getSelector()
    {
        int[] $r3;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        char[] $r1, $r2, $r4;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] name>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(2);

        $i2 = $r3[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i3 = $i2 - $i1;

        $i5 = i3 + 3;

        $i4 = i3 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i4);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i5, $i6);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] name> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] name>;

        return $r2;
    }

    public long getTagBits()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        long $l0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long tagBits>;

        return $l0;
    }

    protected void initialize()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int getModifiers()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] getExceptionTypeNames()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] getArgumentNames()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void reset()>();

        return;
    }

    public boolean isClinit()
    {
        int $i1, $i2;
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        char $c0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $c0 = $r1[0];

        $i2 = (int) $c0;

        if $i2 != 60 goto label1;

        $i1 = lengthof $r1;

        if $i1 != 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isConstructor()
    {
        int $i1, $i2;
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;
        char $c0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $c0 = $r1[0];

        $i2 = (int) $c0;

        if $i2 != 60 goto label1;

        $i1 = lengthof $r1;

        if $i1 != 6 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSynthetic()
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int getModifiers()>();

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void readExceptionAttributes()
    {
        char[][] $r4, $r7, $r9, $r10, $r11;
        int[] $r1, $r5, $r6;
        boolean $z0;
        long $l8, $l9, $l10, $l11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29;
        char[] $r2, $r3, $r8;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(6);

        i25 = 8;

        i26 = 0;

        goto label7;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i25);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i27 = $i3 - $i2;

        $i5 = i27 + 3;

        $i4 = i27 + 1;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i4);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i5, $i6);

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] ExceptionsName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label5;

        $i12 = i25 + 6;

        $i13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i12);

        i25 = i25 + 8;

        if $i13 != 0 goto label2;

        $r9 = <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noException>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames> = $r9;

        goto label6;

     label2:
        $r4 = newarray (char[])[$i13];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames> = $r4;

        i28 = 0;

        goto label4;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i25);

        $i16 = $r6[$i14];

        $i15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        $i17 = $i16 - $i15;

        $i18 = $i17 + 1;

        $i19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i18);

        $i21 = $r5[$i19];

        $i20 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i29 = $i21 - $i20;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames>;

        $i23 = i29 + 3;

        $i22 = i29 + 1;

        $i24 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i22);

        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i23, $i24);

        $r7[i28] = $r8;

        i25 = i25 + 2;

        i28 = i28 + 1;

     label4:
        if i28 < $i13 goto label3;

        goto label6;

     label5:
        $l8 = (long) i25;

        $i7 = i25 + 2;

        $l9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>($i7);

        $l10 = 6L + $l9;

        $l11 = $l8 + $l10;

        i25 = (int) $l11;

     label6:
        i26 = i26 + 1;

     label7:
        if i26 < $i0 goto label1;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames>;

        if $r10 != null goto label8;

        $r11 = <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noException>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] exceptionNames> = $r11;

     label8:
        return;
    }

    private void readModifierRelatedAttributes()
    {
        int[] $r1;
        boolean $z0, $z1, $z2, $z3;
        long $l20, $l22, $l23, $l24;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, $i21, $i25;
        char $c9;
        char[] $r2, $r3, $r4, $r5, $r6;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(6);

        i18 = 8;

        i19 = 0;

        goto label7;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i18);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i6, $i7);

        $i8 = lengthof $r2;

        if $i8 == 0 goto label6;

        $c9 = $r2[0];

        $i25 = (int) $c9;

        lookupswitch($i25)
        {
            case 65: goto label4;
            case 68: goto label2;
            case 83: goto label3;
            case 86: goto label5;
            default: goto label6;
        };

     label2:
        $r5 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] DeprecatedName>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r5);

        if $z2 == 0 goto label6;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        $i15 = $i14 | 1048576;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i15;

        goto label6;

     label3:
        $r4 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] SyntheticName>;

        $z1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r4);

        if $z1 == 0 goto label6;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        $i13 = $i12 | 4096;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i13;

        goto label6;

     label4:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] AnnotationDefaultName>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r6);

        if $z3 == 0 goto label6;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        $i17 = $i16 | 131072;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i17;

        goto label6;

     label5:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] VarargsName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label6;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags>;

        $i11 = $i10 | 128;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int accessFlags> = $i11;

     label6:
        $l20 = (long) i18;

        $i21 = i18 + 2;

        $l22 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>($i21);

        $l23 = 6L + $l22;

        $l24 = $l20 + $l23;

        i18 = (int) $l24;

        i19 = i19 + 1;

     label7:
        if i19 < $i0 goto label1;

        return;
    }

    public int sizeInBytes()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int attributeBytes>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r1;
        java.lang.String $r2;
        java.lang.StringBuffer $r0;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void toString(java.lang.StringBuffer)>($r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    void toString(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r0 := @parameter0: java.lang.StringBuffer;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void toStringContent(java.lang.StringBuffer)>(r0);

        return;
    }

    protected void toStringContent(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r5, $r13, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        char[] $r1, $r15, r18;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        r2 := @parameter0: java.lang.StringBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int getModifiers()>();

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getGenericSignature()>();

        r18 = $r1;

        if $r1 != null goto label01;

        r18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getMethodDescriptor()>();

     label01:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r4 = new java.lang.StringBuffer;

        $i1 = $i0 & 1048576;

        if $i1 == 0 goto label02;

        $r19 = "deprecated ";

        goto label03;

     label02:
        $r19 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label03:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r19);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $i2 = $i0 & 1;

        if $i2 != 1 goto label04;

        $r20 = "public ";

        goto label05;

     label04:
        $r20 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label05:
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $i3 = $i0 & 2;

        if $i3 != 2 goto label06;

        $r21 = "private ";

        goto label07;

     label06:
        $r21 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label07:
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $i4 = $i0 & 4;

        if $i4 != 4 goto label08;

        $r22 = "protected ";

        goto label09;

     label08:
        $r22 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label09:
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $i5 = $i0 & 8;

        if $i5 != 8 goto label10;

        $r23 = "static ";

        goto label11;

     label10:
        $r23 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label11:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $i6 = $i0 & 16;

        if $i6 != 16 goto label12;

        $r24 = "final ";

        goto label13;

     label12:
        $r24 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label13:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $i7 = $i0 & 64;

        if $i7 != 64 goto label14;

        $r25 = "bridge ";

        goto label15;

     label14:
        $r25 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label15:
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $i8 = $i0 & 128;

        if $i8 != 128 goto label16;

        $r26 = "varargs ";

        goto label17;

     label16:
        $r26 = <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String EMPTY_STRING>;

     label17:
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] getSelector()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r18);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return;
    }

    private void readCodeAttribute()
    {
        long $l9, $l10, $l11, $l12;
        char[][] $r1, $r5, $r6;
        int[] $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i13, i14;
        boolean $z0;
        char[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(6);

        i13 = 8;

        if $i0 == 0 goto label5;

        i14 = 0;

        goto label4;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i13);

        $i3 = $r2[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i5);

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i6, $i7);

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] CodeName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r3, $r4);

        if $z0 == 0 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void decodeCodeAttribute(int)>(i13);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        if $r5 != null goto label2;

        $r6 = <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noArgumentNames>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames> = $r6;

     label2:
        return;

     label3:
        $l9 = (long) i13;

        $i8 = i13 + 2;

        $l10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>($i8);

        $l11 = 6L + $l10;

        $l12 = $l9 + $l11;

        i13 = (int) $l12;

        i14 = i14 + 1;

     label4:
        if i14 < $i0 goto label1;

     label5:
        $r1 = <org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] noArgumentNames>;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames> = $r1;

        return;
    }

    private void decodeCodeAttribute(int)
    {
        long $l1, $l14, $l15, $l16, $l17;
        int[] $r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, i18, i19, i20, i21, i22, i23;
        boolean $z0;
        char[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        i0 := @parameter0: int;

        i18 = i0 + 10;

        $l1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>(i18);

        i2 = (int) $l1;

        $i3 = 4 + i2;

        i19 = i18 + $i3;

        $i4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i19);

        i20 = i19 + 2;

        if $i4 == 0 goto label3;

        i21 = 0;

        goto label2;

     label1:
        i20 = i20 + 8;

        i21 = i21 + 1;

     label2:
        if i21 < $i4 goto label1;

     label3:
        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i20);

        i22 = i20 + 2;

        i23 = 0;

        goto label6;

     label4:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i22);

        $i8 = $r1[$i6];

        $i7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i9 = $i8 - $i7;

        $i11 = i9 + 3;

        $i10 = i9 + 1;

        $i12 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i10);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i11, $i12);

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants: char[] LocalVariableTableName>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: void decodeLocalVariableAttribute(int,int)>(i22, i2);

     label5:
        $l14 = (long) i22;

        $i13 = i22 + 2;

        $l15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: long u4At(int)>($i13);

        $l16 = 6L + $l15;

        $l17 = $l14 + $l16;

        i22 = (int) $l17;

        i23 = i23 + 1;

     label6:
        if i23 < $i5 goto label4;

        return;
    }

    private void decodeLocalVariableAttribute(int, int)
    {
        char[][] $r1, $r2, $r3, $r4, $r8;
        int[] $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;
        boolean $z0;
        char[] $r6, $r7;
        org.eclipse.jdt.internal.compiler.classfmt.MethodInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo;

        i0 := @parameter0: int;

        i17 := @parameter1: int;

        i18 = i0 + 6;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i18);

        if $i1 == 0 goto label5;

        i19 = i18 + 2;

        $r1 = newarray (char[])[$i1];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames> = $r1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex> = 0;

        i20 = 0;

        goto label3;

     label1:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>(i19);

        if $i2 != 0 goto label4;

        $i7 = 4 + i19;

        $i8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i7);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int[] constantPoolOffsets>;

        $i10 = $r5[$i8];

        $i9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int structOffset>;

        i11 = $i10 - $i9;

        $i13 = i11 + 3;

        $i12 = i11 + 1;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int u2At(int)>($i12);

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[] utf8At(int,int)>($i13, $i14);

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] This>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, $r7);

        if $z0 != 0 goto label2;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex> = $i16;

        $r8[$i15] = $r6;

     label2:
        i19 = i19 + 10;

        i20 = i20 + 1;

     label3:
        if i20 < $i1 goto label1;

     label4:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        $i3 = lengthof $r2;

        if $i4 == $i3 goto label5;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex>;

        $r3 = newarray (char[])[$i5];

        r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: char[][] argumentNames> = $r3;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.MethodInfo: int argumentNamesIndex>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r3, 0, $i6);

     label5:
        return;
    }
}
