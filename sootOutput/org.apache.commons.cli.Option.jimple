public class org.apache.commons.cli.Option extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int UNINITIALIZED;
    public static final int UNLIMITED_VALUES;
    private java.lang.String opt;
    private java.lang.String longOpt;
    private java.lang.String argName;
    private java.lang.String description;
    private boolean required;
    private boolean optionalArg;
    private int numberOfArgs;
    private java.lang.Object type;
    private java.util.List values;
    private char valuesep;

    public void <init>(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1, r2;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.cli.Option: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, null, 0, r2);

        return;
    }

    public void <init>(java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1, r2;
        org.apache.commons.cli.Option r0;
        boolean z0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.cli.Option: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, null, z0, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException
    {
        int $i1;
        java.lang.String r2, r3, r4;
        org.apache.commons.cli.Option r0;
        boolean z0;
        java.util.ArrayList $r5;

        r0 := @this: org.apache.commons.cli.Option;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.cli.Option: java.lang.String argName> = "arg";

        $i1 = (int) -1;

        r0.<org.apache.commons.cli.Option: int numberOfArgs> = $i1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.cli.Option: java.util.List values> = $r5;

        staticinvoke <org.apache.commons.cli.OptionValidator: void validateOption(java.lang.String)>(r2);

        r0.<org.apache.commons.cli.Option: java.lang.String opt> = r2;

        r0.<org.apache.commons.cli.Option: java.lang.String longOpt> = r3;

        if z0 == 0 goto label1;

        r0.<org.apache.commons.cli.Option: int numberOfArgs> = 1;

     label1:
        r0.<org.apache.commons.cli.Option: java.lang.String description> = r4;

        return;
    }

    public int getId()
    {
        int $i1;
        char $c0;
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = virtualinvoke r0.<org.apache.commons.cli.Option: java.lang.String getKey()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        return $i1;
    }

    java.lang.String getKey()
    {
        java.lang.String $r1, $r2, $r3;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        return $r3;

     label1:
        $r2 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        return $r2;
    }

    public java.lang.String getOpt()
    {
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        return $r1;
    }

    public java.lang.Object getType()
    {
        java.lang.Object $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.Object type>;

        return $r1;
    }

    public void setType(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.commons.cli.Option: java.lang.Object type> = r1;

        return;
    }

    public java.lang.String getLongOpt()
    {
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        return $r1;
    }

    public void setLongOpt(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.cli.Option: java.lang.String longOpt> = r1;

        return;
    }

    public void setOptionalArg(boolean)
    {
        org.apache.commons.cli.Option r0;
        boolean z0;

        r0 := @this: org.apache.commons.cli.Option;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.cli.Option: boolean optionalArg> = z0;

        return;
    }

    public boolean hasOptionalArg()
    {
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $z0 = r0.<org.apache.commons.cli.Option: boolean optionalArg>;

        return $z0;
    }

    public boolean hasLongOpt()
    {
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasArg()
    {
        int $i0, $i1, $i3;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $i0 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $i0 > 0 goto label1;

        $i1 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $i3 = (int) -2;

        if $i1 != $i3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.String getDescription()
    {
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String description>;

        return $r1;
    }

    public void setDescription(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.cli.Option: java.lang.String description> = r1;

        return;
    }

    public boolean isRequired()
    {
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $z0 = r0.<org.apache.commons.cli.Option: boolean required>;

        return $z0;
    }

    public void setRequired(boolean)
    {
        org.apache.commons.cli.Option r0;
        boolean z0;

        r0 := @this: org.apache.commons.cli.Option;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.cli.Option: boolean required> = z0;

        return;
    }

    public void setArgName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.cli.Option: java.lang.String argName> = r1;

        return;
    }

    public java.lang.String getArgName()
    {
        java.lang.String $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String argName>;

        return $r1;
    }

    public boolean hasArgName()
    {
        int $i0;
        java.lang.String $r1, $r2;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String argName>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.cli.Option: java.lang.String argName>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasArgs()
    {
        int $i0, $i1, $i3;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $i0 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $i0 > 1 goto label1;

        $i1 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $i3 = (int) -2;

        if $i1 != $i3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void setArgs(int)
    {
        int i0;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        i0 := @parameter0: int;

        r0.<org.apache.commons.cli.Option: int numberOfArgs> = i0;

        return;
    }

    public void setValueSeparator(char)
    {
        char c0;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        c0 := @parameter0: char;

        r0.<org.apache.commons.cli.Option: char valuesep> = c0;

        return;
    }

    public char getValueSeparator()
    {
        char $c0;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $c0 = r0.<org.apache.commons.cli.Option: char valuesep>;

        return $c0;
    }

    public boolean hasValueSeparator()
    {
        int $i1;
        char $c0;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $c0 = r0.<org.apache.commons.cli.Option: char valuesep>;

        $i1 = (int) $c0;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getArgs()
    {
        int $i0;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $i0 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        return $i0;
    }

    void addValueForProcessing(java.lang.String)
    {
        int $i0;
        java.lang.RuntimeException $r1;
        java.lang.String r2;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r2 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        lookupswitch($i0)
        {
            case -1: goto label1;
            default: goto label2;
        };

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("NO_ARGS_ALLOWED");

        throw $r1;

     label2:
        specialinvoke r0.<org.apache.commons.cli.Option: void processValue(java.lang.String)>(r2);

        return;
    }

    private void processValue(java.lang.String)
    {
        char $c0;
        java.util.List $r1;
        int $i1, $i2, $i3, $i4, i5, $i6, $i8, $i9;
        java.lang.String $r2, $r3, r4;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        r4 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.cli.Option: boolean hasValueSeparator()>();

        if $z0 == 0 goto label3;

        $c0 = virtualinvoke r0.<org.apache.commons.cli.Option: char getValueSeparator()>();

        $i6 = (int) $c0;

        i5 = virtualinvoke r4.<java.lang.String: int indexOf(int)>($i6);

     label1:
        $i8 = (int) -1;

        if i5 == $i8 goto label3;

        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $i3 = $i2 - 1;

        if $i1 != $i3 goto label2;

        goto label3;

     label2:
        $r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        specialinvoke r0.<org.apache.commons.cli.Option: void add(java.lang.String)>($r2);

        $i4 = i5 + 1;

        $r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i4);

        r4 = $r3;

        $i9 = (int) $c0;

        i5 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>($i9);

        goto label1;

     label3:
        specialinvoke r0.<org.apache.commons.cli.Option: void add(java.lang.String)>(r4);

        return;
    }

    private void add(java.lang.String)
    {
        java.lang.RuntimeException $r4;
        java.util.List $r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        if $i0 <= 0 goto label1;

        $r3 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = r0.<org.apache.commons.cli.Option: int numberOfArgs>;

        $i3 = $i2 - 1;

        if $i1 <= $i3 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot add value, list full.");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getValue()
    {
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $z0 = specialinvoke r0.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

     label2:
        return $r3;
    }

    public java.lang.String getValue(int) throws java.lang.IndexOutOfBoundsException
    {
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

     label2:
        return $r3;
    }

    public java.lang.String getValue(java.lang.String)
    {
        java.lang.String $r1, r2, $r3;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.cli.Option: java.lang.String getValue()>();

        if $r1 == null goto label1;

        $r3 = $r1;

        goto label2;

     label1:
        $r3 = r2;

     label2:
        return $r3;
    }

    public java.lang.String[] getValues()
    {
        java.lang.Object[] $r4;
        java.lang.String[] $r3, $r5, $r6;
        java.util.List $r1, $r2;
        int $i0;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $z0 = specialinvoke r0.<org.apache.commons.cli.Option: boolean hasNoValues()>();

        if $z0 == 0 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = (java.lang.String[]) $r5;

     label2:
        return $r6;
    }

    public java.util.List getValuesList()
    {
        java.util.List $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r6, $r8, $r10;
        java.lang.Object $r7, $r12;
        java.lang.String $r3, $r4, $r5, $r9, $r11;
        org.apache.commons.cli.Option r2;
        boolean $z0, $z1;

        r2 := @this: org.apache.commons.cli.Option;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ option: ");

        $r3 = r2.<org.apache.commons.cli.Option: java.lang.String opt>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = r2.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $r4 == null goto label1;

        $r8 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r9 = r2.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label1:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $z0 = virtualinvoke r2.<org.apache.commons.cli.Option: boolean hasArgs()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ARG...]");

        goto label3;

     label2:
        $z1 = virtualinvoke r2.<org.apache.commons.cli.Option: boolean hasArg()>();

        if $z1 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [ARG]");

     label3:
        $r10 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" :: ");

        $r11 = r2.<org.apache.commons.cli.Option: java.lang.String description>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = r2.<org.apache.commons.cli.Option: java.lang.Object type>;

        if $r12 == null goto label4;

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" :: ");

        $r7 = r2.<org.apache.commons.cli.Option: java.lang.Object type>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private boolean hasNoValues()
    {
        java.util.List $r1;
        org.apache.commons.cli.Option r0;
        boolean $z0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.commons.cli.Option r0, r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.cli.Option;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (org.apache.commons.cli.Option) r1;

        $r5 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $r5 == null goto label4;

        $r12 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        $r11 = r4.<org.apache.commons.cli.Option: java.lang.String opt>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r4.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        $r7 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $r7 == null goto label7;

        $r10 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $r9 = r4.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label9;

        goto label8;

     label7:
        $r8 = r4.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $r8 == null goto label9;

     label8:
        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3, $r4;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.commons.cli.Option: java.lang.String opt>;

        $i2 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i2 = 0;

     label2:
        $i0 = 31 * $i2;

        $r2 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.commons.cli.Option: java.lang.String longOpt>;

        $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        goto label4;

     label3:
        $i3 = 0;

     label4:
        $i1 = $i0 + $i3;

        return $i1;
    }

    public java.lang.Object clone()
    {
        java.lang.RuntimeException $r5;
        java.lang.CloneNotSupportedException $r4;
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.lang.StringBuffer $r6, $r7, $r9;
        java.lang.Object $r1;
        java.lang.String $r8, $r10;
        org.apache.commons.cli.Option r0, r11;

        r0 := @this: org.apache.commons.cli.Option;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r11 = (org.apache.commons.cli.Option) $r1;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r11.<org.apache.commons.cli.Option: java.util.List values> = $r2;

     label2:
        return r11;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A CloneNotSupportedException was thrown: ");

        $r8 = virtualinvoke $r4.<java.lang.CloneNotSupportedException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    void clearValues()
    {
        java.util.List $r1;
        org.apache.commons.cli.Option r0;

        r0 := @this: org.apache.commons.cli.Option;

        $r1 = r0.<org.apache.commons.cli.Option: java.util.List values>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean addValue(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.String r2;
        org.apache.commons.cli.Option r1;

        r1 := @this: org.apache.commons.cli.Option;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ");

        throw $r0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.cli.Option: int UNLIMITED_VALUES> = -2;

        <org.apache.commons.cli.Option: int UNINITIALIZED> = -1;

        <org.apache.commons.cli.Option: long serialVersionUID> = 1L;

        return;
    }
}
