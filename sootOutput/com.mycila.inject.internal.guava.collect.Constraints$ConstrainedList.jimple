class com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList extends com.mycila.inject.internal.guava.collect.ForwardingList
{
    final java.util.List delegate;
    final com.mycila.inject.internal.guava.collect.Constraint constraint;

    void <init>(java.util.List, com.mycila.inject.internal.guava.collect.Constraint)
    {
        java.util.List r1, $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.lang.Object $r2, $r5;
        com.mycila.inject.internal.guava.collect.Constraint r4, $r6;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        r1 := @parameter0: java.util.List;

        r4 := @parameter1: com.mycila.inject.internal.guava.collect.Constraint;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingList: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.List) $r2;

        r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate> = $r3;

        $r5 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.mycila.inject.internal.guava.collect.Constraint) $r5;

        r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint> = $r6;

        return;
    }

    protected java.util.List delegate()
    {
        java.util.List $r1;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        return $r1;
    }

    public boolean add(java.lang.Object)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.Constraint $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Constraint: java.lang.Object checkElement(java.lang.Object)>(r1);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public void add(int, java.lang.Object)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        int i0;
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.Constraint $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Constraint: java.lang.Object checkElement(java.lang.Object)>(r1);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.util.Collection r1, $r4;
        com.mycila.inject.internal.guava.collect.Constraint $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        r1 := @parameter0: java.util.Collection;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.Collection access$000(java.util.Collection,com.mycila.inject.internal.guava.collect.Constraint)>(r1, $r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.util.Collection r1, $r4;
        int i0;
        com.mycila.inject.internal.guava.collect.Constraint $r2;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.Collection access$000(java.util.Collection,com.mycila.inject.internal.guava.collect.Constraint)>(r1, $r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, $r4);

        return $z0;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.List $r1;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.util.ListIterator $r2, $r4;
        com.mycila.inject.internal.guava.collect.Constraint $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator()>();

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.ListIterator access$100(java.util.ListIterator,com.mycila.inject.internal.guava.collect.Constraint)>($r2, $r3);

        return $r4;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.List $r1;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        java.util.ListIterator $r2, $r4;
        int i0;
        com.mycila.inject.internal.guava.collect.Constraint $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.ListIterator access$100(java.util.ListIterator,com.mycila.inject.internal.guava.collect.Constraint)>($r2, $r3);

        return $r4;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        int i0;
        java.lang.Object r1, $r4;
        com.mycila.inject.internal.guava.collect.Constraint $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Constraint: java.lang.Object checkElement(java.lang.Object)>(r1);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r4;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1, $r2, $r4;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;
        int i0, i1;
        com.mycila.inject.internal.guava.collect.Constraint $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: com.mycila.inject.internal.guava.collect.Constraint constraint>;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Constraints: java.util.List constrainedList(java.util.List,com.mycila.inject.internal.guava.collect.Constraint)>($r2, $r3);

        return $r4;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.List $r1;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.List $r1;
        com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Constraints$ConstrainedList: java.util.List delegate()>();

        return $r1;
    }
}
