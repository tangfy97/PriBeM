public class org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry extends java.lang.Object
{
    public static final java.lang.String PROPERTY;
    private java.util.Hashtable sources;
    static java.lang.Class class$java$lang$Thread;
    static java.lang.Class class$org$apache$xerces$dom3$bootstrap$DOMImplementationRegistry;

    private void <init>()
    {
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry r0;

        r0 := @this: org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(java.util.Hashtable)
    {
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry r0;
        java.util.Hashtable r1;

        r0 := @this: org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        r1 := @parameter0: java.util.Hashtable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources> = r1;

        return;
    }

    public static org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry newInstance() throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry $r2;
        java.util.StringTokenizer $r3;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.String $r1, $r4;
        java.util.Hashtable $r0;
        boolean $z0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.w3c.dom.DOMImplementationSourceList");

        if $r1 == null goto label3;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String)>($r1);

        goto label2;

     label1:
        $r4 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = staticinvoke <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class getClass(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label1;

     label3:
        $r2 = new org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        specialinvoke $r2.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: void <init>(java.util.Hashtable)>($r0);

        return $r2;
    }

    public org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassCastException
    {
        org.apache.xerces.dom3.DOMImplementationSource r6;
        java.util.Enumeration $r2;
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry r0;
        java.lang.Object $r3, $r5;
        java.lang.String r7, r9;
        java.util.Hashtable $r1, $r4;
        org.w3c.dom.DOMImplementation $r8;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        r7 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (java.lang.String) $r3;

        $r4 = r0.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r9);

        r6 = (org.apache.xerces.dom3.DOMImplementationSource) $r5;

        $r8 = interfaceinvoke r6.<org.apache.xerces.dom3.DOMImplementationSource: org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String)>(r7);

        if $r8 == null goto label2;

        return $r8;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        return null;
    }

    public org.apache.xerces.dom3.DOMImplementationList getDOMImplementations(java.lang.String) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassCastException
    {
        org.apache.xerces.dom3.DOMImplementationSource r7;
        java.util.Enumeration $r2;
        org.apache.xerces.dom3.bootstrap.DOMImplementationListImpl $r3;
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry r0;
        java.lang.Object $r4, $r6;
        java.lang.String r8, r10;
        java.util.Hashtable $r1, $r5;
        org.w3c.dom.DOMImplementation $r9;
        boolean $z0;

        r0 := @this: org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        $r3 = new org.apache.xerces.dom3.bootstrap.DOMImplementationListImpl;

        specialinvoke $r3.<org.apache.xerces.dom3.bootstrap.DOMImplementationListImpl: void <init>()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r10 = (java.lang.String) $r4;

        $r5 = r0.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r10);

        r7 = (org.apache.xerces.dom3.DOMImplementationSource) $r6;

        $r9 = interfaceinvoke r7.<org.apache.xerces.dom3.DOMImplementationSource: org.w3c.dom.DOMImplementation getDOMImplementation(java.lang.String)>(r8);

        if $r9 == null goto label2;

        virtualinvoke $r3.<org.apache.xerces.dom3.bootstrap.DOMImplementationListImpl: void add(org.w3c.dom.DOMImplementation)>($r9);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label1;

        return $r3;
    }

    public void addSource(org.apache.xerces.dom3.DOMImplementationSource) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        org.apache.xerces.dom3.DOMImplementationSource r0;
        org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry r3;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.Hashtable $r4;

        r3 := @this: org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry;

        r0 := @parameter0: org.apache.xerces.dom3.DOMImplementationSource;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = r3.<org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.util.Hashtable sources>;

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return;
    }

    private static java.lang.Class getClass(java.lang.String) throws java.lang.ClassNotFoundException, java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        java.lang.NoSuchMethodException $r14;
        java.lang.Thread $r4;
        java.lang.UnknownError $r9, $r12;
        java.lang.String r1, $r10, $r13;
        java.lang.reflect.Method r16;
        java.lang.IllegalAccessException $r11;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.Class $r0, $r2, $r3, $r7, $r15, $r18, $r19;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.ClassLoader r17;

        r1 := @parameter0: java.lang.String;

        r16 = null;

        r17 = null;

     label01:
        $r0 = <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$java$lang$Thread>;

        if $r0 != null goto label02;

        $r18 = staticinvoke <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$(java.lang.String)>("java.lang.Thread");

        <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$java$lang$Thread> = $r18;

        goto label03;

     label02:
        $r18 = <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$java$lang$Thread>;

     label03:
        r16 = virtualinvoke $r18.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContextClassLoader", null);

     label04:
        goto label08;

     label05:
        $r14 := @caughtexception;

        $r15 = <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$apache$xerces$dom3$bootstrap$DOMImplementationRegistry>;

        if $r15 != null goto label06;

        $r19 = staticinvoke <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$(java.lang.String)>("org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry");

        <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$apache$xerces$dom3$bootstrap$DOMImplementationRegistry> = $r19;

        goto label07;

     label06:
        $r19 = <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.Class class$org$apache$xerces$dom3$bootstrap$DOMImplementationRegistry>;

     label07:
        r17 = virtualinvoke $r19.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label08;

     label08:
        if r17 != null goto label13;

     label09:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r5 = virtualinvoke r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, null);

        r17 = (java.lang.ClassLoader) $r5;

     label10:
        goto label13;

     label11:
        $r11 := @caughtexception;

        $r12 = new java.lang.UnknownError;

        $r13 = virtualinvoke $r11.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r12.<java.lang.UnknownError: void <init>(java.lang.String)>($r13);

        throw $r12;

     label12:
        $r8 := @caughtexception;

        $r9 = new java.lang.UnknownError;

        $r10 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.UnknownError: void <init>(java.lang.String)>($r10);

        throw $r9;

     label13:
        if r17 != null goto label14;

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        return $r3;

     label14:
        $r2 = virtualinvoke r17.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label15:
        return $r2;

     label16:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        return $r7;

        catch java.lang.NoSuchMethodException from label01 to label04 with label05;
        catch java.lang.IllegalAccessException from label09 to label10 with label11;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label12;
        catch java.lang.ClassNotFoundException from label14 to label15 with label16;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.dom3.bootstrap.DOMImplementationRegistry: java.lang.String PROPERTY> = "org.w3c.dom.DOMImplementationSourceList";

        return;
    }
}
