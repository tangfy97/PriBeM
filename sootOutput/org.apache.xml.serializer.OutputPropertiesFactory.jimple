public class org.apache.xml.serializer.OutputPropertiesFactory extends java.lang.Object
{
    public static final java.lang.String S_BUILTIN_EXTENSIONS_UNIVERSAL;
    public static final java.lang.String S_KEY_INDENT_AMOUNT;
    public static final java.lang.String S_KEY_CONTENT_HANDLER;
    public static final java.lang.String S_KEY_ENTITIES;
    public static final java.lang.String S_USE_URL_ESCAPING;
    public static final java.lang.String S_OMIT_META_TAG;
    public static final java.lang.String S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL;
    public static final int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN;
    private static final java.lang.String S_XSLT_PREFIX;
    private static final int S_XSLT_PREFIX_LEN;
    private static final java.lang.String S_XALAN_PREFIX;
    private static final int S_XALAN_PREFIX_LEN;
    private static java.lang.Integer m_synch_object;
    private static final java.lang.String PROP_DIR;
    private static final java.lang.String PROP_FILE_XML;
    private static final java.lang.String PROP_FILE_TEXT;
    private static final java.lang.String PROP_FILE_HTML;
    private static final java.lang.String PROP_FILE_UNKNOWN;
    private static java.util.Properties m_xml_properties;
    private static java.util.Properties m_html_properties;
    private static java.util.Properties m_text_properties;
    private static java.util.Properties m_unknown_properties;
    private static final java.lang.Class ACCESS_CONTROLLER_CLASS;
    static java.lang.Class class$org$apache$xml$serializer$OutputPropertiesFactory;

    public void <init>()
    {
        org.apache.xml.serializer.OutputPropertiesFactory r0;

        r0 := @this: org.apache.xml.serializer.OutputPropertiesFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Class findAccessControllerClass()
    {
        java.lang.Class $r0;
        java.lang.Exception $r1;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.security.AccessController");

        return $r0;

     label2:
        $r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public static java.util.Properties getDefaultMethodProperties(java.lang.String)
    {
        java.lang.Throwable $r21;
        java.lang.Object[] $r19;
        java.lang.Integer r23;
        java.lang.String r1, $r10, $r11, $r20, r22;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xml.utils.WrappedRuntimeException $r18;
        java.util.Properties $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, r24;
        java.io.IOException $r17;

        r1 := @parameter0: java.lang.String;

        r22 = null;

     label01:
        r23 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Integer m_synch_object>;

        entermonitor r23;

     label02:
        $r0 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        if null != $r0 goto label03;

        r22 = "output_xml.properties";

        $r16 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_xml.properties", null);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties> = $r16;

     label03:
        exitmonitor r23;

        goto label05;

     label04:
        $r21 := @caughtexception;

        exitmonitor r23;

        throw $r21;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label06;

        r24 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        goto label13;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z1 == 0 goto label08;

        $r13 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties>;

        if null != $r13 goto label07;

        r22 = "output_html.properties";

        $r14 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r15 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_html.properties", $r14);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties> = $r15;

     label07:
        r24 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties>;

        goto label13;

     label08:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z2 == 0 goto label10;

        $r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        if null != $r6 goto label09;

        r22 = "output_text.properties";

        $r7 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r8 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_text.properties", $r7);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties> = $r8;

        $r9 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        $r10 = virtualinvoke $r9.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("encoding");

        if null != $r10 goto label09;

        $r11 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>(null);

        $r12 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("encoding", $r11);

     label09:
        r24 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        goto label13;

     label10:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label12;

        $r3 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties>;

        if null != $r3 goto label11;

        r22 = "output_unknown.properties";

        $r4 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r5 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_unknown.properties", $r4);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties> = $r5;

     label11:
        r24 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties>;

        goto label13;

     label12:
        r24 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

     label13:
        goto label15;

     label14:
        $r17 := @caughtexception;

        $r18 = new org.apache.xml.utils.WrappedRuntimeException;

        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = r22;

        $r19[1] = r1;

        $r20 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_METHOD_PROPERTY", $r19);

        specialinvoke $r18.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r20, $r17);

        throw $r18;

     label15:
        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>(java.util.Properties)>(r24);

        return $r2;

        catch java.lang.Throwable from label02 to label04 with label04;
        catch java.io.IOException from label01 to label13 with label14;
    }

    private static java.util.Properties loadPropertiesFile(java.lang.String, java.util.Properties) throws java.io.IOException
    {
        java.io.BufferedInputStream r25, $r27;
        java.util.Enumeration $r7;
        org.apache.xml.serializer.OutputPropertiesFactory$1 $r11;
        java.lang.SecurityException $r13, $r14, $r16;
        boolean $z0;
        java.lang.Throwable $r15;
        java.lang.Object[] $r18, $r22;
        java.lang.String r4, $r9, $r19, $r23, r28, r29, r30, r31;
        org.apache.xml.utils.WrappedRuntimeException $r17, $r21;
        java.util.Properties $r0, r1, $r6;
        java.io.IOException $r20;
        java.lang.Class $r2, $r3, $r26;
        java.lang.Object $r5, $r8, $r10, $r12;
        java.io.InputStream r24;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Properties;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>(java.util.Properties)>(r1);

        r24 = null;

        r25 = null;

     label01:
        $r2 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class ACCESS_CONTROLLER_CLASS>;

        if $r2 == null goto label02;

        $r11 = new org.apache.xml.serializer.OutputPropertiesFactory$1;

        specialinvoke $r11.<org.apache.xml.serializer.OutputPropertiesFactory$1: void <init>(java.lang.String)>(r4);

        $r12 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r11);

        r24 = (java.io.InputStream) $r12;

        goto label05;

     label02:
        $r3 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class class$org$apache$xml$serializer$OutputPropertiesFactory>;

        if $r3 != null goto label03;

        $r26 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class class$(java.lang.String)>("org.apache.xml.serializer.OutputPropertiesFactory");

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class class$org$apache$xml$serializer$OutputPropertiesFactory> = $r26;

        goto label04;

     label03:
        $r26 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class class$org$apache$xml$serializer$OutputPropertiesFactory>;

     label04:
        r24 = virtualinvoke $r26.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r4);

     label05:
        $r27 = new java.io.BufferedInputStream;

        specialinvoke $r27.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r24);

        r25 = $r27;

        virtualinvoke $r0.<java.util.Properties: void load(java.io.InputStream)>($r27);

     label06:
        goto label29;

     label07:
        goto label14;

     label08:
        $r20 := @caughtexception;

        if r1 != null goto label09;

        throw $r20;

     label09:
        $r21 = new org.apache.xml.utils.WrappedRuntimeException;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r4;

        $r23 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_RESOURCE", $r22);

        specialinvoke $r21.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r23, $r20);

        throw $r21;

     label10:
        $r16 := @caughtexception;

        if r1 != null goto label11;

        throw $r16;

     label11:
        $r17 = new org.apache.xml.utils.WrappedRuntimeException;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r4;

        $r19 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_RESOURCE", $r18);

        specialinvoke $r17.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r19, $r16);

        throw $r17;

     label12:
        $r15 := @caughtexception;

        goto label32;

     label13:
        throw $r15;

     label14:
        $r5 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object clone()>();

        $r6 = (java.util.Properties) $r5;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.util.Enumeration keys()>();

        goto label28;

     label15:
        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r28 = (java.lang.String) $r8;

        r29 = null;

     label16:
        r29 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r28);

     label17:
        goto label19;

     label18:
        $r14 := @caughtexception;

     label19:
        if r29 != null goto label20;

        $r10 = virtualinvoke $r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r28);

        r29 = (java.lang.String) $r10;

     label20:
        $r9 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r28, 1);

        r30 = null;

     label21:
        r30 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r9);

     label22:
        goto label24;

     label23:
        $r13 := @caughtexception;

     label24:
        if r30 != null goto label25;

        r31 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r29, 0);

        goto label26;

     label25:
        r31 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r30, 0);

     label26:
        if r28 != $r9 goto label27;

        if r29 == r31 goto label28;

     label27:
        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r28);

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r31);

     label28:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label15;

        return $r0;

     label29:
        if $r27 == null goto label30;

        virtualinvoke $r27.<java.io.BufferedInputStream: void close()>();

     label30:
        if r24 == null goto label31;

        virtualinvoke r24.<java.io.InputStream: void close()>();

     label31:
        goto label07;

     label32:
        if r25 == null goto label33;

        virtualinvoke r25.<java.io.BufferedInputStream: void close()>();

     label33:
        if r24 == null goto label34;

        virtualinvoke r24.<java.io.InputStream: void close()>();

     label34:
        goto label13;

        catch java.io.IOException from label01 to label06 with label08;
        catch java.lang.SecurityException from label01 to label06 with label10;
        catch java.lang.Throwable from label01 to label12 with label12;
        catch java.lang.SecurityException from label16 to label17 with label18;
        catch java.lang.SecurityException from label21 to label22 with label23;
    }

    private static java.lang.String fixupPropertyString(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2, $r8, r10;
        boolean z0, $z1, $z2;

        r10 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("xslt.output.");

        if $z1 == 0 goto label1;

        $i3 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_XSLT_PREFIX_LEN>;

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.xslt.");

        if $z2 == 0 goto label2;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{http://xml.apache.org/xalan}");

        $i2 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_XALAN_PREFIX_LEN>;

        $r8 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $i0 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>("\\u003a");

        if $i0 <= 0 goto label3;

        $i1 = $i0 + 6;

        $r0 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i1);

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r10;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Integer $r3;
        int $i0, $i1, $i2;
        java.lang.Class $r4;
        java.lang.String $r0, $r1, $r2;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_UNKNOWN> = "output_unknown.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_HTML> = "output_html.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_TEXT> = "output_text.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_XML> = "output_xml.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_DIR> = "org/apache/xml/serializer/";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_XALAN_PREFIX> = "org.apache.xslt.";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_XSLT_PREFIX> = "xslt.output.";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL> = "{http://xml.apache.org/xslt}";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_OMIT_META_TAG> = "{http://xml.apache.org/xalan}omit-meta-tag";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_USE_URL_ESCAPING> = "{http://xml.apache.org/xalan}use-url-escaping";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_ENTITIES> = "{http://xml.apache.org/xalan}entities";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_CONTENT_HANDLER> = "{http://xml.apache.org/xalan}content-handler";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_INDENT_AMOUNT> = "{http://xml.apache.org/xalan}indent-amount";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_EXTENSIONS_UNIVERSAL> = "{http://xml.apache.org/xalan}";

        $r0 = "{http://xml.apache.org/xslt}";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN> = $i0;

        $r1 = "xslt.output.";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_XSLT_PREFIX_LEN> = $i1;

        $r2 = "org.apache.xslt.";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_XALAN_PREFIX_LEN> = $i2;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(1);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Integer m_synch_object> = $r3;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties> = null;

        $r4 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class findAccessControllerClass()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class ACCESS_CONTROLLER_CLASS> = $r4;

        return;
    }
}
