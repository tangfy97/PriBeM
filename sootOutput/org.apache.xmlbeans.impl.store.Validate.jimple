final class org.apache.xmlbeans.impl.store.Validate extends java.lang.Object implements org.apache.xmlbeans.impl.common.ValidatorListener$Event
{
    private org.apache.xmlbeans.impl.common.ValidatorListener _sink;
    private org.apache.xmlbeans.impl.store.Cur _cur;
    private boolean _hasText;
    private boolean _oneChunk;
    private org.apache.xmlbeans.impl.store.Cur _textCur;
    private java.lang.StringBuffer _textSb;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Validate;

    void <init>(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.impl.common.ValidatorListener)
    {
        java.lang.Throwable $r8;
        java.lang.IllegalStateException $r7;
        org.apache.xmlbeans.impl.common.ValidatorListener r2;
        org.apache.xmlbeans.impl.store.Validate r0;
        org.apache.xmlbeans.impl.store.Cur r1, $r3, $r4, $r5, $r6, $r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: org.apache.xmlbeans.impl.common.ValidatorListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isUserNode()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Inappropriate location to validate");

        throw $r7;

     label1:
        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink> = r2;

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur> = r1;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur> = $r3;

        r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText> = 0;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label2:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void process()>();

     label3:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur> = null;

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink> = null;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur> = null;

        r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink> = null;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void process()
    {
        java.lang.AssertionError $r12;
        org.apache.xmlbeans.impl.store.Validate r0;
        java.lang.StringBuffer $r6, $r7, $r9;
        int $i0, $i1;
        java.lang.String $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r5;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3, $r4, $r8, $r11, $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitEvent(int)>(1);

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label01;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $r14 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z3 = virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z3 == 0 goto label10;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitText()>();

        goto label10;

     label01:
        $z1 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z2 != 0 goto label02;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label02:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void doAttrs()>();

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

     label03:
        $r15 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z4 = virtualinvoke $r15.<org.apache.xmlbeans.impl.store.Cur: boolean isAtEndOfLastPush()>();

        if $z4 != 0 goto label10;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        tableswitch($i0)
        {
            case -2: goto label05;
            case -1: goto label08;
            case 0: goto label06;
            case 1: goto label08;
            case 2: goto label04;
            case 3: goto label08;
            case 4: goto label07;
            case 5: goto label07;
            default: goto label08;
        };

     label04:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitEvent(int)>(1);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void doAttrs()>();

        goto label09;

     label05:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitEvent(int)>(2);

        goto label09;

     label06:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitText()>();

        goto label09;

     label07:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void toEnd()>();

        goto label09;

     label08:
        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected kind: ");

        $r8 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i1 = virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label09:
        $r16 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label03;

     label10:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Validate: void emitEvent(int)>(2);

        return;
    }

    private void doAttrs()
    {
        org.apache.xmlbeans.impl.common.ValidatorListener $r2, $r7;
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.impl.store.Validate r0;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.store.Cur $r1, $r3, $r4, $r5, $r9;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $z0 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z4 == 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        if $z1 == 0 goto label4;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: boolean isNormalAttr()>();

        if $z2 == 0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getUri()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/XMLSchema-instance");

        if $z3 != 0 goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink>;

        interfaceinvoke $r7.<org.apache.xmlbeans.impl.common.ValidatorListener: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(4, r0);

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z5 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z5 != 0 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

     label4:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.common.ValidatorListener: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(5, r0);

        return;
    }

    private void emitText()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3, $r6, $r7, $r14, $r17, $r18, $r19, $r22;
        java.lang.AssertionError $r24, $r26, $r27;
        java.lang.StringBuffer $r4, $r8, $r10, $r11, $r12, $r13, $r15, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.Object $r5, $r16;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $z0 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r22 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z5 = virtualinvoke $r22.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z5 != 0 goto label1;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label1:
        $z1 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z1 == 0 goto label8;

        $z2 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z2 == 0 goto label5;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        if $r11 != null goto label2;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb> = $r25;

        goto label3;

     label2:
        $r13 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $i3 = virtualinvoke $r12.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i3);

     label3:
        $z3 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $z4 = virtualinvoke $r19.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z4 != 0 goto label4;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label4:
        $r15 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r14 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i7 = (int) -1;

        $r16 = virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>($i7);

        $r17 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i5 = $r17.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $r18 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i4 = $r18.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>($r15, $r16, $i5, $i4);

        r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk> = 0;

     label5:
        $z6 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z6 != 0 goto label7;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        if $r8 == null goto label6;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $i2 = virtualinvoke $r10.<java.lang.StringBuffer: int length()>();

        if $i2 > 0 goto label7;

     label6:
        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label7:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i9 = (int) -1;

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>($i9);

        $r6 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i1 = $r6.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i0 = $r7.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>($r4, $r5, $i1, $i0);

        goto label9;

     label8:
        r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText> = 1;

        r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk> = 1;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>($r1);

     label9:
        return;
    }

    private void emitEvent(int)
    {
        org.apache.xmlbeans.impl.common.ValidatorListener $r1, $r2;
        java.lang.AssertionError $r3, $r4, $r5;
        org.apache.xmlbeans.impl.store.Validate r0;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        i0 := @parameter0: int;

        $z0 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 != 3 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i0 != 4 goto label2;

        $z3 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z3 == 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $z4 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z4 != 0 goto label3;

        if i0 != 5 goto label3;

        $z2 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z2 == 0 goto label3;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label3:
        $z5 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z5 == 0 goto label4;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.common.ValidatorListener: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(3, r0);

        r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText> = 0;

     label4:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.common.ValidatorListener _sink>;

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.common.ValidatorListener: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(i0, r0);

        return;
    }

    public java.lang.String getText()
    {
        java.lang.AssertionError $r13, $r14, $r15;
        org.apache.xmlbeans.impl.store.Validate r0;
        java.lang.StringBuffer $r2, $r6, $r8;
        int $i0, $i2;
        java.lang.String $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.xmlbeans.impl.store.Cur $r1, $r3, $r4, $r10;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getValueAsString()>();

        return $r11;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z6 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z6 != 0 goto label2;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label2:
        $z2 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $z5 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z5 != 0 goto label4;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        if $r6 == null goto label3;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $i0 = virtualinvoke $r8.<java.lang.StringBuffer: int length()>();

        if $i0 > 0 goto label4;

     label3:
        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label4:
        $z7 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z7 != 0 goto label5;

        $z3 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z3 == 0 goto label5;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $z4 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z4 != 0 goto label5;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label5:
        $z8 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z8 == 0 goto label6;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i2 = (int) -1;

        $r12 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getCharsAsString(int)>($i2);

        goto label7;

     label6:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r12 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return $r12;
    }

    public java.lang.String getText(int)
    {
        java.lang.AssertionError $r15, $r16, $r17;
        org.apache.xmlbeans.impl.store.Validate r0;
        java.lang.StringBuffer $r2, $r9, $r11;
        int i0, $i1, $i3;
        java.lang.String $r3, $r4, $r6, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.xmlbeans.impl.store.Cur $r1, $r5, $r7, $r13;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r14 = virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getValueAsString(int)>(i0);

        return $r14;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z6 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z6 != 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label2:
        $z2 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $z5 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z5 != 0 goto label4;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $i1 = virtualinvoke $r11.<java.lang.StringBuffer: int length()>();

        if $i1 > 0 goto label4;

     label3:
        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label4:
        $z7 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z7 != 0 goto label5;

        $z3 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z3 == 0 goto label5;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $z4 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z4 != 0 goto label5;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label5:
        $z8 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z8 == 0 goto label6;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i3 = (int) -1;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getCharsAsString(int,int)>($i3, i0);

        return $r6;

     label6:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.String applyWhiteSpaceRule(java.lang.String,int)>($r3, i0);

        return $r4;
    }

    public boolean textIsWhitespace()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Cur $r1, $r4, $r7, $r10, $r12, $r13, $r15, $r18, $r20, $r21;
        java.lang.AssertionError $r22;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Locale $r5, $r8, $r16;
        org.apache.xmlbeans.impl.store.CharUtil $r6, $r9, $r17;
        java.lang.Object $r11, $r19;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r16 = $r15.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r17 = virtualinvoke $r16.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil getCharUtil()>();

        $r18 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r19 = virtualinvoke $r18.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getFirstChars()>();

        $r20 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i4 = $r20.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $r21 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $i3 = $r21.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        $z6 = virtualinvoke $r17.<org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(java.lang.Object,int,int)>($r19, $i4, $i3);

        return $z6;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z5 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _hasText>;

        if $z5 != 0 goto label2;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label2:
        $z2 = r0.<org.apache.xmlbeans.impl.store.Validate: boolean _oneChunk>;

        if $z2 == 0 goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r8 = $r7.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil getCharUtil()>();

        $r10 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i6 = (int) -1;

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>($i6);

        $r12 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i2 = $r12.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $r13 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _textCur>;

        $i1 = $r13.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        $z4 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(java.lang.Object,int,int)>($r11, $i2, $i1);

        return $z4;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: java.lang.StringBuffer _textSb>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil getCharUtil()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $z3 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(java.lang.Object,int,int)>($r3, 0, $i0);

        return $z3;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        java.lang.String r1, $r3;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String namespaceForPrefix(java.lang.String,boolean)>(r1, 1);

        return $r3;
    }

    public org.apache.xmlbeans.XmlCursor getLocationAsCursor()
    {
        org.apache.xmlbeans.impl.store.Validate r1;
        org.apache.xmlbeans.impl.store.Cursor $r0;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r1 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r0 = new org.apache.xmlbeans.impl.store.Cursor;

        $r2 = r1.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        specialinvoke $r0.<org.apache.xmlbeans.impl.store.Cursor: void <init>(org.apache.xmlbeans.impl.store.Cur)>($r2);

        return $r0;
    }

    public javax.xml.stream.Location getLocation()
    {
        org.apache.xmlbeans.impl.store.Validate r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        return null;
    }

    public java.lang.String getXsiType()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r1 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getAttrValue(javax.xml.namespace.QName)>($r1);

        return $r3;
    }

    public java.lang.String getXsiNil()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r1 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiNil>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getAttrValue(javax.xml.namespace.QName)>($r1);

        return $r3;
    }

    public java.lang.String getXsiLoc()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r1 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiLoc>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getAttrValue(javax.xml.namespace.QName)>($r1);

        return $r3;
    }

    public java.lang.String getXsiNoLoc()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        javax.xml.namespace.QName $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.store.Cur $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r1 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiNoLoc>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getAttrValue(javax.xml.namespace.QName)>($r1);

        return $r3;
    }

    public javax.xml.namespace.QName getName()
    {
        org.apache.xmlbeans.impl.store.Validate r0;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Validate;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAtLastPush()>();

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Validate: org.apache.xmlbeans.impl.store.Cur _cur>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

     label2:
        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.store.Validate: java.lang.Class class$org$apache$xmlbeans$impl$store$Validate>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Validate: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Validate");

        <org.apache.xmlbeans.impl.store.Validate: java.lang.Class class$org$apache$xmlbeans$impl$store$Validate> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Validate: java.lang.Class class$org$apache$xmlbeans$impl$store$Validate>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Validate: boolean $assertionsDisabled> = $z1;

        return;
    }
}
