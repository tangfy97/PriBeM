public class com.sun.jwt.resource.util.WrappingLayout extends java.lang.Object implements java.awt.LayoutManager
{
    private static final com.sun.jwt.resource.util.WrappingLayout$SizeGetter PREF_SIZE;
    private static final com.sun.jwt.resource.util.WrappingLayout$SizeGetter MIN_SIZE;

    public void <init>()
    {
        com.sun.jwt.resource.util.WrappingLayout r0;

        r0 := @this: com.sun.jwt.resource.util.WrappingLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addLayoutComponent(java.lang.String, java.awt.Component)
    {
        com.sun.jwt.resource.util.WrappingLayout r0;
        java.lang.String r1;
        java.awt.Component r2;

        r0 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.awt.Component;

        return;
    }

    public void removeLayoutComponent(java.awt.Component)
    {
        com.sun.jwt.resource.util.WrappingLayout r0;
        java.awt.Component r1;

        r0 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r1 := @parameter0: java.awt.Component;

        return;
    }

    private java.awt.Dimension layoutSize(java.awt.Container, com.sun.jwt.resource.util.WrappingLayout$SizeGetter)
    {
        com.sun.jwt.resource.util.WrappingLayout$SizeGetter r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17;
        java.awt.Container r0;
        java.awt.Component $r3;
        com.sun.jwt.resource.util.WrappingLayout r6;
        java.awt.Dimension $r1, $r2, $r5;

        r6 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r0 := @parameter0: java.awt.Container;

        r4 := @parameter1: com.sun.jwt.resource.util.WrappingLayout$SizeGetter;

        $i0 = virtualinvoke r0.<java.awt.Container: int getComponentCount()>();

        i13 = 0;

        i14 = 0;

        i15 = 0;

     label1:
        if i15 >= $i0 goto label4;

        $r3 = virtualinvoke r0.<java.awt.Container: java.awt.Component getComponent(int)>(i15);

        $r5 = virtualinvoke r4.<com.sun.jwt.resource.util.WrappingLayout$SizeGetter: java.awt.Dimension getSize(java.awt.Component)>($r3);

        $i11 = $r5.<java.awt.Dimension: int width>;

        if i13 >= $i11 goto label2;

        i13 = $r5.<java.awt.Dimension: int width>;

     label2:
        $i12 = $r5.<java.awt.Dimension: int height>;

        if i14 >= $i12 goto label3;

        i14 = $r5.<java.awt.Dimension: int height>;

     label3:
        i15 = i15 + 1;

        goto label1;

     label4:
        if $i0 >= 1 goto label5;

        $r2 = new java.awt.Dimension;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>(10, 10);

        return $r2;

     label5:
        $i1 = virtualinvoke r0.<java.awt.Container: int getWidth()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i13, $i1);

        i16 = $i2 / i13;

        i17 = $i0 / i16;

        $i3 = $i0 % i16;

        if $i3 == 0 goto label6;

        i17 = i17 + 1;

     label6:
        $r1 = new java.awt.Dimension;

        $i4 = i16 * i13;

        $i5 = $i4 + 2;

        $i10 = $i5 + i16;

        $i7 = i17 * i14;

        $i6 = i17 - 1;

        $i8 = $i7 + $i6;

        $i9 = $i8 + i17;

        specialinvoke $r1.<java.awt.Dimension: void <init>(int,int)>($i10, $i9);

        return $r1;
    }

    public java.awt.Dimension preferredLayoutSize(java.awt.Container)
    {
        com.sun.jwt.resource.util.WrappingLayout r0;
        java.awt.Dimension $r3;
        com.sun.jwt.resource.util.WrappingLayout$SizeGetter $r2;
        java.awt.Container r1;

        r0 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r1 := @parameter0: java.awt.Container;

        $r2 = <com.sun.jwt.resource.util.WrappingLayout: com.sun.jwt.resource.util.WrappingLayout$SizeGetter PREF_SIZE>;

        $r3 = specialinvoke r0.<com.sun.jwt.resource.util.WrappingLayout: java.awt.Dimension layoutSize(java.awt.Container,com.sun.jwt.resource.util.WrappingLayout$SizeGetter)>(r1, $r2);

        return $r3;
    }

    public java.awt.Dimension minimumLayoutSize(java.awt.Container)
    {
        com.sun.jwt.resource.util.WrappingLayout r0;
        java.awt.Dimension $r3;
        com.sun.jwt.resource.util.WrappingLayout$SizeGetter $r2;
        java.awt.Container r1;

        r0 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r1 := @parameter0: java.awt.Container;

        $r2 = <com.sun.jwt.resource.util.WrappingLayout: com.sun.jwt.resource.util.WrappingLayout$SizeGetter MIN_SIZE>;

        $r3 = specialinvoke r0.<com.sun.jwt.resource.util.WrappingLayout: java.awt.Dimension layoutSize(java.awt.Container,com.sun.jwt.resource.util.WrappingLayout$SizeGetter)>(r1, $r2);

        return $r3;
    }

    public void layoutContainer(java.awt.Container)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21;
        java.awt.Container r0;
        java.awt.Component $r1, $r2;
        com.sun.jwt.resource.util.WrappingLayout r4;
        java.awt.Dimension $r3;

        r4 := @this: com.sun.jwt.resource.util.WrappingLayout;

        r0 := @parameter0: java.awt.Container;

        $i0 = virtualinvoke r0.<java.awt.Container: int getComponentCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        i15 = 0;

        i16 = 0;

        i17 = 0;

     label2:
        if i17 >= $i0 goto label5;

        $r2 = virtualinvoke r0.<java.awt.Container: java.awt.Component getComponent(int)>(i17);

        $r3 = virtualinvoke $r2.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i13 = $r3.<java.awt.Dimension: int width>;

        if i15 >= $i13 goto label3;

        i15 = $r3.<java.awt.Dimension: int width>;

     label3:
        $i14 = $r3.<java.awt.Dimension: int height>;

        if i16 >= $i14 goto label4;

        i16 = $r3.<java.awt.Dimension: int height>;

     label4:
        i17 = i17 + 1;

        goto label2;

     label5:
        $i1 = virtualinvoke r0.<java.awt.Container: int getWidth()>();

        $i2 = $i1 / i15;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i3);

        i18 = $i0 / $i4;

        $i5 = $i0 % $i4;

        if $i5 == 0 goto label6;

     label6:
        i19 = 1;

        i20 = 0;

        i21 = 0;

     label7:
        if i21 >= $i0 goto label9;

        $r1 = virtualinvoke r0.<java.awt.Container: java.awt.Component getComponent(int)>(i21);

        i6 = i15;

        $i7 = i19 + i15;

        $i8 = virtualinvoke r0.<java.awt.Container: int getWidth()>();

        if $i7 <= $i8 goto label8;

        i19 = 1;

        i20 = i20 + 1;

     label8:
        $i9 = i20 * i16;

        $i10 = $i9 + 1;

        $i12 = $i10 + i20;

        virtualinvoke $r1.<java.awt.Component: void setBounds(int,int,int,int)>(i19, $i12, i6, i16);

        $i11 = i6 + 1;

        i19 = i19 + $i11;

        i21 = i21 + 1;

        goto label7;

     label9:
        return;
    }

    static void <clinit>()
    {
        com.sun.jwt.resource.util.WrappingLayout$SizeGetter $r0;
        com.sun.jwt.resource.util.WrappingLayout$1 $r1;

        $r0 = new com.sun.jwt.resource.util.WrappingLayout$SizeGetter;

        specialinvoke $r0.<com.sun.jwt.resource.util.WrappingLayout$SizeGetter: void <init>(com.sun.jwt.resource.util.WrappingLayout$1)>(null);

        <com.sun.jwt.resource.util.WrappingLayout: com.sun.jwt.resource.util.WrappingLayout$SizeGetter PREF_SIZE> = $r0;

        $r1 = new com.sun.jwt.resource.util.WrappingLayout$1;

        specialinvoke $r1.<com.sun.jwt.resource.util.WrappingLayout$1: void <init>()>();

        <com.sun.jwt.resource.util.WrappingLayout: com.sun.jwt.resource.util.WrappingLayout$SizeGetter MIN_SIZE> = $r1;

        return;
    }
}
