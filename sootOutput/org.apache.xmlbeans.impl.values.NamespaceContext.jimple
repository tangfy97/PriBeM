public class org.apache.xmlbeans.impl.values.NamespaceContext extends java.lang.Object implements org.apache.xmlbeans.impl.common.PrefixResolver
{
    private static final int TYPE_STORE;
    private static final int XML_OBJECT;
    private static final int MAP;
    private static final int START_ELEMENT;
    private static final int RESOLVER;
    private java.lang.Object _obj;
    private int _code;
    private static java.lang.ThreadLocal tl_namespaceContextStack;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$values$NamespaceContext;

    public void <init>(java.util.Map)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r0;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code> = 3;

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj> = r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.impl.values.TypeStore)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r0;
        org.apache.xmlbeans.impl.values.TypeStore r1;

        r0 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r1 := @parameter0: org.apache.xmlbeans.impl.values.TypeStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code> = 1;

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj> = r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r0;
        org.apache.xmlbeans.XmlObject r1;

        r0 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code> = 2;

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj> = r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.xml.stream.StartElement)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r0;
        org.apache.xmlbeans.xml.stream.StartElement r1;

        r0 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r1 := @parameter0: org.apache.xmlbeans.xml.stream.StartElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code> = 4;

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj> = r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.impl.common.PrefixResolver)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r0;
        org.apache.xmlbeans.impl.common.PrefixResolver r1;

        r0 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r1 := @parameter0: org.apache.xmlbeans.impl.common.PrefixResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code> = 5;

        r0.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj> = r1;

        return;
    }

    private static org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack getNamespaceContextStack()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack $r2, r4;

        $r0 = <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.ThreadLocal tl_namespaceContextStack>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack) $r1;

        if r4 != null goto label1;

        $r2 = new org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack;

        specialinvoke $r2.<org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack: void <init>(org.apache.xmlbeans.impl.values.NamespaceContext$1)>(null);

        r4 = $r2;

        $r3 = <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.ThreadLocal tl_namespaceContextStack>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

     label1:
        return r4;
    }

    public static void push(org.apache.xmlbeans.impl.values.NamespaceContext)
    {
        org.apache.xmlbeans.impl.values.NamespaceContext r1;
        org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack $r0;

        r1 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceContext;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack getNamespaceContextStack()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack: void push(org.apache.xmlbeans.impl.values.NamespaceContext)>(r1);

        return;
    }

    public static void pop()
    {
        java.lang.ThreadLocal $r2;
        int $i0;
        org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack $r0;
        java.util.ArrayList $r1;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack getNamespaceContextStack()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack: void pop()>();

        $r1 = $r0.<org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack: java.util.ArrayList stack>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r2 = <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.ThreadLocal tl_namespaceContextStack>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

     label1:
        return;
    }

    public static org.apache.xmlbeans.impl.common.PrefixResolver getCurrent()
    {
        org.apache.xmlbeans.impl.values.NamespaceContext $r1;
        org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack $r0;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack getNamespaceContextStack()>();

        $r1 = $r0.<org.apache.xmlbeans.impl.values.NamespaceContext$NamespaceContextStack: org.apache.xmlbeans.impl.values.NamespaceContext current>;

        return $r1;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        java.util.Map $r9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.values.NamespaceContext r1;
        org.apache.xmlbeans.impl.values.TypeStore $r20, $r23;
        org.apache.xmlbeans.xml.stream.StartElement $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r19;
        java.lang.Throwable $r26;
        org.apache.xmlbeans.XmlCursor $r15;
        java.lang.AssertionError $r25;
        org.apache.xmlbeans.XmlCursor$TokenType $r16, $r17;
        int $i0;
        java.lang.String r0, $r4, $r7, $r11, $r18, $r21, $r24;
        org.apache.xmlbeans.XmlObject $r14;
        org.apache.xmlbeans.impl.common.PrefixResolver $r3;
        java.lang.Object $r2, $r5, $r8, $r10, $r13, $r22, r27;
        java.lang.Class $r12;

        r1 := @this: org.apache.xmlbeans.impl.values.NamespaceContext;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z3 == 0 goto label01;

        return "http://www.w3.org/XML/1998/namespace";

     label01:
        $i0 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: int _code>;

        tableswitch($i0)
        {
            case 1: goto label10;
            case 2: goto label02;
            case 3: goto label09;
            case 4: goto label11;
            case 5: goto label12;
            default: goto label13;
        };

     label02:
        r27 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r12 = virtualinvoke r27.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>($r12);

        if $z0 == 0 goto label03;

        r27 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>(r27);

     label03:
        $z1 = r27 instanceof org.apache.xmlbeans.impl.values.TypeStoreUser;

        if $z1 == 0 goto label04;

        $r19 = (org.apache.xmlbeans.impl.values.TypeStoreUser) r27;

        $r20 = interfaceinvoke $r19.<org.apache.xmlbeans.impl.values.TypeStoreUser: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.impl.values.TypeStore: java.lang.String getNamespaceForPrefix(java.lang.String)>(r0);

        return $r21;

     label04:
        $r13 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r14 = (org.apache.xmlbeans.XmlObject) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        if $r15 == null goto label09;

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $r17 = <org.apache.xmlbeans.XmlCursor$TokenType: org.apache.xmlbeans.XmlCursor$TokenType ATTR>;

        if $r16 != $r17 goto label05;

        interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

     label05:
        $r18 = interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: java.lang.String namespaceForPrefix(java.lang.String)>(r0);

     label06:
        interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r18;

     label07:
        $r26 := @caughtexception;

     label08:
        interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        throw $r26;

     label09:
        $r8 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r9 = (java.util.Map) $r8;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = (java.lang.String) $r10;

        return $r11;

     label10:
        $r22 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r23 = (org.apache.xmlbeans.impl.values.TypeStore) $r22;

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.impl.values.TypeStore: java.lang.String getNamespaceForPrefix(java.lang.String)>(r0);

        return $r24;

     label11:
        $r5 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r6 = (org.apache.xmlbeans.xml.stream.StartElement) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.xml.stream.StartElement: java.lang.String getNamespaceUri(java.lang.String)>(r0);

        return $r7;

     label12:
        $r2 = r1.<org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Object _obj>;

        $r3 = (org.apache.xmlbeans.impl.common.PrefixResolver) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.common.PrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)>(r0);

        return $r4;

     label13:
        $z2 = <org.apache.xmlbeans.impl.values.NamespaceContext: boolean $assertionsDisabled>;

        if $z2 != 0 goto label14;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>(java.lang.Object)>("Improperly initialized NamespaceContext.");

        throw $r25;

     label14:
        return null;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r1;
        java.lang.Class $r0, $r2;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.values.NamespaceContext: int RESOLVER> = 5;

        <org.apache.xmlbeans.impl.values.NamespaceContext: int START_ELEMENT> = 4;

        <org.apache.xmlbeans.impl.values.NamespaceContext: int MAP> = 3;

        <org.apache.xmlbeans.impl.values.NamespaceContext: int XML_OBJECT> = 2;

        <org.apache.xmlbeans.impl.values.NamespaceContext: int TYPE_STORE> = 1;

        $r0 = <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Class class$org$apache$xmlbeans$impl$values$NamespaceContext>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.values.NamespaceContext");

        <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Class class$org$apache$xmlbeans$impl$values$NamespaceContext> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.Class class$org$apache$xmlbeans$impl$values$NamespaceContext>;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.values.NamespaceContext: boolean $assertionsDisabled> = $z1;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.xmlbeans.impl.values.NamespaceContext: java.lang.ThreadLocal tl_namespaceContextStack> = $r1;

        return;
    }
}
