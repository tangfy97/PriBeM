public class org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer extends org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler
{
    private static final org.waveprotocol.wave.model.document.util.Property GADGET_WIDGET;
    private static final org.waveprotocol.wave.client.gadget.renderer.Locale CURRENT_LOCALE;
    private final org.waveprotocol.wave.model.id.WaveletName waveletName;
    private final org.waveprotocol.wave.model.conversation.ConversationBlip blip;
    private final org.waveprotocol.wave.model.supplement.ObservableSupplementedWave supplement;
    private final org.waveprotocol.wave.client.account.ProfileManager profileManager;
    private final java.lang.String loginName;

    public void <init>(org.waveprotocol.wave.model.id.WaveletName, org.waveprotocol.wave.model.conversation.ConversationBlip, org.waveprotocol.wave.model.supplement.ObservableSupplementedWave, org.waveprotocol.wave.client.account.ProfileManager, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler$Flow $r1;
        org.waveprotocol.wave.model.conversation.ConversationBlip r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave r4;
        java.lang.String r6;
        org.waveprotocol.wave.client.account.ProfileManager r5;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        r3 := @parameter1: org.waveprotocol.wave.model.conversation.ConversationBlip;

        r4 := @parameter2: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave;

        r5 := @parameter3: org.waveprotocol.wave.client.account.ProfileManager;

        r6 := @parameter4: java.lang.String;

        $r1 = <org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler$Flow: org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler$Flow USE_WIDGET>;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void <init>(org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler$Flow)>($r1);

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.id.WaveletName waveletName> = r2;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.conversation.ConversationBlip blip> = r3;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave supplement> = r4;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.account.ProfileManager profileManager> = r5;

        r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: java.lang.String loginName> = r6;

        return;
    }

    protected com.google.gwt.user.client.ui.Widget createGwtWidget(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.model.id.WaveletName $r7;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r0;
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave $r5;
        org.waveprotocol.wave.model.document.util.Property $r10;
        org.waveprotocol.wave.model.conversation.ConversationBlip $r6;
        com.google.gwt.user.client.ui.Widget $r12;
        org.waveprotocol.wave.client.gadget.renderer.Locale $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidgetUi $r11;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r9;
        org.waveprotocol.wave.client.editor.content.ContentElement $r8;
        java.lang.String $r2;
        org.waveprotocol.wave.client.account.ProfileManager $r4;

        r1 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        staticinvoke <org.waveprotocol.wave.client.gadget.GadgetLog: void log(java.lang.String)>("GadgetRenderer createGwtWidget");

        $r8 = (org.waveprotocol.wave.client.editor.content.ContentElement) r0;

        $r7 = r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.id.WaveletName waveletName>;

        $r6 = r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.conversation.ConversationBlip blip>;

        $r5 = r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave supplement>;

        $r4 = r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.account.ProfileManager profileManager>;

        $r3 = <org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.Locale CURRENT_LOCALE>;

        $r2 = r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: java.lang.String loginName>;

        $r9 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget createGadgetWidget(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.conversation.ConversationBlip,org.waveprotocol.wave.model.supplement.ObservableSupplementedWave,org.waveprotocol.wave.client.account.ProfileManager,org.waveprotocol.wave.client.gadget.renderer.Locale,java.lang.String)>($r8, $r7, $r6, $r5, $r4, $r3, $r2);

        $r10 = <org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.document.util.Property GADGET_WIDGET>;

        interfaceinvoke r0.<org.waveprotocol.wave.client.editor.content.Renderer$Renderable: void setProperty(org.waveprotocol.wave.model.document.util.Property,java.lang.Object)>($r10, $r9);

        $r11 = virtualinvoke $r9.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: org.waveprotocol.wave.client.gadget.renderer.GadgetWidgetUi getWidget()>();

        $r12 = (com.google.gwt.user.client.ui.Widget) $r11;

        return $r12;
    }

    public void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void createWidget()>();

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void fanoutChildren(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onDescendantsMutated(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        return;
    }

    public org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.model.document.util.Property $r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r4;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.Object $r2;

        r4 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = <org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.document.util.Property GADGET_WIDGET>;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.Object getProperty(org.waveprotocol.wave.model.document.util.Property)>($r1);

        $r3 = (org.waveprotocol.wave.client.gadget.renderer.GadgetWidget) $r2;

        return $r3;
    }

    public void onChildAdded(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void onChildAdded(org.waveprotocol.wave.client.editor.content.ContentNode)>(r3);

        specialinvoke r0.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void onChildAdded(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;
        java.lang.String r3, r4, r5;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void onAttributeModified(java.lang.String,java.lang.String)>(r3, r4);

        specialinvoke r0.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void onAttributeModified(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r5, r4);

        return;
    }

    public void onChildRemoved(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void onRemovingChild(org.waveprotocol.wave.client.editor.content.ContentNode)>(r3);

        specialinvoke r0.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void onChildRemoved(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public void onDescendantsMutated(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void onDescendantsMutated()>();

        specialinvoke r0.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void onDescendantsMutated(java.lang.Object)>(r1);

        return;
    }

    public void onRemovedFromParent(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r1;
        org.waveprotocol.wave.client.gadget.renderer.GadgetWidget $r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0, r2;

        r1 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r0 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        if r0 != null goto label1;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.GadgetWidget getWidget(org.waveprotocol.wave.client.editor.content.ContentElement)>(r2);

        virtualinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.GadgetWidget: void setInactive()>();

     label1:
        specialinvoke r1.<org.waveprotocol.wave.client.editor.gwt.GwtRenderingMutationHandler: void onRemovedFromParent(java.lang.Object,java.lang.Object)>(r2, r0);

        return;
    }

    public volatile void onRemovedFromParent(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onRemovedFromParent(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentElement)>($r4, $r3);

        return;
    }

    public volatile void onChildRemoved(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onChildRemoved(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>($r4, $r3);

        return;
    }

    public volatile void onAttributeModified(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r5;
        java.lang.String r2, r3, r4;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,java.lang.String,java.lang.String)>($r5, r2, r3, r4);

        return;
    }

    public volatile void onDescendantsMutated(java.lang.Object)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onDescendantsMutated(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    public volatile void onChildAdded(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r4;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onChildAdded(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>($r4, $r3);

        return;
    }

    public volatile void onActivationStart(java.lang.Object)
    {
        org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.gadget.renderer.SessionLocale $r1;
        org.waveprotocol.wave.model.document.util.Property$ImmutableProperty $r0;

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.Property: org.waveprotocol.wave.model.document.util.Property$ImmutableProperty immutable(java.lang.String)>("GadgetWidget");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.model.document.util.Property GADGET_WIDGET> = $r0;

        $r1 = new org.waveprotocol.wave.client.gadget.renderer.SessionLocale;

        specialinvoke $r1.<org.waveprotocol.wave.client.gadget.renderer.SessionLocale: void <init>(java.lang.String)>("");

        <org.waveprotocol.wave.client.gadget.renderer.GadgetRenderer: org.waveprotocol.wave.client.gadget.renderer.Locale CURRENT_LOCALE> = $r1;

        return;
    }
}
