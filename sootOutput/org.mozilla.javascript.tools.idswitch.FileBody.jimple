public class org.mozilla.javascript.tools.idswitch.FileBody extends java.lang.Object
{
    private char[] buffer;
    private int bufferEnd;
    private int lineBegin;
    private int lineEnd;
    private int nextLineStart;
    private int lineNumber;
    org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace;
    org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem lastReplace;

    public void <init>()
    {
        char[] $r1;
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[16384];

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer> = $r1;

        return;
    }

    public char[] getBuffer()
    {
        char[] $r1;
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        return $r1;
    }

    public void readData(java.io.Reader) throws java.io.IOException
    {
        org.mozilla.javascript.tools.idswitch.FileBody r0;
        java.io.Reader r2;
        int i0, i1, $i2, $i3;
        char[] $r1, r3, $r4, $r5;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        r2 := @parameter0: java.io.Reader;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        $r5 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        $i2 = i0 - i1;

        $i3 = virtualinvoke r2.<java.io.Reader: int read(char[],int,int)>($r5, i1, $i2);

        if $i3 >= 0 goto label2;

        goto label3;

     label2:
        i1 = i1 + $i3;

        if i0 != i1 goto label1;

        i0 = i0 * 2;

        r3 = newarray (char)[i0];

        $r4 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, i1);

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer> = r3;

        goto label1;

     label3:
        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd> = i1;

        return;
    }

    public void writeInitialData(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r0;
        int $i0;
        char[] $r2;
        org.mozilla.javascript.tools.idswitch.FileBody r1;

        r1 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        r0 := @parameter0: java.io.Writer;

        $r2 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        $i0 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>($r2, 0, $i0);

        return;
    }

    public void writeData(java.io.Writer) throws java.io.IOException
    {
        org.mozilla.javascript.tools.idswitch.FileBody r0;
        org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem r5;
        int $i0, $i1, i2, i3, i4;
        java.io.Writer r1;
        char[] $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        r1 := @parameter0: java.io.Writer;

        i3 = 0;

        r5 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

     label1:
        if r5 == null goto label3;

        $i1 = r5.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: int begin>;

        i2 = $i1 - i3;

        if i2 <= 0 goto label2;

        $r4 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r4, i3, i2);

     label2:
        $r3 = r5.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: java.lang.String replacement>;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r3);

        i3 = r5.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: int end>;

        r5 = r5.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next>;

        goto label1;

     label3:
        $i0 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        i4 = $i0 - i3;

        if i4 == 0 goto label4;

        $r2 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r2, i3, i4);

     label4:
        return;
    }

    public boolean wasModified()
    {
        org.mozilla.javascript.tools.idswitch.FileBody r0;
        org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem $r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean setReplacement(int, int, java.lang.String)
    {
        org.mozilla.javascript.tools.idswitch.FileBody r1;
        org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem $r3, $r4, $r5, $r6, $r7, r8, r9;
        int i0, i1, $i2, $i3;
        char[] $r2;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $r2 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        $z0 = staticinvoke <org.mozilla.javascript.tools.idswitch.FileBody: boolean equals(java.lang.String,char[],int,int)>(r0, $r2, i0, i1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = new org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem;

        specialinvoke $r3.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: void <init>(int,int,java.lang.String)>(i0, i1, r0);

        $r4 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

        if $r4 != null goto label2;

        r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem lastReplace> = $r3;

        r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace> = $r3;

        goto label7;

     label2:
        $r5 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

        $i2 = $r5.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: int begin>;

        if i0 >= $i2 goto label3;

        $r7 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

        $r3.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next> = $r7;

        r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace> = $r3;

        goto label7;

     label3:
        r8 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace>;

        r9 = r8.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next>;

     label4:
        if r9 == null goto label6;

        $i3 = r9.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: int begin>;

        if i0 >= $i3 goto label5;

        $r3.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next> = r9;

        r8.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next> = $r3;

        goto label6;

     label5:
        r8 = r9;

        r9 = r9.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next>;

        goto label4;

     label6:
        if r9 != null goto label7;

        $r6 = r1.<org.mozilla.javascript.tools.idswitch.FileBody: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem lastReplace>;

        $r6.<org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem: org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next> = $r3;

     label7:
        return 1;
    }

    public int getLineNumber()
    {
        int $i0;
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $i0 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineNumber>;

        return $i0;
    }

    public int getLineBegin()
    {
        int $i0;
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $i0 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineBegin>;

        return $i0;
    }

    public int getLineEnd()
    {
        int $i0;
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $i0 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineEnd>;

        return $i0;
    }

    public void startLineLoop()
    {
        org.mozilla.javascript.tools.idswitch.FileBody r0;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineNumber> = 0;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart> = 0;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineEnd> = 0;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineBegin> = 0;

        return;
    }

    public boolean nextLine()
    {
        org.mozilla.javascript.tools.idswitch.FileBody r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15;
        char $c6;
        char[] $r1, $r2;

        r0 := @this: org.mozilla.javascript.tools.idswitch.FileBody;

        $i1 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart>;

        $i0 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        if $i1 != $i0 goto label1;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineNumber> = 0;

        return 0;

     label1:
        i8 = 0;

        i9 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart>;

     label2:
        $i2 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        if i9 == $i2 goto label4;

        $r2 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        i8 = $r2[i9];

        if i8 == 10 goto label4;

        if i8 != 13 goto label3;

        goto label4;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        $i10 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart>;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineBegin> = $i10;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineEnd> = i9;

        $i11 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        if i9 != $i11 goto label5;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart> = i9;

        goto label7;

     label5:
        if i8 != 13 goto label6;

        $i4 = i9 + 1;

        $i3 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int bufferEnd>;

        if $i4 == $i3 goto label6;

        $r1 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: char[] buffer>;

        $i5 = i9 + 1;

        $c6 = $r1[$i5];

        $i15 = (int) $c6;

        if $i15 != 10 goto label6;

        $i7 = i9 + 2;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart> = $i7;

        goto label7;

     label6:
        $i12 = i9 + 1;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int nextLineStart> = $i12;

     label7:
        $i13 = r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineNumber>;

        $i14 = $i13 + 1;

        r0.<org.mozilla.javascript.tools.idswitch.FileBody: int lineNumber> = $i14;

        return 1;
    }

    private static boolean equals(java.lang.String, char[], int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, i7, $i8, $i9;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = i1 - i2;

        if $i0 != $i3 goto label4;

        i6 = i2;

        i7 = 0;

     label1:
        if i6 == i1 goto label3;

        $c4 = r1[i6];

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c4;

        $i9 = (int) $c5;

        if $i8 == $i9 goto label2;

        return 0;

     label2:
        i6 = i6 + 1;

        i7 = i7 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }
}
