abstract class com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy extends com.google.common.collect.ForwardingConcurrentMap implements java.io.Serializable
{
    private static final long serialVersionUID;
    final com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength;
    final com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength;
    final com.google.common.base.Equivalence keyEquivalence;
    final com.google.common.base.Equivalence valueEquivalence;
    final long expireAfterWriteNanos;
    final long expireAfterAccessNanos;
    final int maximumSize;
    final int concurrencyLevel;
    final com.google.common.collect.MapEvictionListener evictionListener;
    transient java.util.concurrent.ConcurrentMap delegate;

    void <init>(com.google.common.collect.CustomConcurrentHashMap$Strength, com.google.common.collect.CustomConcurrentHashMap$Strength, com.google.common.base.Equivalence, com.google.common.base.Equivalence, long, long, int, int, com.google.common.collect.MapEvictionListener, java.util.concurrent.ConcurrentMap)
    {
        com.google.common.collect.CustomConcurrentHashMap$Strength r1, r2;
        com.google.common.base.Equivalence r3, r4;
        com.google.common.collect.MapEvictionListener r5;
        long l0, l1;
        java.util.concurrent.ConcurrentMap r6;
        int i2, i3;
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$Strength;

        r2 := @parameter1: com.google.common.collect.CustomConcurrentHashMap$Strength;

        r3 := @parameter2: com.google.common.base.Equivalence;

        r4 := @parameter3: com.google.common.base.Equivalence;

        l0 := @parameter4: long;

        l1 := @parameter5: long;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        r5 := @parameter8: com.google.common.collect.MapEvictionListener;

        r6 := @parameter9: java.util.concurrent.ConcurrentMap;

        specialinvoke r0.<com.google.common.collect.ForwardingConcurrentMap: void <init>()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength> = r1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength> = r2;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.base.Equivalence keyEquivalence> = r3;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.base.Equivalence valueEquivalence> = r4;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterWriteNanos> = l0;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterAccessNanos> = l1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: int maximumSize> = i2;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: int concurrencyLevel> = i3;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.MapEvictionListener evictionListener> = r5;

        r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate> = r6;

        return;
    }

    protected java.util.concurrent.ConcurrentMap delegate()
    {
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        return $r1;
    }

    void writeMapTo(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.concurrent.ConcurrentMap $r2, $r3;
        int $i0;
        java.io.ObjectOutputStream r0;
        java.lang.Object $r6, $r8, $r9;
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r1;
        boolean $z0;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        r0 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r1.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        $i0 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: int size()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r3 = r1.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r8);

        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        goto label1;

     label2:
        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

        return;
    }

    com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) throws java.io.IOException
    {
        java.io.ObjectInputStream r0;
        long $l2, $l4, $l8, $l9;
        byte $b3, $b5;
        int $i0, $i1, $i6, $i7, $i10, $i11, $i13;
        com.google.common.collect.CustomConcurrentHashMap$Strength $r4, $r6;
        com.google.common.base.Equivalence $r8, $r10;
        com.google.common.collect.MapEvictionListener $r13;
        java.util.concurrent.TimeUnit $r14, $r15;
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r3;
        com.google.common.collect.MapMaker $r2, $r5, $r7, $r9, $r11, $r12, $r16;

        r3 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        r0 := @parameter0: java.io.ObjectInputStream;

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        $r16 = new com.google.common.collect.MapMaker;

        specialinvoke $r16.<com.google.common.collect.MapMaker: void <init>()>();

        $r2 = virtualinvoke $r16.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker initialCapacity(int)>($i0);

        $r4 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength>;

        $r5 = virtualinvoke $r2.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.CustomConcurrentHashMap$Strength)>($r4);

        $r6 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength>;

        $r7 = virtualinvoke $r5.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.CustomConcurrentHashMap$Strength)>($r6);

        $r8 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.base.Equivalence keyEquivalence>;

        $r9 = virtualinvoke $r7.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker privateKeyEquivalence(com.google.common.base.Equivalence)>($r8);

        $r10 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.base.Equivalence valueEquivalence>;

        $r11 = virtualinvoke $r9.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker privateValueEquivalence(com.google.common.base.Equivalence)>($r10);

        $i1 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: int concurrencyLevel>;

        $r12 = virtualinvoke $r11.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker concurrencyLevel(int)>($i1);

        $r13 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: com.google.common.collect.MapEvictionListener evictionListener>;

        virtualinvoke $r12.<com.google.common.collect.MapMaker: com.google.common.collect.GenericMapMaker evictionListener(com.google.common.collect.MapEvictionListener)>($r13);

        $l2 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterWriteNanos>;

        $b3 = $l2 cmp 0L;

        $i10 = (int) $b3;

        if $i10 <= 0 goto label1;

        $l9 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterWriteNanos>;

        $r15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        virtualinvoke $r12.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit)>($l9, $r15);

     label1:
        $l4 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterAccessNanos>;

        $b5 = $l4 cmp 0L;

        $i11 = (int) $b5;

        if $i11 <= 0 goto label2;

        $l8 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long expireAfterAccessNanos>;

        $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        virtualinvoke $r12.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit)>($l8, $r14);

     label2:
        $i6 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: int maximumSize>;

        $i13 = (int) -1;

        if $i6 == $i13 goto label3;

        $i7 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: int maximumSize>;

        virtualinvoke $r12.<com.google.common.collect.MapMaker: com.google.common.collect.MapMaker maximumSize(int)>($i7);

     label3:
        return $r12;
    }

    void readEntries(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.lang.Object $r1, $r2;
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r3;
        java.util.concurrent.ConcurrentMap $r4;

        r3 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        r0 := @parameter0: java.io.ObjectInputStream;

     label1:
        $r1 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        if $r1 != null goto label2;

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r4 = r3.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate>;

        interfaceinvoke $r4.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        goto label1;

     label3:
        return;
    }

    protected volatile java.util.Map delegate()
    {
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        $r1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy;

        $r1 = virtualinvoke r0.<com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy: long serialVersionUID> = 2L;

        return;
    }
}
