public class org.apache.cxf.attachment.ImageDataContentHandler extends java.lang.Object implements javax.activation.DataContentHandler
{
    private static final java.awt.datatransfer.DataFlavor[] FLAVORS;

    public void <init>()
    {
        org.apache.cxf.attachment.ImageDataContentHandler r0;

        r0 := @this: org.apache.cxf.attachment.ImageDataContentHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getContent(javax.activation.DataSource) throws java.io.IOException
    {
        java.awt.image.BufferedImage $r2;
        javax.activation.DataSource r0;
        org.apache.cxf.attachment.ImageDataContentHandler r3;
        java.io.InputStream $r1;

        r3 := @this: org.apache.cxf.attachment.ImageDataContentHandler;

        r0 := @parameter0: javax.activation.DataSource;

        $r1 = interfaceinvoke r0.<javax.activation.DataSource: java.io.InputStream getInputStream()>();

        $r2 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>($r1);

        return $r2;
    }

    public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor, javax.activation.DataSource) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
    {
        java.awt.datatransfer.DataFlavor r1, r2;
        java.awt.datatransfer.DataFlavor[] r0;
        org.apache.cxf.attachment.ImageDataContentHandler r3;
        int i0, i1;
        javax.activation.DataSource r4;
        java.lang.Object $r5;
        boolean $z0;

        r3 := @this: org.apache.cxf.attachment.ImageDataContentHandler;

        r2 := @parameter0: java.awt.datatransfer.DataFlavor;

        r4 := @parameter1: javax.activation.DataSource;

        r0 = <org.apache.cxf.attachment.ImageDataContentHandler: java.awt.datatransfer.DataFlavor[] FLAVORS>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = virtualinvoke r1.<java.awt.datatransfer.DataFlavor: boolean equals(java.awt.datatransfer.DataFlavor)>(r2);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r3.<org.apache.cxf.attachment.ImageDataContentHandler: java.lang.Object getContent(javax.activation.DataSource)>(r4);

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()
    {
        java.awt.datatransfer.DataFlavor[] $r0;
        org.apache.cxf.attachment.ImageDataContentHandler r1;

        r1 := @this: org.apache.cxf.attachment.ImageDataContentHandler;

        $r0 = <org.apache.cxf.attachment.ImageDataContentHandler: java.awt.datatransfer.DataFlavor[] FLAVORS>;

        return $r0;
    }

    public void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r11, $r12;
        org.apache.cxf.attachment.ImageDataContentHandler r20;
        java.lang.String $r6, r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.OutputStream r9;
        java.util.Iterator $r14;
        java.awt.Image $r17;
        java.awt.image.BufferedImage $r18;
        java.io.IOException $r1;
        java.io.FileInputStream $r7;
        java.io.File $r8;
        javax.imageio.stream.ImageOutputStream $r19;
        javax.imageio.ImageWriter r16;
        java.lang.Object r0, $r15;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.io.InputStream $r10;

        r20 := @this: org.apache.cxf.attachment.ImageDataContentHandler;

        r0 := @parameter0: java.lang.Object;

        r13 := @parameter1: java.lang.String;

        r9 := @parameter2: java.io.OutputStream;

        $z0 = r0 instanceof java.awt.Image;

        if $z0 == 0 goto label2;

        $r14 = staticinvoke <javax.imageio.ImageIO: java.util.Iterator getImageWritersByMIMEType(java.lang.String)>(r13);

        $z4 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label1;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (javax.imageio.ImageWriter) $r15;

        $r17 = (java.awt.Image) r0;

        $r18 = staticinvoke <org.apache.cxf.attachment.ImageDataContentHandler: java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image)>($r17);

        $r19 = staticinvoke <javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>(r9);

        virtualinvoke r16.<javax.imageio.ImageWriter: void setOutput(java.lang.Object)>($r19);

        virtualinvoke r16.<javax.imageio.ImageWriter: void write(java.awt.image.RenderedImage)>($r18);

        virtualinvoke r16.<javax.imageio.ImageWriter: void dispose()>();

        interfaceinvoke $r19.<javax.imageio.stream.ImageOutputStream: void flush()>();

        interfaceinvoke $r19.<javax.imageio.stream.ImageOutputStream: void close()>();

        return;

     label1:
        goto label6;

     label2:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label3;

        $r11 = (byte[]) r0;

        $r12 = (byte[]) $r11;

        virtualinvoke r9.<java.io.OutputStream: void write(byte[])>($r12);

        goto label6;

     label3:
        $z2 = r0 instanceof java.io.InputStream;

        if $z2 == 0 goto label4;

        $r10 = (java.io.InputStream) r0;

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)>($r10, r9);

        goto label6;

     label4:
        $z3 = r0 instanceof java.io.File;

        if $z3 == 0 goto label5;

        $r7 = new java.io.FileInputStream;

        $r8 = (java.io.File) r0;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)>($r7, r9);

        goto label6;

     label5:
        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attachment type not spported ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label6:
        return;
    }

    private static java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image) throws java.io.IOException
    {
        org.apache.cxf.attachment.ImageDataContentHandler$1 $r2;
        java.awt.Image r0;
        java.awt.image.BufferedImage $r3, $r5;
        java.io.IOException $r7;
        java.awt.MediaTracker $r1;
        java.awt.Graphics2D $r4;
        java.lang.InterruptedException $r6;
        int $i0, $i1;
        java.lang.String $r8;
        boolean $z0;

        r0 := @parameter0: java.awt.Image;

        $z0 = r0 instanceof java.awt.image.BufferedImage;

        if $z0 == 0 goto label1;

        $r5 = (java.awt.image.BufferedImage) r0;

        return $r5;

     label1:
        $r1 = new java.awt.MediaTracker;

        $r2 = new org.apache.cxf.attachment.ImageDataContentHandler$1;

        specialinvoke $r2.<org.apache.cxf.attachment.ImageDataContentHandler$1: void <init>()>();

        specialinvoke $r1.<java.awt.MediaTracker: void <init>(java.awt.Component)>($r2);

        virtualinvoke $r1.<java.awt.MediaTracker: void addImage(java.awt.Image,int)>(r0, 0);

     label2:
        virtualinvoke $r1.<java.awt.MediaTracker: void waitForAll()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke $r6.<java.lang.InterruptedException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r7.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        $r3 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r0.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r0.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        specialinvoke $r3.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        $r4 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r4.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r0, 0, 0, null);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        return $r3;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        javax.activation.ActivationDataFlavor $r3;
        java.awt.datatransfer.DataFlavor[] $r1, $r4;
        java.lang.String[] $r0;
        int $i0, i1, $i2, i3, i4;
        java.lang.String r2;

        $r0 = staticinvoke <javax.imageio.ImageIO: java.lang.String[] getReaderMIMETypes()>();

        $i0 = lengthof $r0;

        $r1 = newarray (java.awt.datatransfer.DataFlavor)[$i0];

        <org.apache.cxf.attachment.ImageDataContentHandler: java.awt.datatransfer.DataFlavor[] FLAVORS> = $r1;

        i3 = 0;

        i1 = lengthof $r0;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        r2 = $r0[i4];

        $r4 = <org.apache.cxf.attachment.ImageDataContentHandler: java.awt.datatransfer.DataFlavor[] FLAVORS>;

        $i2 = i3;

        i3 = i3 + 1;

        $r3 = new javax.activation.ActivationDataFlavor;

        specialinvoke $r3.<javax.activation.ActivationDataFlavor: void <init>(java.lang.Class,java.lang.String,java.lang.String)>(class "Ljava/awt/Image;", r2, "Image");

        $r4[$i2] = $r3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }
}
