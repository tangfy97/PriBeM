public class org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory extends java.lang.Object
{

    public void <init>()
    {
        org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory r0;

        r0 := @this: org.apache.tika.parser.microsoft.ooxml.OOXMLExtractorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.microsoft.ooxml.POIXMLTextExtractorDecorator $r14;
        org.apache.tika.metadata.Metadata r8;
        org.apache.poi.xwpf.extractor.XWPFWordExtractor $r16;
        org.apache.tika.parser.microsoft.ooxml.AbstractOOXMLExtractor r44;
        java.util.Locale $r1, r3;
        org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator $r15;
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r36;
        java.util.Set $r10;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r34;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor $r25;
        org.apache.poi.POIXMLTextExtractor $r12;
        org.apache.tika.io.CloseShieldInputStream $r6;
        org.apache.poi.openxml4j.opc.OPCPackage $r29, r42;
        org.apache.tika.parser.ParseContext r0;
        java.lang.StringBuilder $r20, $r21, $r22;
        org.apache.poi.openxml4j.opc.PackageAccess $r28;
        org.apache.tika.mime.MediaType $r43;
        org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator $r24;
        org.apache.tika.exception.TikaException $r19, $r33, $r35, $r37, $r40, $r41;
        org.apache.poi.POIXMLDocument $r13;
        org.apache.tika.io.TikaInputStream $r5;
        org.xml.sax.ContentHandler r7;
        java.lang.String $r11, $r23, $r27, $r39;
        org.apache.tika.parser.EmptyParser $r9;
        org.apache.tika.parser.microsoft.ooxml.MetadataExtractor $r45;
        org.apache.poi.xslf.extractor.XSLFPowerPointExtractor $r18;
        java.lang.IllegalArgumentException $r38;
        java.io.File $r26;
        org.apache.xmlbeans.XmlException $r32;
        java.lang.Object $r2, $r30, $r31;
        java.io.InputStream r4;

        r4 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.xml.sax.ContentHandler;

        r8 := @parameter2: org.apache.tika.metadata.Metadata;

        r0 := @parameter3: org.apache.tika.parser.ParseContext;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class,java.lang.Object)>(class "Ljava/util/Locale;", $r1);

        r3 = (java.util.Locale) $r2;

        staticinvoke <org.apache.poi.extractor.ExtractorFactory: void setThreadPrefersEventExtractors(boolean)>(1);

     label01:
        $r5 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream cast(java.io.InputStream)>(r4);

        if $r5 == null goto label02;

        $r30 = virtualinvoke $r5.<org.apache.tika.io.TikaInputStream: java.lang.Object getOpenContainer()>();

        $z5 = $r30 instanceof org.apache.poi.openxml4j.opc.OPCPackage;

        if $z5 == 0 goto label02;

        $r31 = virtualinvoke $r5.<org.apache.tika.io.TikaInputStream: java.lang.Object getOpenContainer()>();

        r42 = (org.apache.poi.openxml4j.opc.OPCPackage) $r31;

        goto label04;

     label02:
        if $r5 == null goto label03;

        $z4 = virtualinvoke $r5.<org.apache.tika.io.TikaInputStream: boolean hasFile()>();

        if $z4 == 0 goto label03;

        $r26 = virtualinvoke $r5.<org.apache.tika.io.TikaInputStream: java.io.File getFile()>();

        $r27 = virtualinvoke $r26.<java.io.File: java.lang.String getPath()>();

        $r28 = <org.apache.poi.openxml4j.opc.PackageAccess: org.apache.poi.openxml4j.opc.PackageAccess READ>;

        $r29 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String,org.apache.poi.openxml4j.opc.PackageAccess)>($r27, $r28);

        r42 = $r29;

        virtualinvoke $r5.<org.apache.tika.io.TikaInputStream: void setOpenContainer(java.lang.Object)>($r29);

        goto label04;

     label03:
        $r6 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r6.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>(r4);

        r42 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>($r6);

     label04:
        $r43 = staticinvoke <org.apache.tika.parser.pkg.ZipContainerDetector: org.apache.tika.mime.MediaType detectOfficeOpenXML(org.apache.poi.openxml4j.opc.OPCPackage)>(r42);

        if $r43 == null goto label05;

        $r10 = <org.apache.tika.parser.microsoft.ooxml.OOXMLParser: java.util.Set UNSUPPORTED_OOXML_TYPES>;

        $z0 = interfaceinvoke $r10.<java.util.Set: boolean contains(java.lang.Object)>($r43);

        if $z0 == 0 goto label07;

     label05:
        $r9 = <org.apache.tika.parser.EmptyParser: org.apache.tika.parser.EmptyParser INSTANCE>;

        virtualinvoke $r9.<org.apache.tika.parser.EmptyParser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r4, r7, r8, r0);

     label06:
        return;

     label07:
        $r11 = virtualinvoke $r43.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r11);

        $r12 = staticinvoke <org.apache.poi.extractor.ExtractorFactory: org.apache.poi.POIXMLTextExtractor createExtractor(org.apache.poi.openxml4j.opc.OPCPackage)>(r42);

        $r13 = virtualinvoke $r12.<org.apache.poi.POIXMLTextExtractor: org.apache.poi.POIXMLDocument getDocument()>();

        $z1 = $r12 instanceof org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        if $z1 == 0 goto label08;

        $r24 = new org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator;

        $r25 = (org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor) $r12;

        specialinvoke $r24.<org.apache.tika.parser.microsoft.ooxml.XSSFExcelExtractorDecorator: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor,java.util.Locale)>(r0, $r25, r3);

        r44 = $r24;

        goto label12;

     label08:
        if $r13 != null goto label09;

        $r19 = new org.apache.tika.exception.TikaException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting UserModel based POI OOXML extractor with a document, but none found. The extractor returned was a ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label09:
        $z2 = $r13 instanceof org.apache.poi.xslf.usermodel.XMLSlideShow;

        if $z2 == 0 goto label10;

        $r17 = new org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator;

        $r18 = (org.apache.poi.xslf.extractor.XSLFPowerPointExtractor) $r12;

        specialinvoke $r17.<org.apache.tika.parser.microsoft.ooxml.XSLFPowerPointExtractorDecorator: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.xslf.extractor.XSLFPowerPointExtractor)>(r0, $r18);

        r44 = $r17;

        goto label12;

     label10:
        $z3 = $r13 instanceof org.apache.poi.xwpf.usermodel.XWPFDocument;

        if $z3 == 0 goto label11;

        $r15 = new org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator;

        $r16 = (org.apache.poi.xwpf.extractor.XWPFWordExtractor) $r12;

        specialinvoke $r15.<org.apache.tika.parser.microsoft.ooxml.XWPFWordExtractorDecorator: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.xwpf.extractor.XWPFWordExtractor)>(r0, $r16);

        r44 = $r15;

        goto label12;

     label11:
        $r14 = new org.apache.tika.parser.microsoft.ooxml.POIXMLTextExtractorDecorator;

        specialinvoke $r14.<org.apache.tika.parser.microsoft.ooxml.POIXMLTextExtractorDecorator: void <init>(org.apache.tika.parser.ParseContext,org.apache.poi.POIXMLTextExtractor)>(r0, $r12);

        r44 = $r14;

     label12:
        $r45 = interfaceinvoke r44.<org.apache.tika.parser.microsoft.ooxml.OOXMLExtractor: org.apache.tika.parser.microsoft.ooxml.MetadataExtractor getMetadataExtractor()>();

        virtualinvoke $r45.<org.apache.tika.parser.microsoft.ooxml.MetadataExtractor: void extract(org.apache.tika.metadata.Metadata)>(r8);

        interfaceinvoke r44.<org.apache.tika.parser.microsoft.ooxml.OOXMLExtractor: void getXHTML(org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r7, r8, r0);

     label13:
        goto label19;

     label14:
        $r38 := @caughtexception;

        $r39 = virtualinvoke $r38.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $z6 = virtualinvoke $r39.<java.lang.String: boolean startsWith(java.lang.String)>("No supported documents found");

        if $z6 == 0 goto label15;

        $r41 = new org.apache.tika.exception.TikaException;

        specialinvoke $r41.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("TIKA-418: RuntimeException while getting content for thmx and xps file types", $r38);

        throw $r41;

     label15:
        $r40 = new org.apache.tika.exception.TikaException;

        specialinvoke $r40.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating OOXML extractor", $r38);

        throw $r40;

     label16:
        $r36 := @caughtexception;

        $r37 = new org.apache.tika.exception.TikaException;

        specialinvoke $r37.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating OOXML extractor", $r36);

        throw $r37;

     label17:
        $r34 := @caughtexception;

        $r35 = new org.apache.tika.exception.TikaException;

        specialinvoke $r35.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating OOXML extractor", $r34);

        throw $r35;

     label18:
        $r32 := @caughtexception;

        $r33 = new org.apache.tika.exception.TikaException;

        specialinvoke $r33.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating OOXML extractor", $r32);

        throw $r33;

     label19:
        return;

        catch java.lang.IllegalArgumentException from label01 to label06 with label14;
        catch java.lang.IllegalArgumentException from label07 to label13 with label14;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label01 to label06 with label16;
        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label07 to label13 with label16;
        catch org.apache.poi.openxml4j.exceptions.OpenXML4JException from label01 to label06 with label17;
        catch org.apache.poi.openxml4j.exceptions.OpenXML4JException from label07 to label13 with label17;
        catch org.apache.xmlbeans.XmlException from label01 to label06 with label18;
        catch org.apache.xmlbeans.XmlException from label07 to label13 with label18;
    }
}
