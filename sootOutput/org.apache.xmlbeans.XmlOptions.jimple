public class org.apache.xmlbeans.XmlOptions extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.Map _map;
    public static final java.lang.String GENERATE_JAVA_14;
    public static final java.lang.String GENERATE_JAVA_15;
    public static final java.lang.String SAVE_NAMESPACES_FIRST;
    public static final java.lang.String SAVE_SYNTHETIC_DOCUMENT_ELEMENT;
    public static final java.lang.String SAVE_PRETTY_PRINT;
    public static final java.lang.String SAVE_PRETTY_PRINT_INDENT;
    public static final java.lang.String SAVE_PRETTY_PRINT_OFFSET;
    public static final java.lang.String SAVE_AGGRESSIVE_NAMESPACES;
    public static final java.lang.String SAVE_USE_DEFAULT_NAMESPACE;
    public static final java.lang.String SAVE_IMPLICIT_NAMESPACES;
    public static final java.lang.String SAVE_SUGGESTED_PREFIXES;
    public static final java.lang.String SAVE_FILTER_PROCINST;
    public static final java.lang.String SAVE_USE_OPEN_FRAGMENT;
    public static final java.lang.String SAVE_OUTER;
    public static final java.lang.String SAVE_INNER;
    public static final java.lang.String SAVE_NO_XML_DECL;
    public static final java.lang.String SAVE_SUBSTITUTE_CHARACTERS;
    public static final java.lang.String SAVE_OPTIMIZE_FOR_SPEED;
    public static final java.lang.String SAVE_CDATA_LENGTH_THRESHOLD;
    public static final java.lang.String SAVE_CDATA_ENTITY_COUNT_THRESHOLD;
    public static final java.lang.String SAVE_SAX_NO_NSDECLS_IN_ATTRIBUTES;
    public static final java.lang.String LOAD_REPLACE_DOCUMENT_ELEMENT;
    public static final java.lang.String LOAD_STRIP_WHITESPACE;
    public static final java.lang.String LOAD_STRIP_COMMENTS;
    public static final java.lang.String LOAD_STRIP_PROCINSTS;
    public static final java.lang.String LOAD_LINE_NUMBERS;
    public static final java.lang.String LOAD_LINE_NUMBERS_END_ELEMENT;
    public static final java.lang.String LOAD_SAVE_CDATA_BOOKMARKS;
    public static final java.lang.String LOAD_SUBSTITUTE_NAMESPACES;
    public static final java.lang.String LOAD_TRIM_TEXT_BUFFER;
    public static final java.lang.String LOAD_ADDITIONAL_NAMESPACES;
    public static final java.lang.String LOAD_MESSAGE_DIGEST;
    public static final java.lang.String LOAD_USE_DEFAULT_RESOLVER;
    public static final java.lang.String LOAD_USE_XMLREADER;
    public static final java.lang.String XQUERY_CURRENT_NODE_VAR;
    public static final java.lang.String XQUERY_VARIABLE_MAP;
    public static final java.lang.String CHARACTER_ENCODING;
    public static final java.lang.String ERROR_LISTENER;
    public static final java.lang.String DOCUMENT_TYPE;
    public static final java.lang.String DOCUMENT_SOURCE_NAME;
    public static final java.lang.String COMPILE_SUBSTITUTE_NAMES;
    public static final java.lang.String COMPILE_NO_VALIDATION;
    public static final java.lang.String COMPILE_NO_UPA_RULE;
    public static final java.lang.String COMPILE_NO_PVR_RULE;
    public static final java.lang.String COMPILE_NO_ANNOTATIONS;
    public static final java.lang.String COMPILE_DOWNLOAD_URLS;
    public static final java.lang.String COMPILE_MDEF_NAMESPACES;
    public static final java.lang.String VALIDATE_ON_SET;
    public static final java.lang.String VALIDATE_TREAT_LAX_AS_SKIP;
    public static final java.lang.String VALIDATE_STRICT;
    public static final java.lang.String VALIDATE_TEXT_ONLY;
    public static final java.lang.String UNSYNCHRONIZED;
    public static final java.lang.String ENTITY_RESOLVER;
    public static final java.lang.String BASE_URI;
    public static final java.lang.String SCHEMA_CODE_PRINTER;
    public static final java.lang.String GENERATE_JAVA_VERSION;
    public static final java.lang.String COPY_USE_NEW_SYNC_DOMAIN;
    public static final java.lang.String LOAD_ENTITY_BYTES_LIMIT;
    private static final org.apache.xmlbeans.XmlOptions EMPTY_OPTIONS;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.apache.xmlbeans.XmlOptions r0;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map> = $r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions r0, r2;
        java.util.Map $r3, $r4;
        java.util.HashMap $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r2 := @parameter0: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map> = $r1;

        if r2 == null goto label1;

        $r4 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        $r3 = r2.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

     label1:
        return;
    }

    public org.apache.xmlbeans.XmlOptions setSaveNamespacesFirst()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_NAMESPACES_FIRST");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSavePrettyPrint()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_PRETTY_PRINT");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSavePrettyPrintIndent(int)
    {
        int i0;
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,int)>("SAVE_PRETTY_PRINT_INDENT", i0);

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSavePrettyPrintOffset(int)
    {
        int i0;
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,int)>("SAVE_PRETTY_PRINT_OFFSET", i0);

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCharacterEncoding(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("CHARACTER_ENCODING", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setDocumentType(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("DOCUMENT_TYPE", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setErrorListener(java.util.Collection)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Collection r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Collection;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("ERROR_LISTENER", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSaveAggressiveNamespaces()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_AGGRESSIVE_NAMESPACES");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveAggresiveNamespaces()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setSaveAggressiveNamespaces()>();

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveSyntheticDocumentElement(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SAVE_SYNTHETIC_DOCUMENT_ELEMENT", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setUseDefaultNamespace()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_USE_DEFAULT_NAMESPACE");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveImplicitNamespaces(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SAVE_IMPLICIT_NAMESPACES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSaveSuggestedPrefixes(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SAVE_SUGGESTED_PREFIXES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSaveFilterProcinst(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SAVE_FILTER_PROCINST", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSaveSubstituteCharacters(org.apache.xmlbeans.XmlOptionCharEscapeMap)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        org.apache.xmlbeans.XmlOptionCharEscapeMap r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: org.apache.xmlbeans.XmlOptionCharEscapeMap;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SAVE_SUBSTITUTE_CHARACTERS", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSaveUseOpenFrag()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_USE_OPEN_FRAGMENT");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveOuter()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_OUTER");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveInner()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_INNER");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveNoXmlDecl()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_NO_XML_DECL");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveCDataLengthThreshold(int)
    {
        int i0;
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,int)>("SAVE_CDATA_LENGTH_THRESHOLD", i0);

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveCDataEntityCountThreshold(int)
    {
        int i0;
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,int)>("SAVE_CDATA_ENTITY_COUNT_THRESHOLD", i0);

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setUseCDataBookmarks()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_SAVE_CDATA_BOOKMARKS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setSaveSaxNoNSDeclsInAttributes()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("SAVE_SAX_NO_NSDECLS_IN_ATTRIBUTES");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadReplaceDocumentElement(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("LOAD_REPLACE_DOCUMENT_ELEMENT", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setLoadStripWhitespace()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_STRIP_WHITESPACE");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadStripComments()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_STRIP_COMMENTS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadStripProcinsts()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_STRIP_PROCINSTS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadLineNumbers()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_LINE_NUMBERS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadLineNumbers(java.lang.String)
    {
        org.apache.xmlbeans.XmlOptions r0, $r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions setLoadLineNumbers()>();

        $r3 = specialinvoke $r1.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>(r2);

        return $r3;
    }

    public org.apache.xmlbeans.XmlOptions setLoadSubstituteNamespaces(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("LOAD_SUBSTITUTE_NAMESPACES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setLoadTrimTextBuffer()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_TRIM_TEXT_BUFFER");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadAdditionalNamespaces(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("LOAD_ADDITIONAL_NAMESPACES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setLoadMessageDigest()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_MESSAGE_DIGEST");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadUseDefaultResolver()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("LOAD_USE_DEFAULT_RESOLVER");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadUseXMLReader(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: org.xml.sax.XMLReader;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("LOAD_USE_XMLREADER", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setXqueryCurrentNodeVar(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("XQUERY_CURRENT_NODE_VAR", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setXqueryVariables(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("XQUERY_VARIABLE_MAP", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setDocumentSourceName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("DOCUMENT_SOURCE_NAME", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setCompileSubstituteNames(java.util.Map)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        java.util.Map r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("COMPILE_SUBSTITUTE_NAMES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setCompileNoValidation()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("COMPILE_NO_VALIDATION");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCompileNoUpaRule()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("COMPILE_NO_UPA_RULE");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCompileNoPvrRule()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("COMPILE_NO_PVR_RULE");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCompileNoAnnotations()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("COMPILE_NO_ANNOTATIONS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCompileDownloadUrls()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("COMPILE_DOWNLOAD_URLS");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setCompileMdefNamespaces(java.util.Set)
    {
        java.util.Set r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.util.Set;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("COMPILE_MDEF_NAMESPACES", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setValidateOnSet()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("VALIDATE_ON_SET");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setValidateTreatLaxAsSkip()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("VALIDATE_TREAT_LAX_AS_SKIP");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setValidateStrict()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("VALIDATE_STRICT");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setUnsynchronized()
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object)>("UNSYNCHRONIZED");

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.apache.xmlbeans.XmlOptions r0, $r2;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("ENTITY_RESOLVER", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setBaseURI(java.net.URI)
    {
        java.net.URI r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.net.URI;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("BASE_URI", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setSchemaCodePrinter(org.apache.xmlbeans.SchemaCodePrinter)
    {
        org.apache.xmlbeans.SchemaCodePrinter r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: org.apache.xmlbeans.SchemaCodePrinter;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("SCHEMA_CODE_PRINTER", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setGenerateJavaVersion(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("GENERATE_JAVA_VERSION", r1);

        return $r2;
    }

    public org.apache.xmlbeans.XmlOptions setCopyUseNewSynchronizationDomain(boolean)
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;
        java.lang.Boolean $r2;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>("COPY_USE_NEW_LOCALE", $r2);

        return $r1;
    }

    public org.apache.xmlbeans.XmlOptions setLoadEntityBytesLimit(int)
    {
        int i0;
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,int)>("LOAD_ENTITY_BYTES_LIMIT", i0);

        return $r1;
    }

    public static org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlOptions r0, $r1;

        r0 := @parameter0: org.apache.xmlbeans.XmlOptions;

        if r0 != null goto label1;

        $r1 = <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions EMPTY_OPTIONS>;

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public void put(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xmlbeans.XmlOptions r0;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object,java.lang.Object)>(r1, null);

        return;
    }

    public void put(java.lang.Object, java.lang.Object)
    {
        org.apache.xmlbeans.XmlOptions r0;
        java.util.Map $r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void put(java.lang.Object, int)
    {
        org.apache.xmlbeans.XmlOptions r0;
        int i0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    private org.apache.xmlbeans.XmlOptions set(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xmlbeans.XmlOptions r0, $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>(r1, null);

        return $r2;
    }

    private org.apache.xmlbeans.XmlOptions set(java.lang.Object, java.lang.Object)
    {
        org.apache.xmlbeans.XmlOptions r0;
        java.util.Map $r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    private org.apache.xmlbeans.XmlOptions set(java.lang.Object, int)
    {
        org.apache.xmlbeans.XmlOptions r0, $r3;
        int i0;
        java.lang.Object r1;
        java.lang.Integer $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        $r3 = specialinvoke r0.<org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions set(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $r3;
    }

    public boolean hasOption(java.lang.Object)
    {
        org.apache.xmlbeans.XmlOptions r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public static boolean hasOption(org.apache.xmlbeans.XmlOptions, java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xmlbeans.XmlOptions r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>(r1);

     label2:
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.xmlbeans.XmlOptions r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void remove(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xmlbeans.XmlOptions r0;
        java.util.Map $r2;

        r0 := @this: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public static java.lang.Object safeGet(org.apache.xmlbeans.XmlOptions, java.lang.Object)
    {
        java.lang.Object r1, $r2;
        org.apache.xmlbeans.XmlOptions r0;

        r0 := @parameter0: org.apache.xmlbeans.XmlOptions;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>(r1);

     label2:
        return $r2;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.XmlOptions $r0, $r1, $r3;
        java.util.Map $r2, $r4;

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_ENTITY_BYTES_LIMIT> = "LOAD_ENTITY_BYTES_LIMIT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COPY_USE_NEW_SYNC_DOMAIN> = "COPY_USE_NEW_LOCALE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String GENERATE_JAVA_VERSION> = "GENERATE_JAVA_VERSION";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SCHEMA_CODE_PRINTER> = "SCHEMA_CODE_PRINTER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String BASE_URI> = "BASE_URI";

        <org.apache.xmlbeans.XmlOptions: java.lang.String ENTITY_RESOLVER> = "ENTITY_RESOLVER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String UNSYNCHRONIZED> = "UNSYNCHRONIZED";

        <org.apache.xmlbeans.XmlOptions: java.lang.String VALIDATE_TEXT_ONLY> = "VALIDATE_TEXT_ONLY";

        <org.apache.xmlbeans.XmlOptions: java.lang.String VALIDATE_STRICT> = "VALIDATE_STRICT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String VALIDATE_TREAT_LAX_AS_SKIP> = "VALIDATE_TREAT_LAX_AS_SKIP";

        <org.apache.xmlbeans.XmlOptions: java.lang.String VALIDATE_ON_SET> = "VALIDATE_ON_SET";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_MDEF_NAMESPACES> = "COMPILE_MDEF_NAMESPACES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_DOWNLOAD_URLS> = "COMPILE_DOWNLOAD_URLS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_NO_ANNOTATIONS> = "COMPILE_NO_ANNOTATIONS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_NO_PVR_RULE> = "COMPILE_NO_PVR_RULE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_NO_UPA_RULE> = "COMPILE_NO_UPA_RULE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_NO_VALIDATION> = "COMPILE_NO_VALIDATION";

        <org.apache.xmlbeans.XmlOptions: java.lang.String COMPILE_SUBSTITUTE_NAMES> = "COMPILE_SUBSTITUTE_NAMES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String DOCUMENT_SOURCE_NAME> = "DOCUMENT_SOURCE_NAME";

        <org.apache.xmlbeans.XmlOptions: java.lang.String DOCUMENT_TYPE> = "DOCUMENT_TYPE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String ERROR_LISTENER> = "ERROR_LISTENER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String CHARACTER_ENCODING> = "CHARACTER_ENCODING";

        <org.apache.xmlbeans.XmlOptions: java.lang.String XQUERY_VARIABLE_MAP> = "XQUERY_VARIABLE_MAP";

        <org.apache.xmlbeans.XmlOptions: java.lang.String XQUERY_CURRENT_NODE_VAR> = "XQUERY_CURRENT_NODE_VAR";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_USE_XMLREADER> = "LOAD_USE_XMLREADER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_USE_DEFAULT_RESOLVER> = "LOAD_USE_DEFAULT_RESOLVER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_MESSAGE_DIGEST> = "LOAD_MESSAGE_DIGEST";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_ADDITIONAL_NAMESPACES> = "LOAD_ADDITIONAL_NAMESPACES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_TRIM_TEXT_BUFFER> = "LOAD_TRIM_TEXT_BUFFER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_SUBSTITUTE_NAMESPACES> = "LOAD_SUBSTITUTE_NAMESPACES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_SAVE_CDATA_BOOKMARKS> = "LOAD_SAVE_CDATA_BOOKMARKS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_LINE_NUMBERS_END_ELEMENT> = "LOAD_LINE_NUMBERS_END_ELEMENT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_LINE_NUMBERS> = "LOAD_LINE_NUMBERS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_STRIP_PROCINSTS> = "LOAD_STRIP_PROCINSTS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_STRIP_COMMENTS> = "LOAD_STRIP_COMMENTS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_STRIP_WHITESPACE> = "LOAD_STRIP_WHITESPACE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String LOAD_REPLACE_DOCUMENT_ELEMENT> = "LOAD_REPLACE_DOCUMENT_ELEMENT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_SAX_NO_NSDECLS_IN_ATTRIBUTES> = "SAVE_SAX_NO_NSDECLS_IN_ATTRIBUTES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_CDATA_ENTITY_COUNT_THRESHOLD> = "SAVE_CDATA_ENTITY_COUNT_THRESHOLD";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_CDATA_LENGTH_THRESHOLD> = "SAVE_CDATA_LENGTH_THRESHOLD";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_OPTIMIZE_FOR_SPEED> = "SAVE_OPTIMIZE_FOR_SPEED";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_SUBSTITUTE_CHARACTERS> = "SAVE_SUBSTITUTE_CHARACTERS";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_NO_XML_DECL> = "SAVE_NO_XML_DECL";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_INNER> = "SAVE_INNER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_OUTER> = "SAVE_OUTER";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_USE_OPEN_FRAGMENT> = "SAVE_USE_OPEN_FRAGMENT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_FILTER_PROCINST> = "SAVE_FILTER_PROCINST";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_SUGGESTED_PREFIXES> = "SAVE_SUGGESTED_PREFIXES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_IMPLICIT_NAMESPACES> = "SAVE_IMPLICIT_NAMESPACES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_USE_DEFAULT_NAMESPACE> = "SAVE_USE_DEFAULT_NAMESPACE";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_AGGRESSIVE_NAMESPACES> = "SAVE_AGGRESSIVE_NAMESPACES";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_PRETTY_PRINT_OFFSET> = "SAVE_PRETTY_PRINT_OFFSET";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_PRETTY_PRINT_INDENT> = "SAVE_PRETTY_PRINT_INDENT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_PRETTY_PRINT> = "SAVE_PRETTY_PRINT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_SYNTHETIC_DOCUMENT_ELEMENT> = "SAVE_SYNTHETIC_DOCUMENT_ELEMENT";

        <org.apache.xmlbeans.XmlOptions: java.lang.String SAVE_NAMESPACES_FIRST> = "SAVE_NAMESPACES_FIRST";

        <org.apache.xmlbeans.XmlOptions: java.lang.String GENERATE_JAVA_15> = "1.5";

        <org.apache.xmlbeans.XmlOptions: java.lang.String GENERATE_JAVA_14> = "1.4";

        <org.apache.xmlbeans.XmlOptions: long serialVersionUID> = 1L;

        $r0 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r0.<org.apache.xmlbeans.XmlOptions: void <init>()>();

        <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions EMPTY_OPTIONS> = $r0;

        $r3 = <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions EMPTY_OPTIONS>;

        $r1 = <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions EMPTY_OPTIONS>;

        $r2 = $r1.<org.apache.xmlbeans.XmlOptions: java.util.Map _map>;

        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r2);

        $r3.<org.apache.xmlbeans.XmlOptions: java.util.Map _map> = $r4;

        return;
    }
}
