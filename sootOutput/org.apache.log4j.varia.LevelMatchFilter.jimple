public class org.apache.log4j.varia.LevelMatchFilter extends org.apache.log4j.spi.Filter
{
    boolean acceptOnMatch;
    org.apache.log4j.Level levelToMatch;

    public void <init>()
    {
        org.apache.log4j.varia.LevelMatchFilter r0;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        specialinvoke r0.<org.apache.log4j.spi.Filter: void <init>()>();

        r0.<org.apache.log4j.varia.LevelMatchFilter: boolean acceptOnMatch> = 1;

        return;
    }

    public void setLevelToMatch(java.lang.String)
    {
        java.lang.String r1;
        org.apache.log4j.varia.LevelMatchFilter r0;
        org.apache.log4j.Level $r2;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.log4j.helpers.OptionConverter: org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level)>(r1, null);

        r0.<org.apache.log4j.varia.LevelMatchFilter: org.apache.log4j.Level levelToMatch> = $r2;

        return;
    }

    public java.lang.String getLevelToMatch()
    {
        org.apache.log4j.varia.LevelMatchFilter r0;
        org.apache.log4j.Level $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        $r1 = r0.<org.apache.log4j.varia.LevelMatchFilter: org.apache.log4j.Level levelToMatch>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.log4j.varia.LevelMatchFilter: org.apache.log4j.Level levelToMatch>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.Priority: java.lang.String toString()>();

     label2:
        return $r3;
    }

    public void setAcceptOnMatch(boolean)
    {
        org.apache.log4j.varia.LevelMatchFilter r0;
        boolean z0;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.varia.LevelMatchFilter: boolean acceptOnMatch> = z0;

        return;
    }

    public boolean getAcceptOnMatch()
    {
        org.apache.log4j.varia.LevelMatchFilter r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        $z0 = r0.<org.apache.log4j.varia.LevelMatchFilter: boolean acceptOnMatch>;

        return $z0;
    }

    public int decide(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.varia.LevelMatchFilter r0;
        org.apache.log4j.spi.LoggingEvent r2;
        org.apache.log4j.Level $r1, $r3, $r4;
        int $i1;
        boolean $z0, $z1, z2;

        r0 := @this: org.apache.log4j.varia.LevelMatchFilter;

        r2 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r1 = r0.<org.apache.log4j.varia.LevelMatchFilter: org.apache.log4j.Level levelToMatch>;

        if $r1 != null goto label1;

        return 0;

     label1:
        z2 = 0;

        $r3 = r0.<org.apache.log4j.varia.LevelMatchFilter: org.apache.log4j.Level levelToMatch>;

        $r4 = virtualinvoke r2.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $z0 = virtualinvoke $r3.<org.apache.log4j.Priority: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        z2 = 1;

     label2:
        if z2 == 0 goto label4;

        $z1 = r0.<org.apache.log4j.varia.LevelMatchFilter: boolean acceptOnMatch>;

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $i1 = (int) -1;

        return $i1;

     label4:
        return 0;
    }
}
