public class ucar.nc2.ft.point.standard.PointDatasetStandardFactory extends java.lang.Object implements ucar.nc2.ft.FeatureDatasetFactory
{
    private static org.slf4j.Logger log;
    static boolean showTables;

    public void <init>()
    {
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory r0;

        r0 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setDebugFlags(ucar.nc2.util.DebugFlags)
    {
        ucar.nc2.util.DebugFlags r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.util.DebugFlags;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("PointDatasetStandardFactory/showTables");

        <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: boolean showTables> = $z0;

        return;
    }

    public java.lang.Object isMine(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableConfigurer $r2;
        java.lang.Object[] $r4, $r6, $r22;
        ucar.nc2.ft.point.standard.TableAnalyzer $r23;
        java.util.Formatter r3;
        ucar.nc2.dataset.CoordinateAxis r13;
        ucar.nc2.constants.AxisType $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.String $r5, $r9;
        ucar.nc2.constants.FeatureType $r0, r21;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        java.io.PrintStream $r7;
        java.util.Iterator $r11;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory r20;
        java.util.List $r10;
        java.lang.Class $r8;
        java.lang.Object $r12;
        ucar.nc2.dataset.NetcdfDataset r1;

        r20 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        r21 := @parameter0: ucar.nc2.constants.FeatureType;

        r1 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter2: java.util.Formatter;

        if r21 != null goto label01;

        r21 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

     label01:
        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        if r21 == $r0 goto label02;

        $z3 = virtualinvoke r21.<ucar.nc2.constants.FeatureType: boolean isPointFeatureType()>();

        if $z3 != 0 goto label02;

        return null;

     label02:
        $r2 = staticinvoke <ucar.nc2.ft.point.standard.TableAnalyzer: ucar.nc2.ft.point.standard.TableConfigurer getTableConfigurer(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset)>(r21, r1);

        if $r2 != null goto label10;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        $r10 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getCoordinateAxes()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (ucar.nc2.dataset.CoordinateAxis) $r12;

        $r14 = virtualinvoke r13.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r15 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        if $r14 != $r15 goto label04;

        z4 = 1;

     label04:
        $r16 = virtualinvoke r13.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r17 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        if $r16 != $r17 goto label05;

        z5 = 1;

     label05:
        $r18 = virtualinvoke r13.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        $r19 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        if $r18 != $r19 goto label06;

        z6 = 1;

     label06:
        goto label03;

     label07:
        if z4 == 0 goto label08;

        if z6 == 0 goto label08;

        if z5 != 0 goto label09;

     label08:
        $r22 = newarray (java.lang.Object)[0];

        virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("PointDataset must have lat,lon,time", $r22);

        return null;

     label09:
        goto label11;

     label10:
        $z0 = <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: boolean showTables>;

        if $z0 == 0 goto label11;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6[0] = $r9;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("TableConfigurer = %s%n", $r6);

     label11:
        $r23 = staticinvoke <ucar.nc2.ft.point.standard.TableAnalyzer: ucar.nc2.ft.point.standard.TableAnalyzer factory(ucar.nc2.ft.point.standard.TableConfigurer,ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset)>($r2, r21, r1);

        if $r23 != null goto label12;

        return null;

     label12:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke $r23.<ucar.nc2.ft.point.standard.TableAnalyzer: java.lang.String getErrlog()>();

        $r4[0] = $r5;

        virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s%n", $r4);

        $z1 = virtualinvoke $r23.<ucar.nc2.ft.point.standard.TableAnalyzer: boolean featureTypeOk(ucar.nc2.constants.FeatureType,java.util.Formatter)>(r21, r3);

        if $z1 != 0 goto label13;

        return null;

     label13:
        return $r23;
    }

    public ucar.nc2.ft.FeatureDataset open(ucar.nc2.constants.FeatureType, ucar.nc2.dataset.NetcdfDataset, java.lang.Object, ucar.nc2.util.CancelTask, java.util.Formatter) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.TableAnalyzer $r4;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard $r0;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory r5;
        java.util.Formatter r3;
        ucar.nc2.util.CancelTask r6;
        java.lang.Object r7;
        ucar.nc2.constants.FeatureType r1;
        ucar.nc2.dataset.NetcdfDataset r2;

        r5 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        r1 := @parameter0: ucar.nc2.constants.FeatureType;

        r2 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r7 := @parameter2: java.lang.Object;

        r6 := @parameter3: ucar.nc2.util.CancelTask;

        r3 := @parameter4: java.util.Formatter;

        if r7 != null goto label1;

        r7 = staticinvoke <ucar.nc2.ft.point.standard.TableAnalyzer: ucar.nc2.ft.point.standard.TableAnalyzer factory(ucar.nc2.ft.point.standard.TableConfigurer,ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset)>(null, r1, r2);

     label1:
        $r0 = new ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard;

        $r4 = (ucar.nc2.ft.point.standard.TableAnalyzer) r7;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory$PointDatasetStandard: void <init>(ucar.nc2.constants.FeatureType,ucar.nc2.ft.point.standard.TableAnalyzer,ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r1, $r4, r2, r3);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType[] getFeatureType()
    {
        ucar.nc2.constants.FeatureType[] $r0;
        ucar.nc2.constants.FeatureType $r1;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory r2;

        r2 := @this: ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        $r0 = newarray (ucar.nc2.constants.FeatureType)[1];

        $r1 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        $r0[0] = $r1;

        return $r0;
    }

    static void doit(ucar.nc2.ft.point.standard.PointDatasetStandardFactory, java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r1, $r3, $r11;
        java.lang.Object[] $r10;
        ucar.nc2.ft.point.standard.TableAnalyzer r8;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory r5;
        java.util.Formatter $r2;
        java.lang.Object $r7;
        java.lang.String r0;
        ucar.nc2.dataset.NetcdfDataset $r4;
        ucar.nc2.constants.FeatureType $r6, $r9;

        r5 := @parameter0: ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        r0 := @parameter1: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        $r2 = new java.util.Formatter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r2.<java.util.Formatter: void <init>(java.io.PrintStream)>($r3);

        $r4 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String)>(r0);

        $r6 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        $r7 = virtualinvoke r5.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory: java.lang.Object isMine(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>($r6, $r4, $r2);

        r8 = (ucar.nc2.ft.point.standard.TableAnalyzer) $r7;

        $r9 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType ANY_POINT>;

        virtualinvoke r5.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory: ucar.nc2.ft.FeatureDataset open(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,java.lang.Object,ucar.nc2.util.CancelTask,java.util.Formatter)>($r9, $r4, r8, null, $r2);

        virtualinvoke r8.<ucar.nc2.ft.point.standard.TableAnalyzer: void getDetailInfo(java.util.Formatter)>($r2);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r11.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n-----------------", $r10);

        virtualinvoke $r4.<ucar.nc2.dataset.NetcdfDataset: void close()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r1;
        ucar.nc2.ft.point.standard.PointDatasetStandardFactory $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.ft.point.standard.PointDatasetStandardFactory;

        specialinvoke $r0.<ucar.nc2.ft.point.standard.PointDatasetStandardFactory: void <init>()>();

        staticinvoke <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: void doit(ucar.nc2.ft.point.standard.PointDatasetStandardFactory,java.lang.String)>($r0, "Q:/cdmUnitTest/formats/gempak/surface/20090521_sao.gem");

        return;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: org.slf4j.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ft/point/standard/PointDatasetStandardFactory;");

        <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: org.slf4j.Logger log> = $r0;

        <ucar.nc2.ft.point.standard.PointDatasetStandardFactory: boolean showTables> = 0;

        return;
    }
}
