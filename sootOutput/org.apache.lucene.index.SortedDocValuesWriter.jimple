class org.apache.lucene.index.SortedDocValuesWriter extends org.apache.lucene.index.DocValuesWriter
{
    final org.apache.lucene.util.BytesRefHash hash;
    private org.apache.lucene.util.packed.AppendingLongBuffer pending;
    private final org.apache.lucene.util.Counter iwBytesUsed;
    private long bytesUsed;
    private final org.apache.lucene.index.FieldInfo fieldInfo;
    private static final org.apache.lucene.util.BytesRef EMPTY;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.FieldInfo, org.apache.lucene.util.Counter)
    {
        org.apache.lucene.util.BytesRefHash $r3;
        org.apache.lucene.index.SortedDocValuesWriter r0;
        long $l0, $l1;
        org.apache.lucene.util.ByteBlockPool $r4;
        org.apache.lucene.util.Counter r2;
        org.apache.lucene.util.packed.AppendingLongBuffer $r7, $r8;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray $r6;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator $r5;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r2 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.index.DocValuesWriter: void <init>()>();

        r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo> = r1;

        r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed> = r2;

        $r3 = new org.apache.lucene.util.BytesRefHash;

        $r4 = new org.apache.lucene.util.ByteBlockPool;

        $r5 = new org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        specialinvoke $r5.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: void <init>(org.apache.lucene.util.Counter)>(r2);

        specialinvoke $r4.<org.apache.lucene.util.ByteBlockPool: void <init>(org.apache.lucene.util.ByteBlockPool$Allocator)>($r5);

        $r6 = new org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        specialinvoke $r6.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: void <init>(int,org.apache.lucene.util.Counter)>(16, r2);

        specialinvoke $r3.<org.apache.lucene.util.BytesRefHash: void <init>(org.apache.lucene.util.ByteBlockPool,int,org.apache.lucene.util.BytesRefHash$BytesStartArray)>($r4, 16, $r6);

        r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRefHash hash> = $r3;

        $r7 = new org.apache.lucene.util.packed.AppendingLongBuffer;

        specialinvoke $r7.<org.apache.lucene.util.packed.AppendingLongBuffer: void <init>()>();

        r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending> = $r7;

        $r8 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l0 = virtualinvoke $r8.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        r0.<org.apache.lucene.index.SortedDocValuesWriter: long bytesUsed> = $l0;

        $l1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: long bytesUsed>;

        virtualinvoke r2.<org.apache.lucene.util.Counter: long addAndGet(long)>($l1);

        return;
    }

    public void addValue(int, org.apache.lucene.util.BytesRef)
    {
        byte $b3, $b7;
        org.apache.lucene.util.BytesRef r2, $r4;
        java.lang.StringBuilder $r7, $r10, $r11, $r12, $r16, $r19, $r20, $r24, $r27, $r28, $r30, $r32, $r34;
        long $l1, $l2, $l5, $l6;
        int i0, $i4, $i8, $i9;
        java.lang.String $r9, $r13, $r18, $r21, $r26, $r29;
        org.apache.lucene.index.SortedDocValuesWriter r0;
        java.lang.IllegalArgumentException $r31, $r33, $r35;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1, $r3;
        org.apache.lucene.index.FieldInfo $r8, $r17, $r25;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $l1 = (long) i0;

        $r1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l2 = virtualinvoke $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $b3 = $l1 cmp $l2;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label1;

        $r31 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocValuesField \"");

        $r25 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r26 = $r25.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" appears more than once in this document (only one value is allowed per field)");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r31;

     label1:
        if r2 != null goto label2;

        $r33 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field \"");

        $r17 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r18 = $r17.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": null value not allowed");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r33;

     label2:
        $i4 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i4 <= 32766 goto label3;

        $r35 = new java.lang.IllegalArgumentException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocValuesField \"");

        $r8 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r9 = $r8.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is too large, must be <= ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(32766);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r35;

     label3:
        $r3 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l5 = virtualinvoke $r3.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $l6 = (long) i0;

        $b7 = $l5 cmp $l6;

        $i9 = (int) $b7;

        if $i9 >= 0 goto label4;

        $r4 = <org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRef EMPTY>;

        specialinvoke r0.<org.apache.lucene.index.SortedDocValuesWriter: void addOneValue(org.apache.lucene.util.BytesRef)>($r4);

        goto label3;

     label4:
        specialinvoke r0.<org.apache.lucene.index.SortedDocValuesWriter: void addOneValue(org.apache.lucene.util.BytesRef)>(r2);

        return;
    }

    public void finish(int)
    {
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.index.SortedDocValuesWriter r0;
        long $l0, $l2;
        byte $b3;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;
        int i1, $i4;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        i1 := @parameter0: int;

     label1:
        $r1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $l2 = (long) i1;

        $b3 = $l0 cmp $l2;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label2;

        $r2 = <org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRef EMPTY>;

        specialinvoke r0.<org.apache.lucene.index.SortedDocValuesWriter: void addOneValue(org.apache.lucene.util.BytesRef)>($r2);

        goto label1;

     label2:
        return;
    }

    private void addOneValue(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r1;
        org.apache.lucene.util.BytesRefHash $r2;
        org.apache.lucene.index.SortedDocValuesWriter r0;
        long $l1;
        org.apache.lucene.util.Counter $r3;
        org.apache.lucene.util.packed.AppendingLongBuffer $r4;
        int $i0, $i2, i3;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        $r2 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.util.BytesRefHash: int add(org.apache.lucene.util.BytesRef)>(r1);

        i3 = $i0;

        if $i0 >= 0 goto label1;

        $i2 = neg $i0;

        i3 = $i2 - 1;

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed>;

        virtualinvoke $r3.<org.apache.lucene.util.Counter: long addAndGet(long)>(8L);

     label2:
        $r4 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l1 = (long) i3;

        virtualinvoke $r4.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>($l1);

        specialinvoke r0.<org.apache.lucene.index.SortedDocValuesWriter: void updateBytesUsed()>();

        return;
    }

    private void updateBytesUsed()
    {
        org.apache.lucene.util.Counter $r2;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;
        org.apache.lucene.index.SortedDocValuesWriter r0;
        long $l0, $l1, $l2;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.util.packed.AppendingLongBuffer: long ramBytesUsed()>();

        $r2 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.Counter iwBytesUsed>;

        $l1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: long bytesUsed>;

        $l2 = $l0 - $l1;

        virtualinvoke $r2.<org.apache.lucene.util.Counter: long addAndGet(long)>($l2);

        r0.<org.apache.lucene.index.SortedDocValuesWriter: long bytesUsed> = $l0;

        return;
    }

    public void flush(org.apache.lucene.index.SegmentWriteState, org.apache.lucene.codecs.DocValuesConsumer) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRefHash $r3, $r4;
        long $l3, $l4;
        java.lang.AssertionError $r13;
        byte $b5;
        int[] $r6, $r12;
        org.apache.lucene.index.SegmentWriteState r0;
        int $i0, $i1, $i2, i6;
        boolean $z0;
        org.apache.lucene.codecs.DocValuesConsumer r7;
        org.apache.lucene.index.SortedDocValuesWriter$2 $r10;
        org.apache.lucene.index.SortedDocValuesWriter$1 $r8;
        org.apache.lucene.index.SegmentInfo $r1;
        org.apache.lucene.index.SortedDocValuesWriter r2;
        org.apache.lucene.util.packed.AppendingLongBuffer $r11;
        org.apache.lucene.index.FieldInfo $r9;
        java.util.Comparator $r5;

        r2 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        r0 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        r7 := @parameter1: org.apache.lucene.codecs.DocValuesConsumer;

        $r1 = r0.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $z0 = <org.apache.lucene.index.SortedDocValuesWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r11 = r2.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        $l3 = virtualinvoke $r11.<org.apache.lucene.util.packed.AppendingLongBuffer: long size()>();

        $l4 = (long) $i0;

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $r3 = r2.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.util.BytesRefHash: int size()>();

        $r4 = r2.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRefHash hash>;

        $r5 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        $r6 = virtualinvoke $r4.<org.apache.lucene.util.BytesRefHash: int[] sort(java.util.Comparator)>($r5);

        $r12 = newarray (int)[$i1];

        i6 = 0;

     label2:
        if i6 >= $i1 goto label3;

        $i2 = $r6[i6];

        $r12[$i2] = i6;

        i6 = i6 + 1;

        goto label2;

     label3:
        $r9 = r2.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r8 = new org.apache.lucene.index.SortedDocValuesWriter$1;

        specialinvoke $r8.<org.apache.lucene.index.SortedDocValuesWriter$1: void <init>(org.apache.lucene.index.SortedDocValuesWriter,int[],int)>(r2, $r6, $i1);

        $r10 = new org.apache.lucene.index.SortedDocValuesWriter$2;

        specialinvoke $r10.<org.apache.lucene.index.SortedDocValuesWriter$2: void <init>(org.apache.lucene.index.SortedDocValuesWriter,int[],int)>(r2, $r12, $i0);

        virtualinvoke r7.<org.apache.lucene.codecs.DocValuesConsumer: void addSortedField(org.apache.lucene.index.FieldInfo,java.lang.Iterable,java.lang.Iterable)>($r9, $r8, $r10);

        return;
    }

    public void abort()
    {
        org.apache.lucene.index.SortedDocValuesWriter r0;

        r0 := @this: org.apache.lucene.index.SortedDocValuesWriter;

        return;
    }

    static org.apache.lucene.util.packed.AppendingLongBuffer access$000(org.apache.lucene.index.SortedDocValuesWriter)
    {
        org.apache.lucene.index.SortedDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;

        r0 := @parameter0: org.apache.lucene.index.SortedDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer pending>;

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r2;
        org.apache.lucene.util.BytesRef $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SortedDocValuesWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SortedDocValuesWriter: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.util.BytesRef;

        $r2 = <org.apache.lucene.util.BytesRef: byte[] EMPTY_BYTES>;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>(byte[])>($r2);

        <org.apache.lucene.index.SortedDocValuesWriter: org.apache.lucene.util.BytesRef EMPTY> = $r1;

        return;
    }
}
