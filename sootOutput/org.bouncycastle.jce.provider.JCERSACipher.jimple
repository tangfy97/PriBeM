public class org.bouncycastle.jce.provider.JCERSACipher extends org.bouncycastle.jce.provider.WrapCipherSpi
{
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private java.security.spec.AlgorithmParameterSpec paramSpec;
    private java.security.AlgorithmParameters engineParams;
    private boolean publicKeyOnly;
    private boolean privateKeyOnly;
    private java.io.ByteArrayOutputStream bOut;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.crypto.AsymmetricBlockCipher r2;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r2 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = 0;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = 0;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut> = $r1;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r2;

        return;
    }

    public void <init>(javax.crypto.spec.OAEPParameterSpec)
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;
        javax.crypto.spec.OAEPParameterSpec r2;
        java.io.ByteArrayOutputStream $r1;
        javax.crypto.NoSuchPaddingException $r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r2 := @parameter0: javax.crypto.spec.OAEPParameterSpec;

        specialinvoke r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = 0;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = 0;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut> = $r1;

     label1:
        specialinvoke r0.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r3.<javax.crypto.NoSuchPaddingException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        return;

        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
    }

    public void <init>(boolean, boolean, org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;
        java.io.ByteArrayOutputStream $r1;
        org.bouncycastle.crypto.AsymmetricBlockCipher r2;
        boolean z0, z1;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r2 := @parameter2: org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<org.bouncycastle.jce.provider.WrapCipherSpi: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = 0;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = 0;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut> = $r1;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = z0;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = z1;

        r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r2;

        return;
    }

    private void initFromSpec(javax.crypto.spec.OAEPParameterSpec) throws javax.crypto.NoSuchPaddingException
    {
        byte[] $r10;
        org.bouncycastle.crypto.Digest $r4;
        javax.crypto.spec.OAEPParameterSpec r0;
        javax.crypto.NoSuchPaddingException $r11;
        java.security.spec.AlgorithmParameterSpec $r1;
        java.lang.String $r3, $r14, $r16;
        java.security.spec.MGF1ParameterSpec r2;
        javax.crypto.spec.PSource $r8;
        org.bouncycastle.crypto.encodings.OAEPEncoding $r6;
        org.bouncycastle.crypto.engines.RSABlindedEngine $r7;
        org.bouncycastle.jce.provider.JCERSACipher r5;
        java.lang.StringBuilder $r12, $r13, $r15;
        javax.crypto.spec.PSource$PSpecified $r9;

        r5 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: javax.crypto.spec.OAEPParameterSpec;

        $r1 = virtualinvoke r0.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r2 = (java.security.spec.MGF1ParameterSpec) $r1;

        $r3 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r4 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r3);

        if $r4 != null goto label1;

        $r11 = new javax.crypto.NoSuchPaddingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on OAEP constructor for digest algorithm: ");

        $r14 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label1:
        $r6 = new org.bouncycastle.crypto.encodings.OAEPEncoding;

        $r7 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r7.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        $r8 = virtualinvoke r0.<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>();

        $r9 = (javax.crypto.spec.PSource$PSpecified) $r8;

        $r10 = virtualinvoke $r9.<javax.crypto.spec.PSource$PSpecified: byte[] getValue()>();

        specialinvoke $r6.<org.bouncycastle.crypto.encodings.OAEPEncoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,byte[])>($r7, $r4, $r10);

        r5.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r6;

        r5.<org.bouncycastle.jce.provider.JCERSACipher: java.security.spec.AlgorithmParameterSpec paramSpec> = r0;

        return;
    }

    protected int engineGetBlockSize()
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;
        java.lang.IllegalStateException $r3;
        int $i0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSA Cipher not initialised");

        throw $r3;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    protected byte[] engineGetIV()
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        return null;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        java.security.interfaces.RSAPrivateKey r5;
        java.lang.IllegalArgumentException $r1;
        java.security.Key r0;
        org.bouncycastle.jce.provider.JCERSACipher r4;
        java.security.interfaces.RSAPublicKey r6;
        int $i0, $i1;
        java.math.BigInteger $r2, $r3;
        boolean $z0, $z1;

        r4 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: java.security.Key;

        $z0 = r0 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 == 0 goto label1;

        r5 = (java.security.interfaces.RSAPrivateKey) r0;

        $r3 = interfaceinvoke r5.<java.security.interfaces.RSAPrivateKey: java.math.BigInteger getModulus()>();

        $i1 = virtualinvoke $r3.<java.math.BigInteger: int bitLength()>();

        return $i1;

     label1:
        $z1 = r0 instanceof java.security.interfaces.RSAPublicKey;

        if $z1 == 0 goto label2;

        r6 = (java.security.interfaces.RSAPublicKey) r0;

        $r2 = interfaceinvoke r6.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        return $i0;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not an RSA key!");

        throw $r1;
    }

    protected int engineGetOutputSize(int)
    {
        org.bouncycastle.jce.provider.JCERSACipher r0;
        java.lang.IllegalStateException $r3;
        int $i0, i1;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        i1 := @parameter0: int;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSA Cipher not initialised");

        throw $r3;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        java.lang.RuntimeException $r7;
        java.security.AlgorithmParameters $r1, $r3, $r5, $r9;
        java.lang.Exception $r6;
        org.bouncycastle.jce.provider.JCERSACipher r0;
        java.security.spec.AlgorithmParameterSpec $r2, $r4;
        java.lang.String $r8;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        $r1 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label4;

        $r2 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.spec.AlgorithmParameterSpec paramSpec>;

        if $r2 == null goto label4;

     label1:
        $r3 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("OAEP", "BC");

        r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.AlgorithmParameters engineParams> = $r3;

        $r5 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.AlgorithmParameters engineParams>;

        $r4 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.spec.AlgorithmParameterSpec paramSpec>;

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r9 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.security.AlgorithmParameters engineParams>;

        return $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        org.bouncycastle.jce.provider.JCERSACipher r7;
        java.security.NoSuchAlgorithmException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, $r1, $r6;
        boolean $z0, $z1, $z2, $z3;

        r7 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z2 == 0 goto label3;

        r7.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = 1;

        r7.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = 0;

        return;

     label3:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z3 == 0 goto label4;

        r7.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly> = 0;

        r7.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly> = 1;

        return;

     label4:
        $r2 = new java.security.NoSuchAlgorithmException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.bouncycastle.jce.provider.JCERSACipher r2;
        java.lang.StringBuilder $r17, $r18, $r19;
        javax.crypto.spec.PSource$PSpecified $r6, $r8, $r11, $r14, $r24;
        org.bouncycastle.crypto.encodings.PKCS1Encoding $r27;
        javax.crypto.spec.OAEPParameterSpec $r3, $r4, $r7, $r10, $r13, $r21, $r22;
        javax.crypto.NoSuchPaddingException $r16;
        java.lang.String r0, $r1, $r20;
        java.security.spec.MGF1ParameterSpec $r5, $r9, $r12, $r15, $r23;
        org.bouncycastle.crypto.engines.RSABlindedEngine $r26, $r28, $r29;
        org.bouncycastle.crypto.encodings.ISO9796d1Encoding $r25;

        r2 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label01;

        $r29 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r29.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        r2.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r29;

        goto label16;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("PKCS1PADDING");

        if $z1 == 0 goto label02;

        $r27 = new org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r28 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r28.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        specialinvoke $r27.<org.bouncycastle.crypto.encodings.PKCS1Encoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r28);

        r2.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r27;

        goto label16;

     label02:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ISO9796-1PADDING");

        if $z2 == 0 goto label03;

        $r25 = new org.bouncycastle.crypto.encodings.ISO9796d1Encoding;

        $r26 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r26.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        specialinvoke $r25.<org.bouncycastle.crypto.encodings.ISO9796d1Encoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)>($r26);

        r2.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r25;

        goto label16;

     label03:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHMD5ANDMGF1PADDING");

        if $z3 == 0 goto label04;

        $r22 = new javax.crypto.spec.OAEPParameterSpec;

        $r23 = new java.security.spec.MGF1ParameterSpec;

        specialinvoke $r23.<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>("MD5");

        $r24 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r22.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("MD5", "MGF1", $r23, $r24);

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r22);

        goto label16;

     label04:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPPADDING");

        if $z4 == 0 goto label05;

        $r21 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r21);

        goto label16;

     label05:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA1ANDMGF1PADDING");

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-1ANDMGF1PADDING");

        if $z6 == 0 goto label07;

     label06:
        $r3 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r3);

        goto label16;

     label07:
        $z7 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA224ANDMGF1PADDING");

        if $z7 != 0 goto label08;

        $z8 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-224ANDMGF1PADDING");

        if $z8 == 0 goto label09;

     label08:
        $r4 = new javax.crypto.spec.OAEPParameterSpec;

        $r5 = new java.security.spec.MGF1ParameterSpec;

        specialinvoke $r5.<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>("SHA-224");

        $r6 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r4.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-224", "MGF1", $r5, $r6);

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r4);

        goto label16;

     label09:
        $z9 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA256ANDMGF1PADDING");

        if $z9 != 0 goto label10;

        $z10 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-256ANDMGF1PADDING");

        if $z10 == 0 goto label11;

     label10:
        $r7 = new javax.crypto.spec.OAEPParameterSpec;

        $r9 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA256>;

        $r8 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r7.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-256", "MGF1", $r9, $r8);

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r7);

        goto label16;

     label11:
        $z11 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA384ANDMGF1PADDING");

        if $z11 != 0 goto label12;

        $z12 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-384ANDMGF1PADDING");

        if $z12 == 0 goto label13;

     label12:
        $r10 = new javax.crypto.spec.OAEPParameterSpec;

        $r12 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA384>;

        $r11 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r10.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-384", "MGF1", $r12, $r11);

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r10);

        goto label16;

     label13:
        $z13 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA512ANDMGF1PADDING");

        if $z13 != 0 goto label14;

        $z14 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-512ANDMGF1PADDING");

        if $z14 == 0 goto label15;

     label14:
        $r13 = new javax.crypto.spec.OAEPParameterSpec;

        $r15 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA512>;

        $r14 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r13.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-512", "MGF1", $r15, $r14);

        specialinvoke r2.<org.bouncycastle.jce.provider.JCERSACipher: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r13);

        goto label16;

     label15:
        $r16 = new javax.crypto.NoSuchPaddingException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unavailable with RSA.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label16:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        byte[] $r31;
        java.security.SecureRandom r14, $r16;
        java.security.InvalidParameterException $r8;
        java.security.interfaces.RSAPublicKey $r50;
        java.security.interfaces.RSAPrivateKey $r4;
        java.security.InvalidKeyException $r2, $r49, $r51;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r33, $r34, $r36, $r39, $r40, $r42;
        javax.crypto.spec.PSource$PSpecified $r30;
        java.security.InvalidAlgorithmParameterException $r32, $r38, $r44, $r48;
        javax.crypto.spec.OAEPParameterSpec r18;
        java.lang.String $r13, $r19, $r21, $r25, $r35, $r37, $r41, $r43, $r45, $r47;
        java.security.spec.MGF1ParameterSpec r24;
        org.bouncycastle.crypto.encodings.OAEPEncoding $r27;
        org.bouncycastle.crypto.params.ParametersWithRandom $r15, $r17;
        java.security.spec.AlgorithmParameterSpec r0, $r20, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.bouncycastle.asn1.DERObjectIdentifier $r46;
        org.bouncycastle.crypto.CipherParameters r53;
        javax.crypto.spec.PSource $r29;
        java.security.Key r1;
        org.bouncycastle.jce.provider.JCERSACipher r3;
        org.bouncycastle.crypto.Digest $r22, $r26;
        int i0;
        java.lang.IllegalArgumentException $r52;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5, $r6, $r7;
        org.bouncycastle.crypto.engines.RSABlindedEngine $r28;

        r3 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r0 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r14 := @parameter3: java.security.SecureRandom;

        if r0 == null goto label01;

        $z8 = r0 instanceof javax.crypto.spec.OAEPParameterSpec;

        if $z8 == 0 goto label11;

     label01:
        $z0 = r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 == 0 goto label03;

        $z7 = r3.<org.bouncycastle.jce.provider.JCERSACipher: boolean privateKeyOnly>;

        if $z7 == 0 goto label02;

        $r51 = new java.security.InvalidKeyException;

        specialinvoke $r51.<java.security.InvalidKeyException: void <init>(java.lang.String)>("mode 1 requires RSAPrivateKey");

        throw $r51;

     label02:
        $r50 = (java.security.interfaces.RSAPublicKey) r1;

        r53 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey)>($r50);

        goto label06;

     label03:
        $z1 = r1 instanceof java.security.interfaces.RSAPrivateKey;

        if $z1 == 0 goto label05;

        $z2 = r3.<org.bouncycastle.jce.provider.JCERSACipher: boolean publicKeyOnly>;

        if $z2 == 0 goto label04;

        $r49 = new java.security.InvalidKeyException;

        specialinvoke $r49.<java.security.InvalidKeyException: void <init>(java.lang.String)>("mode 2 requires RSAPublicKey");

        throw $r49;

     label04:
        $r4 = (java.security.interfaces.RSAPrivateKey) r1;

        r53 = staticinvoke <org.bouncycastle.jce.provider.RSAUtil: org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r4);

        goto label06;

     label05:
        $r2 = new java.security.InvalidKeyException;

        specialinvoke $r2.<java.security.InvalidKeyException: void <init>(java.lang.String)>("unknown key type passed to RSA");

        throw $r2;

     label06:
        if r0 == null goto label12;

        r18 = (javax.crypto.spec.OAEPParameterSpec) r0;

        r3.<org.bouncycastle.jce.provider.JCERSACipher: java.security.spec.AlgorithmParameterSpec paramSpec> = r0;

        $r19 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>();

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MGF1");

        if $z4 != 0 goto label07;

        $r45 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>();

        $r46 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_mgf1>;

        $r47 = virtualinvoke $r46.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z6 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z6 != 0 goto label07;

        $r48 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r48.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown mask generation function specified");

        throw $r48;

     label07:
        $r20 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        $z5 = $r20 instanceof java.security.spec.MGF1ParameterSpec;

        if $z5 != 0 goto label08;

        $r44 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r44.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unkown MGF parameters");

        throw $r44;

     label08:
        $r21 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r22 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r21);

        if $r22 != null goto label09;

        $r38 = new java.security.InvalidAlgorithmParameterException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on digest algorithm: ");

        $r41 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r43);

        throw $r38;

     label09:
        $r23 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r24 = (java.security.spec.MGF1ParameterSpec) $r23;

        $r25 = virtualinvoke r24.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r26 = staticinvoke <org.bouncycastle.jce.provider.JCEDigestUtil: org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r25);

        if $r26 != null goto label10;

        $r32 = new java.security.InvalidAlgorithmParameterException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on MGF digest algorithm: ");

        $r35 = virtualinvoke r24.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label10:
        $r27 = new org.bouncycastle.crypto.encodings.OAEPEncoding;

        $r28 = new org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r28.<org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        $r29 = virtualinvoke r18.<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>();

        $r30 = (javax.crypto.spec.PSource$PSpecified) $r29;

        $r31 = virtualinvoke $r30.<javax.crypto.spec.PSource$PSpecified: byte[] getValue()>();

        specialinvoke $r27.<org.bouncycastle.crypto.encodings.OAEPEncoding: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])>($r28, $r22, $r26, $r31);

        r3.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r27;

        goto label12;

     label11:
        $r52 = new java.lang.IllegalArgumentException;

        specialinvoke $r52.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r52;

     label12:
        $r5 = r3.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z3 = $r5 instanceof org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z3 != 0 goto label14;

        if r14 == null goto label13;

        $r17 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        specialinvoke $r17.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r53, r14);

        r53 = $r17;

        goto label14;

     label13:
        $r15 = new org.bouncycastle.crypto.params.ParametersWithRandom;

        $r16 = new java.security.SecureRandom;

        specialinvoke $r16.<java.security.SecureRandom: void <init>()>();

        specialinvoke $r15.<org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r53, $r16);

        r53 = $r15;

     label14:
        tableswitch(i0)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label16;
            default: goto label17;
        };

     label15:
        $r7 = r3.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r53);

        goto label18;

     label16:
        $r6 = r3.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, r53);

        goto label18;

     label17:
        $r8 = new java.security.InvalidParameterException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed to RSA");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label18:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        java.security.AlgorithmParameters r0;
        java.security.InvalidAlgorithmParameterException $r5;
        java.security.Key r2;
        java.security.SecureRandom r3;
        org.bouncycastle.jce.provider.JCERSACipher r1;
        int i0;
        java.security.spec.InvalidParameterSpecException $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        java.security.spec.AlgorithmParameterSpec r11;

        r1 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        i0 := @parameter0: int;

        r2 := @parameter1: java.security.Key;

        r0 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r11 = null;

        if r0 == null goto label4;

     label1:
        r11 = virtualinvoke r0.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/OAEPParameterSpec;");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.security.InvalidAlgorithmParameterException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot recognise parameters: ");

        $r8 = virtualinvoke $r4.<java.security.spec.InvalidParameterSpecException: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r4);

        throw $r5;

     label4:
        r1.<org.bouncycastle.jce.provider.JCERSACipher: java.security.AlgorithmParameters engineParams> = r0;

        virtualinvoke r1.<org.bouncycastle.jce.provider.JCERSACipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r2, r11, r3);

        return;

        catch java.security.spec.InvalidParameterSpecException from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        java.lang.RuntimeException $r4;
        java.security.InvalidAlgorithmParameterException $r3;
        java.security.Key r1;
        java.security.SecureRandom r2;
        org.bouncycastle.jce.provider.JCERSACipher r0;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        virtualinvoke r0.<org.bouncycastle.jce.provider.JCERSACipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, null, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Eeeek! ");

        $r7 = virtualinvoke $r3.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3);

        throw $r4;

     label4:
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        byte[] r1;
        java.io.ByteArrayOutputStream $r2, $r4, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r6, $r9;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3, $r5, $r8;
        org.bouncycastle.jce.provider.JCERSACipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r3 instanceof org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i4 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        $r8 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i5 = interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i6 = $i5 + 1;

        if $i4 <= $i6 goto label2;

        $r9 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r9;

     label1:
        $r4 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: int size()>();

        $r5 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i3 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i2 <= $i3 goto label2;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r6;

     label2:
        return null;
    }

    protected int engineUpdate(byte[], int, int, byte[], int)
    {
        byte[] r1, r10;
        java.io.ByteArrayOutputStream $r2, $r4, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r6, $r9;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r3, $r5, $r8;
        org.bouncycastle.jce.provider.JCERSACipher r0;

        r0 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r10 := @parameter3: byte[];

        i7 := @parameter4: int;

        $r2 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r3 instanceof org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i4 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        $r8 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i5 = interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i6 = $i5 + 1;

        if $i4 <= $i6 goto label2;

        $r9 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r9;

     label1:
        $r4 = r0.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: int size()>();

        $r5 = r0.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i3 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i2 <= $i3 goto label2;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r6;

     label2:
        return 0;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] r0, $r6, $r9;
        java.io.ByteArrayOutputStream $r3, $r5, $r7, $r11, $r14;
        org.bouncycastle.crypto.InvalidCipherTextException $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.String $r17;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r10, $r13;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2, $r4, $r8, $r12;
        org.bouncycastle.jce.provider.JCERSACipher r1;
        javax.crypto.BadPaddingException $r16;

        r1 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: byte[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        if r0 == null goto label1;

        $r14 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r14.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r0, i6, i7);

     label1:
        $r2 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r2 instanceof org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label2;

        $r11 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i3 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: int size()>();

        $r12 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i4 = interfaceinvoke $r12.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i5 = $i4 + 1;

        if $i3 <= $i5 goto label3;

        $r13 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r13.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r13;

     label2:
        $r3 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        $r4 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i1 = interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i0 <= $i1 goto label3;

        $r10 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r10.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r10;

     label3:
        $r5 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>();

        $r8 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i2 = lengthof $r6;

        $r9 = interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r6, 0, $i2);

     label4:
        return $r9;

     label5:
        $r15 := @caughtexception;

        $r16 = new javax.crypto.BadPaddingException;

        $r17 = virtualinvoke $r15.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r16.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r17);

        throw $r16;

        catch org.bouncycastle.crypto.InvalidCipherTextException from label3 to label4 with label5;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] r0, $r6, $r9, r10;
        byte $b6;
        boolean $z0;
        org.bouncycastle.jce.provider.JCERSACipher r1;
        java.io.ByteArrayOutputStream $r3, $r5, $r7, $r12, $r15;
        org.bouncycastle.crypto.InvalidCipherTextException $r16;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.String $r18;
        java.lang.ArrayIndexOutOfBoundsException $r11, $r14;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r2, $r4, $r8, $r13;
        javax.crypto.BadPaddingException $r17;

        r1 := @this: org.bouncycastle.jce.provider.JCERSACipher;

        r0 := @parameter0: byte[];

        i11 := @parameter1: int;

        i12 := @parameter2: int;

        r10 := @parameter3: byte[];

        i5 := @parameter4: int;

        if r0 == null goto label1;

        $r15 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r15.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r0, i11, i12);

     label1:
        $r2 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r2 instanceof org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label2;

        $r12 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i8 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: int size()>();

        $r13 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i9 = interfaceinvoke $r13.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i10 = $i9 + 1;

        if $i8 <= $i10 goto label3;

        $r14 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r14.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r14;

     label2:
        $r3 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $i0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        $r4 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i1 = interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i0 <= $i1 goto label3;

        $r11 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r11.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r11;

     label3:
        $r5 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        $r6 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = r1.<org.bouncycastle.jce.provider.JCERSACipher: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void reset()>();

        $r8 = r1.<org.bouncycastle.jce.provider.JCERSACipher: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i2 = lengthof $r6;

        $r9 = interfaceinvoke $r8.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r6, 0, $i2);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r17 = new javax.crypto.BadPaddingException;

        $r18 = virtualinvoke $r16.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r17.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label6:
        i13 = 0;

     label7:
        $i3 = lengthof $r9;

        if i13 == $i3 goto label8;

        $i7 = i5 + i13;

        $b6 = $r9[i13];

        r10[$i7] = $b6;

        i13 = i13 + 1;

        goto label7;

     label8:
        $i4 = lengthof $r9;

        return $i4;

        catch org.bouncycastle.crypto.InvalidCipherTextException from label3 to label4 with label5;
    }
}
