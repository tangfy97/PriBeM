public final enum class com.spatial4j.core.shape.SpatialRelation extends java.lang.Enum
{
    public static final enum com.spatial4j.core.shape.SpatialRelation WITHIN;
    public static final enum com.spatial4j.core.shape.SpatialRelation CONTAINS;
    public static final enum com.spatial4j.core.shape.SpatialRelation DISJOINT;
    public static final enum com.spatial4j.core.shape.SpatialRelation INTERSECTS;
    private static final com.spatial4j.core.shape.SpatialRelation[] $VALUES;

    public static com.spatial4j.core.shape.SpatialRelation[] values()
    {
        java.lang.Object $r1;
        com.spatial4j.core.shape.SpatialRelation[] $r0, $r2;

        $r0 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.spatial4j.core.shape.SpatialRelation[]) $r1;

        return $r2;
    }

    public static com.spatial4j.core.shape.SpatialRelation valueOf(java.lang.String)
    {
        com.spatial4j.core.shape.SpatialRelation $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/spatial4j/core/shape/SpatialRelation;", r0);

        $r2 = (com.spatial4j.core.shape.SpatialRelation) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        com.spatial4j.core.shape.SpatialRelation r0;
        java.lang.String r1;

        r0 := @this: com.spatial4j.core.shape.SpatialRelation;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public com.spatial4j.core.shape.SpatialRelation transpose()
    {
        int[] $r1;
        int $i0, $i1;
        com.spatial4j.core.shape.SpatialRelation r0, $r2, $r3;

        r0 := @this: com.spatial4j.core.shape.SpatialRelation;

        $r1 = <com.spatial4j.core.shape.SpatialRelation$1: int[] $SwitchMap$com$spatial4j$core$shape$SpatialRelation>;

        $i0 = virtualinvoke r0.<com.spatial4j.core.shape.SpatialRelation: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        return $r3;

     label2:
        $r2 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r2;

     label3:
        return r0;
    }

    public boolean intersects()
    {
        com.spatial4j.core.shape.SpatialRelation r0, $r1;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.SpatialRelation;

        $r1 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        if r0 == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.spatial4j.core.shape.SpatialRelation inverse()
    {
        int[] $r1;
        int $i0, $i1;
        com.spatial4j.core.shape.SpatialRelation r0, $r2, $r3, $r4, $r5;

        r0 := @this: com.spatial4j.core.shape.SpatialRelation;

        $r1 = <com.spatial4j.core.shape.SpatialRelation$1: int[] $SwitchMap$com$spatial4j$core$shape$SpatialRelation>;

        $i0 = virtualinvoke r0.<com.spatial4j.core.shape.SpatialRelation: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            default: goto label4;
        };

     label1:
        $r2 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r2;

     label2:
        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        return $r4;

     label3:
        $r3 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r3;

     label4:
        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r5;
    }

    static void <clinit>()
    {
        com.spatial4j.core.shape.SpatialRelation[] $r4;
        com.spatial4j.core.shape.SpatialRelation $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;

        $r0 = new com.spatial4j.core.shape.SpatialRelation;

        specialinvoke $r0.<com.spatial4j.core.shape.SpatialRelation: void <init>(java.lang.String,int)>("WITHIN", 0);

        <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN> = $r0;

        $r1 = new com.spatial4j.core.shape.SpatialRelation;

        specialinvoke $r1.<com.spatial4j.core.shape.SpatialRelation: void <init>(java.lang.String,int)>("CONTAINS", 1);

        <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS> = $r1;

        $r2 = new com.spatial4j.core.shape.SpatialRelation;

        specialinvoke $r2.<com.spatial4j.core.shape.SpatialRelation: void <init>(java.lang.String,int)>("DISJOINT", 2);

        <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT> = $r2;

        $r3 = new com.spatial4j.core.shape.SpatialRelation;

        specialinvoke $r3.<com.spatial4j.core.shape.SpatialRelation: void <init>(java.lang.String,int)>("INTERSECTS", 3);

        <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS> = $r3;

        $r4 = newarray (com.spatial4j.core.shape.SpatialRelation)[4];

        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        $r4[0] = $r5;

        $r6 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        $r4[1] = $r6;

        $r7 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        $r4[2] = $r7;

        $r8 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        $r4[3] = $r8;

        <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation[] $VALUES> = $r4;

        return;
    }
}
