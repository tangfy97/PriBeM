public final class org.apache.cxf.jaxrs.impl.ResponseBuilderImpl extends javax.ws.rs.core.Response$ResponseBuilder implements java.lang.Cloneable
{
    private int status;
    private boolean statusSet;
    private java.lang.Object entity;
    private javax.ws.rs.core.MultivaluedMap metadata;
    private java.lang.'annotation'.Annotation[] annotations;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        specialinvoke r0.<javax.ws.rs.core.Response$ResponseBuilder: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = 200;

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata> = $r1;

        return;
    }

    private void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r1;
        javax.ws.rs.core.MultivaluedMap $r3, $r4;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0, r2;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r2 := @parameter0: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        specialinvoke r0.<javax.ws.rs.core.Response$ResponseBuilder: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = 200;

        $r1 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r1.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata> = $r1;

        $i0 = r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status>;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = $i0;

        $z0 = r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: boolean statusSet>;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: boolean statusSet> = $z0;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r3 = r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r3);

        $r5 = r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity>;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity> = $r5;

        return;
    }

    public javax.ws.rs.core.Response build()
    {
        org.apache.cxf.jaxrs.impl.MetadataMap $r3;
        java.lang.'annotation'.Annotation[] $r6;
        javax.ws.rs.core.MultivaluedMap $r4;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        int $i0;
        java.lang.Object $r1, $r5;
        org.apache.cxf.jaxrs.impl.ResponseImpl $r2;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: boolean statusSet>;

        if $z0 != 0 goto label1;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = 204;

     label1:
        $r2 = new org.apache.cxf.jaxrs.impl.ResponseImpl;

        $i0 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status>;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.ResponseImpl: void <init>(int)>($i0);

        $r3 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        specialinvoke $r3.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map,boolean,boolean)>($r4, 0, 1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.ResponseImpl: void addMetadata(javax.ws.rs.core.MultivaluedMap)>($r3);

        $r5 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity>;

        $r6 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.'annotation'.Annotation[] annotations>;

        virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setEntity(java.lang.Object,java.lang.'annotation'.Annotation[])>($r5, $r6);

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: void reset()>();

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder status(int)
    {
        int i0;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r5;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r0;

        r5 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        i0 := @parameter0: int;

        if i0 < 100 goto label1;

        if i0 <= 599 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal status value : ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        r5.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = i0;

        r5.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: boolean statusSet> = 1;

        return r5;
    }

    public javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.Object r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity> = r1;

        return r0;
    }

    public javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r1;
        javax.ws.rs.core.Response$ResponseBuilder $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String[] $r2;
        java.lang.String $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = newarray (java.lang.String)[0];

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>(r1, $r2);

     label2:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>($r4);

        return $r3;
    }

    public javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Content-Type", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder language(java.util.Locale)
    {
        java.util.Locale r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.util.Locale;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

     label2:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)>($r3);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Content-Language", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)
    {
        java.lang.Object[] $r12;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        javax.ws.rs.core.UriBuilder $r5, $r7, $r9, $r11;
        java.lang.String $r6, $r8, $r10;
        java.net.URI r13;
        boolean $z0;
        org.apache.cxf.message.Message $r1, $r4;
        org.apache.cxf.message.Exchange $r3;
        org.apache.cxf.jaxrs.impl.UriInfoImpl $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r14;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r13 := @parameter0: java.net.URI;

        $z0 = virtualinvoke r13.<java.net.URI: boolean isAbsolute()>();

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        if $r1 == null goto label1;

        $r2 = new org.apache.cxf.jaxrs.impl.UriInfoImpl;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.UriInfoImpl: void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)>($r4, null);

        $r5 = interfaceinvoke $r2.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.UriBuilder getBaseUriBuilder()>();

        $r6 = virtualinvoke r13.<java.net.URI: java.lang.String getRawPath()>();

        $r7 = virtualinvoke $r5.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r6);

        $r8 = virtualinvoke r13.<java.net.URI: java.lang.String getRawQuery()>();

        $r9 = virtualinvoke $r7.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)>($r8);

        $r10 = virtualinvoke r13.<java.net.URI: java.lang.String getRawFragment()>();

        $r11 = virtualinvoke $r9.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder fragment(java.lang.String)>($r10);

        $r12 = newarray (java.lang.Object)[0];

        r13 = virtualinvoke $r11.<javax.ws.rs.core.UriBuilder: java.net.URI buildFromEncoded(java.lang.Object[])>($r12);

     label1:
        $r14 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Location", r13);

        return $r14;
    }

    public javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.net.URI r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.net.URI;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Content-Location", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r2;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String $r3;
        javax.ws.rs.core.EntityTag r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.EntityTag;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<javax.ws.rs.core.EntityTag: java.lang.String toString()>();

     label2:
        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("ETag", $r3);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r2;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String r1;
        javax.ws.rs.core.EntityTag $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <javax.ws.rs.core.EntityTag: javax.ws.rs.core.EntityTag valueOf(java.lang.String)>(r1);

     label2:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)>($r3);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)
    {
        java.util.Date r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.String toHttpDate(java.util.Date)>(r1);

     label2:
        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Last-Modified", $r3);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        javax.ws.rs.core.CacheControl r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.CacheControl;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Cache-Control", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder expires(java.util.Date)
    {
        java.util.Date r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.String toHttpDate(java.util.Date)>(r1);

     label2:
        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Expires", $r3);

        return $r2;
    }

    public transient javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[])
    {
        java.lang.Object[] $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        javax.ws.rs.core.NewCookie[] r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.NewCookie[];

        $r2 = (java.lang.Object[]) r1;

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Set-Cookie", $r2);

        return $r3;
    }

    public javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r2;
        java.util.Date $r6;
        javax.ws.rs.core.Response$ResponseBuilder $r4, $r5;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        java.lang.Object r3, $r7;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: boolean isDateRelatedHeader(java.lang.String)>(r0);

        if $z0 == 0 goto label3;

        $z1 = r3 instanceof java.util.Date;

        if $z1 == 0 goto label1;

        $r6 = (java.util.Date) r3;

        $r7 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.String toHttpDate(java.util.Date)>($r6);

        goto label2;

     label1:
        $r7 = r3;

     label2:
        $r5 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>(r0, $r7);

        return $r5;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>(r0, $r2);

        return $r4;
    }

    public javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)
    {
        javax.ws.rs.core.MediaType $r2;
        java.util.Locale $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String $r4;
        javax.ws.rs.core.Variant r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.Variant;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<javax.ws.rs.core.Variant: javax.ws.rs.core.MediaType getMediaType()>();

     label2:
        virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)>($r2);

        if r1 != null goto label3;

        $r3 = null;

        goto label4;

     label3:
        $r3 = virtualinvoke r1.<javax.ws.rs.core.Variant: java.util.Locale getLanguage()>();

     label4:
        virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder language(java.util.Locale)>($r3);

        if r1 != null goto label5;

        $r4 = null;

        goto label6;

     label5:
        $r4 = virtualinvoke r1.<javax.ws.rs.core.Variant: java.lang.String getEncoding()>();

     label6:
        specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Content-Encoding", $r4);

        return r0;
    }

    public javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)
    {
        java.lang.Object[] $r9, $r10, $r11;
        java.lang.String[] $r3;
        javax.ws.rs.core.MediaType $r6;
        java.util.Locale $r7;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r2;
        java.lang.String $r8, r13, r14, r15;
        boolean $z0;
        java.util.Iterator $r1;
        javax.ws.rs.core.MultivaluedMap $r12;
        java.util.List r0;
        java.lang.Object $r4;
        javax.ws.rs.core.Variant r5;

        r2 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r12 = r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>("Vary");

        return r2;

     label1:
        r13 = null;

        r14 = null;

        r15 = null;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.ws.rs.core.Variant) $r4;

        $r6 = virtualinvoke r5.<javax.ws.rs.core.Variant: javax.ws.rs.core.MediaType getMediaType()>();

        if $r6 == null goto label3;

        r13 = "Accept";

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r6;

        specialinvoke r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Accept", $r11);

     label3:
        $r7 = virtualinvoke r5.<javax.ws.rs.core.Variant: java.util.Locale getLanguage()>();

        if $r7 == null goto label4;

        r14 = "Accept-Language";

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r7;

        specialinvoke r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Accept-Language", $r10);

     label4:
        $r8 = virtualinvoke r5.<javax.ws.rs.core.Variant: java.lang.String getEncoding()>();

        if $r8 == null goto label5;

        r15 = "Accept-Encoding";

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r8;

        specialinvoke r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Accept-Encoding", $r9);

     label5:
        goto label2;

     label6:
        $r3 = newarray (java.lang.String)[3];

        $r3[0] = r13;

        $r3[1] = r14;

        $r3[2] = r15;

        specialinvoke r2.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: void handleVaryValue(java.lang.String[])>($r3);

        return r2;
    }

    private transient void handleVaryValue(java.lang.String[])
    {
        java.lang.Object[] $r6;
        java.lang.String[] r4;
        javax.ws.rs.core.MultivaluedMap $r1, $r7;
        java.util.List r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.String r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r4 := @parameter0: java.lang.String[];

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>("Vary");

        r3 = (java.util.List) $r2;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r5 = r4[i1];

        if r5 != null goto label2;

        $r7 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(null);

        if r3 == null goto label3;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(null);

        goto label3;

     label2:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r5;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Vary", $r6);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public javax.ws.rs.core.Response$ResponseBuilder clone()
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl $r0, r1;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)>(r1);

        return $r0;
    }

    private void reset()
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        javax.ws.rs.core.MultivaluedMap $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity> = null;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.'annotation'.Annotation[] annotations> = null;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: int status> = 200;

        return;
    }

    private java.lang.String toHttpDate(java.util.Date)
    {
        java.util.Date r1;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r3;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r2;

        r3 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.text.SimpleDateFormat getHttpDateFormat()>();

        $r2 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1);

        return $r2;
    }

    private javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String, java.lang.Object)
    {
        javax.ws.rs.core.MultivaluedMap $r3, $r5;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        java.lang.Object r0;
        java.lang.String r2, $r4;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r5 = r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>(r2, $r4);

     label2:
        return r1;
    }

    private transient javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.ws.rs.core.MultivaluedMap $r5, $r7;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        int $i0, i1, i2;
        java.lang.Object $r3, r4;
        java.lang.String r2, $r6;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object[];

        if r0 == null goto label4;

        $i0 = lengthof r0;

        if $i0 < 1 goto label4;

        $r3 = r0[0];

        if $r3 == null goto label4;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r4 = r0[i2];

        $z0 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: boolean valueExists(java.lang.String,java.lang.Object)>(r2, r4);

        if $z0 != 0 goto label2;

        $r5 = r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: void add(java.lang.Object,java.lang.Object)>(r2, $r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        goto label5;

     label4:
        $r7 = r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(r2);

     label5:
        return r1;
    }

    private boolean valueExists(java.lang.String, java.lang.Object)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        java.util.List r4;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.Object $r3, r5;
        java.lang.String r1, $r6;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $z0 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>($r6);

     label2:
        return $z0;
    }

    public transient javax.ws.rs.core.Response$ResponseBuilder allow(java.lang.String[])
    {
        java.lang.Object[] $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = (java.lang.Object[]) r1;

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Allow", $r2);

        return $r3;
    }

    public javax.ws.rs.core.Response$ResponseBuilder allow(java.util.Set)
    {
        java.lang.Object[] $r3;
        javax.ws.rs.core.Response$ResponseBuilder $r5;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        int $i0;
        java.util.Set r1;
        java.lang.String[] $r2, $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.util.Set;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r3 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder allow(java.lang.String[])>($r4);

        return $r5;
    }

    public javax.ws.rs.core.Response$ResponseBuilder encoding(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.String r1;
        javax.ws.rs.core.Response$ResponseBuilder $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)>("Content-Encoding", r1);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object, java.lang.'annotation'.Annotation[])
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        java.lang.Object r2;
        java.lang.'annotation'.Annotation[] r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.'annotation'.Annotation[];

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.'annotation'.Annotation[] annotations> = r1;

        r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: java.lang.Object entity> = r2;

        return r0;
    }

    public javax.ws.rs.core.Response$ResponseBuilder link(java.net.URI, java.lang.String)
    {
        javax.ws.rs.core.Link[] $r2;
        javax.ws.rs.core.Link$Builder $r0, $r4, $r6;
        javax.ws.rs.core.Response$ResponseBuilder $r8;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        java.net.URI r3;
        java.lang.String r5;
        javax.ws.rs.core.Link $r7;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r3 := @parameter0: java.net.URI;

        r5 := @parameter1: java.lang.String;

        $r0 = new javax.ws.rs.core.Link$Builder;

        specialinvoke $r0.<javax.ws.rs.core.Link$Builder: void <init>()>();

        $r2 = newarray (javax.ws.rs.core.Link)[1];

        $r4 = virtualinvoke $r0.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link$Builder uri(java.net.URI)>(r3);

        $r6 = virtualinvoke $r4.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link$Builder rel(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link build()>();

        $r2[0] = $r7;

        $r8 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder links(javax.ws.rs.core.Link[])>($r2);

        return $r8;
    }

    public javax.ws.rs.core.Response$ResponseBuilder link(java.lang.String, java.lang.String)
    {
        javax.ws.rs.core.Link[] $r2;
        javax.ws.rs.core.Link$Builder $r0, $r4, $r6;
        javax.ws.rs.core.Response$ResponseBuilder $r8;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        java.lang.String r3, r5;
        javax.ws.rs.core.Link $r7;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new javax.ws.rs.core.Link$Builder;

        specialinvoke $r0.<javax.ws.rs.core.Link$Builder: void <init>()>();

        $r2 = newarray (javax.ws.rs.core.Link)[1];

        $r4 = virtualinvoke $r0.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link$Builder uri(java.lang.String)>(r3);

        $r6 = virtualinvoke $r4.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link$Builder rel(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<javax.ws.rs.core.Link$Builder: javax.ws.rs.core.Link build()>();

        $r2[0] = $r7;

        $r8 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder links(javax.ws.rs.core.Link[])>($r2);

        return $r8;
    }

    public transient javax.ws.rs.core.Response$ResponseBuilder links(javax.ws.rs.core.Link[])
    {
        javax.ws.rs.core.Link[] r1;
        java.lang.Object[] $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.Link[];

        $r2 = (java.lang.Object[]) r1;

        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])>("Link", $r2);

        return $r3;
    }

    public javax.ws.rs.core.Response$ResponseBuilder replaceAll(javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap $r1, r2, $r3;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r2 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r1.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        if r2 == null goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.MultivaluedMap metadata>;

        interfaceinvoke $r3.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>(r2);

     label1:
        return r0;
    }

    public transient javax.ws.rs.core.Response$ResponseBuilder variants(javax.ws.rs.core.Variant[])
    {
        java.util.List $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r3, $r4;
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r1;
        javax.ws.rs.core.Variant[] r0;

        r1 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        r0 := @parameter0: javax.ws.rs.core.Variant[];

        if r0 != null goto label1;

        $r4 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)>(null);

        return $r4;

     label1:
        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r3 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)>($r2);

        return $r3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.cxf.jaxrs.impl.ResponseBuilderImpl r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.ResponseBuilderImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.ResponseBuilderImpl: javax.ws.rs.core.Response$ResponseBuilder clone()>();

        return $r1;
    }
}
