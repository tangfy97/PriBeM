class org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction extends org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit$InsertBreakAction
{
    private static final java.util.regex.Pattern p;

    private void <init>()
    {
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit$InsertBreakAction: void <init>()>();

        return;
    }

    public void actionPerformedImpl(java.awt.event.ActionEvent, org.fife.ui.rtextarea.RTextArea)
    {
        org.fife.ui.rtextarea.RTextArea r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r5;
        javax.swing.LookAndFeel $r1;
        java.awt.event.ActionEvent r3;
        javax.swing.text.JTextComponent $r4;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r7;
        int $i0, $i1;
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction r2;
        javax.swing.text.Document $r6;
        boolean $z0, $z1;

        r2 := @this: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction;

        r3 := @parameter0: java.awt.event.ActionEvent;

        r0 := @parameter1: org.fife.ui.rtextarea.RTextArea;

        $z0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEditable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        $r1 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r1.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

        return;

     label2:
        $r4 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: javax.swing.text.JTextComponent getTextComponent(java.awt.event.ActionEvent)>(r3);

        r5 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r4;

        $r6 = virtualinvoke r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        r7 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r6;

        $i0 = virtualinvoke r0.<org.fife.ui.rtextarea.RTextArea: int getCaretLineNumber()>();

        $i1 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: int getLastTokenTypeOnLine(int)>($i0);

        if $i1 == 3 goto label3;

        if $i1 != 2 goto label4;

     label3:
        specialinvoke r2.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: void insertBreakInMLC(java.awt.event.ActionEvent,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(r3, r5, $i0);

        goto label5;

     label4:
        virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: void handleInsertBreak(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,boolean)>(r5, 1);

     label5:
        return;
    }

    private boolean appearsNested(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, int, int)
    {
        int i0, $i1, $i3, i5, i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14;
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction r6;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        char $c2, $c4;
        char[] $r3, $r4;
        org.fife.ui.rsyntaxtextarea.Token $r1, $r2, $r5, r7;

        r6 := @this: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        i6 := @parameter1: int;

        i5 := @parameter2: int;

        i0 = i6;

     label1:
        $i7 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        if i6 >= $i7 goto label8;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i6);

        r7 = $r1;

        $i1 = i6;

        i6 = i6 + 1;

        if $i1 != i0 goto label3;

        $r5 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: org.fife.ui.rsyntaxtextarea.Token getTokenAtOffset(org.fife.ui.rsyntaxtextarea.Token,int)>($r1, i5);

        r7 = $r5;

        if $r5 != null goto label2;

        goto label1;

     label2:
        i8 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.Token: int documentToToken(int)>(i5);

        goto label4;

     label3:
        i8 = $r1.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

     label4:
        $i9 = r7.<org.fife.ui.rsyntaxtextarea.Token: int textOffset>;

        $i10 = r7.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i11 = $i9 + $i10;

        $i12 = $i11 - 1;

        if i8 >= $i12 goto label6;

        $r3 = r7.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $c2 = $r3[i8];

        $i13 = (int) $c2;

        if $i13 != 47 goto label5;

        $r4 = r7.<org.fife.ui.rsyntaxtextarea.Token: char[] text>;

        $i3 = i8 + 1;

        $c4 = $r4[$i3];

        $i14 = (int) $c4;

        if $i14 != 42 goto label5;

        return 1;

     label5:
        i8 = i8 + 1;

        goto label4;

     label6:
        $r2 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        if $r2 == null goto label7;

        return 0;

     label7:
        goto label1;

     label8:
        return 1;
    }

    private void insertBreakInMLC(java.awt.event.ActionEvent, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, int)
    {
        java.util.regex.Matcher $r3;
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction r4;
        boolean $z0, $z1, $z2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r0;
        javax.swing.text.BadLocationException $r22;
        java.util.regex.Pattern $r2;
        java.lang.StringBuffer $r8, $r9, $r11, $r14, $r15, $r18, $r19, $r20, $r26, $r27, $r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i17;
        java.lang.String $r1, $r5, $r6, $r10, $r12, $r16, $r21, $r25;
        char $c13, $c15;
        javax.swing.LookAndFeel $r23;
        java.awt.event.ActionEvent r24;

        r4 := @this: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction;

        r24 := @parameter0: java.awt.event.ActionEvent;

        r0 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        i0 := @parameter2: int;

     label01:
        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineStartOffset(int)>(i0);

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineEndOffset(int)>(i0);

        $i3 = $i2 - $i1;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.lang.String getText(int,int)>($i1, $i3);

        $r2 = <org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: java.util.regex.Pattern p>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        $r23 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        virtualinvoke $r23.<javax.swing.LookAndFeel: void provideErrorFeedback(java.awt.Component)>(r0);

        virtualinvoke $r22.<javax.swing.text.BadLocationException: void printStackTrace()>();

        return;

     label04:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z0 == 0 goto label12;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getCaretPosition()>();

        if $i4 < $i1 goto label06;

        $i9 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i10 = $i1 + $i9;

        $i11 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i12 = $i10 + $i11;

        if $i4 >= $i12 goto label06;

        $c13 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i16 = (int) $c13;

        if $i16 != 47 goto label05;

        virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: void handleInsertBreak(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,boolean)>(r0, 1);

        return;

     label05:
        $i14 = $i2 - 1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setCaretPosition(int)>($i14);

     label06:
        $c15 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i17 = (int) $c15;

        if $i17 != 47 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i6 = $i1 + $i5;

        $i7 = $i6 + 2;

        $z1 = specialinvoke r4.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: boolean appearsNested(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int,int)>(r0, i0, $i7);

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        if $z2 == 0 goto label09;

        $r25 = " * ";

        goto label10;

     label09:
        $r25 = "*";

     label10:
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r10 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void replaceSelection(java.lang.String)>($r16);

        if $z1 == 0 goto label11;

        $i8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getCaretPosition()>();

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" */");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void insert(java.lang.String,int)>($r21, $i8);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setCaretPosition(int)>($i8);

     label11:
        goto label13;

     label12:
        virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: void handleInsertBreak(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,boolean)>(r0, 1);

     label13:
        return;

        catch javax.swing.text.BadLocationException from label01 to label02 with label03;
    }

    void <init>(org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$1)
    {
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction r0;
        org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$1 r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$1;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([ \\t]*)(/?[\\*]+)([ \\t]*)");

        <org.fife.ui.rsyntaxtextarea.AbstractJFlexCTokenMaker$InsertBreakAction: java.util.regex.Pattern p> = $r0;

        return;
    }
}
